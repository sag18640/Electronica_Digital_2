

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jan 24 21:32:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	idataBANK0
   208  0708                     __pidataBANK0:
   209                           
   210                           ;initializer for _count2
   211  0708  3401               	retlw	1
   212  0709  3400               	retlw	0
   213  070A  3402               	retlw	2
   214  070B  3400               	retlw	0
   215  070C  3404               	retlw	4
   216  070D  3400               	retlw	0
   217  070E  3408               	retlw	8
   218  070F  3400               	retlw	0
   219  0710  3410               	retlw	16
   220  0711  3400               	retlw	0
   221  0712  3420               	retlw	32
   222  0713  3400               	retlw	0
   223  0714  3440               	retlw	64
   224  0715  3400               	retlw	0
   225  0716  3480               	retlw	128
   226  0717  3400               	retlw	0
   227                           
   228                           ;initializer for _count1
   229  0718  3401               	retlw	1
   230  0719  3400               	retlw	0
   231  071A  3402               	retlw	2
   232  071B  3400               	retlw	0
   233  071C  3404               	retlw	4
   234  071D  3400               	retlw	0
   235  071E  3408               	retlw	8
   236  071F  3400               	retlw	0
   237  0720  3410               	retlw	16
   238  0721  3400               	retlw	0
   239  0722  3420               	retlw	32
   240  0723  3400               	retlw	0
   241  0724  3440               	retlw	64
   242  0725  3400               	retlw	0
   243  0726  3480               	retlw	128
   244  0727  3400               	retlw	0
   245  0006                     _PORTBbits	set	6
   246  0009                     _PORTE	set	9
   247  0006                     _PORTB	set	6
   248  0005                     _PORTA	set	5
   249  0007                     _PORTC	set	7
   250  0008                     _PORTD	set	8
   251  0009                     _PORTEbits	set	9
   252  0005                     _PORTAbits	set	5
   253  0088                     _TRISD	set	136
   254  0089                     _TRISE	set	137
   255  0087                     _TRISC	set	135
   256  0085                     _TRISA	set	133
   257  0086                     _TRISB	set	134
   258  0189                     _ANSELH	set	393
   259  0188                     _ANSEL	set	392
   260                           
   261                           	psect	cinit
   262  07EB                     start_initialization:	
   263                           ; #config settings
   264                           
   265  07EB                     __initialization:
   266                           
   267                           ; Initialize objects allocated to BANK0
   268  07EB  1383               	bcf	3,7	;select IRP bank0
   269  07EC  3040               	movlw	low (__pdataBANK0+32)
   270  07ED  00FD               	movwf	btemp+-1
   271  07EE  3007               	movlw	high __pidataBANK0
   272  07EF  00FE               	movwf	btemp
   273  07F0  3008               	movlw	low __pidataBANK0
   274  07F1  00FF               	movwf	btemp+1
   275  07F2  3020               	movlw	low __pdataBANK0
   276  07F3  0084               	movwf	4
   277  07F4  120A  118A  26E3  120A  118A  	fcall	init_ram0
   278                           
   279                           ; Clear objects allocated to COMMON
   280  07F9  01F6               	clrf	__pbssCOMMON& (0+127)
   281  07FA  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   282  07FB  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   283  07FC                     end_of_initialization:	
   284                           ;End of C runtime variable initialization code
   285                           
   286  07FC                     __end_of__initialization:
   287  07FC  0183               	clrf	3
   288  07FD  120A  118A  2F5E   	ljmp	_main	;jump to C main() function
   289                           
   290                           	psect	bssCOMMON
   291  0076                     __pbssCOMMON:
   292  0076                     _J2:
   293  0076                     	ds	1
   294  0077                     _J1:
   295  0077                     	ds	1
   296  0078                     _flag:
   297  0078                     	ds	1
   298                           
   299                           	psect	dataBANK0
   300  0020                     __pdataBANK0:
   301  0020                     _count2:
   302  0020                     	ds	16
   303  0030                     _count1:
   304  0030                     	ds	16
   305                           
   306                           	psect	inittext
   307  06DF                     init_fetch0:	
   308                           ;	Called with low address in FSR and high address in W
   309                           
   310  06DF  087E               	movf	btemp,w
   311  06E0  008A               	movwf	10
   312  06E1  087F               	movf	btemp+1,w
   313  06E2  0082               	movwf	2
   314  06E3                     init_ram0:	
   315                           ;Called with:
   316                           ;	high address of idata address in btemp 
   317                           ;	low address of idata address in btemp+1 
   318                           ;	low address of data in FSR
   319                           ;	high address + 1 of data in btemp-1
   320                           
   321  06E3  120A  118A  26DF  120A  118A  	fcall	init_fetch0
   322  06E8  0080               	movwf	0
   323  06E9  0A84               	incf	4,f
   324  06EA  0804               	movf	4,w
   325  06EB  067D               	xorwf	btemp+-1,w
   326  06EC  1903               	btfsc	3,2
   327  06ED  3400               	retlw	0
   328  06EE  0AFF               	incf	btemp+1,f
   329  06EF  1903               	btfsc	3,2
   330  06F0  0AFE               	incf	btemp,f
   331  06F1  2EE3               	goto	init_ram0
   332                           
   333                           	psect	cstackCOMMON
   334  0070                     __pcstackCOMMON:
   335  0070                     ?_setup:
   336  0070                     ??_setup:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_semaforo:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ??_semaforo:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_main:	
   346                           ; 1 bytes @ 0x0
   347                           
   348                           
   349                           ; 1 bytes @ 0x0
   350  0070                     	ds	3
   351  0073                     ??_main:
   352                           
   353                           ; 1 bytes @ 0x3
   354  0073                     	ds	3
   355                           
   356                           	psect	maintext
   357  075E                     __pmaintext:	
   358 ;;
   359 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   360 ;;
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 57 in file "newmain.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : B00/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0
   379 ;;      Temps:          3       0       0       0       0
   380 ;;      Totals:         3       0       0       0       0
   381 ;;Total ram usage:        3 bytes
   382 ;; Hardware stack levels required when called:    1
   383 ;; This function calls:
   384 ;;		_semaforo
   385 ;;		_setup
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           
   392                           ;psect for function _main
   393  075E                     _main:
   394  075E                     l51:	
   395                           ;incstack = 0
   396                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   397                           ;newmain.c: 58:     while (1) {
   398                           
   399  075E                     l704:
   400                           
   401                           ;newmain.c: 59:         setup();
   402  075E  120A  118A  26F2  120A  118A  	fcall	_setup
   403  0763                     l706:
   404                           
   405                           ;newmain.c: 60:         if (PORTAbits.RA0 == 0) {
   406  0763  1283               	bcf	3,5	;RP0=0, select bank0
   407  0764  1303               	bcf	3,6	;RP1=0, select bank0
   408  0765  1805               	btfsc	5,0	;volatile
   409  0766  2F68               	goto	u11
   410  0767  2F69               	goto	u10
   411  0768                     u11:
   412  0768  2F5E               	goto	l51
   413  0769                     u10:
   414  0769                     l708:
   415                           
   416                           ;newmain.c: 61:             _delay((unsigned long)((40)*(8000000/4000.0)));
   417  0769  3068               	movlw	104
   418  076A  00F4               	movwf	??_main+1
   419  076B  30E4               	movlw	228
   420  076C  00F3               	movwf	??_main
   421  076D                     u107:
   422  076D  0BF3               	decfsz	??_main,f
   423  076E  2F6D               	goto	u107
   424  076F  0BF4               	decfsz	??_main+1,f
   425  0770  2F6D               	goto	u107
   426  0771  0000               	nop
   427  0772                     l710:
   428                           
   429                           ;newmain.c: 62:             if (PORTAbits.RA0 == 1) {
   430  0772  1283               	bcf	3,5	;RP0=0, select bank0
   431  0773  1303               	bcf	3,6	;RP1=0, select bank0
   432  0774  1C05               	btfss	5,0	;volatile
   433  0775  2F77               	goto	u21
   434  0776  2F78               	goto	u20
   435  0777                     u21:
   436  0777  2F5E               	goto	l51
   437  0778                     u20:
   438  0778                     l712:
   439                           
   440                           ;newmain.c: 63:                 semaforo();
   441  0778  120A  118A  2728  120A  118A  	fcall	_semaforo
   442  077D                     l714:
   443                           
   444                           ;newmain.c: 64:                 flag = 1;
   445  077D  01F8               	clrf	_flag
   446  077E  0AF8               	incf	_flag,f
   447                           
   448                           ;newmain.c: 65:                 while (flag == 1) {
   449  077F  2FE2               	goto	l744
   450  0780                     l55:
   451                           
   452                           ;newmain.c: 66:                     if (PORTAbits.RA1 == 0) {
   453  0780  1283               	bcf	3,5	;RP0=0, select bank0
   454  0781  1303               	bcf	3,6	;RP1=0, select bank0
   455  0782  1885               	btfsc	5,1	;volatile
   456  0783  2F85               	goto	u31
   457  0784  2F86               	goto	u30
   458  0785                     u31:
   459  0785  2FBB               	goto	l56
   460  0786                     u30:
   461  0786                     l716:
   462                           
   463                           ;newmain.c: 67:                         _delay((unsigned long)((40)*(8000000/4000.0)));
   464  0786  3068               	movlw	104
   465  0787  00F4               	movwf	??_main+1
   466  0788  30E4               	movlw	228
   467  0789  00F3               	movwf	??_main
   468  078A                     u117:
   469  078A  0BF3               	decfsz	??_main,f
   470  078B  2F8A               	goto	u117
   471  078C  0BF4               	decfsz	??_main+1,f
   472  078D  2F8A               	goto	u117
   473  078E  0000               	nop
   474  078F                     l718:
   475                           
   476                           ;newmain.c: 68:                         if (PORTAbits.RA1 == 1) {
   477  078F  1283               	bcf	3,5	;RP0=0, select bank0
   478  0790  1303               	bcf	3,6	;RP1=0, select bank0
   479  0791  1C85               	btfss	5,1	;volatile
   480  0792  2F94               	goto	u41
   481  0793  2F95               	goto	u40
   482  0794                     u41:
   483  0794  2FE2               	goto	l744
   484  0795                     u40:
   485  0795                     l720:
   486                           
   487                           ;newmain.c: 69:                             if (J1 == 8) {
   488  0795  3008               	movlw	8
   489  0796  0677               	xorwf	_J1,w
   490  0797  1D03               	btfss	3,2
   491  0798  2F9A               	goto	u51
   492  0799  2F9B               	goto	u50
   493  079A                     u51:
   494  079A  2FAE               	goto	l726
   495  079B                     u50:
   496  079B                     l722:
   497                           
   498                           ;newmain.c: 70:                                 PORTEbits.RE0 = 1;
   499  079B  1409               	bsf	9,0	;volatile
   500  079C                     l724:
   501                           
   502                           ;newmain.c: 71:                                 _delay((unsigned long)((1000)*(8000000/4
      +                          000.0)));
   503  079C  300B               	movlw	11
   504  079D  00F5               	movwf	??_main+2
   505  079E  3026               	movlw	38
   506  079F  00F4               	movwf	??_main+1
   507  07A0  305D               	movlw	93
   508  07A1  00F3               	movwf	??_main
   509  07A2                     u127:
   510  07A2  0BF3               	decfsz	??_main,f
   511  07A3  2FA2               	goto	u127
   512  07A4  0BF4               	decfsz	??_main+1,f
   513  07A5  2FA2               	goto	u127
   514  07A6  0BF5               	decfsz	??_main+2,f
   515  07A7  2FA2               	goto	u127
   516  07A8  2FA9               	nop2
   517                           
   518                           ;newmain.c: 72:                                 flag = 2;
   519  07A9  3002               	movlw	2
   520  07AA  00F3               	movwf	??_main
   521  07AB  0873               	movf	??_main,w
   522  07AC  00F8               	movwf	_flag
   523                           
   524                           ;newmain.c: 73:                             }
   525  07AD  2FE2               	goto	l744
   526  07AE                     l726:
   527                           
   528                           ;newmain.c: 75:                             PORTD = count1[J1];
   529  07AE  0877               	movf	_J1,w
   530  07AF  00F3               	movwf	??_main
   531  07B0  0773               	addwf	??_main,w
   532  07B1  3E30               	addlw	(low (_count1| 0))& (0+255)
   533  07B2  0084               	movwf	4
   534  07B3  1383               	bcf	3,7	;select IRP bank0
   535  07B4  0800               	movf	0,w
   536  07B5  0088               	movwf	8	;volatile
   537  07B6                     l728:
   538                           
   539                           ;newmain.c: 76:                             J1++;}
   540  07B6  3001               	movlw	1
   541  07B7  00F3               	movwf	??_main
   542  07B8  0873               	movf	??_main,w
   543  07B9  07F7               	addwf	_J1,f
   544  07BA  2FE2               	goto	l744
   545  07BB                     l56:	
   546                           ;newmain.c: 79:                     else if (PORTAbits.RA2 == 0) {
   547                           
   548  07BB  1905               	btfsc	5,2	;volatile
   549  07BC  2FBE               	goto	u61
   550  07BD  2FBF               	goto	u60
   551  07BE                     u61:
   552  07BE  2FE2               	goto	l744
   553  07BF                     u60:
   554  07BF                     l730:
   555                           
   556                           ;newmain.c: 80:                         _delay((unsigned long)((40)*(8000000/4000.0)));
   557  07BF  3068               	movlw	104
   558  07C0  00F4               	movwf	??_main+1
   559  07C1  30E4               	movlw	228
   560  07C2  00F3               	movwf	??_main
   561  07C3                     u137:
   562  07C3  0BF3               	decfsz	??_main,f
   563  07C4  2FC3               	goto	u137
   564  07C5  0BF4               	decfsz	??_main+1,f
   565  07C6  2FC3               	goto	u137
   566  07C7  0000               	nop
   567  07C8                     l732:
   568                           
   569                           ;newmain.c: 81:                         if (PORTAbits.RA2 == 1) {
   570  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   571  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   572  07CA  1D05               	btfss	5,2	;volatile
   573  07CB  2FCD               	goto	u71
   574  07CC  2FCE               	goto	u70
   575  07CD                     u71:
   576  07CD  2FE2               	goto	l744
   577  07CE                     u70:
   578  07CE                     l734:
   579                           
   580                           ;newmain.c: 82:                             if (J2 == 8) {
   581  07CE  3008               	movlw	8
   582  07CF  0676               	xorwf	_J2,w
   583  07D0  1D03               	btfss	3,2
   584  07D1  2FD3               	goto	u81
   585  07D2  2FD4               	goto	u80
   586  07D3                     u81:
   587  07D3  2FD6               	goto	l740
   588  07D4                     u80:
   589  07D4                     l736:
   590                           
   591                           ;newmain.c: 83:                                 PORTEbits.RE1 = 1;
   592  07D4  1489               	bsf	9,1	;volatile
   593  07D5  2F9C               	goto	l724
   594  07D6                     l740:
   595                           
   596                           ;newmain.c: 87:                             PORTC = count2[J2];
   597  07D6  0876               	movf	_J2,w
   598  07D7  00F3               	movwf	??_main
   599  07D8  0773               	addwf	??_main,w
   600  07D9  3E20               	addlw	(low (_count2| 0))& (0+255)
   601  07DA  0084               	movwf	4
   602  07DB  1383               	bcf	3,7	;select IRP bank0
   603  07DC  0800               	movf	0,w
   604  07DD  0087               	movwf	7	;volatile
   605  07DE                     l742:
   606                           
   607                           ;newmain.c: 88:                             J2++;}
   608  07DE  3001               	movlw	1
   609  07DF  00F3               	movwf	??_main
   610  07E0  0873               	movf	??_main,w
   611  07E1  07F6               	addwf	_J2,f
   612  07E2                     l744:
   613                           
   614                           ;newmain.c: 65:                 while (flag == 1) {
   615  07E2  0378               	decf	_flag,w
   616  07E3  1903               	btfsc	3,2
   617  07E4  2FE6               	goto	u91
   618  07E5  2FE7               	goto	u90
   619  07E6                     u91:
   620  07E6  2F80               	goto	l55
   621  07E7                     u90:
   622  07E7  2F5E               	goto	l51
   623  07E8  120A  118A  2800   	ljmp	start
   624  07EB                     __end_of_main:
   625                           
   626                           	psect	text1
   627  06F2                     __ptext1:	
   628 ;; *************** function _setup *****************
   629 ;; Defined at:
   630 ;;		line 103 in file "newmain.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _setup
   659  06F2                     _setup:
   660  06F2                     l666:	
   661                           ;incstack = 0
   662                           ; Regs used in _setup: [wreg+status,2]
   663                           
   664                           
   665                           ;newmain.c: 104:     ANSEL = 0b00000000;
   666  06F2  1683               	bsf	3,5	;RP0=1, select bank3
   667  06F3  1703               	bsf	3,6	;RP1=1, select bank3
   668  06F4  0188               	clrf	8	;volatile
   669                           
   670                           ;newmain.c: 105:     ANSELH = 0b00000000;
   671  06F5  0189               	clrf	9	;volatile
   672                           
   673                           ;newmain.c: 106:     TRISB = 0b00000000;
   674  06F6  1683               	bsf	3,5	;RP0=1, select bank1
   675  06F7  1303               	bcf	3,6	;RP1=0, select bank1
   676  06F8  0186               	clrf	6	;volatile
   677  06F9                     l668:
   678                           
   679                           ;newmain.c: 107:     TRISA = 0b11111111;
   680  06F9  30FF               	movlw	255
   681  06FA  0085               	movwf	5	;volatile
   682  06FB                     l670:
   683                           
   684                           ;newmain.c: 108:     TRISC = 0b00000000;
   685  06FB  0187               	clrf	7	;volatile
   686  06FC                     l672:
   687                           
   688                           ;newmain.c: 109:     TRISE = 0b00000000;
   689  06FC  0189               	clrf	9	;volatile
   690  06FD                     l674:
   691                           
   692                           ;newmain.c: 110:     TRISD = 0b00000000;
   693  06FD  0188               	clrf	8	;volatile
   694  06FE                     l676:
   695                           
   696                           ;newmain.c: 111:     PORTA = 0b00000000;
   697  06FE  1283               	bcf	3,5	;RP0=0, select bank0
   698  06FF  1303               	bcf	3,6	;RP1=0, select bank0
   699  0700  0185               	clrf	5	;volatile
   700  0701                     l678:
   701                           
   702                           ;newmain.c: 112:     PORTB = 0b00000000;
   703  0701  0186               	clrf	6	;volatile
   704  0702                     l680:
   705                           
   706                           ;newmain.c: 113:     PORTD = 0b00000000;
   707  0702  0188               	clrf	8	;volatile
   708  0703                     l682:
   709                           
   710                           ;newmain.c: 114:     PORTC = 0b00000000;
   711  0703  0187               	clrf	7	;volatile
   712  0704                     l684:
   713                           
   714                           ;newmain.c: 115:     PORTE = 0b00000000;
   715  0704  0189               	clrf	9	;volatile
   716  0705                     l686:
   717                           
   718                           ;newmain.c: 116:     J1=0;
   719  0705  01F7               	clrf	_J1
   720  0706                     l688:
   721                           
   722                           ;newmain.c: 117:     J2=0;
   723  0706  01F6               	clrf	_J2
   724  0707                     l71:
   725  0707  0008               	return
   726  0708                     __end_of_setup:
   727                           
   728                           	psect	text2
   729  0728                     __ptext2:	
   730 ;; *************** function _semaforo *****************
   731 ;; Defined at:
   732 ;;		line 124 in file "newmain.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0
   748 ;;      Temps:          3       0       0       0       0
   749 ;;      Totals:         3       0       0       0       0
   750 ;;Total ram usage:        3 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_main
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _semaforo
   761  0728                     _semaforo:
   762  0728                     l690:	
   763                           ;incstack = 0
   764                           ; Regs used in _semaforo: [wreg]
   765                           
   766                           
   767                           ;newmain.c: 125:     PORTBbits.RB0 = 1;
   768  0728  1283               	bcf	3,5	;RP0=0, select bank0
   769  0729  1303               	bcf	3,6	;RP1=0, select bank0
   770  072A  1406               	bsf	6,0	;volatile
   771  072B                     l692:
   772                           
   773                           ;newmain.c: 126:     _delay((unsigned long)((500)*(8000000/4000.0)));
   774  072B  3006               	movlw	6
   775  072C  00F2               	movwf	??_semaforo+2
   776  072D  3013               	movlw	19
   777  072E  00F1               	movwf	??_semaforo+1
   778  072F  30AD               	movlw	173
   779  0730  00F0               	movwf	??_semaforo
   780  0731                     u147:
   781  0731  0BF0               	decfsz	??_semaforo,f
   782  0732  2F31               	goto	u147
   783  0733  0BF1               	decfsz	??_semaforo+1,f
   784  0734  2F31               	goto	u147
   785  0735  0BF2               	decfsz	??_semaforo+2,f
   786  0736  2F31               	goto	u147
   787  0737  2F38               	nop2
   788  0738                     l694:
   789                           
   790                           ;newmain.c: 127:     PORTBbits.RB0 = 0;
   791  0738  1283               	bcf	3,5	;RP0=0, select bank0
   792  0739  1303               	bcf	3,6	;RP1=0, select bank0
   793  073A  1006               	bcf	6,0	;volatile
   794  073B                     l696:
   795                           
   796                           ;newmain.c: 128:     PORTBbits.RB1 = 1;
   797  073B  1486               	bsf	6,1	;volatile
   798                           
   799                           ;newmain.c: 129:     _delay((unsigned long)((500)*(8000000/4000.0)));
   800  073C  3006               	movlw	6
   801  073D  00F2               	movwf	??_semaforo+2
   802  073E  3013               	movlw	19
   803  073F  00F1               	movwf	??_semaforo+1
   804  0740  30AD               	movlw	173
   805  0741  00F0               	movwf	??_semaforo
   806  0742                     u157:
   807  0742  0BF0               	decfsz	??_semaforo,f
   808  0743  2F42               	goto	u157
   809  0744  0BF1               	decfsz	??_semaforo+1,f
   810  0745  2F42               	goto	u157
   811  0746  0BF2               	decfsz	??_semaforo+2,f
   812  0747  2F42               	goto	u157
   813  0748  2F49               	nop2
   814  0749                     l698:
   815                           
   816                           ;newmain.c: 130:     PORTBbits.RB1 = 0;
   817  0749  1283               	bcf	3,5	;RP0=0, select bank0
   818  074A  1303               	bcf	3,6	;RP1=0, select bank0
   819  074B  1086               	bcf	6,1	;volatile
   820  074C                     l700:
   821                           
   822                           ;newmain.c: 131:     PORTBbits.RB2 = 1;
   823  074C  1506               	bsf	6,2	;volatile
   824                           
   825                           ;newmain.c: 132:     _delay((unsigned long)((500)*(8000000/4000.0)));
   826  074D  3006               	movlw	6
   827  074E  00F2               	movwf	??_semaforo+2
   828  074F  3013               	movlw	19
   829  0750  00F1               	movwf	??_semaforo+1
   830  0751  30AD               	movlw	173
   831  0752  00F0               	movwf	??_semaforo
   832  0753                     u167:
   833  0753  0BF0               	decfsz	??_semaforo,f
   834  0754  2F53               	goto	u167
   835  0755  0BF1               	decfsz	??_semaforo+1,f
   836  0756  2F53               	goto	u167
   837  0757  0BF2               	decfsz	??_semaforo+2,f
   838  0758  2F53               	goto	u167
   839  0759  2F5A               	nop2
   840  075A                     l702:
   841                           
   842                           ;newmain.c: 133:     PORTBbits.RB2 = 0;
   843  075A  1283               	bcf	3,5	;RP0=0, select bank0
   844  075B  1303               	bcf	3,6	;RP1=0, select bank0
   845  075C  1106               	bcf	6,2	;volatile
   846  075D                     l74:
   847  075D  0008               	return
   848  075E                     __end_of_semaforo:
   849  007E                     btemp	set	126	;btemp
   850  007E                     wtemp0	set	126
   851                           
   852                           	psect	config
   853                           
   854                           ;Config register CONFIG1 @ 0x2007
   855                           ;	Oscillator Selection bits
   856                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   857                           ;	Watchdog Timer Enable bit
   858                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   859                           ;	Power-up Timer Enable bit
   860                           ;	PWRTE = OFF, PWRT disabled
   861                           ;	RE3/MCLR pin function select bit
   862                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   863                           ;	Code Protection bit
   864                           ;	CP = OFF, Program memory code protection is disabled
   865                           ;	Data Code Protection bit
   866                           ;	CPD = OFF, Data memory code protection is disabled
   867                           ;	Brown Out Reset Selection bits
   868                           ;	BOREN = OFF, BOR disabled
   869                           ;	Internal External Switchover bit
   870                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   871                           ;	Fail-Safe Clock Monitor Enabled bit
   872                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   873                           ;	Low Voltage Programming Enable bit
   874                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   875                           ;	In-Circuit Debugger Mode bit
   876                           ;	DEBUG = 0x1, unprogrammed default
   877  2007                     	org	8199
   878  2007  20D1               	dw	8401
   879                           
   880                           ;Config register CONFIG2 @ 0x2008
   881                           ;	Brown-out Reset Selection bit
   882                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   883                           ;	Flash Program Memory Self Write Enable bits
   884                           ;	WRT = OFF, Write protection off
   885  2008                     	org	8200
   886  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                           _semaforo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _semaforo
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      29      12        0.0%
ABS                  0      0      29       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jan 24 21:32:37 2021

                      pc 0002                       _J1 0077                       _J2 0076  
                     l51 075E                       l71 0707                       l55 0780  
                     l56 07BB                       l74 075D                       u10 0769  
                     u11 0768                       u20 0778                       u21 0777  
                     u30 0786                       u31 0785                       u40 0795  
                     u41 0794                       u50 079B                       u51 079A  
                     u60 07BF                       u61 07BE                       u70 07CE  
                     u71 07CD                       u80 07D4                       u81 07D3  
                     u90 07E7                       u91 07E6                       fsr 0004  
                    l700 074C                      l702 075A                      l710 0772  
                    l720 0795                      l712 0778                      l704 075E  
                    l730 07BF                      l722 079B                      l714 077D  
                    l706 0763                      l740 07D6                      l732 07C8  
                    l724 079C                      l716 0786                      l708 0769  
                    l670 06FB                      l742 07DE                      l734 07CE  
                    l726 07AE                      l718 078F                      l680 0702  
                    l672 06FC                      l736 07D4                      l728 07B6  
                    l744 07E2                      l690 0728                      l682 0703  
                    l674 06FD                      l666 06F2                      l692 072B  
                    l684 0704                      l676 06FE                      l668 06F9  
                    l694 0738                      l686 0705                      l678 0701  
                    l696 073B                      l688 0706                      l698 0749  
                    u107 076D                      u117 078A                      u127 07A2  
                    u137 07C3                      u147 0731                      u157 0742  
                    u167 0753                      fsr0 0004                      indf 0000  
                   _flag 0078                     _main 075E                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 06F2                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EB  
           __end_of_main 07EB                   ??_main 0073                   ?_setup 0070  
                 _ANSELH 0189                   _count1 0030                   _count2 0020  
       __end_of_semaforo 075E  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0708            __end_of_setup 0708                  ??_setup 0070  
             __pmaintext 075E                ?_semaforo 0070                  __ptext1 06F2  
                __ptext2 0728     end_of_initialization 07FC               ??_semaforo 0070  
              _PORTAbits 0005                _PORTBbits 0006                _PORTEbits 0009  
    start_initialization 07EB               init_fetch0 06DF              __pdataBANK0 0020  
            __pbssCOMMON 0076                ___latbits 0002        __size_of_semaforo 0036  
         __size_of_setup 0016            __size_of_main 008D                 _semaforo 0728  
               init_ram0 06E3  
