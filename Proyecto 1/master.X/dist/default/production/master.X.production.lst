

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 21 00:12:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  0081                     	;# 
   127  0085                     	;# 
   128  0086                     	;# 
   129  0087                     	;# 
   130  0088                     	;# 
   131  0089                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0185                     	;# 
   164  0187                     	;# 
   165  0188                     	;# 
   166  0189                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  0105                     	;# 
   233  0107                     	;# 
   234  0108                     	;# 
   235  0109                     	;# 
   236  010C                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0185                     	;# 
   242  0187                     	;# 
   243  0188                     	;# 
   244  0189                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001D                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0086                     	;# 
   285  0087                     	;# 
   286  0088                     	;# 
   287  0089                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  008F                     	;# 
   292  0090                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0094                     	;# 
   299  0095                     	;# 
   300  0096                     	;# 
   301  0097                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009A                     	;# 
   305  009B                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  0105                     	;# 
   311  0107                     	;# 
   312  0108                     	;# 
   313  0109                     	;# 
   314  010C                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  010F                     	;# 
   319  0185                     	;# 
   320  0187                     	;# 
   321  0188                     	;# 
   322  0189                     	;# 
   323  018C                     	;# 
   324  018D                     	;# 
   325  0000                     	;# 
   326  0001                     	;# 
   327  0002                     	;# 
   328  0003                     	;# 
   329  0004                     	;# 
   330  0005                     	;# 
   331  0006                     	;# 
   332  0007                     	;# 
   333  0008                     	;# 
   334  0009                     	;# 
   335  000A                     	;# 
   336  000B                     	;# 
   337  000C                     	;# 
   338  000D                     	;# 
   339  000E                     	;# 
   340  000E                     	;# 
   341  000F                     	;# 
   342  0010                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0013                     	;# 
   346  0014                     	;# 
   347  0015                     	;# 
   348  0015                     	;# 
   349  0016                     	;# 
   350  0017                     	;# 
   351  0018                     	;# 
   352  0019                     	;# 
   353  001A                     	;# 
   354  001B                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001D                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  0081                     	;# 
   361  0085                     	;# 
   362  0086                     	;# 
   363  0087                     	;# 
   364  0088                     	;# 
   365  0089                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  008E                     	;# 
   369  008F                     	;# 
   370  0090                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0094                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  0105                     	;# 
   389  0107                     	;# 
   390  0108                     	;# 
   391  0109                     	;# 
   392  010C                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  010F                     	;# 
   397  0185                     	;# 
   398  0187                     	;# 
   399  0188                     	;# 
   400  0189                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  000E                     	;# 
   418  000E                     	;# 
   419  000F                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0014                     	;# 
   425  0015                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001D                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  0081                     	;# 
   439  0085                     	;# 
   440  0086                     	;# 
   441  0087                     	;# 
   442  0088                     	;# 
   443  0089                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  008E                     	;# 
   447  008F                     	;# 
   448  0090                     	;# 
   449  0091                     	;# 
   450  0092                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0094                     	;# 
   455  0095                     	;# 
   456  0096                     	;# 
   457  0097                     	;# 
   458  0098                     	;# 
   459  0099                     	;# 
   460  009A                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  009F                     	;# 
   466  0105                     	;# 
   467  0107                     	;# 
   468  0108                     	;# 
   469  0109                     	;# 
   470  010C                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  0185                     	;# 
   476  0187                     	;# 
   477  0188                     	;# 
   478  0189                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481                           
   482                           	psect	idataBANK0
   483  00D4                     __pidataBANK0:
   484                           
   485                           ;initializer for _turno
   486  00D4  3401               	retlw	1
   487                           
   488                           ;initializer for _flag
   489  00D5  3401               	retlw	1
   490                           
   491                           	psect	strings
   492  0003                     __pstrings:
   493  0003                     stringtab:
   494  0003                     __stringtab:
   495                           
   496                           ;	String table - string pointers are 1 byte each
   497  0003  1BFF               	btfsc	btemp+1,7
   498  0004  280D               	ljmp	stringcode
   499  0005  1383               	bcf	3,7
   500  0006  187F               	btfsc	btemp+1,0
   501  0007  1783               	bsf	3,7
   502  0008  0800               	movf	0,w
   503  0009  0A84               	incf	4,f
   504  000A  1903               	skipnz
   505  000B  0AFF               	incf	btemp+1,f
   506  000C  0008               	return
   507  000D                     stringcode:
   508  000D                     stringdir:
   509  000D  3000               	movlw	high stringdir
   510  000E  008A               	movwf	10
   511  000F  0804               	movf	4,w
   512  0010  0A84               	incf	4,f
   513  0011  0782               	addwf	2,f
   514  0012                     __stringbase:
   515  0012  3400               	retlw	0
   516  0013                     __end_of__stringtab:
   517  0013                     __powers_:
   518  0013  3400               	retlw	0
   519  0014  3400               	retlw	0
   520  0015  3480               	retlw	128
   521  0016  343F               	retlw	63
   522  0017  3400               	retlw	0
   523  0018  3400               	retlw	0
   524  0019  3420               	retlw	32
   525  001A  3441               	retlw	65
   526  001B  3400               	retlw	0
   527  001C  3400               	retlw	0
   528  001D  34C8               	retlw	200
   529  001E  3442               	retlw	66
   530  001F  3400               	retlw	0
   531  0020  3400               	retlw	0
   532  0021  347A               	retlw	122
   533  0022  3444               	retlw	68
   534  0023  3400               	retlw	0
   535  0024  3440               	retlw	64
   536  0025  341C               	retlw	28
   537  0026  3446               	retlw	70
   538  0027  3400               	retlw	0
   539  0028  3450               	retlw	80
   540  0029  34C3               	retlw	195
   541  002A  3447               	retlw	71
   542  002B  3400               	retlw	0
   543  002C  3424               	retlw	36
   544  002D  3474               	retlw	116
   545  002E  3449               	retlw	73
   546  002F  3480               	retlw	128
   547  0030  3496               	retlw	150
   548  0031  3418               	retlw	24
   549  0032  344B               	retlw	75
   550  0033  3420               	retlw	32
   551  0034  34BC               	retlw	188
   552  0035  34BE               	retlw	190
   553  0036  344C               	retlw	76
   554  0037  3428               	retlw	40
   555  0038  346B               	retlw	107
   556  0039  346E               	retlw	110
   557  003A  344E               	retlw	78
   558  003B  34F9               	retlw	249
   559  003C  3402               	retlw	2
   560  003D  3415               	retlw	21
   561  003E  3450               	retlw	80
   562  003F  34EC               	retlw	236
   563  0040  3478               	retlw	120
   564  0041  34AD               	retlw	173
   565  0042  3460               	retlw	96
   566  0043  34CA               	retlw	202
   567  0044  34F2               	retlw	242
   568  0045  3449               	retlw	73
   569  0046  3471               	retlw	113
   570  0047                     __end_of__powers_:
   571  0047                     __npowers_:
   572  0047  3400               	retlw	0
   573  0048  3400               	retlw	0
   574  0049  3480               	retlw	128
   575  004A  343F               	retlw	63
   576  004B  34CD               	retlw	205
   577  004C  34CC               	retlw	204
   578  004D  34CC               	retlw	204
   579  004E  343D               	retlw	61
   580  004F  340A               	retlw	10
   581  0050  34D7               	retlw	215
   582  0051  3423               	retlw	35
   583  0052  343C               	retlw	60
   584  0053  346F               	retlw	111
   585  0054  3412               	retlw	18
   586  0055  3483               	retlw	131
   587  0056  343A               	retlw	58
   588  0057  3417               	retlw	23
   589  0058  34B7               	retlw	183
   590  0059  34D1               	retlw	209
   591  005A  3438               	retlw	56
   592  005B  34AC               	retlw	172
   593  005C  34C5               	retlw	197
   594  005D  3427               	retlw	39
   595  005E  3437               	retlw	55
   596  005F  34BD               	retlw	189
   597  0060  3437               	retlw	55
   598  0061  3486               	retlw	134
   599  0062  3435               	retlw	53
   600  0063  3495               	retlw	149
   601  0064  34BF               	retlw	191
   602  0065  34D6               	retlw	214
   603  0066  3433               	retlw	51
   604  0067  3477               	retlw	119
   605  0068  34CC               	retlw	204
   606  0069  342B               	retlw	43
   607  006A  3432               	retlw	50
   608  006B  345F               	retlw	95
   609  006C  3470               	retlw	112
   610  006D  3489               	retlw	137
   611  006E  3430               	retlw	48
   612  006F  34FF               	retlw	255
   613  0070  34E6               	retlw	230
   614  0071  34DB               	retlw	219
   615  0072  342E               	retlw	46
   616  0073  3408               	retlw	8
   617  0074  34E5               	retlw	229
   618  0075  343C               	retlw	60
   619  0076  341E               	retlw	30
   620  0077  3460               	retlw	96
   621  0078  3442               	retlw	66
   622  0079  34A2               	retlw	162
   623  007A  340D               	retlw	13
   624  007B                     __end_of__npowers_:
   625  007B                     _dpowers:
   626  007B  3401               	retlw	1
   627  007C  3400               	retlw	0
   628  007D  3400               	retlw	0
   629  007E  3400               	retlw	0
   630  007F  340A               	retlw	10
   631  0080  3400               	retlw	0
   632  0081  3400               	retlw	0
   633  0082  3400               	retlw	0
   634  0083  3464               	retlw	100
   635  0084  3400               	retlw	0
   636  0085  3400               	retlw	0
   637  0086  3400               	retlw	0
   638  0087  34E8               	retlw	232
   639  0088  3403               	retlw	3
   640  0089  3400               	retlw	0
   641  008A  3400               	retlw	0
   642  008B  3410               	retlw	16
   643  008C  3427               	retlw	39
   644  008D  3400               	retlw	0
   645  008E  3400               	retlw	0
   646  008F  34A0               	retlw	160
   647  0090  3486               	retlw	134
   648  0091  3401               	retlw	1
   649  0092  3400               	retlw	0
   650  0093  3440               	retlw	64
   651  0094  3442               	retlw	66
   652  0095  340F               	retlw	15
   653  0096  3400               	retlw	0
   654  0097  3480               	retlw	128
   655  0098  3496               	retlw	150
   656  0099  3498               	retlw	152
   657  009A  3400               	retlw	0
   658  009B  3400               	retlw	0
   659  009C  34E1               	retlw	225
   660  009D  34F5               	retlw	245
   661  009E  3405               	retlw	5
   662  009F  3400               	retlw	0
   663  00A0  34CA               	retlw	202
   664  00A1  349A               	retlw	154
   665  00A2  343B               	retlw	59
   666  00A3                     __end_of_dpowers:
   667  0014                     _SSPCON	set	20
   668  0019                     _TXREG	set	25
   669  000B                     _INTCONbits	set	11
   670  0018                     _RCSTAbits	set	24
   671  0009                     _PORTEbits	set	9
   672  0006                     _PORTB	set	6
   673  0009                     _PORTE	set	9
   674  0008                     _PORTD	set	8
   675  0007                     _PORTCbits	set	7
   676  0013                     _SSPBUF	set	19
   677  0005                     _PORTA	set	5
   678  0094                     _SSPSTATbits	set	148
   679  0094                     _SSPSTAT	set	148
   680  008C                     _PIE1bits	set	140
   681  0099                     _SPBRG	set	153
   682  0098                     _TXSTAbits	set	152
   683  0085                     _TRISA	set	133
   684  0086                     _TRISB	set	134
   685  0089                     _TRISE	set	137
   686  0087                     _TRISC	set	135
   687  0088                     _TRISD	set	136
   688  043B                     _TRISC3	set	1083
   689  043D                     _TRISC5	set	1085
   690  04C1                     _TRMT	set	1217
   691  0187                     _BAUDCTLbits	set	391
   692  0188                     _ANSEL	set	392
   693  00A3                     STR_1:
   694  00A3  3453               	retlw	83	;'S'
   695  00A4  3431               	retlw	49	;'1'
   696  00A5  343A               	retlw	58	;':'
   697  00A6  3420               	retlw	32	;' '
   698  00A7  3420               	retlw	32	;' '
   699  00A8  3420               	retlw	32	;' '
   700  00A9  3453               	retlw	83	;'S'
   701  00AA  3432               	retlw	50	;'2'
   702  00AB  343A               	retlw	58	;':'
   703  00AC  3420               	retlw	32	;' '
   704  00AD  3420               	retlw	32	;' '
   705  00AE  3420               	retlw	32	;' '
   706  00AF  3420               	retlw	32	;' '
   707  00B0  3453               	retlw	83	;'S'
   708  00B1  3433               	retlw	51	;'3'
   709  00B2  343A               	retlw	58	;':'
   710  00B3  3400               	retlw	0
   711  00B4                     STR_5:
   712  00B4  3425               	retlw	37	;'%'
   713  00B5  3433               	retlw	51	;'3'
   714  00B6  342E               	retlw	46	;'.'
   715  00B7  3430               	retlw	48	;'0'
   716  00B8  3466               	retlw	102	;'f'
   717  00B9  3443               	retlw	67	;'C'
   718  00BA  3400               	retlw	0
   719  00BB                     STR_6:
   720  00BB  3425               	retlw	37	;'%'
   721  00BC  3433               	retlw	51	;'3'
   722  00BD  342E               	retlw	46	;'.'
   723  00BE  3432               	retlw	50	;'2'
   724  00BF  3466               	retlw	102	;'f'
   725  00C0  3456               	retlw	86	;'V'
   726  00C1  3400               	retlw	0
   727  00C2                     STR_7:
   728  00C2  3420               	retlw	32	;' '
   729  00C3  3420               	retlw	32	;' '
   730  00C4  3420               	retlw	32	;' '
   731  00C5  3400               	retlw	0
   732  00C6                     STR_2:
   733  00C6  3453               	retlw	83	;'S'
   734  00C7  3431               	retlw	49	;'1'
   735  00C8  343A               	retlw	58	;':'
   736  00C9  3400               	retlw	0
   737  00CA                     STR_3:
   738  00CA  3453               	retlw	83	;'S'
   739  00CB  3432               	retlw	50	;'2'
   740  00CC  343A               	retlw	58	;':'
   741  00CD  3400               	retlw	0
   742  00CE                     STR_8:
   743  00CE  3425               	retlw	37	;'%'
   744  00CF  3464               	retlw	100	;'d'
   745  00D0  3400               	retlw	0
   746  00B0                     
   747                           	psect	cinit
   748  07DE                     start_initialization:	
   749                           ; #config settings
   750                           
   751  07DE                     __initialization:
   752                           
   753                           ; Initialize objects allocated to BANK0
   754  07DE  120A  118A  20D4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   755  07E3  00EE               	movwf	__pdataBANK0& (0+127)
   756  07E4  120A  118A  20D5  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   757  07E9  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   758                           
   759                           ; Clear objects allocated to BANK3
   760  07EA  1783               	bsf	3,7	;select IRP bank2
   761  07EB  3090               	movlw	low __pbssBANK3
   762  07EC  0084               	movwf	4
   763  07ED  30CC               	movlw	low (__pbssBANK3+60)
   764  07EE  160A  158A  2061  120A  118A  	fcall	clear_ram0
   765                           
   766                           ; Clear objects allocated to BANK1
   767  07F3  1383               	bcf	3,7	;select IRP bank0
   768  07F4  30C8               	movlw	low __pbssBANK1
   769  07F5  0084               	movwf	4
   770  07F6  30DD               	movlw	low (__pbssBANK1+21)
   771  07F7  160A  158A  2061  120A  118A  	fcall	clear_ram0
   772  07FC                     end_of_initialization:	
   773                           ;End of C runtime variable initialization code
   774                           
   775  07FC                     __end_of__initialization:
   776  07FC  0183               	clrf	3
   777  07FD  160A  158A  2E0D   	ljmp	_main	;jump to C main() function
   778                           
   779                           	psect	dataBANK0
   780  006E                     __pdataBANK0:
   781  006E                     _turno:
   782  006E                     	ds	1
   783  006F                     _flag:
   784  006F                     	ds	1
   785                           
   786                           	psect	bssBANK1
   787  00C8                     __pbssBANK1:
   788  00C8                     _p:
   789  00C8                     	ds	4
   790  00CC                     _x:
   791  00CC                     	ds	4
   792  00D0                     _vv:
   793  00D0                     	ds	4
   794  00D4                     _v:
   795  00D4                     	ds	4
   796  00D8                     _count:
   797  00D8                     	ds	1
   798  00D9                     _valorA:
   799  00D9                     	ds	1
   800  00DA                     _valorC:
   801  00DA                     	ds	1
   802  00DB                     _valorT:
   803  00DB                     	ds	1
   804  00DC                     _retorno:
   805  00DC                     	ds	1
   806                           
   807                           	psect	bssBANK3
   808  0190                     __pbssBANK3:
   809  0190                     _k:
   810  0190                     	ds	20
   811  01A4                     _l:
   812  01A4                     	ds	20
   813  01B8                     _s:
   814  01B8                     	ds	20
   815                           
   816                           	psect	clrtext
   817  1861                     clear_ram0:	
   818                           ;	Called with FSR containing the base address, and
   819                           ;	W with the last address+1
   820                           
   821  1861  0064               	clrwdt	;clear the watchdog before getting into this loop
   822  1862                     clrloop0:
   823  1862  0180               	clrf	0	;clear RAM location pointed to by FSR
   824  1863  0A84               	incf	4,f	;increment pointer
   825  1864  0604               	xorwf	4,w	;XOR with final address
   826  1865  1903               	btfsc	3,2	;have we reached the end yet?
   827  1866  3400               	retlw	0	;all done for this memory range, return
   828  1867  0604               	xorwf	4,w	;XOR again to restore value
   829  1868  2862               	goto	clrloop0	;do the next byte
   830                           
   831                           	psect	cstackBANK1
   832  00A0                     __pcstackBANK1:
   833  00A0                     ?_sprintf:
   834  00A0                     sprintf@f:	
   835                           ; 2 bytes @ 0x0
   836                           
   837                           
   838                           ; 1 bytes @ 0x0
   839  00A0                     	ds	5
   840  00A5                     ??_sprintf:
   841                           
   842                           ; 1 bytes @ 0x5
   843  00A5                     	ds	5
   844  00AA                     _sprintf$1217:
   845                           
   846                           ; 4 bytes @ 0xA
   847  00AA                     	ds	4
   848  00AE                     sprintf@ap:
   849                           
   850                           ; 1 bytes @ 0xE
   851  00AE                     	ds	1
   852  00AF                     sprintf@flag:
   853                           
   854                           ; 2 bytes @ 0xF
   855  00AF                     	ds	2
   856  00B1                     sprintf@width:
   857                           
   858                           ; 2 bytes @ 0x11
   859  00B1                     	ds	2
   860  00B3                     sprintf@tmpval:
   861                           
   862                           ; 4 bytes @ 0x13
   863  00B3                     	ds	4
   864  00B7                     sprintf@val:
   865                           
   866                           ; 4 bytes @ 0x17
   867  00B7                     	ds	4
   868  00BB                     sprintf@eexp:
   869                           
   870                           ; 2 bytes @ 0x1B
   871  00BB                     	ds	2
   872  00BD                     sprintf@fval:
   873                           
   874                           ; 4 bytes @ 0x1D
   875  00BD                     	ds	4
   876  00C1                     sprintf@sp:
   877                           
   878                           ; 1 bytes @ 0x21
   879  00C1                     	ds	1
   880  00C2                     sprintf@prec:
   881                           
   882                           ; 2 bytes @ 0x22
   883  00C2                     	ds	2
   884  00C4                     sprintf@c:
   885                           
   886                           ; 1 bytes @ 0x24
   887  00C4                     	ds	1
   888  00C5                     ??_main:
   889                           
   890                           ; 1 bytes @ 0x25
   891  00C5                     	ds	3
   892                           
   893                           	psect	cstackCOMMON
   894  0070                     __pcstackCOMMON:
   895  0070                     ?_isdigit:
   896  0070                     ?___fleq:	
   897                           ; 1 bit 
   898                           
   899  0070                     ?___flge:	
   900                           ; 1 bit 
   901                           
   902  0070                     ?_setup:	
   903                           ; 1 bit 
   904                           
   905  0070                     ??_setup:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_spiInit:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_Config_USARTT:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ??_Config_USARTT:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_recibir:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ??_recibir:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_Lcd_Init:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_Lcd_Clear:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_enviar:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_spiRead:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ??_spiRead:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ??_isdigit:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_main:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_Lcd_Port:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ??_Lcd_Port:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_Lcd_Cmd:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ?_Lcd_Write_Char:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?_spiReceiveWait:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ??_spiReceiveWait:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0070                     ?__Umul8_16:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0070                     ?___wmul:	
   966                           ; 2 bytes @ 0x0
   967                           
   968  0070                     ?___awmod:	
   969                           ; 2 bytes @ 0x0
   970                           
   971  0070                     ?___lwmod:	
   972                           ; 2 bytes @ 0x0
   973                           
   974  0070                     ?__tdiv_to_l_:	
   975                           ; 2 bytes @ 0x0
   976                           
   977  0070                     ?__div_to_l_:	
   978                           ; 4 bytes @ 0x0
   979                           
   980  0070                     ?___lldiv:	
   981                           ; 4 bytes @ 0x0
   982                           
   983  0070                     ?___flneg:	
   984                           ; 4 bytes @ 0x0
   985                           
   986  0070                     ?___xxtofl:	
   987                           ; 4 bytes @ 0x0
   988                           
   989  0070                     Lcd_Port@a:	
   990                           ; 4 bytes @ 0x0
   991                           
   992  0070                     spiInit@sDataSample:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0070                     __Umul8_16@multiplicand:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0070                     _isdigit$1034:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0070                     enviar@valor:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0070                     ___wmul@multiplier:	
  1005                           ; 2 bytes @ 0x0
  1006                           
  1007  0070                     ___awmod@divisor:	
  1008                           ; 2 bytes @ 0x0
  1009                           
  1010  0070                     ___lwmod@divisor:	
  1011                           ; 2 bytes @ 0x0
  1012                           
  1013  0070                     ___lldiv@divisor:	
  1014                           ; 2 bytes @ 0x0
  1015                           
  1016  0070                     __div_to_l_@f1:	
  1017                           ; 4 bytes @ 0x0
  1018                           
  1019  0070                     ___fleq@ff1:	
  1020                           ; 4 bytes @ 0x0
  1021                           
  1022  0070                     ___flge@ff1:	
  1023                           ; 4 bytes @ 0x0
  1024                           
  1025  0070                     ___flneg@f1:	
  1026                           ; 4 bytes @ 0x0
  1027                           
  1028  0070                     __tdiv_to_l_@f1:	
  1029                           ; 4 bytes @ 0x0
  1030                           
  1031  0070                     ___xxtofl@val:	
  1032                           ; 4 bytes @ 0x0
  1033                           
  1034                           
  1035                           ; 4 bytes @ 0x0
  1036  0070                     	ds	1
  1037  0071                     ??_Lcd_Cmd:
  1038  0071                     ??_Lcd_Write_Char:	
  1039                           ; 1 bytes @ 0x1
  1040                           
  1041  0071                     spiInit@sClockIdle:	
  1042                           ; 1 bytes @ 0x1
  1043                           
  1044  0071                     isdigit@c:	
  1045                           ; 1 bytes @ 0x1
  1046                           
  1047                           
  1048                           ; 1 bytes @ 0x1
  1049  0071                     	ds	1
  1050  0072                     ??_enviar:
  1051  0072                     ??__Umul8_16:	
  1052                           ; 1 bytes @ 0x2
  1053                           
  1054  0072                     Lcd_Write_Char@a:	
  1055                           ; 1 bytes @ 0x2
  1056                           
  1057  0072                     spiInit@sTransmitEdge:	
  1058                           ; 1 bytes @ 0x2
  1059                           
  1060  0072                     ___wmul@multiplicand:	
  1061                           ; 1 bytes @ 0x2
  1062                           
  1063  0072                     ___awmod@dividend:	
  1064                           ; 2 bytes @ 0x2
  1065                           
  1066  0072                     ___lwmod@dividend:	
  1067                           ; 2 bytes @ 0x2
  1068                           
  1069                           
  1070                           ; 2 bytes @ 0x2
  1071  0072                     	ds	1
  1072  0073                     ??_spiInit:
  1073  0073                     ?_Lcd_Write_String:	
  1074                           ; 1 bytes @ 0x3
  1075                           
  1076  0073                     Lcd_Cmd@a:	
  1077                           ; 1 bytes @ 0x3
  1078                           
  1079  0073                     spiInit@sType:	
  1080                           ; 1 bytes @ 0x3
  1081                           
  1082  0073                     Lcd_Write_String@a:	
  1083                           ; 1 bytes @ 0x3
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x3
  1087  0073                     	ds	1
  1088  0074                     ??_Lcd_Init:
  1089  0074                     ??_Lcd_Clear:	
  1090                           ; 1 bytes @ 0x4
  1091                           
  1092  0074                     ?_Lcd_Set_Cursor:	
  1093                           ; 1 bytes @ 0x4
  1094                           
  1095  0074                     ??___wmul:	
  1096                           ; 1 bytes @ 0x4
  1097                           
  1098  0074                     ??___awmod:	
  1099                           ; 1 bytes @ 0x4
  1100                           
  1101  0074                     ??___flneg:	
  1102                           ; 1 bytes @ 0x4
  1103                           
  1104  0074                     ??___lwmod:	
  1105                           ; 1 bytes @ 0x4
  1106                           
  1107  0074                     ??___xxtofl:	
  1108                           ; 1 bytes @ 0x4
  1109                           
  1110  0074                     Lcd_Set_Cursor@b:	
  1111                           ; 1 bytes @ 0x4
  1112                           
  1113  0074                     ___wmul@product:	
  1114                           ; 1 bytes @ 0x4
  1115                           
  1116  0074                     __Umul8_16@product:	
  1117                           ; 2 bytes @ 0x4
  1118                           
  1119  0074                     ___lldiv@dividend:	
  1120                           ; 2 bytes @ 0x4
  1121                           
  1122  0074                     __div_to_l_@f2:	
  1123                           ; 4 bytes @ 0x4
  1124                           
  1125  0074                     ___fleq@ff2:	
  1126                           ; 4 bytes @ 0x4
  1127                           
  1128  0074                     ___flge@ff2:	
  1129                           ; 4 bytes @ 0x4
  1130                           
  1131  0074                     __tdiv_to_l_@f2:	
  1132                           ; 4 bytes @ 0x4
  1133                           
  1134                           
  1135                           ; 4 bytes @ 0x4
  1136  0074                     	ds	1
  1137  0075                     ??_Lcd_Set_Cursor:
  1138  0075                     ??_Lcd_Write_String:	
  1139                           ; 1 bytes @ 0x5
  1140                           
  1141  0075                     ___awmod@counter:	
  1142                           ; 1 bytes @ 0x5
  1143                           
  1144  0075                     ___lwmod@counter:	
  1145                           ; 1 bytes @ 0x5
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0x5
  1149  0075                     	ds	1
  1150  0076                     ?___lwdiv:
  1151  0076                     Lcd_Set_Cursor@a:	
  1152                           ; 2 bytes @ 0x6
  1153                           
  1154  0076                     ___awmod@sign:	
  1155                           ; 1 bytes @ 0x6
  1156                           
  1157  0076                     ___lwdiv@divisor:	
  1158                           ; 1 bytes @ 0x6
  1159                           
  1160  0076                     __Umul8_16@word_mpld:	
  1161                           ; 2 bytes @ 0x6
  1162                           
  1163                           
  1164                           ; 2 bytes @ 0x6
  1165  0076                     	ds	1
  1166  0077                     ?___awdiv:
  1167  0077                     Lcd_Set_Cursor@temp:	
  1168                           ; 2 bytes @ 0x7
  1169                           
  1170  0077                     ___awdiv@divisor:	
  1171                           ; 1 bytes @ 0x7
  1172                           
  1173                           
  1174                           ; 2 bytes @ 0x7
  1175  0077                     	ds	1
  1176  0078                     ??__tdiv_to_l_:
  1177  0078                     ??__div_to_l_:	
  1178                           ; 1 bytes @ 0x8
  1179                           
  1180  0078                     ??___lldiv:	
  1181                           ; 1 bytes @ 0x8
  1182                           
  1183  0078                     ??___fleq:	
  1184                           ; 1 bytes @ 0x8
  1185                           
  1186  0078                     ??___flge:	
  1187                           ; 1 bytes @ 0x8
  1188                           
  1189  0078                     __Umul8_16@multiplier:	
  1190                           ; 1 bytes @ 0x8
  1191                           
  1192  0078                     ___xxtofl@sign:	
  1193                           ; 1 bytes @ 0x8
  1194                           
  1195  0078                     Lcd_Write_String@i:	
  1196                           ; 1 bytes @ 0x8
  1197                           
  1198  0078                     ___lwdiv@dividend:	
  1199                           ; 2 bytes @ 0x8
  1200                           
  1201                           
  1202                           ; 2 bytes @ 0x8
  1203  0078                     	ds	1
  1204  0079                     ___xxtofl@exp:
  1205  0079                     ___awdiv@dividend:	
  1206                           ; 1 bytes @ 0x9
  1207                           
  1208  0079                     ___lldiv@quotient:	
  1209                           ; 2 bytes @ 0x9
  1210                           
  1211                           
  1212                           ; 4 bytes @ 0x9
  1213  0079                     	ds	1
  1214  007A                     ??___lwdiv:
  1215  007A                     ___xxtofl@arg:	
  1216                           ; 1 bytes @ 0xA
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0xA
  1220  007A                     	ds	1
  1221  007B                     ??___awdiv:
  1222  007B                     ___lwdiv@quotient:	
  1223                           ; 1 bytes @ 0xB
  1224                           
  1225                           
  1226                           ; 2 bytes @ 0xB
  1227  007B                     	ds	2
  1228  007D                     ___lldiv@counter:
  1229  007D                     ___lwdiv@counter:	
  1230                           ; 1 bytes @ 0xD
  1231                           
  1232                           
  1233                           ; 1 bytes @ 0xD
  1234  007D                     	ds	1
  1235  007E                     ??___flsub:
  1236                           
  1237                           	psect	cstackBANK0
  1238  0020                     __pcstackBANK0:	
  1239                           ; 1 bytes @ 0xE
  1240                           
  1241  0020                     ?___llmod:
  1242  0020                     ___awdiv@counter:	
  1243                           ; 4 bytes @ 0x0
  1244                           
  1245  0020                     __div_to_l_@quot:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0020                     __tdiv_to_l_@quot:	
  1249                           ; 4 bytes @ 0x0
  1250                           
  1251  0020                     ___llmod@divisor:	
  1252                           ; 4 bytes @ 0x0
  1253                           
  1254                           
  1255                           ; 4 bytes @ 0x0
  1256  0020                     	ds	1
  1257  0021                     ___awdiv@sign:
  1258                           
  1259                           ; 1 bytes @ 0x1
  1260  0021                     	ds	1
  1261  0022                     ___awdiv@quotient:
  1262                           
  1263                           ; 2 bytes @ 0x2
  1264  0022                     	ds	2
  1265  0024                     ?___flmul:
  1266  0024                     __div_to_l_@cntr:	
  1267                           ; 4 bytes @ 0x4
  1268                           
  1269  0024                     __tdiv_to_l_@cntr:	
  1270                           ; 1 bytes @ 0x4
  1271                           
  1272  0024                     ___llmod@dividend:	
  1273                           ; 1 bytes @ 0x4
  1274                           
  1275  0024                     ___flmul@b:	
  1276                           ; 4 bytes @ 0x4
  1277                           
  1278                           
  1279                           ; 4 bytes @ 0x4
  1280  0024                     	ds	1
  1281  0025                     __div_to_l_@exp1:
  1282  0025                     __tdiv_to_l_@exp1:	
  1283                           ; 1 bytes @ 0x5
  1284                           
  1285                           
  1286                           ; 1 bytes @ 0x5
  1287  0025                     	ds	3
  1288  0028                     ??___llmod:
  1289  0028                     ___flmul@a:	
  1290                           ; 1 bytes @ 0x8
  1291                           
  1292                           
  1293                           ; 4 bytes @ 0x8
  1294  0028                     	ds	1
  1295  0029                     ___llmod@counter:
  1296                           
  1297                           ; 1 bytes @ 0x9
  1298  0029                     	ds	3
  1299  002C                     ??___flmul:
  1300                           
  1301                           ; 1 bytes @ 0xC
  1302  002C                     	ds	5
  1303  0031                     ___flmul@sign:
  1304                           
  1305                           ; 1 bytes @ 0x11
  1306  0031                     	ds	1
  1307  0032                     ___flmul@grs:
  1308                           
  1309                           ; 4 bytes @ 0x12
  1310  0032                     	ds	4
  1311  0036                     ___flmul@aexp:
  1312                           
  1313                           ; 1 bytes @ 0x16
  1314  0036                     	ds	1
  1315  0037                     ___flmul@bexp:
  1316                           
  1317                           ; 1 bytes @ 0x17
  1318  0037                     	ds	1
  1319  0038                     ___flmul@prod:
  1320                           
  1321                           ; 4 bytes @ 0x18
  1322  0038                     	ds	4
  1323  003C                     ___flmul@temp:
  1324                           
  1325                           ; 2 bytes @ 0x1C
  1326  003C                     	ds	2
  1327  003E                     ?_conversor2:
  1328  003E                     ?_conversor:	
  1329                           ; 4 bytes @ 0x1E
  1330                           
  1331  003E                     ?_fround:	
  1332                           ; 4 bytes @ 0x1E
  1333                           
  1334  003E                     ?_scale:	
  1335                           ; 4 bytes @ 0x1E
  1336                           
  1337                           
  1338                           ; 4 bytes @ 0x1E
  1339  003E                     	ds	4
  1340  0042                     ??_conversor2:
  1341  0042                     ??_conversor:	
  1342                           ; 1 bytes @ 0x22
  1343                           
  1344  0042                     ??_fround:	
  1345                           ; 1 bytes @ 0x22
  1346                           
  1347  0042                     ??_scale:	
  1348                           ; 1 bytes @ 0x22
  1349                           
  1350                           
  1351                           ; 1 bytes @ 0x22
  1352  0042                     	ds	4
  1353  0046                     conversor@val:
  1354  0046                     conversor2@val2:	
  1355                           ; 1 bytes @ 0x26
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0x26
  1359  0046                     	ds	3
  1360  0049                     _fround$1215:
  1361                           
  1362                           ; 4 bytes @ 0x29
  1363  0049                     	ds	3
  1364  004C                     _scale$1216:
  1365                           
  1366                           ; 4 bytes @ 0x2C
  1367  004C                     	ds	1
  1368  004D                     _fround$1214:
  1369                           
  1370                           ; 4 bytes @ 0x2D
  1371  004D                     	ds	3
  1372  0050                     scale@scl:
  1373                           
  1374                           ; 1 bytes @ 0x30
  1375  0050                     	ds	1
  1376  0051                     ?___fltol:
  1377  0051                     fround@prec:	
  1378                           ; 4 bytes @ 0x31
  1379                           
  1380  0051                     ___fltol@f1:	
  1381                           ; 1 bytes @ 0x31
  1382                           
  1383                           
  1384                           ; 4 bytes @ 0x31
  1385  0051                     	ds	1
  1386  0052                     ?___fladd:
  1387  0052                     ___fladd@b:	
  1388                           ; 4 bytes @ 0x32
  1389                           
  1390                           
  1391                           ; 4 bytes @ 0x32
  1392  0052                     	ds	3
  1393  0055                     ??___fltol:
  1394                           
  1395                           ; 1 bytes @ 0x35
  1396  0055                     	ds	1
  1397  0056                     ___fladd@a:
  1398                           
  1399                           ; 4 bytes @ 0x36
  1400  0056                     	ds	4
  1401  005A                     ??___fladd:
  1402  005A                     ___fltol@sign1:	
  1403                           ; 1 bytes @ 0x3A
  1404                           
  1405                           
  1406                           ; 1 bytes @ 0x3A
  1407  005A                     	ds	1
  1408  005B                     ___fltol@exp1:
  1409                           
  1410                           ; 1 bytes @ 0x3B
  1411  005B                     	ds	7
  1412  0062                     ___fladd@signs:
  1413                           
  1414                           ; 1 bytes @ 0x42
  1415  0062                     	ds	1
  1416  0063                     ___fladd@aexp:
  1417                           
  1418                           ; 1 bytes @ 0x43
  1419  0063                     	ds	1
  1420  0064                     ___fladd@bexp:
  1421                           
  1422                           ; 1 bytes @ 0x44
  1423  0064                     	ds	1
  1424  0065                     ___fladd@grs:
  1425                           
  1426                           ; 1 bytes @ 0x45
  1427  0065                     	ds	1
  1428  0066                     ?___flsub:
  1429  0066                     ___flsub@a:	
  1430                           ; 4 bytes @ 0x46
  1431                           
  1432                           
  1433                           ; 4 bytes @ 0x46
  1434  0066                     	ds	4
  1435  006A                     ___flsub@b:
  1436                           
  1437                           ; 4 bytes @ 0x4A
  1438  006A                     	ds	4
  1439                           
  1440                           	psect	maintext
  1441  1E0D                     __pmaintext:	
  1442 ;;
  1443 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1444 ;;
  1445 ;; *************** function _main *****************
  1446 ;; Defined at:
  1447 ;;		line 66 in file "main.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : B00/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0
  1463 ;;      Temps:          0       0       3       0       0
  1464 ;;      Totals:         0       0       3       0       0
  1465 ;;Total ram usage:        3 bytes
  1466 ;; Hardware stack levels required when called:    4
  1467 ;; This function calls:
  1468 ;;		_Config_USARTT
  1469 ;;		_Lcd_Clear
  1470 ;;		_Lcd_Init
  1471 ;;		_Lcd_Set_Cursor
  1472 ;;		_Lcd_Write_String
  1473 ;;		_conversor
  1474 ;;		_conversor2
  1475 ;;		_enviar
  1476 ;;		_recibir
  1477 ;;		_setup
  1478 ;;		_spiInit
  1479 ;;		_spiRead
  1480 ;;		_sprintf
  1481 ;; This function is called by:
  1482 ;;		Startup code after reset
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _main
  1488  1E0D                     _main:
  1489  1E0D                     l3653:	
  1490                           ;incstack = 0
  1491                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1492                           
  1493                           
  1494                           ;main.c: 67:     setup();
  1495  1E0D  160A  158A  20C5  160A  158A  	fcall	_setup
  1496                           
  1497                           ;main.c: 68:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1498  1E12  01F0               	clrf	spiInit@sDataSample
  1499  1E13  01F1               	clrf	spiInit@sClockIdle
  1500  1E14  01F2               	clrf	spiInit@sTransmitEdge
  1501  1E15  3020               	movlw	32
  1502  1E16  160A  158A  20AF  160A  158A  	fcall	_spiInit
  1503                           
  1504                           ;main.c: 69:     Config_USARTT();
  1505  1E1B  160A  158A  208C  160A  158A  	fcall	_Config_USARTT
  1506  1E20                     l3655:
  1507                           
  1508                           ;main.c: 70:     recibir();
  1509  1E20  160A  158A  2069  160A  158A  	fcall	_recibir
  1510  1E25                     l3657:
  1511                           
  1512                           ;main.c: 71:     Lcd_Init();
  1513  1E25  160A  158A  21E1  160A  158A  	fcall	_Lcd_Init
  1514  1E2A                     l3659:
  1515                           
  1516                           ;main.c: 72:     Lcd_Clear();
  1517  1E2A  160A  158A  207F  160A  158A  	fcall	_Lcd_Clear
  1518  1E2F                     l3661:
  1519                           
  1520                           ;main.c: 85:         Lcd_Set_Cursor(1, 1);
  1521  1E2F  01F4               	clrf	Lcd_Set_Cursor@b
  1522  1E30  0AF4               	incf	Lcd_Set_Cursor@b,f
  1523  1E31  3001               	movlw	1
  1524  1E32  160A  158A  2113  160A  158A  	fcall	_Lcd_Set_Cursor
  1525  1E37                     l3663:
  1526                           
  1527                           ;main.c: 86:         Lcd_Write_String("S1:   S2:    S3:");
  1528  1E37  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1529  1E38  00F3               	movwf	Lcd_Write_String@a
  1530  1E39  3080               	movlw	128
  1531  1E3A  00F4               	movwf	Lcd_Write_String@a+1
  1532  1E3B  160A  158A  2222  160A  158A  	fcall	_Lcd_Write_String
  1533  1E40                     l3665:
  1534                           
  1535                           ;main.c: 87:         enviar("S1:");
  1536  1E40  30B4               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1537  1E41  00F0               	movwf	enviar@valor
  1538  1E42  3080               	movlw	128
  1539  1E43  00F1               	movwf	enviar@valor+1
  1540  1E44  160A  158A  24E8  160A  158A  	fcall	_enviar
  1541  1E49                     l3667:
  1542                           
  1543                           ;main.c: 88:         enviar(l);
  1544  1E49  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1545  1E4A  00F0               	movwf	enviar@valor
  1546  1E4B  3001               	movlw	1
  1547  1E4C  00F1               	movwf	enviar@valor+1
  1548  1E4D  160A  158A  24E8  160A  158A  	fcall	_enviar
  1549  1E52                     l3669:
  1550                           
  1551                           ;main.c: 89:         enviar("S2:");
  1552  1E52  30B8               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1553  1E53  00F0               	movwf	enviar@valor
  1554  1E54  3080               	movlw	128
  1555  1E55  00F1               	movwf	enviar@valor+1
  1556  1E56  160A  158A  24E8  160A  158A  	fcall	_enviar
  1557  1E5B                     l3671:
  1558                           
  1559                           ;main.c: 90:         enviar(k);
  1560  1E5B  3090               	movlw	(low (_k| (0+256)))& (0+255)
  1561  1E5C  00F0               	movwf	enviar@valor
  1562  1E5D  3001               	movlw	1
  1563  1E5E  00F1               	movwf	enviar@valor+1
  1564  1E5F  160A  158A  24E8  160A  158A  	fcall	_enviar
  1565  1E64                     l3673:
  1566                           
  1567                           ;main.c: 91:         enviar("S3:");
  1568  1E64  309E               	movlw	(low (((STR_1+13)-__stringbase)| (0+32768)))& (0+255)
  1569  1E65  00F0               	movwf	enviar@valor
  1570  1E66  3080               	movlw	128
  1571  1E67  00F1               	movwf	enviar@valor+1
  1572  1E68  160A  158A  24E8  160A  158A  	fcall	_enviar
  1573  1E6D                     l3675:
  1574                           
  1575                           ;main.c: 92:         enviar(s);
  1576  1E6D  30B8               	movlw	(low (_s| (0+256)))& (0+255)
  1577  1E6E  00F0               	movwf	enviar@valor
  1578  1E6F  3001               	movlw	1
  1579  1E70  00F1               	movwf	enviar@valor+1
  1580  1E71  160A  158A  24E8  160A  158A  	fcall	_enviar
  1581  1E76                     l3677:
  1582                           
  1583                           ;main.c: 95:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1584  1E76  3003               	movlw	3
  1585  1E77  1683               	bsf	3,5	;RP0=1, select bank1
  1586  1E78  1303               	bcf	3,6	;RP1=0, select bank1
  1587  1E79  00C6               	movwf	(??_main^(0+128)+1)
  1588  1E7A  3097               	movlw	151
  1589  1E7B  00C5               	movwf	??_main^(0+128)
  1590  1E7C                     u5797:
  1591  1E7C  0BC5               	decfsz	??_main^(0+128),f
  1592  1E7D  2E7C               	goto	u5797
  1593  1E7E  0BC6               	decfsz	(??_main^(0+128)+1),f
  1594  1E7F  2E7C               	goto	u5797
  1595  1E80                     l3679:
  1596                           
  1597                           ;main.c: 96:         PORTA = 0b00000110;
  1598  1E80  3006               	movlw	6
  1599  1E81  1283               	bcf	3,5	;RP0=0, select bank0
  1600  1E82  1303               	bcf	3,6	;RP1=0, select bank0
  1601  1E83  0085               	movwf	5	;volatile
  1602  1E84                     l3681:
  1603                           
  1604                           ;main.c: 97:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1605  1E84  3002               	movlw	2
  1606  1E85  1683               	bsf	3,5	;RP0=1, select bank1
  1607  1E86  1303               	bcf	3,6	;RP1=0, select bank1
  1608  1E87  00C7               	movwf	(??_main^(0+128)+2)
  1609  1E88  3004               	movlw	4
  1610  1E89  00C6               	movwf	(??_main^(0+128)+1)
  1611  1E8A  30B9               	movlw	185
  1612  1E8B  00C5               	movwf	??_main^(0+128)
  1613  1E8C                     u5807:
  1614  1E8C  0BC5               	decfsz	??_main^(0+128),f
  1615  1E8D  2E8C               	goto	u5807
  1616  1E8E  0BC6               	decfsz	(??_main^(0+128)+1),f
  1617  1E8F  2E8C               	goto	u5807
  1618  1E90  0BC7               	decfsz	(??_main^(0+128)+2),f
  1619  1E91  2E8C               	goto	u5807
  1620  1E92  2E93               	nop2
  1621  1E93                     l3683:
  1622                           
  1623                           ;main.c: 98:         SSPBUF = 0;
  1624  1E93  1283               	bcf	3,5	;RP0=0, select bank0
  1625  1E94  1303               	bcf	3,6	;RP1=0, select bank0
  1626  1E95  0193               	clrf	19	;volatile
  1627  1E96                     l3685:
  1628                           
  1629                           ;main.c: 99:         valorT = spiRead();
  1630  1E96  160A  118A  2000  160A  158A  	fcall	_spiRead
  1631  1E9B  1683               	bsf	3,5	;RP0=1, select bank1
  1632  1E9C  1303               	bcf	3,6	;RP1=0, select bank1
  1633  1E9D  00C5               	movwf	??_main^(0+128)
  1634  1E9E  0845               	movf	??_main^(0+128),w
  1635  1E9F  00DB               	movwf	_valorT^(0+128)
  1636  1EA0                     l3687:
  1637                           
  1638                           ;main.c: 101:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1639  1EA0  3003               	movlw	3
  1640  1EA1  1683               	bsf	3,5	;RP0=1, select bank1
  1641  1EA2  1303               	bcf	3,6	;RP1=0, select bank1
  1642  1EA3  00C6               	movwf	(??_main^(0+128)+1)
  1643  1EA4  3097               	movlw	151
  1644  1EA5  00C5               	movwf	??_main^(0+128)
  1645  1EA6                     u5817:
  1646  1EA6  0BC5               	decfsz	??_main^(0+128),f
  1647  1EA7  2EA6               	goto	u5817
  1648  1EA8  0BC6               	decfsz	(??_main^(0+128)+1),f
  1649  1EA9  2EA6               	goto	u5817
  1650  1EAA                     l3689:
  1651                           
  1652                           ;main.c: 102:         PORTA = 0b00000111;
  1653  1EAA  3007               	movlw	7
  1654  1EAB  1283               	bcf	3,5	;RP0=0, select bank0
  1655  1EAC  1303               	bcf	3,6	;RP1=0, select bank0
  1656  1EAD  0085               	movwf	5	;volatile
  1657  1EAE                     l3691:
  1658                           
  1659                           ;main.c: 104:         Lcd_Set_Cursor(2, 13);
  1660  1EAE  300D               	movlw	13
  1661  1EAF  1683               	bsf	3,5	;RP0=1, select bank1
  1662  1EB0  1303               	bcf	3,6	;RP1=0, select bank1
  1663  1EB1  00C5               	movwf	??_main^(0+128)
  1664  1EB2  0845               	movf	??_main^(0+128),w
  1665  1EB3  00F4               	movwf	Lcd_Set_Cursor@b
  1666  1EB4  3002               	movlw	2
  1667  1EB5  160A  158A  2113  160A  158A  	fcall	_Lcd_Set_Cursor
  1668  1EBA                     l3693:
  1669                           
  1670                           ;main.c: 105:         p = conversor2(valorT);
  1671  1EBA  1683               	bsf	3,5	;RP0=1, select bank1
  1672  1EBB  1303               	bcf	3,6	;RP1=0, select bank1
  1673  1EBC  085B               	movf	_valorT^(0+128),w
  1674  1EBD  160A  158A  23BD  160A  158A  	fcall	_conversor2
  1675  1EC2  1283               	bcf	3,5	;RP0=0, select bank0
  1676  1EC3  1303               	bcf	3,6	;RP1=0, select bank0
  1677  1EC4  0841               	movf	?_conversor2+3,w
  1678  1EC5  1683               	bsf	3,5	;RP0=1, select bank1
  1679  1EC6  1303               	bcf	3,6	;RP1=0, select bank1
  1680  1EC7  00CB               	movwf	(_p+3)^(0+128)
  1681  1EC8  1283               	bcf	3,5	;RP0=0, select bank0
  1682  1EC9  1303               	bcf	3,6	;RP1=0, select bank0
  1683  1ECA  0840               	movf	?_conversor2+2,w
  1684  1ECB  1683               	bsf	3,5	;RP0=1, select bank1
  1685  1ECC  1303               	bcf	3,6	;RP1=0, select bank1
  1686  1ECD  00CA               	movwf	(_p+2)^(0+128)
  1687  1ECE  1283               	bcf	3,5	;RP0=0, select bank0
  1688  1ECF  1303               	bcf	3,6	;RP1=0, select bank0
  1689  1ED0  083F               	movf	?_conversor2+1,w
  1690  1ED1  1683               	bsf	3,5	;RP0=1, select bank1
  1691  1ED2  1303               	bcf	3,6	;RP1=0, select bank1
  1692  1ED3  00C9               	movwf	(_p+1)^(0+128)
  1693  1ED4  1283               	bcf	3,5	;RP0=0, select bank0
  1694  1ED5  1303               	bcf	3,6	;RP1=0, select bank0
  1695  1ED6  083E               	movf	?_conversor2,w
  1696  1ED7  1683               	bsf	3,5	;RP0=1, select bank1
  1697  1ED8  1303               	bcf	3,6	;RP1=0, select bank1
  1698  1ED9  00C8               	movwf	_p^(0+128)
  1699  1EDA                     l3695:
  1700                           
  1701                           ;main.c: 106:         sprintf(s, "%3.0fC", p);
  1702  1EDA  30A2               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1703  1EDB  00C5               	movwf	??_main^(0+128)
  1704  1EDC  0845               	movf	??_main^(0+128),w
  1705  1EDD  00A0               	movwf	sprintf@f^(0+128)
  1706  1EDE  084B               	movf	(_p+3)^(0+128),w
  1707  1EDF  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1708  1EE0  084A               	movf	(_p+2)^(0+128),w
  1709  1EE1  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1710  1EE2  0849               	movf	(_p+1)^(0+128),w
  1711  1EE3  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1712  1EE4  0848               	movf	_p^(0+128),w
  1713  1EE5  00A1               	movwf	(?_sprintf^(0+128)+1)
  1714  1EE6  30B8               	movlw	(low (_s| (0+256)))& (0+255)
  1715  1EE7  160A  118A  253E  160A  158A  	fcall	_sprintf
  1716  1EEC                     l3697:
  1717                           
  1718                           ;main.c: 107:         Lcd_Write_String(s);
  1719  1EEC  30B8               	movlw	(low (_s| (0+256)))& (0+255)
  1720  1EED  00F3               	movwf	Lcd_Write_String@a
  1721  1EEE  3001               	movlw	1
  1722  1EEF  00F4               	movwf	Lcd_Write_String@a+1
  1723  1EF0  160A  158A  2222  160A  158A  	fcall	_Lcd_Write_String
  1724  1EF5                     l3699:
  1725                           
  1726                           ;main.c: 110:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1727  1EF5  3003               	movlw	3
  1728  1EF6  1683               	bsf	3,5	;RP0=1, select bank1
  1729  1EF7  1303               	bcf	3,6	;RP1=0, select bank1
  1730  1EF8  00C6               	movwf	(??_main^(0+128)+1)
  1731  1EF9  3097               	movlw	151
  1732  1EFA  00C5               	movwf	??_main^(0+128)
  1733  1EFB                     u5827:
  1734  1EFB  0BC5               	decfsz	??_main^(0+128),f
  1735  1EFC  2EFB               	goto	u5827
  1736  1EFD  0BC6               	decfsz	(??_main^(0+128)+1),f
  1737  1EFE  2EFB               	goto	u5827
  1738  1EFF                     l3701:
  1739                           
  1740                           ;main.c: 111:         PORTA = 0b00000101;
  1741  1EFF  3005               	movlw	5
  1742  1F00  1283               	bcf	3,5	;RP0=0, select bank0
  1743  1F01  1303               	bcf	3,6	;RP1=0, select bank0
  1744  1F02  0085               	movwf	5	;volatile
  1745  1F03                     l3703:
  1746                           
  1747                           ;main.c: 112:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1748  1F03  3002               	movlw	2
  1749  1F04  1683               	bsf	3,5	;RP0=1, select bank1
  1750  1F05  1303               	bcf	3,6	;RP1=0, select bank1
  1751  1F06  00C7               	movwf	(??_main^(0+128)+2)
  1752  1F07  3004               	movlw	4
  1753  1F08  00C6               	movwf	(??_main^(0+128)+1)
  1754  1F09  30B9               	movlw	185
  1755  1F0A  00C5               	movwf	??_main^(0+128)
  1756  1F0B                     u5837:
  1757  1F0B  0BC5               	decfsz	??_main^(0+128),f
  1758  1F0C  2F0B               	goto	u5837
  1759  1F0D  0BC6               	decfsz	(??_main^(0+128)+1),f
  1760  1F0E  2F0B               	goto	u5837
  1761  1F0F  0BC7               	decfsz	(??_main^(0+128)+2),f
  1762  1F10  2F0B               	goto	u5837
  1763  1F11  2F12               	nop2
  1764  1F12                     l3705:
  1765                           
  1766                           ;main.c: 113:         SSPBUF = 1;
  1767  1F12  3001               	movlw	1
  1768  1F13  1283               	bcf	3,5	;RP0=0, select bank0
  1769  1F14  1303               	bcf	3,6	;RP1=0, select bank0
  1770  1F15  0093               	movwf	19	;volatile
  1771  1F16                     l3707:
  1772                           
  1773                           ;main.c: 114:         valorA = spiRead();
  1774  1F16  160A  118A  2000  160A  158A  	fcall	_spiRead
  1775  1F1B  1683               	bsf	3,5	;RP0=1, select bank1
  1776  1F1C  1303               	bcf	3,6	;RP1=0, select bank1
  1777  1F1D  00C5               	movwf	??_main^(0+128)
  1778  1F1E  0845               	movf	??_main^(0+128),w
  1779  1F1F  00D9               	movwf	_valorA^(0+128)
  1780  1F20                     l3709:
  1781                           
  1782                           ;main.c: 115:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1783  1F20  3003               	movlw	3
  1784  1F21  1683               	bsf	3,5	;RP0=1, select bank1
  1785  1F22  1303               	bcf	3,6	;RP1=0, select bank1
  1786  1F23  00C6               	movwf	(??_main^(0+128)+1)
  1787  1F24  3097               	movlw	151
  1788  1F25  00C5               	movwf	??_main^(0+128)
  1789  1F26                     u5847:
  1790  1F26  0BC5               	decfsz	??_main^(0+128),f
  1791  1F27  2F26               	goto	u5847
  1792  1F28  0BC6               	decfsz	(??_main^(0+128)+1),f
  1793  1F29  2F26               	goto	u5847
  1794  1F2A                     l3711:
  1795                           
  1796                           ;main.c: 116:         PORTA = 0b00000111;
  1797  1F2A  3007               	movlw	7
  1798  1F2B  1283               	bcf	3,5	;RP0=0, select bank0
  1799  1F2C  1303               	bcf	3,6	;RP1=0, select bank0
  1800  1F2D  0085               	movwf	5	;volatile
  1801  1F2E                     l3713:
  1802                           
  1803                           ;main.c: 117:         Lcd_Set_Cursor(2, 1);
  1804  1F2E  01F4               	clrf	Lcd_Set_Cursor@b
  1805  1F2F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1806  1F30  3002               	movlw	2
  1807  1F31  160A  158A  2113  160A  158A  	fcall	_Lcd_Set_Cursor
  1808  1F36                     l3715:
  1809                           
  1810                           ;main.c: 118:         v = conversor(valorA);
  1811  1F36  1683               	bsf	3,5	;RP0=1, select bank1
  1812  1F37  1303               	bcf	3,6	;RP1=0, select bank1
  1813  1F38  0859               	movf	_valorA^(0+128),w
  1814  1F39  160A  158A  2361  160A  158A  	fcall	_conversor
  1815  1F3E  1283               	bcf	3,5	;RP0=0, select bank0
  1816  1F3F  1303               	bcf	3,6	;RP1=0, select bank0
  1817  1F40  0841               	movf	?_conversor+3,w
  1818  1F41  1683               	bsf	3,5	;RP0=1, select bank1
  1819  1F42  1303               	bcf	3,6	;RP1=0, select bank1
  1820  1F43  00D7               	movwf	(_v+3)^(0+128)
  1821  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  1822  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  1823  1F46  0840               	movf	?_conversor+2,w
  1824  1F47  1683               	bsf	3,5	;RP0=1, select bank1
  1825  1F48  1303               	bcf	3,6	;RP1=0, select bank1
  1826  1F49  00D6               	movwf	(_v+2)^(0+128)
  1827  1F4A  1283               	bcf	3,5	;RP0=0, select bank0
  1828  1F4B  1303               	bcf	3,6	;RP1=0, select bank0
  1829  1F4C  083F               	movf	?_conversor+1,w
  1830  1F4D  1683               	bsf	3,5	;RP0=1, select bank1
  1831  1F4E  1303               	bcf	3,6	;RP1=0, select bank1
  1832  1F4F  00D5               	movwf	(_v+1)^(0+128)
  1833  1F50  1283               	bcf	3,5	;RP0=0, select bank0
  1834  1F51  1303               	bcf	3,6	;RP1=0, select bank0
  1835  1F52  083E               	movf	?_conversor,w
  1836  1F53  1683               	bsf	3,5	;RP0=1, select bank1
  1837  1F54  1303               	bcf	3,6	;RP1=0, select bank1
  1838  1F55  00D4               	movwf	_v^(0+128)
  1839  1F56                     l3717:
  1840                           
  1841                           ;main.c: 119:         sprintf(l, "%3.2fV", v);
  1842  1F56  30A9               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1843  1F57  00C5               	movwf	??_main^(0+128)
  1844  1F58  0845               	movf	??_main^(0+128),w
  1845  1F59  00A0               	movwf	sprintf@f^(0+128)
  1846  1F5A  0857               	movf	(_v+3)^(0+128),w
  1847  1F5B  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1848  1F5C  0856               	movf	(_v+2)^(0+128),w
  1849  1F5D  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1850  1F5E  0855               	movf	(_v+1)^(0+128),w
  1851  1F5F  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1852  1F60  0854               	movf	_v^(0+128),w
  1853  1F61  00A1               	movwf	(?_sprintf^(0+128)+1)
  1854  1F62  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1855  1F63  160A  118A  253E  160A  158A  	fcall	_sprintf
  1856  1F68                     l3719:
  1857                           
  1858                           ;main.c: 121:         Lcd_Write_String(l);
  1859  1F68  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1860  1F69  00F3               	movwf	Lcd_Write_String@a
  1861  1F6A  3001               	movlw	1
  1862  1F6B  00F4               	movwf	Lcd_Write_String@a+1
  1863  1F6C  160A  158A  2222  160A  158A  	fcall	_Lcd_Write_String
  1864  1F71                     l3721:
  1865                           
  1866                           ;main.c: 124:         if (valorC >= 0 && valorC < 10) {
  1867  1F71  300A               	movlw	10
  1868  1F72  1683               	bsf	3,5	;RP0=1, select bank1
  1869  1F73  1303               	bcf	3,6	;RP1=0, select bank1
  1870  1F74  025A               	subwf	_valorC^(0+128),w
  1871  1F75  1803               	skipnc
  1872  1F76  2F78               	goto	u5781
  1873  1F77  2F79               	goto	u5780
  1874  1F78                     u5781:
  1875  1F78  2F8C               	goto	l3727
  1876  1F79                     u5780:
  1877  1F79                     l3723:
  1878                           
  1879                           ;main.c: 126:             Lcd_Set_Cursor(2, 8);
  1880  1F79  3008               	movlw	8
  1881  1F7A  00C5               	movwf	??_main^(0+128)
  1882  1F7B  0845               	movf	??_main^(0+128),w
  1883  1F7C  00F4               	movwf	Lcd_Set_Cursor@b
  1884  1F7D  3002               	movlw	2
  1885  1F7E  160A  158A  2113  160A  158A  	fcall	_Lcd_Set_Cursor
  1886  1F83                     l3725:
  1887                           
  1888                           ;main.c: 127:             Lcd_Write_String("   ");
  1889  1F83  30B0               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1890  1F84  00F3               	movwf	Lcd_Write_String@a
  1891  1F85  3080               	movlw	128
  1892  1F86  00F4               	movwf	Lcd_Write_String@a+1
  1893  1F87  160A  158A  2222  160A  158A  	fcall	_Lcd_Write_String
  1894  1F8C                     l3727:
  1895                           
  1896                           ;main.c: 130:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1897  1F8C  3003               	movlw	3
  1898  1F8D  1683               	bsf	3,5	;RP0=1, select bank1
  1899  1F8E  1303               	bcf	3,6	;RP1=0, select bank1
  1900  1F8F  00C6               	movwf	(??_main^(0+128)+1)
  1901  1F90  3097               	movlw	151
  1902  1F91  00C5               	movwf	??_main^(0+128)
  1903  1F92                     u5857:
  1904  1F92  0BC5               	decfsz	??_main^(0+128),f
  1905  1F93  2F92               	goto	u5857
  1906  1F94  0BC6               	decfsz	(??_main^(0+128)+1),f
  1907  1F95  2F92               	goto	u5857
  1908  1F96                     l3729:
  1909                           
  1910                           ;main.c: 131:         PORTA = 0b00000011;
  1911  1F96  3003               	movlw	3
  1912  1F97  1283               	bcf	3,5	;RP0=0, select bank0
  1913  1F98  1303               	bcf	3,6	;RP1=0, select bank0
  1914  1F99  0085               	movwf	5	;volatile
  1915  1F9A                     l3731:
  1916                           
  1917                           ;main.c: 132:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1918  1F9A  3002               	movlw	2
  1919  1F9B  1683               	bsf	3,5	;RP0=1, select bank1
  1920  1F9C  1303               	bcf	3,6	;RP1=0, select bank1
  1921  1F9D  00C7               	movwf	(??_main^(0+128)+2)
  1922  1F9E  3004               	movlw	4
  1923  1F9F  00C6               	movwf	(??_main^(0+128)+1)
  1924  1FA0  30B9               	movlw	185
  1925  1FA1  00C5               	movwf	??_main^(0+128)
  1926  1FA2                     u5867:
  1927  1FA2  0BC5               	decfsz	??_main^(0+128),f
  1928  1FA3  2FA2               	goto	u5867
  1929  1FA4  0BC6               	decfsz	(??_main^(0+128)+1),f
  1930  1FA5  2FA2               	goto	u5867
  1931  1FA6  0BC7               	decfsz	(??_main^(0+128)+2),f
  1932  1FA7  2FA2               	goto	u5867
  1933  1FA8  2FA9               	nop2
  1934  1FA9                     l3733:
  1935                           
  1936                           ;main.c: 133:         SSPBUF = 2;
  1937  1FA9  3002               	movlw	2
  1938  1FAA  1283               	bcf	3,5	;RP0=0, select bank0
  1939  1FAB  1303               	bcf	3,6	;RP1=0, select bank0
  1940  1FAC  0093               	movwf	19	;volatile
  1941  1FAD                     l3735:
  1942                           
  1943                           ;main.c: 134:         valorC = spiRead();
  1944  1FAD  160A  118A  2000  160A  158A  	fcall	_spiRead
  1945  1FB2  1683               	bsf	3,5	;RP0=1, select bank1
  1946  1FB3  1303               	bcf	3,6	;RP1=0, select bank1
  1947  1FB4  00C5               	movwf	??_main^(0+128)
  1948  1FB5  0845               	movf	??_main^(0+128),w
  1949  1FB6  00DA               	movwf	_valorC^(0+128)
  1950  1FB7                     l3737:
  1951                           
  1952                           ;main.c: 135:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1953  1FB7  3003               	movlw	3
  1954  1FB8  1683               	bsf	3,5	;RP0=1, select bank1
  1955  1FB9  1303               	bcf	3,6	;RP1=0, select bank1
  1956  1FBA  00C6               	movwf	(??_main^(0+128)+1)
  1957  1FBB  3097               	movlw	151
  1958  1FBC  00C5               	movwf	??_main^(0+128)
  1959  1FBD                     u5877:
  1960  1FBD  0BC5               	decfsz	??_main^(0+128),f
  1961  1FBE  2FBD               	goto	u5877
  1962  1FBF  0BC6               	decfsz	(??_main^(0+128)+1),f
  1963  1FC0  2FBD               	goto	u5877
  1964  1FC1                     l3739:
  1965                           
  1966                           ;main.c: 136:         PORTA = 0b00000111;
  1967  1FC1  3007               	movlw	7
  1968  1FC2  1283               	bcf	3,5	;RP0=0, select bank0
  1969  1FC3  1303               	bcf	3,6	;RP1=0, select bank0
  1970  1FC4  0085               	movwf	5	;volatile
  1971  1FC5                     l3741:
  1972                           
  1973                           ;main.c: 137:         Lcd_Set_Cursor(2, 7);
  1974  1FC5  3007               	movlw	7
  1975  1FC6  1683               	bsf	3,5	;RP0=1, select bank1
  1976  1FC7  1303               	bcf	3,6	;RP1=0, select bank1
  1977  1FC8  00C5               	movwf	??_main^(0+128)
  1978  1FC9  0845               	movf	??_main^(0+128),w
  1979  1FCA  00F4               	movwf	Lcd_Set_Cursor@b
  1980  1FCB  3002               	movlw	2
  1981  1FCC  160A  158A  2113  160A  158A  	fcall	_Lcd_Set_Cursor
  1982  1FD1                     l3743:
  1983                           
  1984                           ;main.c: 138:         sprintf(k, "%d", valorC);
  1985  1FD1  30BC               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1986  1FD2  1683               	bsf	3,5	;RP0=1, select bank1
  1987  1FD3  1303               	bcf	3,6	;RP1=0, select bank1
  1988  1FD4  00C5               	movwf	??_main^(0+128)
  1989  1FD5  0845               	movf	??_main^(0+128),w
  1990  1FD6  00A0               	movwf	sprintf@f^(0+128)
  1991  1FD7  085A               	movf	_valorC^(0+128),w
  1992  1FD8  00C6               	movwf	(??_main+1)^(0+128)
  1993  1FD9  01C7               	clrf	((??_main+1)^(0+128)+1)
  1994  1FDA  0846               	movf	(??_main+1)^(0+128),w
  1995  1FDB  00A1               	movwf	(?_sprintf^(0+128)+1)
  1996  1FDC  0847               	movf	(??_main+2)^(0+128),w
  1997  1FDD  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1998  1FDE  3090               	movlw	(low (_k| (0+256)))& (0+255)
  1999  1FDF  160A  118A  253E  160A  158A  	fcall	_sprintf
  2000  1FE4                     l3745:
  2001                           
  2002                           ;main.c: 139:         Lcd_Write_String(k);
  2003  1FE4  3090               	movlw	(low (_k| (0+256)))& (0+255)
  2004  1FE5  00F3               	movwf	Lcd_Write_String@a
  2005  1FE6  3001               	movlw	1
  2006  1FE7  00F4               	movwf	Lcd_Write_String@a+1
  2007  1FE8  160A  158A  2222  160A  158A  	fcall	_Lcd_Write_String
  2008  1FED                     l3747:
  2009                           
  2010                           ;main.c: 141:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  2011  1FED  3002               	movlw	2
  2012  1FEE  1683               	bsf	3,5	;RP0=1, select bank1
  2013  1FEF  1303               	bcf	3,6	;RP1=0, select bank1
  2014  1FF0  00C7               	movwf	(??_main^(0+128)+2)
  2015  1FF1  3004               	movlw	4
  2016  1FF2  00C6               	movwf	(??_main^(0+128)+1)
  2017  1FF3  30B9               	movlw	185
  2018  1FF4  00C5               	movwf	??_main^(0+128)
  2019  1FF5                     u5887:
  2020  1FF5  0BC5               	decfsz	??_main^(0+128),f
  2021  1FF6  2FF5               	goto	u5887
  2022  1FF7  0BC6               	decfsz	(??_main^(0+128)+1),f
  2023  1FF8  2FF5               	goto	u5887
  2024  1FF9  0BC7               	decfsz	(??_main^(0+128)+2),f
  2025  1FFA  2FF5               	goto	u5887
  2026  1FFB  2FFC               	nop2
  2027  1FFC  2E2F               	goto	l3661
  2028  1FFD  120A  118A  2800   	ljmp	start
  2029  2000                     __end_of_main:
  2030                           
  2031                           	psect	text1
  2032  153E                     __ptext1:	
  2033 ;; *************** function _sprintf *****************
  2034 ;; Defined at:
  2035 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  sp              1    wreg     PTR unsigned char 
  2038 ;;		 -> s(20), k(20), l(20), 
  2039 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2040 ;;		 -> STR_8(3), STR_6(7), STR_5(7), 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  2043 ;;		 -> s(20), k(20), l(20), 
  2044 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  2045 ;;  val             4   23[BANK1 ] unsigned long 
  2046 ;;  tmpval          4   19[BANK1 ] struct .
  2047 ;;  prec            2   34[BANK1 ] int 
  2048 ;;  eexp            2   27[BANK1 ] int 
  2049 ;;  width           2   17[BANK1 ] int 
  2050 ;;  flag            2   15[BANK1 ] unsigned short 
  2051 ;;  cp              2    0        PTR const unsigned char 
  2052 ;;  len             2    0        unsigned int 
  2053 ;;  c               1   36[BANK1 ] unsigned char 
  2054 ;;  ap              1   14[BANK1 ] PTR void [1]
  2055 ;;		 -> ?_sprintf(2), 
  2056 ;;  d               1    0        unsigned char 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  2    0[BANK1 ] int 
  2059 ;; Registers used:
  2060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         0       0       5       0       0
  2067 ;;      Locals:         0       0      27       0       0
  2068 ;;      Temps:          0       0       5       0       0
  2069 ;;      Totals:         0       0      37       0       0
  2070 ;;Total ram usage:       37 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    3
  2073 ;; This function calls:
  2074 ;;		___awdiv
  2075 ;;		___fladd
  2076 ;;		___fleq
  2077 ;;		___flge
  2078 ;;		___flmul
  2079 ;;		___flneg
  2080 ;;		___flsub
  2081 ;;		___fltol
  2082 ;;		___lldiv
  2083 ;;		___llmod
  2084 ;;		___wmul
  2085 ;;		___xxtofl
  2086 ;;		__div_to_l_
  2087 ;;		__tdiv_to_l_
  2088 ;;		_fround
  2089 ;;		_isdigit
  2090 ;;		_scale
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _sprintf
  2098  153E                     _sprintf:
  2099                           
  2100                           ;incstack = 0
  2101                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2102                           ;sprintf@sp stored from wreg
  2103  153E  1683               	bsf	3,5	;RP0=1, select bank1
  2104  153F  1303               	bcf	3,6	;RP1=0, select bank1
  2105  1540  00C1               	movwf	sprintf@sp^(0+128)
  2106  1541                     l3353:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2109  1541  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2110  1542  00A5               	movwf	??_sprintf^(0+128)
  2111  1543  0825               	movf	??_sprintf^(0+128),w
  2112  1544  00AE               	movwf	sprintf@ap^(0+128)
  2113  1545                     L1:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2116  1545  120A  118A  2FC5   	goto	l3635
  2117  1548                     l3355:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2120  1548  3025               	movlw	37
  2121  1549  0644               	xorwf	sprintf@c^(0+128),w
  2122  154A  1903               	btfsc	3,2
  2123  154B  2D4D               	goto	u5251
  2124  154C  2D4E               	goto	u5250
  2125  154D                     u5251:
  2126  154D  2D5A               	goto	l3361
  2127  154E                     u5250:
  2128  154E                     l3357:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2131  154E  0844               	movf	sprintf@c^(0+128),w
  2132  154F  00A5               	movwf	??_sprintf^(0+128)
  2133  1550  0841               	movf	sprintf@sp^(0+128),w
  2134  1551  0084               	movwf	4
  2135  1552  0825               	movf	??_sprintf^(0+128),w
  2136  1553  1783               	bsf	3,7	;select IRP bank2
  2137  1554  0080               	movwf	0
  2138  1555                     l3359:
  2139  1555  3001               	movlw	1
  2140  1556  00A5               	movwf	??_sprintf^(0+128)
  2141  1557  0825               	movf	??_sprintf^(0+128),w
  2142  1558  07C1               	addwf	sprintf@sp^(0+128),f
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2145  1559  2D45               	goto	L1
  2146  155A                     l3361:
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2149  155A  01B1               	clrf	sprintf@width^(0+128)
  2150  155B  01B2               	clrf	(sprintf@width+1)^(0+128)
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2153  155C  01AF               	clrf	sprintf@flag^(0+128)
  2154  155D  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2155  155E                     l3363:
  2156                           
  2157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2158  155E  0820               	movf	sprintf@f^(0+128),w
  2159  155F  0084               	movwf	4
  2160  1560  120A  118A  200D  160A  118A  	fcall	stringdir
  2161  1565  160A  158A  209D  160A  118A  	fcall	_isdigit
  2162  156A  1C03               	btfss	3,0
  2163  156B  2D6D               	goto	u5261
  2164  156C  2D6E               	goto	u5260
  2165  156D                     u5261:
  2166  156D  2DAE               	goto	l3375
  2167  156E                     u5260:
  2168  156E                     l3365:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2171  156E  1683               	bsf	3,5	;RP0=1, select bank1
  2172  156F  1303               	bcf	3,6	;RP1=0, select bank1
  2173  1570  01B1               	clrf	sprintf@width^(0+128)
  2174  1571  01B2               	clrf	(sprintf@width+1)^(0+128)
  2175  1572                     l3367:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2178  1572  300A               	movlw	10
  2179  1573  00F0               	movwf	___wmul@multiplier
  2180  1574  3000               	movlw	0
  2181  1575  00F1               	movwf	___wmul@multiplier+1
  2182  1576  1683               	bsf	3,5	;RP0=1, select bank1
  2183  1577  1303               	bcf	3,6	;RP1=0, select bank1
  2184  1578  0832               	movf	(sprintf@width+1)^(0+128),w
  2185  1579  00F3               	movwf	___wmul@multiplicand+1
  2186  157A  0831               	movf	sprintf@width^(0+128),w
  2187  157B  00F2               	movwf	___wmul@multiplicand
  2188  157C  160A  158A  215B  160A  118A  	fcall	___wmul
  2189  1581  0871               	movf	?___wmul+1,w
  2190  1582  1683               	bsf	3,5	;RP0=1, select bank1
  2191  1583  1303               	bcf	3,6	;RP1=0, select bank1
  2192  1584  00B2               	movwf	(sprintf@width+1)^(0+128)
  2193  1585  0870               	movf	?___wmul,w
  2194  1586  00B1               	movwf	sprintf@width^(0+128)
  2195  1587                     l3369:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2198  1587  0820               	movf	sprintf@f^(0+128),w
  2199  1588  0084               	movwf	4
  2200  1589  120A  118A  200D  160A  118A  	fcall	stringdir
  2201  158E  3ED0               	addlw	208
  2202  158F  00A5               	movwf	??_sprintf^(0+128)
  2203  1590  30FF               	movlw	255
  2204  1591  1803               	skipnc
  2205  1592  3000               	movlw	0
  2206  1593  00A6               	movwf	(??_sprintf^(0+128)+1)
  2207  1594  0825               	movf	??_sprintf^(0+128),w
  2208  1595  07B1               	addwf	sprintf@width^(0+128),f
  2209  1596  1803               	skipnc
  2210  1597  0AB2               	incf	(sprintf@width+1)^(0+128),f
  2211  1598  0826               	movf	(??_sprintf+1)^(0+128),w
  2212  1599  07B2               	addwf	(sprintf@width+1)^(0+128),f
  2213  159A                     l3371:
  2214  159A  3001               	movlw	1
  2215  159B  00A5               	movwf	??_sprintf^(0+128)
  2216  159C  0825               	movf	??_sprintf^(0+128),w
  2217  159D  07A0               	addwf	sprintf@f^(0+128),f
  2218  159E                     l3373:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2221  159E  0820               	movf	sprintf@f^(0+128),w
  2222  159F  0084               	movwf	4
  2223  15A0  120A  118A  200D  160A  118A  	fcall	stringdir
  2224  15A5  160A  158A  209D  160A  118A  	fcall	_isdigit
  2225  15AA  1803               	btfsc	3,0
  2226  15AB  2DAD               	goto	u5271
  2227  15AC  2DAE               	goto	u5270
  2228  15AD                     u5271:
  2229  15AD  2D72               	goto	l3367
  2230  15AE                     u5270:
  2231  15AE                     l3375:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2234  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  2235  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  2236  15B0  0820               	movf	sprintf@f^(0+128),w
  2237  15B1  0084               	movwf	4
  2238  15B2  120A  118A  200D  160A  118A  	fcall	stringdir
  2239  15B7  3A2E               	xorlw	46
  2240  15B8  1D03               	skipz
  2241  15B9  2DBB               	goto	u5281
  2242  15BA  2DBC               	goto	u5280
  2243  15BB                     u5281:
  2244  15BB  2E01               	goto	l3391
  2245  15BC                     u5280:
  2246  15BC                     l3377:
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2249  15BC  1730               	bsf	(sprintf@flag^(0+128)+1),6
  2250  15BD                     l3379:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2253  15BD  3001               	movlw	1
  2254  15BE  00A5               	movwf	??_sprintf^(0+128)
  2255  15BF  0825               	movf	??_sprintf^(0+128),w
  2256  15C0  07A0               	addwf	sprintf@f^(0+128),f
  2257  15C1                     l3381:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2260  15C1  01C2               	clrf	sprintf@prec^(0+128)
  2261  15C2  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2264  15C3  2DF0               	goto	l3389
  2265  15C4                     l3383:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2268  15C4  300A               	movlw	10
  2269  15C5  00F0               	movwf	___wmul@multiplier
  2270  15C6  3000               	movlw	0
  2271  15C7  00F1               	movwf	___wmul@multiplier+1
  2272  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  2273  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  2274  15CA  0843               	movf	(sprintf@prec+1)^(0+128),w
  2275  15CB  00F3               	movwf	___wmul@multiplicand+1
  2276  15CC  0842               	movf	sprintf@prec^(0+128),w
  2277  15CD  00F2               	movwf	___wmul@multiplicand
  2278  15CE  160A  158A  215B  160A  118A  	fcall	___wmul
  2279  15D3  0871               	movf	?___wmul+1,w
  2280  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  2281  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  2282  15D6  00C3               	movwf	(sprintf@prec+1)^(0+128)
  2283  15D7  0870               	movf	?___wmul,w
  2284  15D8  00C2               	movwf	sprintf@prec^(0+128)
  2285  15D9                     l3385:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2288  15D9  0820               	movf	sprintf@f^(0+128),w
  2289  15DA  0084               	movwf	4
  2290  15DB  120A  118A  200D  160A  118A  	fcall	stringdir
  2291  15E0  3ED0               	addlw	208
  2292  15E1  00A5               	movwf	??_sprintf^(0+128)
  2293  15E2  30FF               	movlw	255
  2294  15E3  1803               	skipnc
  2295  15E4  3000               	movlw	0
  2296  15E5  00A6               	movwf	(??_sprintf^(0+128)+1)
  2297  15E6  0825               	movf	??_sprintf^(0+128),w
  2298  15E7  07C2               	addwf	sprintf@prec^(0+128),f
  2299  15E8  1803               	skipnc
  2300  15E9  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  2301  15EA  0826               	movf	(??_sprintf+1)^(0+128),w
  2302  15EB  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  2303  15EC                     l3387:
  2304  15EC  3001               	movlw	1
  2305  15ED  00A5               	movwf	??_sprintf^(0+128)
  2306  15EE  0825               	movf	??_sprintf^(0+128),w
  2307  15EF  07A0               	addwf	sprintf@f^(0+128),f
  2308  15F0                     l3389:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2311  15F0  0820               	movf	sprintf@f^(0+128),w
  2312  15F1  0084               	movwf	4
  2313  15F2  120A  118A  200D  160A  118A  	fcall	stringdir
  2314  15F7  160A  158A  209D  160A  118A  	fcall	_isdigit
  2315  15FC  1803               	btfsc	3,0
  2316  15FD  2DFF               	goto	u5291
  2317  15FE  2E00               	goto	u5290
  2318  15FF                     u5291:
  2319  15FF  2DC4               	goto	l3383
  2320  1600                     u5290:
  2321  1600  2E07               	goto	l3397
  2322  1601                     l3391:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2325  1601  01C2               	clrf	sprintf@prec^(0+128)
  2326  1602  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2327  1603                     l3393:
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2330  1603  1630               	bsf	(sprintf@flag^(0+128)+1),4
  2331  1604  2E07               	goto	l3397
  2332  1605                     l336:	
  2333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2334                           
  2335                           
  2336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2337  1605  1530               	bsf	(sprintf@flag^(0+128)+1),2
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2340  1606  2E29               	goto	l3399
  2341  1607                     l3397:
  2342  1607  3001               	movlw	1
  2343  1608  1683               	bsf	3,5	;RP0=1, select bank1
  2344  1609  1303               	bcf	3,6	;RP1=0, select bank1
  2345  160A  07A0               	addwf	sprintf@f^(0+128),f
  2346  160B  30FF               	movlw	-1
  2347  160C  0720               	addwf	sprintf@f^(0+128),w
  2348  160D  0084               	movwf	4
  2349  160E  120A  118A  200D  160A  118A  	fcall	stringdir
  2350  1613  00C4               	movwf	sprintf@c^(0+128)
  2351  1614  00A5               	movwf	??_sprintf^(0+128)
  2352  1615  01A6               	clrf	(??_sprintf^(0+128)+1)
  2353                           
  2354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2355                           ; Switch size 1, requested type "simple"
  2356                           ; Number of cases is 1, Range of values is 0 to 0
  2357                           ; switch strategies available:
  2358                           ; Name         Instructions Cycles
  2359                           ; simple_byte            4     3 (average)
  2360                           ; direct_byte           11     8 (fixed)
  2361                           ; jumptable            260     6 (fixed)
  2362                           ;	Chosen strategy is simple_byte
  2363  1616  0826               	movf	(??_sprintf+1)^(0+128),w
  2364  1617  3A00               	xorlw	0	; case 0
  2365  1618  1903               	skipnz
  2366  1619  2E1B               	goto	l3779
  2367  161A  2D45               	goto	L1
  2368  161B                     l3779:
  2369                           
  2370                           ; Switch size 1, requested type "simple"
  2371                           ; Number of cases is 4, Range of values is 0 to 105
  2372                           ; switch strategies available:
  2373                           ; Name         Instructions Cycles
  2374                           ; simple_byte           13     7 (average)
  2375                           ; jumptable            260     6 (fixed)
  2376                           ;	Chosen strategy is simple_byte
  2377  161B  0825               	movf	??_sprintf^(0+128),w
  2378  161C  3A00               	xorlw	0	; case 0
  2379  161D  1903               	skipnz
  2380  161E  2FFD               	goto	L3
  2381  161F  3A64               	xorlw	100	; case 100
  2382  1620  1903               	skipnz
  2383  1621  2E29               	goto	l3399
  2384  1622  3A02               	xorlw	2	; case 102
  2385  1623  1903               	skipnz
  2386  1624  2E05               	goto	l336
  2387  1625  3A0F               	xorlw	15	; case 105
  2388  1626  1903               	skipnz
  2389  1627  2E29               	goto	l3399
  2390  1628  2D45               	goto	L1
  2391  1629                     l3399:
  2392                           
  2393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2394  1629  3000               	movlw	0
  2395  162A  052F               	andwf	sprintf@flag^(0+128),w
  2396  162B  00A5               	movwf	??_sprintf^(0+128)
  2397  162C  3007               	movlw	7
  2398  162D  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2399  162E  00A6               	movwf	(??_sprintf+1)^(0+128)
  2400  162F  0825               	movf	??_sprintf^(0+128),w
  2401  1630  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2402  1631  1903               	btfsc	3,2
  2403  1632  2E34               	goto	u5301
  2404  1633  2E37               	goto	u5300
  2405  1634                     u5301:
  2406  1634  120A  118A  2E28   	goto	l3557
  2407  1637                     u5300:
  2408  1637                     l3401:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2411  1637  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2412  1638  2E3A               	goto	u5311
  2413  1639  2E3B               	goto	u5310
  2414  163A                     u5311:
  2415  163A  2E3F               	goto	l3405
  2416  163B                     u5310:
  2417  163B                     l3403:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2420  163B  3006               	movlw	6
  2421  163C  00C2               	movwf	sprintf@prec^(0+128)
  2422  163D  3000               	movlw	0
  2423  163E  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2424  163F                     l3405:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2427  163F  082E               	movf	sprintf@ap^(0+128),w
  2428  1640  0084               	movwf	4
  2429  1641  1383               	bcf	3,7	;select IRP bank0
  2430  1642  0800               	movf	0,w
  2431  1643  00BD               	movwf	sprintf@fval^(0+128)
  2432  1644  0A84               	incf	4,f
  2433  1645  0800               	movf	0,w
  2434  1646  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2435  1647  0A84               	incf	4,f
  2436  1648  0800               	movf	0,w
  2437  1649  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2438  164A  0A84               	incf	4,f
  2439  164B  0800               	movf	0,w
  2440  164C  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2441  164D                     l3407:
  2442  164D  3004               	movlw	4
  2443  164E  00A5               	movwf	??_sprintf^(0+128)
  2444  164F  0825               	movf	??_sprintf^(0+128),w
  2445  1650  07AE               	addwf	sprintf@ap^(0+128),f
  2446  1651                     l3409:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2449  1651  0840               	movf	(sprintf@fval+3)^(0+128),w
  2450  1652  00F3               	movwf	___flge@ff1+3
  2451  1653  083F               	movf	(sprintf@fval+2)^(0+128),w
  2452  1654  00F2               	movwf	___flge@ff1+2
  2453  1655  083E               	movf	(sprintf@fval+1)^(0+128),w
  2454  1656  00F1               	movwf	___flge@ff1+1
  2455  1657  083D               	movf	sprintf@fval^(0+128),w
  2456  1658  00F0               	movwf	___flge@ff1
  2457  1659  3000               	movlw	0
  2458  165A  00F7               	movwf	___flge@ff2+3
  2459  165B  3000               	movlw	0
  2460  165C  00F6               	movwf	___flge@ff2+2
  2461  165D  3000               	movlw	0
  2462  165E  00F5               	movwf	___flge@ff2+1
  2463  165F  3000               	movlw	0
  2464  1660  00F4               	movwf	___flge@ff2
  2465  1661  160A  118A  2009  160A  118A  	fcall	___flge
  2466  1666  1803               	btfsc	3,0
  2467  1667  2E69               	goto	u5321
  2468  1668  2E6A               	goto	u5320
  2469  1669                     u5321:
  2470  1669  2E87               	goto	l3415
  2471  166A                     u5320:
  2472  166A                     l3411:
  2473                           
  2474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2475  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2476  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2477  166C  0840               	movf	(sprintf@fval+3)^(0+128),w
  2478  166D  00F3               	movwf	___flneg@f1+3
  2479  166E  083F               	movf	(sprintf@fval+2)^(0+128),w
  2480  166F  00F2               	movwf	___flneg@f1+2
  2481  1670  083E               	movf	(sprintf@fval+1)^(0+128),w
  2482  1671  00F1               	movwf	___flneg@f1+1
  2483  1672  083D               	movf	sprintf@fval^(0+128),w
  2484  1673  00F0               	movwf	___flneg@f1
  2485  1674  160A  158A  2074  160A  118A  	fcall	___flneg
  2486  1679  0873               	movf	?___flneg+3,w
  2487  167A  1683               	bsf	3,5	;RP0=1, select bank1
  2488  167B  1303               	bcf	3,6	;RP1=0, select bank1
  2489  167C  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2490  167D  0872               	movf	?___flneg+2,w
  2491  167E  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2492  167F  0871               	movf	?___flneg+1,w
  2493  1680  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2494  1681  0870               	movf	?___flneg,w
  2495  1682  00BD               	movwf	sprintf@fval^(0+128)
  2496  1683                     l3413:
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2499  1683  3003               	movlw	3
  2500  1684  04AF               	iorwf	sprintf@flag^(0+128),f
  2501  1685  3000               	movlw	0
  2502  1686  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2503  1687                     l3415:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2506  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2507  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2508  1689  01BB               	clrf	sprintf@eexp^(0+128)
  2509  168A  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2510  168B                     l3417:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2513  168B  0840               	movf	(sprintf@fval+3)^(0+128),w
  2514  168C  00F3               	movwf	___fleq@ff1+3
  2515  168D  083F               	movf	(sprintf@fval+2)^(0+128),w
  2516  168E  00F2               	movwf	___fleq@ff1+2
  2517  168F  083E               	movf	(sprintf@fval+1)^(0+128),w
  2518  1690  00F1               	movwf	___fleq@ff1+1
  2519  1691  083D               	movf	sprintf@fval^(0+128),w
  2520  1692  00F0               	movwf	___fleq@ff1
  2521  1693  3000               	movlw	0
  2522  1694  00F7               	movwf	___fleq@ff2+3
  2523  1695  3000               	movlw	0
  2524  1696  00F6               	movwf	___fleq@ff2+2
  2525  1697  3000               	movlw	0
  2526  1698  00F5               	movwf	___fleq@ff2+1
  2527  1699  3000               	movlw	0
  2528  169A  00F4               	movwf	___fleq@ff2
  2529  169B  160A  158A  2264  160A  118A  	fcall	___fleq
  2530  16A0  1803               	btfsc	3,0
  2531  16A1  2EA3               	goto	u5331
  2532  16A2  2EA4               	goto	u5330
  2533  16A3                     u5331:
  2534  16A3  2F94               	goto	l3443
  2535  16A4                     u5330:
  2536  16A4                     l3419:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2539  16A4  1003               	clrc
  2540  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2541  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2542  16A7  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2543  16A8  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2544  16A9  3E82               	addlw	130
  2545  16AA  00BB               	movwf	sprintf@eexp^(0+128)
  2546  16AB  30FF               	movlw	255
  2547  16AC  1803               	skipnc
  2548  16AD  3000               	movlw	0
  2549  16AE  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2550  16AF                     l3421:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2553  16AF  30FF               	movlw	255
  2554  16B0  07BB               	addwf	sprintf@eexp^(0+128),f
  2555  16B1  1803               	skipnc
  2556  16B2  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2557  16B3  30FF               	movlw	255
  2558  16B4  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2559  16B5                     l3423:
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2562  16B5  3003               	movlw	3
  2563  16B6  00F0               	movwf	___wmul@multiplier
  2564  16B7  3000               	movlw	0
  2565  16B8  00F1               	movwf	___wmul@multiplier+1
  2566  16B9  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2567  16BA  00F3               	movwf	___wmul@multiplicand+1
  2568  16BB  083B               	movf	sprintf@eexp^(0+128),w
  2569  16BC  00F2               	movwf	___wmul@multiplicand
  2570  16BD  160A  158A  215B  160A  118A  	fcall	___wmul
  2571  16C2  0871               	movf	?___wmul+1,w
  2572  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2573  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2574  16C5  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2575  16C6  0870               	movf	?___wmul,w
  2576  16C7  00BB               	movwf	sprintf@eexp^(0+128)
  2577  16C8                     l3425:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2580  16C8  300A               	movlw	10
  2581  16C9  00F7               	movwf	___awdiv@divisor
  2582  16CA  3000               	movlw	0
  2583  16CB  00F8               	movwf	___awdiv@divisor+1
  2584  16CC  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2585  16CD  00FA               	movwf	___awdiv@dividend+1
  2586  16CE  083B               	movf	sprintf@eexp^(0+128),w
  2587  16CF  00F9               	movwf	___awdiv@dividend
  2588  16D0  160A  158A  247F  160A  118A  	fcall	___awdiv
  2589  16D5  0878               	movf	?___awdiv+1,w
  2590  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2591  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2592  16D8  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2593  16D9  0877               	movf	?___awdiv,w
  2594  16DA  00BB               	movwf	sprintf@eexp^(0+128)
  2595  16DB                     l3427:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2598  16DB  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  2599  16DC  2EDE               	goto	u5341
  2600  16DD  2EDF               	goto	u5340
  2601  16DE                     u5341:
  2602  16DE  2EE5               	goto	l3431
  2603  16DF                     u5340:
  2604  16DF                     l3429:
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2607  16DF  30FF               	movlw	255
  2608  16E0  07BB               	addwf	sprintf@eexp^(0+128),f
  2609  16E1  1803               	skipnc
  2610  16E2  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2611  16E3  30FF               	movlw	255
  2612  16E4  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2613  16E5                     l3431:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2616  16E5  033B               	decf	sprintf@eexp^(0+128),w
  2617  16E6  3AFF               	xorlw	255
  2618  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2619  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2620  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2621  16EE  0841               	movf	?_scale+3,w
  2622  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2623  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2624  16F1  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2625  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2626  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2627  16F4  0840               	movf	?_scale+2,w
  2628  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2629  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2630  16F7  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2631  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2632  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2633  16FA  083F               	movf	?_scale+1,w
  2634  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2635  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2636  16FD  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2637  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2638  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2639  1700  083E               	movf	?_scale,w
  2640  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2641  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2642  1703  00B3               	movwf	sprintf@tmpval^(0+128)
  2643  1704                     l3433:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2646  1704  0840               	movf	(sprintf@fval+3)^(0+128),w
  2647  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2648  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2649  1707  00A7               	movwf	___flmul@b+3
  2650  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2651  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2652  170A  083F               	movf	(sprintf@fval+2)^(0+128),w
  2653  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2654  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2655  170D  00A6               	movwf	___flmul@b+2
  2656  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2657  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2658  1710  083E               	movf	(sprintf@fval+1)^(0+128),w
  2659  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2660  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2661  1713  00A5               	movwf	___flmul@b+1
  2662  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2663  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2664  1716  083D               	movf	sprintf@fval^(0+128),w
  2665  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2666  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2667  1719  00A4               	movwf	___flmul@b
  2668  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2669  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2670  171C  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2671  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2672  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2673  171F  00AB               	movwf	___flmul@a+3
  2674  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2675  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2676  1722  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2677  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2678  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2679  1725  00AA               	movwf	___flmul@a+2
  2680  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2681  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2682  1728  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2683  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2684  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2685  172B  00A9               	movwf	___flmul@a+1
  2686  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2687  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2688  172E  0833               	movf	sprintf@tmpval^(0+128),w
  2689  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2690  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2691  1731  00A8               	movwf	___flmul@a
  2692  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2693  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2694  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2695  1739  0827               	movf	?___flmul+3,w
  2696  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2697  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2698  173C  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2699  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2700  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2701  173F  0826               	movf	?___flmul+2,w
  2702  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2703  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2704  1742  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2705  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2706  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2707  1745  0825               	movf	?___flmul+1,w
  2708  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2709  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2710  1748  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2711  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2712  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2713  174B  0824               	movf	?___flmul,w
  2714  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2715  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2716  174E  00B3               	movwf	sprintf@tmpval^(0+128)
  2717  174F                     l3435:
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2720  174F  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2721  1750  00F3               	movwf	___flge@ff1+3
  2722  1751  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2723  1752  00F2               	movwf	___flge@ff1+2
  2724  1753  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2725  1754  00F1               	movwf	___flge@ff1+1
  2726  1755  0833               	movf	sprintf@tmpval^(0+128),w
  2727  1756  00F0               	movwf	___flge@ff1
  2728  1757  303F               	movlw	63
  2729  1758  00F7               	movwf	___flge@ff2+3
  2730  1759  3080               	movlw	128
  2731  175A  00F6               	movwf	___flge@ff2+2
  2732  175B  3000               	movlw	0
  2733  175C  00F5               	movwf	___flge@ff2+1
  2734  175D  3000               	movlw	0
  2735  175E  00F4               	movwf	___flge@ff2
  2736  175F  160A  118A  2009  160A  118A  	fcall	___flge
  2737  1764  1803               	btfsc	3,0
  2738  1765  2F67               	goto	u5351
  2739  1766  2F68               	goto	u5350
  2740  1767                     u5351:
  2741  1767  2F71               	goto	l3439
  2742  1768                     u5350:
  2743  1768                     l3437:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2746  1768  30FF               	movlw	255
  2747  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2748  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2749  176B  07BB               	addwf	sprintf@eexp^(0+128),f
  2750  176C  1803               	skipnc
  2751  176D  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2752  176E  30FF               	movlw	255
  2753  176F  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2754  1770  2F94               	goto	l3443
  2755  1771                     l3439:
  2756  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2757  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2758  1773  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2759  1774  00F3               	movwf	___flge@ff1+3
  2760  1775  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2761  1776  00F2               	movwf	___flge@ff1+2
  2762  1777  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2763  1778  00F1               	movwf	___flge@ff1+1
  2764  1779  0833               	movf	sprintf@tmpval^(0+128),w
  2765  177A  00F0               	movwf	___flge@ff1
  2766  177B  3041               	movlw	65
  2767  177C  00F7               	movwf	___flge@ff2+3
  2768  177D  3020               	movlw	32
  2769  177E  00F6               	movwf	___flge@ff2+2
  2770  177F  3000               	movlw	0
  2771  1780  00F5               	movwf	___flge@ff2+1
  2772  1781  3000               	movlw	0
  2773  1782  00F4               	movwf	___flge@ff2
  2774  1783  160A  118A  2009  160A  118A  	fcall	___flge
  2775  1788  1C03               	btfss	3,0
  2776  1789  2F8B               	goto	u5361
  2777  178A  2F8C               	goto	u5360
  2778  178B                     u5361:
  2779  178B  2F94               	goto	l3443
  2780  178C                     u5360:
  2781  178C                     l3441:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2784  178C  3001               	movlw	1
  2785  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2786  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2787  178F  07BB               	addwf	sprintf@eexp^(0+128),f
  2788  1790  1803               	skipnc
  2789  1791  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2790  1792  3000               	movlw	0
  2791  1793  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2792  1794                     l3443:
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2795  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2796  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2797  1796  0843               	movf	(sprintf@prec+1)^(0+128),w
  2798  1797  3A80               	xorlw	128
  2799  1798  00FF               	movwf	btemp+1
  2800  1799  3080               	movlw	128
  2801  179A  027F               	subwf	btemp+1,w
  2802  179B  1D03               	skipz
  2803  179C  2F9F               	goto	u5375
  2804  179D  300D               	movlw	13
  2805  179E  0242               	subwf	sprintf@prec^(0+128),w
  2806  179F                     u5375:
  2807  179F  1803               	skipnc
  2808  17A0  2FA2               	goto	u5371
  2809  17A1  2FA3               	goto	u5370
  2810  17A2                     u5371:
  2811  17A2  2FEA               	goto	l3447
  2812  17A3                     u5370:
  2813  17A3                     l3445:
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2816  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2817  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2818  17A5  0842               	movf	sprintf@prec^(0+128),w
  2819  17A6  160A  118A  20AB  160A  118A  	fcall	_fround
  2820  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2821  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2822  17AD  0841               	movf	?_fround+3,w
  2823  17AE  00D5               	movwf	___fladd@b+3
  2824  17AF  0840               	movf	?_fround+2,w
  2825  17B0  00D4               	movwf	___fladd@b+2
  2826  17B1  083F               	movf	?_fround+1,w
  2827  17B2  00D3               	movwf	___fladd@b+1
  2828  17B3  083E               	movf	?_fround,w
  2829  17B4  00D2               	movwf	___fladd@b
  2830  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2831  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2832  17B7  0840               	movf	(sprintf@fval+3)^(0+128),w
  2833  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2834  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2835  17BA  00D9               	movwf	___fladd@a+3
  2836  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2837  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2838  17BD  083F               	movf	(sprintf@fval+2)^(0+128),w
  2839  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2840  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2841  17C0  00D8               	movwf	___fladd@a+2
  2842  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2843  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2844  17C3  083E               	movf	(sprintf@fval+1)^(0+128),w
  2845  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2846  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2847  17C6  00D7               	movwf	___fladd@a+1
  2848  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2849  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2850  17C9  083D               	movf	sprintf@fval^(0+128),w
  2851  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2852  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2853  17CC  00D6               	movwf	___fladd@a
  2854  17CD  160A  118A  22B6  160A  118A  	fcall	___fladd
  2855  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2856  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2857  17D4  0855               	movf	?___fladd+3,w
  2858  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2859  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2860  17D7  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2861  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2862  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2863  17DA  0854               	movf	?___fladd+2,w
  2864  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2865  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2866  17DD  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2867  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2868  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2869  17E0  0853               	movf	?___fladd+1,w
  2870  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2871  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2872  17E3  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2873  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2874  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2875  17E6  0852               	movf	?___fladd,w
  2876  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2877  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2878  17E9  00BD               	movwf	sprintf@fval^(0+128)
  2879  17EA                     l3447:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2882  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2883  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2884  17EC  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2885  17ED  3A80               	xorlw	128
  2886  17EE  00FF               	movwf	btemp+1
  2887  17EF  3080               	movlw	128
  2888  17F0  027F               	subwf	btemp+1,w
  2889  17F1  1D03               	skipz
  2890  17F2  2FF5               	goto	u5385
  2891  17F3  300A               	movlw	10
  2892  17F4  023B               	subwf	sprintf@eexp^(0+128),w
  2893  17F5                     u5385:
  2894  17F5  1803               	skipnc
  2895  17F6  2FFA               	goto	u5381
  2896  17F7  120A  118A  29D8   	goto	u5380
  2897  17FA                     u5381:
  2898  17FA  120A  118A  2A29   	goto	l3455
  2899  17FD                     L3:
  2900  17FD                     L2:
  2901  17FD  120A  118A  2FD9   	ljmp	l3637
  2902                           
  2903                           	psect	text2
  2904  0940                     __ptext2:	
  2905 ;; *************** function _scale *****************
  2906 ;; Defined at:
  2907 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  scl             1    wreg     char 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  scl             1   48[BANK0 ] char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  4   30[BANK0 ] char 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       4       0       0       0
  2922 ;;      Locals:         0       5       0       0       0
  2923 ;;      Temps:          0      10       0       0       0
  2924 ;;      Totals:         0      19       0       0       0
  2925 ;;Total ram usage:       19 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    2
  2928 ;; This function calls:
  2929 ;;		___awdiv
  2930 ;;		___awmod
  2931 ;;		___flmul
  2932 ;; This function is called by:
  2933 ;;		_sprintf
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function _scale
  2939  0940                     _scale:
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2943                           ;scale@scl stored from wreg
  2944  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0942  00D0               	movwf	scale@scl
  2947  0943                     l2911:
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2950  0943  1FD0               	btfss	scale@scl,7
  2951  0944  2946               	goto	u4171
  2952  0945  2947               	goto	u4170
  2953  0946                     u4171:
  2954  0946  2AF4               	goto	l2933
  2955  0947                     u4170:
  2956  0947                     l2913:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2959  0947  09D0               	comf	scale@scl,f
  2960  0948  0AD0               	incf	scale@scl,f
  2961  0949                     l2915:
  2962                           
  2963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2964  0949  0850               	movf	scale@scl,w
  2965  094A  3A80               	xorlw	128
  2966  094B  3E12               	addlw	-238
  2967  094C  1C03               	skipc
  2968  094D  294F               	goto	u4181
  2969  094E  2950               	goto	u4180
  2970  094F                     u4181:
  2971  094F  2A38               	goto	l2923
  2972  0950                     u4180:
  2973  0950                     l2917:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2976  0950  300A               	movlw	10
  2977  0951  00F7               	movwf	___awdiv@divisor
  2978  0952  3000               	movlw	0
  2979  0953  00F8               	movwf	___awdiv@divisor+1
  2980  0954  0850               	movf	scale@scl,w
  2981  0955  00F2               	movwf	___awmod@dividend
  2982  0956  01F3               	clrf	___awmod@dividend+1
  2983  0957  1BF2               	btfsc	___awmod@dividend,7
  2984  0958  03F3               	decf	___awmod@dividend+1,f
  2985  0959  3064               	movlw	100
  2986  095A  00F0               	movwf	___awmod@divisor
  2987  095B  3000               	movlw	0
  2988  095C  00F1               	movwf	___awmod@divisor+1
  2989  095D  160A  158A  2308  120A  158A  	fcall	___awmod
  2990  0962  0871               	movf	?___awmod+1,w
  2991  0963  00FA               	movwf	___awdiv@dividend+1
  2992  0964  0870               	movf	?___awmod,w
  2993  0965  00F9               	movwf	___awdiv@dividend
  2994  0966  160A  158A  247F  120A  158A  	fcall	___awdiv
  2995  096B  0877               	movf	?___awdiv,w
  2996  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2997  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2998  096E  00C2               	movwf	??_scale
  2999  096F  3001               	movlw	1
  3000  0970                     u4195:
  3001  0970  1003               	clrc
  3002  0971  0DC2               	rlf	??_scale,f
  3003  0972  3EFF               	addlw	-1
  3004  0973  1D03               	skipz
  3005  0974  2970               	goto	u4195
  3006  0975  1003               	clrc
  3007  0976  0D42               	rlf	??_scale,w
  3008  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3009  0978  0084               	movwf	4
  3010  0979  120A  118A  200D  120A  158A  	fcall	stringdir
  3011  097E  00C3               	movwf	??_scale+1
  3012  097F  120A  118A  200D  120A  158A  	fcall	stringdir
  3013  0984  00C4               	movwf	??_scale+2
  3014  0985  120A  118A  200D  120A  158A  	fcall	stringdir
  3015  098A  00C5               	movwf	??_scale+3
  3016  098B  120A  118A  200D  120A  158A  	fcall	stringdir
  3017  0990  00C6               	movwf	??_scale+4
  3018  0991  0846               	movf	??_scale+4,w
  3019  0992  00A7               	movwf	___flmul@b+3
  3020  0993  0845               	movf	??_scale+3,w
  3021  0994  00A6               	movwf	___flmul@b+2
  3022  0995  0844               	movf	??_scale+2,w
  3023  0996  00A5               	movwf	___flmul@b+1
  3024  0997  0843               	movf	??_scale+1,w
  3025  0998  00A4               	movwf	___flmul@b
  3026  0999  3064               	movlw	100
  3027  099A  00F7               	movwf	___awdiv@divisor
  3028  099B  3000               	movlw	0
  3029  099C  00F8               	movwf	___awdiv@divisor+1
  3030  099D  0850               	movf	scale@scl,w
  3031  099E  00F9               	movwf	___awdiv@dividend
  3032  099F  01FA               	clrf	___awdiv@dividend+1
  3033  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3034  09A1  03FA               	decf	___awdiv@dividend+1,f
  3035  09A2  160A  158A  247F  120A  158A  	fcall	___awdiv
  3036  09A7  0877               	movf	?___awdiv,w
  3037  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3038  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3039  09AA  00C7               	movwf	??_scale+5
  3040  09AB  3001               	movlw	1
  3041  09AC                     u4205:
  3042  09AC  1003               	clrc
  3043  09AD  0DC7               	rlf	??_scale+5,f
  3044  09AE  3EFF               	addlw	-1
  3045  09AF  1D03               	skipz
  3046  09B0  29AC               	goto	u4205
  3047  09B1  1003               	clrc
  3048  09B2  0D47               	rlf	??_scale+5,w
  3049  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3050  09B4  0084               	movwf	4
  3051  09B5  120A  118A  200D  120A  158A  	fcall	stringdir
  3052  09BA  00C8               	movwf	??_scale+6
  3053  09BB  120A  118A  200D  120A  158A  	fcall	stringdir
  3054  09C0  00C9               	movwf	??_scale+7
  3055  09C1  120A  118A  200D  120A  158A  	fcall	stringdir
  3056  09C6  00CA               	movwf	??_scale+8
  3057  09C7  120A  118A  200D  120A  158A  	fcall	stringdir
  3058  09CC  00CB               	movwf	??_scale+9
  3059  09CD  084B               	movf	??_scale+9,w
  3060  09CE  00AB               	movwf	___flmul@a+3
  3061  09CF  084A               	movf	??_scale+8,w
  3062  09D0  00AA               	movwf	___flmul@a+2
  3063  09D1  0849               	movf	??_scale+7,w
  3064  09D2  00A9               	movwf	___flmul@a+1
  3065  09D3  0848               	movf	??_scale+6,w
  3066  09D4  00A8               	movwf	___flmul@a
  3067  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3068  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3069  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3070  09DC  0827               	movf	?___flmul+3,w
  3071  09DD  00CF               	movwf	_scale$1216+3
  3072  09DE  0826               	movf	?___flmul+2,w
  3073  09DF  00CE               	movwf	_scale$1216+2
  3074  09E0  0825               	movf	?___flmul+1,w
  3075  09E1  00CD               	movwf	_scale$1216+1
  3076  09E2  0824               	movf	?___flmul,w
  3077  09E3  00CC               	movwf	_scale$1216
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3080  09E4  300A               	movlw	10
  3081  09E5  00F0               	movwf	___awmod@divisor
  3082  09E6  3000               	movlw	0
  3083  09E7  00F1               	movwf	___awmod@divisor+1
  3084  09E8  0850               	movf	scale@scl,w
  3085  09E9  00F2               	movwf	___awmod@dividend
  3086  09EA  01F3               	clrf	___awmod@dividend+1
  3087  09EB  1BF2               	btfsc	___awmod@dividend,7
  3088  09EC  03F3               	decf	___awmod@dividend+1,f
  3089  09ED  160A  158A  2308  120A  158A  	fcall	___awmod
  3090  09F2  0870               	movf	?___awmod,w
  3091  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3092  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3093  09F5  00C2               	movwf	??_scale
  3094  09F6  3001               	movlw	1
  3095  09F7                     u4215:
  3096  09F7  1003               	clrc
  3097  09F8  0DC2               	rlf	??_scale,f
  3098  09F9  3EFF               	addlw	-1
  3099  09FA  1D03               	skipz
  3100  09FB  29F7               	goto	u4215
  3101  09FC  1003               	clrc
  3102  09FD  0D42               	rlf	??_scale,w
  3103  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3104  09FF  0084               	movwf	4
  3105  0A00  120A  118A  200D  120A  158A  	fcall	stringdir
  3106  0A05  00C3               	movwf	??_scale+1
  3107  0A06  120A  118A  200D  120A  158A  	fcall	stringdir
  3108  0A0B  00C4               	movwf	??_scale+2
  3109  0A0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3110  0A11  00C5               	movwf	??_scale+3
  3111  0A12  120A  118A  200D  120A  158A  	fcall	stringdir
  3112  0A17  00C6               	movwf	??_scale+4
  3113  0A18  0846               	movf	??_scale+4,w
  3114  0A19  00A7               	movwf	___flmul@b+3
  3115  0A1A  0845               	movf	??_scale+3,w
  3116  0A1B  00A6               	movwf	___flmul@b+2
  3117  0A1C  0844               	movf	??_scale+2,w
  3118  0A1D  00A5               	movwf	___flmul@b+1
  3119  0A1E  0843               	movf	??_scale+1,w
  3120  0A1F  00A4               	movwf	___flmul@b
  3121  0A20  084F               	movf	_scale$1216+3,w
  3122  0A21  00AB               	movwf	___flmul@a+3
  3123  0A22  084E               	movf	_scale$1216+2,w
  3124  0A23  00AA               	movwf	___flmul@a+2
  3125  0A24  084D               	movf	_scale$1216+1,w
  3126  0A25  00A9               	movwf	___flmul@a+1
  3127  0A26  084C               	movf	_scale$1216,w
  3128  0A27  00A8               	movwf	___flmul@a
  3129  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3130  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0A2F  0827               	movf	?___flmul+3,w
  3133  0A30  00C1               	movwf	?_scale+3
  3134  0A31  0826               	movf	?___flmul+2,w
  3135  0A32  00C0               	movwf	?_scale+2
  3136  0A33  0825               	movf	?___flmul+1,w
  3137  0A34  00BF               	movwf	?_scale+1
  3138  0A35  0824               	movf	?___flmul,w
  3139  0A36  00BE               	movwf	?_scale
  3140  0A37  2C9E               	goto	l314
  3141  0A38                     l2923:
  3142  0A38  0850               	movf	scale@scl,w
  3143  0A39  3A80               	xorlw	128
  3144  0A3A  3E75               	addlw	-139
  3145  0A3B  1C03               	skipc
  3146  0A3C  2A3E               	goto	u4221
  3147  0A3D  2A3F               	goto	u4220
  3148  0A3E                     u4221:
  3149  0A3E  2AC7               	goto	l2929
  3150  0A3F                     u4220:
  3151  0A3F                     l2925:
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3154  0A3F  300A               	movlw	10
  3155  0A40  00F0               	movwf	___awmod@divisor
  3156  0A41  3000               	movlw	0
  3157  0A42  00F1               	movwf	___awmod@divisor+1
  3158  0A43  0850               	movf	scale@scl,w
  3159  0A44  00F2               	movwf	___awmod@dividend
  3160  0A45  01F3               	clrf	___awmod@dividend+1
  3161  0A46  1BF2               	btfsc	___awmod@dividend,7
  3162  0A47  03F3               	decf	___awmod@dividend+1,f
  3163  0A48  160A  158A  2308  120A  158A  	fcall	___awmod
  3164  0A4D  0870               	movf	?___awmod,w
  3165  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0A50  00C2               	movwf	??_scale
  3168  0A51  3001               	movlw	1
  3169  0A52                     u4235:
  3170  0A52  1003               	clrc
  3171  0A53  0DC2               	rlf	??_scale,f
  3172  0A54  3EFF               	addlw	-1
  3173  0A55  1D03               	skipz
  3174  0A56  2A52               	goto	u4235
  3175  0A57  1003               	clrc
  3176  0A58  0D42               	rlf	??_scale,w
  3177  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3178  0A5A  0084               	movwf	4
  3179  0A5B  120A  118A  200D  120A  158A  	fcall	stringdir
  3180  0A60  00C3               	movwf	??_scale+1
  3181  0A61  120A  118A  200D  120A  158A  	fcall	stringdir
  3182  0A66  00C4               	movwf	??_scale+2
  3183  0A67  120A  118A  200D  120A  158A  	fcall	stringdir
  3184  0A6C  00C5               	movwf	??_scale+3
  3185  0A6D  120A  118A  200D  120A  158A  	fcall	stringdir
  3186  0A72  00C6               	movwf	??_scale+4
  3187  0A73  0846               	movf	??_scale+4,w
  3188  0A74  00A7               	movwf	___flmul@b+3
  3189  0A75  0845               	movf	??_scale+3,w
  3190  0A76  00A6               	movwf	___flmul@b+2
  3191  0A77  0844               	movf	??_scale+2,w
  3192  0A78  00A5               	movwf	___flmul@b+1
  3193  0A79  0843               	movf	??_scale+1,w
  3194  0A7A  00A4               	movwf	___flmul@b
  3195  0A7B  300A               	movlw	10
  3196  0A7C  00F7               	movwf	___awdiv@divisor
  3197  0A7D  3000               	movlw	0
  3198  0A7E  00F8               	movwf	___awdiv@divisor+1
  3199  0A7F  0850               	movf	scale@scl,w
  3200  0A80  00F9               	movwf	___awdiv@dividend
  3201  0A81  01FA               	clrf	___awdiv@dividend+1
  3202  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3203  0A83  03FA               	decf	___awdiv@dividend+1,f
  3204  0A84  160A  158A  247F  120A  158A  	fcall	___awdiv
  3205  0A89  0877               	movf	?___awdiv,w
  3206  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0A8C  00C7               	movwf	??_scale+5
  3209  0A8D  3001               	movlw	1
  3210  0A8E                     u4245:
  3211  0A8E  1003               	clrc
  3212  0A8F  0DC7               	rlf	??_scale+5,f
  3213  0A90  3EFF               	addlw	-1
  3214  0A91  1D03               	skipz
  3215  0A92  2A8E               	goto	u4245
  3216  0A93  1003               	clrc
  3217  0A94  0D47               	rlf	??_scale+5,w
  3218  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3219  0A96  0084               	movwf	4
  3220  0A97  120A  118A  200D  120A  158A  	fcall	stringdir
  3221  0A9C  00C8               	movwf	??_scale+6
  3222  0A9D  120A  118A  200D  120A  158A  	fcall	stringdir
  3223  0AA2  00C9               	movwf	??_scale+7
  3224  0AA3  120A  118A  200D  120A  158A  	fcall	stringdir
  3225  0AA8  00CA               	movwf	??_scale+8
  3226  0AA9  120A  118A  200D  120A  158A  	fcall	stringdir
  3227  0AAE  00CB               	movwf	??_scale+9
  3228  0AAF  084B               	movf	??_scale+9,w
  3229  0AB0  00AB               	movwf	___flmul@a+3
  3230  0AB1  084A               	movf	??_scale+8,w
  3231  0AB2  00AA               	movwf	___flmul@a+2
  3232  0AB3  0849               	movf	??_scale+7,w
  3233  0AB4  00A9               	movwf	___flmul@a+1
  3234  0AB5  0848               	movf	??_scale+6,w
  3235  0AB6  00A8               	movwf	___flmul@a
  3236  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3237  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3238  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3239  0ABE  0827               	movf	?___flmul+3,w
  3240  0ABF  00C1               	movwf	?_scale+3
  3241  0AC0  0826               	movf	?___flmul+2,w
  3242  0AC1  00C0               	movwf	?_scale+2
  3243  0AC2  0825               	movf	?___flmul+1,w
  3244  0AC3  00BF               	movwf	?_scale+1
  3245  0AC4  0824               	movf	?___flmul,w
  3246  0AC5  00BE               	movwf	?_scale
  3247  0AC6  2C9E               	goto	l314
  3248  0AC7                     l2929:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3251  0AC7  0850               	movf	scale@scl,w
  3252  0AC8  00C2               	movwf	??_scale
  3253  0AC9  3001               	movlw	1
  3254  0ACA                     u4255:
  3255  0ACA  1003               	clrc
  3256  0ACB  0DC2               	rlf	??_scale,f
  3257  0ACC  3EFF               	addlw	-1
  3258  0ACD  1D03               	skipz
  3259  0ACE  2ACA               	goto	u4255
  3260  0ACF  1003               	clrc
  3261  0AD0  0D42               	rlf	??_scale,w
  3262  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3263  0AD2  0084               	movwf	4
  3264  0AD3  120A  118A  200D  120A  158A  	fcall	stringdir
  3265  0AD8  00C3               	movwf	??_scale+1
  3266  0AD9  120A  118A  200D  120A  158A  	fcall	stringdir
  3267  0ADE  00C4               	movwf	??_scale+2
  3268  0ADF  120A  118A  200D  120A  158A  	fcall	stringdir
  3269  0AE4  00C5               	movwf	??_scale+3
  3270  0AE5  120A  118A  200D  120A  158A  	fcall	stringdir
  3271  0AEA  00C6               	movwf	??_scale+4
  3272  0AEB  0846               	movf	??_scale+4,w
  3273  0AEC  00C1               	movwf	?_scale+3
  3274  0AED  0845               	movf	??_scale+3,w
  3275  0AEE  00C0               	movwf	?_scale+2
  3276  0AEF  0844               	movf	??_scale+2,w
  3277  0AF0  00BF               	movwf	?_scale+1
  3278  0AF1  0843               	movf	??_scale+1,w
  3279  0AF2  00BE               	movwf	?_scale
  3280  0AF3  2C9E               	goto	l314
  3281  0AF4                     l2933:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3284  0AF4  0850               	movf	scale@scl,w
  3285  0AF5  3A80               	xorlw	128
  3286  0AF6  3E12               	addlw	-238
  3287  0AF7  1C03               	skipc
  3288  0AF8  2AFA               	goto	u4261
  3289  0AF9  2AFB               	goto	u4260
  3290  0AFA                     u4261:
  3291  0AFA  2BE3               	goto	l2941
  3292  0AFB                     u4260:
  3293  0AFB                     l2935:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3296  0AFB  300A               	movlw	10
  3297  0AFC  00F7               	movwf	___awdiv@divisor
  3298  0AFD  3000               	movlw	0
  3299  0AFE  00F8               	movwf	___awdiv@divisor+1
  3300  0AFF  0850               	movf	scale@scl,w
  3301  0B00  00F2               	movwf	___awmod@dividend
  3302  0B01  01F3               	clrf	___awmod@dividend+1
  3303  0B02  1BF2               	btfsc	___awmod@dividend,7
  3304  0B03  03F3               	decf	___awmod@dividend+1,f
  3305  0B04  3064               	movlw	100
  3306  0B05  00F0               	movwf	___awmod@divisor
  3307  0B06  3000               	movlw	0
  3308  0B07  00F1               	movwf	___awmod@divisor+1
  3309  0B08  160A  158A  2308  120A  158A  	fcall	___awmod
  3310  0B0D  0871               	movf	?___awmod+1,w
  3311  0B0E  00FA               	movwf	___awdiv@dividend+1
  3312  0B0F  0870               	movf	?___awmod,w
  3313  0B10  00F9               	movwf	___awdiv@dividend
  3314  0B11  160A  158A  247F  120A  158A  	fcall	___awdiv
  3315  0B16  0877               	movf	?___awdiv,w
  3316  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3318  0B19  00C2               	movwf	??_scale
  3319  0B1A  3001               	movlw	1
  3320  0B1B                     u4275:
  3321  0B1B  1003               	clrc
  3322  0B1C  0DC2               	rlf	??_scale,f
  3323  0B1D  3EFF               	addlw	-1
  3324  0B1E  1D03               	skipz
  3325  0B1F  2B1B               	goto	u4275
  3326  0B20  1003               	clrc
  3327  0B21  0D42               	rlf	??_scale,w
  3328  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3329  0B23  0084               	movwf	4
  3330  0B24  120A  118A  200D  120A  158A  	fcall	stringdir
  3331  0B29  00C3               	movwf	??_scale+1
  3332  0B2A  120A  118A  200D  120A  158A  	fcall	stringdir
  3333  0B2F  00C4               	movwf	??_scale+2
  3334  0B30  120A  118A  200D  120A  158A  	fcall	stringdir
  3335  0B35  00C5               	movwf	??_scale+3
  3336  0B36  120A  118A  200D  120A  158A  	fcall	stringdir
  3337  0B3B  00C6               	movwf	??_scale+4
  3338  0B3C  0846               	movf	??_scale+4,w
  3339  0B3D  00A7               	movwf	___flmul@b+3
  3340  0B3E  0845               	movf	??_scale+3,w
  3341  0B3F  00A6               	movwf	___flmul@b+2
  3342  0B40  0844               	movf	??_scale+2,w
  3343  0B41  00A5               	movwf	___flmul@b+1
  3344  0B42  0843               	movf	??_scale+1,w
  3345  0B43  00A4               	movwf	___flmul@b
  3346  0B44  3064               	movlw	100
  3347  0B45  00F7               	movwf	___awdiv@divisor
  3348  0B46  3000               	movlw	0
  3349  0B47  00F8               	movwf	___awdiv@divisor+1
  3350  0B48  0850               	movf	scale@scl,w
  3351  0B49  00F9               	movwf	___awdiv@dividend
  3352  0B4A  01FA               	clrf	___awdiv@dividend+1
  3353  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3354  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3355  0B4D  160A  158A  247F  120A  158A  	fcall	___awdiv
  3356  0B52  0877               	movf	?___awdiv,w
  3357  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0B55  00C7               	movwf	??_scale+5
  3360  0B56  3001               	movlw	1
  3361  0B57                     u4285:
  3362  0B57  1003               	clrc
  3363  0B58  0DC7               	rlf	??_scale+5,f
  3364  0B59  3EFF               	addlw	-1
  3365  0B5A  1D03               	skipz
  3366  0B5B  2B57               	goto	u4285
  3367  0B5C  1003               	clrc
  3368  0B5D  0D47               	rlf	??_scale+5,w
  3369  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3370  0B5F  0084               	movwf	4
  3371  0B60  120A  118A  200D  120A  158A  	fcall	stringdir
  3372  0B65  00C8               	movwf	??_scale+6
  3373  0B66  120A  118A  200D  120A  158A  	fcall	stringdir
  3374  0B6B  00C9               	movwf	??_scale+7
  3375  0B6C  120A  118A  200D  120A  158A  	fcall	stringdir
  3376  0B71  00CA               	movwf	??_scale+8
  3377  0B72  120A  118A  200D  120A  158A  	fcall	stringdir
  3378  0B77  00CB               	movwf	??_scale+9
  3379  0B78  084B               	movf	??_scale+9,w
  3380  0B79  00AB               	movwf	___flmul@a+3
  3381  0B7A  084A               	movf	??_scale+8,w
  3382  0B7B  00AA               	movwf	___flmul@a+2
  3383  0B7C  0849               	movf	??_scale+7,w
  3384  0B7D  00A9               	movwf	___flmul@a+1
  3385  0B7E  0848               	movf	??_scale+6,w
  3386  0B7F  00A8               	movwf	___flmul@a
  3387  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3388  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3390  0B87  0827               	movf	?___flmul+3,w
  3391  0B88  00CF               	movwf	_scale$1216+3
  3392  0B89  0826               	movf	?___flmul+2,w
  3393  0B8A  00CE               	movwf	_scale$1216+2
  3394  0B8B  0825               	movf	?___flmul+1,w
  3395  0B8C  00CD               	movwf	_scale$1216+1
  3396  0B8D  0824               	movf	?___flmul,w
  3397  0B8E  00CC               	movwf	_scale$1216
  3398                           
  3399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3400  0B8F  300A               	movlw	10
  3401  0B90  00F0               	movwf	___awmod@divisor
  3402  0B91  3000               	movlw	0
  3403  0B92  00F1               	movwf	___awmod@divisor+1
  3404  0B93  0850               	movf	scale@scl,w
  3405  0B94  00F2               	movwf	___awmod@dividend
  3406  0B95  01F3               	clrf	___awmod@dividend+1
  3407  0B96  1BF2               	btfsc	___awmod@dividend,7
  3408  0B97  03F3               	decf	___awmod@dividend+1,f
  3409  0B98  160A  158A  2308  120A  158A  	fcall	___awmod
  3410  0B9D  0870               	movf	?___awmod,w
  3411  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0BA0  00C2               	movwf	??_scale
  3414  0BA1  3001               	movlw	1
  3415  0BA2                     u4295:
  3416  0BA2  1003               	clrc
  3417  0BA3  0DC2               	rlf	??_scale,f
  3418  0BA4  3EFF               	addlw	-1
  3419  0BA5  1D03               	skipz
  3420  0BA6  2BA2               	goto	u4295
  3421  0BA7  1003               	clrc
  3422  0BA8  0D42               	rlf	??_scale,w
  3423  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3424  0BAA  0084               	movwf	4
  3425  0BAB  120A  118A  200D  120A  158A  	fcall	stringdir
  3426  0BB0  00C3               	movwf	??_scale+1
  3427  0BB1  120A  118A  200D  120A  158A  	fcall	stringdir
  3428  0BB6  00C4               	movwf	??_scale+2
  3429  0BB7  120A  118A  200D  120A  158A  	fcall	stringdir
  3430  0BBC  00C5               	movwf	??_scale+3
  3431  0BBD  120A  118A  200D  120A  158A  	fcall	stringdir
  3432  0BC2  00C6               	movwf	??_scale+4
  3433  0BC3  0846               	movf	??_scale+4,w
  3434  0BC4  00A7               	movwf	___flmul@b+3
  3435  0BC5  0845               	movf	??_scale+3,w
  3436  0BC6  00A6               	movwf	___flmul@b+2
  3437  0BC7  0844               	movf	??_scale+2,w
  3438  0BC8  00A5               	movwf	___flmul@b+1
  3439  0BC9  0843               	movf	??_scale+1,w
  3440  0BCA  00A4               	movwf	___flmul@b
  3441  0BCB  084F               	movf	_scale$1216+3,w
  3442  0BCC  00AB               	movwf	___flmul@a+3
  3443  0BCD  084E               	movf	_scale$1216+2,w
  3444  0BCE  00AA               	movwf	___flmul@a+2
  3445  0BCF  084D               	movf	_scale$1216+1,w
  3446  0BD0  00A9               	movwf	___flmul@a+1
  3447  0BD1  084C               	movf	_scale$1216,w
  3448  0BD2  00A8               	movwf	___flmul@a
  3449  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3450  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3451  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3452  0BDA  0827               	movf	?___flmul+3,w
  3453  0BDB  00C1               	movwf	?_scale+3
  3454  0BDC  0826               	movf	?___flmul+2,w
  3455  0BDD  00C0               	movwf	?_scale+2
  3456  0BDE  0825               	movf	?___flmul+1,w
  3457  0BDF  00BF               	movwf	?_scale+1
  3458  0BE0  0824               	movf	?___flmul,w
  3459  0BE1  00BE               	movwf	?_scale
  3460  0BE2  2C9E               	goto	l314
  3461  0BE3                     l2941:
  3462  0BE3  0850               	movf	scale@scl,w
  3463  0BE4  3A80               	xorlw	128
  3464  0BE5  3E75               	addlw	-139
  3465  0BE6  1C03               	skipc
  3466  0BE7  2BE9               	goto	u4301
  3467  0BE8  2BEA               	goto	u4300
  3468  0BE9                     u4301:
  3469  0BE9  2C72               	goto	l2947
  3470  0BEA                     u4300:
  3471  0BEA                     l2943:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3474  0BEA  300A               	movlw	10
  3475  0BEB  00F0               	movwf	___awmod@divisor
  3476  0BEC  3000               	movlw	0
  3477  0BED  00F1               	movwf	___awmod@divisor+1
  3478  0BEE  0850               	movf	scale@scl,w
  3479  0BEF  00F2               	movwf	___awmod@dividend
  3480  0BF0  01F3               	clrf	___awmod@dividend+1
  3481  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3482  0BF2  03F3               	decf	___awmod@dividend+1,f
  3483  0BF3  160A  158A  2308  120A  158A  	fcall	___awmod
  3484  0BF8  0870               	movf	?___awmod,w
  3485  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3486  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3487  0BFB  00C2               	movwf	??_scale
  3488  0BFC  3001               	movlw	1
  3489  0BFD                     u4315:
  3490  0BFD  1003               	clrc
  3491  0BFE  0DC2               	rlf	??_scale,f
  3492  0BFF  3EFF               	addlw	-1
  3493  0C00  1D03               	skipz
  3494  0C01  2BFD               	goto	u4315
  3495  0C02  1003               	clrc
  3496  0C03  0D42               	rlf	??_scale,w
  3497  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3498  0C05  0084               	movwf	4
  3499  0C06  120A  118A  200D  120A  158A  	fcall	stringdir
  3500  0C0B  00C3               	movwf	??_scale+1
  3501  0C0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3502  0C11  00C4               	movwf	??_scale+2
  3503  0C12  120A  118A  200D  120A  158A  	fcall	stringdir
  3504  0C17  00C5               	movwf	??_scale+3
  3505  0C18  120A  118A  200D  120A  158A  	fcall	stringdir
  3506  0C1D  00C6               	movwf	??_scale+4
  3507  0C1E  0846               	movf	??_scale+4,w
  3508  0C1F  00A7               	movwf	___flmul@b+3
  3509  0C20  0845               	movf	??_scale+3,w
  3510  0C21  00A6               	movwf	___flmul@b+2
  3511  0C22  0844               	movf	??_scale+2,w
  3512  0C23  00A5               	movwf	___flmul@b+1
  3513  0C24  0843               	movf	??_scale+1,w
  3514  0C25  00A4               	movwf	___flmul@b
  3515  0C26  300A               	movlw	10
  3516  0C27  00F7               	movwf	___awdiv@divisor
  3517  0C28  3000               	movlw	0
  3518  0C29  00F8               	movwf	___awdiv@divisor+1
  3519  0C2A  0850               	movf	scale@scl,w
  3520  0C2B  00F9               	movwf	___awdiv@dividend
  3521  0C2C  01FA               	clrf	___awdiv@dividend+1
  3522  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3523  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3524  0C2F  160A  158A  247F  120A  158A  	fcall	___awdiv
  3525  0C34  0877               	movf	?___awdiv,w
  3526  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3528  0C37  00C7               	movwf	??_scale+5
  3529  0C38  3001               	movlw	1
  3530  0C39                     u4325:
  3531  0C39  1003               	clrc
  3532  0C3A  0DC7               	rlf	??_scale+5,f
  3533  0C3B  3EFF               	addlw	-1
  3534  0C3C  1D03               	skipz
  3535  0C3D  2C39               	goto	u4325
  3536  0C3E  1003               	clrc
  3537  0C3F  0D47               	rlf	??_scale+5,w
  3538  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3539  0C41  0084               	movwf	4
  3540  0C42  120A  118A  200D  120A  158A  	fcall	stringdir
  3541  0C47  00C8               	movwf	??_scale+6
  3542  0C48  120A  118A  200D  120A  158A  	fcall	stringdir
  3543  0C4D  00C9               	movwf	??_scale+7
  3544  0C4E  120A  118A  200D  120A  158A  	fcall	stringdir
  3545  0C53  00CA               	movwf	??_scale+8
  3546  0C54  120A  118A  200D  120A  158A  	fcall	stringdir
  3547  0C59  00CB               	movwf	??_scale+9
  3548  0C5A  084B               	movf	??_scale+9,w
  3549  0C5B  00AB               	movwf	___flmul@a+3
  3550  0C5C  084A               	movf	??_scale+8,w
  3551  0C5D  00AA               	movwf	___flmul@a+2
  3552  0C5E  0849               	movf	??_scale+7,w
  3553  0C5F  00A9               	movwf	___flmul@a+1
  3554  0C60  0848               	movf	??_scale+6,w
  3555  0C61  00A8               	movwf	___flmul@a
  3556  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3557  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3558  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3559  0C69  0827               	movf	?___flmul+3,w
  3560  0C6A  00C1               	movwf	?_scale+3
  3561  0C6B  0826               	movf	?___flmul+2,w
  3562  0C6C  00C0               	movwf	?_scale+2
  3563  0C6D  0825               	movf	?___flmul+1,w
  3564  0C6E  00BF               	movwf	?_scale+1
  3565  0C6F  0824               	movf	?___flmul,w
  3566  0C70  00BE               	movwf	?_scale
  3567  0C71  2C9E               	goto	l314
  3568  0C72                     l2947:
  3569                           
  3570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3571  0C72  0850               	movf	scale@scl,w
  3572  0C73  00C2               	movwf	??_scale
  3573  0C74  3001               	movlw	1
  3574  0C75                     u4335:
  3575  0C75  1003               	clrc
  3576  0C76  0DC2               	rlf	??_scale,f
  3577  0C77  3EFF               	addlw	-1
  3578  0C78  1D03               	skipz
  3579  0C79  2C75               	goto	u4335
  3580  0C7A  1003               	clrc
  3581  0C7B  0D42               	rlf	??_scale,w
  3582  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3583  0C7D  0084               	movwf	4
  3584  0C7E  120A  118A  200D  120A  158A  	fcall	stringdir
  3585  0C83  00C3               	movwf	??_scale+1
  3586  0C84  120A  118A  200D  120A  158A  	fcall	stringdir
  3587  0C89  00C4               	movwf	??_scale+2
  3588  0C8A  120A  118A  200D  120A  158A  	fcall	stringdir
  3589  0C8F  00C5               	movwf	??_scale+3
  3590  0C90  120A  118A  200D  120A  158A  	fcall	stringdir
  3591  0C95  00C6               	movwf	??_scale+4
  3592  0C96  0846               	movf	??_scale+4,w
  3593  0C97  00C1               	movwf	?_scale+3
  3594  0C98  0845               	movf	??_scale+3,w
  3595  0C99  00C0               	movwf	?_scale+2
  3596  0C9A  0844               	movf	??_scale+2,w
  3597  0C9B  00BF               	movwf	?_scale+1
  3598  0C9C  0843               	movf	??_scale+1,w
  3599  0C9D  00BE               	movwf	?_scale
  3600  0C9E                     l314:
  3601  0C9E  0008               	return
  3602  0C9F                     __end_of_scale:
  3603                           
  3604                           	psect	text3
  3605  1B08                     __ptext3:	
  3606 ;; *************** function ___awmod *****************
  3607 ;; Defined at:
  3608 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  divisor         2    0[COMMON] int 
  3611 ;;  dividend        2    2[COMMON] int 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  sign            1    6[COMMON] unsigned char 
  3614 ;;  counter         1    5[COMMON] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  2    0[COMMON] int 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         4       0       0       0       0
  3625 ;;      Locals:         2       0       0       0       0
  3626 ;;      Temps:          1       0       0       0       0
  3627 ;;      Totals:         7       0       0       0       0
  3628 ;;Total ram usage:        7 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_scale
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function ___awmod
  3639  1B08                     ___awmod:
  3640  1B08                     l2449:	
  3641                           ;incstack = 0
  3642                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3643                           
  3644  1B08  01F6               	clrf	___awmod@sign
  3645  1B09                     l2451:
  3646  1B09  1FF3               	btfss	___awmod@dividend+1,7
  3647  1B0A  2B0C               	goto	u3031
  3648  1B0B  2B0D               	goto	u3030
  3649  1B0C                     u3031:
  3650  1B0C  2B14               	goto	l2457
  3651  1B0D                     u3030:
  3652  1B0D                     l2453:
  3653  1B0D  09F2               	comf	___awmod@dividend,f
  3654  1B0E  09F3               	comf	___awmod@dividend+1,f
  3655  1B0F  0AF2               	incf	___awmod@dividend,f
  3656  1B10  1903               	skipnz
  3657  1B11  0AF3               	incf	___awmod@dividend+1,f
  3658  1B12                     l2455:
  3659  1B12  01F6               	clrf	___awmod@sign
  3660  1B13  0AF6               	incf	___awmod@sign,f
  3661  1B14                     l2457:
  3662  1B14  1FF1               	btfss	___awmod@divisor+1,7
  3663  1B15  2B17               	goto	u3041
  3664  1B16  2B18               	goto	u3040
  3665  1B17                     u3041:
  3666  1B17  2B1D               	goto	l2461
  3667  1B18                     u3040:
  3668  1B18                     l2459:
  3669  1B18  09F0               	comf	___awmod@divisor,f
  3670  1B19  09F1               	comf	___awmod@divisor+1,f
  3671  1B1A  0AF0               	incf	___awmod@divisor,f
  3672  1B1B  1903               	skipnz
  3673  1B1C  0AF1               	incf	___awmod@divisor+1,f
  3674  1B1D                     l2461:
  3675  1B1D  0870               	movf	___awmod@divisor,w
  3676  1B1E  0471               	iorwf	___awmod@divisor+1,w
  3677  1B1F  1903               	btfsc	3,2
  3678  1B20  2B22               	goto	u3051
  3679  1B21  2B23               	goto	u3050
  3680  1B22                     u3051:
  3681  1B22  2B52               	goto	l2479
  3682  1B23                     u3050:
  3683  1B23                     l2463:
  3684  1B23  01F5               	clrf	___awmod@counter
  3685  1B24  0AF5               	incf	___awmod@counter,f
  3686  1B25  2B31               	goto	l2469
  3687  1B26                     l2465:
  3688  1B26  3001               	movlw	1
  3689  1B27                     u3065:
  3690  1B27  1003               	clrc
  3691  1B28  0DF0               	rlf	___awmod@divisor,f
  3692  1B29  0DF1               	rlf	___awmod@divisor+1,f
  3693  1B2A  3EFF               	addlw	-1
  3694  1B2B  1D03               	skipz
  3695  1B2C  2B27               	goto	u3065
  3696  1B2D                     l2467:
  3697  1B2D  3001               	movlw	1
  3698  1B2E  00F4               	movwf	??___awmod
  3699  1B2F  0874               	movf	??___awmod,w
  3700  1B30  07F5               	addwf	___awmod@counter,f
  3701  1B31                     l2469:
  3702  1B31  1FF1               	btfss	___awmod@divisor+1,7
  3703  1B32  2B34               	goto	u3071
  3704  1B33  2B35               	goto	u3070
  3705  1B34                     u3071:
  3706  1B34  2B26               	goto	l2465
  3707  1B35                     u3070:
  3708  1B35                     l2471:
  3709  1B35  0871               	movf	___awmod@divisor+1,w
  3710  1B36  0273               	subwf	___awmod@dividend+1,w
  3711  1B37  1D03               	skipz
  3712  1B38  2B3B               	goto	u3085
  3713  1B39  0870               	movf	___awmod@divisor,w
  3714  1B3A  0272               	subwf	___awmod@dividend,w
  3715  1B3B                     u3085:
  3716  1B3B  1C03               	skipc
  3717  1B3C  2B3E               	goto	u3081
  3718  1B3D  2B3F               	goto	u3080
  3719  1B3E                     u3081:
  3720  1B3E  2B45               	goto	l2475
  3721  1B3F                     u3080:
  3722  1B3F                     l2473:
  3723  1B3F  0870               	movf	___awmod@divisor,w
  3724  1B40  02F2               	subwf	___awmod@dividend,f
  3725  1B41  0871               	movf	___awmod@divisor+1,w
  3726  1B42  1C03               	skipc
  3727  1B43  03F3               	decf	___awmod@dividend+1,f
  3728  1B44  02F3               	subwf	___awmod@dividend+1,f
  3729  1B45                     l2475:
  3730  1B45  3001               	movlw	1
  3731  1B46                     u3095:
  3732  1B46  1003               	clrc
  3733  1B47  0CF1               	rrf	___awmod@divisor+1,f
  3734  1B48  0CF0               	rrf	___awmod@divisor,f
  3735  1B49  3EFF               	addlw	-1
  3736  1B4A  1D03               	skipz
  3737  1B4B  2B46               	goto	u3095
  3738  1B4C                     l2477:
  3739  1B4C  3001               	movlw	1
  3740  1B4D  02F5               	subwf	___awmod@counter,f
  3741  1B4E  1D03               	btfss	3,2
  3742  1B4F  2B51               	goto	u3101
  3743  1B50  2B52               	goto	u3100
  3744  1B51                     u3101:
  3745  1B51  2B35               	goto	l2471
  3746  1B52                     u3100:
  3747  1B52                     l2479:
  3748  1B52  0876               	movf	___awmod@sign,w
  3749  1B53  1903               	btfsc	3,2
  3750  1B54  2B56               	goto	u3111
  3751  1B55  2B57               	goto	u3110
  3752  1B56                     u3111:
  3753  1B56  2B5C               	goto	l2483
  3754  1B57                     u3110:
  3755  1B57                     l2481:
  3756  1B57  09F2               	comf	___awmod@dividend,f
  3757  1B58  09F3               	comf	___awmod@dividend+1,f
  3758  1B59  0AF2               	incf	___awmod@dividend,f
  3759  1B5A  1903               	skipnz
  3760  1B5B  0AF3               	incf	___awmod@dividend+1,f
  3761  1B5C                     l2483:
  3762  1B5C  0873               	movf	___awmod@dividend+1,w
  3763  1B5D  00F1               	movwf	?___awmod+1
  3764  1B5E  0872               	movf	___awmod@dividend,w
  3765  1B5F  00F0               	movwf	?___awmod
  3766  1B60                     l576:
  3767  1B60  0008               	return
  3768  1B61                     __end_of___awmod:
  3769                           
  3770                           	psect	text4
  3771  1C7F                     __ptext4:	
  3772 ;; *************** function ___awdiv *****************
  3773 ;; Defined at:
  3774 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  divisor         2    7[COMMON] int 
  3777 ;;  dividend        2    9[COMMON] int 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  quotient        2    2[BANK0 ] int 
  3780 ;;  sign            1    1[BANK0 ] unsigned char 
  3781 ;;  counter         1    0[BANK0 ] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2    7[COMMON] int 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         4       0       0       0       0
  3792 ;;      Locals:         0       4       0       0       0
  3793 ;;      Temps:          1       0       0       0       0
  3794 ;;      Totals:         5       4       0       0       0
  3795 ;;Total ram usage:        9 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_scale
  3801 ;;		_sprintf
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           
  3806                           ;psect for function ___awdiv
  3807  1C7F                     ___awdiv:
  3808  1C7F                     l2405:	
  3809                           ;incstack = 0
  3810                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3811                           
  3812  1C7F  1283               	bcf	3,5	;RP0=0, select bank0
  3813  1C80  1303               	bcf	3,6	;RP1=0, select bank0
  3814  1C81  01A1               	clrf	___awdiv@sign
  3815  1C82                     l2407:
  3816  1C82  1FF8               	btfss	___awdiv@divisor+1,7
  3817  1C83  2C85               	goto	u2931
  3818  1C84  2C86               	goto	u2930
  3819  1C85                     u2931:
  3820  1C85  2C8D               	goto	l2413
  3821  1C86                     u2930:
  3822  1C86                     l2409:
  3823  1C86  09F7               	comf	___awdiv@divisor,f
  3824  1C87  09F8               	comf	___awdiv@divisor+1,f
  3825  1C88  0AF7               	incf	___awdiv@divisor,f
  3826  1C89  1903               	skipnz
  3827  1C8A  0AF8               	incf	___awdiv@divisor+1,f
  3828  1C8B                     l2411:
  3829  1C8B  01A1               	clrf	___awdiv@sign
  3830  1C8C  0AA1               	incf	___awdiv@sign,f
  3831  1C8D                     l2413:
  3832  1C8D  1FFA               	btfss	___awdiv@dividend+1,7
  3833  1C8E  2C90               	goto	u2941
  3834  1C8F  2C91               	goto	u2940
  3835  1C90                     u2941:
  3836  1C90  2C9A               	goto	l2419
  3837  1C91                     u2940:
  3838  1C91                     l2415:
  3839  1C91  09F9               	comf	___awdiv@dividend,f
  3840  1C92  09FA               	comf	___awdiv@dividend+1,f
  3841  1C93  0AF9               	incf	___awdiv@dividend,f
  3842  1C94  1903               	skipnz
  3843  1C95  0AFA               	incf	___awdiv@dividend+1,f
  3844  1C96                     l2417:
  3845  1C96  3001               	movlw	1
  3846  1C97  00FB               	movwf	??___awdiv
  3847  1C98  087B               	movf	??___awdiv,w
  3848  1C99  06A1               	xorwf	___awdiv@sign,f
  3849  1C9A                     l2419:
  3850  1C9A  01A2               	clrf	___awdiv@quotient
  3851  1C9B  01A3               	clrf	___awdiv@quotient+1
  3852  1C9C                     l2421:
  3853  1C9C  0877               	movf	___awdiv@divisor,w
  3854  1C9D  0478               	iorwf	___awdiv@divisor+1,w
  3855  1C9E  1903               	btfsc	3,2
  3856  1C9F  2CA1               	goto	u2951
  3857  1CA0  2CA2               	goto	u2950
  3858  1CA1                     u2951:
  3859  1CA1  2CD9               	goto	l2441
  3860  1CA2                     u2950:
  3861  1CA2                     l2423:
  3862  1CA2  01A0               	clrf	___awdiv@counter
  3863  1CA3  0AA0               	incf	___awdiv@counter,f
  3864  1CA4  2CB0               	goto	l2429
  3865  1CA5                     l2425:
  3866  1CA5  3001               	movlw	1
  3867  1CA6                     u2965:
  3868  1CA6  1003               	clrc
  3869  1CA7  0DF7               	rlf	___awdiv@divisor,f
  3870  1CA8  0DF8               	rlf	___awdiv@divisor+1,f
  3871  1CA9  3EFF               	addlw	-1
  3872  1CAA  1D03               	skipz
  3873  1CAB  2CA6               	goto	u2965
  3874  1CAC                     l2427:
  3875  1CAC  3001               	movlw	1
  3876  1CAD  00FB               	movwf	??___awdiv
  3877  1CAE  087B               	movf	??___awdiv,w
  3878  1CAF  07A0               	addwf	___awdiv@counter,f
  3879  1CB0                     l2429:
  3880  1CB0  1FF8               	btfss	___awdiv@divisor+1,7
  3881  1CB1  2CB3               	goto	u2971
  3882  1CB2  2CB4               	goto	u2970
  3883  1CB3                     u2971:
  3884  1CB3  2CA5               	goto	l2425
  3885  1CB4                     u2970:
  3886  1CB4                     l2431:
  3887  1CB4  3001               	movlw	1
  3888  1CB5                     u2985:
  3889  1CB5  1003               	clrc
  3890  1CB6  0DA2               	rlf	___awdiv@quotient,f
  3891  1CB7  0DA3               	rlf	___awdiv@quotient+1,f
  3892  1CB8  3EFF               	addlw	-1
  3893  1CB9  1D03               	skipz
  3894  1CBA  2CB5               	goto	u2985
  3895  1CBB  0878               	movf	___awdiv@divisor+1,w
  3896  1CBC  027A               	subwf	___awdiv@dividend+1,w
  3897  1CBD  1D03               	skipz
  3898  1CBE  2CC1               	goto	u2995
  3899  1CBF  0877               	movf	___awdiv@divisor,w
  3900  1CC0  0279               	subwf	___awdiv@dividend,w
  3901  1CC1                     u2995:
  3902  1CC1  1C03               	skipc
  3903  1CC2  2CC4               	goto	u2991
  3904  1CC3  2CC5               	goto	u2990
  3905  1CC4                     u2991:
  3906  1CC4  2CCC               	goto	l2437
  3907  1CC5                     u2990:
  3908  1CC5                     l2433:
  3909  1CC5  0877               	movf	___awdiv@divisor,w
  3910  1CC6  02F9               	subwf	___awdiv@dividend,f
  3911  1CC7  0878               	movf	___awdiv@divisor+1,w
  3912  1CC8  1C03               	skipc
  3913  1CC9  03FA               	decf	___awdiv@dividend+1,f
  3914  1CCA  02FA               	subwf	___awdiv@dividend+1,f
  3915  1CCB                     l2435:
  3916  1CCB  1422               	bsf	___awdiv@quotient,0
  3917  1CCC                     l2437:
  3918  1CCC  3001               	movlw	1
  3919  1CCD                     u3005:
  3920  1CCD  1003               	clrc
  3921  1CCE  0CF8               	rrf	___awdiv@divisor+1,f
  3922  1CCF  0CF7               	rrf	___awdiv@divisor,f
  3923  1CD0  3EFF               	addlw	-1
  3924  1CD1  1D03               	skipz
  3925  1CD2  2CCD               	goto	u3005
  3926  1CD3                     l2439:
  3927  1CD3  3001               	movlw	1
  3928  1CD4  02A0               	subwf	___awdiv@counter,f
  3929  1CD5  1D03               	btfss	3,2
  3930  1CD6  2CD8               	goto	u3011
  3931  1CD7  2CD9               	goto	u3010
  3932  1CD8                     u3011:
  3933  1CD8  2CB4               	goto	l2431
  3934  1CD9                     u3010:
  3935  1CD9                     l2441:
  3936  1CD9  0821               	movf	___awdiv@sign,w
  3937  1CDA  1903               	btfsc	3,2
  3938  1CDB  2CDD               	goto	u3021
  3939  1CDC  2CDE               	goto	u3020
  3940  1CDD                     u3021:
  3941  1CDD  2CE3               	goto	l2445
  3942  1CDE                     u3020:
  3943  1CDE                     l2443:
  3944  1CDE  09A2               	comf	___awdiv@quotient,f
  3945  1CDF  09A3               	comf	___awdiv@quotient+1,f
  3946  1CE0  0AA2               	incf	___awdiv@quotient,f
  3947  1CE1  1903               	skipnz
  3948  1CE2  0AA3               	incf	___awdiv@quotient+1,f
  3949  1CE3                     l2445:
  3950  1CE3  0823               	movf	___awdiv@quotient+1,w
  3951  1CE4  00F8               	movwf	?___awdiv+1
  3952  1CE5  0822               	movf	___awdiv@quotient,w
  3953  1CE6  00F7               	movwf	?___awdiv
  3954  1CE7                     l563:
  3955  1CE7  0008               	return
  3956  1CE8                     __end_of___awdiv:
  3957                           
  3958                           	psect	text5
  3959  189D                     __ptext5:	
  3960 ;; *************** function _isdigit *****************
  3961 ;; Defined at:
  3962 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  c               1    wreg     unsigned char 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  c               1    1[COMMON] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;		None               void
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         0       0       0       0       0
  3977 ;;      Locals:         2       0       0       0       0
  3978 ;;      Temps:          0       0       0       0       0
  3979 ;;      Totals:         2       0       0       0       0
  3980 ;;Total ram usage:        2 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_sprintf
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           
  3990                           ;psect for function _isdigit
  3991  189D                     _isdigit:
  3992                           
  3993                           ;incstack = 0
  3994                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3995                           ;isdigit@c stored from wreg
  3996  189D  00F1               	movwf	isdigit@c
  3997  189E                     l2951:
  3998  189E  01F0               	clrf	_isdigit$1034
  3999  189F                     l2953:
  4000  189F  303A               	movlw	58
  4001  18A0  0271               	subwf	isdigit@c,w
  4002  18A1  1803               	skipnc
  4003  18A2  28A4               	goto	u4341
  4004  18A3  28A5               	goto	u4340
  4005  18A4                     u4341:
  4006  18A4  28AD               	goto	l2959
  4007  18A5                     u4340:
  4008  18A5                     l2955:
  4009  18A5  3030               	movlw	48
  4010  18A6  0271               	subwf	isdigit@c,w
  4011  18A7  1C03               	skipc
  4012  18A8  28AA               	goto	u4351
  4013  18A9  28AB               	goto	u4350
  4014  18AA                     u4351:
  4015  18AA  28AD               	goto	l2959
  4016  18AB                     u4350:
  4017  18AB                     l2957:
  4018  18AB  01F0               	clrf	_isdigit$1034
  4019  18AC  0AF0               	incf	_isdigit$1034,f
  4020  18AD                     l2959:
  4021  18AD  0C70               	rrf	_isdigit$1034,w
  4022  18AE                     l897:
  4023  18AE  0008               	return
  4024  18AF                     __end_of_isdigit:
  4025                           
  4026                           	psect	text6
  4027  10AB                     __ptext6:	
  4028 ;; *************** function _fround *****************
  4029 ;; Defined at:
  4030 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  prec            1    wreg     unsigned char 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  prec            1   49[BANK0 ] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  4   30[BANK0 ] unsigned char 
  4037 ;; Registers used:
  4038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4044 ;;      Params:         0       4       0       0       0
  4045 ;;      Locals:         0       9       0       0       0
  4046 ;;      Temps:          0       7       0       0       0
  4047 ;;      Totals:         0      20       0       0       0
  4048 ;;Total ram usage:       20 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    2
  4051 ;; This function calls:
  4052 ;;		___flmul
  4053 ;;		___lwdiv
  4054 ;;		___lwmod
  4055 ;; This function is called by:
  4056 ;;		_sprintf
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function _fround
  4062  10AB                     _fround:
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4066                           ;fround@prec stored from wreg
  4067  10AB  1283               	bcf	3,5	;RP0=0, select bank0
  4068  10AC  1303               	bcf	3,6	;RP1=0, select bank0
  4069  10AD  00D1               	movwf	fround@prec
  4070  10AE                     l2893:
  4071                           
  4072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4073  10AE  306E               	movlw	110
  4074  10AF  0251               	subwf	fround@prec,w
  4075  10B0  1C03               	skipc
  4076  10B1  28B3               	goto	u4091
  4077  10B2  28B4               	goto	u4090
  4078  10B3                     u4091:
  4079  10B3  29C1               	goto	l2901
  4080  10B4                     u4090:
  4081  10B4                     l2895:
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4084  10B4  303F               	movlw	63
  4085  10B5  00A7               	movwf	___flmul@b+3
  4086  10B6  3000               	movlw	0
  4087  10B7  00A6               	movwf	___flmul@b+2
  4088  10B8  3000               	movlw	0
  4089  10B9  00A5               	movwf	___flmul@b+1
  4090  10BA  3000               	movlw	0
  4091  10BB  00A4               	movwf	___flmul@b
  4092  10BC  3064               	movlw	100
  4093  10BD  00F6               	movwf	___lwdiv@divisor
  4094  10BE  3000               	movlw	0
  4095  10BF  00F7               	movwf	___lwdiv@divisor+1
  4096  10C0  0851               	movf	fround@prec,w
  4097  10C1  00C2               	movwf	??_fround
  4098  10C2  01C3               	clrf	??_fround+1
  4099  10C3  0842               	movf	??_fround,w
  4100  10C4  00F8               	movwf	___lwdiv@dividend
  4101  10C5  0843               	movf	??_fround+1,w
  4102  10C6  00F9               	movwf	___lwdiv@dividend+1
  4103  10C7  120A  118A  20D6  160A  118A  	fcall	___lwdiv
  4104  10CC  0876               	movf	?___lwdiv,w
  4105  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  4106  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  4107  10CF  00C4               	movwf	??_fround+2
  4108  10D0  3001               	movlw	1
  4109  10D1                     u4105:
  4110  10D1  1003               	clrc
  4111  10D2  0DC4               	rlf	??_fround+2,f
  4112  10D3  3EFF               	addlw	-1
  4113  10D4  1D03               	skipz
  4114  10D5  28D1               	goto	u4105
  4115  10D6  1003               	clrc
  4116  10D7  0D44               	rlf	??_fround+2,w
  4117  10D8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4118  10D9  0084               	movwf	4
  4119  10DA  120A  118A  200D  160A  118A  	fcall	stringdir
  4120  10DF  00C5               	movwf	??_fround+3
  4121  10E0  120A  118A  200D  160A  118A  	fcall	stringdir
  4122  10E5  00C6               	movwf	??_fround+4
  4123  10E6  120A  118A  200D  160A  118A  	fcall	stringdir
  4124  10EB  00C7               	movwf	??_fround+5
  4125  10EC  120A  118A  200D  160A  118A  	fcall	stringdir
  4126  10F1  00C8               	movwf	??_fround+6
  4127  10F2  0848               	movf	??_fround+6,w
  4128  10F3  00AB               	movwf	___flmul@a+3
  4129  10F4  0847               	movf	??_fround+5,w
  4130  10F5  00AA               	movwf	___flmul@a+2
  4131  10F6  0846               	movf	??_fround+4,w
  4132  10F7  00A9               	movwf	___flmul@a+1
  4133  10F8  0845               	movf	??_fround+3,w
  4134  10F9  00A8               	movwf	___flmul@a
  4135  10FA  120A  158A  249F  160A  118A  	fcall	___flmul
  4136  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  4137  1100  1303               	bcf	3,6	;RP1=0, select bank0
  4138  1101  0827               	movf	?___flmul+3,w
  4139  1102  00D0               	movwf	_fround$1214+3
  4140  1103  0826               	movf	?___flmul+2,w
  4141  1104  00CF               	movwf	_fround$1214+2
  4142  1105  0825               	movf	?___flmul+1,w
  4143  1106  00CE               	movwf	_fround$1214+1
  4144  1107  0824               	movf	?___flmul,w
  4145  1108  00CD               	movwf	_fround$1214
  4146                           
  4147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4148  1109  300A               	movlw	10
  4149  110A  00F6               	movwf	___lwdiv@divisor
  4150  110B  3000               	movlw	0
  4151  110C  00F7               	movwf	___lwdiv@divisor+1
  4152  110D  0851               	movf	fround@prec,w
  4153  110E  00C2               	movwf	??_fround
  4154  110F  01C3               	clrf	??_fround+1
  4155  1110  0842               	movf	??_fround,w
  4156  1111  00F2               	movwf	___lwmod@dividend
  4157  1112  0843               	movf	??_fround+1,w
  4158  1113  00F3               	movwf	___lwmod@dividend+1
  4159  1114  3064               	movlw	100
  4160  1115  00F0               	movwf	___lwmod@divisor
  4161  1116  3000               	movlw	0
  4162  1117  00F1               	movwf	___lwmod@divisor+1
  4163  1118  160A  158A  21A7  160A  118A  	fcall	___lwmod
  4164  111D  0871               	movf	?___lwmod+1,w
  4165  111E  00F9               	movwf	___lwdiv@dividend+1
  4166  111F  0870               	movf	?___lwmod,w
  4167  1120  00F8               	movwf	___lwdiv@dividend
  4168  1121  120A  118A  20D6  160A  118A  	fcall	___lwdiv
  4169  1126  0876               	movf	?___lwdiv,w
  4170  1127  1283               	bcf	3,5	;RP0=0, select bank0
  4171  1128  1303               	bcf	3,6	;RP1=0, select bank0
  4172  1129  00C4               	movwf	??_fround+2
  4173  112A  3001               	movlw	1
  4174  112B                     u4115:
  4175  112B  1003               	clrc
  4176  112C  0DC4               	rlf	??_fround+2,f
  4177  112D  3EFF               	addlw	-1
  4178  112E  1D03               	skipz
  4179  112F  292B               	goto	u4115
  4180  1130  1003               	clrc
  4181  1131  0D44               	rlf	??_fround+2,w
  4182  1132  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4183  1133  0084               	movwf	4
  4184  1134  120A  118A  200D  160A  118A  	fcall	stringdir
  4185  1139  00C5               	movwf	??_fround+3
  4186  113A  120A  118A  200D  160A  118A  	fcall	stringdir
  4187  113F  00C6               	movwf	??_fround+4
  4188  1140  120A  118A  200D  160A  118A  	fcall	stringdir
  4189  1145  00C7               	movwf	??_fround+5
  4190  1146  120A  118A  200D  160A  118A  	fcall	stringdir
  4191  114B  00C8               	movwf	??_fround+6
  4192  114C  0848               	movf	??_fround+6,w
  4193  114D  00A7               	movwf	___flmul@b+3
  4194  114E  0847               	movf	??_fround+5,w
  4195  114F  00A6               	movwf	___flmul@b+2
  4196  1150  0846               	movf	??_fround+4,w
  4197  1151  00A5               	movwf	___flmul@b+1
  4198  1152  0845               	movf	??_fround+3,w
  4199  1153  00A4               	movwf	___flmul@b
  4200  1154  0850               	movf	_fround$1214+3,w
  4201  1155  00AB               	movwf	___flmul@a+3
  4202  1156  084F               	movf	_fround$1214+2,w
  4203  1157  00AA               	movwf	___flmul@a+2
  4204  1158  084E               	movf	_fround$1214+1,w
  4205  1159  00A9               	movwf	___flmul@a+1
  4206  115A  084D               	movf	_fround$1214,w
  4207  115B  00A8               	movwf	___flmul@a
  4208  115C  120A  158A  249F  160A  118A  	fcall	___flmul
  4209  1161  1283               	bcf	3,5	;RP0=0, select bank0
  4210  1162  1303               	bcf	3,6	;RP1=0, select bank0
  4211  1163  0827               	movf	?___flmul+3,w
  4212  1164  00CC               	movwf	_fround$1215+3
  4213  1165  0826               	movf	?___flmul+2,w
  4214  1166  00CB               	movwf	_fround$1215+2
  4215  1167  0825               	movf	?___flmul+1,w
  4216  1168  00CA               	movwf	_fround$1215+1
  4217  1169  0824               	movf	?___flmul,w
  4218  116A  00C9               	movwf	_fround$1215
  4219                           
  4220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4221  116B  300A               	movlw	10
  4222  116C  00F0               	movwf	___lwmod@divisor
  4223  116D  3000               	movlw	0
  4224  116E  00F1               	movwf	___lwmod@divisor+1
  4225  116F  0851               	movf	fround@prec,w
  4226  1170  00C2               	movwf	??_fround
  4227  1171  01C3               	clrf	??_fround+1
  4228  1172  0842               	movf	??_fround,w
  4229  1173  00F2               	movwf	___lwmod@dividend
  4230  1174  0843               	movf	??_fround+1,w
  4231  1175  00F3               	movwf	___lwmod@dividend+1
  4232  1176  160A  158A  21A7  160A  118A  	fcall	___lwmod
  4233  117B  0870               	movf	?___lwmod,w
  4234  117C  1283               	bcf	3,5	;RP0=0, select bank0
  4235  117D  1303               	bcf	3,6	;RP1=0, select bank0
  4236  117E  00C4               	movwf	??_fround+2
  4237  117F  3001               	movlw	1
  4238  1180                     u4125:
  4239  1180  1003               	clrc
  4240  1181  0DC4               	rlf	??_fround+2,f
  4241  1182  3EFF               	addlw	-1
  4242  1183  1D03               	skipz
  4243  1184  2980               	goto	u4125
  4244  1185  1003               	clrc
  4245  1186  0D44               	rlf	??_fround+2,w
  4246  1187  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4247  1188  0084               	movwf	4
  4248  1189  120A  118A  200D  160A  118A  	fcall	stringdir
  4249  118E  00C5               	movwf	??_fround+3
  4250  118F  120A  118A  200D  160A  118A  	fcall	stringdir
  4251  1194  00C6               	movwf	??_fround+4
  4252  1195  120A  118A  200D  160A  118A  	fcall	stringdir
  4253  119A  00C7               	movwf	??_fround+5
  4254  119B  120A  118A  200D  160A  118A  	fcall	stringdir
  4255  11A0  00C8               	movwf	??_fround+6
  4256  11A1  0848               	movf	??_fround+6,w
  4257  11A2  00A7               	movwf	___flmul@b+3
  4258  11A3  0847               	movf	??_fround+5,w
  4259  11A4  00A6               	movwf	___flmul@b+2
  4260  11A5  0846               	movf	??_fround+4,w
  4261  11A6  00A5               	movwf	___flmul@b+1
  4262  11A7  0845               	movf	??_fround+3,w
  4263  11A8  00A4               	movwf	___flmul@b
  4264  11A9  084C               	movf	_fround$1215+3,w
  4265  11AA  00AB               	movwf	___flmul@a+3
  4266  11AB  084B               	movf	_fround$1215+2,w
  4267  11AC  00AA               	movwf	___flmul@a+2
  4268  11AD  084A               	movf	_fround$1215+1,w
  4269  11AE  00A9               	movwf	___flmul@a+1
  4270  11AF  0849               	movf	_fround$1215,w
  4271  11B0  00A8               	movwf	___flmul@a
  4272  11B1  120A  158A  249F  160A  118A  	fcall	___flmul
  4273  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  4274  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  4275  11B8  0827               	movf	?___flmul+3,w
  4276  11B9  00C1               	movwf	?_fround+3
  4277  11BA  0826               	movf	?___flmul+2,w
  4278  11BB  00C0               	movwf	?_fround+2
  4279  11BC  0825               	movf	?___flmul+1,w
  4280  11BD  00BF               	movwf	?_fround+1
  4281  11BE  0824               	movf	?___flmul,w
  4282  11BF  00BE               	movwf	?_fround
  4283  11C0  2AB5               	goto	l307
  4284  11C1                     l2901:
  4285  11C1  300B               	movlw	11
  4286  11C2  0251               	subwf	fround@prec,w
  4287  11C3  1C03               	skipc
  4288  11C4  29C6               	goto	u4131
  4289  11C5  29C7               	goto	u4130
  4290  11C6                     u4131:
  4291  11C6  2A72               	goto	l2907
  4292  11C7                     u4130:
  4293  11C7                     l2903:
  4294                           
  4295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4296  11C7  303F               	movlw	63
  4297  11C8  00A7               	movwf	___flmul@b+3
  4298  11C9  3000               	movlw	0
  4299  11CA  00A6               	movwf	___flmul@b+2
  4300  11CB  3000               	movlw	0
  4301  11CC  00A5               	movwf	___flmul@b+1
  4302  11CD  3000               	movlw	0
  4303  11CE  00A4               	movwf	___flmul@b
  4304  11CF  300A               	movlw	10
  4305  11D0  00F6               	movwf	___lwdiv@divisor
  4306  11D1  3000               	movlw	0
  4307  11D2  00F7               	movwf	___lwdiv@divisor+1
  4308  11D3  0851               	movf	fround@prec,w
  4309  11D4  00C2               	movwf	??_fround
  4310  11D5  01C3               	clrf	??_fround+1
  4311  11D6  0842               	movf	??_fround,w
  4312  11D7  00F8               	movwf	___lwdiv@dividend
  4313  11D8  0843               	movf	??_fround+1,w
  4314  11D9  00F9               	movwf	___lwdiv@dividend+1
  4315  11DA  120A  118A  20D6  160A  118A  	fcall	___lwdiv
  4316  11DF  0876               	movf	?___lwdiv,w
  4317  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  4318  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  4319  11E2  00C4               	movwf	??_fround+2
  4320  11E3  3001               	movlw	1
  4321  11E4                     u4145:
  4322  11E4  1003               	clrc
  4323  11E5  0DC4               	rlf	??_fround+2,f
  4324  11E6  3EFF               	addlw	-1
  4325  11E7  1D03               	skipz
  4326  11E8  29E4               	goto	u4145
  4327  11E9  1003               	clrc
  4328  11EA  0D44               	rlf	??_fround+2,w
  4329  11EB  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4330  11EC  0084               	movwf	4
  4331  11ED  120A  118A  200D  160A  118A  	fcall	stringdir
  4332  11F2  00C5               	movwf	??_fround+3
  4333  11F3  120A  118A  200D  160A  118A  	fcall	stringdir
  4334  11F8  00C6               	movwf	??_fround+4
  4335  11F9  120A  118A  200D  160A  118A  	fcall	stringdir
  4336  11FE  00C7               	movwf	??_fround+5
  4337  11FF  120A  118A  200D  160A  118A  	fcall	stringdir
  4338  1204  00C8               	movwf	??_fround+6
  4339  1205  0848               	movf	??_fround+6,w
  4340  1206  00AB               	movwf	___flmul@a+3
  4341  1207  0847               	movf	??_fround+5,w
  4342  1208  00AA               	movwf	___flmul@a+2
  4343  1209  0846               	movf	??_fround+4,w
  4344  120A  00A9               	movwf	___flmul@a+1
  4345  120B  0845               	movf	??_fround+3,w
  4346  120C  00A8               	movwf	___flmul@a
  4347  120D  120A  158A  249F  160A  118A  	fcall	___flmul
  4348  1212  1283               	bcf	3,5	;RP0=0, select bank0
  4349  1213  1303               	bcf	3,6	;RP1=0, select bank0
  4350  1214  0827               	movf	?___flmul+3,w
  4351  1215  00D0               	movwf	_fround$1214+3
  4352  1216  0826               	movf	?___flmul+2,w
  4353  1217  00CF               	movwf	_fround$1214+2
  4354  1218  0825               	movf	?___flmul+1,w
  4355  1219  00CE               	movwf	_fround$1214+1
  4356  121A  0824               	movf	?___flmul,w
  4357  121B  00CD               	movwf	_fround$1214
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4360  121C  300A               	movlw	10
  4361  121D  00F0               	movwf	___lwmod@divisor
  4362  121E  3000               	movlw	0
  4363  121F  00F1               	movwf	___lwmod@divisor+1
  4364  1220  0851               	movf	fround@prec,w
  4365  1221  00C2               	movwf	??_fround
  4366  1222  01C3               	clrf	??_fround+1
  4367  1223  0842               	movf	??_fround,w
  4368  1224  00F2               	movwf	___lwmod@dividend
  4369  1225  0843               	movf	??_fround+1,w
  4370  1226  00F3               	movwf	___lwmod@dividend+1
  4371  1227  160A  158A  21A7  160A  118A  	fcall	___lwmod
  4372  122C  0870               	movf	?___lwmod,w
  4373  122D  1283               	bcf	3,5	;RP0=0, select bank0
  4374  122E  1303               	bcf	3,6	;RP1=0, select bank0
  4375  122F  00C4               	movwf	??_fround+2
  4376  1230  3001               	movlw	1
  4377  1231                     u4155:
  4378  1231  1003               	clrc
  4379  1232  0DC4               	rlf	??_fround+2,f
  4380  1233  3EFF               	addlw	-1
  4381  1234  1D03               	skipz
  4382  1235  2A31               	goto	u4155
  4383  1236  1003               	clrc
  4384  1237  0D44               	rlf	??_fround+2,w
  4385  1238  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4386  1239  0084               	movwf	4
  4387  123A  120A  118A  200D  160A  118A  	fcall	stringdir
  4388  123F  00C5               	movwf	??_fround+3
  4389  1240  120A  118A  200D  160A  118A  	fcall	stringdir
  4390  1245  00C6               	movwf	??_fround+4
  4391  1246  120A  118A  200D  160A  118A  	fcall	stringdir
  4392  124B  00C7               	movwf	??_fround+5
  4393  124C  120A  118A  200D  160A  118A  	fcall	stringdir
  4394  1251  00C8               	movwf	??_fround+6
  4395  1252  0848               	movf	??_fround+6,w
  4396  1253  00A7               	movwf	___flmul@b+3
  4397  1254  0847               	movf	??_fround+5,w
  4398  1255  00A6               	movwf	___flmul@b+2
  4399  1256  0846               	movf	??_fround+4,w
  4400  1257  00A5               	movwf	___flmul@b+1
  4401  1258  0845               	movf	??_fround+3,w
  4402  1259  00A4               	movwf	___flmul@b
  4403  125A  0850               	movf	_fround$1214+3,w
  4404  125B  00AB               	movwf	___flmul@a+3
  4405  125C  084F               	movf	_fround$1214+2,w
  4406  125D  00AA               	movwf	___flmul@a+2
  4407  125E  084E               	movf	_fround$1214+1,w
  4408  125F  00A9               	movwf	___flmul@a+1
  4409  1260  084D               	movf	_fround$1214,w
  4410  1261  00A8               	movwf	___flmul@a
  4411  1262  120A  158A  249F  160A  118A  	fcall	___flmul
  4412  1267  1283               	bcf	3,5	;RP0=0, select bank0
  4413  1268  1303               	bcf	3,6	;RP1=0, select bank0
  4414  1269  0827               	movf	?___flmul+3,w
  4415  126A  00C1               	movwf	?_fround+3
  4416  126B  0826               	movf	?___flmul+2,w
  4417  126C  00C0               	movwf	?_fround+2
  4418  126D  0825               	movf	?___flmul+1,w
  4419  126E  00BF               	movwf	?_fround+1
  4420  126F  0824               	movf	?___flmul,w
  4421  1270  00BE               	movwf	?_fround
  4422  1271  2AB5               	goto	l307
  4423  1272                     l2907:
  4424                           
  4425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4426  1272  303F               	movlw	63
  4427  1273  00A7               	movwf	___flmul@b+3
  4428  1274  3000               	movlw	0
  4429  1275  00A6               	movwf	___flmul@b+2
  4430  1276  3000               	movlw	0
  4431  1277  00A5               	movwf	___flmul@b+1
  4432  1278  3000               	movlw	0
  4433  1279  00A4               	movwf	___flmul@b
  4434  127A  0851               	movf	fround@prec,w
  4435  127B  00C2               	movwf	??_fround
  4436  127C  3001               	movlw	1
  4437  127D                     u4165:
  4438  127D  1003               	clrc
  4439  127E  0DC2               	rlf	??_fround,f
  4440  127F  3EFF               	addlw	-1
  4441  1280  1D03               	skipz
  4442  1281  2A7D               	goto	u4165
  4443  1282  1003               	clrc
  4444  1283  0D42               	rlf	??_fround,w
  4445  1284  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4446  1285  0084               	movwf	4
  4447  1286  120A  118A  200D  160A  118A  	fcall	stringdir
  4448  128B  00C3               	movwf	??_fround+1
  4449  128C  120A  118A  200D  160A  118A  	fcall	stringdir
  4450  1291  00C4               	movwf	??_fround+2
  4451  1292  120A  118A  200D  160A  118A  	fcall	stringdir
  4452  1297  00C5               	movwf	??_fround+3
  4453  1298  120A  118A  200D  160A  118A  	fcall	stringdir
  4454  129D  00C6               	movwf	??_fround+4
  4455  129E  0846               	movf	??_fround+4,w
  4456  129F  00AB               	movwf	___flmul@a+3
  4457  12A0  0845               	movf	??_fround+3,w
  4458  12A1  00AA               	movwf	___flmul@a+2
  4459  12A2  0844               	movf	??_fround+2,w
  4460  12A3  00A9               	movwf	___flmul@a+1
  4461  12A4  0843               	movf	??_fround+1,w
  4462  12A5  00A8               	movwf	___flmul@a
  4463  12A6  120A  158A  249F  160A  118A  	fcall	___flmul
  4464  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  4465  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  4466  12AD  0827               	movf	?___flmul+3,w
  4467  12AE  00C1               	movwf	?_fround+3
  4468  12AF  0826               	movf	?___flmul+2,w
  4469  12B0  00C0               	movwf	?_fround+2
  4470  12B1  0825               	movf	?___flmul+1,w
  4471  12B2  00BF               	movwf	?_fround+1
  4472  12B3  0824               	movf	?___flmul,w
  4473  12B4  00BE               	movwf	?_fround
  4474  12B5                     l307:
  4475  12B5  0008               	return
  4476  12B6                     __end_of_fround:
  4477                           
  4478                           	psect	text7
  4479  19A7                     __ptext7:	
  4480 ;; *************** function ___lwmod *****************
  4481 ;; Defined at:
  4482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  divisor         2    0[COMMON] unsigned int 
  4485 ;;  dividend        2    2[COMMON] unsigned int 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  counter         1    5[COMMON] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  2    0[COMMON] unsigned int 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4497 ;;      Params:         4       0       0       0       0
  4498 ;;      Locals:         1       0       0       0       0
  4499 ;;      Temps:          1       0       0       0       0
  4500 ;;      Totals:         6       0       0       0       0
  4501 ;;Total ram usage:        6 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_fround
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function ___lwmod
  4512  19A7                     ___lwmod:
  4513  19A7                     l2513:	
  4514                           ;incstack = 0
  4515                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4516                           
  4517  19A7  0870               	movf	___lwmod@divisor,w
  4518  19A8  0471               	iorwf	___lwmod@divisor+1,w
  4519  19A9  1903               	btfsc	3,2
  4520  19AA  29AC               	goto	u3191
  4521  19AB  29AD               	goto	u3190
  4522  19AC                     u3191:
  4523  19AC  29DC               	goto	l2531
  4524  19AD                     u3190:
  4525  19AD                     l2515:
  4526  19AD  01F5               	clrf	___lwmod@counter
  4527  19AE  0AF5               	incf	___lwmod@counter,f
  4528  19AF  29BB               	goto	l2521
  4529  19B0                     l2517:
  4530  19B0  3001               	movlw	1
  4531  19B1                     u3205:
  4532  19B1  1003               	clrc
  4533  19B2  0DF0               	rlf	___lwmod@divisor,f
  4534  19B3  0DF1               	rlf	___lwmod@divisor+1,f
  4535  19B4  3EFF               	addlw	-1
  4536  19B5  1D03               	skipz
  4537  19B6  29B1               	goto	u3205
  4538  19B7                     l2519:
  4539  19B7  3001               	movlw	1
  4540  19B8  00F4               	movwf	??___lwmod
  4541  19B9  0874               	movf	??___lwmod,w
  4542  19BA  07F5               	addwf	___lwmod@counter,f
  4543  19BB                     l2521:
  4544  19BB  1FF1               	btfss	___lwmod@divisor+1,7
  4545  19BC  29BE               	goto	u3211
  4546  19BD  29BF               	goto	u3210
  4547  19BE                     u3211:
  4548  19BE  29B0               	goto	l2517
  4549  19BF                     u3210:
  4550  19BF                     l2523:
  4551  19BF  0871               	movf	___lwmod@divisor+1,w
  4552  19C0  0273               	subwf	___lwmod@dividend+1,w
  4553  19C1  1D03               	skipz
  4554  19C2  29C5               	goto	u3225
  4555  19C3  0870               	movf	___lwmod@divisor,w
  4556  19C4  0272               	subwf	___lwmod@dividend,w
  4557  19C5                     u3225:
  4558  19C5  1C03               	skipc
  4559  19C6  29C8               	goto	u3221
  4560  19C7  29C9               	goto	u3220
  4561  19C8                     u3221:
  4562  19C8  29CF               	goto	l2527
  4563  19C9                     u3220:
  4564  19C9                     l2525:
  4565  19C9  0870               	movf	___lwmod@divisor,w
  4566  19CA  02F2               	subwf	___lwmod@dividend,f
  4567  19CB  0871               	movf	___lwmod@divisor+1,w
  4568  19CC  1C03               	skipc
  4569  19CD  03F3               	decf	___lwmod@dividend+1,f
  4570  19CE  02F3               	subwf	___lwmod@dividend+1,f
  4571  19CF                     l2527:
  4572  19CF  3001               	movlw	1
  4573  19D0                     u3235:
  4574  19D0  1003               	clrc
  4575  19D1  0CF1               	rrf	___lwmod@divisor+1,f
  4576  19D2  0CF0               	rrf	___lwmod@divisor,f
  4577  19D3  3EFF               	addlw	-1
  4578  19D4  1D03               	skipz
  4579  19D5  29D0               	goto	u3235
  4580  19D6                     l2529:
  4581  19D6  3001               	movlw	1
  4582  19D7  02F5               	subwf	___lwmod@counter,f
  4583  19D8  1D03               	btfss	3,2
  4584  19D9  29DB               	goto	u3241
  4585  19DA  29DC               	goto	u3240
  4586  19DB                     u3241:
  4587  19DB  29BF               	goto	l2523
  4588  19DC                     u3240:
  4589  19DC                     l2531:
  4590  19DC  0873               	movf	___lwmod@dividend+1,w
  4591  19DD  00F1               	movwf	?___lwmod+1
  4592  19DE  0872               	movf	___lwmod@dividend,w
  4593  19DF  00F0               	movwf	?___lwmod
  4594  19E0                     l726:
  4595  19E0  0008               	return
  4596  19E1                     __end_of___lwmod:
  4597                           
  4598                           	psect	text8
  4599  00D6                     __ptext8:	
  4600 ;; *************** function ___lwdiv *****************
  4601 ;; Defined at:
  4602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  divisor         2    6[COMMON] unsigned int 
  4605 ;;  dividend        2    8[COMMON] unsigned int 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  quotient        2   11[COMMON] unsigned int 
  4608 ;;  counter         1   13[COMMON] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  2    6[COMMON] unsigned int 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4618 ;;      Params:         4       0       0       0       0
  4619 ;;      Locals:         3       0       0       0       0
  4620 ;;      Temps:          1       0       0       0       0
  4621 ;;      Totals:         8       0       0       0       0
  4622 ;;Total ram usage:        8 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_fround
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           
  4632                           ;psect for function ___lwdiv
  4633  00D6                     ___lwdiv:
  4634  00D6                     l2487:	
  4635                           ;incstack = 0
  4636                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4637                           
  4638  00D6  01FB               	clrf	___lwdiv@quotient
  4639  00D7  01FC               	clrf	___lwdiv@quotient+1
  4640  00D8                     l2489:
  4641  00D8  0876               	movf	___lwdiv@divisor,w
  4642  00D9  0477               	iorwf	___lwdiv@divisor+1,w
  4643  00DA  1903               	btfsc	3,2
  4644  00DB  28DD               	goto	u3121
  4645  00DC  28DE               	goto	u3120
  4646  00DD                     u3121:
  4647  00DD  2915               	goto	l2509
  4648  00DE                     u3120:
  4649  00DE                     l2491:
  4650  00DE  01FD               	clrf	___lwdiv@counter
  4651  00DF  0AFD               	incf	___lwdiv@counter,f
  4652  00E0  28EC               	goto	l2497
  4653  00E1                     l2493:
  4654  00E1  3001               	movlw	1
  4655  00E2                     u3135:
  4656  00E2  1003               	clrc
  4657  00E3  0DF6               	rlf	___lwdiv@divisor,f
  4658  00E4  0DF7               	rlf	___lwdiv@divisor+1,f
  4659  00E5  3EFF               	addlw	-1
  4660  00E6  1D03               	skipz
  4661  00E7  28E2               	goto	u3135
  4662  00E8                     l2495:
  4663  00E8  3001               	movlw	1
  4664  00E9  00FA               	movwf	??___lwdiv
  4665  00EA  087A               	movf	??___lwdiv,w
  4666  00EB  07FD               	addwf	___lwdiv@counter,f
  4667  00EC                     l2497:
  4668  00EC  1FF7               	btfss	___lwdiv@divisor+1,7
  4669  00ED  28EF               	goto	u3141
  4670  00EE  28F0               	goto	u3140
  4671  00EF                     u3141:
  4672  00EF  28E1               	goto	l2493
  4673  00F0                     u3140:
  4674  00F0                     l2499:
  4675  00F0  3001               	movlw	1
  4676  00F1                     u3155:
  4677  00F1  1003               	clrc
  4678  00F2  0DFB               	rlf	___lwdiv@quotient,f
  4679  00F3  0DFC               	rlf	___lwdiv@quotient+1,f
  4680  00F4  3EFF               	addlw	-1
  4681  00F5  1D03               	skipz
  4682  00F6  28F1               	goto	u3155
  4683  00F7  0877               	movf	___lwdiv@divisor+1,w
  4684  00F8  0279               	subwf	___lwdiv@dividend+1,w
  4685  00F9  1D03               	skipz
  4686  00FA  28FD               	goto	u3165
  4687  00FB  0876               	movf	___lwdiv@divisor,w
  4688  00FC  0278               	subwf	___lwdiv@dividend,w
  4689  00FD                     u3165:
  4690  00FD  1C03               	skipc
  4691  00FE  2900               	goto	u3161
  4692  00FF  2901               	goto	u3160
  4693  0100                     u3161:
  4694  0100  2908               	goto	l2505
  4695  0101                     u3160:
  4696  0101                     l2501:
  4697  0101  0876               	movf	___lwdiv@divisor,w
  4698  0102  02F8               	subwf	___lwdiv@dividend,f
  4699  0103  0877               	movf	___lwdiv@divisor+1,w
  4700  0104  1C03               	skipc
  4701  0105  03F9               	decf	___lwdiv@dividend+1,f
  4702  0106  02F9               	subwf	___lwdiv@dividend+1,f
  4703  0107                     l2503:
  4704  0107  147B               	bsf	___lwdiv@quotient,0
  4705  0108                     l2505:
  4706  0108  3001               	movlw	1
  4707  0109                     u3175:
  4708  0109  1003               	clrc
  4709  010A  0CF7               	rrf	___lwdiv@divisor+1,f
  4710  010B  0CF6               	rrf	___lwdiv@divisor,f
  4711  010C  3EFF               	addlw	-1
  4712  010D  1D03               	skipz
  4713  010E  2909               	goto	u3175
  4714  010F                     l2507:
  4715  010F  3001               	movlw	1
  4716  0110  02FD               	subwf	___lwdiv@counter,f
  4717  0111  1D03               	btfss	3,2
  4718  0112  2914               	goto	u3181
  4719  0113  2915               	goto	u3180
  4720  0114                     u3181:
  4721  0114  28F0               	goto	l2499
  4722  0115                     u3180:
  4723  0115                     l2509:
  4724  0115  087C               	movf	___lwdiv@quotient+1,w
  4725  0116  00F7               	movwf	?___lwdiv+1
  4726  0117  087B               	movf	___lwdiv@quotient,w
  4727  0118  00F6               	movwf	?___lwdiv
  4728  0119                     l716:
  4729  0119  0008               	return
  4730  011A                     __end_of___lwdiv:
  4731                           
  4732                           	psect	text9
  4733  0883                     __ptext9:	
  4734 ;; *************** function __tdiv_to_l_ *****************
  4735 ;; Defined at:
  4736 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  f1              4    0[COMMON] float 
  4739 ;;  f2              4    4[COMMON] float 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  quot            4    0[BANK0 ] unsigned long 
  4742 ;;  exp1            1    5[BANK0 ] unsigned char 
  4743 ;;  cntr            1    4[BANK0 ] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  4    0[COMMON] unsigned long 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4753 ;;      Params:         8       0       0       0       0
  4754 ;;      Locals:         0       6       0       0       0
  4755 ;;      Temps:          4       0       0       0       0
  4756 ;;      Totals:        12       6       0       0       0
  4757 ;;Total ram usage:       18 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_sprintf
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function __tdiv_to_l_
  4768  0883                     __tdiv_to_l_:
  4769  0883                     l2963:	
  4770                           ;incstack = 0
  4771                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4772                           
  4773  0883  0870               	movf	__tdiv_to_l_@f1,w
  4774  0884  00F8               	movwf	??__tdiv_to_l_
  4775  0885  0871               	movf	__tdiv_to_l_@f1+1,w
  4776  0886  00F9               	movwf	??__tdiv_to_l_+1
  4777  0887  0872               	movf	__tdiv_to_l_@f1+2,w
  4778  0888  00FA               	movwf	??__tdiv_to_l_+2
  4779  0889  1003               	clrc
  4780  088A  0D79               	rlf	??__tdiv_to_l_+1,w
  4781  088B  0D7A               	rlf	??__tdiv_to_l_+2,w
  4782  088C  00FB               	movwf	??__tdiv_to_l_+3
  4783  088D  087B               	movf	??__tdiv_to_l_+3,w
  4784  088E  1283               	bcf	3,5	;RP0=0, select bank0
  4785  088F  1303               	bcf	3,6	;RP1=0, select bank0
  4786  0890  00A5               	movwf	__tdiv_to_l_@exp1
  4787  0891  0825               	movf	__tdiv_to_l_@exp1,w
  4788  0892  1D03               	btfss	3,2
  4789  0893  2895               	goto	u4361
  4790  0894  2896               	goto	u4360
  4791  0895                     u4361:
  4792  0895  289F               	goto	l2969
  4793  0896                     u4360:
  4794  0896                     l2965:
  4795  0896  3000               	movlw	0
  4796  0897  00F3               	movwf	?__tdiv_to_l_+3
  4797  0898  3000               	movlw	0
  4798  0899  00F2               	movwf	?__tdiv_to_l_+2
  4799  089A  3000               	movlw	0
  4800  089B  00F1               	movwf	?__tdiv_to_l_+1
  4801  089C  3000               	movlw	0
  4802  089D  00F0               	movwf	?__tdiv_to_l_
  4803  089E  293F               	goto	l627
  4804  089F                     l2969:
  4805  089F  0874               	movf	__tdiv_to_l_@f2,w
  4806  08A0  00F8               	movwf	??__tdiv_to_l_
  4807  08A1  0875               	movf	__tdiv_to_l_@f2+1,w
  4808  08A2  00F9               	movwf	??__tdiv_to_l_+1
  4809  08A3  0876               	movf	__tdiv_to_l_@f2+2,w
  4810  08A4  00FA               	movwf	??__tdiv_to_l_+2
  4811  08A5  1003               	clrc
  4812  08A6  0D79               	rlf	??__tdiv_to_l_+1,w
  4813  08A7  0D7A               	rlf	??__tdiv_to_l_+2,w
  4814  08A8  00FB               	movwf	??__tdiv_to_l_+3
  4815  08A9  087B               	movf	??__tdiv_to_l_+3,w
  4816  08AA  00A4               	movwf	__tdiv_to_l_@cntr
  4817  08AB  0824               	movf	__tdiv_to_l_@cntr,w
  4818  08AC  1D03               	btfss	3,2
  4819  08AD  28AF               	goto	u4371
  4820  08AE  28B0               	goto	u4370
  4821  08AF                     u4371:
  4822  08AF  28B1               	goto	l628
  4823  08B0                     u4370:
  4824  08B0  2896               	goto	l2965
  4825  08B1                     l628:
  4826  08B1  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4827  08B2                     l2975:
  4828  08B2  30FF               	movlw	255
  4829  08B3  05F0               	andwf	__tdiv_to_l_@f1,f
  4830  08B4  30FF               	movlw	255
  4831  08B5  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4832  08B6  3000               	movlw	0
  4833  08B7  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4834  08B8                     l2977:
  4835  08B8  17F5               	bsf	__tdiv_to_l_@f2+1,7
  4836  08B9  30FF               	movlw	255
  4837  08BA  05F4               	andwf	__tdiv_to_l_@f2,f
  4838  08BB  30FF               	movlw	255
  4839  08BC  05F5               	andwf	__tdiv_to_l_@f2+1,f
  4840  08BD  3000               	movlw	0
  4841  08BE  05F6               	andwf	__tdiv_to_l_@f2+2,f
  4842  08BF  3000               	movlw	0
  4843  08C0  00A3               	movwf	__tdiv_to_l_@quot+3
  4844  08C1  3000               	movlw	0
  4845  08C2  00A2               	movwf	__tdiv_to_l_@quot+2
  4846  08C3  3000               	movlw	0
  4847  08C4  00A1               	movwf	__tdiv_to_l_@quot+1
  4848  08C5  3000               	movlw	0
  4849  08C6  00A0               	movwf	__tdiv_to_l_@quot
  4850  08C7                     l2979:
  4851  08C7  307F               	movlw	127
  4852  08C8  02A5               	subwf	__tdiv_to_l_@exp1,f
  4853  08C9                     l2981:
  4854  08C9  3098               	movlw	152
  4855  08CA  0724               	addwf	__tdiv_to_l_@cntr,w
  4856  08CB  00F8               	movwf	??__tdiv_to_l_
  4857  08CC  0878               	movf	??__tdiv_to_l_,w
  4858  08CD  02A5               	subwf	__tdiv_to_l_@exp1,f
  4859  08CE  3018               	movlw	24
  4860  08CF  00F8               	movwf	??__tdiv_to_l_
  4861  08D0  0878               	movf	??__tdiv_to_l_,w
  4862  08D1  00A4               	movwf	__tdiv_to_l_@cntr
  4863  08D2                     l2983:
  4864  08D2  3001               	movlw	1
  4865  08D3  00F8               	movwf	??__tdiv_to_l_
  4866  08D4                     u4385:
  4867  08D4  1003               	clrc
  4868  08D5  0DA0               	rlf	__tdiv_to_l_@quot,f
  4869  08D6  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4870  08D7  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4871  08D8  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4872  08D9  0BF8               	decfsz	??__tdiv_to_l_,f
  4873  08DA  28D4               	goto	u4385
  4874  08DB                     l2985:
  4875  08DB  0876               	movf	__tdiv_to_l_@f2+2,w
  4876  08DC  0272               	subwf	__tdiv_to_l_@f1+2,w
  4877  08DD  1D03               	skipz
  4878  08DE  28E5               	goto	u4395
  4879  08DF  0875               	movf	__tdiv_to_l_@f2+1,w
  4880  08E0  0271               	subwf	__tdiv_to_l_@f1+1,w
  4881  08E1  1D03               	skipz
  4882  08E2  28E5               	goto	u4395
  4883  08E3  0874               	movf	__tdiv_to_l_@f2,w
  4884  08E4  0270               	subwf	__tdiv_to_l_@f1,w
  4885  08E5                     u4395:
  4886  08E5  1C03               	skipc
  4887  08E6  28E8               	goto	u4391
  4888  08E7  28E9               	goto	u4390
  4889  08E8                     u4391:
  4890  08E8  28F4               	goto	l2991
  4891  08E9                     u4390:
  4892  08E9                     l2987:
  4893  08E9  0874               	movf	__tdiv_to_l_@f2,w
  4894  08EA  02F0               	subwf	__tdiv_to_l_@f1,f
  4895  08EB  0875               	movf	__tdiv_to_l_@f2+1,w
  4896  08EC  1C03               	skipc
  4897  08ED  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  4898  08EE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4899  08EF  0876               	movf	__tdiv_to_l_@f2+2,w
  4900  08F0  1C03               	skipc
  4901  08F1  0A76               	incf	__tdiv_to_l_@f2+2,w
  4902  08F2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4903  08F3                     l2989:
  4904  08F3  1420               	bsf	__tdiv_to_l_@quot,0
  4905  08F4                     l2991:
  4906  08F4  3001               	movlw	1
  4907  08F5                     u4405:
  4908  08F5  1003               	clrc
  4909  08F6  0DF0               	rlf	__tdiv_to_l_@f1,f
  4910  08F7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4911  08F8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4912  08F9  3EFF               	addlw	-1
  4913  08FA  1D03               	skipz
  4914  08FB  28F5               	goto	u4405
  4915  08FC                     l2993:
  4916  08FC  3001               	movlw	1
  4917  08FD  02A4               	subwf	__tdiv_to_l_@cntr,f
  4918  08FE  1D03               	btfss	3,2
  4919  08FF  2901               	goto	u4411
  4920  0900  2902               	goto	u4410
  4921  0901                     u4411:
  4922  0901  28D2               	goto	l2983
  4923  0902                     u4410:
  4924  0902                     l631:
  4925  0902  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4926  0903  2905               	goto	u4421
  4927  0904  2906               	goto	u4420
  4928  0905                     u4421:
  4929  0905  2920               	goto	l3003
  4930  0906                     u4420:
  4931  0906                     l2995:
  4932  0906  0825               	movf	__tdiv_to_l_@exp1,w
  4933  0907  3A80               	xorlw	128
  4934  0908  3E97               	addlw	151
  4935  0909  1803               	skipnc
  4936  090A  290C               	goto	u4431
  4937  090B  290D               	goto	u4430
  4938  090C                     u4431:
  4939  090C  290E               	goto	l3001
  4940  090D                     u4430:
  4941  090D  2896               	goto	l2965
  4942  090E                     l3001:
  4943  090E  3001               	movlw	1
  4944  090F                     u4445:
  4945  090F  1003               	clrc
  4946  0910  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4947  0911  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4948  0912  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4949  0913  0CA0               	rrf	__tdiv_to_l_@quot,f
  4950  0914  3EFF               	addlw	-1
  4951  0915  1D03               	skipz
  4952  0916  290F               	goto	u4445
  4953  0917  3001               	movlw	1
  4954  0918  00F8               	movwf	??__tdiv_to_l_
  4955  0919  0878               	movf	??__tdiv_to_l_,w
  4956  091A  07A5               	addwf	__tdiv_to_l_@exp1,f
  4957  091B  1D03               	btfss	3,2
  4958  091C  291E               	goto	u4451
  4959  091D  291F               	goto	u4450
  4960  091E                     u4451:
  4961  091E  290E               	goto	l3001
  4962  091F                     u4450:
  4963  091F  2937               	goto	l3011
  4964  0920                     l3003:
  4965  0920  3018               	movlw	24
  4966  0921  0225               	subwf	__tdiv_to_l_@exp1,w
  4967  0922  1C03               	skipc
  4968  0923  2925               	goto	u4461
  4969  0924  2926               	goto	u4460
  4970  0925                     u4461:
  4971  0925  2932               	goto	l638
  4972  0926                     u4460:
  4973  0926  2896               	goto	l2965
  4974  0927                     l3009:
  4975  0927  3001               	movlw	1
  4976  0928  00F8               	movwf	??__tdiv_to_l_
  4977  0929                     u4475:
  4978  0929  1003               	clrc
  4979  092A  0DA0               	rlf	__tdiv_to_l_@quot,f
  4980  092B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4981  092C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4982  092D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4983  092E  0BF8               	decfsz	??__tdiv_to_l_,f
  4984  092F  2929               	goto	u4475
  4985  0930  3001               	movlw	1
  4986  0931  02A5               	subwf	__tdiv_to_l_@exp1,f
  4987  0932                     l638:
  4988  0932  0825               	movf	__tdiv_to_l_@exp1,w
  4989  0933  1D03               	btfss	3,2
  4990  0934  2936               	goto	u4481
  4991  0935  2937               	goto	u4480
  4992  0936                     u4481:
  4993  0936  2927               	goto	l3009
  4994  0937                     u4480:
  4995  0937                     l3011:
  4996  0937  0823               	movf	__tdiv_to_l_@quot+3,w
  4997  0938  00F3               	movwf	?__tdiv_to_l_+3
  4998  0939  0822               	movf	__tdiv_to_l_@quot+2,w
  4999  093A  00F2               	movwf	?__tdiv_to_l_+2
  5000  093B  0821               	movf	__tdiv_to_l_@quot+1,w
  5001  093C  00F1               	movwf	?__tdiv_to_l_+1
  5002  093D  0820               	movf	__tdiv_to_l_@quot,w
  5003  093E  00F0               	movwf	?__tdiv_to_l_
  5004  093F                     l627:
  5005  093F  0008               	return
  5006  0940                     __end_of__tdiv_to_l_:
  5007                           
  5008                           	psect	text10
  5009  011A                     __ptext10:	
  5010 ;; *************** function __div_to_l_ *****************
  5011 ;; Defined at:
  5012 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  f1              4    0[COMMON] unsigned long 
  5015 ;;  f2              4    4[COMMON] unsigned long 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  quot            4    0[BANK0 ] unsigned long 
  5018 ;;  exp1            1    5[BANK0 ] unsigned char 
  5019 ;;  cntr            1    4[BANK0 ] unsigned char 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  4    0[COMMON] unsigned long 
  5022 ;; Registers used:
  5023 ;;		wreg, status,2, status,0
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5029 ;;      Params:         8       0       0       0       0
  5030 ;;      Locals:         0       6       0       0       0
  5031 ;;      Temps:          1       0       0       0       0
  5032 ;;      Totals:         9       6       0       0       0
  5033 ;;Total ram usage:       15 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		_sprintf
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           
  5043                           ;psect for function __div_to_l_
  5044  011A                     __div_to_l_:
  5045  011A                     l3015:	
  5046                           ;incstack = 0
  5047                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5048                           
  5049  011A  1003               	clrc
  5050  011B  0D72               	rlf	__div_to_l_@f1+2,w
  5051  011C  0D73               	rlf	__div_to_l_@f1+3,w
  5052  011D  00F8               	movwf	??__div_to_l_
  5053  011E  0878               	movf	??__div_to_l_,w
  5054  011F  1283               	bcf	3,5	;RP0=0, select bank0
  5055  0120  1303               	bcf	3,6	;RP1=0, select bank0
  5056  0121  00A5               	movwf	__div_to_l_@exp1
  5057  0122  0825               	movf	__div_to_l_@exp1,w
  5058  0123  1D03               	btfss	3,2
  5059  0124  2926               	goto	u4491
  5060  0125  2927               	goto	u4490
  5061  0126                     u4491:
  5062  0126  2930               	goto	l3021
  5063  0127                     u4490:
  5064  0127                     l3017:
  5065  0127  3000               	movlw	0
  5066  0128  00F3               	movwf	?__div_to_l_+3
  5067  0129  3000               	movlw	0
  5068  012A  00F2               	movwf	?__div_to_l_+2
  5069  012B  3000               	movlw	0
  5070  012C  00F1               	movwf	?__div_to_l_+1
  5071  012D  3000               	movlw	0
  5072  012E  00F0               	movwf	?__div_to_l_
  5073  012F  29D7               	goto	l580
  5074  0130                     l3021:
  5075  0130  1003               	clrc
  5076  0131  0D76               	rlf	__div_to_l_@f2+2,w
  5077  0132  0D77               	rlf	__div_to_l_@f2+3,w
  5078  0133  00F8               	movwf	??__div_to_l_
  5079  0134  0878               	movf	??__div_to_l_,w
  5080  0135  00A4               	movwf	__div_to_l_@cntr
  5081  0136  0824               	movf	__div_to_l_@cntr,w
  5082  0137  1D03               	btfss	3,2
  5083  0138  293A               	goto	u4501
  5084  0139  293B               	goto	u4500
  5085  013A                     u4501:
  5086  013A  293C               	goto	l581
  5087  013B                     u4500:
  5088  013B  2927               	goto	l3017
  5089  013C                     l581:
  5090  013C  17F2               	bsf	__div_to_l_@f1+2,7
  5091  013D                     l3027:
  5092  013D  30FF               	movlw	255
  5093  013E  05F0               	andwf	__div_to_l_@f1,f
  5094  013F  30FF               	movlw	255
  5095  0140  05F1               	andwf	__div_to_l_@f1+1,f
  5096  0141  30FF               	movlw	255
  5097  0142  05F2               	andwf	__div_to_l_@f1+2,f
  5098  0143  3000               	movlw	0
  5099  0144  05F3               	andwf	__div_to_l_@f1+3,f
  5100  0145                     l3029:
  5101  0145  17F6               	bsf	__div_to_l_@f2+2,7
  5102  0146  30FF               	movlw	255
  5103  0147  05F4               	andwf	__div_to_l_@f2,f
  5104  0148  30FF               	movlw	255
  5105  0149  05F5               	andwf	__div_to_l_@f2+1,f
  5106  014A  30FF               	movlw	255
  5107  014B  05F6               	andwf	__div_to_l_@f2+2,f
  5108  014C  3000               	movlw	0
  5109  014D  05F7               	andwf	__div_to_l_@f2+3,f
  5110  014E  3000               	movlw	0
  5111  014F  00A3               	movwf	__div_to_l_@quot+3
  5112  0150  3000               	movlw	0
  5113  0151  00A2               	movwf	__div_to_l_@quot+2
  5114  0152  3000               	movlw	0
  5115  0153  00A1               	movwf	__div_to_l_@quot+1
  5116  0154  3000               	movlw	0
  5117  0155  00A0               	movwf	__div_to_l_@quot
  5118  0156                     l3031:
  5119  0156  307F               	movlw	127
  5120  0157  02A5               	subwf	__div_to_l_@exp1,f
  5121  0158                     l3033:
  5122  0158  30A0               	movlw	160
  5123  0159  0724               	addwf	__div_to_l_@cntr,w
  5124  015A  00F8               	movwf	??__div_to_l_
  5125  015B  0878               	movf	??__div_to_l_,w
  5126  015C  02A5               	subwf	__div_to_l_@exp1,f
  5127  015D  3020               	movlw	32
  5128  015E  00F8               	movwf	??__div_to_l_
  5129  015F  0878               	movf	??__div_to_l_,w
  5130  0160  00A4               	movwf	__div_to_l_@cntr
  5131  0161                     l3035:
  5132  0161  3001               	movlw	1
  5133  0162  00F8               	movwf	??__div_to_l_
  5134  0163                     u4515:
  5135  0163  1003               	clrc
  5136  0164  0DA0               	rlf	__div_to_l_@quot,f
  5137  0165  0DA1               	rlf	__div_to_l_@quot+1,f
  5138  0166  0DA2               	rlf	__div_to_l_@quot+2,f
  5139  0167  0DA3               	rlf	__div_to_l_@quot+3,f
  5140  0168  0BF8               	decfsz	??__div_to_l_,f
  5141  0169  2963               	goto	u4515
  5142  016A                     l3037:
  5143  016A  0877               	movf	__div_to_l_@f2+3,w
  5144  016B  0273               	subwf	__div_to_l_@f1+3,w
  5145  016C  1D03               	skipz
  5146  016D  2978               	goto	u4525
  5147  016E  0876               	movf	__div_to_l_@f2+2,w
  5148  016F  0272               	subwf	__div_to_l_@f1+2,w
  5149  0170  1D03               	skipz
  5150  0171  2978               	goto	u4525
  5151  0172  0875               	movf	__div_to_l_@f2+1,w
  5152  0173  0271               	subwf	__div_to_l_@f1+1,w
  5153  0174  1D03               	skipz
  5154  0175  2978               	goto	u4525
  5155  0176  0874               	movf	__div_to_l_@f2,w
  5156  0177  0270               	subwf	__div_to_l_@f1,w
  5157  0178                     u4525:
  5158  0178  1C03               	skipc
  5159  0179  297B               	goto	u4521
  5160  017A  297C               	goto	u4520
  5161  017B                     u4521:
  5162  017B  298B               	goto	l3043
  5163  017C                     u4520:
  5164  017C                     l3039:
  5165  017C  0874               	movf	__div_to_l_@f2,w
  5166  017D  02F0               	subwf	__div_to_l_@f1,f
  5167  017E  0875               	movf	__div_to_l_@f2+1,w
  5168  017F  1C03               	skipc
  5169  0180  0F75               	incfsz	__div_to_l_@f2+1,w
  5170  0181  02F1               	subwf	__div_to_l_@f1+1,f
  5171  0182  0876               	movf	__div_to_l_@f2+2,w
  5172  0183  1C03               	skipc
  5173  0184  0F76               	incfsz	__div_to_l_@f2+2,w
  5174  0185  02F2               	subwf	__div_to_l_@f1+2,f
  5175  0186  0877               	movf	__div_to_l_@f2+3,w
  5176  0187  1C03               	skipc
  5177  0188  0F77               	incfsz	__div_to_l_@f2+3,w
  5178  0189  02F3               	subwf	__div_to_l_@f1+3,f
  5179  018A                     l3041:
  5180  018A  1420               	bsf	__div_to_l_@quot,0
  5181  018B                     l3043:
  5182  018B  3001               	movlw	1
  5183  018C  00F8               	movwf	??__div_to_l_
  5184  018D                     u4535:
  5185  018D  1003               	clrc
  5186  018E  0DF0               	rlf	__div_to_l_@f1,f
  5187  018F  0DF1               	rlf	__div_to_l_@f1+1,f
  5188  0190  0DF2               	rlf	__div_to_l_@f1+2,f
  5189  0191  0DF3               	rlf	__div_to_l_@f1+3,f
  5190  0192  0BF8               	decfsz	??__div_to_l_,f
  5191  0193  298D               	goto	u4535
  5192  0194                     l3045:
  5193  0194  3001               	movlw	1
  5194  0195  02A4               	subwf	__div_to_l_@cntr,f
  5195  0196  1D03               	btfss	3,2
  5196  0197  2999               	goto	u4541
  5197  0198  299A               	goto	u4540
  5198  0199                     u4541:
  5199  0199  2961               	goto	l3035
  5200  019A                     u4540:
  5201  019A                     l584:
  5202  019A  1FA5               	btfss	__div_to_l_@exp1,7
  5203  019B  299D               	goto	u4551
  5204  019C  299E               	goto	u4550
  5205  019D                     u4551:
  5206  019D  29B8               	goto	l3055
  5207  019E                     u4550:
  5208  019E                     l3047:
  5209  019E  0825               	movf	__div_to_l_@exp1,w
  5210  019F  3A80               	xorlw	128
  5211  01A0  3E9F               	addlw	159
  5212  01A1  1803               	skipnc
  5213  01A2  29A4               	goto	u4561
  5214  01A3  29A5               	goto	u4560
  5215  01A4                     u4561:
  5216  01A4  29A6               	goto	l3053
  5217  01A5                     u4560:
  5218  01A5  2927               	goto	l3017
  5219  01A6                     l3053:
  5220  01A6  3001               	movlw	1
  5221  01A7                     u4575:
  5222  01A7  1003               	clrc
  5223  01A8  0CA3               	rrf	__div_to_l_@quot+3,f
  5224  01A9  0CA2               	rrf	__div_to_l_@quot+2,f
  5225  01AA  0CA1               	rrf	__div_to_l_@quot+1,f
  5226  01AB  0CA0               	rrf	__div_to_l_@quot,f
  5227  01AC  3EFF               	addlw	-1
  5228  01AD  1D03               	skipz
  5229  01AE  29A7               	goto	u4575
  5230  01AF  3001               	movlw	1
  5231  01B0  00F8               	movwf	??__div_to_l_
  5232  01B1  0878               	movf	??__div_to_l_,w
  5233  01B2  07A5               	addwf	__div_to_l_@exp1,f
  5234  01B3  1D03               	btfss	3,2
  5235  01B4  29B6               	goto	u4581
  5236  01B5  29B7               	goto	u4580
  5237  01B6                     u4581:
  5238  01B6  29A6               	goto	l3053
  5239  01B7                     u4580:
  5240  01B7  29CF               	goto	l3063
  5241  01B8                     l3055:
  5242  01B8  3020               	movlw	32
  5243  01B9  0225               	subwf	__div_to_l_@exp1,w
  5244  01BA  1C03               	skipc
  5245  01BB  29BD               	goto	u4591
  5246  01BC  29BE               	goto	u4590
  5247  01BD                     u4591:
  5248  01BD  29CA               	goto	l591
  5249  01BE                     u4590:
  5250  01BE  2927               	goto	l3017
  5251  01BF                     l3061:
  5252  01BF  3001               	movlw	1
  5253  01C0  00F8               	movwf	??__div_to_l_
  5254  01C1                     u4605:
  5255  01C1  1003               	clrc
  5256  01C2  0DA0               	rlf	__div_to_l_@quot,f
  5257  01C3  0DA1               	rlf	__div_to_l_@quot+1,f
  5258  01C4  0DA2               	rlf	__div_to_l_@quot+2,f
  5259  01C5  0DA3               	rlf	__div_to_l_@quot+3,f
  5260  01C6  0BF8               	decfsz	??__div_to_l_,f
  5261  01C7  29C1               	goto	u4605
  5262  01C8  3001               	movlw	1
  5263  01C9  02A5               	subwf	__div_to_l_@exp1,f
  5264  01CA                     l591:
  5265  01CA  0825               	movf	__div_to_l_@exp1,w
  5266  01CB  1D03               	btfss	3,2
  5267  01CC  29CE               	goto	u4611
  5268  01CD  29CF               	goto	u4610
  5269  01CE                     u4611:
  5270  01CE  29BF               	goto	l3061
  5271  01CF                     u4610:
  5272  01CF                     l3063:
  5273  01CF  0823               	movf	__div_to_l_@quot+3,w
  5274  01D0  00F3               	movwf	?__div_to_l_+3
  5275  01D1  0822               	movf	__div_to_l_@quot+2,w
  5276  01D2  00F2               	movwf	?__div_to_l_+2
  5277  01D3  0821               	movf	__div_to_l_@quot+1,w
  5278  01D4  00F1               	movwf	?__div_to_l_+1
  5279  01D5  0820               	movf	__div_to_l_@quot,w
  5280  01D6  00F0               	movwf	?__div_to_l_
  5281  01D7                     l580:
  5282  01D7  0008               	return
  5283  01D8                     __end_of__div_to_l_:
  5284                           
  5285                           	psect	text11
  5286  195B                     __ptext11:	
  5287 ;; *************** function ___wmul *****************
  5288 ;; Defined at:
  5289 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  multiplier      2    0[COMMON] unsigned int 
  5292 ;;  multiplicand    2    2[COMMON] unsigned int 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  product         2    4[COMMON] unsigned int 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  2    0[COMMON] unsigned int 
  5297 ;; Registers used:
  5298 ;;		wreg, status,2, status,0
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5304 ;;      Params:         4       0       0       0       0
  5305 ;;      Locals:         2       0       0       0       0
  5306 ;;      Temps:          0       0       0       0       0
  5307 ;;      Totals:         6       0       0       0       0
  5308 ;;Total ram usage:        6 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		_sprintf
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           
  5318                           ;psect for function ___wmul
  5319  195B                     ___wmul:
  5320  195B                     l3067:	
  5321                           ;incstack = 0
  5322                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5323                           
  5324  195B  01F4               	clrf	___wmul@product
  5325  195C  01F5               	clrf	___wmul@product+1
  5326  195D                     l3069:
  5327  195D  1C70               	btfss	___wmul@multiplier,0
  5328  195E  2960               	goto	u4621
  5329  195F  2961               	goto	u4620
  5330  1960                     u4621:
  5331  1960  2967               	goto	l410
  5332  1961                     u4620:
  5333  1961                     l3071:
  5334  1961  0872               	movf	___wmul@multiplicand,w
  5335  1962  07F4               	addwf	___wmul@product,f
  5336  1963  1803               	skipnc
  5337  1964  0AF5               	incf	___wmul@product+1,f
  5338  1965  0873               	movf	___wmul@multiplicand+1,w
  5339  1966  07F5               	addwf	___wmul@product+1,f
  5340  1967                     l410:
  5341  1967  3001               	movlw	1
  5342  1968                     u4635:
  5343  1968  1003               	clrc
  5344  1969  0DF2               	rlf	___wmul@multiplicand,f
  5345  196A  0DF3               	rlf	___wmul@multiplicand+1,f
  5346  196B  3EFF               	addlw	-1
  5347  196C  1D03               	skipz
  5348  196D  2968               	goto	u4635
  5349  196E                     l3073:
  5350  196E  3001               	movlw	1
  5351  196F                     u4645:
  5352  196F  1003               	clrc
  5353  1970  0CF1               	rrf	___wmul@multiplier+1,f
  5354  1971  0CF0               	rrf	___wmul@multiplier,f
  5355  1972  3EFF               	addlw	-1
  5356  1973  1D03               	skipz
  5357  1974  296F               	goto	u4645
  5358  1975                     l3075:
  5359  1975  0870               	movf	___wmul@multiplier,w
  5360  1976  0471               	iorwf	___wmul@multiplier+1,w
  5361  1977  1D03               	btfss	3,2
  5362  1978  297A               	goto	u4651
  5363  1979  297B               	goto	u4650
  5364  197A                     u4651:
  5365  197A  295D               	goto	l3069
  5366  197B                     u4650:
  5367  197B                     l3077:
  5368  197B  0875               	movf	___wmul@product+1,w
  5369  197C  00F1               	movwf	?___wmul+1
  5370  197D  0874               	movf	___wmul@product,w
  5371  197E  00F0               	movwf	?___wmul
  5372  197F                     l412:
  5373  197F  0008               	return
  5374  1980                     __end_of___wmul:
  5375                           
  5376                           	psect	text12
  5377  1AB2                     __ptext12:	
  5378 ;; *************** function ___llmod *****************
  5379 ;; Defined at:
  5380 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  divisor         4    0[BANK0 ] unsigned long 
  5383 ;;  dividend        4    4[BANK0 ] unsigned long 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  counter         1    9[BANK0 ] unsigned char 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  4    0[BANK0 ] unsigned long 
  5388 ;; Registers used:
  5389 ;;		wreg, status,2, status,0
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5395 ;;      Params:         0       8       0       0       0
  5396 ;;      Locals:         0       1       0       0       0
  5397 ;;      Temps:          0       1       0       0       0
  5398 ;;      Totals:         0      10       0       0       0
  5399 ;;Total ram usage:       10 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_sprintf
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           
  5409                           ;psect for function ___llmod
  5410  1AB2                     ___llmod:
  5411  1AB2                     l3181:	
  5412                           ;incstack = 0
  5413                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5414                           
  5415  1AB2  1283               	bcf	3,5	;RP0=0, select bank0
  5416  1AB3  1303               	bcf	3,6	;RP1=0, select bank0
  5417  1AB4  0823               	movf	___llmod@divisor+3,w
  5418  1AB5  0422               	iorwf	___llmod@divisor+2,w
  5419  1AB6  0421               	iorwf	___llmod@divisor+1,w
  5420  1AB7  0420               	iorwf	___llmod@divisor,w
  5421  1AB8  1903               	skipnz
  5422  1AB9  2ABB               	goto	u4941
  5423  1ABA  2ABC               	goto	u4940
  5424  1ABB                     u4941:
  5425  1ABB  2AFF               	goto	l3197
  5426  1ABC                     u4940:
  5427  1ABC                     l3183:
  5428  1ABC  01A9               	clrf	___llmod@counter
  5429  1ABD  0AA9               	incf	___llmod@counter,f
  5430  1ABE  2ACC               	goto	l3187
  5431  1ABF                     l3185:
  5432  1ABF  3001               	movlw	1
  5433  1AC0  00A8               	movwf	??___llmod
  5434  1AC1                     u4955:
  5435  1AC1  1003               	clrc
  5436  1AC2  0DA0               	rlf	___llmod@divisor,f
  5437  1AC3  0DA1               	rlf	___llmod@divisor+1,f
  5438  1AC4  0DA2               	rlf	___llmod@divisor+2,f
  5439  1AC5  0DA3               	rlf	___llmod@divisor+3,f
  5440  1AC6  0BA8               	decfsz	??___llmod,f
  5441  1AC7  2AC1               	goto	u4955
  5442  1AC8  3001               	movlw	1
  5443  1AC9  00A8               	movwf	??___llmod
  5444  1ACA  0828               	movf	??___llmod,w
  5445  1ACB  07A9               	addwf	___llmod@counter,f
  5446  1ACC                     l3187:
  5447  1ACC  1FA3               	btfss	___llmod@divisor+3,7
  5448  1ACD  2ACF               	goto	u4961
  5449  1ACE  2AD0               	goto	u4960
  5450  1ACF                     u4961:
  5451  1ACF  2ABF               	goto	l3185
  5452  1AD0                     u4960:
  5453  1AD0                     l3189:
  5454  1AD0  0823               	movf	___llmod@divisor+3,w
  5455  1AD1  0227               	subwf	___llmod@dividend+3,w
  5456  1AD2  1D03               	skipz
  5457  1AD3  2ADE               	goto	u4975
  5458  1AD4  0822               	movf	___llmod@divisor+2,w
  5459  1AD5  0226               	subwf	___llmod@dividend+2,w
  5460  1AD6  1D03               	skipz
  5461  1AD7  2ADE               	goto	u4975
  5462  1AD8  0821               	movf	___llmod@divisor+1,w
  5463  1AD9  0225               	subwf	___llmod@dividend+1,w
  5464  1ADA  1D03               	skipz
  5465  1ADB  2ADE               	goto	u4975
  5466  1ADC  0820               	movf	___llmod@divisor,w
  5467  1ADD  0224               	subwf	___llmod@dividend,w
  5468  1ADE                     u4975:
  5469  1ADE  1C03               	skipc
  5470  1ADF  2AE1               	goto	u4971
  5471  1AE0  2AE2               	goto	u4970
  5472  1AE1                     u4971:
  5473  1AE1  2AF0               	goto	l3193
  5474  1AE2                     u4970:
  5475  1AE2                     l3191:
  5476  1AE2  0820               	movf	___llmod@divisor,w
  5477  1AE3  02A4               	subwf	___llmod@dividend,f
  5478  1AE4  0821               	movf	___llmod@divisor+1,w
  5479  1AE5  1C03               	skipc
  5480  1AE6  0F21               	incfsz	___llmod@divisor+1,w
  5481  1AE7  02A5               	subwf	___llmod@dividend+1,f
  5482  1AE8  0822               	movf	___llmod@divisor+2,w
  5483  1AE9  1C03               	skipc
  5484  1AEA  0F22               	incfsz	___llmod@divisor+2,w
  5485  1AEB  02A6               	subwf	___llmod@dividend+2,f
  5486  1AEC  0823               	movf	___llmod@divisor+3,w
  5487  1AED  1C03               	skipc
  5488  1AEE  0F23               	incfsz	___llmod@divisor+3,w
  5489  1AEF  02A7               	subwf	___llmod@dividend+3,f
  5490  1AF0                     l3193:
  5491  1AF0  3001               	movlw	1
  5492  1AF1                     u4985:
  5493  1AF1  1003               	clrc
  5494  1AF2  0CA3               	rrf	___llmod@divisor+3,f
  5495  1AF3  0CA2               	rrf	___llmod@divisor+2,f
  5496  1AF4  0CA1               	rrf	___llmod@divisor+1,f
  5497  1AF5  0CA0               	rrf	___llmod@divisor,f
  5498  1AF6  3EFF               	addlw	-1
  5499  1AF7  1D03               	skipz
  5500  1AF8  2AF1               	goto	u4985
  5501  1AF9                     l3195:
  5502  1AF9  3001               	movlw	1
  5503  1AFA  02A9               	subwf	___llmod@counter,f
  5504  1AFB  1D03               	btfss	3,2
  5505  1AFC  2AFE               	goto	u4991
  5506  1AFD  2AFF               	goto	u4990
  5507  1AFE                     u4991:
  5508  1AFE  2AD0               	goto	l3189
  5509  1AFF                     u4990:
  5510  1AFF                     l3197:
  5511  1AFF  0827               	movf	___llmod@dividend+3,w
  5512  1B00  00A3               	movwf	?___llmod+3
  5513  1B01  0826               	movf	___llmod@dividend+2,w
  5514  1B02  00A2               	movwf	?___llmod+2
  5515  1B03  0825               	movf	___llmod@dividend+1,w
  5516  1B04  00A1               	movwf	?___llmod+1
  5517  1B05  0824               	movf	___llmod@dividend,w
  5518  1B06  00A0               	movwf	?___llmod
  5519  1B07                     l666:
  5520  1B07  0008               	return
  5521  1B08                     __end_of___llmod:
  5522                           
  5523                           	psect	text13
  5524  1C19                     __ptext13:	
  5525 ;; *************** function ___lldiv *****************
  5526 ;; Defined at:
  5527 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  divisor         4    0[COMMON] unsigned long 
  5530 ;;  dividend        4    4[COMMON] unsigned long 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;  quotient        4    9[COMMON] unsigned long 
  5533 ;;  counter         1   13[COMMON] unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  4    0[COMMON] unsigned long 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5543 ;;      Params:         8       0       0       0       0
  5544 ;;      Locals:         5       0       0       0       0
  5545 ;;      Temps:          1       0       0       0       0
  5546 ;;      Totals:        14       0       0       0       0
  5547 ;;Total ram usage:       14 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_sprintf
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           
  5557                           ;psect for function ___lldiv
  5558  1C19                     ___lldiv:
  5559  1C19                     l3081:	
  5560                           ;incstack = 0
  5561                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5562                           
  5563  1C19  3000               	movlw	0
  5564  1C1A  00FC               	movwf	___lldiv@quotient+3
  5565  1C1B  3000               	movlw	0
  5566  1C1C  00FB               	movwf	___lldiv@quotient+2
  5567  1C1D  3000               	movlw	0
  5568  1C1E  00FA               	movwf	___lldiv@quotient+1
  5569  1C1F  3000               	movlw	0
  5570  1C20  00F9               	movwf	___lldiv@quotient
  5571  1C21  0873               	movf	___lldiv@divisor+3,w
  5572  1C22  0472               	iorwf	___lldiv@divisor+2,w
  5573  1C23  0471               	iorwf	___lldiv@divisor+1,w
  5574  1C24  0470               	iorwf	___lldiv@divisor,w
  5575  1C25  1903               	skipnz
  5576  1C26  2C28               	goto	u4661
  5577  1C27  2C29               	goto	u4660
  5578  1C28                     u4661:
  5579  1C28  2C76               	goto	l3101
  5580  1C29                     u4660:
  5581  1C29                     l3083:
  5582  1C29  01FD               	clrf	___lldiv@counter
  5583  1C2A  0AFD               	incf	___lldiv@counter,f
  5584  1C2B  2C39               	goto	l3087
  5585  1C2C                     l3085:
  5586  1C2C  3001               	movlw	1
  5587  1C2D  00F8               	movwf	??___lldiv
  5588  1C2E                     u4675:
  5589  1C2E  1003               	clrc
  5590  1C2F  0DF0               	rlf	___lldiv@divisor,f
  5591  1C30  0DF1               	rlf	___lldiv@divisor+1,f
  5592  1C31  0DF2               	rlf	___lldiv@divisor+2,f
  5593  1C32  0DF3               	rlf	___lldiv@divisor+3,f
  5594  1C33  0BF8               	decfsz	??___lldiv,f
  5595  1C34  2C2E               	goto	u4675
  5596  1C35  3001               	movlw	1
  5597  1C36  00F8               	movwf	??___lldiv
  5598  1C37  0878               	movf	??___lldiv,w
  5599  1C38  07FD               	addwf	___lldiv@counter,f
  5600  1C39                     l3087:
  5601  1C39  1FF3               	btfss	___lldiv@divisor+3,7
  5602  1C3A  2C3C               	goto	u4681
  5603  1C3B  2C3D               	goto	u4680
  5604  1C3C                     u4681:
  5605  1C3C  2C2C               	goto	l3085
  5606  1C3D                     u4680:
  5607  1C3D                     l3089:
  5608  1C3D  3001               	movlw	1
  5609  1C3E  00F8               	movwf	??___lldiv
  5610  1C3F                     u4695:
  5611  1C3F  1003               	clrc
  5612  1C40  0DF9               	rlf	___lldiv@quotient,f
  5613  1C41  0DFA               	rlf	___lldiv@quotient+1,f
  5614  1C42  0DFB               	rlf	___lldiv@quotient+2,f
  5615  1C43  0DFC               	rlf	___lldiv@quotient+3,f
  5616  1C44  0BF8               	decfsz	??___lldiv,f
  5617  1C45  2C3F               	goto	u4695
  5618  1C46                     l3091:
  5619  1C46  0873               	movf	___lldiv@divisor+3,w
  5620  1C47  0277               	subwf	___lldiv@dividend+3,w
  5621  1C48  1D03               	skipz
  5622  1C49  2C54               	goto	u4705
  5623  1C4A  0872               	movf	___lldiv@divisor+2,w
  5624  1C4B  0276               	subwf	___lldiv@dividend+2,w
  5625  1C4C  1D03               	skipz
  5626  1C4D  2C54               	goto	u4705
  5627  1C4E  0871               	movf	___lldiv@divisor+1,w
  5628  1C4F  0275               	subwf	___lldiv@dividend+1,w
  5629  1C50  1D03               	skipz
  5630  1C51  2C54               	goto	u4705
  5631  1C52  0870               	movf	___lldiv@divisor,w
  5632  1C53  0274               	subwf	___lldiv@dividend,w
  5633  1C54                     u4705:
  5634  1C54  1C03               	skipc
  5635  1C55  2C57               	goto	u4701
  5636  1C56  2C58               	goto	u4700
  5637  1C57                     u4701:
  5638  1C57  2C67               	goto	l3097
  5639  1C58                     u4700:
  5640  1C58                     l3093:
  5641  1C58  0870               	movf	___lldiv@divisor,w
  5642  1C59  02F4               	subwf	___lldiv@dividend,f
  5643  1C5A  0871               	movf	___lldiv@divisor+1,w
  5644  1C5B  1C03               	skipc
  5645  1C5C  0F71               	incfsz	___lldiv@divisor+1,w
  5646  1C5D  02F5               	subwf	___lldiv@dividend+1,f
  5647  1C5E  0872               	movf	___lldiv@divisor+2,w
  5648  1C5F  1C03               	skipc
  5649  1C60  0F72               	incfsz	___lldiv@divisor+2,w
  5650  1C61  02F6               	subwf	___lldiv@dividend+2,f
  5651  1C62  0873               	movf	___lldiv@divisor+3,w
  5652  1C63  1C03               	skipc
  5653  1C64  0F73               	incfsz	___lldiv@divisor+3,w
  5654  1C65  02F7               	subwf	___lldiv@dividend+3,f
  5655  1C66                     l3095:
  5656  1C66  1479               	bsf	___lldiv@quotient,0
  5657  1C67                     l3097:
  5658  1C67  3001               	movlw	1
  5659  1C68                     u4715:
  5660  1C68  1003               	clrc
  5661  1C69  0CF3               	rrf	___lldiv@divisor+3,f
  5662  1C6A  0CF2               	rrf	___lldiv@divisor+2,f
  5663  1C6B  0CF1               	rrf	___lldiv@divisor+1,f
  5664  1C6C  0CF0               	rrf	___lldiv@divisor,f
  5665  1C6D  3EFF               	addlw	-1
  5666  1C6E  1D03               	skipz
  5667  1C6F  2C68               	goto	u4715
  5668  1C70                     l3099:
  5669  1C70  3001               	movlw	1
  5670  1C71  02FD               	subwf	___lldiv@counter,f
  5671  1C72  1D03               	btfss	3,2
  5672  1C73  2C75               	goto	u4721
  5673  1C74  2C76               	goto	u4720
  5674  1C75                     u4721:
  5675  1C75  2C3D               	goto	l3089
  5676  1C76                     u4720:
  5677  1C76                     l3101:
  5678  1C76  087C               	movf	___lldiv@quotient+3,w
  5679  1C77  00F3               	movwf	?___lldiv+3
  5680  1C78  087B               	movf	___lldiv@quotient+2,w
  5681  1C79  00F2               	movwf	?___lldiv+2
  5682  1C7A  087A               	movf	___lldiv@quotient+1,w
  5683  1C7B  00F1               	movwf	?___lldiv+1
  5684  1C7C  0879               	movf	___lldiv@quotient,w
  5685  1C7D  00F0               	movwf	?___lldiv
  5686  1C7E                     l446:
  5687  1C7E  0008               	return
  5688  1C7F                     __end_of___lldiv:
  5689                           
  5690                           	psect	text14
  5691  0807                     __ptext14:	
  5692 ;; *************** function ___fltol *****************
  5693 ;; Defined at:
  5694 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  f1              4   49[BANK0 ] unsigned long 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  exp1            1   59[BANK0 ] unsigned char 
  5699 ;;  sign1           1   58[BANK0 ] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  4   49[BANK0 ] long 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5709 ;;      Params:         0       4       0       0       0
  5710 ;;      Locals:         0       2       0       0       0
  5711 ;;      Temps:          0       5       0       0       0
  5712 ;;      Totals:         0      11       0       0       0
  5713 ;;Total ram usage:       11 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_sprintf
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           
  5723                           ;psect for function ___fltol
  5724  0807                     ___fltol:
  5725  0807                     l3145:	
  5726                           ;incstack = 0
  5727                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5728                           
  5729  0807  1003               	clrc
  5730  0808  1283               	bcf	3,5	;RP0=0, select bank0
  5731  0809  1303               	bcf	3,6	;RP1=0, select bank0
  5732  080A  0D53               	rlf	___fltol@f1+2,w
  5733  080B  0D54               	rlf	___fltol@f1+3,w
  5734  080C  00D5               	movwf	??___fltol
  5735  080D  0855               	movf	??___fltol,w
  5736  080E  00DB               	movwf	___fltol@exp1
  5737  080F  085B               	movf	___fltol@exp1,w
  5738  0810  1D03               	btfss	3,2
  5739  0811  2813               	goto	u4841
  5740  0812  2814               	goto	u4840
  5741  0813                     u4841:
  5742  0813  281D               	goto	l3151
  5743  0814                     u4840:
  5744  0814                     l3147:
  5745  0814  3000               	movlw	0
  5746  0815  00D4               	movwf	?___fltol+3
  5747  0816  3000               	movlw	0
  5748  0817  00D3               	movwf	?___fltol+2
  5749  0818  3000               	movlw	0
  5750  0819  00D2               	movwf	?___fltol+1
  5751  081A  3000               	movlw	0
  5752  081B  00D1               	movwf	?___fltol
  5753  081C  2882               	goto	l613
  5754  081D                     l3151:
  5755  081D  0851               	movf	___fltol@f1,w
  5756  081E  00D5               	movwf	??___fltol
  5757  081F  0852               	movf	___fltol@f1+1,w
  5758  0820  00D6               	movwf	??___fltol+1
  5759  0821  0853               	movf	___fltol@f1+2,w
  5760  0822  00D7               	movwf	??___fltol+2
  5761  0823  0854               	movf	___fltol@f1+3,w
  5762  0824  00D8               	movwf	??___fltol+3
  5763  0825  301F               	movlw	31
  5764  0826                     u4855:
  5765  0826  1003               	clrc
  5766  0827  0CD8               	rrf	??___fltol+3,f
  5767  0828  0CD7               	rrf	??___fltol+2,f
  5768  0829  0CD6               	rrf	??___fltol+1,f
  5769  082A  0CD5               	rrf	??___fltol,f
  5770  082B                     u4850:
  5771  082B  3EFF               	addlw	-1
  5772  082C  1D03               	skipz
  5773  082D  2826               	goto	u4855
  5774  082E  0855               	movf	??___fltol,w
  5775  082F  00D9               	movwf	??___fltol+4
  5776  0830  0859               	movf	??___fltol+4,w
  5777  0831  00DA               	movwf	___fltol@sign1
  5778  0832                     l3153:
  5779  0832  17D3               	bsf	___fltol@f1+2,7
  5780  0833                     l3155:
  5781  0833  30FF               	movlw	255
  5782  0834  05D1               	andwf	___fltol@f1,f
  5783  0835  30FF               	movlw	255
  5784  0836  05D2               	andwf	___fltol@f1+1,f
  5785  0837  30FF               	movlw	255
  5786  0838  05D3               	andwf	___fltol@f1+2,f
  5787  0839  3000               	movlw	0
  5788  083A  05D4               	andwf	___fltol@f1+3,f
  5789  083B                     l3157:
  5790  083B  3096               	movlw	150
  5791  083C  02DB               	subwf	___fltol@exp1,f
  5792  083D                     l3159:
  5793  083D  1FDB               	btfss	___fltol@exp1,7
  5794  083E  2840               	goto	u4861
  5795  083F  2841               	goto	u4860
  5796  0840                     u4861:
  5797  0840  285B               	goto	l3169
  5798  0841                     u4860:
  5799  0841                     l3161:
  5800  0841  085B               	movf	___fltol@exp1,w
  5801  0842  3A80               	xorlw	128
  5802  0843  3E97               	addlw	151
  5803  0844  1803               	skipnc
  5804  0845  2847               	goto	u4871
  5805  0846  2848               	goto	u4870
  5806  0847                     u4871:
  5807  0847  2849               	goto	l3167
  5808  0848                     u4870:
  5809  0848  2814               	goto	l3147
  5810  0849                     l3167:
  5811  0849  3001               	movlw	1
  5812  084A                     u4885:
  5813  084A  1003               	clrc
  5814  084B  0CD4               	rrf	___fltol@f1+3,f
  5815  084C  0CD3               	rrf	___fltol@f1+2,f
  5816  084D  0CD2               	rrf	___fltol@f1+1,f
  5817  084E  0CD1               	rrf	___fltol@f1,f
  5818  084F  3EFF               	addlw	-1
  5819  0850  1D03               	skipz
  5820  0851  284A               	goto	u4885
  5821  0852  3001               	movlw	1
  5822  0853  00D5               	movwf	??___fltol
  5823  0854  0855               	movf	??___fltol,w
  5824  0855  07DB               	addwf	___fltol@exp1,f
  5825  0856  1D03               	btfss	3,2
  5826  0857  2859               	goto	u4891
  5827  0858  285A               	goto	u4890
  5828  0859                     u4891:
  5829  0859  2849               	goto	l3167
  5830  085A                     u4890:
  5831  085A  2872               	goto	l3177
  5832  085B                     l3169:
  5833  085B  3020               	movlw	32
  5834  085C  025B               	subwf	___fltol@exp1,w
  5835  085D  1C03               	skipc
  5836  085E  2860               	goto	u4901
  5837  085F  2861               	goto	u4900
  5838  0860                     u4901:
  5839  0860  286D               	goto	l620
  5840  0861                     u4900:
  5841  0861  2814               	goto	l3147
  5842  0862                     l3175:
  5843  0862  3001               	movlw	1
  5844  0863  00D5               	movwf	??___fltol
  5845  0864                     u4915:
  5846  0864  1003               	clrc
  5847  0865  0DD1               	rlf	___fltol@f1,f
  5848  0866  0DD2               	rlf	___fltol@f1+1,f
  5849  0867  0DD3               	rlf	___fltol@f1+2,f
  5850  0868  0DD4               	rlf	___fltol@f1+3,f
  5851  0869  0BD5               	decfsz	??___fltol,f
  5852  086A  2864               	goto	u4915
  5853  086B  3001               	movlw	1
  5854  086C  02DB               	subwf	___fltol@exp1,f
  5855  086D                     l620:
  5856  086D  085B               	movf	___fltol@exp1,w
  5857  086E  1D03               	btfss	3,2
  5858  086F  2871               	goto	u4921
  5859  0870  2872               	goto	u4920
  5860  0871                     u4921:
  5861  0871  2862               	goto	l3175
  5862  0872                     u4920:
  5863  0872                     l3177:
  5864  0872  085A               	movf	___fltol@sign1,w
  5865  0873  1903               	btfsc	3,2
  5866  0874  2876               	goto	u4931
  5867  0875  2877               	goto	u4930
  5868  0876                     u4931:
  5869  0876  2882               	goto	l623
  5870  0877                     u4930:
  5871  0877                     l3179:
  5872  0877  09D1               	comf	___fltol@f1,f
  5873  0878  09D2               	comf	___fltol@f1+1,f
  5874  0879  09D3               	comf	___fltol@f1+2,f
  5875  087A  09D4               	comf	___fltol@f1+3,f
  5876  087B  0AD1               	incf	___fltol@f1,f
  5877  087C  1903               	skipnz
  5878  087D  0AD2               	incf	___fltol@f1+1,f
  5879  087E  1903               	skipnz
  5880  087F  0AD3               	incf	___fltol@f1+2,f
  5881  0880  1903               	skipnz
  5882  0881  0AD4               	incf	___fltol@f1+3,f
  5883  0882                     l623:
  5884  0882                     l613:
  5885  0882  0008               	return
  5886  0883                     __end_of___fltol:
  5887                           
  5888                           	psect	text15
  5889  1937                     __ptext15:	
  5890 ;; *************** function ___flsub *****************
  5891 ;; Defined at:
  5892 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  a               4   70[BANK0 ] long 
  5895 ;;  b               4   74[BANK0 ] long 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  4   70[BANK0 ] long 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5907 ;;      Params:         0       8       0       0       0
  5908 ;;      Locals:         0       0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0
  5910 ;;      Totals:         0       8       0       0       0
  5911 ;;Total ram usage:        8 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    1
  5914 ;; This function calls:
  5915 ;;		___fladd
  5916 ;; This function is called by:
  5917 ;;		_sprintf
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           
  5922                           ;psect for function ___flsub
  5923  1937                     ___flsub:
  5924  1937                     l3201:	
  5925                           ;incstack = 0
  5926                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5927                           
  5928  1937  3080               	movlw	128
  5929  1938  1283               	bcf	3,5	;RP0=0, select bank0
  5930  1939  1303               	bcf	3,6	;RP1=0, select bank0
  5931  193A  06E9               	xorwf	___flsub@a+3,f
  5932  193B                     l3203:
  5933  193B  086D               	movf	___flsub@b+3,w
  5934  193C  00D5               	movwf	___fladd@b+3
  5935  193D  086C               	movf	___flsub@b+2,w
  5936  193E  00D4               	movwf	___fladd@b+2
  5937  193F  086B               	movf	___flsub@b+1,w
  5938  1940  00D3               	movwf	___fladd@b+1
  5939  1941  086A               	movf	___flsub@b,w
  5940  1942  00D2               	movwf	___fladd@b
  5941  1943  0869               	movf	___flsub@a+3,w
  5942  1944  00D9               	movwf	___fladd@a+3
  5943  1945  0868               	movf	___flsub@a+2,w
  5944  1946  00D8               	movwf	___fladd@a+2
  5945  1947  0867               	movf	___flsub@a+1,w
  5946  1948  00D7               	movwf	___fladd@a+1
  5947  1949  0866               	movf	___flsub@a,w
  5948  194A  00D6               	movwf	___fladd@a
  5949  194B  160A  118A  22B6  160A  158A  	fcall	___fladd
  5950  1950  1283               	bcf	3,5	;RP0=0, select bank0
  5951  1951  1303               	bcf	3,6	;RP1=0, select bank0
  5952  1952  0855               	movf	?___fladd+3,w
  5953  1953  00E9               	movwf	?___flsub+3
  5954  1954  0854               	movf	?___fladd+2,w
  5955  1955  00E8               	movwf	?___flsub+2
  5956  1956  0853               	movf	?___fladd+1,w
  5957  1957  00E7               	movwf	?___flsub+1
  5958  1958  0852               	movf	?___fladd,w
  5959  1959  00E6               	movwf	?___flsub
  5960  195A                     l783:
  5961  195A  0008               	return
  5962  195B                     __end_of___flsub:
  5963                           
  5964                           	psect	text16
  5965  12B6                     __ptext16:	
  5966 ;; *************** function ___fladd *****************
  5967 ;; Defined at:
  5968 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  b               4   50[BANK0 ] long 
  5971 ;;  a               4   54[BANK0 ] long 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  grs             1   69[BANK0 ] unsigned char 
  5974 ;;  bexp            1   68[BANK0 ] unsigned char 
  5975 ;;  aexp            1   67[BANK0 ] unsigned char 
  5976 ;;  signs           1   66[BANK0 ] unsigned char 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  4   50[BANK0 ] unsigned char 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0, btemp+1
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5986 ;;      Params:         0       8       0       0       0
  5987 ;;      Locals:         0       4       0       0       0
  5988 ;;      Temps:          0       8       0       0       0
  5989 ;;      Totals:         0      20       0       0       0
  5990 ;;Total ram usage:       20 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_sprintf
  5996 ;;		___flsub
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function ___fladd
  6002  12B6                     ___fladd:
  6003  12B6                     l2535:	
  6004                           ;incstack = 0
  6005                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6006                           
  6007  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  6008  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  6009  12B8  0855               	movf	___fladd@b+3,w
  6010  12B9  3980               	andlw	128
  6011  12BA  00DA               	movwf	??___fladd
  6012  12BB  085A               	movf	??___fladd,w
  6013  12BC  00E2               	movwf	___fladd@signs
  6014  12BD                     l2537:
  6015  12BD  0855               	movf	___fladd@b+3,w
  6016  12BE  00DA               	movwf	??___fladd
  6017  12BF  075A               	addwf	??___fladd,w
  6018  12C0  00DB               	movwf	??___fladd+1
  6019  12C1  085B               	movf	??___fladd+1,w
  6020  12C2  00E4               	movwf	___fladd@bexp
  6021  12C3                     l2539:
  6022  12C3  1FD4               	btfss	___fladd@b+2,7
  6023  12C4  2AC6               	goto	u3251
  6024  12C5  2AC7               	goto	u3250
  6025  12C6                     u3251:
  6026  12C6  2AC8               	goto	l2543
  6027  12C7                     u3250:
  6028  12C7                     l2541:
  6029  12C7  1464               	bsf	___fladd@bexp,0
  6030  12C8                     l2543:
  6031  12C8  0864               	movf	___fladd@bexp,w
  6032  12C9  1903               	btfsc	3,2
  6033  12CA  2ACC               	goto	u3261
  6034  12CB  2ACD               	goto	u3260
  6035  12CC                     u3261:
  6036  12CC  2ADD               	goto	l2553
  6037  12CD                     u3260:
  6038  12CD                     l2545:
  6039  12CD  0A64               	incf	___fladd@bexp,w
  6040  12CE  1D03               	btfss	3,2
  6041  12CF  2AD1               	goto	u3271
  6042  12D0  2AD2               	goto	u3270
  6043  12D1                     u3271:
  6044  12D1  2ADA               	goto	l2549
  6045  12D2                     u3270:
  6046  12D2                     l2547:
  6047  12D2  3000               	movlw	0
  6048  12D3  00D5               	movwf	___fladd@b+3
  6049  12D4  3000               	movlw	0
  6050  12D5  00D4               	movwf	___fladd@b+2
  6051  12D6  3000               	movlw	0
  6052  12D7  00D3               	movwf	___fladd@b+1
  6053  12D8  3000               	movlw	0
  6054  12D9  00D2               	movwf	___fladd@b
  6055  12DA                     l2549:
  6056  12DA  17D4               	bsf	___fladd@b+2,7
  6057  12DB                     l2551:
  6058  12DB  01D5               	clrf	___fladd@b+3
  6059  12DC  2AE5               	goto	l2555
  6060  12DD                     l2553:
  6061  12DD  3000               	movlw	0
  6062  12DE  00D5               	movwf	___fladd@b+3
  6063  12DF  3000               	movlw	0
  6064  12E0  00D4               	movwf	___fladd@b+2
  6065  12E1  3000               	movlw	0
  6066  12E2  00D3               	movwf	___fladd@b+1
  6067  12E3  3000               	movlw	0
  6068  12E4  00D2               	movwf	___fladd@b
  6069  12E5                     l2555:
  6070  12E5  0859               	movf	___fladd@a+3,w
  6071  12E6  3980               	andlw	128
  6072  12E7  00DA               	movwf	??___fladd
  6073  12E8  085A               	movf	??___fladd,w
  6074  12E9  00E3               	movwf	___fladd@aexp
  6075  12EA                     l2557:
  6076  12EA  0863               	movf	___fladd@aexp,w
  6077  12EB  0662               	xorwf	___fladd@signs,w
  6078  12EC  1903               	skipnz
  6079  12ED  2AEF               	goto	u3281
  6080  12EE  2AF0               	goto	u3280
  6081  12EF                     u3281:
  6082  12EF  2AF1               	goto	l2561
  6083  12F0                     u3280:
  6084  12F0                     l2559:
  6085  12F0  1762               	bsf	___fladd@signs,6
  6086  12F1                     l2561:
  6087  12F1  0859               	movf	___fladd@a+3,w
  6088  12F2  00DA               	movwf	??___fladd
  6089  12F3  075A               	addwf	??___fladd,w
  6090  12F4  00DB               	movwf	??___fladd+1
  6091  12F5  085B               	movf	??___fladd+1,w
  6092  12F6  00E3               	movwf	___fladd@aexp
  6093  12F7                     l2563:
  6094  12F7  1FD8               	btfss	___fladd@a+2,7
  6095  12F8  2AFA               	goto	u3291
  6096  12F9  2AFB               	goto	u3290
  6097  12FA                     u3291:
  6098  12FA  2AFC               	goto	l2567
  6099  12FB                     u3290:
  6100  12FB                     l2565:
  6101  12FB  1463               	bsf	___fladd@aexp,0
  6102  12FC                     l2567:
  6103  12FC  0863               	movf	___fladd@aexp,w
  6104  12FD  1903               	btfsc	3,2
  6105  12FE  2B00               	goto	u3301
  6106  12FF  2B01               	goto	u3300
  6107  1300                     u3301:
  6108  1300  2B11               	goto	l2577
  6109  1301                     u3300:
  6110  1301                     l2569:
  6111  1301  0A63               	incf	___fladd@aexp,w
  6112  1302  1D03               	btfss	3,2
  6113  1303  2B05               	goto	u3311
  6114  1304  2B06               	goto	u3310
  6115  1305                     u3311:
  6116  1305  2B0E               	goto	l2573
  6117  1306                     u3310:
  6118  1306                     l2571:
  6119  1306  3000               	movlw	0
  6120  1307  00D9               	movwf	___fladd@a+3
  6121  1308  3000               	movlw	0
  6122  1309  00D8               	movwf	___fladd@a+2
  6123  130A  3000               	movlw	0
  6124  130B  00D7               	movwf	___fladd@a+1
  6125  130C  3000               	movlw	0
  6126  130D  00D6               	movwf	___fladd@a
  6127  130E                     l2573:
  6128  130E  17D8               	bsf	___fladd@a+2,7
  6129  130F                     l2575:
  6130  130F  01D9               	clrf	___fladd@a+3
  6131  1310  2B19               	goto	l737
  6132  1311                     l2577:
  6133  1311  3000               	movlw	0
  6134  1312  00D9               	movwf	___fladd@a+3
  6135  1313  3000               	movlw	0
  6136  1314  00D8               	movwf	___fladd@a+2
  6137  1315  3000               	movlw	0
  6138  1316  00D7               	movwf	___fladd@a+1
  6139  1317  3000               	movlw	0
  6140  1318  00D6               	movwf	___fladd@a
  6141  1319                     l737:
  6142  1319  0864               	movf	___fladd@bexp,w
  6143  131A  0263               	subwf	___fladd@aexp,w
  6144  131B  1803               	skipnc
  6145  131C  2B1E               	goto	u3321
  6146  131D  2B1F               	goto	u3320
  6147  131E                     u3321:
  6148  131E  2B63               	goto	l2613
  6149  131F                     u3320:
  6150  131F                     l2579:
  6151  131F  1F62               	btfss	___fladd@signs,6
  6152  1320  2B22               	goto	u3331
  6153  1321  2B23               	goto	u3330
  6154  1322                     u3331:
  6155  1322  2B27               	goto	l2583
  6156  1323                     u3330:
  6157  1323                     l2581:
  6158  1323  3080               	movlw	128
  6159  1324  00DA               	movwf	??___fladd
  6160  1325  085A               	movf	??___fladd,w
  6161  1326  06E2               	xorwf	___fladd@signs,f
  6162  1327                     l2583:
  6163  1327  0864               	movf	___fladd@bexp,w
  6164  1328  00DA               	movwf	??___fladd
  6165  1329  085A               	movf	??___fladd,w
  6166  132A  00E5               	movwf	___fladd@grs
  6167  132B                     l2585:
  6168  132B  0863               	movf	___fladd@aexp,w
  6169  132C  00DA               	movwf	??___fladd
  6170  132D  085A               	movf	??___fladd,w
  6171  132E  00E4               	movwf	___fladd@bexp
  6172  132F                     l2587:
  6173  132F  0865               	movf	___fladd@grs,w
  6174  1330  00DA               	movwf	??___fladd
  6175  1331  085A               	movf	??___fladd,w
  6176  1332  00E3               	movwf	___fladd@aexp
  6177  1333                     l2589:
  6178  1333  0852               	movf	___fladd@b,w
  6179  1334  00DA               	movwf	??___fladd
  6180  1335  085A               	movf	??___fladd,w
  6181  1336  00E5               	movwf	___fladd@grs
  6182  1337                     l2591:
  6183  1337  0856               	movf	___fladd@a,w
  6184  1338  00DA               	movwf	??___fladd
  6185  1339  085A               	movf	??___fladd,w
  6186  133A  00D2               	movwf	___fladd@b
  6187  133B                     l2593:
  6188  133B  0865               	movf	___fladd@grs,w
  6189  133C  00DA               	movwf	??___fladd
  6190  133D  085A               	movf	??___fladd,w
  6191  133E  00D6               	movwf	___fladd@a
  6192  133F                     l2595:
  6193  133F  0853               	movf	___fladd@b+1,w
  6194  1340  00DA               	movwf	??___fladd
  6195  1341  085A               	movf	??___fladd,w
  6196  1342  00E5               	movwf	___fladd@grs
  6197  1343                     l2597:
  6198  1343  0857               	movf	___fladd@a+1,w
  6199  1344  00DA               	movwf	??___fladd
  6200  1345  085A               	movf	??___fladd,w
  6201  1346  00D3               	movwf	___fladd@b+1
  6202  1347                     l2599:
  6203  1347  0865               	movf	___fladd@grs,w
  6204  1348  00DA               	movwf	??___fladd
  6205  1349  085A               	movf	??___fladd,w
  6206  134A  00D7               	movwf	___fladd@a+1
  6207  134B                     l2601:
  6208  134B  0854               	movf	___fladd@b+2,w
  6209  134C  00DA               	movwf	??___fladd
  6210  134D  085A               	movf	??___fladd,w
  6211  134E  00E5               	movwf	___fladd@grs
  6212  134F                     l2603:
  6213  134F  0858               	movf	___fladd@a+2,w
  6214  1350  00DA               	movwf	??___fladd
  6215  1351  085A               	movf	??___fladd,w
  6216  1352  00D4               	movwf	___fladd@b+2
  6217  1353                     l2605:
  6218  1353  0865               	movf	___fladd@grs,w
  6219  1354  00DA               	movwf	??___fladd
  6220  1355  085A               	movf	??___fladd,w
  6221  1356  00D8               	movwf	___fladd@a+2
  6222  1357                     l2607:
  6223  1357  0855               	movf	___fladd@b+3,w
  6224  1358  00DA               	movwf	??___fladd
  6225  1359  085A               	movf	??___fladd,w
  6226  135A  00E5               	movwf	___fladd@grs
  6227  135B                     l2609:
  6228  135B  0859               	movf	___fladd@a+3,w
  6229  135C  00DA               	movwf	??___fladd
  6230  135D  085A               	movf	??___fladd,w
  6231  135E  00D5               	movwf	___fladd@b+3
  6232  135F                     l2611:
  6233  135F  0865               	movf	___fladd@grs,w
  6234  1360  00DA               	movwf	??___fladd
  6235  1361  085A               	movf	??___fladd,w
  6236  1362  00D9               	movwf	___fladd@a+3
  6237  1363                     l2613:
  6238  1363  01E5               	clrf	___fladd@grs
  6239  1364                     l2615:
  6240  1364  0863               	movf	___fladd@aexp,w
  6241  1365  00DA               	movwf	??___fladd
  6242  1366  01DB               	clrf	??___fladd+1
  6243  1367  085B               	movf	??___fladd+1,w
  6244  1368  00DD               	movwf	??___fladd+3
  6245  1369  0864               	movf	___fladd@bexp,w
  6246  136A  025A               	subwf	??___fladd,w
  6247  136B  00DC               	movwf	??___fladd+2
  6248  136C  1C03               	skipc
  6249  136D  03DD               	decf	??___fladd+3,f
  6250  136E  085D               	movf	??___fladd+3,w
  6251  136F  3A80               	xorlw	128
  6252  1370  00FF               	movwf	btemp+1
  6253  1371  3080               	movlw	128
  6254  1372  027F               	subwf	btemp+1,w
  6255  1373  1D03               	skipz
  6256  1374  2B77               	goto	u3345
  6257  1375  301A               	movlw	26
  6258  1376  025C               	subwf	??___fladd+2,w
  6259  1377                     u3345:
  6260  1377  1C03               	skipc
  6261  1378  2B7A               	goto	u3341
  6262  1379  2B7B               	goto	u3340
  6263  137A                     u3341:
  6264  137A  2BB8               	goto	l2631
  6265  137B                     u3340:
  6266  137B                     l2617:
  6267  137B  1283               	bcf	3,5	;RP0=0, select bank0
  6268  137C  1303               	bcf	3,6	;RP1=0, select bank0
  6269  137D  0855               	movf	___fladd@b+3,w
  6270  137E  0454               	iorwf	___fladd@b+2,w
  6271  137F  0453               	iorwf	___fladd@b+1,w
  6272  1380  0452               	iorwf	___fladd@b,w
  6273  1381  1D03               	skipz
  6274  1382  2B84               	goto	u3351
  6275  1383  2B86               	goto	u3350
  6276  1384                     u3351:
  6277  1384  3001               	movlw	1
  6278  1385  2B87               	goto	u3360
  6279  1386                     u3350:
  6280  1386  3000               	movlw	0
  6281  1387                     u3360:
  6282  1387  00DA               	movwf	??___fladd
  6283  1388  085A               	movf	??___fladd,w
  6284  1389  00E5               	movwf	___fladd@grs
  6285  138A  3000               	movlw	0
  6286  138B  00D5               	movwf	___fladd@b+3
  6287  138C  3000               	movlw	0
  6288  138D  00D4               	movwf	___fladd@b+2
  6289  138E  3000               	movlw	0
  6290  138F  00D3               	movwf	___fladd@b+1
  6291  1390  3000               	movlw	0
  6292  1391  00D2               	movwf	___fladd@b
  6293  1392  0863               	movf	___fladd@aexp,w
  6294  1393  00DA               	movwf	??___fladd
  6295  1394  085A               	movf	??___fladd,w
  6296  1395  00E4               	movwf	___fladd@bexp
  6297  1396  2BC0               	goto	l741
  6298  1397                     l743:
  6299  1397  1C65               	btfss	___fladd@grs,0
  6300  1398  2B9A               	goto	u3371
  6301  1399  2B9B               	goto	u3370
  6302  139A                     u3371:
  6303  139A  2BA4               	goto	l2621
  6304  139B                     u3370:
  6305  139B                     l2619:
  6306  139B  0865               	movf	___fladd@grs,w
  6307  139C  00DA               	movwf	??___fladd
  6308  139D  1003               	clrc
  6309  139E  0C5A               	rrf	??___fladd,w
  6310  139F  3801               	iorlw	1
  6311  13A0  00DB               	movwf	??___fladd+1
  6312  13A1  085B               	movf	??___fladd+1,w
  6313  13A2  00E5               	movwf	___fladd@grs
  6314  13A3  2BA6               	goto	l2623
  6315  13A4                     l2621:
  6316  13A4  1003               	clrc
  6317  13A5  0CE5               	rrf	___fladd@grs,f
  6318  13A6                     l2623:
  6319  13A6  1C52               	btfss	___fladd@b,0
  6320  13A7  2BA9               	goto	u3381
  6321  13A8  2BAA               	goto	u3380
  6322  13A9                     u3381:
  6323  13A9  2BAB               	goto	l2627
  6324  13AA                     u3380:
  6325  13AA                     l2625:
  6326  13AA  17E5               	bsf	___fladd@grs,7
  6327  13AB                     l2627:
  6328  13AB  3001               	movlw	1
  6329  13AC  00DA               	movwf	??___fladd
  6330  13AD                     u3395:
  6331  13AD  0D55               	rlf	___fladd@b+3,w
  6332  13AE  0CD5               	rrf	___fladd@b+3,f
  6333  13AF  0CD4               	rrf	___fladd@b+2,f
  6334  13B0  0CD3               	rrf	___fladd@b+1,f
  6335  13B1  0CD2               	rrf	___fladd@b,f
  6336  13B2  0BDA               	decfsz	??___fladd& (0+127),f
  6337  13B3  2BAD               	goto	u3395
  6338  13B4                     l2629:
  6339  13B4  3001               	movlw	1
  6340  13B5  00DA               	movwf	??___fladd
  6341  13B6  085A               	movf	??___fladd,w
  6342  13B7  07E4               	addwf	___fladd@bexp,f
  6343  13B8                     l2631:
  6344  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  6345  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  6346  13BA  0863               	movf	___fladd@aexp,w
  6347  13BB  0264               	subwf	___fladd@bexp,w
  6348  13BC  1C03               	skipc
  6349  13BD  2BBF               	goto	u3401
  6350  13BE  2BC0               	goto	u3400
  6351  13BF                     u3401:
  6352  13BF  2B97               	goto	l743
  6353  13C0                     u3400:
  6354  13C0                     l741:
  6355  13C0  1B62               	btfsc	___fladd@signs,6
  6356  13C1  2BC3               	goto	u3411
  6357  13C2  2BC4               	goto	u3410
  6358  13C3                     u3411:
  6359  13C3  2C0F               	goto	l2657
  6360  13C4                     u3410:
  6361  13C4                     l2633:
  6362  13C4  0864               	movf	___fladd@bexp,w
  6363  13C5  1D03               	btfss	3,2
  6364  13C6  2BC8               	goto	u3421
  6365  13C7  2BC9               	goto	u3420
  6366  13C8                     u3421:
  6367  13C8  2BD2               	goto	l2639
  6368  13C9                     u3420:
  6369  13C9                     l2635:
  6370  13C9  3000               	movlw	0
  6371  13CA  00D5               	movwf	?___fladd+3
  6372  13CB  3000               	movlw	0
  6373  13CC  00D4               	movwf	?___fladd+2
  6374  13CD  3000               	movlw	0
  6375  13CE  00D3               	movwf	?___fladd+1
  6376  13CF  3000               	movlw	0
  6377  13D0  00D2               	movwf	?___fladd
  6378  13D1  2D3D               	goto	l750
  6379  13D2                     l2639:
  6380  13D2  0856               	movf	___fladd@a,w
  6381  13D3  07D2               	addwf	___fladd@b,f
  6382  13D4  0857               	movf	___fladd@a+1,w
  6383  13D5  1103               	clrz
  6384  13D6  1803               	skipnc
  6385  13D7  3E01               	addlw	1
  6386  13D8  1903               	skipnz
  6387  13D9  2BDB               	goto	u3431
  6388  13DA  07D3               	addwf	___fladd@b+1,f
  6389  13DB                     u3431:
  6390  13DB  0858               	movf	___fladd@a+2,w
  6391  13DC  1103               	clrz
  6392  13DD  1803               	skipnc
  6393  13DE  3E01               	addlw	1
  6394  13DF  1903               	skipnz
  6395  13E0  2BE2               	goto	u3432
  6396  13E1  07D4               	addwf	___fladd@b+2,f
  6397  13E2                     u3432:
  6398  13E2  0859               	movf	___fladd@a+3,w
  6399  13E3  1103               	clrz
  6400  13E4  1803               	skipnc
  6401  13E5  3E01               	addlw	1
  6402  13E6  1903               	skipnz
  6403  13E7  2BE9               	goto	u3433
  6404  13E8  07D5               	addwf	___fladd@b+3,f
  6405  13E9                     u3433:
  6406  13E9                     l2641:
  6407  13E9  1C55               	btfss	___fladd@b+3,0
  6408  13EA  2BEC               	goto	u3441
  6409  13EB  2BED               	goto	u3440
  6410  13EC                     u3441:
  6411  13EC  2CC3               	goto	l2691
  6412  13ED                     u3440:
  6413  13ED                     l2643:
  6414  13ED  1C65               	btfss	___fladd@grs,0
  6415  13EE  2BF0               	goto	u3451
  6416  13EF  2BF1               	goto	u3450
  6417  13F0                     u3451:
  6418  13F0  2BFA               	goto	l2647
  6419  13F1                     u3450:
  6420  13F1                     l2645:
  6421  13F1  0865               	movf	___fladd@grs,w
  6422  13F2  00DA               	movwf	??___fladd
  6423  13F3  1003               	clrc
  6424  13F4  0C5A               	rrf	??___fladd,w
  6425  13F5  3801               	iorlw	1
  6426  13F6  00DB               	movwf	??___fladd+1
  6427  13F7  085B               	movf	??___fladd+1,w
  6428  13F8  00E5               	movwf	___fladd@grs
  6429  13F9  2BFC               	goto	l2649
  6430  13FA                     l2647:
  6431  13FA  1003               	clrc
  6432  13FB  0CE5               	rrf	___fladd@grs,f
  6433  13FC                     l2649:
  6434  13FC  1C52               	btfss	___fladd@b,0
  6435  13FD  2BFF               	goto	u3461
  6436  13FE  2C00               	goto	u3460
  6437  13FF                     u3461:
  6438  13FF  2C01               	goto	l2653
  6439  1400                     u3460:
  6440  1400                     l2651:
  6441  1400  17E5               	bsf	___fladd@grs,7
  6442  1401                     l2653:
  6443  1401  3001               	movlw	1
  6444  1402  00DA               	movwf	??___fladd
  6445  1403                     u3475:
  6446  1403  0D55               	rlf	___fladd@b+3,w
  6447  1404  0CD5               	rrf	___fladd@b+3,f
  6448  1405  0CD4               	rrf	___fladd@b+2,f
  6449  1406  0CD3               	rrf	___fladd@b+1,f
  6450  1407  0CD2               	rrf	___fladd@b,f
  6451  1408  0BDA               	decfsz	??___fladd& (0+127),f
  6452  1409  2C03               	goto	u3475
  6453  140A                     l2655:
  6454  140A  3001               	movlw	1
  6455  140B  00DA               	movwf	??___fladd
  6456  140C  085A               	movf	??___fladd,w
  6457  140D  07E4               	addwf	___fladd@bexp,f
  6458  140E  2CC3               	goto	l2691
  6459  140F                     l2657:
  6460  140F  0855               	movf	___fladd@b+3,w
  6461  1410  3A80               	xorlw	128
  6462  1411  00FF               	movwf	btemp+1
  6463  1412  0859               	movf	___fladd@a+3,w
  6464  1413  3A80               	xorlw	128
  6465  1414  027F               	subwf	btemp+1,w
  6466  1415  1D03               	skipz
  6467  1416  2C21               	goto	u3483
  6468  1417  0858               	movf	___fladd@a+2,w
  6469  1418  0254               	subwf	___fladd@b+2,w
  6470  1419  1D03               	skipz
  6471  141A  2C21               	goto	u3483
  6472  141B  0857               	movf	___fladd@a+1,w
  6473  141C  0253               	subwf	___fladd@b+1,w
  6474  141D  1D03               	skipz
  6475  141E  2C21               	goto	u3483
  6476  141F  0856               	movf	___fladd@a,w
  6477  1420  0252               	subwf	___fladd@b,w
  6478  1421                     u3483:
  6479  1421  1803               	skipnc
  6480  1422  2C24               	goto	u3481
  6481  1423  2C25               	goto	u3480
  6482  1424                     u3481:
  6483  1424  2C7D               	goto	l2667
  6484  1425                     u3480:
  6485  1425                     l2659:
  6486  1425  30FF               	movlw	255
  6487  1426  00DA               	movwf	??___fladd
  6488  1427  30FF               	movlw	255
  6489  1428  00DB               	movwf	??___fladd+1
  6490  1429  30FF               	movlw	255
  6491  142A  00DC               	movwf	??___fladd+2
  6492  142B  30FF               	movlw	255
  6493  142C  00DD               	movwf	??___fladd+3
  6494  142D  0856               	movf	___fladd@a,w
  6495  142E  00DE               	movwf	??___fladd+4
  6496  142F  0857               	movf	___fladd@a+1,w
  6497  1430  00DF               	movwf	??___fladd+5
  6498  1431  0858               	movf	___fladd@a+2,w
  6499  1432  00E0               	movwf	??___fladd+6
  6500  1433  0859               	movf	___fladd@a+3,w
  6501  1434  00E1               	movwf	??___fladd+7
  6502  1435  0852               	movf	___fladd@b,w
  6503  1436  02DE               	subwf	??___fladd+4,f
  6504  1437  0853               	movf	___fladd@b+1,w
  6505  1438  1C03               	skipc
  6506  1439  0F53               	incfsz	___fladd@b+1,w
  6507  143A  2C3C               	goto	u3491
  6508  143B  2C3D               	goto	u3492
  6509  143C                     u3491:
  6510  143C  02DF               	subwf	??___fladd+5,f
  6511  143D                     u3492:
  6512  143D  0854               	movf	___fladd@b+2,w
  6513  143E  1C03               	skipc
  6514  143F  0F54               	incfsz	___fladd@b+2,w
  6515  1440  2C42               	goto	u3493
  6516  1441  2C43               	goto	u3494
  6517  1442                     u3493:
  6518  1442  02E0               	subwf	??___fladd+6,f
  6519  1443                     u3494:
  6520  1443  0855               	movf	___fladd@b+3,w
  6521  1444  1C03               	skipc
  6522  1445  0F55               	incfsz	___fladd@b+3,w
  6523  1446  2C48               	goto	u3495
  6524  1447  2C49               	goto	u3496
  6525  1448                     u3495:
  6526  1448  02E1               	subwf	??___fladd+7,f
  6527  1449                     u3496:
  6528  1449  085E               	movf	??___fladd+4,w
  6529  144A  07DA               	addwf	??___fladd,f
  6530  144B  085F               	movf	??___fladd+5,w
  6531  144C  1803               	skipnc
  6532  144D  0F5F               	incfsz	??___fladd+5,w
  6533  144E  2C50               	goto	u3500
  6534  144F  2C51               	goto	u3501
  6535  1450                     u3500:
  6536  1450  07DB               	addwf	??___fladd+1,f
  6537  1451                     u3501:
  6538  1451  0860               	movf	??___fladd+6,w
  6539  1452  1803               	skipnc
  6540  1453  0F60               	incfsz	??___fladd+6,w
  6541  1454  2C56               	goto	u3502
  6542  1455  2C57               	goto	u3503
  6543  1456                     u3502:
  6544  1456  07DC               	addwf	??___fladd+2,f
  6545  1457                     u3503:
  6546  1457  0861               	movf	??___fladd+7,w
  6547  1458  1803               	skipnc
  6548  1459  0A61               	incf	??___fladd+7,w
  6549  145A  07DD               	addwf	??___fladd+3,f
  6550  145B  085D               	movf	??___fladd+3,w
  6551  145C  00D5               	movwf	___fladd@b+3
  6552  145D  085C               	movf	??___fladd+2,w
  6553  145E  00D4               	movwf	___fladd@b+2
  6554  145F  085B               	movf	??___fladd+1,w
  6555  1460  00D3               	movwf	___fladd@b+1
  6556  1461  085A               	movf	??___fladd,w
  6557  1462  00D2               	movwf	___fladd@b
  6558  1463                     l2661:
  6559  1463  3080               	movlw	128
  6560  1464  00DA               	movwf	??___fladd
  6561  1465  085A               	movf	??___fladd,w
  6562  1466  06E2               	xorwf	___fladd@signs,f
  6563  1467  09E5               	comf	___fladd@grs,f
  6564  1468  0AE5               	incf	___fladd@grs,f
  6565  1469                     l2663:
  6566  1469  0865               	movf	___fladd@grs,w
  6567  146A  1D03               	btfss	3,2
  6568  146B  2C6D               	goto	u3511
  6569  146C  2C6E               	goto	u3510
  6570  146D                     u3511:
  6571  146D  2C8B               	goto	l758
  6572  146E                     u3510:
  6573  146E                     l2665:
  6574  146E  3001               	movlw	1
  6575  146F  07D2               	addwf	___fladd@b,f
  6576  1470  3000               	movlw	0
  6577  1471  1803               	skipnc
  6578  1472  3001               	movlw	1
  6579  1473  07D3               	addwf	___fladd@b+1,f
  6580  1474  3000               	movlw	0
  6581  1475  1803               	skipnc
  6582  1476  3001               	movlw	1
  6583  1477  07D4               	addwf	___fladd@b+2,f
  6584  1478  3000               	movlw	0
  6585  1479  1803               	skipnc
  6586  147A  3001               	movlw	1
  6587  147B  07D5               	addwf	___fladd@b+3,f
  6588  147C  2C8B               	goto	l758
  6589  147D                     l2667:
  6590  147D  0856               	movf	___fladd@a,w
  6591  147E  02D2               	subwf	___fladd@b,f
  6592  147F  0857               	movf	___fladd@a+1,w
  6593  1480  1C03               	skipc
  6594  1481  0F57               	incfsz	___fladd@a+1,w
  6595  1482  02D3               	subwf	___fladd@b+1,f
  6596  1483  0858               	movf	___fladd@a+2,w
  6597  1484  1C03               	skipc
  6598  1485  0F58               	incfsz	___fladd@a+2,w
  6599  1486  02D4               	subwf	___fladd@b+2,f
  6600  1487  0859               	movf	___fladd@a+3,w
  6601  1488  1C03               	skipc
  6602  1489  0F59               	incfsz	___fladd@a+3,w
  6603  148A  02D5               	subwf	___fladd@b+3,f
  6604  148B                     l758:
  6605  148B  0855               	movf	___fladd@b+3,w
  6606  148C  0454               	iorwf	___fladd@b+2,w
  6607  148D  0453               	iorwf	___fladd@b+1,w
  6608  148E  0452               	iorwf	___fladd@b,w
  6609  148F  1D03               	skipz
  6610  1490  2C92               	goto	u3521
  6611  1491  2C93               	goto	u3520
  6612  1492                     u3521:
  6613  1492  2CBF               	goto	l2689
  6614  1493                     u3520:
  6615  1493                     l2669:
  6616  1493  0865               	movf	___fladd@grs,w
  6617  1494  1D03               	btfss	3,2
  6618  1495  2C97               	goto	u3531
  6619  1496  2C98               	goto	u3530
  6620  1497                     u3531:
  6621  1497  2CBF               	goto	l2689
  6622  1498                     u3530:
  6623  1498                     l2671:
  6624  1498  3000               	movlw	0
  6625  1499  00D5               	movwf	?___fladd+3
  6626  149A  3000               	movlw	0
  6627  149B  00D4               	movwf	?___fladd+2
  6628  149C  3000               	movlw	0
  6629  149D  00D3               	movwf	?___fladd+1
  6630  149E  3000               	movlw	0
  6631  149F  00D2               	movwf	?___fladd
  6632  14A0  2D3D               	goto	l750
  6633  14A1                     l2675:
  6634  14A1  3001               	movlw	1
  6635  14A2  00DA               	movwf	??___fladd
  6636  14A3                     u3545:
  6637  14A3  1003               	clrc
  6638  14A4  0DD2               	rlf	___fladd@b,f
  6639  14A5  0DD3               	rlf	___fladd@b+1,f
  6640  14A6  0DD4               	rlf	___fladd@b+2,f
  6641  14A7  0DD5               	rlf	___fladd@b+3,f
  6642  14A8  0BDA               	decfsz	??___fladd,f
  6643  14A9  2CA3               	goto	u3545
  6644  14AA                     l2677:
  6645  14AA  1FE5               	btfss	___fladd@grs,7
  6646  14AB  2CAD               	goto	u3551
  6647  14AC  2CAE               	goto	u3550
  6648  14AD                     u3551:
  6649  14AD  2CAF               	goto	l762
  6650  14AE                     u3550:
  6651  14AE                     l2679:
  6652  14AE  1452               	bsf	___fladd@b,0
  6653  14AF                     l762:
  6654  14AF  1C65               	btfss	___fladd@grs,0
  6655  14B0  2CB2               	goto	u3561
  6656  14B1  2CB3               	goto	u3560
  6657  14B2                     u3561:
  6658  14B2  2CB6               	goto	l2683
  6659  14B3                     u3560:
  6660  14B3                     l2681:
  6661  14B3  1403               	setc
  6662  14B4  0DE5               	rlf	___fladd@grs,f
  6663  14B5  2CB8               	goto	l2685
  6664  14B6                     l2683:
  6665  14B6  1003               	clrc
  6666  14B7  0DE5               	rlf	___fladd@grs,f
  6667  14B8                     l2685:
  6668  14B8  0864               	movf	___fladd@bexp,w
  6669  14B9  1903               	btfsc	3,2
  6670  14BA  2CBC               	goto	u3571
  6671  14BB  2CBD               	goto	u3570
  6672  14BC                     u3571:
  6673  14BC  2CBF               	goto	l2689
  6674  14BD                     u3570:
  6675  14BD                     l2687:
  6676  14BD  3001               	movlw	1
  6677  14BE  02E4               	subwf	___fladd@bexp,f
  6678  14BF                     l2689:
  6679  14BF  1FD4               	btfss	___fladd@b+2,7
  6680  14C0  2CC2               	goto	u3581
  6681  14C1  2CC3               	goto	u3580
  6682  14C2                     u3581:
  6683  14C2  2CA1               	goto	l2675
  6684  14C3                     u3580:
  6685  14C3                     l2691:
  6686  14C3  01E3               	clrf	___fladd@aexp
  6687  14C4                     l2693:
  6688  14C4  1FE5               	btfss	___fladd@grs,7
  6689  14C5  2CC7               	goto	u3591
  6690  14C6  2CC8               	goto	u3590
  6691  14C7                     u3591:
  6692  14C7  2CD6               	goto	l2701
  6693  14C8                     u3590:
  6694  14C8                     l2695:
  6695  14C8  0865               	movf	___fladd@grs,w
  6696  14C9  397F               	andlw	127
  6697  14CA  1903               	btfsc	3,2
  6698  14CB  2CCD               	goto	u3601
  6699  14CC  2CCE               	goto	u3600
  6700  14CD                     u3601:
  6701  14CD  2CD1               	goto	l768
  6702  14CE                     u3600:
  6703  14CE                     l2697:
  6704  14CE  01E3               	clrf	___fladd@aexp
  6705  14CF  0AE3               	incf	___fladd@aexp,f
  6706  14D0  2CD6               	goto	l2701
  6707  14D1                     l768:
  6708  14D1  1C52               	btfss	___fladd@b,0
  6709  14D2  2CD4               	goto	u3611
  6710  14D3  2CD5               	goto	u3610
  6711  14D4                     u3611:
  6712  14D4  2CD6               	goto	l2701
  6713  14D5                     u3610:
  6714  14D5  2CCE               	goto	l2697
  6715  14D6                     l2701:
  6716  14D6  0863               	movf	___fladd@aexp,w
  6717  14D7  1903               	btfsc	3,2
  6718  14D8  2CDA               	goto	u3621
  6719  14D9  2CDB               	goto	u3620
  6720  14DA                     u3621:
  6721  14DA  2D0F               	goto	l771
  6722  14DB                     u3620:
  6723  14DB                     l2703:
  6724  14DB  3001               	movlw	1
  6725  14DC  07D2               	addwf	___fladd@b,f
  6726  14DD  3000               	movlw	0
  6727  14DE  1803               	skipnc
  6728  14DF  3001               	movlw	1
  6729  14E0  07D3               	addwf	___fladd@b+1,f
  6730  14E1  3000               	movlw	0
  6731  14E2  1803               	skipnc
  6732  14E3  3001               	movlw	1
  6733  14E4  07D4               	addwf	___fladd@b+2,f
  6734  14E5  3000               	movlw	0
  6735  14E6  1803               	skipnc
  6736  14E7  3001               	movlw	1
  6737  14E8  07D5               	addwf	___fladd@b+3,f
  6738  14E9                     l2705:
  6739  14E9  1C55               	btfss	___fladd@b+3,0
  6740  14EA  2CEC               	goto	u3631
  6741  14EB  2CED               	goto	u3630
  6742  14EC                     u3631:
  6743  14EC  2D0F               	goto	l771
  6744  14ED                     u3630:
  6745  14ED                     l2707:
  6746  14ED  0852               	movf	___fladd@b,w
  6747  14EE  00DA               	movwf	??___fladd
  6748  14EF  0853               	movf	___fladd@b+1,w
  6749  14F0  00DB               	movwf	??___fladd+1
  6750  14F1  0854               	movf	___fladd@b+2,w
  6751  14F2  00DC               	movwf	??___fladd+2
  6752  14F3  0855               	movf	___fladd@b+3,w
  6753  14F4  00DD               	movwf	??___fladd+3
  6754  14F5  3001               	movlw	1
  6755  14F6  00DE               	movwf	??___fladd+4
  6756  14F7                     u3645:
  6757  14F7  0D5D               	rlf	??___fladd+3,w
  6758  14F8  0CDD               	rrf	??___fladd+3,f
  6759  14F9  0CDC               	rrf	??___fladd+2,f
  6760  14FA  0CDB               	rrf	??___fladd+1,f
  6761  14FB  0CDA               	rrf	??___fladd,f
  6762  14FC                     u3640:
  6763  14FC  0BDE               	decfsz	??___fladd+4,f
  6764  14FD  2CF7               	goto	u3645
  6765  14FE  085D               	movf	??___fladd+3,w
  6766  14FF  00D5               	movwf	___fladd@b+3
  6767  1500  085C               	movf	??___fladd+2,w
  6768  1501  00D4               	movwf	___fladd@b+2
  6769  1502  085B               	movf	??___fladd+1,w
  6770  1503  00D3               	movwf	___fladd@b+1
  6771  1504  085A               	movf	??___fladd,w
  6772  1505  00D2               	movwf	___fladd@b
  6773  1506  0A64               	incf	___fladd@bexp,w
  6774  1507  1903               	btfsc	3,2
  6775  1508  2D0A               	goto	u3651
  6776  1509  2D0B               	goto	u3650
  6777  150A                     u3651:
  6778  150A  2D0F               	goto	l771
  6779  150B                     u3650:
  6780  150B                     l2709:
  6781  150B  3001               	movlw	1
  6782  150C  00DA               	movwf	??___fladd
  6783  150D  085A               	movf	??___fladd,w
  6784  150E  07E4               	addwf	___fladd@bexp,f
  6785  150F                     l771:
  6786  150F  0A64               	incf	___fladd@bexp,w
  6787  1510  1903               	btfsc	3,2
  6788  1511  2D13               	goto	u3661
  6789  1512  2D14               	goto	u3660
  6790  1513                     u3661:
  6791  1513  2D19               	goto	l2713
  6792  1514                     u3660:
  6793  1514                     l2711:
  6794  1514  0864               	movf	___fladd@bexp,w
  6795  1515  1D03               	btfss	3,2
  6796  1516  2D18               	goto	u3671
  6797  1517  2D19               	goto	u3670
  6798  1518                     u3671:
  6799  1518  2D27               	goto	l2719
  6800  1519                     u3670:
  6801  1519                     l2713:
  6802  1519  3000               	movlw	0
  6803  151A  00D5               	movwf	___fladd@b+3
  6804  151B  3000               	movlw	0
  6805  151C  00D4               	movwf	___fladd@b+2
  6806  151D  3000               	movlw	0
  6807  151E  00D3               	movwf	___fladd@b+1
  6808  151F  3000               	movlw	0
  6809  1520  00D2               	movwf	___fladd@b
  6810  1521                     l2715:
  6811  1521  0864               	movf	___fladd@bexp,w
  6812  1522  1D03               	btfss	3,2
  6813  1523  2D25               	goto	u3681
  6814  1524  2D26               	goto	u3680
  6815  1525                     u3681:
  6816  1525  2D27               	goto	l2719
  6817  1526                     u3680:
  6818  1526                     l2717:
  6819  1526  01E2               	clrf	___fladd@signs
  6820  1527                     l2719:
  6821  1527  1C64               	btfss	___fladd@bexp,0
  6822  1528  2D2A               	goto	u3691
  6823  1529  2D2B               	goto	u3690
  6824  152A                     u3691:
  6825  152A  2D2D               	goto	l2723
  6826  152B                     u3690:
  6827  152B                     l2721:
  6828  152B  17D4               	bsf	___fladd@b+2,7
  6829  152C  2D31               	goto	l779
  6830  152D                     l2723:
  6831  152D  307F               	movlw	127
  6832  152E  00DA               	movwf	??___fladd
  6833  152F  085A               	movf	??___fladd,w
  6834  1530  05D4               	andwf	___fladd@b+2,f
  6835  1531                     l779:
  6836  1531  0864               	movf	___fladd@bexp,w
  6837  1532  00DA               	movwf	??___fladd
  6838  1533  1003               	clrc
  6839  1534  0C5A               	rrf	??___fladd,w
  6840  1535  00DB               	movwf	??___fladd+1
  6841  1536  085B               	movf	??___fladd+1,w
  6842  1537  00D5               	movwf	___fladd@b+3
  6843  1538                     l2725:
  6844  1538  1FE2               	btfss	___fladd@signs,7
  6845  1539  2D3B               	goto	u3701
  6846  153A  2D3C               	goto	u3700
  6847  153B                     u3701:
  6848  153B  2D3D               	goto	l780
  6849  153C                     u3700:
  6850  153C                     l2727:
  6851  153C  17D5               	bsf	___fladd@b+3,7
  6852  153D                     l780:
  6853  153D                     l750:
  6854  153D  0008               	return
  6855  153E                     __end_of___fladd:
  6856                           
  6857                           	psect	text17
  6858  1874                     __ptext17:	
  6859 ;; *************** function ___flneg *****************
  6860 ;; Defined at:
  6861 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  f1              4    0[COMMON] unsigned char 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;		None
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  4    0[COMMON] unsigned char 
  6868 ;; Registers used:
  6869 ;;		wreg
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6875 ;;      Params:         4       0       0       0       0
  6876 ;;      Locals:         0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0
  6878 ;;      Totals:         4       0       0       0       0
  6879 ;;Total ram usage:        4 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_sprintf
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           
  6889                           ;psect for function ___flneg
  6890  1874                     ___flneg:
  6891  1874                     l3137:	
  6892                           ;incstack = 0
  6893                           ; Regs used in ___flneg: [wreg]
  6894                           
  6895  1874  0873               	movf	___flneg@f1+3,w
  6896  1875  0472               	iorwf	___flneg@f1+2,w
  6897  1876  0471               	iorwf	___flneg@f1+1,w
  6898  1877  0470               	iorwf	___flneg@f1,w
  6899  1878  1903               	skipnz
  6900  1879  287B               	goto	u4831
  6901  187A  287C               	goto	u4830
  6902  187B                     u4831:
  6903  187B  287E               	goto	l3141
  6904  187C                     u4830:
  6905  187C                     l3139:
  6906  187C  3080               	movlw	128
  6907  187D  06F3               	xorwf	___flneg@f1+3,f
  6908  187E                     l3141:
  6909  187E                     l609:
  6910  187E  0008               	return
  6911  187F                     __end_of___flneg:
  6912                           
  6913                           	psect	text18
  6914  1009                     __ptext18:	
  6915 ;; *************** function ___flge *****************
  6916 ;; Defined at:
  6917 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;  ff1             4    0[COMMON] unsigned char 
  6920 ;;  ff2             4    4[COMMON] unsigned char 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;		None
  6923 ;; Return value:  Size  Location     Type
  6924 ;;		None               void
  6925 ;; Registers used:
  6926 ;;		wreg, status,2, status,0
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6932 ;;      Params:         8       0       0       0       0
  6933 ;;      Locals:         0       0       0       0       0
  6934 ;;      Temps:          4       0       0       0       0
  6935 ;;      Totals:        12       0       0       0       0
  6936 ;;Total ram usage:       12 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; This function calls:
  6939 ;;		Nothing
  6940 ;; This function is called by:
  6941 ;;		_sprintf
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           
  6946                           ;psect for function ___flge
  6947  1009                     ___flge:
  6948  1009                     l3117:	
  6949                           ;incstack = 0
  6950                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6951                           
  6952  1009  3000               	movlw	0
  6953  100A  0570               	andwf	___flge@ff1,w
  6954  100B  00F8               	movwf	??___flge
  6955  100C  3000               	movlw	0
  6956  100D  0571               	andwf	___flge@ff1+1,w
  6957  100E  00F9               	movwf	??___flge+1
  6958  100F  3080               	movlw	128
  6959  1010  0572               	andwf	___flge@ff1+2,w
  6960  1011  00FA               	movwf	??___flge+2
  6961  1012  307F               	movlw	127
  6962  1013  0573               	andwf	___flge@ff1+3,w
  6963  1014  00FB               	movwf	??___flge+3
  6964  1015  087B               	movf	??___flge+3,w
  6965  1016  047A               	iorwf	??___flge+2,w
  6966  1017  0479               	iorwf	??___flge+1,w
  6967  1018  0478               	iorwf	??___flge,w
  6968  1019  1D03               	skipz
  6969  101A  281C               	goto	u4761
  6970  101B  281D               	goto	u4760
  6971  101C                     u4761:
  6972  101C  2825               	goto	l601
  6973  101D                     u4760:
  6974  101D                     l3119:
  6975  101D  3000               	movlw	0
  6976  101E  00F3               	movwf	___flge@ff1+3
  6977  101F  3000               	movlw	0
  6978  1020  00F2               	movwf	___flge@ff1+2
  6979  1021  3000               	movlw	0
  6980  1022  00F1               	movwf	___flge@ff1+1
  6981  1023  3000               	movlw	0
  6982  1024  00F0               	movwf	___flge@ff1
  6983  1025                     l601:
  6984  1025  3000               	movlw	0
  6985  1026  0574               	andwf	___flge@ff2,w
  6986  1027  00F8               	movwf	??___flge
  6987  1028  3000               	movlw	0
  6988  1029  0575               	andwf	___flge@ff2+1,w
  6989  102A  00F9               	movwf	??___flge+1
  6990  102B  3080               	movlw	128
  6991  102C  0576               	andwf	___flge@ff2+2,w
  6992  102D  00FA               	movwf	??___flge+2
  6993  102E  307F               	movlw	127
  6994  102F  0577               	andwf	___flge@ff2+3,w
  6995  1030  00FB               	movwf	??___flge+3
  6996  1031  087B               	movf	??___flge+3,w
  6997  1032  047A               	iorwf	??___flge+2,w
  6998  1033  0479               	iorwf	??___flge+1,w
  6999  1034  0478               	iorwf	??___flge,w
  7000  1035  1D03               	skipz
  7001  1036  2838               	goto	u4771
  7002  1037  2839               	goto	u4770
  7003  1038                     u4771:
  7004  1038  2841               	goto	l3123
  7005  1039                     u4770:
  7006  1039                     l3121:
  7007  1039  3000               	movlw	0
  7008  103A  00F7               	movwf	___flge@ff2+3
  7009  103B  3000               	movlw	0
  7010  103C  00F6               	movwf	___flge@ff2+2
  7011  103D  3000               	movlw	0
  7012  103E  00F5               	movwf	___flge@ff2+1
  7013  103F  3000               	movlw	0
  7014  1040  00F4               	movwf	___flge@ff2
  7015  1041                     l3123:
  7016  1041  1FF3               	btfss	___flge@ff1+3,7
  7017  1042  2844               	goto	u4781
  7018  1043  2845               	goto	u4780
  7019  1044                     u4781:
  7020  1044  2869               	goto	l3127
  7021  1045                     u4780:
  7022  1045                     l3125:
  7023  1045  3000               	movlw	0
  7024  1046  00F8               	movwf	??___flge
  7025  1047  3000               	movlw	0
  7026  1048  00F9               	movwf	??___flge+1
  7027  1049  3000               	movlw	0
  7028  104A  00FA               	movwf	??___flge+2
  7029  104B  3080               	movlw	128
  7030  104C  00FB               	movwf	??___flge+3
  7031  104D  0870               	movf	___flge@ff1,w
  7032  104E  02F8               	subwf	??___flge,f
  7033  104F  0871               	movf	___flge@ff1+1,w
  7034  1050  1C03               	skipc
  7035  1051  0F71               	incfsz	___flge@ff1+1,w
  7036  1052  2854               	goto	u4791
  7037  1053  2855               	goto	u4792
  7038  1054                     u4791:
  7039  1054  02F9               	subwf	??___flge+1,f
  7040  1055                     u4792:
  7041  1055  0872               	movf	___flge@ff1+2,w
  7042  1056  1C03               	skipc
  7043  1057  0F72               	incfsz	___flge@ff1+2,w
  7044  1058  285A               	goto	u4793
  7045  1059  285B               	goto	u4794
  7046  105A                     u4793:
  7047  105A  02FA               	subwf	??___flge+2,f
  7048  105B                     u4794:
  7049  105B  0873               	movf	___flge@ff1+3,w
  7050  105C  1C03               	skipc
  7051  105D  0F73               	incfsz	___flge@ff1+3,w
  7052  105E  2860               	goto	u4795
  7053  105F  2861               	goto	u4796
  7054  1060                     u4795:
  7055  1060  02FB               	subwf	??___flge+3,f
  7056  1061                     u4796:
  7057  1061  087B               	movf	??___flge+3,w
  7058  1062  00F3               	movwf	___flge@ff1+3
  7059  1063  087A               	movf	??___flge+2,w
  7060  1064  00F2               	movwf	___flge@ff1+2
  7061  1065  0879               	movf	??___flge+1,w
  7062  1066  00F1               	movwf	___flge@ff1+1
  7063  1067  0878               	movf	??___flge,w
  7064  1068  00F0               	movwf	___flge@ff1
  7065  1069                     l3127:
  7066  1069  1FF7               	btfss	___flge@ff2+3,7
  7067  106A  286C               	goto	u4801
  7068  106B  286D               	goto	u4800
  7069  106C                     u4801:
  7070  106C  2891               	goto	l604
  7071  106D                     u4800:
  7072  106D                     l3129:
  7073  106D  3000               	movlw	0
  7074  106E  00F8               	movwf	??___flge
  7075  106F  3000               	movlw	0
  7076  1070  00F9               	movwf	??___flge+1
  7077  1071  3000               	movlw	0
  7078  1072  00FA               	movwf	??___flge+2
  7079  1073  3080               	movlw	128
  7080  1074  00FB               	movwf	??___flge+3
  7081  1075  0874               	movf	___flge@ff2,w
  7082  1076  02F8               	subwf	??___flge,f
  7083  1077  0875               	movf	___flge@ff2+1,w
  7084  1078  1C03               	skipc
  7085  1079  0F75               	incfsz	___flge@ff2+1,w
  7086  107A  287C               	goto	u4811
  7087  107B  287D               	goto	u4812
  7088  107C                     u4811:
  7089  107C  02F9               	subwf	??___flge+1,f
  7090  107D                     u4812:
  7091  107D  0876               	movf	___flge@ff2+2,w
  7092  107E  1C03               	skipc
  7093  107F  0F76               	incfsz	___flge@ff2+2,w
  7094  1080  2882               	goto	u4813
  7095  1081  2883               	goto	u4814
  7096  1082                     u4813:
  7097  1082  02FA               	subwf	??___flge+2,f
  7098  1083                     u4814:
  7099  1083  0877               	movf	___flge@ff2+3,w
  7100  1084  1C03               	skipc
  7101  1085  0F77               	incfsz	___flge@ff2+3,w
  7102  1086  2888               	goto	u4815
  7103  1087  2889               	goto	u4816
  7104  1088                     u4815:
  7105  1088  02FB               	subwf	??___flge+3,f
  7106  1089                     u4816:
  7107  1089  087B               	movf	??___flge+3,w
  7108  108A  00F7               	movwf	___flge@ff2+3
  7109  108B  087A               	movf	??___flge+2,w
  7110  108C  00F6               	movwf	___flge@ff2+2
  7111  108D  0879               	movf	??___flge+1,w
  7112  108E  00F5               	movwf	___flge@ff2+1
  7113  108F  0878               	movf	??___flge,w
  7114  1090  00F4               	movwf	___flge@ff2
  7115  1091                     l604:
  7116  1091  3080               	movlw	128
  7117  1092  06F3               	xorwf	___flge@ff1+3,f
  7118  1093  3080               	movlw	128
  7119  1094  06F7               	xorwf	___flge@ff2+3,f
  7120  1095  0877               	movf	___flge@ff2+3,w
  7121  1096  0273               	subwf	___flge@ff1+3,w
  7122  1097  1D03               	skipz
  7123  1098  28A3               	goto	u4825
  7124  1099  0876               	movf	___flge@ff2+2,w
  7125  109A  0272               	subwf	___flge@ff1+2,w
  7126  109B  1D03               	skipz
  7127  109C  28A3               	goto	u4825
  7128  109D  0875               	movf	___flge@ff2+1,w
  7129  109E  0271               	subwf	___flge@ff1+1,w
  7130  109F  1D03               	skipz
  7131  10A0  28A3               	goto	u4825
  7132  10A1  0874               	movf	___flge@ff2,w
  7133  10A2  0270               	subwf	___flge@ff1,w
  7134  10A3                     u4825:
  7135  10A3  1803               	skipnc
  7136  10A4  28A6               	goto	u4821
  7137  10A5  28A7               	goto	u4820
  7138  10A6                     u4821:
  7139  10A6  28A9               	goto	l3133
  7140  10A7                     u4820:
  7141  10A7                     l3131:
  7142  10A7  1003               	clrc
  7143  10A8  28AA               	goto	l605
  7144  10A9                     l3133:
  7145  10A9  1403               	setc
  7146  10AA                     l605:
  7147  10AA  0008               	return
  7148  10AB                     __end_of___flge:
  7149                           
  7150                           	psect	text19
  7151  1A64                     __ptext19:	
  7152 ;; *************** function ___fleq *****************
  7153 ;; Defined at:
  7154 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  ff1             4    0[COMMON] unsigned char 
  7157 ;;  ff2             4    4[COMMON] unsigned char 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;		None
  7160 ;; Return value:  Size  Location     Type
  7161 ;;		None               void
  7162 ;; Registers used:
  7163 ;;		wreg, status,2, status,0
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7169 ;;      Params:         8       0       0       0       0
  7170 ;;      Locals:         0       0       0       0       0
  7171 ;;      Temps:          4       0       0       0       0
  7172 ;;      Totals:        12       0       0       0       0
  7173 ;;Total ram usage:       12 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_sprintf
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function ___fleq
  7184  1A64                     ___fleq:
  7185  1A64                     l3105:	
  7186                           ;incstack = 0
  7187                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7188                           
  7189  1A64  3000               	movlw	0
  7190  1A65  0570               	andwf	___fleq@ff1,w
  7191  1A66  00F8               	movwf	??___fleq
  7192  1A67  3000               	movlw	0
  7193  1A68  0571               	andwf	___fleq@ff1+1,w
  7194  1A69  00F9               	movwf	??___fleq+1
  7195  1A6A  3080               	movlw	128
  7196  1A6B  0572               	andwf	___fleq@ff1+2,w
  7197  1A6C  00FA               	movwf	??___fleq+2
  7198  1A6D  307F               	movlw	127
  7199  1A6E  0573               	andwf	___fleq@ff1+3,w
  7200  1A6F  00FB               	movwf	??___fleq+3
  7201  1A70  087B               	movf	??___fleq+3,w
  7202  1A71  047A               	iorwf	??___fleq+2,w
  7203  1A72  0479               	iorwf	??___fleq+1,w
  7204  1A73  0478               	iorwf	??___fleq,w
  7205  1A74  1D03               	skipz
  7206  1A75  2A77               	goto	u4731
  7207  1A76  2A78               	goto	u4730
  7208  1A77                     u4731:
  7209  1A77  2A80               	goto	l596
  7210  1A78                     u4730:
  7211  1A78                     l3107:
  7212  1A78  3000               	movlw	0
  7213  1A79  00F3               	movwf	___fleq@ff1+3
  7214  1A7A  3000               	movlw	0
  7215  1A7B  00F2               	movwf	___fleq@ff1+2
  7216  1A7C  3000               	movlw	0
  7217  1A7D  00F1               	movwf	___fleq@ff1+1
  7218  1A7E  3000               	movlw	0
  7219  1A7F  00F0               	movwf	___fleq@ff1
  7220  1A80                     l596:
  7221  1A80  3000               	movlw	0
  7222  1A81  0574               	andwf	___fleq@ff2,w
  7223  1A82  00F8               	movwf	??___fleq
  7224  1A83  3000               	movlw	0
  7225  1A84  0575               	andwf	___fleq@ff2+1,w
  7226  1A85  00F9               	movwf	??___fleq+1
  7227  1A86  3080               	movlw	128
  7228  1A87  0576               	andwf	___fleq@ff2+2,w
  7229  1A88  00FA               	movwf	??___fleq+2
  7230  1A89  307F               	movlw	127
  7231  1A8A  0577               	andwf	___fleq@ff2+3,w
  7232  1A8B  00FB               	movwf	??___fleq+3
  7233  1A8C  087B               	movf	??___fleq+3,w
  7234  1A8D  047A               	iorwf	??___fleq+2,w
  7235  1A8E  0479               	iorwf	??___fleq+1,w
  7236  1A8F  0478               	iorwf	??___fleq,w
  7237  1A90  1D03               	skipz
  7238  1A91  2A93               	goto	u4741
  7239  1A92  2A94               	goto	u4740
  7240  1A93                     u4741:
  7241  1A93  2A9C               	goto	l597
  7242  1A94                     u4740:
  7243  1A94                     l3109:
  7244  1A94  3000               	movlw	0
  7245  1A95  00F7               	movwf	___fleq@ff2+3
  7246  1A96  3000               	movlw	0
  7247  1A97  00F6               	movwf	___fleq@ff2+2
  7248  1A98  3000               	movlw	0
  7249  1A99  00F5               	movwf	___fleq@ff2+1
  7250  1A9A  3000               	movlw	0
  7251  1A9B  00F4               	movwf	___fleq@ff2
  7252  1A9C                     l597:
  7253  1A9C  0877               	movf	___fleq@ff2+3,w
  7254  1A9D  0673               	xorwf	___fleq@ff1+3,w
  7255  1A9E  1D03               	skipz
  7256  1A9F  2AAA               	goto	u4755
  7257  1AA0  0876               	movf	___fleq@ff2+2,w
  7258  1AA1  0672               	xorwf	___fleq@ff1+2,w
  7259  1AA2  1D03               	skipz
  7260  1AA3  2AAA               	goto	u4755
  7261  1AA4  0875               	movf	___fleq@ff2+1,w
  7262  1AA5  0671               	xorwf	___fleq@ff1+1,w
  7263  1AA6  1D03               	skipz
  7264  1AA7  2AAA               	goto	u4755
  7265  1AA8  0874               	movf	___fleq@ff2,w
  7266  1AA9  0670               	xorwf	___fleq@ff1,w
  7267  1AAA                     u4755:
  7268  1AAA  1903               	skipnz
  7269  1AAB  2AAD               	goto	u4751
  7270  1AAC  2AAE               	goto	u4750
  7271  1AAD                     u4751:
  7272  1AAD  2AB0               	goto	l3113
  7273  1AAE                     u4750:
  7274  1AAE                     l3111:
  7275  1AAE  1003               	clrc
  7276  1AAF  2AB1               	goto	l598
  7277  1AB0                     l3113:
  7278  1AB0  1403               	setc
  7279  1AB1                     l598:
  7280  1AB1  0008               	return
  7281  1AB2                     __end_of___fleq:
  7282                           
  7283                           	psect	text20
  7284  1000                     __ptext20:	
  7285 ;; *************** function _spiRead *****************
  7286 ;; Defined at:
  7287 ;;		line 48 in file "SPI.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;		None
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;		None
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  1    wreg      unsigned char 
  7294 ;; Registers used:
  7295 ;;		wreg, status,2, status,0, pclath, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7301 ;;      Params:         0       0       0       0       0
  7302 ;;      Locals:         0       0       0       0       0
  7303 ;;      Temps:          0       0       0       0       0
  7304 ;;      Totals:         0       0       0       0       0
  7305 ;;Total ram usage:        0 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    1
  7308 ;; This function calls:
  7309 ;;		_spiReceiveWait
  7310 ;; This function is called by:
  7311 ;;		_main
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           
  7316                           ;psect for function _spiRead
  7317  1000                     _spiRead:
  7318  1000                     l3341:	
  7319                           ;incstack = 0
  7320                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  7321                           
  7322                           
  7323                           ;SPI.c: 50:     spiReceiveWait();
  7324  1000  120A  158A  2000  160A  118A  	fcall	_spiReceiveWait
  7325  1005                     l3343:
  7326                           
  7327                           ;SPI.c: 51:     return(SSPBUF);
  7328  1005  1283               	bcf	3,5	;RP0=0, select bank0
  7329  1006  1303               	bcf	3,6	;RP1=0, select bank0
  7330  1007  0813               	movf	19,w	;volatile
  7331  1008                     l205:
  7332  1008  0008               	return
  7333  1009                     __end_of_spiRead:
  7334                           
  7335                           	psect	text21
  7336  0800                     __ptext21:	
  7337 ;; *************** function _spiReceiveWait *****************
  7338 ;; Defined at:
  7339 ;;		line 30 in file "SPI.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;		None
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;		None
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  1    wreg      void 
  7346 ;; Registers used:
  7347 ;;		None
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7353 ;;      Params:         0       0       0       0       0
  7354 ;;      Locals:         0       0       0       0       0
  7355 ;;      Temps:          0       0       0       0       0
  7356 ;;      Totals:         0       0       0       0       0
  7357 ;;Total ram usage:        0 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_spiRead
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           
  7367                           ;psect for function _spiReceiveWait
  7368  0800                     _spiReceiveWait:
  7369  0800                     l2891:	
  7370                           ;incstack = 0
  7371                           ; Regs used in _spiReceiveWait: []
  7372                           
  7373  0800                     l191:	
  7374                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  7375                           
  7376  0800  1683               	bsf	3,5	;RP0=1, select bank1
  7377  0801  1303               	bcf	3,6	;RP1=0, select bank1
  7378  0802  1C14               	btfss	20,0	;volatile
  7379  0803  2805               	goto	u4081
  7380  0804  2806               	goto	u4080
  7381  0805                     u4081:
  7382  0805  2800               	goto	l191
  7383  0806                     u4080:
  7384  0806                     l194:
  7385  0806  0008               	return
  7386  0807                     __end_of_spiReceiveWait:
  7387                           
  7388                           	psect	text22
  7389  18AF                     __ptext22:	
  7390 ;; *************** function _spiInit *****************
  7391 ;; Defined at:
  7392 ;;		line 13 in file "SPI.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  sType           1    wreg     enum E1264
  7395 ;;  sDataSample     1    0[COMMON] enum E1272
  7396 ;;  sClockIdle      1    1[COMMON] enum E1276
  7397 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;  sType           1    3[COMMON] enum E1264
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg, status,2, status,0
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7409 ;;      Params:         3       0       0       0       0
  7410 ;;      Locals:         1       0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0
  7412 ;;      Totals:         4       0       0       0       0
  7413 ;;Total ram usage:        4 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_main
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           
  7423                           ;psect for function _spiInit
  7424  18AF                     _spiInit:
  7425                           
  7426                           ;incstack = 0
  7427                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  7428                           ;spiInit@sType stored from wreg
  7429  18AF  00F3               	movwf	spiInit@sType
  7430  18B0                     l3277:
  7431                           
  7432                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
  7433  18B0  1683               	bsf	3,5	;RP0=1, select bank1
  7434  18B1  1303               	bcf	3,6	;RP1=0, select bank1
  7435  18B2  1287               	bcf	7,5	;volatile
  7436                           
  7437                           ;SPI.c: 16:     if(sType & 0b00000100)
  7438  18B3  1D73               	btfss	spiInit@sType,2
  7439  18B4  28B6               	goto	u5141
  7440  18B5  28B7               	goto	u5140
  7441  18B6                     u5141:
  7442  18B6  28BB               	goto	l3283
  7443  18B7                     u5140:
  7444  18B7                     l3279:
  7445                           
  7446                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
  7447  18B7  0872               	movf	spiInit@sTransmitEdge,w
  7448  18B8  0094               	movwf	20	;volatile
  7449  18B9                     l3281:
  7450                           
  7451                           ;SPI.c: 19:         TRISC3 = 1;
  7452  18B9  1587               	bsf	7,3	;volatile
  7453                           
  7454                           ;SPI.c: 20:     }
  7455  18BA  28BF               	goto	l187
  7456  18BB                     l3283:
  7457                           
  7458                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  7459  18BB  0870               	movf	spiInit@sDataSample,w
  7460  18BC  0472               	iorwf	spiInit@sTransmitEdge,w
  7461  18BD  0094               	movwf	20	;volatile
  7462  18BE                     l3285:
  7463                           
  7464                           ;SPI.c: 24:         TRISC3 = 0;
  7465  18BE  1187               	bcf	7,3	;volatile
  7466  18BF                     l187:	
  7467                           ;SPI.c: 25:     }
  7468                           
  7469                           
  7470                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
  7471  18BF  0873               	movf	spiInit@sType,w
  7472  18C0  0471               	iorwf	spiInit@sClockIdle,w
  7473  18C1  1283               	bcf	3,5	;RP0=0, select bank0
  7474  18C2  1303               	bcf	3,6	;RP1=0, select bank0
  7475  18C3  0094               	movwf	20	;volatile
  7476  18C4                     l188:
  7477  18C4  0008               	return
  7478  18C5                     __end_of_spiInit:
  7479                           
  7480                           	psect	text23
  7481  18C5                     __ptext23:	
  7482 ;; *************** function _setup *****************
  7483 ;; Defined at:
  7484 ;;		line 149 in file "main.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;		None
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;		None
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  1    wreg      void 
  7491 ;; Registers used:
  7492 ;;		wreg, status,2
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7498 ;;      Params:         0       0       0       0       0
  7499 ;;      Locals:         0       0       0       0       0
  7500 ;;      Temps:          0       0       0       0       0
  7501 ;;      Totals:         0       0       0       0       0
  7502 ;;Total ram usage:        0 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_main
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           
  7512                           ;psect for function _setup
  7513  18C5                     _setup:
  7514  18C5                     l3251:	
  7515                           ;incstack = 0
  7516                           ; Regs used in _setup: [wreg+status,2]
  7517                           
  7518                           
  7519                           ;main.c: 150:     TRISD = 0b00000000;
  7520  18C5  1683               	bsf	3,5	;RP0=1, select bank1
  7521  18C6  1303               	bcf	3,6	;RP1=0, select bank1
  7522  18C7  0188               	clrf	8	;volatile
  7523  18C8                     l3253:
  7524                           
  7525                           ;main.c: 151:     TRISC = 0b10010000;
  7526  18C8  3090               	movlw	144
  7527  18C9  0087               	movwf	7	;volatile
  7528  18CA                     l3255:
  7529                           
  7530                           ;main.c: 152:     TRISE = 0b00000000;
  7531  18CA  0189               	clrf	9	;volatile
  7532  18CB                     l3257:
  7533                           
  7534                           ;main.c: 153:     TRISB = 0b00000000;
  7535  18CB  0186               	clrf	6	;volatile
  7536  18CC                     l3259:
  7537                           
  7538                           ;main.c: 154:     TRISA = 0b00000000;
  7539  18CC  0185               	clrf	5	;volatile
  7540                           
  7541                           ;main.c: 155:     ANSEL = 0b00000011;
  7542  18CD  3003               	movlw	3
  7543  18CE  1683               	bsf	3,5	;RP0=1, select bank3
  7544  18CF  1703               	bsf	3,6	;RP1=1, select bank3
  7545  18D0  0088               	movwf	8	;volatile
  7546  18D1                     l3261:
  7547                           
  7548                           ;main.c: 156:     PORTCbits.RC0 = 1;
  7549  18D1  1283               	bcf	3,5	;RP0=0, select bank0
  7550  18D2  1303               	bcf	3,6	;RP1=0, select bank0
  7551  18D3  1407               	bsf	7,0	;volatile
  7552  18D4                     l3263:
  7553                           
  7554                           ;main.c: 157:     PORTCbits.RC1 = 1;
  7555  18D4  1487               	bsf	7,1	;volatile
  7556  18D5                     l3265:
  7557                           
  7558                           ;main.c: 158:     PORTCbits.RC2 = 1;
  7559  18D5  1507               	bsf	7,2	;volatile
  7560  18D6                     l3267:
  7561                           
  7562                           ;main.c: 159:     PORTCbits.RC6 = 0;
  7563  18D6  1307               	bcf	7,6	;volatile
  7564  18D7                     l3269:
  7565                           
  7566                           ;main.c: 160:     PORTCbits.RC7 = 0;
  7567  18D7  1387               	bcf	7,7	;volatile
  7568                           
  7569                           ;main.c: 161:     PORTA = 0b11111111;
  7570  18D8  30FF               	movlw	255
  7571  18D9  0085               	movwf	5	;volatile
  7572  18DA                     l3271:
  7573                           
  7574                           ;main.c: 162:     PORTD = 0;
  7575  18DA  0188               	clrf	8	;volatile
  7576  18DB                     l3273:
  7577                           
  7578                           ;main.c: 163:     PORTE = 0;
  7579  18DB  0189               	clrf	9	;volatile
  7580  18DC                     l3275:
  7581                           
  7582                           ;main.c: 164:     PORTB = 0;
  7583  18DC  0186               	clrf	6	;volatile
  7584  18DD                     l92:
  7585  18DD  0008               	return
  7586  18DE                     __end_of_setup:
  7587                           
  7588                           	psect	text24
  7589  1869                     __ptext24:	
  7590 ;; *************** function _recibir *****************
  7591 ;; Defined at:
  7592 ;;		line 40 in file "USART.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;		None
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;		None
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      void 
  7599 ;; Registers used:
  7600 ;;		None
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7606 ;;      Params:         0       0       0       0       0
  7607 ;;      Locals:         0       0       0       0       0
  7608 ;;      Temps:          0       0       0       0       0
  7609 ;;      Totals:         0       0       0       0       0
  7610 ;;Total ram usage:        0 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; This function calls:
  7613 ;;		Nothing
  7614 ;; This function is called by:
  7615 ;;		_main
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           
  7620                           ;psect for function _recibir
  7621  1869                     _recibir:
  7622  1869                     l3297:	
  7623                           ;incstack = 0
  7624                           ; Regs used in _recibir: []
  7625                           
  7626                           
  7627                           ;USART.c: 41:     RCSTAbits.CREN = 1;
  7628  1869  1283               	bcf	3,5	;RP0=0, select bank0
  7629  186A  1303               	bcf	3,6	;RP1=0, select bank0
  7630  186B  1618               	bsf	24,4	;volatile
  7631                           
  7632                           ;USART.c: 42:     RCSTAbits.FERR = 0;
  7633  186C  1118               	bcf	24,2	;volatile
  7634                           
  7635                           ;USART.c: 43:     PIE1bits.RCIE = 1;
  7636  186D  1683               	bsf	3,5	;RP0=1, select bank1
  7637  186E  1303               	bcf	3,6	;RP1=0, select bank1
  7638  186F  168C               	bsf	12,5	;volatile
  7639                           
  7640                           ;USART.c: 44:     RCSTAbits.OERR = 0;
  7641  1870  1283               	bcf	3,5	;RP0=0, select bank0
  7642  1871  1303               	bcf	3,6	;RP1=0, select bank0
  7643  1872  1098               	bcf	24,1	;volatile
  7644  1873                     l171:
  7645  1873  0008               	return
  7646  1874                     __end_of_recibir:
  7647                           
  7648                           	psect	text25
  7649  1CE8                     __ptext25:	
  7650 ;; *************** function _enviar *****************
  7651 ;; Defined at:
  7652 ;;		line 22 in file "USART.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  valor           2    0[COMMON] PTR unsigned char 
  7655 ;;		 -> s(20), STR_4(4), k(20), STR_3(4), 
  7656 ;;		 -> l(20), STR_2(4), 
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7668 ;;      Params:         2       0       0       0       0
  7669 ;;      Locals:         0       0       0       0       0
  7670 ;;      Temps:          2       0       0       0       0
  7671 ;;      Totals:         4       0       0       0       0
  7672 ;;Total ram usage:        4 bytes
  7673 ;; Hardware stack levels used:    2
  7674 ;; This function calls:
  7675 ;;		Nothing
  7676 ;; This function is called by:
  7677 ;;		_main
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           
  7682                           ;psect for function _enviar
  7683  1CE8                     _enviar:
  7684  1CE8                     l3331:	
  7685                           ;incstack = 0
  7686                           ; Regs used in _enviar: [wreg-fsr0h+btemp+1+pclath]
  7687                           
  7688                           
  7689                           ;USART.c: 23:     TXREG = valor[0];
  7690  1CE8  0871               	movf	enviar@valor+1,w
  7691  1CE9  1283               	bcf	3,5	;RP0=0, select bank0
  7692  1CEA  1303               	bcf	3,6	;RP1=0, select bank0
  7693  1CEB  00FF               	movwf	btemp+1
  7694  1CEC  0870               	movf	enviar@valor,w
  7695  1CED  0084               	movwf	4
  7696  1CEE  120A  118A  2003  160A  158A  	fcall	stringtab
  7697  1CF3  0099               	movwf	25	;volatile
  7698  1CF4                     l153:	
  7699                           ;USART.c: 25:     }
  7700                           
  7701                           
  7702                           ;USART.c: 24:     while (TRMT == 0) {
  7703  1CF4  1683               	bsf	3,5	;RP0=1, select bank1
  7704  1CF5  1303               	bcf	3,6	;RP1=0, select bank1
  7705  1CF6  1C98               	btfss	24,1	;volatile
  7706  1CF7  2CF9               	goto	u5201
  7707  1CF8  2CFA               	goto	u5200
  7708  1CF9                     u5201:
  7709  1CF9  2CF4               	goto	l153
  7710  1CFA                     u5200:
  7711  1CFA                     l3333:
  7712                           
  7713                           ;USART.c: 26:     TXREG = valor[1];
  7714  1CFA  3001               	movlw	1
  7715  1CFB  00F2               	movwf	??_enviar
  7716  1CFC  3000               	movlw	0
  7717  1CFD  00F3               	movwf	??_enviar+1
  7718  1CFE  0872               	movf	??_enviar,w
  7719  1CFF  0770               	addwf	enviar@valor,w
  7720  1D00  0084               	movwf	4
  7721  1D01  0873               	movf	??_enviar+1,w
  7722  1D02  1803               	skipnc
  7723  1D03  0A73               	incf	??_enviar+1,w
  7724  1D04  0771               	addwf	enviar@valor+1,w
  7725  1D05  1283               	bcf	3,5	;RP0=0, select bank0
  7726  1D06  1303               	bcf	3,6	;RP1=0, select bank0
  7727  1D07  00FF               	movwf	btemp+1
  7728  1D08  120A  118A  2003  160A  158A  	fcall	stringtab
  7729  1D0D  0099               	movwf	25	;volatile
  7730  1D0E                     l156:	
  7731                           ;USART.c: 28:     }
  7732                           
  7733                           
  7734                           ;USART.c: 27:     while (TRMT == 0) {
  7735  1D0E  1683               	bsf	3,5	;RP0=1, select bank1
  7736  1D0F  1303               	bcf	3,6	;RP1=0, select bank1
  7737  1D10  1C98               	btfss	24,1	;volatile
  7738  1D11  2D13               	goto	u5211
  7739  1D12  2D14               	goto	u5210
  7740  1D13                     u5211:
  7741  1D13  2D0E               	goto	l156
  7742  1D14                     u5210:
  7743  1D14                     l3335:
  7744                           
  7745                           ;USART.c: 29:     TXREG = valor[2];
  7746  1D14  3002               	movlw	2
  7747  1D15  00F2               	movwf	??_enviar
  7748  1D16  3000               	movlw	0
  7749  1D17  00F3               	movwf	??_enviar+1
  7750  1D18  0872               	movf	??_enviar,w
  7751  1D19  0770               	addwf	enviar@valor,w
  7752  1D1A  0084               	movwf	4
  7753  1D1B  0873               	movf	??_enviar+1,w
  7754  1D1C  1803               	skipnc
  7755  1D1D  0A73               	incf	??_enviar+1,w
  7756  1D1E  0771               	addwf	enviar@valor+1,w
  7757  1D1F  1283               	bcf	3,5	;RP0=0, select bank0
  7758  1D20  1303               	bcf	3,6	;RP1=0, select bank0
  7759  1D21  00FF               	movwf	btemp+1
  7760  1D22  120A  118A  2003  160A  158A  	fcall	stringtab
  7761  1D27  0099               	movwf	25	;volatile
  7762  1D28                     l159:	
  7763                           ;USART.c: 31:     }
  7764                           
  7765                           
  7766                           ;USART.c: 30:     while (TRMT == 0) {
  7767  1D28  1683               	bsf	3,5	;RP0=1, select bank1
  7768  1D29  1303               	bcf	3,6	;RP1=0, select bank1
  7769  1D2A  1C98               	btfss	24,1	;volatile
  7770  1D2B  2D2D               	goto	u5221
  7771  1D2C  2D2E               	goto	u5220
  7772  1D2D                     u5221:
  7773  1D2D  2D28               	goto	l159
  7774  1D2E                     u5220:
  7775  1D2E                     l3337:
  7776                           
  7777                           ;USART.c: 32:     TXREG = valor[3];
  7778  1D2E  3003               	movlw	3
  7779  1D2F  00F2               	movwf	??_enviar
  7780  1D30  3000               	movlw	0
  7781  1D31  00F3               	movwf	??_enviar+1
  7782  1D32  0872               	movf	??_enviar,w
  7783  1D33  0770               	addwf	enviar@valor,w
  7784  1D34  0084               	movwf	4
  7785  1D35  0873               	movf	??_enviar+1,w
  7786  1D36  1803               	skipnc
  7787  1D37  0A73               	incf	??_enviar+1,w
  7788  1D38  0771               	addwf	enviar@valor+1,w
  7789  1D39  1283               	bcf	3,5	;RP0=0, select bank0
  7790  1D3A  1303               	bcf	3,6	;RP1=0, select bank0
  7791  1D3B  00FF               	movwf	btemp+1
  7792  1D3C  120A  118A  2003  160A  158A  	fcall	stringtab
  7793  1D41  0099               	movwf	25	;volatile
  7794  1D42                     l162:	
  7795                           ;USART.c: 34:     }
  7796                           
  7797                           
  7798                           ;USART.c: 33:     while (TRMT == 0) {
  7799  1D42  1683               	bsf	3,5	;RP0=1, select bank1
  7800  1D43  1303               	bcf	3,6	;RP1=0, select bank1
  7801  1D44  1C98               	btfss	24,1	;volatile
  7802  1D45  2D47               	goto	u5231
  7803  1D46  2D48               	goto	u5230
  7804  1D47                     u5231:
  7805  1D47  2D42               	goto	l162
  7806  1D48                     u5230:
  7807  1D48                     l3339:
  7808                           
  7809                           ;USART.c: 35:     TXREG = 0x20;
  7810  1D48  3020               	movlw	32
  7811  1D49  1283               	bcf	3,5	;RP0=0, select bank0
  7812  1D4A  1303               	bcf	3,6	;RP1=0, select bank0
  7813  1D4B  0099               	movwf	25	;volatile
  7814  1D4C                     l165:	
  7815                           ;USART.c: 37:     }
  7816                           
  7817                           
  7818                           ;USART.c: 36:     while (TRMT == 0) {
  7819  1D4C  1683               	bsf	3,5	;RP0=1, select bank1
  7820  1D4D  1303               	bcf	3,6	;RP1=0, select bank1
  7821  1D4E  1C98               	btfss	24,1	;volatile
  7822  1D4F  2D51               	goto	u5241
  7823  1D50  2D52               	goto	u5240
  7824  1D51                     u5241:
  7825  1D51  2D4C               	goto	l165
  7826  1D52                     u5240:
  7827  1D52                     l168:
  7828  1D52  0008               	return
  7829  1D53                     __end_of_enviar:
  7830                           
  7831                           	psect	text26
  7832  1BBD                     __ptext26:	
  7833 ;; *************** function _conversor2 *****************
  7834 ;; Defined at:
  7835 ;;		line 178 in file "main.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  val2            1    wreg     unsigned char 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  val2            1   38[BANK0 ] unsigned char 
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  4   30[BANK0 ] float 
  7842 ;; Registers used:
  7843 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7849 ;;      Params:         0       4       0       0       0
  7850 ;;      Locals:         0       1       0       0       0
  7851 ;;      Temps:          0       4       0       0       0
  7852 ;;      Totals:         0       9       0       0       0
  7853 ;;Total ram usage:        9 bytes
  7854 ;; Hardware stack levels used:    1
  7855 ;; Hardware stack levels required when called:    2
  7856 ;; This function calls:
  7857 ;;		___flmul
  7858 ;;		___xxtofl
  7859 ;; This function is called by:
  7860 ;;		_main
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           
  7865                           ;psect for function _conversor2
  7866  1BBD                     _conversor2:
  7867                           
  7868                           ;incstack = 0
  7869                           ; Regs used in _conversor2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7870                           ;conversor2@val2 stored from wreg
  7871  1BBD  1283               	bcf	3,5	;RP0=0, select bank0
  7872  1BBE  1303               	bcf	3,6	;RP1=0, select bank0
  7873  1BBF  00C6               	movwf	conversor2@val2
  7874  1BC0                     l3347:
  7875                           
  7876                           ;main.c: 179:     vv = 1.95 * val2;
  7877  1BC0  303F               	movlw	63
  7878  1BC1  00A7               	movwf	___flmul@b+3
  7879  1BC2  30F9               	movlw	249
  7880  1BC3  00A6               	movwf	___flmul@b+2
  7881  1BC4  3099               	movlw	153
  7882  1BC5  00A5               	movwf	___flmul@b+1
  7883  1BC6  309A               	movlw	154
  7884  1BC7  00A4               	movwf	___flmul@b
  7885  1BC8  0846               	movf	conversor2@val2,w
  7886  1BC9  00C2               	movwf	??_conversor2
  7887  1BCA  01C3               	clrf	??_conversor2+1
  7888  1BCB  01C4               	clrf	??_conversor2+2
  7889  1BCC  01C5               	clrf	??_conversor2+3
  7890  1BCD  0845               	movf	??_conversor2+3,w
  7891  1BCE  00F3               	movwf	___xxtofl@val+3
  7892  1BCF  0844               	movf	??_conversor2+2,w
  7893  1BD0  00F2               	movwf	___xxtofl@val+2
  7894  1BD1  0843               	movf	??_conversor2+1,w
  7895  1BD2  00F1               	movwf	___xxtofl@val+1
  7896  1BD3  0842               	movf	??_conversor2,w
  7897  1BD4  00F0               	movwf	___xxtofl@val
  7898  1BD5  3001               	movlw	1
  7899  1BD6  160A  158A  2553  160A  158A  	fcall	___xxtofl
  7900  1BDB  0873               	movf	?___xxtofl+3,w
  7901  1BDC  1283               	bcf	3,5	;RP0=0, select bank0
  7902  1BDD  1303               	bcf	3,6	;RP1=0, select bank0
  7903  1BDE  00AB               	movwf	___flmul@a+3
  7904  1BDF  0872               	movf	?___xxtofl+2,w
  7905  1BE0  00AA               	movwf	___flmul@a+2
  7906  1BE1  0871               	movf	?___xxtofl+1,w
  7907  1BE2  00A9               	movwf	___flmul@a+1
  7908  1BE3  0870               	movf	?___xxtofl,w
  7909  1BE4  00A8               	movwf	___flmul@a
  7910  1BE5  120A  158A  249F  160A  158A  	fcall	___flmul
  7911  1BEA  1283               	bcf	3,5	;RP0=0, select bank0
  7912  1BEB  1303               	bcf	3,6	;RP1=0, select bank0
  7913  1BEC  0827               	movf	?___flmul+3,w
  7914  1BED  1683               	bsf	3,5	;RP0=1, select bank1
  7915  1BEE  1303               	bcf	3,6	;RP1=0, select bank1
  7916  1BEF  00D3               	movwf	(_vv+3)^(0+128)
  7917  1BF0  1283               	bcf	3,5	;RP0=0, select bank0
  7918  1BF1  1303               	bcf	3,6	;RP1=0, select bank0
  7919  1BF2  0826               	movf	?___flmul+2,w
  7920  1BF3  1683               	bsf	3,5	;RP0=1, select bank1
  7921  1BF4  1303               	bcf	3,6	;RP1=0, select bank1
  7922  1BF5  00D2               	movwf	(_vv+2)^(0+128)
  7923  1BF6  1283               	bcf	3,5	;RP0=0, select bank0
  7924  1BF7  1303               	bcf	3,6	;RP1=0, select bank0
  7925  1BF8  0825               	movf	?___flmul+1,w
  7926  1BF9  1683               	bsf	3,5	;RP0=1, select bank1
  7927  1BFA  1303               	bcf	3,6	;RP1=0, select bank1
  7928  1BFB  00D1               	movwf	(_vv+1)^(0+128)
  7929  1BFC  1283               	bcf	3,5	;RP0=0, select bank0
  7930  1BFD  1303               	bcf	3,6	;RP1=0, select bank0
  7931  1BFE  0824               	movf	?___flmul,w
  7932  1BFF  1683               	bsf	3,5	;RP0=1, select bank1
  7933  1C00  1303               	bcf	3,6	;RP1=0, select bank1
  7934  1C01  00D0               	movwf	_vv^(0+128)
  7935  1C02                     l3349:
  7936                           
  7937                           ;main.c: 180:     return (vv);
  7938  1C02  0853               	movf	(_vv+3)^(0+128),w
  7939  1C03  1283               	bcf	3,5	;RP0=0, select bank0
  7940  1C04  1303               	bcf	3,6	;RP1=0, select bank0
  7941  1C05  00C1               	movwf	?_conversor2+3
  7942  1C06  1683               	bsf	3,5	;RP0=1, select bank1
  7943  1C07  1303               	bcf	3,6	;RP1=0, select bank1
  7944  1C08  0852               	movf	(_vv+2)^(0+128),w
  7945  1C09  1283               	bcf	3,5	;RP0=0, select bank0
  7946  1C0A  1303               	bcf	3,6	;RP1=0, select bank0
  7947  1C0B  00C0               	movwf	?_conversor2+2
  7948  1C0C  1683               	bsf	3,5	;RP0=1, select bank1
  7949  1C0D  1303               	bcf	3,6	;RP1=0, select bank1
  7950  1C0E  0851               	movf	(_vv+1)^(0+128),w
  7951  1C0F  1283               	bcf	3,5	;RP0=0, select bank0
  7952  1C10  1303               	bcf	3,6	;RP1=0, select bank0
  7953  1C11  00BF               	movwf	?_conversor2+1
  7954  1C12  1683               	bsf	3,5	;RP0=1, select bank1
  7955  1C13  1303               	bcf	3,6	;RP1=0, select bank1
  7956  1C14  0850               	movf	_vv^(0+128),w
  7957  1C15  1283               	bcf	3,5	;RP0=0, select bank0
  7958  1C16  1303               	bcf	3,6	;RP1=0, select bank0
  7959  1C17  00BE               	movwf	?_conversor2
  7960  1C18                     l98:
  7961  1C18  0008               	return
  7962  1C19                     __end_of_conversor2:
  7963                           
  7964                           	psect	text27
  7965  1B61                     __ptext27:	
  7966 ;; *************** function _conversor *****************
  7967 ;; Defined at:
  7968 ;;		line 173 in file "main.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;  val             1    wreg     unsigned char 
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;  val             1   38[BANK0 ] unsigned char 
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  4   30[BANK0 ] float 
  7975 ;; Registers used:
  7976 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7982 ;;      Params:         0       4       0       0       0
  7983 ;;      Locals:         0       1       0       0       0
  7984 ;;      Temps:          0       4       0       0       0
  7985 ;;      Totals:         0       9       0       0       0
  7986 ;;Total ram usage:        9 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    2
  7989 ;; This function calls:
  7990 ;;		___flmul
  7991 ;;		___xxtofl
  7992 ;; This function is called by:
  7993 ;;		_main
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           
  7998                           ;psect for function _conversor
  7999  1B61                     _conversor:
  8000                           
  8001                           ;incstack = 0
  8002                           ; Regs used in _conversor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8003                           ;conversor@val stored from wreg
  8004  1B61  1283               	bcf	3,5	;RP0=0, select bank0
  8005  1B62  1303               	bcf	3,6	;RP1=0, select bank0
  8006  1B63  00C6               	movwf	conversor@val
  8007  1B64                     l3647:
  8008                           
  8009                           ;main.c: 174:     x = 0.0195 * val;
  8010  1B64  303C               	movlw	60
  8011  1B65  00A7               	movwf	___flmul@b+3
  8012  1B66  309F               	movlw	159
  8013  1B67  00A6               	movwf	___flmul@b+2
  8014  1B68  30BE               	movlw	190
  8015  1B69  00A5               	movwf	___flmul@b+1
  8016  1B6A  3077               	movlw	119
  8017  1B6B  00A4               	movwf	___flmul@b
  8018  1B6C  0846               	movf	conversor@val,w
  8019  1B6D  00C2               	movwf	??_conversor
  8020  1B6E  01C3               	clrf	??_conversor+1
  8021  1B6F  01C4               	clrf	??_conversor+2
  8022  1B70  01C5               	clrf	??_conversor+3
  8023  1B71  0845               	movf	??_conversor+3,w
  8024  1B72  00F3               	movwf	___xxtofl@val+3
  8025  1B73  0844               	movf	??_conversor+2,w
  8026  1B74  00F2               	movwf	___xxtofl@val+2
  8027  1B75  0843               	movf	??_conversor+1,w
  8028  1B76  00F1               	movwf	___xxtofl@val+1
  8029  1B77  0842               	movf	??_conversor,w
  8030  1B78  00F0               	movwf	___xxtofl@val
  8031  1B79  3001               	movlw	1
  8032  1B7A  160A  158A  2553  160A  158A  	fcall	___xxtofl
  8033  1B7F  0873               	movf	?___xxtofl+3,w
  8034  1B80  1283               	bcf	3,5	;RP0=0, select bank0
  8035  1B81  1303               	bcf	3,6	;RP1=0, select bank0
  8036  1B82  00AB               	movwf	___flmul@a+3
  8037  1B83  0872               	movf	?___xxtofl+2,w
  8038  1B84  00AA               	movwf	___flmul@a+2
  8039  1B85  0871               	movf	?___xxtofl+1,w
  8040  1B86  00A9               	movwf	___flmul@a+1
  8041  1B87  0870               	movf	?___xxtofl,w
  8042  1B88  00A8               	movwf	___flmul@a
  8043  1B89  120A  158A  249F  160A  158A  	fcall	___flmul
  8044  1B8E  1283               	bcf	3,5	;RP0=0, select bank0
  8045  1B8F  1303               	bcf	3,6	;RP1=0, select bank0
  8046  1B90  0827               	movf	?___flmul+3,w
  8047  1B91  1683               	bsf	3,5	;RP0=1, select bank1
  8048  1B92  1303               	bcf	3,6	;RP1=0, select bank1
  8049  1B93  00CF               	movwf	(_x+3)^(0+128)
  8050  1B94  1283               	bcf	3,5	;RP0=0, select bank0
  8051  1B95  1303               	bcf	3,6	;RP1=0, select bank0
  8052  1B96  0826               	movf	?___flmul+2,w
  8053  1B97  1683               	bsf	3,5	;RP0=1, select bank1
  8054  1B98  1303               	bcf	3,6	;RP1=0, select bank1
  8055  1B99  00CE               	movwf	(_x+2)^(0+128)
  8056  1B9A  1283               	bcf	3,5	;RP0=0, select bank0
  8057  1B9B  1303               	bcf	3,6	;RP1=0, select bank0
  8058  1B9C  0825               	movf	?___flmul+1,w
  8059  1B9D  1683               	bsf	3,5	;RP0=1, select bank1
  8060  1B9E  1303               	bcf	3,6	;RP1=0, select bank1
  8061  1B9F  00CD               	movwf	(_x+1)^(0+128)
  8062  1BA0  1283               	bcf	3,5	;RP0=0, select bank0
  8063  1BA1  1303               	bcf	3,6	;RP1=0, select bank0
  8064  1BA2  0824               	movf	?___flmul,w
  8065  1BA3  1683               	bsf	3,5	;RP0=1, select bank1
  8066  1BA4  1303               	bcf	3,6	;RP1=0, select bank1
  8067  1BA5  00CC               	movwf	_x^(0+128)
  8068  1BA6                     l3649:
  8069                           
  8070                           ;main.c: 175:     return (x);
  8071  1BA6  084F               	movf	(_x+3)^(0+128),w
  8072  1BA7  1283               	bcf	3,5	;RP0=0, select bank0
  8073  1BA8  1303               	bcf	3,6	;RP1=0, select bank0
  8074  1BA9  00C1               	movwf	?_conversor+3
  8075  1BAA  1683               	bsf	3,5	;RP0=1, select bank1
  8076  1BAB  1303               	bcf	3,6	;RP1=0, select bank1
  8077  1BAC  084E               	movf	(_x+2)^(0+128),w
  8078  1BAD  1283               	bcf	3,5	;RP0=0, select bank0
  8079  1BAE  1303               	bcf	3,6	;RP1=0, select bank0
  8080  1BAF  00C0               	movwf	?_conversor+2
  8081  1BB0  1683               	bsf	3,5	;RP0=1, select bank1
  8082  1BB1  1303               	bcf	3,6	;RP1=0, select bank1
  8083  1BB2  084D               	movf	(_x+1)^(0+128),w
  8084  1BB3  1283               	bcf	3,5	;RP0=0, select bank0
  8085  1BB4  1303               	bcf	3,6	;RP1=0, select bank0
  8086  1BB5  00BF               	movwf	?_conversor+1
  8087  1BB6  1683               	bsf	3,5	;RP0=1, select bank1
  8088  1BB7  1303               	bcf	3,6	;RP1=0, select bank1
  8089  1BB8  084C               	movf	_x^(0+128),w
  8090  1BB9  1283               	bcf	3,5	;RP0=0, select bank0
  8091  1BBA  1303               	bcf	3,6	;RP1=0, select bank0
  8092  1BBB  00BE               	movwf	?_conversor
  8093  1BBC                     l95:
  8094  1BBC  0008               	return
  8095  1BBD                     __end_of_conversor:
  8096                           
  8097                           	psect	text28
  8098  1D53                     __ptext28:	
  8099 ;; *************** function ___xxtofl *****************
  8100 ;; Defined at:
  8101 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  sign            1    wreg     unsigned char 
  8104 ;;  val             4    0[COMMON] long 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;  sign            1    8[COMMON] unsigned char 
  8107 ;;  arg             4   10[COMMON] unsigned long 
  8108 ;;  exp             1    9[COMMON] unsigned char 
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  4    0[COMMON] unsigned char 
  8111 ;; Registers used:
  8112 ;;		wreg, status,2, status,0
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8118 ;;      Params:         4       0       0       0       0
  8119 ;;      Locals:         6       0       0       0       0
  8120 ;;      Temps:          4       0       0       0       0
  8121 ;;      Totals:        14       0       0       0       0
  8122 ;;Total ram usage:       14 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_conversor
  8128 ;;		_conversor2
  8129 ;;		_sprintf
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           
  8134                           ;psect for function ___xxtofl
  8135  1D53                     ___xxtofl:
  8136                           
  8137                           ;incstack = 0
  8138                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8139                           ;___xxtofl@sign stored from wreg
  8140  1D53  00F8               	movwf	___xxtofl@sign
  8141  1D54                     l3207:
  8142  1D54  0878               	movf	___xxtofl@sign,w
  8143  1D55  1903               	btfsc	3,2
  8144  1D56  2D58               	goto	u5001
  8145  1D57  2D59               	goto	u5000
  8146  1D58                     u5001:
  8147  1D58  2D6D               	goto	l3213
  8148  1D59                     u5000:
  8149  1D59                     l3209:
  8150  1D59  1FF3               	btfss	___xxtofl@val+3,7
  8151  1D5A  2D5C               	goto	u5011
  8152  1D5B  2D5D               	goto	u5010
  8153  1D5C                     u5011:
  8154  1D5C  2D6D               	goto	l3213
  8155  1D5D                     u5010:
  8156  1D5D                     l3211:
  8157  1D5D  0970               	comf	___xxtofl@val,w
  8158  1D5E  00FA               	movwf	___xxtofl@arg
  8159  1D5F  0971               	comf	___xxtofl@val+1,w
  8160  1D60  00FB               	movwf	___xxtofl@arg+1
  8161  1D61  0972               	comf	___xxtofl@val+2,w
  8162  1D62  00FC               	movwf	___xxtofl@arg+2
  8163  1D63  0973               	comf	___xxtofl@val+3,w
  8164  1D64  00FD               	movwf	___xxtofl@arg+3
  8165  1D65  0AFA               	incf	___xxtofl@arg,f
  8166  1D66  1903               	skipnz
  8167  1D67  0AFB               	incf	___xxtofl@arg+1,f
  8168  1D68  1903               	skipnz
  8169  1D69  0AFC               	incf	___xxtofl@arg+2,f
  8170  1D6A  1903               	skipnz
  8171  1D6B  0AFD               	incf	___xxtofl@arg+3,f
  8172  1D6C  2D75               	goto	l877
  8173  1D6D                     l3213:
  8174  1D6D  0873               	movf	___xxtofl@val+3,w
  8175  1D6E  00FD               	movwf	___xxtofl@arg+3
  8176  1D6F  0872               	movf	___xxtofl@val+2,w
  8177  1D70  00FC               	movwf	___xxtofl@arg+2
  8178  1D71  0871               	movf	___xxtofl@val+1,w
  8179  1D72  00FB               	movwf	___xxtofl@arg+1
  8180  1D73  0870               	movf	___xxtofl@val,w
  8181  1D74  00FA               	movwf	___xxtofl@arg
  8182  1D75                     l877:
  8183  1D75  0873               	movf	___xxtofl@val+3,w
  8184  1D76  0472               	iorwf	___xxtofl@val+2,w
  8185  1D77  0471               	iorwf	___xxtofl@val+1,w
  8186  1D78  0470               	iorwf	___xxtofl@val,w
  8187  1D79  1D03               	skipz
  8188  1D7A  2D7C               	goto	u5021
  8189  1D7B  2D7D               	goto	u5020
  8190  1D7C                     u5021:
  8191  1D7C  2D86               	goto	l3219
  8192  1D7D                     u5020:
  8193  1D7D                     l3215:
  8194  1D7D  3000               	movlw	0
  8195  1D7E  00F3               	movwf	?___xxtofl+3
  8196  1D7F  3000               	movlw	0
  8197  1D80  00F2               	movwf	?___xxtofl+2
  8198  1D81  3000               	movlw	0
  8199  1D82  00F1               	movwf	?___xxtofl+1
  8200  1D83  3000               	movlw	0
  8201  1D84  00F0               	movwf	?___xxtofl
  8202  1D85  2E0C               	goto	l879
  8203  1D86                     l3219:
  8204  1D86  3096               	movlw	150
  8205  1D87  00F4               	movwf	??___xxtofl
  8206  1D88  0874               	movf	??___xxtofl,w
  8207  1D89  00F9               	movwf	___xxtofl@exp
  8208  1D8A  2D98               	goto	l3223
  8209  1D8B                     l3221:
  8210  1D8B  3001               	movlw	1
  8211  1D8C  00F4               	movwf	??___xxtofl
  8212  1D8D  0874               	movf	??___xxtofl,w
  8213  1D8E  07F9               	addwf	___xxtofl@exp,f
  8214  1D8F  3001               	movlw	1
  8215  1D90                     u5035:
  8216  1D90  1003               	clrc
  8217  1D91  0CFD               	rrf	___xxtofl@arg+3,f
  8218  1D92  0CFC               	rrf	___xxtofl@arg+2,f
  8219  1D93  0CFB               	rrf	___xxtofl@arg+1,f
  8220  1D94  0CFA               	rrf	___xxtofl@arg,f
  8221  1D95  3EFF               	addlw	-1
  8222  1D96  1D03               	skipz
  8223  1D97  2D90               	goto	u5035
  8224  1D98                     l3223:
  8225  1D98  30FE               	movlw	254
  8226  1D99  057D               	andwf	___xxtofl@arg+3,w
  8227  1D9A  1D03               	btfss	3,2
  8228  1D9B  2D9D               	goto	u5041
  8229  1D9C  2D9E               	goto	u5040
  8230  1D9D                     u5041:
  8231  1D9D  2D8B               	goto	l3221
  8232  1D9E                     u5040:
  8233  1D9E  2DBA               	goto	l883
  8234  1D9F                     l3225:
  8235  1D9F  3001               	movlw	1
  8236  1DA0  00F4               	movwf	??___xxtofl
  8237  1DA1  0874               	movf	??___xxtofl,w
  8238  1DA2  07F9               	addwf	___xxtofl@exp,f
  8239  1DA3                     l3227:
  8240  1DA3  3001               	movlw	1
  8241  1DA4  07FA               	addwf	___xxtofl@arg,f
  8242  1DA5  3000               	movlw	0
  8243  1DA6  1803               	skipnc
  8244  1DA7  3001               	movlw	1
  8245  1DA8  07FB               	addwf	___xxtofl@arg+1,f
  8246  1DA9  3000               	movlw	0
  8247  1DAA  1803               	skipnc
  8248  1DAB  3001               	movlw	1
  8249  1DAC  07FC               	addwf	___xxtofl@arg+2,f
  8250  1DAD  3000               	movlw	0
  8251  1DAE  1803               	skipnc
  8252  1DAF  3001               	movlw	1
  8253  1DB0  07FD               	addwf	___xxtofl@arg+3,f
  8254  1DB1                     l3229:
  8255  1DB1  3001               	movlw	1
  8256  1DB2                     u5055:
  8257  1DB2  1003               	clrc
  8258  1DB3  0CFD               	rrf	___xxtofl@arg+3,f
  8259  1DB4  0CFC               	rrf	___xxtofl@arg+2,f
  8260  1DB5  0CFB               	rrf	___xxtofl@arg+1,f
  8261  1DB6  0CFA               	rrf	___xxtofl@arg,f
  8262  1DB7  3EFF               	addlw	-1
  8263  1DB8  1D03               	skipz
  8264  1DB9  2DB2               	goto	u5055
  8265  1DBA                     l883:
  8266  1DBA  30FF               	movlw	255
  8267  1DBB  057D               	andwf	___xxtofl@arg+3,w
  8268  1DBC  1D03               	btfss	3,2
  8269  1DBD  2DBF               	goto	u5061
  8270  1DBE  2DC0               	goto	u5060
  8271  1DBF                     u5061:
  8272  1DBF  2D9F               	goto	l3225
  8273  1DC0                     u5060:
  8274  1DC0  2DCC               	goto	l3233
  8275  1DC1                     l3231:
  8276  1DC1  3001               	movlw	1
  8277  1DC2  02F9               	subwf	___xxtofl@exp,f
  8278  1DC3  3001               	movlw	1
  8279  1DC4  00F4               	movwf	??___xxtofl
  8280  1DC5                     u5075:
  8281  1DC5  1003               	clrc
  8282  1DC6  0DFA               	rlf	___xxtofl@arg,f
  8283  1DC7  0DFB               	rlf	___xxtofl@arg+1,f
  8284  1DC8  0DFC               	rlf	___xxtofl@arg+2,f
  8285  1DC9  0DFD               	rlf	___xxtofl@arg+3,f
  8286  1DCA  0BF4               	decfsz	??___xxtofl,f
  8287  1DCB  2DC5               	goto	u5075
  8288  1DCC                     l3233:
  8289  1DCC  1BFC               	btfsc	___xxtofl@arg+2,7
  8290  1DCD  2DCF               	goto	u5081
  8291  1DCE  2DD0               	goto	u5080
  8292  1DCF                     u5081:
  8293  1DCF  2DD6               	goto	l890
  8294  1DD0                     u5080:
  8295  1DD0                     l3235:
  8296  1DD0  3002               	movlw	2
  8297  1DD1  0279               	subwf	___xxtofl@exp,w
  8298  1DD2  1803               	skipnc
  8299  1DD3  2DD5               	goto	u5091
  8300  1DD4  2DD6               	goto	u5090
  8301  1DD5                     u5091:
  8302  1DD5  2DC1               	goto	l3231
  8303  1DD6                     u5090:
  8304  1DD6                     l890:
  8305  1DD6  1879               	btfsc	___xxtofl@exp,0
  8306  1DD7  2DD9               	goto	u5101
  8307  1DD8  2DDA               	goto	u5100
  8308  1DD9                     u5101:
  8309  1DD9  2DE2               	goto	l891
  8310  1DDA                     u5100:
  8311  1DDA                     l3237:
  8312  1DDA  30FF               	movlw	255
  8313  1DDB  05FA               	andwf	___xxtofl@arg,f
  8314  1DDC  30FF               	movlw	255
  8315  1DDD  05FB               	andwf	___xxtofl@arg+1,f
  8316  1DDE  307F               	movlw	127
  8317  1DDF  05FC               	andwf	___xxtofl@arg+2,f
  8318  1DE0  30FF               	movlw	255
  8319  1DE1  05FD               	andwf	___xxtofl@arg+3,f
  8320  1DE2                     l891:
  8321  1DE2  1003               	clrc
  8322  1DE3  0CF9               	rrf	___xxtofl@exp,f
  8323  1DE4                     l3239:
  8324  1DE4  0879               	movf	___xxtofl@exp,w
  8325  1DE5  00F4               	movwf	??___xxtofl
  8326  1DE6  01F5               	clrf	??___xxtofl+1
  8327  1DE7  01F6               	clrf	??___xxtofl+2
  8328  1DE8  01F7               	clrf	??___xxtofl+3
  8329  1DE9  3018               	movlw	24
  8330  1DEA                     u5115:
  8331  1DEA  1003               	clrc
  8332  1DEB  0DF4               	rlf	??___xxtofl,f
  8333  1DEC  0DF5               	rlf	??___xxtofl+1,f
  8334  1DED  0DF6               	rlf	??___xxtofl+2,f
  8335  1DEE  0DF7               	rlf	??___xxtofl+3,f
  8336  1DEF                     u5110:
  8337  1DEF  3EFF               	addlw	-1
  8338  1DF0  1D03               	skipz
  8339  1DF1  2DEA               	goto	u5115
  8340  1DF2  0874               	movf	??___xxtofl,w
  8341  1DF3  04FA               	iorwf	___xxtofl@arg,f
  8342  1DF4  0875               	movf	??___xxtofl+1,w
  8343  1DF5  04FB               	iorwf	___xxtofl@arg+1,f
  8344  1DF6  0876               	movf	??___xxtofl+2,w
  8345  1DF7  04FC               	iorwf	___xxtofl@arg+2,f
  8346  1DF8  0877               	movf	??___xxtofl+3,w
  8347  1DF9  04FD               	iorwf	___xxtofl@arg+3,f
  8348  1DFA                     l3241:
  8349  1DFA  0878               	movf	___xxtofl@sign,w
  8350  1DFB  1903               	btfsc	3,2
  8351  1DFC  2DFE               	goto	u5121
  8352  1DFD  2DFF               	goto	u5120
  8353  1DFE                     u5121:
  8354  1DFE  2E04               	goto	l3247
  8355  1DFF                     u5120:
  8356  1DFF                     l3243:
  8357  1DFF  1FF3               	btfss	___xxtofl@val+3,7
  8358  1E00  2E02               	goto	u5131
  8359  1E01  2E03               	goto	u5130
  8360  1E02                     u5131:
  8361  1E02  2E04               	goto	l3247
  8362  1E03                     u5130:
  8363  1E03                     l3245:
  8364  1E03  17FD               	bsf	___xxtofl@arg+3,7
  8365  1E04                     l3247:
  8366  1E04  087D               	movf	___xxtofl@arg+3,w
  8367  1E05  00F3               	movwf	?___xxtofl+3
  8368  1E06  087C               	movf	___xxtofl@arg+2,w
  8369  1E07  00F2               	movwf	?___xxtofl+2
  8370  1E08  087B               	movf	___xxtofl@arg+1,w
  8371  1E09  00F1               	movwf	?___xxtofl+1
  8372  1E0A  087A               	movf	___xxtofl@arg,w
  8373  1E0B  00F0               	movwf	?___xxtofl
  8374  1E0C                     l879:
  8375  1E0C  0008               	return
  8376  1E0D                     __end_of___xxtofl:
  8377                           
  8378                           	psect	text29
  8379  0C9F                     __ptext29:	
  8380 ;; *************** function ___flmul *****************
  8381 ;; Defined at:
  8382 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  b               4    4[BANK0 ] unsigned char 
  8385 ;;  a               4    8[BANK0 ] unsigned char 
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  prod            4   24[BANK0 ] struct .
  8388 ;;  grs             4   18[BANK0 ] unsigned long 
  8389 ;;  temp            2   28[BANK0 ] struct .
  8390 ;;  bexp            1   23[BANK0 ] unsigned char 
  8391 ;;  aexp            1   22[BANK0 ] unsigned char 
  8392 ;;  sign            1   17[BANK0 ] unsigned char 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  4    4[BANK0 ] unsigned char 
  8395 ;; Registers used:
  8396 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8402 ;;      Params:         0       8       0       0       0
  8403 ;;      Locals:         0      13       0       0       0
  8404 ;;      Temps:          0       5       0       0       0
  8405 ;;      Totals:         0      26       0       0       0
  8406 ;;Total ram usage:       26 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:    1
  8409 ;; This function calls:
  8410 ;;		__Umul8_16
  8411 ;; This function is called by:
  8412 ;;		_conversor
  8413 ;;		_conversor2
  8414 ;;		_fround
  8415 ;;		_scale
  8416 ;;		_sprintf
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           
  8421                           ;psect for function ___flmul
  8422  0C9F                     ___flmul:
  8423  0C9F                     l2729:	
  8424                           ;incstack = 0
  8425                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8426                           
  8427  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  8428  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  8429  0CA1  0827               	movf	___flmul@b+3,w
  8430  0CA2  3980               	andlw	128
  8431  0CA3  00AC               	movwf	??___flmul
  8432  0CA4  082C               	movf	??___flmul,w
  8433  0CA5  00B1               	movwf	___flmul@sign
  8434  0CA6                     l2731:
  8435  0CA6  0827               	movf	___flmul@b+3,w
  8436  0CA7  00AC               	movwf	??___flmul
  8437  0CA8  072C               	addwf	??___flmul,w
  8438  0CA9  00AD               	movwf	??___flmul+1
  8439  0CAA  082D               	movf	??___flmul+1,w
  8440  0CAB  00B7               	movwf	___flmul@bexp
  8441  0CAC                     l2733:
  8442  0CAC  1FA6               	btfss	___flmul@b+2,7
  8443  0CAD  2CAF               	goto	u3711
  8444  0CAE  2CB0               	goto	u3710
  8445  0CAF                     u3711:
  8446  0CAF  2CB1               	goto	l2737
  8447  0CB0                     u3710:
  8448  0CB0                     l2735:
  8449  0CB0  1437               	bsf	___flmul@bexp,0
  8450  0CB1                     l2737:
  8451  0CB1  0837               	movf	___flmul@bexp,w
  8452  0CB2  1903               	btfsc	3,2
  8453  0CB3  2CB5               	goto	u3721
  8454  0CB4  2CB6               	goto	u3720
  8455  0CB5                     u3721:
  8456  0CB5  2CC5               	goto	l2745
  8457  0CB6                     u3720:
  8458  0CB6                     l2739:
  8459  0CB6  0A37               	incf	___flmul@bexp,w
  8460  0CB7  1D03               	btfss	3,2
  8461  0CB8  2CBA               	goto	u3731
  8462  0CB9  2CBB               	goto	u3730
  8463  0CBA                     u3731:
  8464  0CBA  2CC3               	goto	l2743
  8465  0CBB                     u3730:
  8466  0CBB                     l2741:
  8467  0CBB  3000               	movlw	0
  8468  0CBC  00A7               	movwf	___flmul@b+3
  8469  0CBD  3000               	movlw	0
  8470  0CBE  00A6               	movwf	___flmul@b+2
  8471  0CBF  3000               	movlw	0
  8472  0CC0  00A5               	movwf	___flmul@b+1
  8473  0CC1  3000               	movlw	0
  8474  0CC2  00A4               	movwf	___flmul@b
  8475  0CC3                     l2743:
  8476  0CC3  17A6               	bsf	___flmul@b+2,7
  8477  0CC4  2CCD               	goto	l2747
  8478  0CC5                     l2745:
  8479  0CC5  3000               	movlw	0
  8480  0CC6  00A7               	movwf	___flmul@b+3
  8481  0CC7  3000               	movlw	0
  8482  0CC8  00A6               	movwf	___flmul@b+2
  8483  0CC9  3000               	movlw	0
  8484  0CCA  00A5               	movwf	___flmul@b+1
  8485  0CCB  3000               	movlw	0
  8486  0CCC  00A4               	movwf	___flmul@b
  8487  0CCD                     l2747:
  8488  0CCD  082B               	movf	___flmul@a+3,w
  8489  0CCE  3980               	andlw	128
  8490  0CCF  00AC               	movwf	??___flmul
  8491  0CD0  082C               	movf	??___flmul,w
  8492  0CD1  06B1               	xorwf	___flmul@sign,f
  8493  0CD2                     l2749:
  8494  0CD2  082B               	movf	___flmul@a+3,w
  8495  0CD3  00AC               	movwf	??___flmul
  8496  0CD4  072C               	addwf	??___flmul,w
  8497  0CD5  00AD               	movwf	??___flmul+1
  8498  0CD6  082D               	movf	??___flmul+1,w
  8499  0CD7  00B6               	movwf	___flmul@aexp
  8500  0CD8                     l2751:
  8501  0CD8  1FAA               	btfss	___flmul@a+2,7
  8502  0CD9  2CDB               	goto	u3741
  8503  0CDA  2CDC               	goto	u3740
  8504  0CDB                     u3741:
  8505  0CDB  2CDD               	goto	l2755
  8506  0CDC                     u3740:
  8507  0CDC                     l2753:
  8508  0CDC  1436               	bsf	___flmul@aexp,0
  8509  0CDD                     l2755:
  8510  0CDD  0836               	movf	___flmul@aexp,w
  8511  0CDE  1903               	btfsc	3,2
  8512  0CDF  2CE1               	goto	u3751
  8513  0CE0  2CE2               	goto	u3750
  8514  0CE1                     u3751:
  8515  0CE1  2CF1               	goto	l2763
  8516  0CE2                     u3750:
  8517  0CE2                     l2757:
  8518  0CE2  0A36               	incf	___flmul@aexp,w
  8519  0CE3  1D03               	btfss	3,2
  8520  0CE4  2CE6               	goto	u3761
  8521  0CE5  2CE7               	goto	u3760
  8522  0CE6                     u3761:
  8523  0CE6  2CEF               	goto	l2761
  8524  0CE7                     u3760:
  8525  0CE7                     l2759:
  8526  0CE7  3000               	movlw	0
  8527  0CE8  00AB               	movwf	___flmul@a+3
  8528  0CE9  3000               	movlw	0
  8529  0CEA  00AA               	movwf	___flmul@a+2
  8530  0CEB  3000               	movlw	0
  8531  0CEC  00A9               	movwf	___flmul@a+1
  8532  0CED  3000               	movlw	0
  8533  0CEE  00A8               	movwf	___flmul@a
  8534  0CEF                     l2761:
  8535  0CEF  17AA               	bsf	___flmul@a+2,7
  8536  0CF0  2CF9               	goto	l2765
  8537  0CF1                     l2763:
  8538  0CF1  3000               	movlw	0
  8539  0CF2  00AB               	movwf	___flmul@a+3
  8540  0CF3  3000               	movlw	0
  8541  0CF4  00AA               	movwf	___flmul@a+2
  8542  0CF5  3000               	movlw	0
  8543  0CF6  00A9               	movwf	___flmul@a+1
  8544  0CF7  3000               	movlw	0
  8545  0CF8  00A8               	movwf	___flmul@a
  8546  0CF9                     l2765:
  8547  0CF9  0836               	movf	___flmul@aexp,w
  8548  0CFA  1903               	btfsc	3,2
  8549  0CFB  2CFD               	goto	u3771
  8550  0CFC  2CFE               	goto	u3770
  8551  0CFD                     u3771:
  8552  0CFD  2D03               	goto	l2769
  8553  0CFE                     u3770:
  8554  0CFE                     l2767:
  8555  0CFE  0837               	movf	___flmul@bexp,w
  8556  0CFF  1D03               	btfss	3,2
  8557  0D00  2D02               	goto	u3781
  8558  0D01  2D03               	goto	u3780
  8559  0D02                     u3781:
  8560  0D02  2D0C               	goto	l2773
  8561  0D03                     u3780:
  8562  0D03                     l2769:
  8563  0D03  3000               	movlw	0
  8564  0D04  00A7               	movwf	?___flmul+3
  8565  0D05  3000               	movlw	0
  8566  0D06  00A6               	movwf	?___flmul+2
  8567  0D07  3000               	movlw	0
  8568  0D08  00A5               	movwf	?___flmul+1
  8569  0D09  3000               	movlw	0
  8570  0D0A  00A4               	movwf	?___flmul
  8571  0D0B  2FFF               	goto	l833
  8572  0D0C                     l2773:
  8573  0D0C  0824               	movf	___flmul@b,w
  8574  0D0D  00AC               	movwf	??___flmul
  8575  0D0E  082C               	movf	??___flmul,w
  8576  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  8577  0D10  082A               	movf	___flmul@a+2,w
  8578  0D11  160A  158A  2180  120A  158A  	fcall	__Umul8_16
  8579  0D16  0871               	movf	?__Umul8_16+1,w
  8580  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  8581  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  8582  0D19  00BD               	movwf	___flmul@temp+1
  8583  0D1A  0870               	movf	?__Umul8_16,w
  8584  0D1B  00BC               	movwf	___flmul@temp
  8585  0D1C                     l2775:
  8586  0D1C  083C               	movf	___flmul@temp,w
  8587  0D1D  00AC               	movwf	??___flmul
  8588  0D1E  01AD               	clrf	??___flmul+1
  8589  0D1F  01AE               	clrf	??___flmul+2
  8590  0D20  01AF               	clrf	??___flmul+3
  8591  0D21  082F               	movf	??___flmul+3,w
  8592  0D22  00B5               	movwf	___flmul@grs+3
  8593  0D23  082E               	movf	??___flmul+2,w
  8594  0D24  00B4               	movwf	___flmul@grs+2
  8595  0D25  082D               	movf	??___flmul+1,w
  8596  0D26  00B3               	movwf	___flmul@grs+1
  8597  0D27  082C               	movf	??___flmul,w
  8598  0D28  00B2               	movwf	___flmul@grs
  8599  0D29                     l2777:
  8600  0D29  083D               	movf	___flmul@temp+1,w
  8601  0D2A  00AC               	movwf	??___flmul
  8602  0D2B  01AD               	clrf	??___flmul+1
  8603  0D2C  01AE               	clrf	??___flmul+2
  8604  0D2D  01AF               	clrf	??___flmul+3
  8605  0D2E  082F               	movf	??___flmul+3,w
  8606  0D2F  00BB               	movwf	___flmul@prod+3
  8607  0D30  082E               	movf	??___flmul+2,w
  8608  0D31  00BA               	movwf	___flmul@prod+2
  8609  0D32  082D               	movf	??___flmul+1,w
  8610  0D33  00B9               	movwf	___flmul@prod+1
  8611  0D34  082C               	movf	??___flmul,w
  8612  0D35  00B8               	movwf	___flmul@prod
  8613  0D36  0825               	movf	___flmul@b+1,w
  8614  0D37  00AC               	movwf	??___flmul
  8615  0D38  082C               	movf	??___flmul,w
  8616  0D39  00F0               	movwf	__Umul8_16@multiplicand
  8617  0D3A  0829               	movf	___flmul@a+1,w
  8618  0D3B  160A  158A  2180  120A  158A  	fcall	__Umul8_16
  8619  0D40  0871               	movf	?__Umul8_16+1,w
  8620  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  8621  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  8622  0D43  00BD               	movwf	___flmul@temp+1
  8623  0D44  0870               	movf	?__Umul8_16,w
  8624  0D45  00BC               	movwf	___flmul@temp
  8625  0D46                     l2779:
  8626  0D46  083C               	movf	___flmul@temp,w
  8627  0D47  00AC               	movwf	??___flmul
  8628  0D48  01AD               	clrf	??___flmul+1
  8629  0D49  01AE               	clrf	??___flmul+2
  8630  0D4A  01AF               	clrf	??___flmul+3
  8631  0D4B  082C               	movf	??___flmul,w
  8632  0D4C  07B2               	addwf	___flmul@grs,f
  8633  0D4D  082D               	movf	??___flmul+1,w
  8634  0D4E  1103               	clrz
  8635  0D4F  1803               	skipnc
  8636  0D50  3E01               	addlw	1
  8637  0D51  1903               	skipnz
  8638  0D52  2D54               	goto	u3791
  8639  0D53  07B3               	addwf	___flmul@grs+1,f
  8640  0D54                     u3791:
  8641  0D54  082E               	movf	??___flmul+2,w
  8642  0D55  1103               	clrz
  8643  0D56  1803               	skipnc
  8644  0D57  3E01               	addlw	1
  8645  0D58  1903               	skipnz
  8646  0D59  2D5B               	goto	u3792
  8647  0D5A  07B4               	addwf	___flmul@grs+2,f
  8648  0D5B                     u3792:
  8649  0D5B  082F               	movf	??___flmul+3,w
  8650  0D5C  1103               	clrz
  8651  0D5D  1803               	skipnc
  8652  0D5E  3E01               	addlw	1
  8653  0D5F  1903               	skipnz
  8654  0D60  2D62               	goto	u3793
  8655  0D61  07B5               	addwf	___flmul@grs+3,f
  8656  0D62                     u3793:
  8657  0D62                     l2781:
  8658  0D62  083D               	movf	___flmul@temp+1,w
  8659  0D63  00AC               	movwf	??___flmul
  8660  0D64  01AD               	clrf	??___flmul+1
  8661  0D65  01AE               	clrf	??___flmul+2
  8662  0D66  01AF               	clrf	??___flmul+3
  8663  0D67  082C               	movf	??___flmul,w
  8664  0D68  07B8               	addwf	___flmul@prod,f
  8665  0D69  082D               	movf	??___flmul+1,w
  8666  0D6A  1103               	clrz
  8667  0D6B  1803               	skipnc
  8668  0D6C  3E01               	addlw	1
  8669  0D6D  1903               	skipnz
  8670  0D6E  2D70               	goto	u3801
  8671  0D6F  07B9               	addwf	___flmul@prod+1,f
  8672  0D70                     u3801:
  8673  0D70  082E               	movf	??___flmul+2,w
  8674  0D71  1103               	clrz
  8675  0D72  1803               	skipnc
  8676  0D73  3E01               	addlw	1
  8677  0D74  1903               	skipnz
  8678  0D75  2D77               	goto	u3802
  8679  0D76  07BA               	addwf	___flmul@prod+2,f
  8680  0D77                     u3802:
  8681  0D77  082F               	movf	??___flmul+3,w
  8682  0D78  1103               	clrz
  8683  0D79  1803               	skipnc
  8684  0D7A  3E01               	addlw	1
  8685  0D7B  1903               	skipnz
  8686  0D7C  2D7E               	goto	u3803
  8687  0D7D  07BB               	addwf	___flmul@prod+3,f
  8688  0D7E                     u3803:
  8689  0D7E  0826               	movf	___flmul@b+2,w
  8690  0D7F  00AC               	movwf	??___flmul
  8691  0D80  082C               	movf	??___flmul,w
  8692  0D81  00F0               	movwf	__Umul8_16@multiplicand
  8693  0D82  0828               	movf	___flmul@a,w
  8694  0D83  160A  158A  2180  120A  158A  	fcall	__Umul8_16
  8695  0D88  0871               	movf	?__Umul8_16+1,w
  8696  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  8697  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  8698  0D8B  00BD               	movwf	___flmul@temp+1
  8699  0D8C  0870               	movf	?__Umul8_16,w
  8700  0D8D  00BC               	movwf	___flmul@temp
  8701  0D8E                     l2783:
  8702  0D8E  083C               	movf	___flmul@temp,w
  8703  0D8F  00AC               	movwf	??___flmul
  8704  0D90  01AD               	clrf	??___flmul+1
  8705  0D91  01AE               	clrf	??___flmul+2
  8706  0D92  01AF               	clrf	??___flmul+3
  8707  0D93  082C               	movf	??___flmul,w
  8708  0D94  07B2               	addwf	___flmul@grs,f
  8709  0D95  082D               	movf	??___flmul+1,w
  8710  0D96  1103               	clrz
  8711  0D97  1803               	skipnc
  8712  0D98  3E01               	addlw	1
  8713  0D99  1903               	skipnz
  8714  0D9A  2D9C               	goto	u3811
  8715  0D9B  07B3               	addwf	___flmul@grs+1,f
  8716  0D9C                     u3811:
  8717  0D9C  082E               	movf	??___flmul+2,w
  8718  0D9D  1103               	clrz
  8719  0D9E  1803               	skipnc
  8720  0D9F  3E01               	addlw	1
  8721  0DA0  1903               	skipnz
  8722  0DA1  2DA3               	goto	u3812
  8723  0DA2  07B4               	addwf	___flmul@grs+2,f
  8724  0DA3                     u3812:
  8725  0DA3  082F               	movf	??___flmul+3,w
  8726  0DA4  1103               	clrz
  8727  0DA5  1803               	skipnc
  8728  0DA6  3E01               	addlw	1
  8729  0DA7  1903               	skipnz
  8730  0DA8  2DAA               	goto	u3813
  8731  0DA9  07B5               	addwf	___flmul@grs+3,f
  8732  0DAA                     u3813:
  8733  0DAA                     l2785:
  8734  0DAA  083D               	movf	___flmul@temp+1,w
  8735  0DAB  00AC               	movwf	??___flmul
  8736  0DAC  01AD               	clrf	??___flmul+1
  8737  0DAD  01AE               	clrf	??___flmul+2
  8738  0DAE  01AF               	clrf	??___flmul+3
  8739  0DAF  082C               	movf	??___flmul,w
  8740  0DB0  07B8               	addwf	___flmul@prod,f
  8741  0DB1  082D               	movf	??___flmul+1,w
  8742  0DB2  1103               	clrz
  8743  0DB3  1803               	skipnc
  8744  0DB4  3E01               	addlw	1
  8745  0DB5  1903               	skipnz
  8746  0DB6  2DB8               	goto	u3821
  8747  0DB7  07B9               	addwf	___flmul@prod+1,f
  8748  0DB8                     u3821:
  8749  0DB8  082E               	movf	??___flmul+2,w
  8750  0DB9  1103               	clrz
  8751  0DBA  1803               	skipnc
  8752  0DBB  3E01               	addlw	1
  8753  0DBC  1903               	skipnz
  8754  0DBD  2DBF               	goto	u3822
  8755  0DBE  07BA               	addwf	___flmul@prod+2,f
  8756  0DBF                     u3822:
  8757  0DBF  082F               	movf	??___flmul+3,w
  8758  0DC0  1103               	clrz
  8759  0DC1  1803               	skipnc
  8760  0DC2  3E01               	addlw	1
  8761  0DC3  1903               	skipnz
  8762  0DC4  2DC6               	goto	u3823
  8763  0DC5  07BB               	addwf	___flmul@prod+3,f
  8764  0DC6                     u3823:
  8765  0DC6                     l2787:
  8766  0DC6  3008               	movlw	8
  8767  0DC7  00AC               	movwf	??___flmul
  8768  0DC8                     u3835:
  8769  0DC8  1003               	clrc
  8770  0DC9  0DB2               	rlf	___flmul@grs,f
  8771  0DCA  0DB3               	rlf	___flmul@grs+1,f
  8772  0DCB  0DB4               	rlf	___flmul@grs+2,f
  8773  0DCC  0DB5               	rlf	___flmul@grs+3,f
  8774  0DCD  0BAC               	decfsz	??___flmul,f
  8775  0DCE  2DC8               	goto	u3835
  8776  0DCF                     l2789:
  8777  0DCF  0825               	movf	___flmul@b+1,w
  8778  0DD0  00AC               	movwf	??___flmul
  8779  0DD1  082C               	movf	??___flmul,w
  8780  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  8781  0DD3  0828               	movf	___flmul@a,w
  8782  0DD4  160A  158A  2180  120A  158A  	fcall	__Umul8_16
  8783  0DD9  0871               	movf	?__Umul8_16+1,w
  8784  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  8785  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  8786  0DDC  00BD               	movwf	___flmul@temp+1
  8787  0DDD  0870               	movf	?__Umul8_16,w
  8788  0DDE  00BC               	movwf	___flmul@temp
  8789  0DDF                     l2791:
  8790  0DDF  083C               	movf	___flmul@temp,w
  8791  0DE0  00AC               	movwf	??___flmul
  8792  0DE1  083D               	movf	___flmul@temp+1,w
  8793  0DE2  00AD               	movwf	??___flmul+1
  8794  0DE3  01AE               	clrf	??___flmul+2
  8795  0DE4  01AF               	clrf	??___flmul+3
  8796  0DE5  082C               	movf	??___flmul,w
  8797  0DE6  07B2               	addwf	___flmul@grs,f
  8798  0DE7  082D               	movf	??___flmul+1,w
  8799  0DE8  1103               	clrz
  8800  0DE9  1803               	skipnc
  8801  0DEA  3E01               	addlw	1
  8802  0DEB  1903               	skipnz
  8803  0DEC  2DEE               	goto	u3841
  8804  0DED  07B3               	addwf	___flmul@grs+1,f
  8805  0DEE                     u3841:
  8806  0DEE  082E               	movf	??___flmul+2,w
  8807  0DEF  1103               	clrz
  8808  0DF0  1803               	skipnc
  8809  0DF1  3E01               	addlw	1
  8810  0DF2  1903               	skipnz
  8811  0DF3  2DF5               	goto	u3842
  8812  0DF4  07B4               	addwf	___flmul@grs+2,f
  8813  0DF5                     u3842:
  8814  0DF5  082F               	movf	??___flmul+3,w
  8815  0DF6  1103               	clrz
  8816  0DF7  1803               	skipnc
  8817  0DF8  3E01               	addlw	1
  8818  0DF9  1903               	skipnz
  8819  0DFA  2DFC               	goto	u3843
  8820  0DFB  07B5               	addwf	___flmul@grs+3,f
  8821  0DFC                     u3843:
  8822  0DFC                     l2793:
  8823  0DFC  0824               	movf	___flmul@b,w
  8824  0DFD  00AC               	movwf	??___flmul
  8825  0DFE  082C               	movf	??___flmul,w
  8826  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  8827  0E00  0829               	movf	___flmul@a+1,w
  8828  0E01  160A  158A  2180  120A  158A  	fcall	__Umul8_16
  8829  0E06  0871               	movf	?__Umul8_16+1,w
  8830  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  8831  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  8832  0E09  00BD               	movwf	___flmul@temp+1
  8833  0E0A  0870               	movf	?__Umul8_16,w
  8834  0E0B  00BC               	movwf	___flmul@temp
  8835  0E0C                     l2795:
  8836  0E0C  083C               	movf	___flmul@temp,w
  8837  0E0D  00AC               	movwf	??___flmul
  8838  0E0E  083D               	movf	___flmul@temp+1,w
  8839  0E0F  00AD               	movwf	??___flmul+1
  8840  0E10  01AE               	clrf	??___flmul+2
  8841  0E11  01AF               	clrf	??___flmul+3
  8842  0E12  082C               	movf	??___flmul,w
  8843  0E13  07B2               	addwf	___flmul@grs,f
  8844  0E14  082D               	movf	??___flmul+1,w
  8845  0E15  1103               	clrz
  8846  0E16  1803               	skipnc
  8847  0E17  3E01               	addlw	1
  8848  0E18  1903               	skipnz
  8849  0E19  2E1B               	goto	u3851
  8850  0E1A  07B3               	addwf	___flmul@grs+1,f
  8851  0E1B                     u3851:
  8852  0E1B  082E               	movf	??___flmul+2,w
  8853  0E1C  1103               	clrz
  8854  0E1D  1803               	skipnc
  8855  0E1E  3E01               	addlw	1
  8856  0E1F  1903               	skipnz
  8857  0E20  2E22               	goto	u3852
  8858  0E21  07B4               	addwf	___flmul@grs+2,f
  8859  0E22                     u3852:
  8860  0E22  082F               	movf	??___flmul+3,w
  8861  0E23  1103               	clrz
  8862  0E24  1803               	skipnc
  8863  0E25  3E01               	addlw	1
  8864  0E26  1903               	skipnz
  8865  0E27  2E29               	goto	u3853
  8866  0E28  07B5               	addwf	___flmul@grs+3,f
  8867  0E29                     u3853:
  8868  0E29                     l2797:
  8869  0E29  3008               	movlw	8
  8870  0E2A  00AC               	movwf	??___flmul
  8871  0E2B                     u3865:
  8872  0E2B  1003               	clrc
  8873  0E2C  0DB2               	rlf	___flmul@grs,f
  8874  0E2D  0DB3               	rlf	___flmul@grs+1,f
  8875  0E2E  0DB4               	rlf	___flmul@grs+2,f
  8876  0E2F  0DB5               	rlf	___flmul@grs+3,f
  8877  0E30  0BAC               	decfsz	??___flmul,f
  8878  0E31  2E2B               	goto	u3865
  8879  0E32  0824               	movf	___flmul@b,w
  8880  0E33  00AC               	movwf	??___flmul
  8881  0E34  082C               	movf	??___flmul,w
  8882  0E35  00F0               	movwf	__Umul8_16@multiplicand
  8883  0E36  0828               	movf	___flmul@a,w
  8884  0E37  160A  158A  2180  120A  158A  	fcall	__Umul8_16
  8885  0E3C  0871               	movf	?__Umul8_16+1,w
  8886  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  8887  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  8888  0E3F  00BD               	movwf	___flmul@temp+1
  8889  0E40  0870               	movf	?__Umul8_16,w
  8890  0E41  00BC               	movwf	___flmul@temp
  8891  0E42                     l2799:
  8892  0E42  083C               	movf	___flmul@temp,w
  8893  0E43  00AC               	movwf	??___flmul
  8894  0E44  083D               	movf	___flmul@temp+1,w
  8895  0E45  00AD               	movwf	??___flmul+1
  8896  0E46  01AE               	clrf	??___flmul+2
  8897  0E47  01AF               	clrf	??___flmul+3
  8898  0E48  082C               	movf	??___flmul,w
  8899  0E49  07B2               	addwf	___flmul@grs,f
  8900  0E4A  082D               	movf	??___flmul+1,w
  8901  0E4B  1103               	clrz
  8902  0E4C  1803               	skipnc
  8903  0E4D  3E01               	addlw	1
  8904  0E4E  1903               	skipnz
  8905  0E4F  2E51               	goto	u3871
  8906  0E50  07B3               	addwf	___flmul@grs+1,f
  8907  0E51                     u3871:
  8908  0E51  082E               	movf	??___flmul+2,w
  8909  0E52  1103               	clrz
  8910  0E53  1803               	skipnc
  8911  0E54  3E01               	addlw	1
  8912  0E55  1903               	skipnz
  8913  0E56  2E58               	goto	u3872
  8914  0E57  07B4               	addwf	___flmul@grs+2,f
  8915  0E58                     u3872:
  8916  0E58  082F               	movf	??___flmul+3,w
  8917  0E59  1103               	clrz
  8918  0E5A  1803               	skipnc
  8919  0E5B  3E01               	addlw	1
  8920  0E5C  1903               	skipnz
  8921  0E5D  2E5F               	goto	u3873
  8922  0E5E  07B5               	addwf	___flmul@grs+3,f
  8923  0E5F                     u3873:
  8924  0E5F                     l2801:
  8925  0E5F  0825               	movf	___flmul@b+1,w
  8926  0E60  00AC               	movwf	??___flmul
  8927  0E61  082C               	movf	??___flmul,w
  8928  0E62  00F0               	movwf	__Umul8_16@multiplicand
  8929  0E63  082A               	movf	___flmul@a+2,w
  8930  0E64  160A  158A  2180  120A  158A  	fcall	__Umul8_16
  8931  0E69  0871               	movf	?__Umul8_16+1,w
  8932  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  8933  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  8934  0E6C  00BD               	movwf	___flmul@temp+1
  8935  0E6D  0870               	movf	?__Umul8_16,w
  8936  0E6E  00BC               	movwf	___flmul@temp
  8937  0E6F  083C               	movf	___flmul@temp,w
  8938  0E70  00AC               	movwf	??___flmul
  8939  0E71  083D               	movf	___flmul@temp+1,w
  8940  0E72  00AD               	movwf	??___flmul+1
  8941  0E73  01AE               	clrf	??___flmul+2
  8942  0E74  01AF               	clrf	??___flmul+3
  8943  0E75  082C               	movf	??___flmul,w
  8944  0E76  07B8               	addwf	___flmul@prod,f
  8945  0E77  082D               	movf	??___flmul+1,w
  8946  0E78  1103               	clrz
  8947  0E79  1803               	skipnc
  8948  0E7A  3E01               	addlw	1
  8949  0E7B  1903               	skipnz
  8950  0E7C  2E7E               	goto	u3881
  8951  0E7D  07B9               	addwf	___flmul@prod+1,f
  8952  0E7E                     u3881:
  8953  0E7E  082E               	movf	??___flmul+2,w
  8954  0E7F  1103               	clrz
  8955  0E80  1803               	skipnc
  8956  0E81  3E01               	addlw	1
  8957  0E82  1903               	skipnz
  8958  0E83  2E85               	goto	u3882
  8959  0E84  07BA               	addwf	___flmul@prod+2,f
  8960  0E85                     u3882:
  8961  0E85  082F               	movf	??___flmul+3,w
  8962  0E86  1103               	clrz
  8963  0E87  1803               	skipnc
  8964  0E88  3E01               	addlw	1
  8965  0E89  1903               	skipnz
  8966  0E8A  2E8C               	goto	u3883
  8967  0E8B  07BB               	addwf	___flmul@prod+3,f
  8968  0E8C                     u3883:
  8969  0E8C                     l2803:
  8970  0E8C  0826               	movf	___flmul@b+2,w
  8971  0E8D  00AC               	movwf	??___flmul
  8972  0E8E  082C               	movf	??___flmul,w
  8973  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  8974  0E90  0829               	movf	___flmul@a+1,w
  8975  0E91  160A  158A  2180  120A  158A  	fcall	__Umul8_16
  8976  0E96  0871               	movf	?__Umul8_16+1,w
  8977  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  8978  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  8979  0E99  00BD               	movwf	___flmul@temp+1
  8980  0E9A  0870               	movf	?__Umul8_16,w
  8981  0E9B  00BC               	movwf	___flmul@temp
  8982  0E9C                     l2805:
  8983  0E9C  083C               	movf	___flmul@temp,w
  8984  0E9D  00AC               	movwf	??___flmul
  8985  0E9E  083D               	movf	___flmul@temp+1,w
  8986  0E9F  00AD               	movwf	??___flmul+1
  8987  0EA0  01AE               	clrf	??___flmul+2
  8988  0EA1  01AF               	clrf	??___flmul+3
  8989  0EA2  082C               	movf	??___flmul,w
  8990  0EA3  07B8               	addwf	___flmul@prod,f
  8991  0EA4  082D               	movf	??___flmul+1,w
  8992  0EA5  1103               	clrz
  8993  0EA6  1803               	skipnc
  8994  0EA7  3E01               	addlw	1
  8995  0EA8  1903               	skipnz
  8996  0EA9  2EAB               	goto	u3891
  8997  0EAA  07B9               	addwf	___flmul@prod+1,f
  8998  0EAB                     u3891:
  8999  0EAB  082E               	movf	??___flmul+2,w
  9000  0EAC  1103               	clrz
  9001  0EAD  1803               	skipnc
  9002  0EAE  3E01               	addlw	1
  9003  0EAF  1903               	skipnz
  9004  0EB0  2EB2               	goto	u3892
  9005  0EB1  07BA               	addwf	___flmul@prod+2,f
  9006  0EB2                     u3892:
  9007  0EB2  082F               	movf	??___flmul+3,w
  9008  0EB3  1103               	clrz
  9009  0EB4  1803               	skipnc
  9010  0EB5  3E01               	addlw	1
  9011  0EB6  1903               	skipnz
  9012  0EB7  2EB9               	goto	u3893
  9013  0EB8  07BB               	addwf	___flmul@prod+3,f
  9014  0EB9                     u3893:
  9015  0EB9  0826               	movf	___flmul@b+2,w
  9016  0EBA  00AC               	movwf	??___flmul
  9017  0EBB  082C               	movf	??___flmul,w
  9018  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  9019  0EBD  082A               	movf	___flmul@a+2,w
  9020  0EBE  160A  158A  2180  120A  158A  	fcall	__Umul8_16
  9021  0EC3  0871               	movf	?__Umul8_16+1,w
  9022  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  9023  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  9024  0EC6  00BD               	movwf	___flmul@temp+1
  9025  0EC7  0870               	movf	?__Umul8_16,w
  9026  0EC8  00BC               	movwf	___flmul@temp
  9027  0EC9                     l2807:
  9028  0EC9  083C               	movf	___flmul@temp,w
  9029  0ECA  00AC               	movwf	??___flmul
  9030  0ECB  083D               	movf	___flmul@temp+1,w
  9031  0ECC  00AD               	movwf	??___flmul+1
  9032  0ECD  01AE               	clrf	??___flmul+2
  9033  0ECE  01AF               	clrf	??___flmul+3
  9034  0ECF  3008               	movlw	8
  9035  0ED0                     u3905:
  9036  0ED0  1003               	clrc
  9037  0ED1  0DAC               	rlf	??___flmul,f
  9038  0ED2  0DAD               	rlf	??___flmul+1,f
  9039  0ED3  0DAE               	rlf	??___flmul+2,f
  9040  0ED4  0DAF               	rlf	??___flmul+3,f
  9041  0ED5                     u3900:
  9042  0ED5  3EFF               	addlw	-1
  9043  0ED6  1D03               	skipz
  9044  0ED7  2ED0               	goto	u3905
  9045  0ED8  082C               	movf	??___flmul,w
  9046  0ED9  07B8               	addwf	___flmul@prod,f
  9047  0EDA  082D               	movf	??___flmul+1,w
  9048  0EDB  1103               	clrz
  9049  0EDC  1803               	skipnc
  9050  0EDD  3E01               	addlw	1
  9051  0EDE  1903               	skipnz
  9052  0EDF  2EE1               	goto	u3911
  9053  0EE0  07B9               	addwf	___flmul@prod+1,f
  9054  0EE1                     u3911:
  9055  0EE1  082E               	movf	??___flmul+2,w
  9056  0EE2  1103               	clrz
  9057  0EE3  1803               	skipnc
  9058  0EE4  3E01               	addlw	1
  9059  0EE5  1903               	skipnz
  9060  0EE6  2EE8               	goto	u3912
  9061  0EE7  07BA               	addwf	___flmul@prod+2,f
  9062  0EE8                     u3912:
  9063  0EE8  082F               	movf	??___flmul+3,w
  9064  0EE9  1103               	clrz
  9065  0EEA  1803               	skipnc
  9066  0EEB  3E01               	addlw	1
  9067  0EEC  1903               	skipnz
  9068  0EED  2EEF               	goto	u3913
  9069  0EEE  07BB               	addwf	___flmul@prod+3,f
  9070  0EEF                     u3913:
  9071  0EEF                     l2809:
  9072  0EEF  0832               	movf	___flmul@grs,w
  9073  0EF0  00AC               	movwf	??___flmul
  9074  0EF1  0833               	movf	___flmul@grs+1,w
  9075  0EF2  00AD               	movwf	??___flmul+1
  9076  0EF3  0834               	movf	___flmul@grs+2,w
  9077  0EF4  00AE               	movwf	??___flmul+2
  9078  0EF5  0835               	movf	___flmul@grs+3,w
  9079  0EF6  00AF               	movwf	??___flmul+3
  9080  0EF7  3018               	movlw	24
  9081  0EF8                     u3925:
  9082  0EF8  1003               	clrc
  9083  0EF9  0CAF               	rrf	??___flmul+3,f
  9084  0EFA  0CAE               	rrf	??___flmul+2,f
  9085  0EFB  0CAD               	rrf	??___flmul+1,f
  9086  0EFC  0CAC               	rrf	??___flmul,f
  9087  0EFD                     u3920:
  9088  0EFD  3EFF               	addlw	-1
  9089  0EFE  1D03               	skipz
  9090  0EFF  2EF8               	goto	u3925
  9091  0F00  082C               	movf	??___flmul,w
  9092  0F01  07B8               	addwf	___flmul@prod,f
  9093  0F02  082D               	movf	??___flmul+1,w
  9094  0F03  1103               	clrz
  9095  0F04  1803               	skipnc
  9096  0F05  3E01               	addlw	1
  9097  0F06  1903               	skipnz
  9098  0F07  2F09               	goto	u3931
  9099  0F08  07B9               	addwf	___flmul@prod+1,f
  9100  0F09                     u3931:
  9101  0F09  082E               	movf	??___flmul+2,w
  9102  0F0A  1103               	clrz
  9103  0F0B  1803               	skipnc
  9104  0F0C  3E01               	addlw	1
  9105  0F0D  1903               	skipnz
  9106  0F0E  2F10               	goto	u3932
  9107  0F0F  07BA               	addwf	___flmul@prod+2,f
  9108  0F10                     u3932:
  9109  0F10  082F               	movf	??___flmul+3,w
  9110  0F11  1103               	clrz
  9111  0F12  1803               	skipnc
  9112  0F13  3E01               	addlw	1
  9113  0F14  1903               	skipnz
  9114  0F15  2F17               	goto	u3933
  9115  0F16  07BB               	addwf	___flmul@prod+3,f
  9116  0F17                     u3933:
  9117  0F17                     l2811:
  9118  0F17  3008               	movlw	8
  9119  0F18  00AC               	movwf	??___flmul
  9120  0F19                     u3945:
  9121  0F19  1003               	clrc
  9122  0F1A  0DB2               	rlf	___flmul@grs,f
  9123  0F1B  0DB3               	rlf	___flmul@grs+1,f
  9124  0F1C  0DB4               	rlf	___flmul@grs+2,f
  9125  0F1D  0DB5               	rlf	___flmul@grs+3,f
  9126  0F1E  0BAC               	decfsz	??___flmul,f
  9127  0F1F  2F19               	goto	u3945
  9128  0F20                     l2813:
  9129  0F20  0837               	movf	___flmul@bexp,w
  9130  0F21  0736               	addwf	___flmul@aexp,w
  9131  0F22  00AC               	movwf	??___flmul
  9132  0F23  01AD               	clrf	??___flmul+1
  9133  0F24  0DAD               	rlf	??___flmul+1,f
  9134  0F25  082C               	movf	??___flmul,w
  9135  0F26  3E82               	addlw	130
  9136  0F27  00BC               	movwf	___flmul@temp
  9137  0F28  082D               	movf	??___flmul+1,w
  9138  0F29  1803               	skipnc
  9139  0F2A  3E01               	addlw	1
  9140  0F2B  3EFF               	addlw	255
  9141  0F2C  00BD               	movwf	___flmul@temp+1
  9142  0F2D  2F4B               	goto	l2825
  9143  0F2E                     l2815:
  9144  0F2E  3001               	movlw	1
  9145  0F2F  00AC               	movwf	??___flmul
  9146  0F30                     u3955:
  9147  0F30  1003               	clrc
  9148  0F31  0DB8               	rlf	___flmul@prod,f
  9149  0F32  0DB9               	rlf	___flmul@prod+1,f
  9150  0F33  0DBA               	rlf	___flmul@prod+2,f
  9151  0F34  0DBB               	rlf	___flmul@prod+3,f
  9152  0F35  0BAC               	decfsz	??___flmul,f
  9153  0F36  2F30               	goto	u3955
  9154  0F37                     l2817:
  9155  0F37  1FB5               	btfss	___flmul@grs+3,7
  9156  0F38  2F3A               	goto	u3961
  9157  0F39  2F3B               	goto	u3960
  9158  0F3A                     u3961:
  9159  0F3A  2F3C               	goto	l2821
  9160  0F3B                     u3960:
  9161  0F3B                     l2819:
  9162  0F3B  1438               	bsf	___flmul@prod,0
  9163  0F3C                     l2821:
  9164  0F3C  3001               	movlw	1
  9165  0F3D  00AC               	movwf	??___flmul
  9166  0F3E                     u3975:
  9167  0F3E  1003               	clrc
  9168  0F3F  0DB2               	rlf	___flmul@grs,f
  9169  0F40  0DB3               	rlf	___flmul@grs+1,f
  9170  0F41  0DB4               	rlf	___flmul@grs+2,f
  9171  0F42  0DB5               	rlf	___flmul@grs+3,f
  9172  0F43  0BAC               	decfsz	??___flmul,f
  9173  0F44  2F3E               	goto	u3975
  9174  0F45                     l2823:
  9175  0F45  30FF               	movlw	255
  9176  0F46  07BC               	addwf	___flmul@temp,f
  9177  0F47  1803               	skipnc
  9178  0F48  0ABD               	incf	___flmul@temp+1,f
  9179  0F49  30FF               	movlw	255
  9180  0F4A  07BD               	addwf	___flmul@temp+1,f
  9181  0F4B                     l2825:
  9182  0F4B  1FBA               	btfss	___flmul@prod+2,7
  9183  0F4C  2F4E               	goto	u3981
  9184  0F4D  2F4F               	goto	u3980
  9185  0F4E                     u3981:
  9186  0F4E  2F2E               	goto	l2815
  9187  0F4F                     u3980:
  9188  0F4F                     l2827:
  9189  0F4F  01B6               	clrf	___flmul@aexp
  9190  0F50                     l2829:
  9191  0F50  1FB5               	btfss	___flmul@grs+3,7
  9192  0F51  2F53               	goto	u3991
  9193  0F52  2F54               	goto	u3990
  9194  0F53                     u3991:
  9195  0F53  2F70               	goto	l2837
  9196  0F54                     u3990:
  9197  0F54                     l2831:
  9198  0F54  30FF               	movlw	255
  9199  0F55  0532               	andwf	___flmul@grs,w
  9200  0F56  00AC               	movwf	??___flmul
  9201  0F57  30FF               	movlw	255
  9202  0F58  0533               	andwf	___flmul@grs+1,w
  9203  0F59  00AD               	movwf	??___flmul+1
  9204  0F5A  30FF               	movlw	255
  9205  0F5B  0534               	andwf	___flmul@grs+2,w
  9206  0F5C  00AE               	movwf	??___flmul+2
  9207  0F5D  307F               	movlw	127
  9208  0F5E  0535               	andwf	___flmul@grs+3,w
  9209  0F5F  00AF               	movwf	??___flmul+3
  9210  0F60  082F               	movf	??___flmul+3,w
  9211  0F61  042E               	iorwf	??___flmul+2,w
  9212  0F62  042D               	iorwf	??___flmul+1,w
  9213  0F63  042C               	iorwf	??___flmul,w
  9214  0F64  1903               	skipnz
  9215  0F65  2F67               	goto	u4001
  9216  0F66  2F68               	goto	u4000
  9217  0F67                     u4001:
  9218  0F67  2F6B               	goto	l839
  9219  0F68                     u4000:
  9220  0F68                     l2833:
  9221  0F68  01B6               	clrf	___flmul@aexp
  9222  0F69  0AB6               	incf	___flmul@aexp,f
  9223  0F6A  2F70               	goto	l2837
  9224  0F6B                     l839:
  9225  0F6B  1C38               	btfss	___flmul@prod,0
  9226  0F6C  2F6E               	goto	u4011
  9227  0F6D  2F6F               	goto	u4010
  9228  0F6E                     u4011:
  9229  0F6E  2F70               	goto	l2837
  9230  0F6F                     u4010:
  9231  0F6F  2F68               	goto	l2833
  9232  0F70                     l2837:
  9233  0F70  0836               	movf	___flmul@aexp,w
  9234  0F71  1903               	btfsc	3,2
  9235  0F72  2F74               	goto	u4021
  9236  0F73  2F75               	goto	u4020
  9237  0F74                     u4021:
  9238  0F74  2FA6               	goto	l2847
  9239  0F75                     u4020:
  9240  0F75                     l2839:
  9241  0F75  3001               	movlw	1
  9242  0F76  07B8               	addwf	___flmul@prod,f
  9243  0F77  3000               	movlw	0
  9244  0F78  1803               	skipnc
  9245  0F79  3001               	movlw	1
  9246  0F7A  07B9               	addwf	___flmul@prod+1,f
  9247  0F7B  3000               	movlw	0
  9248  0F7C  1803               	skipnc
  9249  0F7D  3001               	movlw	1
  9250  0F7E  07BA               	addwf	___flmul@prod+2,f
  9251  0F7F  3000               	movlw	0
  9252  0F80  1803               	skipnc
  9253  0F81  3001               	movlw	1
  9254  0F82  07BB               	addwf	___flmul@prod+3,f
  9255  0F83                     l2841:
  9256  0F83  1C3B               	btfss	___flmul@prod+3,0
  9257  0F84  2F86               	goto	u4031
  9258  0F85  2F87               	goto	u4030
  9259  0F86                     u4031:
  9260  0F86  2FA6               	goto	l2847
  9261  0F87                     u4030:
  9262  0F87                     l2843:
  9263  0F87  0838               	movf	___flmul@prod,w
  9264  0F88  00AC               	movwf	??___flmul
  9265  0F89  0839               	movf	___flmul@prod+1,w
  9266  0F8A  00AD               	movwf	??___flmul+1
  9267  0F8B  083A               	movf	___flmul@prod+2,w
  9268  0F8C  00AE               	movwf	??___flmul+2
  9269  0F8D  083B               	movf	___flmul@prod+3,w
  9270  0F8E  00AF               	movwf	??___flmul+3
  9271  0F8F  3001               	movlw	1
  9272  0F90  00B0               	movwf	??___flmul+4
  9273  0F91                     u4045:
  9274  0F91  0D2F               	rlf	??___flmul+3,w
  9275  0F92  0CAF               	rrf	??___flmul+3,f
  9276  0F93  0CAE               	rrf	??___flmul+2,f
  9277  0F94  0CAD               	rrf	??___flmul+1,f
  9278  0F95  0CAC               	rrf	??___flmul,f
  9279  0F96                     u4040:
  9280  0F96  0BB0               	decfsz	??___flmul+4,f
  9281  0F97  2F91               	goto	u4045
  9282  0F98  082F               	movf	??___flmul+3,w
  9283  0F99  00BB               	movwf	___flmul@prod+3
  9284  0F9A  082E               	movf	??___flmul+2,w
  9285  0F9B  00BA               	movwf	___flmul@prod+2
  9286  0F9C  082D               	movf	??___flmul+1,w
  9287  0F9D  00B9               	movwf	___flmul@prod+1
  9288  0F9E  082C               	movf	??___flmul,w
  9289  0F9F  00B8               	movwf	___flmul@prod
  9290  0FA0                     l2845:
  9291  0FA0  3001               	movlw	1
  9292  0FA1  07BC               	addwf	___flmul@temp,f
  9293  0FA2  1803               	skipnc
  9294  0FA3  0ABD               	incf	___flmul@temp+1,f
  9295  0FA4  3000               	movlw	0
  9296  0FA5  07BD               	addwf	___flmul@temp+1,f
  9297  0FA6                     l2847:
  9298  0FA6  083D               	movf	___flmul@temp+1,w
  9299  0FA7  3A80               	xorlw	128
  9300  0FA8  00FF               	movwf	btemp+1
  9301  0FA9  3080               	movlw	128
  9302  0FAA  027F               	subwf	btemp+1,w
  9303  0FAB  1D03               	skipz
  9304  0FAC  2FAF               	goto	u4055
  9305  0FAD  30FF               	movlw	255
  9306  0FAE  023C               	subwf	___flmul@temp,w
  9307  0FAF                     u4055:
  9308  0FAF  1C03               	skipc
  9309  0FB0  2FB2               	goto	u4051
  9310  0FB1  2FB3               	goto	u4050
  9311  0FB2                     u4051:
  9312  0FB2  2FBE               	goto	l2851
  9313  0FB3                     u4050:
  9314  0FB3                     l2849:
  9315  0FB3  307F               	movlw	127
  9316  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  9317  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  9318  0FB6  00BB               	movwf	___flmul@prod+3
  9319  0FB7  3080               	movlw	128
  9320  0FB8  00BA               	movwf	___flmul@prod+2
  9321  0FB9  3000               	movlw	0
  9322  0FBA  00B9               	movwf	___flmul@prod+1
  9323  0FBB  3000               	movlw	0
  9324  0FBC  00B8               	movwf	___flmul@prod
  9325  0FBD  2FF3               	goto	l845
  9326  0FBE                     l2851:
  9327  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  9328  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  9329  0FC0  083D               	movf	___flmul@temp+1,w
  9330  0FC1  3A80               	xorlw	128
  9331  0FC2  00FF               	movwf	btemp+1
  9332  0FC3  3080               	movlw	128
  9333  0FC4  027F               	subwf	btemp+1,w
  9334  0FC5  1D03               	skipz
  9335  0FC6  2FC9               	goto	u4065
  9336  0FC7  3001               	movlw	1
  9337  0FC8  023C               	subwf	___flmul@temp,w
  9338  0FC9                     u4065:
  9339  0FC9  1803               	skipnc
  9340  0FCA  2FCC               	goto	u4061
  9341  0FCB  2FCD               	goto	u4060
  9342  0FCC                     u4061:
  9343  0FCC  2FD9               	goto	l2857
  9344  0FCD                     u4060:
  9345  0FCD                     l2853:
  9346  0FCD  3000               	movlw	0
  9347  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  9348  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  9349  0FD0  00BB               	movwf	___flmul@prod+3
  9350  0FD1  3000               	movlw	0
  9351  0FD2  00BA               	movwf	___flmul@prod+2
  9352  0FD3  3000               	movlw	0
  9353  0FD4  00B9               	movwf	___flmul@prod+1
  9354  0FD5  3000               	movlw	0
  9355  0FD6  00B8               	movwf	___flmul@prod
  9356  0FD7                     l2855:
  9357  0FD7  01B1               	clrf	___flmul@sign
  9358  0FD8  2FF3               	goto	l845
  9359  0FD9                     l2857:
  9360  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  9361  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  9362  0FDB  083C               	movf	___flmul@temp,w
  9363  0FDC  00AC               	movwf	??___flmul
  9364  0FDD  082C               	movf	??___flmul,w
  9365  0FDE  00B7               	movwf	___flmul@bexp
  9366  0FDF  30FF               	movlw	255
  9367  0FE0  05B8               	andwf	___flmul@prod,f
  9368  0FE1  30FF               	movlw	255
  9369  0FE2  05B9               	andwf	___flmul@prod+1,f
  9370  0FE3  307F               	movlw	127
  9371  0FE4  05BA               	andwf	___flmul@prod+2,f
  9372  0FE5  3000               	movlw	0
  9373  0FE6  05BB               	andwf	___flmul@prod+3,f
  9374  0FE7                     l2859:
  9375  0FE7  1C37               	btfss	___flmul@bexp,0
  9376  0FE8  2FEA               	goto	u4071
  9377  0FE9  2FEB               	goto	u4070
  9378  0FEA                     u4071:
  9379  0FEA  2FEC               	goto	l2863
  9380  0FEB                     u4070:
  9381  0FEB                     l2861:
  9382  0FEB  17BA               	bsf	___flmul@prod+2,7
  9383  0FEC                     l2863:
  9384  0FEC  0837               	movf	___flmul@bexp,w
  9385  0FED  00AC               	movwf	??___flmul
  9386  0FEE  1003               	clrc
  9387  0FEF  0C2C               	rrf	??___flmul,w
  9388  0FF0  00AD               	movwf	??___flmul+1
  9389  0FF1  082D               	movf	??___flmul+1,w
  9390  0FF2  00BB               	movwf	___flmul@prod+3
  9391  0FF3                     l845:
  9392  0FF3  0831               	movf	___flmul@sign,w
  9393  0FF4  00AC               	movwf	??___flmul
  9394  0FF5  082C               	movf	??___flmul,w
  9395  0FF6  04BB               	iorwf	___flmul@prod+3,f
  9396  0FF7                     l2865:
  9397  0FF7  083B               	movf	___flmul@prod+3,w
  9398  0FF8  00A7               	movwf	?___flmul+3
  9399  0FF9  083A               	movf	___flmul@prod+2,w
  9400  0FFA  00A6               	movwf	?___flmul+2
  9401  0FFB  0839               	movf	___flmul@prod+1,w
  9402  0FFC  00A5               	movwf	?___flmul+1
  9403  0FFD  0838               	movf	___flmul@prod,w
  9404  0FFE  00A4               	movwf	?___flmul
  9405  0FFF                     l833:
  9406  0FFF  0008               	return
  9407  1000                     __end_of___flmul:
  9408                           
  9409                           	psect	text30
  9410  1980                     __ptext30:	
  9411 ;; *************** function __Umul8_16 *****************
  9412 ;; Defined at:
  9413 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;  multiplier      1    wreg     unsigned char 
  9416 ;;  multiplicand    1    0[COMMON] unsigned char 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  multiplier      1    8[COMMON] unsigned char 
  9419 ;;  word_mpld       2    6[COMMON] unsigned int 
  9420 ;;  product         2    4[COMMON] unsigned int 
  9421 ;; Return value:  Size  Location     Type
  9422 ;;                  2    0[COMMON] unsigned int 
  9423 ;; Registers used:
  9424 ;;		wreg, status,2, status,0
  9425 ;; Tracked objects:
  9426 ;;		On entry : 0/0
  9427 ;;		On exit  : 0/0
  9428 ;;		Unchanged: 0/0
  9429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9430 ;;      Params:         2       0       0       0       0
  9431 ;;      Locals:         5       0       0       0       0
  9432 ;;      Temps:          2       0       0       0       0
  9433 ;;      Totals:         9       0       0       0       0
  9434 ;;Total ram usage:        9 bytes
  9435 ;; Hardware stack levels used:    1
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		___flmul
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           
  9444                           ;psect for function __Umul8_16
  9445  1980                     __Umul8_16:
  9446                           
  9447                           ;incstack = 0
  9448                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9449                           ;__Umul8_16@multiplier stored from wreg
  9450  1980  00F8               	movwf	__Umul8_16@multiplier
  9451  1981                     l2389:
  9452  1981  01F4               	clrf	__Umul8_16@product
  9453  1982  01F5               	clrf	__Umul8_16@product+1
  9454  1983                     l2391:
  9455  1983  0870               	movf	__Umul8_16@multiplicand,w
  9456  1984  00F2               	movwf	??__Umul8_16
  9457  1985  01F3               	clrf	??__Umul8_16+1
  9458  1986  0872               	movf	??__Umul8_16,w
  9459  1987  00F6               	movwf	__Umul8_16@word_mpld
  9460  1988  0873               	movf	??__Umul8_16+1,w
  9461  1989  00F7               	movwf	__Umul8_16@word_mpld+1
  9462  198A                     l2393:
  9463  198A  1C78               	btfss	__Umul8_16@multiplier,0
  9464  198B  298D               	goto	u2901
  9465  198C  298E               	goto	u2900
  9466  198D                     u2901:
  9467  198D  2994               	goto	l852
  9468  198E                     u2900:
  9469  198E                     l2395:
  9470  198E  0876               	movf	__Umul8_16@word_mpld,w
  9471  198F  07F4               	addwf	__Umul8_16@product,f
  9472  1990  1803               	skipnc
  9473  1991  0AF5               	incf	__Umul8_16@product+1,f
  9474  1992  0877               	movf	__Umul8_16@word_mpld+1,w
  9475  1993  07F5               	addwf	__Umul8_16@product+1,f
  9476  1994                     l852:
  9477  1994  3001               	movlw	1
  9478  1995                     u2915:
  9479  1995  1003               	clrc
  9480  1996  0DF6               	rlf	__Umul8_16@word_mpld,f
  9481  1997  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9482  1998  3EFF               	addlw	-1
  9483  1999  1D03               	skipz
  9484  199A  2995               	goto	u2915
  9485  199B  1003               	clrc
  9486  199C  0CF8               	rrf	__Umul8_16@multiplier,f
  9487  199D                     l2397:
  9488  199D  0878               	movf	__Umul8_16@multiplier,w
  9489  199E  1D03               	btfss	3,2
  9490  199F  29A1               	goto	u2921
  9491  19A0  29A2               	goto	u2920
  9492  19A1                     u2921:
  9493  19A1  298A               	goto	l2393
  9494  19A2                     u2920:
  9495  19A2                     l2399:
  9496  19A2  0875               	movf	__Umul8_16@product+1,w
  9497  19A3  00F1               	movwf	?__Umul8_16+1
  9498  19A4  0874               	movf	__Umul8_16@product,w
  9499  19A5  00F0               	movwf	?__Umul8_16
  9500  19A6                     l854:
  9501  19A6  0008               	return
  9502  19A7                     __end_of__Umul8_16:
  9503                           
  9504                           	psect	text31
  9505  1A22                     __ptext31:	
  9506 ;; *************** function _Lcd_Write_String *****************
  9507 ;; Defined at:
  9508 ;;		line 67 in file "LCD.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;  a               2    3[COMMON] PTR unsigned char 
  9511 ;;		 -> STR_7(4), s(20), k(20), l(20), 
  9512 ;;		 -> STR_1(17), 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;  i               2    8[COMMON] int 
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  1    wreg      void 
  9517 ;; Registers used:
  9518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9524 ;;      Params:         2       0       0       0       0
  9525 ;;      Locals:         2       0       0       0       0
  9526 ;;      Temps:          3       0       0       0       0
  9527 ;;      Totals:         7       0       0       0       0
  9528 ;;Total ram usage:        7 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; Hardware stack levels required when called:    2
  9531 ;; This function calls:
  9532 ;;		_Lcd_Write_Char
  9533 ;; This function is called by:
  9534 ;;		_main
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           
  9539                           ;psect for function _Lcd_Write_String
  9540  1A22                     _Lcd_Write_String:
  9541  1A22                     l3323:	
  9542                           ;incstack = 0
  9543                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9544                           
  9545                           
  9546                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  9547  1A22  01F8               	clrf	Lcd_Write_String@i
  9548  1A23  01F9               	clrf	Lcd_Write_String@i+1
  9549  1A24  2A47               	goto	l3329
  9550  1A25                     l3325:
  9551                           
  9552                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  9553  1A25  0878               	movf	Lcd_Write_String@i,w
  9554  1A26  0773               	addwf	Lcd_Write_String@a,w
  9555  1A27  00F6               	movwf	??_Lcd_Write_String+1
  9556  1A28  0874               	movf	Lcd_Write_String@a+1,w
  9557  1A29  00F5               	movwf	??_Lcd_Write_String
  9558  1A2A  1803               	skipnc
  9559  1A2B  0AF5               	incf	??_Lcd_Write_String,f
  9560  1A2C  1FF8               	btfss	Lcd_Write_String@i,7
  9561  1A2D  2A2F               	goto	u5170
  9562  1A2E  03F5               	decf	??_Lcd_Write_String,f
  9563  1A2F                     u5170:
  9564  1A2F  0875               	movf	??_Lcd_Write_String,w
  9565  1A30  00F7               	movwf	??_Lcd_Write_String+2
  9566  1A31  0877               	movf	??_Lcd_Write_String+2,w
  9567  1A32  1283               	bcf	3,5	;RP0=0, select bank0
  9568  1A33  1303               	bcf	3,6	;RP1=0, select bank0
  9569  1A34  00FF               	movwf	btemp+1
  9570  1A35  0876               	movf	??_Lcd_Write_String+1,w
  9571  1A36  0084               	movwf	4
  9572  1A37  120A  118A  2003  160A  158A  	fcall	stringtab
  9573  1A3C  160A  158A  20F8  160A  158A  	fcall	_Lcd_Write_Char
  9574  1A41                     l3327:
  9575  1A41  3001               	movlw	1
  9576  1A42  07F8               	addwf	Lcd_Write_String@i,f
  9577  1A43  1803               	skipnc
  9578  1A44  0AF9               	incf	Lcd_Write_String@i+1,f
  9579  1A45  3000               	movlw	0
  9580  1A46  07F9               	addwf	Lcd_Write_String@i+1,f
  9581  1A47                     l3329:
  9582  1A47  0878               	movf	Lcd_Write_String@i,w
  9583  1A48  0773               	addwf	Lcd_Write_String@a,w
  9584  1A49  00F6               	movwf	??_Lcd_Write_String+1
  9585  1A4A  0874               	movf	Lcd_Write_String@a+1,w
  9586  1A4B  00F5               	movwf	??_Lcd_Write_String
  9587  1A4C  1803               	skipnc
  9588  1A4D  0AF5               	incf	??_Lcd_Write_String,f
  9589  1A4E  1FF8               	btfss	Lcd_Write_String@i,7
  9590  1A4F  2A51               	goto	u5180
  9591  1A50  03F5               	decf	??_Lcd_Write_String,f
  9592  1A51                     u5180:
  9593  1A51  0875               	movf	??_Lcd_Write_String,w
  9594  1A52  00F7               	movwf	??_Lcd_Write_String+2
  9595  1A53  0877               	movf	??_Lcd_Write_String+2,w
  9596  1A54  1283               	bcf	3,5	;RP0=0, select bank0
  9597  1A55  1303               	bcf	3,6	;RP1=0, select bank0
  9598  1A56  00FF               	movwf	btemp+1
  9599  1A57  0876               	movf	??_Lcd_Write_String+1,w
  9600  1A58  0084               	movwf	4
  9601  1A59  120A  118A  2003  160A  158A  	fcall	stringtab
  9602  1A5E  3A00               	xorlw	0
  9603  1A5F  1D03               	skipz
  9604  1A60  2A62               	goto	u5191
  9605  1A61  2A63               	goto	u5190
  9606  1A62                     u5191:
  9607  1A62  2A25               	goto	l3325
  9608  1A63                     u5190:
  9609  1A63                     l131:
  9610  1A63  0008               	return
  9611  1A64                     __end_of_Lcd_Write_String:
  9612                           
  9613                           	psect	text32
  9614  18F8                     __ptext32:	
  9615 ;; *************** function _Lcd_Write_Char *****************
  9616 ;; Defined at:
  9617 ;;		line 58 in file "LCD.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  a               1    wreg     unsigned char 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;  a               1    2[COMMON] unsigned char 
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  1    wreg      void 
  9624 ;; Registers used:
  9625 ;;		wreg, status,2, status,0, pclath, cstack
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9631 ;;      Params:         0       0       0       0       0
  9632 ;;      Locals:         1       0       0       0       0
  9633 ;;      Temps:          1       0       0       0       0
  9634 ;;      Totals:         2       0       0       0       0
  9635 ;;Total ram usage:        2 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:    1
  9638 ;; This function calls:
  9639 ;;		_Lcd_Port
  9640 ;; This function is called by:
  9641 ;;		_Lcd_Write_String
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           
  9646                           ;psect for function _Lcd_Write_Char
  9647  18F8                     _Lcd_Write_Char:
  9648                           
  9649                           ;incstack = 0
  9650                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9651                           ;Lcd_Write_Char@a stored from wreg
  9652  18F8  00F2               	movwf	Lcd_Write_Char@a
  9653  18F9                     l2879:
  9654                           
  9655                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  9656  18F9  1283               	bcf	3,5	;RP0=0, select bank0
  9657  18FA  1303               	bcf	3,6	;RP1=0, select bank0
  9658  18FB  1409               	bsf	9,0	;volatile
  9659  18FC                     l2881:
  9660                           
  9661                           ;LCD.c: 60:     Lcd_Port(a);
  9662  18FC  0872               	movf	Lcd_Write_Char@a,w
  9663  18FD  160A  158A  205B  160A  158A  	fcall	_Lcd_Port
  9664  1902                     l2883:
  9665                           
  9666                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
  9667  1902  1283               	bcf	3,5	;RP0=0, select bank0
  9668  1903  1303               	bcf	3,6	;RP1=0, select bank0
  9669  1904  1489               	bsf	9,1	;volatile
  9670  1905                     l2885:
  9671                           
  9672                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9673  1905  301A               	movlw	26
  9674  1906  00F1               	movwf	??_Lcd_Write_Char
  9675  1907                     u5897:
  9676  1907  0BF1               	decfsz	??_Lcd_Write_Char,f
  9677  1908  2907               	goto	u5897
  9678  1909  0000               	nop
  9679  190A                     l2887:
  9680                           
  9681                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
  9682  190A  1283               	bcf	3,5	;RP0=0, select bank0
  9683  190B  1303               	bcf	3,6	;RP1=0, select bank0
  9684  190C  1089               	bcf	9,1	;volatile
  9685  190D                     l2889:
  9686                           
  9687                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9688  190D  301A               	movlw	26
  9689  190E  00F1               	movwf	??_Lcd_Write_Char
  9690  190F                     u5907:
  9691  190F  0BF1               	decfsz	??_Lcd_Write_Char,f
  9692  1910  290F               	goto	u5907
  9693  1911  0000               	nop
  9694  1912                     l125:
  9695  1912  0008               	return
  9696  1913                     __end_of_Lcd_Write_Char:
  9697                           
  9698                           	psect	text33
  9699  1913                     __ptext33:	
  9700 ;; *************** function _Lcd_Set_Cursor *****************
  9701 ;; Defined at:
  9702 ;;		line 33 in file "LCD.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;  a               1    wreg     unsigned char 
  9705 ;;  b               1    4[COMMON] unsigned char 
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;  a               1    6[COMMON] unsigned char 
  9708 ;;  temp            1    7[COMMON] unsigned char 
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, status,2, status,0, pclath, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9718 ;;      Params:         1       0       0       0       0
  9719 ;;      Locals:         2       0       0       0       0
  9720 ;;      Temps:          1       0       0       0       0
  9721 ;;      Totals:         4       0       0       0       0
  9722 ;;Total ram usage:        4 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:    2
  9725 ;; This function calls:
  9726 ;;		_Lcd_Cmd
  9727 ;; This function is called by:
  9728 ;;		_main
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           
  9733                           ;psect for function _Lcd_Set_Cursor
  9734  1913                     _Lcd_Set_Cursor:
  9735                           
  9736                           ;incstack = 0
  9737                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9738                           ;Lcd_Set_Cursor@a stored from wreg
  9739  1913  00F6               	movwf	Lcd_Set_Cursor@a
  9740  1914                     l3311:
  9741                           
  9742                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
  9743  1914  0376               	decf	Lcd_Set_Cursor@a,w
  9744  1915  1D03               	btfss	3,2
  9745  1916  2918               	goto	u5151
  9746  1917  2919               	goto	u5150
  9747  1918                     u5151:
  9748  1918  2925               	goto	l3317
  9749  1919                     u5150:
  9750  1919                     l3313:
  9751                           
  9752                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  9753  1919  0874               	movf	Lcd_Set_Cursor@b,w
  9754  191A  3E7F               	addlw	127
  9755  191B  00F5               	movwf	??_Lcd_Set_Cursor
  9756  191C  0875               	movf	??_Lcd_Set_Cursor,w
  9757  191D  00F7               	movwf	Lcd_Set_Cursor@temp
  9758  191E                     l3315:
  9759                           
  9760                           ;LCD.c: 37:         Lcd_Cmd(temp);
  9761  191E  0877               	movf	Lcd_Set_Cursor@temp,w
  9762  191F  160A  158A  20DE  160A  158A  	fcall	_Lcd_Cmd
  9763                           
  9764                           ;LCD.c: 38:     } else if (a == 2) {
  9765  1924  2936               	goto	l119
  9766  1925                     l3317:
  9767  1925  3002               	movlw	2
  9768  1926  0676               	xorwf	Lcd_Set_Cursor@a,w
  9769  1927  1D03               	btfss	3,2
  9770  1928  292A               	goto	u5161
  9771  1929  292B               	goto	u5160
  9772  192A                     u5161:
  9773  192A  2936               	goto	l119
  9774  192B                     u5160:
  9775  192B                     l3319:
  9776                           
  9777                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  9778  192B  0874               	movf	Lcd_Set_Cursor@b,w
  9779  192C  3EBF               	addlw	191
  9780  192D  00F5               	movwf	??_Lcd_Set_Cursor
  9781  192E  0875               	movf	??_Lcd_Set_Cursor,w
  9782  192F  00F7               	movwf	Lcd_Set_Cursor@temp
  9783  1930                     l3321:
  9784                           
  9785                           ;LCD.c: 40:         Lcd_Cmd(temp);
  9786  1930  0877               	movf	Lcd_Set_Cursor@temp,w
  9787  1931  160A  158A  20DE  160A  158A  	fcall	_Lcd_Cmd
  9788  1936                     l119:
  9789  1936  0008               	return
  9790  1937                     __end_of_Lcd_Set_Cursor:
  9791                           
  9792                           	psect	text34
  9793  19E1                     __ptext34:	
  9794 ;; *************** function _Lcd_Init *****************
  9795 ;; Defined at:
  9796 ;;		line 44 in file "LCD.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;		None
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;		None
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  1    wreg      void 
  9803 ;; Registers used:
  9804 ;;		wreg, status,2, status,0, pclath, cstack
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9810 ;;      Params:         0       0       0       0       0
  9811 ;;      Locals:         0       0       0       0       0
  9812 ;;      Temps:          2       0       0       0       0
  9813 ;;      Totals:         2       0       0       0       0
  9814 ;;Total ram usage:        2 bytes
  9815 ;; Hardware stack levels used:    1
  9816 ;; Hardware stack levels required when called:    2
  9817 ;; This function calls:
  9818 ;;		_Lcd_Cmd
  9819 ;;		_Lcd_Port
  9820 ;; This function is called by:
  9821 ;;		_main
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           
  9826                           ;psect for function _Lcd_Init
  9827  19E1                     _Lcd_Init:
  9828  19E1                     l3299:	
  9829                           ;incstack = 0
  9830                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9831                           
  9832                           
  9833                           ;LCD.c: 45:     Lcd_Port(0x00);
  9834  19E1  3000               	movlw	0
  9835  19E2  160A  158A  205B  160A  158A  	fcall	_Lcd_Port
  9836  19E7                     l3301:
  9837                           
  9838                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9839  19E7  3034               	movlw	52
  9840  19E8  00F5               	movwf	??_Lcd_Init+1
  9841  19E9  30F1               	movlw	241
  9842  19EA  00F4               	movwf	??_Lcd_Init
  9843  19EB                     u5917:
  9844  19EB  0BF4               	decfsz	??_Lcd_Init,f
  9845  19EC  29EB               	goto	u5917
  9846  19ED  0BF5               	decfsz	??_Lcd_Init+1,f
  9847  19EE  29EB               	goto	u5917
  9848  19EF  29F0               	nop2
  9849  19F0                     l3303:
  9850                           
  9851                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
  9852  19F0  303F               	movlw	63
  9853  19F1  160A  158A  20DE  160A  158A  	fcall	_Lcd_Cmd
  9854                           
  9855                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9856  19F6  301A               	movlw	26
  9857  19F7  00F5               	movwf	??_Lcd_Init+1
  9858  19F8  30F8               	movlw	248
  9859  19F9  00F4               	movwf	??_Lcd_Init
  9860  19FA                     u5927:
  9861  19FA  0BF4               	decfsz	??_Lcd_Init,f
  9862  19FB  29FA               	goto	u5927
  9863  19FC  0BF5               	decfsz	??_Lcd_Init+1,f
  9864  19FD  29FA               	goto	u5927
  9865  19FE  0000               	nop
  9866  19FF                     l3305:
  9867                           
  9868                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  9869  19FF  303F               	movlw	63
  9870  1A00  160A  158A  20DE  160A  158A  	fcall	_Lcd_Cmd
  9871  1A05                     l3307:
  9872                           
  9873                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9874  1A05  3085               	movlw	133
  9875  1A06  00F4               	movwf	??_Lcd_Init
  9876  1A07                     u5937:
  9877  1A07  0BF4               	decfsz	??_Lcd_Init,f
  9878  1A08  2A07               	goto	u5937
  9879                           
  9880                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  9881  1A09  303F               	movlw	63
  9882  1A0A  160A  158A  20DE  160A  158A  	fcall	_Lcd_Cmd
  9883                           
  9884                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  9885  1A0F  3038               	movlw	56
  9886  1A10  160A  158A  20DE  160A  158A  	fcall	_Lcd_Cmd
  9887                           
  9888                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  9889  1A15  300C               	movlw	12
  9890  1A16  160A  158A  20DE  160A  158A  	fcall	_Lcd_Cmd
  9891                           
  9892                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  9893  1A1B  3006               	movlw	6
  9894  1A1C  160A  158A  20DE  160A  158A  	fcall	_Lcd_Cmd
  9895  1A21                     l122:
  9896  1A21  0008               	return
  9897  1A22                     __end_of_Lcd_Init:
  9898                           
  9899                           	psect	text35
  9900  187F                     __ptext35:	
  9901 ;; *************** function _Lcd_Clear *****************
  9902 ;; Defined at:
  9903 ;;		line 28 in file "LCD.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;		None
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;		None
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg, status,2, status,0, pclath, cstack
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9917 ;;      Params:         0       0       0       0       0
  9918 ;;      Locals:         0       0       0       0       0
  9919 ;;      Temps:          0       0       0       0       0
  9920 ;;      Totals:         0       0       0       0       0
  9921 ;;Total ram usage:        0 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:    2
  9924 ;; This function calls:
  9925 ;;		_Lcd_Cmd
  9926 ;; This function is called by:
  9927 ;;		_main
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           
  9932                           ;psect for function _Lcd_Clear
  9933  187F                     _Lcd_Clear:
  9934  187F                     l3309:	
  9935                           ;incstack = 0
  9936                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9937                           
  9938                           
  9939                           ;LCD.c: 29:     Lcd_Cmd(0);
  9940  187F  3000               	movlw	0
  9941  1880  160A  158A  20DE  160A  158A  	fcall	_Lcd_Cmd
  9942                           
  9943                           ;LCD.c: 30:     Lcd_Cmd(1);
  9944  1885  3001               	movlw	1
  9945  1886  160A  158A  20DE  160A  158A  	fcall	_Lcd_Cmd
  9946  188B                     l113:
  9947  188B  0008               	return
  9948  188C                     __end_of_Lcd_Clear:
  9949                           
  9950                           	psect	text36
  9951  18DE                     __ptext36:	
  9952 ;; *************** function _Lcd_Cmd *****************
  9953 ;; Defined at:
  9954 ;;		line 20 in file "LCD.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  a               1    wreg     unsigned char 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  a               1    3[COMMON] unsigned char 
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      void 
  9961 ;; Registers used:
  9962 ;;		wreg, status,2, status,0, pclath, cstack
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9968 ;;      Params:         0       0       0       0       0
  9969 ;;      Locals:         1       0       0       0       0
  9970 ;;      Temps:          2       0       0       0       0
  9971 ;;      Totals:         3       0       0       0       0
  9972 ;;Total ram usage:        3 bytes
  9973 ;; Hardware stack levels used:    1
  9974 ;; Hardware stack levels required when called:    1
  9975 ;; This function calls:
  9976 ;;		_Lcd_Port
  9977 ;; This function is called by:
  9978 ;;		_Lcd_Clear
  9979 ;;		_Lcd_Set_Cursor
  9980 ;;		_Lcd_Init
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984                           
  9985                           ;psect for function _Lcd_Cmd
  9986  18DE                     _Lcd_Cmd:
  9987                           
  9988                           ;incstack = 0
  9989                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9990                           ;Lcd_Cmd@a stored from wreg
  9991  18DE  00F3               	movwf	Lcd_Cmd@a
  9992  18DF                     l2869:
  9993                           
  9994                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
  9995  18DF  1283               	bcf	3,5	;RP0=0, select bank0
  9996  18E0  1303               	bcf	3,6	;RP1=0, select bank0
  9997  18E1  1009               	bcf	9,0	;volatile
  9998  18E2                     l2871:
  9999                           
 10000                           ;LCD.c: 22:     Lcd_Port(a);
 10001  18E2  0873               	movf	Lcd_Cmd@a,w
 10002  18E3  160A  158A  205B  160A  158A  	fcall	_Lcd_Port
 10003  18E8                     l2873:
 10004                           
 10005                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
 10006  18E8  1283               	bcf	3,5	;RP0=0, select bank0
 10007  18E9  1303               	bcf	3,6	;RP1=0, select bank0
 10008  18EA  1489               	bsf	9,1	;volatile
 10009  18EB                     l2875:
 10010                           
 10011                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10012  18EB  300B               	movlw	11
 10013  18EC  00F2               	movwf	??_Lcd_Cmd+1
 10014  18ED  3062               	movlw	98
 10015  18EE  00F1               	movwf	??_Lcd_Cmd
 10016  18EF                     u5947:
 10017  18EF  0BF1               	decfsz	??_Lcd_Cmd,f
 10018  18F0  28EF               	goto	u5947
 10019  18F1  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10020  18F2  28EF               	goto	u5947
 10021  18F3  0000               	nop
 10022  18F4                     l2877:
 10023                           
 10024                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
 10025  18F4  1283               	bcf	3,5	;RP0=0, select bank0
 10026  18F5  1303               	bcf	3,6	;RP1=0, select bank0
 10027  18F6  1089               	bcf	9,1	;volatile
 10028  18F7                     l110:
 10029  18F7  0008               	return
 10030  18F8                     __end_of_Lcd_Cmd:
 10031                           
 10032                           	psect	text37
 10033  185B                     __ptext37:	
 10034 ;; *************** function _Lcd_Port *****************
 10035 ;; Defined at:
 10036 ;;		line 16 in file "LCD.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;  a               1    wreg     unsigned char 
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;  a               1    0[COMMON] unsigned char 
 10041 ;; Return value:  Size  Location     Type
 10042 ;;                  1    wreg      void 
 10043 ;; Registers used:
 10044 ;;		wreg
 10045 ;; Tracked objects:
 10046 ;;		On entry : 0/0
 10047 ;;		On exit  : 0/0
 10048 ;;		Unchanged: 0/0
 10049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10050 ;;      Params:         0       0       0       0       0
 10051 ;;      Locals:         1       0       0       0       0
 10052 ;;      Temps:          0       0       0       0       0
 10053 ;;      Totals:         1       0       0       0       0
 10054 ;;Total ram usage:        1 bytes
 10055 ;; Hardware stack levels used:    1
 10056 ;; This function calls:
 10057 ;;		Nothing
 10058 ;; This function is called by:
 10059 ;;		_Lcd_Cmd
 10060 ;;		_Lcd_Init
 10061 ;;		_Lcd_Write_Char
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065                           
 10066                           ;psect for function _Lcd_Port
 10067  185B                     _Lcd_Port:
 10068                           
 10069                           ;incstack = 0
 10070                           ; Regs used in _Lcd_Port: [wreg]
 10071                           ;Lcd_Port@a stored from wreg
 10072  185B  00F0               	movwf	Lcd_Port@a
 10073  185C                     l2403:
 10074                           
 10075                           ;LCD.c: 17:     PORTD = a;
 10076  185C  0870               	movf	Lcd_Port@a,w
 10077  185D  1283               	bcf	3,5	;RP0=0, select bank0
 10078  185E  1303               	bcf	3,6	;RP1=0, select bank0
 10079  185F  0088               	movwf	8	;volatile
 10080  1860                     l107:
 10081  1860  0008               	return
 10082  1861                     __end_of_Lcd_Port:
 10083                           
 10084                           	psect	text38
 10085  188C                     __ptext38:	
 10086 ;; *************** function _Config_USARTT *****************
 10087 ;; Defined at:
 10088 ;;		line 11 in file "USART.c"
 10089 ;; Parameters:    Size  Location     Type
 10090 ;;		None
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;		None
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  1    wreg      void 
 10095 ;; Registers used:
 10096 ;;		wreg
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10102 ;;      Params:         0       0       0       0       0
 10103 ;;      Locals:         0       0       0       0       0
 10104 ;;      Temps:          0       0       0       0       0
 10105 ;;      Totals:         0       0       0       0       0
 10106 ;;Total ram usage:        0 bytes
 10107 ;; Hardware stack levels used:    1
 10108 ;; This function calls:
 10109 ;;		Nothing
 10110 ;; This function is called by:
 10111 ;;		_main
 10112 ;; This function uses a non-reentrant model
 10113 ;;
 10114                           
 10115                           
 10116                           ;psect for function _Config_USARTT
 10117  188C                     _Config_USARTT:
 10118  188C                     l3287:	
 10119                           ;incstack = 0
 10120                           ; Regs used in _Config_USARTT: [wreg]
 10121                           
 10122                           
 10123                           ;USART.c: 12:     TXSTAbits.SYNC = 0;
 10124  188C  1683               	bsf	3,5	;RP0=1, select bank1
 10125  188D  1303               	bcf	3,6	;RP1=0, select bank1
 10126  188E  1218               	bcf	24,4	;volatile
 10127                           
 10128                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
 10129  188F  1698               	bsf	24,5	;volatile
 10130                           
 10131                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
 10132  1890  1118               	bcf	24,2	;volatile
 10133                           
 10134                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
 10135  1891  1683               	bsf	3,5	;RP0=1, select bank3
 10136  1892  1703               	bsf	3,6	;RP1=1, select bank3
 10137  1893  1587               	bsf	7,3	;volatile
 10138  1894                     l3289:
 10139                           
 10140                           ;USART.c: 16:     SPBRG = 25;
 10141  1894  3019               	movlw	25
 10142  1895  1683               	bsf	3,5	;RP0=1, select bank1
 10143  1896  1303               	bcf	3,6	;RP1=0, select bank1
 10144  1897  0099               	movwf	25	;volatile
 10145  1898                     l3291:
 10146                           
 10147                           ;USART.c: 17:     RCSTAbits.SPEN = 1;
 10148  1898  1283               	bcf	3,5	;RP0=0, select bank0
 10149  1899  1303               	bcf	3,6	;RP1=0, select bank0
 10150  189A  1798               	bsf	24,7	;volatile
 10151  189B                     l3293:
 10152                           
 10153                           ;USART.c: 18:     INTCONbits.GIE = 1;
 10154  189B  178B               	bsf	11,7	;volatile
 10155  189C                     l150:
 10156  189C  0008               	return
 10157  189D                     __end_of_Config_USARTT:
 10158  007E                     btemp	set	126	;btemp
 10159  007E                     wtemp0	set	126
 10160                           
 10161                           	psect	config
 10162                           
 10163                           ;Config register CONFIG1 @ 0x2007
 10164                           ;	Oscillator Selection bits
 10165                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
 10166                           ;	Watchdog Timer Enable bit
 10167                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10168                           ;	Power-up Timer Enable bit
 10169                           ;	PWRTE = OFF, PWRT disabled
 10170                           ;	RE3/MCLR pin function select bit
 10171                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10172                           ;	Code Protection bit
 10173                           ;	CP = OFF, Program memory code protection is disabled
 10174                           ;	Data Code Protection bit
 10175                           ;	CPD = OFF, Data memory code protection is disabled
 10176                           ;	Brown Out Reset Selection bits
 10177                           ;	BOREN = OFF, BOR disabled
 10178                           ;	Internal External Switchover bit
 10179                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10180                           ;	Fail-Safe Clock Monitor Enabled bit
 10181                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10182                           ;	Low Voltage Programming Enable bit
 10183                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10184                           ;	In-Circuit Debugger Mode bit
 10185                           ;	DEBUG = 0x1, unprogrammed default
 10186  2007                     	org	8199
 10187  2007  20D5               	dw	8405
 10188                           
 10189                           ;Config register CONFIG2 @ 0x2008
 10190                           ;	Brown-out Reset Selection bit
 10191                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10192                           ;	Flash Program Memory Self Write Enable bits
 10193                           ;	WRT = OFF, Write protection off
 10194  2008                     	org	8200
 10195  2008  3FFF               	dw	16383
 10196                           
 10197                           	psect	text1_split_1
 10198  01D8                     u5380:
 10199  01D8                     l3449:
 10200  01D8  1683               	bsf	3,5	;RP0=1, select bank1
 10201  01D9  1303               	bcf	3,6	;RP1=0, select bank1
 10202  01DA  0840               	movf	(sprintf@fval+3)^(0+128),w
 10203  01DB  00F3               	movwf	___fleq@ff1+3
 10204  01DC  083F               	movf	(sprintf@fval+2)^(0+128),w
 10205  01DD  00F2               	movwf	___fleq@ff1+2
 10206  01DE  083E               	movf	(sprintf@fval+1)^(0+128),w
 10207  01DF  00F1               	movwf	___fleq@ff1+1
 10208  01E0  083D               	movf	sprintf@fval^(0+128),w
 10209  01E1  00F0               	movwf	___fleq@ff1
 10210  01E2  3000               	movlw	0
 10211  01E3  00F7               	movwf	___fleq@ff2+3
 10212  01E4  3000               	movlw	0
 10213  01E5  00F6               	movwf	___fleq@ff2+2
 10214  01E6  3000               	movlw	0
 10215  01E7  00F5               	movwf	___fleq@ff2+1
 10216  01E8  3000               	movlw	0
 10217  01E9  00F4               	movwf	___fleq@ff2
 10218  01EA  160A  158A  2264  120A  118A  	fcall	___fleq
 10219  01EF  1803               	btfsc	3,0
 10220  01F0  29F2               	goto	u5391
 10221  01F1  29F3               	goto	u5390
 10222  01F2                     u5391:
 10223  01F2  2A9B               	goto	l3469
 10224  01F3                     u5390:
 10225  01F3                     l3451:
 10226  01F3  1683               	bsf	3,5	;RP0=1, select bank1
 10227  01F4  1303               	bcf	3,6	;RP1=0, select bank1
 10228  01F5  0840               	movf	(sprintf@fval+3)^(0+128),w
 10229  01F6  1283               	bcf	3,5	;RP0=0, select bank0
 10230  01F7  1303               	bcf	3,6	;RP1=0, select bank0
 10231  01F8  00D4               	movwf	___fltol@f1+3
 10232  01F9  1683               	bsf	3,5	;RP0=1, select bank1
 10233  01FA  1303               	bcf	3,6	;RP1=0, select bank1
 10234  01FB  083F               	movf	(sprintf@fval+2)^(0+128),w
 10235  01FC  1283               	bcf	3,5	;RP0=0, select bank0
 10236  01FD  1303               	bcf	3,6	;RP1=0, select bank0
 10237  01FE  00D3               	movwf	___fltol@f1+2
 10238  01FF  1683               	bsf	3,5	;RP0=1, select bank1
 10239  0200  1303               	bcf	3,6	;RP1=0, select bank1
 10240  0201  083E               	movf	(sprintf@fval+1)^(0+128),w
 10241  0202  1283               	bcf	3,5	;RP0=0, select bank0
 10242  0203  1303               	bcf	3,6	;RP1=0, select bank0
 10243  0204  00D2               	movwf	___fltol@f1+1
 10244  0205  1683               	bsf	3,5	;RP0=1, select bank1
 10245  0206  1303               	bcf	3,6	;RP1=0, select bank1
 10246  0207  083D               	movf	sprintf@fval^(0+128),w
 10247  0208  1283               	bcf	3,5	;RP0=0, select bank0
 10248  0209  1303               	bcf	3,6	;RP1=0, select bank0
 10249  020A  00D1               	movwf	___fltol@f1
 10250  020B  120A  158A  2007  120A  118A  	fcall	___fltol
 10251  0210  1283               	bcf	3,5	;RP0=0, select bank0
 10252  0211  1303               	bcf	3,6	;RP1=0, select bank0
 10253  0212  0854               	movf	?___fltol+3,w
 10254  0213  0453               	iorwf	?___fltol+2,w
 10255  0214  0452               	iorwf	?___fltol+1,w
 10256  0215  0451               	iorwf	?___fltol,w
 10257  0216  1D03               	skipz
 10258  0217  2A19               	goto	u5401
 10259  0218  2A1A               	goto	u5400
 10260  0219                     u5401:
 10261  0219  2A9B               	goto	l3469
 10262  021A                     u5400:
 10263  021A                     l3453:
 10264  021A  1683               	bsf	3,5	;RP0=1, select bank1
 10265  021B  1303               	bcf	3,6	;RP1=0, select bank1
 10266  021C  083C               	movf	(sprintf@eexp+1)^(0+128),w
 10267  021D  3A80               	xorlw	128
 10268  021E  00FF               	movwf	btemp+1
 10269  021F  3080               	movlw	128
 10270  0220  027F               	subwf	btemp+1,w
 10271  0221  1D03               	skipz
 10272  0222  2A25               	goto	u5415
 10273  0223  3002               	movlw	2
 10274  0224  023B               	subwf	sprintf@eexp^(0+128),w
 10275  0225                     u5415:
 10276  0225  1C03               	skipc
 10277  0226  2A28               	goto	u5411
 10278  0227  2A29               	goto	u5410
 10279  0228                     u5411:
 10280  0228  2A9B               	goto	l3469
 10281  0229                     u5410:
 10282  0229                     l3455:
 10283                           
 10284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10285  0229  1683               	bsf	3,5	;RP0=1, select bank1
 10286  022A  1303               	bcf	3,6	;RP1=0, select bank1
 10287  022B  0836               	movf	(sprintf@tmpval+3)^(0+128),w
 10288  022C  00F3               	movwf	___flge@ff1+3
 10289  022D  0835               	movf	(sprintf@tmpval+2)^(0+128),w
 10290  022E  00F2               	movwf	___flge@ff1+2
 10291  022F  0834               	movf	(sprintf@tmpval+1)^(0+128),w
 10292  0230  00F1               	movwf	___flge@ff1+1
 10293  0231  0833               	movf	sprintf@tmpval^(0+128),w
 10294  0232  00F0               	movwf	___flge@ff1
 10295  0233  3040               	movlw	64
 10296  0234  00F7               	movwf	___flge@ff2+3
 10297  0235  3089               	movlw	137
 10298  0236  00F6               	movwf	___flge@ff2+2
 10299  0237  3070               	movlw	112
 10300  0238  00F5               	movwf	___flge@ff2+1
 10301  0239  305F               	movlw	95
 10302  023A  00F4               	movwf	___flge@ff2
 10303  023B  160A  118A  2009  120A  118A  	fcall	___flge
 10304  0240  1803               	btfsc	3,0
 10305  0241  2A43               	goto	u5421
 10306  0242  2A44               	goto	u5420
 10307  0243                     u5421:
 10308  0243  2A4D               	goto	l3459
 10309  0244                     u5420:
 10310  0244                     l3457:
 10311                           
 10312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10313  0244  30F7               	movlw	247
 10314  0245  1683               	bsf	3,5	;RP0=1, select bank1
 10315  0246  1303               	bcf	3,6	;RP1=0, select bank1
 10316  0247  07BB               	addwf	sprintf@eexp^(0+128),f
 10317  0248  1803               	skipnc
 10318  0249  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
 10319  024A  30FF               	movlw	255
 10320  024B  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
 10321                           
 10322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10323  024C  2A55               	goto	l3461
 10324  024D                     l3459:
 10325                           
 10326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10327  024D  30F8               	movlw	248
 10328  024E  1683               	bsf	3,5	;RP0=1, select bank1
 10329  024F  1303               	bcf	3,6	;RP1=0, select bank1
 10330  0250  07BB               	addwf	sprintf@eexp^(0+128),f
 10331  0251  1803               	skipnc
 10332  0252  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
 10333  0253  30FF               	movlw	255
 10334  0254  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
 10335  0255                     l3461:
 10336                           
 10337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10338  0255  083B               	movf	sprintf@eexp^(0+128),w
 10339  0256  120A  158A  2140  120A  118A  	fcall	_scale
 10340  025B  1283               	bcf	3,5	;RP0=0, select bank0
 10341  025C  1303               	bcf	3,6	;RP1=0, select bank0
 10342  025D  0841               	movf	?_scale+3,w
 10343  025E  1683               	bsf	3,5	;RP0=1, select bank1
 10344  025F  1303               	bcf	3,6	;RP1=0, select bank1
 10345  0260  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
 10346  0261  1283               	bcf	3,5	;RP0=0, select bank0
 10347  0262  1303               	bcf	3,6	;RP1=0, select bank0
 10348  0263  0840               	movf	?_scale+2,w
 10349  0264  1683               	bsf	3,5	;RP0=1, select bank1
 10350  0265  1303               	bcf	3,6	;RP1=0, select bank1
 10351  0266  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
 10352  0267  1283               	bcf	3,5	;RP0=0, select bank0
 10353  0268  1303               	bcf	3,6	;RP1=0, select bank0
 10354  0269  083F               	movf	?_scale+1,w
 10355  026A  1683               	bsf	3,5	;RP0=1, select bank1
 10356  026B  1303               	bcf	3,6	;RP1=0, select bank1
 10357  026C  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
 10358  026D  1283               	bcf	3,5	;RP0=0, select bank0
 10359  026E  1303               	bcf	3,6	;RP1=0, select bank0
 10360  026F  083E               	movf	?_scale,w
 10361  0270  1683               	bsf	3,5	;RP0=1, select bank1
 10362  0271  1303               	bcf	3,6	;RP1=0, select bank1
 10363  0272  00B3               	movwf	sprintf@tmpval^(0+128)
 10364  0273                     l3463:
 10365  0273  0840               	movf	(sprintf@fval+3)^(0+128),w
 10366  0274  00F3               	movwf	__div_to_l_@f1+3
 10367  0275  083F               	movf	(sprintf@fval+2)^(0+128),w
 10368  0276  00F2               	movwf	__div_to_l_@f1+2
 10369  0277  083E               	movf	(sprintf@fval+1)^(0+128),w
 10370  0278  00F1               	movwf	__div_to_l_@f1+1
 10371  0279  083D               	movf	sprintf@fval^(0+128),w
 10372  027A  00F0               	movwf	__div_to_l_@f1
 10373  027B  0836               	movf	(sprintf@tmpval+3)^(0+128),w
 10374  027C  00F7               	movwf	__div_to_l_@f2+3
 10375  027D  0835               	movf	(sprintf@tmpval+2)^(0+128),w
 10376  027E  00F6               	movwf	__div_to_l_@f2+2
 10377  027F  0834               	movf	(sprintf@tmpval+1)^(0+128),w
 10378  0280  00F5               	movwf	__div_to_l_@f2+1
 10379  0281  0833               	movf	sprintf@tmpval^(0+128),w
 10380  0282  00F4               	movwf	__div_to_l_@f2
 10381  0283  120A  118A  211A  120A  118A  	fcall	__div_to_l_
 10382  0288  0873               	movf	?__div_to_l_+3,w
 10383  0289  1683               	bsf	3,5	;RP0=1, select bank1
 10384  028A  1303               	bcf	3,6	;RP1=0, select bank1
 10385  028B  00BA               	movwf	(sprintf@val+3)^(0+128)
 10386  028C  0872               	movf	?__div_to_l_+2,w
 10387  028D  00B9               	movwf	(sprintf@val+2)^(0+128)
 10388  028E  0871               	movf	?__div_to_l_+1,w
 10389  028F  00B8               	movwf	(sprintf@val+1)^(0+128)
 10390  0290  0870               	movf	?__div_to_l_,w
 10391  0291  00B7               	movwf	sprintf@val^(0+128)
 10392  0292                     l3467:
 10393                           
 10394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10395  0292  3000               	movlw	0
 10396  0293  00C0               	movwf	(sprintf@fval+3)^(0+128)
 10397  0294  3000               	movlw	0
 10398  0295  00BF               	movwf	(sprintf@fval+2)^(0+128)
 10399  0296  3000               	movlw	0
 10400  0297  00BE               	movwf	(sprintf@fval+1)^(0+128)
 10401  0298  3000               	movlw	0
 10402  0299  00BD               	movwf	sprintf@fval^(0+128)
 10403                           
 10404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10405  029A  2B1F               	goto	l3475
 10406  029B                     l3469:
 10407                           
 10408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10409  029B  1683               	bsf	3,5	;RP0=1, select bank1
 10410  029C  1303               	bcf	3,6	;RP1=0, select bank1
 10411  029D  0840               	movf	(sprintf@fval+3)^(0+128),w
 10412  029E  1283               	bcf	3,5	;RP0=0, select bank0
 10413  029F  1303               	bcf	3,6	;RP1=0, select bank0
 10414  02A0  00D4               	movwf	___fltol@f1+3
 10415  02A1  1683               	bsf	3,5	;RP0=1, select bank1
 10416  02A2  1303               	bcf	3,6	;RP1=0, select bank1
 10417  02A3  083F               	movf	(sprintf@fval+2)^(0+128),w
 10418  02A4  1283               	bcf	3,5	;RP0=0, select bank0
 10419  02A5  1303               	bcf	3,6	;RP1=0, select bank0
 10420  02A6  00D3               	movwf	___fltol@f1+2
 10421  02A7  1683               	bsf	3,5	;RP0=1, select bank1
 10422  02A8  1303               	bcf	3,6	;RP1=0, select bank1
 10423  02A9  083E               	movf	(sprintf@fval+1)^(0+128),w
 10424  02AA  1283               	bcf	3,5	;RP0=0, select bank0
 10425  02AB  1303               	bcf	3,6	;RP1=0, select bank0
 10426  02AC  00D2               	movwf	___fltol@f1+1
 10427  02AD  1683               	bsf	3,5	;RP0=1, select bank1
 10428  02AE  1303               	bcf	3,6	;RP1=0, select bank1
 10429  02AF  083D               	movf	sprintf@fval^(0+128),w
 10430  02B0  1283               	bcf	3,5	;RP0=0, select bank0
 10431  02B1  1303               	bcf	3,6	;RP1=0, select bank0
 10432  02B2  00D1               	movwf	___fltol@f1
 10433  02B3  120A  158A  2007  120A  118A  	fcall	___fltol
 10434  02B8  1283               	bcf	3,5	;RP0=0, select bank0
 10435  02B9  1303               	bcf	3,6	;RP1=0, select bank0
 10436  02BA  0854               	movf	?___fltol+3,w
 10437  02BB  1683               	bsf	3,5	;RP0=1, select bank1
 10438  02BC  1303               	bcf	3,6	;RP1=0, select bank1
 10439  02BD  00BA               	movwf	(sprintf@val+3)^(0+128)
 10440  02BE  1283               	bcf	3,5	;RP0=0, select bank0
 10441  02BF  1303               	bcf	3,6	;RP1=0, select bank0
 10442  02C0  0853               	movf	?___fltol+2,w
 10443  02C1  1683               	bsf	3,5	;RP0=1, select bank1
 10444  02C2  1303               	bcf	3,6	;RP1=0, select bank1
 10445  02C3  00B9               	movwf	(sprintf@val+2)^(0+128)
 10446  02C4  1283               	bcf	3,5	;RP0=0, select bank0
 10447  02C5  1303               	bcf	3,6	;RP1=0, select bank0
 10448  02C6  0852               	movf	?___fltol+1,w
 10449  02C7  1683               	bsf	3,5	;RP0=1, select bank1
 10450  02C8  1303               	bcf	3,6	;RP1=0, select bank1
 10451  02C9  00B8               	movwf	(sprintf@val+1)^(0+128)
 10452  02CA  1283               	bcf	3,5	;RP0=0, select bank0
 10453  02CB  1303               	bcf	3,6	;RP1=0, select bank0
 10454  02CC  0851               	movf	?___fltol,w
 10455  02CD  1683               	bsf	3,5	;RP0=1, select bank1
 10456  02CE  1303               	bcf	3,6	;RP1=0, select bank1
 10457  02CF  00B7               	movwf	sprintf@val^(0+128)
 10458  02D0                     l3471:
 10459                           
 10460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10461  02D0  083A               	movf	(sprintf@val+3)^(0+128),w
 10462  02D1  00F3               	movwf	___xxtofl@val+3
 10463  02D2  0839               	movf	(sprintf@val+2)^(0+128),w
 10464  02D3  00F2               	movwf	___xxtofl@val+2
 10465  02D4  0838               	movf	(sprintf@val+1)^(0+128),w
 10466  02D5  00F1               	movwf	___xxtofl@val+1
 10467  02D6  0837               	movf	sprintf@val^(0+128),w
 10468  02D7  00F0               	movwf	___xxtofl@val
 10469  02D8  3000               	movlw	0
 10470  02D9  160A  158A  2553  120A  118A  	fcall	___xxtofl
 10471  02DE  0873               	movf	?___xxtofl+3,w
 10472  02DF  1283               	bcf	3,5	;RP0=0, select bank0
 10473  02E0  1303               	bcf	3,6	;RP1=0, select bank0
 10474  02E1  00E9               	movwf	___flsub@a+3
 10475  02E2  0872               	movf	?___xxtofl+2,w
 10476  02E3  00E8               	movwf	___flsub@a+2
 10477  02E4  0871               	movf	?___xxtofl+1,w
 10478  02E5  00E7               	movwf	___flsub@a+1
 10479  02E6  0870               	movf	?___xxtofl,w
 10480  02E7  00E6               	movwf	___flsub@a
 10481  02E8  1683               	bsf	3,5	;RP0=1, select bank1
 10482  02E9  1303               	bcf	3,6	;RP1=0, select bank1
 10483  02EA  0840               	movf	(sprintf@fval+3)^(0+128),w
 10484  02EB  1283               	bcf	3,5	;RP0=0, select bank0
 10485  02EC  1303               	bcf	3,6	;RP1=0, select bank0
 10486  02ED  00ED               	movwf	___flsub@b+3
 10487  02EE  1683               	bsf	3,5	;RP0=1, select bank1
 10488  02EF  1303               	bcf	3,6	;RP1=0, select bank1
 10489  02F0  083F               	movf	(sprintf@fval+2)^(0+128),w
 10490  02F1  1283               	bcf	3,5	;RP0=0, select bank0
 10491  02F2  1303               	bcf	3,6	;RP1=0, select bank0
 10492  02F3  00EC               	movwf	___flsub@b+2
 10493  02F4  1683               	bsf	3,5	;RP0=1, select bank1
 10494  02F5  1303               	bcf	3,6	;RP1=0, select bank1
 10495  02F6  083E               	movf	(sprintf@fval+1)^(0+128),w
 10496  02F7  1283               	bcf	3,5	;RP0=0, select bank0
 10497  02F8  1303               	bcf	3,6	;RP1=0, select bank0
 10498  02F9  00EB               	movwf	___flsub@b+1
 10499  02FA  1683               	bsf	3,5	;RP0=1, select bank1
 10500  02FB  1303               	bcf	3,6	;RP1=0, select bank1
 10501  02FC  083D               	movf	sprintf@fval^(0+128),w
 10502  02FD  1283               	bcf	3,5	;RP0=0, select bank0
 10503  02FE  1303               	bcf	3,6	;RP1=0, select bank0
 10504  02FF  00EA               	movwf	___flsub@b
 10505  0300  160A  158A  2137  120A  118A  	fcall	___flsub
 10506  0305  1283               	bcf	3,5	;RP0=0, select bank0
 10507  0306  1303               	bcf	3,6	;RP1=0, select bank0
 10508  0307  0869               	movf	?___flsub+3,w
 10509  0308  1683               	bsf	3,5	;RP0=1, select bank1
 10510  0309  1303               	bcf	3,6	;RP1=0, select bank1
 10511  030A  00C0               	movwf	(sprintf@fval+3)^(0+128)
 10512  030B  1283               	bcf	3,5	;RP0=0, select bank0
 10513  030C  1303               	bcf	3,6	;RP1=0, select bank0
 10514  030D  0868               	movf	?___flsub+2,w
 10515  030E  1683               	bsf	3,5	;RP0=1, select bank1
 10516  030F  1303               	bcf	3,6	;RP1=0, select bank1
 10517  0310  00BF               	movwf	(sprintf@fval+2)^(0+128)
 10518  0311  1283               	bcf	3,5	;RP0=0, select bank0
 10519  0312  1303               	bcf	3,6	;RP1=0, select bank0
 10520  0313  0867               	movf	?___flsub+1,w
 10521  0314  1683               	bsf	3,5	;RP0=1, select bank1
 10522  0315  1303               	bcf	3,6	;RP1=0, select bank1
 10523  0316  00BE               	movwf	(sprintf@fval+1)^(0+128)
 10524  0317  1283               	bcf	3,5	;RP0=0, select bank0
 10525  0318  1303               	bcf	3,6	;RP1=0, select bank0
 10526  0319  0866               	movf	?___flsub,w
 10527  031A  1683               	bsf	3,5	;RP0=1, select bank1
 10528  031B  1303               	bcf	3,6	;RP1=0, select bank1
 10529  031C  00BD               	movwf	sprintf@fval^(0+128)
 10530  031D                     l3473:
 10531                           
 10532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10533  031D  01BB               	clrf	sprintf@eexp^(0+128)
 10534  031E  01BC               	clrf	(sprintf@eexp+1)^(0+128)
 10535  031F                     l3475:
 10536                           
 10537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10538  031F  01C4               	clrf	sprintf@c^(0+128)
 10539  0320  0AC4               	incf	sprintf@c^(0+128),f
 10540  0321                     l3481:
 10541                           
 10542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10543  0321  0844               	movf	sprintf@c^(0+128),w
 10544  0322  00A5               	movwf	??_sprintf^(0+128)
 10545  0323  3001               	movlw	1
 10546  0324                     u5435:
 10547  0324  1003               	clrc
 10548  0325  0DA5               	rlf	??_sprintf^(0+128),f
 10549  0326  3EFF               	addlw	-1
 10550  0327  1D03               	skipz
 10551  0328  2B24               	goto	u5435
 10552  0329  1003               	clrc
 10553  032A  0D25               	rlf	??_sprintf^(0+128),w
 10554  032B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10555  032C  0084               	movwf	4
 10556  032D  120A  118A  200D  120A  118A  	fcall	stringdir
 10557  0332  00A6               	movwf	(??_sprintf+1)^(0+128)
 10558  0333  120A  118A  200D  120A  118A  	fcall	stringdir
 10559  0338  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
 10560  0339  120A  118A  200D  120A  118A  	fcall	stringdir
 10561  033E  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
 10562  033F  120A  118A  200D  120A  118A  	fcall	stringdir
 10563  0344  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
 10564  0345  0829               	movf	(??_sprintf+4)^(0+128),w
 10565  0346  023A               	subwf	(sprintf@val+3)^(0+128),w
 10566  0347  1D03               	skipz
 10567  0348  2B53               	goto	u5445
 10568  0349  0828               	movf	(??_sprintf+3)^(0+128),w
 10569  034A  0239               	subwf	(sprintf@val+2)^(0+128),w
 10570  034B  1D03               	skipz
 10571  034C  2B53               	goto	u5445
 10572  034D  0827               	movf	(??_sprintf+2)^(0+128),w
 10573  034E  0238               	subwf	(sprintf@val+1)^(0+128),w
 10574  034F  1D03               	skipz
 10575  0350  2B53               	goto	u5445
 10576  0351  0826               	movf	(??_sprintf+1)^(0+128),w
 10577  0352  0237               	subwf	sprintf@val^(0+128),w
 10578  0353                     u5445:
 10579  0353  1803               	skipnc
 10580  0354  2B56               	goto	u5441
 10581  0355  2B57               	goto	u5440
 10582  0356                     u5441:
 10583  0356  2B58               	goto	l3485
 10584  0357                     u5440:
 10585  0357  2B62               	goto	l3487
 10586  0358                     l3485:
 10587  0358  3001               	movlw	1
 10588  0359  00A5               	movwf	??_sprintf^(0+128)
 10589  035A  0825               	movf	??_sprintf^(0+128),w
 10590  035B  07C4               	addwf	sprintf@c^(0+128),f
 10591  035C  300A               	movlw	10
 10592  035D  0644               	xorwf	sprintf@c^(0+128),w
 10593  035E  1D03               	btfss	3,2
 10594  035F  2B61               	goto	u5451
 10595  0360  2B62               	goto	u5450
 10596  0361                     u5451:
 10597  0361  2B21               	goto	l3481
 10598  0362                     u5450:
 10599  0362                     l3487:
 10600                           
 10601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10602  0362  0844               	movf	sprintf@c^(0+128),w
 10603  0363  0742               	addwf	sprintf@prec^(0+128),w
 10604  0364  00A5               	movwf	??_sprintf^(0+128)
 10605  0365  0843               	movf	(sprintf@prec+1)^(0+128),w
 10606  0366  1803               	skipnc
 10607  0367  0A43               	incf	(sprintf@prec+1)^(0+128),w
 10608  0368  00A6               	movwf	(??_sprintf^(0+128)+1)
 10609  0369  083B               	movf	sprintf@eexp^(0+128),w
 10610  036A  0725               	addwf	??_sprintf^(0+128),w
 10611  036B  00A7               	movwf	(??_sprintf+2)^(0+128)
 10612  036C  083C               	movf	(sprintf@eexp+1)^(0+128),w
 10613  036D  1803               	skipnc
 10614  036E  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
 10615  036F  0726               	addwf	(??_sprintf+1)^(0+128),w
 10616  0370  00A8               	movwf	(??_sprintf+3)^(0+128)
 10617  0371  0827               	movf	(??_sprintf+2)^(0+128),w
 10618  0372  02B1               	subwf	sprintf@width^(0+128),f
 10619  0373  0828               	movf	(??_sprintf+3)^(0+128),w
 10620  0374  1C03               	skipc
 10621  0375  03B2               	decf	(sprintf@width+1)^(0+128),f
 10622  0376  02B2               	subwf	(sprintf@width+1)^(0+128),f
 10623                           
 10624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10625  0377  0842               	movf	sprintf@prec^(0+128),w
 10626  0378  0443               	iorwf	(sprintf@prec+1)^(0+128),w
 10627  0379  1903               	btfsc	3,2
 10628  037A  2B7C               	goto	u5461
 10629  037B  2B7D               	goto	u5460
 10630  037C                     u5461:
 10631  037C  2B83               	goto	l3491
 10632  037D                     u5460:
 10633  037D                     l3489:
 10634                           
 10635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10636  037D  30FF               	movlw	255
 10637  037E  07B1               	addwf	sprintf@width^(0+128),f
 10638  037F  1803               	skipnc
 10639  0380  0AB2               	incf	(sprintf@width+1)^(0+128),f
 10640  0381  30FF               	movlw	255
 10641  0382  07B2               	addwf	(sprintf@width+1)^(0+128),f
 10642  0383                     l3491:
 10643                           
 10644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10645  0383  3003               	movlw	3
 10646  0384  052F               	andwf	sprintf@flag^(0+128),w
 10647  0385  00A5               	movwf	??_sprintf^(0+128)
 10648  0386  3000               	movlw	0
 10649  0387  0530               	andwf	(sprintf@flag+1)^(0+128),w
 10650  0388  00A6               	movwf	(??_sprintf+1)^(0+128)
 10651  0389  0825               	movf	??_sprintf^(0+128),w
 10652  038A  0426               	iorwf	(??_sprintf^(0+128)+1),w
 10653  038B  1903               	btfsc	3,2
 10654  038C  2B8E               	goto	u5471
 10655  038D  2B8F               	goto	u5470
 10656  038E                     u5471:
 10657  038E  2BA4               	goto	l3501
 10658  038F                     u5470:
 10659  038F                     l3493:
 10660                           
 10661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10662  038F  30FF               	movlw	255
 10663  0390  07B1               	addwf	sprintf@width^(0+128),f
 10664  0391  1803               	skipnc
 10665  0392  0AB2               	incf	(sprintf@width+1)^(0+128),f
 10666  0393  30FF               	movlw	255
 10667  0394  07B2               	addwf	(sprintf@width+1)^(0+128),f
 10668  0395  2BA4               	goto	l3501
 10669  0396                     l3495:
 10670                           
 10671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10672  0396  3020               	movlw	32
 10673  0397  1683               	bsf	3,5	;RP0=1, select bank1
 10674  0398  1303               	bcf	3,6	;RP1=0, select bank1
 10675  0399  00A5               	movwf	??_sprintf^(0+128)
 10676  039A  0841               	movf	sprintf@sp^(0+128),w
 10677  039B  0084               	movwf	4
 10678  039C  0825               	movf	??_sprintf^(0+128),w
 10679  039D  1783               	bsf	3,7	;select IRP bank2
 10680  039E  0080               	movwf	0
 10681  039F                     l3497:
 10682  039F  3001               	movlw	1
 10683  03A0  00A5               	movwf	??_sprintf^(0+128)
 10684  03A1  0825               	movf	??_sprintf^(0+128),w
 10685  03A2  07C1               	addwf	sprintf@sp^(0+128),f
 10686  03A3  2B8F               	goto	l3493
 10687  03A4                     l3501:
 10688                           
 10689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10690  03A4  0832               	movf	(sprintf@width+1)^(0+128),w
 10691  03A5  3A80               	xorlw	128
 10692  03A6  00FF               	movwf	btemp+1
 10693  03A7  3080               	movlw	128
 10694  03A8  027F               	subwf	btemp+1,w
 10695  03A9  1D03               	skipz
 10696  03AA  2BAD               	goto	u5485
 10697  03AB  3001               	movlw	1
 10698  03AC  0231               	subwf	sprintf@width^(0+128),w
 10699  03AD                     u5485:
 10700  03AD  1803               	skipnc
 10701  03AE  2BB0               	goto	u5481
 10702  03AF  2BB1               	goto	u5480
 10703  03B0                     u5481:
 10704  03B0  2B96               	goto	l3495
 10705  03B1                     u5480:
 10706  03B1                     l3503:
 10707                           
 10708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10709  03B1  3003               	movlw	3
 10710  03B2  1683               	bsf	3,5	;RP0=1, select bank1
 10711  03B3  1303               	bcf	3,6	;RP1=0, select bank1
 10712  03B4  052F               	andwf	sprintf@flag^(0+128),w
 10713  03B5  00A5               	movwf	??_sprintf^(0+128)
 10714  03B6  3000               	movlw	0
 10715  03B7  0530               	andwf	(sprintf@flag+1)^(0+128),w
 10716  03B8  00A6               	movwf	(??_sprintf+1)^(0+128)
 10717  03B9  0825               	movf	??_sprintf^(0+128),w
 10718  03BA  0426               	iorwf	(??_sprintf^(0+128)+1),w
 10719  03BB  1903               	btfsc	3,2
 10720  03BC  2BBE               	goto	u5491
 10721  03BD  2BBF               	goto	u5490
 10722  03BE                     u5491:
 10723  03BE  2C51               	goto	l369
 10724  03BF                     u5490:
 10725  03BF                     l3505:
 10726                           
 10727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10728  03BF  302D               	movlw	45
 10729  03C0  00A5               	movwf	??_sprintf^(0+128)
 10730  03C1  0841               	movf	sprintf@sp^(0+128),w
 10731  03C2  0084               	movwf	4
 10732  03C3  0825               	movf	??_sprintf^(0+128),w
 10733  03C4  1783               	bsf	3,7	;select IRP bank2
 10734  03C5  0080               	movwf	0
 10735  03C6                     l3507:
 10736  03C6  3001               	movlw	1
 10737  03C7  00A5               	movwf	??_sprintf^(0+128)
 10738  03C8  0825               	movf	??_sprintf^(0+128),w
 10739  03C9  07C1               	addwf	sprintf@sp^(0+128),f
 10740  03CA  2C51               	goto	l369
 10741  03CB                     l3509:
 10742                           
 10743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10744  03CB  0844               	movf	sprintf@c^(0+128),w
 10745  03CC  00A5               	movwf	??_sprintf^(0+128)
 10746  03CD  3001               	movlw	1
 10747  03CE                     u5505:
 10748  03CE  1003               	clrc
 10749  03CF  0DA5               	rlf	??_sprintf^(0+128),f
 10750  03D0  3EFF               	addlw	-1
 10751  03D1  1D03               	skipz
 10752  03D2  2BCE               	goto	u5505
 10753  03D3  1003               	clrc
 10754  03D4  0D25               	rlf	??_sprintf^(0+128),w
 10755  03D5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10756  03D6  0084               	movwf	4
 10757  03D7  120A  118A  200D  120A  118A  	fcall	stringdir
 10758  03DC  00F0               	movwf	___lldiv@divisor
 10759  03DD  120A  118A  200D  120A  118A  	fcall	stringdir
 10760  03E2  00F1               	movwf	___lldiv@divisor+1
 10761  03E3  120A  118A  200D  120A  118A  	fcall	stringdir
 10762  03E8  00F2               	movwf	___lldiv@divisor+2
 10763  03E9  120A  118A  200D  120A  118A  	fcall	stringdir
 10764  03EE  00F3               	movwf	___lldiv@divisor+3
 10765  03EF  083A               	movf	(sprintf@val+3)^(0+128),w
 10766  03F0  00F7               	movwf	___lldiv@dividend+3
 10767  03F1  0839               	movf	(sprintf@val+2)^(0+128),w
 10768  03F2  00F6               	movwf	___lldiv@dividend+2
 10769  03F3  0838               	movf	(sprintf@val+1)^(0+128),w
 10770  03F4  00F5               	movwf	___lldiv@dividend+1
 10771  03F5  0837               	movf	sprintf@val^(0+128),w
 10772  03F6  00F4               	movwf	___lldiv@dividend
 10773  03F7  160A  158A  2419  120A  118A  	fcall	___lldiv
 10774  03FC  0873               	movf	?___lldiv+3,w
 10775  03FD  1683               	bsf	3,5	;RP0=1, select bank1
 10776  03FE  1303               	bcf	3,6	;RP1=0, select bank1
 10777  03FF  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
 10778  0400  0872               	movf	?___lldiv+2,w
 10779  0401  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
 10780  0402  0871               	movf	?___lldiv+1,w
 10781  0403  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
 10782  0404  0870               	movf	?___lldiv,w
 10783  0405  00B3               	movwf	sprintf@tmpval^(0+128)
 10784  0406                     l3511:
 10785                           
 10786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10787  0406  3000               	movlw	0
 10788  0407  1283               	bcf	3,5	;RP0=0, select bank0
 10789  0408  1303               	bcf	3,6	;RP1=0, select bank0
 10790  0409  00A3               	movwf	___llmod@divisor+3
 10791  040A  3000               	movlw	0
 10792  040B  00A2               	movwf	___llmod@divisor+2
 10793  040C  3000               	movlw	0
 10794  040D  00A1               	movwf	___llmod@divisor+1
 10795  040E  300A               	movlw	10
 10796  040F  00A0               	movwf	___llmod@divisor
 10797  0410  1683               	bsf	3,5	;RP0=1, select bank1
 10798  0411  1303               	bcf	3,6	;RP1=0, select bank1
 10799  0412  0836               	movf	(sprintf@tmpval+3)^(0+128),w
 10800  0413  1283               	bcf	3,5	;RP0=0, select bank0
 10801  0414  1303               	bcf	3,6	;RP1=0, select bank0
 10802  0415  00A7               	movwf	___llmod@dividend+3
 10803  0416  1683               	bsf	3,5	;RP0=1, select bank1
 10804  0417  1303               	bcf	3,6	;RP1=0, select bank1
 10805  0418  0835               	movf	(sprintf@tmpval+2)^(0+128),w
 10806  0419  1283               	bcf	3,5	;RP0=0, select bank0
 10807  041A  1303               	bcf	3,6	;RP1=0, select bank0
 10808  041B  00A6               	movwf	___llmod@dividend+2
 10809  041C  1683               	bsf	3,5	;RP0=1, select bank1
 10810  041D  1303               	bcf	3,6	;RP1=0, select bank1
 10811  041E  0834               	movf	(sprintf@tmpval+1)^(0+128),w
 10812  041F  1283               	bcf	3,5	;RP0=0, select bank0
 10813  0420  1303               	bcf	3,6	;RP1=0, select bank0
 10814  0421  00A5               	movwf	___llmod@dividend+1
 10815  0422  1683               	bsf	3,5	;RP0=1, select bank1
 10816  0423  1303               	bcf	3,6	;RP1=0, select bank1
 10817  0424  0833               	movf	sprintf@tmpval^(0+128),w
 10818  0425  1283               	bcf	3,5	;RP0=0, select bank0
 10819  0426  1303               	bcf	3,6	;RP1=0, select bank0
 10820  0427  00A4               	movwf	___llmod@dividend
 10821  0428  160A  158A  22B2  120A  118A  	fcall	___llmod
 10822  042D  1283               	bcf	3,5	;RP0=0, select bank0
 10823  042E  1303               	bcf	3,6	;RP1=0, select bank0
 10824  042F  0823               	movf	?___llmod+3,w
 10825  0430  1683               	bsf	3,5	;RP0=1, select bank1
 10826  0431  1303               	bcf	3,6	;RP1=0, select bank1
 10827  0432  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
 10828  0433  1283               	bcf	3,5	;RP0=0, select bank0
 10829  0434  1303               	bcf	3,6	;RP1=0, select bank0
 10830  0435  0822               	movf	?___llmod+2,w
 10831  0436  1683               	bsf	3,5	;RP0=1, select bank1
 10832  0437  1303               	bcf	3,6	;RP1=0, select bank1
 10833  0438  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
 10834  0439  1283               	bcf	3,5	;RP0=0, select bank0
 10835  043A  1303               	bcf	3,6	;RP1=0, select bank0
 10836  043B  0821               	movf	?___llmod+1,w
 10837  043C  1683               	bsf	3,5	;RP0=1, select bank1
 10838  043D  1303               	bcf	3,6	;RP1=0, select bank1
 10839  043E  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
 10840  043F  1283               	bcf	3,5	;RP0=0, select bank0
 10841  0440  1303               	bcf	3,6	;RP1=0, select bank0
 10842  0441  0820               	movf	?___llmod,w
 10843  0442  1683               	bsf	3,5	;RP0=1, select bank1
 10844  0443  1303               	bcf	3,6	;RP1=0, select bank1
 10845  0444  00B3               	movwf	sprintf@tmpval^(0+128)
 10846  0445                     l3513:
 10847                           
 10848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10849  0445  0833               	movf	sprintf@tmpval^(0+128),w
 10850  0446  3E30               	addlw	48
 10851  0447  00A5               	movwf	??_sprintf^(0+128)
 10852  0448  0841               	movf	sprintf@sp^(0+128),w
 10853  0449  0084               	movwf	4
 10854  044A  0825               	movf	??_sprintf^(0+128),w
 10855  044B  1783               	bsf	3,7	;select IRP bank2
 10856  044C  0080               	movwf	0
 10857  044D  3001               	movlw	1
 10858  044E  00A5               	movwf	??_sprintf^(0+128)
 10859  044F  0825               	movf	??_sprintf^(0+128),w
 10860  0450  07C1               	addwf	sprintf@sp^(0+128),f
 10861  0451                     l369:	
 10862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10863                           
 10864                           
 10865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10866  0451  3001               	movlw	1
 10867  0452  02C4               	subwf	sprintf@c^(0+128),f
 10868  0453  0A44               	incf	sprintf@c^(0+128),w
 10869  0454  1D03               	btfss	3,2
 10870  0455  2C57               	goto	u5511
 10871  0456  2C58               	goto	u5510
 10872  0457                     u5511:
 10873  0457  2BCB               	goto	l3509
 10874  0458                     u5510:
 10875  0458  2C6C               	goto	l3521
 10876  0459                     l3515:
 10877                           
 10878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10879  0459  3030               	movlw	48
 10880  045A  1683               	bsf	3,5	;RP0=1, select bank1
 10881  045B  1303               	bcf	3,6	;RP1=0, select bank1
 10882  045C  00A5               	movwf	??_sprintf^(0+128)
 10883  045D  0841               	movf	sprintf@sp^(0+128),w
 10884  045E  0084               	movwf	4
 10885  045F  0825               	movf	??_sprintf^(0+128),w
 10886  0460  1783               	bsf	3,7	;select IRP bank2
 10887  0461  0080               	movwf	0
 10888  0462                     l3517:
 10889  0462  3001               	movlw	1
 10890  0463  00A5               	movwf	??_sprintf^(0+128)
 10891  0464  0825               	movf	??_sprintf^(0+128),w
 10892  0465  07C1               	addwf	sprintf@sp^(0+128),f
 10893  0466                     l3519:
 10894                           
 10895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10896  0466  30FF               	movlw	255
 10897  0467  07BB               	addwf	sprintf@eexp^(0+128),f
 10898  0468  1803               	skipnc
 10899  0469  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
 10900  046A  30FF               	movlw	255
 10901  046B  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
 10902  046C                     l3521:
 10903                           
 10904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10905  046C  083C               	movf	(sprintf@eexp+1)^(0+128),w
 10906  046D  3A80               	xorlw	128
 10907  046E  00FF               	movwf	btemp+1
 10908  046F  3080               	movlw	128
 10909  0470  027F               	subwf	btemp+1,w
 10910  0471  1D03               	skipz
 10911  0472  2C75               	goto	u5525
 10912  0473  3001               	movlw	1
 10913  0474  023B               	subwf	sprintf@eexp^(0+128),w
 10914  0475                     u5525:
 10915  0475  1803               	skipnc
 10916  0476  2C78               	goto	u5521
 10917  0477  2C79               	goto	u5520
 10918  0478                     u5521:
 10919  0478  2C59               	goto	l3515
 10920  0479                     u5520:
 10921  0479                     l3523:
 10922                           
 10923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10924  0479  1683               	bsf	3,5	;RP0=1, select bank1
 10925  047A  1303               	bcf	3,6	;RP1=0, select bank1
 10926  047B  0843               	movf	(sprintf@prec+1)^(0+128),w
 10927  047C  3A80               	xorlw	128
 10928  047D  00FF               	movwf	btemp+1
 10929  047E  3080               	movlw	128
 10930  047F  027F               	subwf	btemp+1,w
 10931  0480  1D03               	skipz
 10932  0481  2C84               	goto	u5535
 10933  0482  3009               	movlw	9
 10934  0483  0242               	subwf	sprintf@prec^(0+128),w
 10935  0484                     u5535:
 10936  0484  1C03               	skipc
 10937  0485  2C87               	goto	u5531
 10938  0486  2C88               	goto	u5530
 10939  0487                     u5531:
 10940  0487  2C8F               	goto	l3527
 10941  0488                     u5530:
 10942  0488                     l3525:
 10943                           
 10944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10945  0488  3008               	movlw	8
 10946  0489  1683               	bsf	3,5	;RP0=1, select bank1
 10947  048A  1303               	bcf	3,6	;RP1=0, select bank1
 10948  048B  00A5               	movwf	??_sprintf^(0+128)
 10949  048C  0825               	movf	??_sprintf^(0+128),w
 10950  048D  00C4               	movwf	sprintf@c^(0+128)
 10951  048E  2C95               	goto	l376
 10952  048F                     l3527:
 10953                           
 10954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10955  048F  1683               	bsf	3,5	;RP0=1, select bank1
 10956  0490  1303               	bcf	3,6	;RP1=0, select bank1
 10957  0491  0842               	movf	sprintf@prec^(0+128),w
 10958  0492  00A5               	movwf	??_sprintf^(0+128)
 10959  0493  0825               	movf	??_sprintf^(0+128),w
 10960  0494  00C4               	movwf	sprintf@c^(0+128)
 10961  0495                     l376:
 10962                           
 10963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10964  0495  0844               	movf	sprintf@c^(0+128),w
 10965  0496  00A5               	movwf	??_sprintf^(0+128)
 10966  0497  01A6               	clrf	(??_sprintf^(0+128)+1)
 10967  0498  0825               	movf	??_sprintf^(0+128),w
 10968  0499  02C2               	subwf	sprintf@prec^(0+128),f
 10969  049A  0826               	movf	(??_sprintf+1)^(0+128),w
 10970  049B  1C03               	skipc
 10971  049C  03C3               	decf	(sprintf@prec+1)^(0+128),f
 10972  049D  02C3               	subwf	(sprintf@prec+1)^(0+128),f
 10973  049E                     l3529:
 10974                           
 10975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10976  049E  0844               	movf	sprintf@c^(0+128),w
 10977  049F  1903               	btfsc	3,2
 10978  04A0  2CA2               	goto	u5541
 10979  04A1  2CA3               	goto	u5540
 10980  04A2                     u5541:
 10981  04A2  2CAE               	goto	l3535
 10982  04A3                     u5540:
 10983  04A3                     l3531:
 10984                           
 10985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10986  04A3  302E               	movlw	46
 10987  04A4  00A5               	movwf	??_sprintf^(0+128)
 10988  04A5  0841               	movf	sprintf@sp^(0+128),w
 10989  04A6  0084               	movwf	4
 10990  04A7  0825               	movf	??_sprintf^(0+128),w
 10991  04A8  1783               	bsf	3,7	;select IRP bank2
 10992  04A9  0080               	movwf	0
 10993  04AA                     l3533:
 10994  04AA  3001               	movlw	1
 10995  04AB  00A5               	movwf	??_sprintf^(0+128)
 10996  04AC  0825               	movf	??_sprintf^(0+128),w
 10997  04AD  07C1               	addwf	sprintf@sp^(0+128),f
 10998  04AE                     l3535:
 10999                           
 11000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11001  04AE  0844               	movf	sprintf@c^(0+128),w
 11002  04AF  120A  158A  2140  120A  118A  	fcall	_scale
 11003  04B4  1283               	bcf	3,5	;RP0=0, select bank0
 11004  04B5  1303               	bcf	3,6	;RP1=0, select bank0
 11005  04B6  0841               	movf	?_scale+3,w
 11006  04B7  1683               	bsf	3,5	;RP0=1, select bank1
 11007  04B8  1303               	bcf	3,6	;RP1=0, select bank1
 11008  04B9  00AD               	movwf	(_sprintf$1217+3)^(0+128)
 11009  04BA  1283               	bcf	3,5	;RP0=0, select bank0
 11010  04BB  1303               	bcf	3,6	;RP1=0, select bank0
 11011  04BC  0840               	movf	?_scale+2,w
 11012  04BD  1683               	bsf	3,5	;RP0=1, select bank1
 11013  04BE  1303               	bcf	3,6	;RP1=0, select bank1
 11014  04BF  00AC               	movwf	(_sprintf$1217+2)^(0+128)
 11015  04C0  1283               	bcf	3,5	;RP0=0, select bank0
 11016  04C1  1303               	bcf	3,6	;RP1=0, select bank0
 11017  04C2  083F               	movf	?_scale+1,w
 11018  04C3  1683               	bsf	3,5	;RP0=1, select bank1
 11019  04C4  1303               	bcf	3,6	;RP1=0, select bank1
 11020  04C5  00AB               	movwf	(_sprintf$1217+1)^(0+128)
 11021  04C6  1283               	bcf	3,5	;RP0=0, select bank0
 11022  04C7  1303               	bcf	3,6	;RP1=0, select bank0
 11023  04C8  083E               	movf	?_scale,w
 11024  04C9  1683               	bsf	3,5	;RP0=1, select bank1
 11025  04CA  1303               	bcf	3,6	;RP1=0, select bank1
 11026  04CB  00AA               	movwf	_sprintf$1217^(0+128)
 11027  04CC                     l3537:
 11028                           
 11029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11030  04CC  082D               	movf	(_sprintf$1217+3)^(0+128),w
 11031  04CD  1283               	bcf	3,5	;RP0=0, select bank0
 11032  04CE  1303               	bcf	3,6	;RP1=0, select bank0
 11033  04CF  00AB               	movwf	___flmul@a+3
 11034  04D0  1683               	bsf	3,5	;RP0=1, select bank1
 11035  04D1  1303               	bcf	3,6	;RP1=0, select bank1
 11036  04D2  082C               	movf	(_sprintf$1217+2)^(0+128),w
 11037  04D3  1283               	bcf	3,5	;RP0=0, select bank0
 11038  04D4  1303               	bcf	3,6	;RP1=0, select bank0
 11039  04D5  00AA               	movwf	___flmul@a+2
 11040  04D6  1683               	bsf	3,5	;RP0=1, select bank1
 11041  04D7  1303               	bcf	3,6	;RP1=0, select bank1
 11042  04D8  082B               	movf	(_sprintf$1217+1)^(0+128),w
 11043  04D9  1283               	bcf	3,5	;RP0=0, select bank0
 11044  04DA  1303               	bcf	3,6	;RP1=0, select bank0
 11045  04DB  00A9               	movwf	___flmul@a+1
 11046  04DC  1683               	bsf	3,5	;RP0=1, select bank1
 11047  04DD  1303               	bcf	3,6	;RP1=0, select bank1
 11048  04DE  082A               	movf	_sprintf$1217^(0+128),w
 11049  04DF  1283               	bcf	3,5	;RP0=0, select bank0
 11050  04E0  1303               	bcf	3,6	;RP1=0, select bank0
 11051  04E1  00A8               	movwf	___flmul@a
 11052  04E2  1683               	bsf	3,5	;RP0=1, select bank1
 11053  04E3  1303               	bcf	3,6	;RP1=0, select bank1
 11054  04E4  0840               	movf	(sprintf@fval+3)^(0+128),w
 11055  04E5  1283               	bcf	3,5	;RP0=0, select bank0
 11056  04E6  1303               	bcf	3,6	;RP1=0, select bank0
 11057  04E7  00A7               	movwf	___flmul@b+3
 11058  04E8  1683               	bsf	3,5	;RP0=1, select bank1
 11059  04E9  1303               	bcf	3,6	;RP1=0, select bank1
 11060  04EA  083F               	movf	(sprintf@fval+2)^(0+128),w
 11061  04EB  1283               	bcf	3,5	;RP0=0, select bank0
 11062  04EC  1303               	bcf	3,6	;RP1=0, select bank0
 11063  04ED  00A6               	movwf	___flmul@b+2
 11064  04EE  1683               	bsf	3,5	;RP0=1, select bank1
 11065  04EF  1303               	bcf	3,6	;RP1=0, select bank1
 11066  04F0  083E               	movf	(sprintf@fval+1)^(0+128),w
 11067  04F1  1283               	bcf	3,5	;RP0=0, select bank0
 11068  04F2  1303               	bcf	3,6	;RP1=0, select bank0
 11069  04F3  00A5               	movwf	___flmul@b+1
 11070  04F4  1683               	bsf	3,5	;RP0=1, select bank1
 11071  04F5  1303               	bcf	3,6	;RP1=0, select bank1
 11072  04F6  083D               	movf	sprintf@fval^(0+128),w
 11073  04F7  1283               	bcf	3,5	;RP0=0, select bank0
 11074  04F8  1303               	bcf	3,6	;RP1=0, select bank0
 11075  04F9  00A4               	movwf	___flmul@b
 11076  04FA  120A  158A  249F  120A  118A  	fcall	___flmul
 11077  04FF  1283               	bcf	3,5	;RP0=0, select bank0
 11078  0500  1303               	bcf	3,6	;RP1=0, select bank0
 11079  0501  0827               	movf	?___flmul+3,w
 11080  0502  00D4               	movwf	___fltol@f1+3
 11081  0503  0826               	movf	?___flmul+2,w
 11082  0504  00D3               	movwf	___fltol@f1+2
 11083  0505  0825               	movf	?___flmul+1,w
 11084  0506  00D2               	movwf	___fltol@f1+1
 11085  0507  0824               	movf	?___flmul,w
 11086  0508  00D1               	movwf	___fltol@f1
 11087  0509  120A  158A  2007  120A  118A  	fcall	___fltol
 11088  050E  1283               	bcf	3,5	;RP0=0, select bank0
 11089  050F  1303               	bcf	3,6	;RP1=0, select bank0
 11090  0510  0854               	movf	?___fltol+3,w
 11091  0511  1683               	bsf	3,5	;RP0=1, select bank1
 11092  0512  1303               	bcf	3,6	;RP1=0, select bank1
 11093  0513  00BA               	movwf	(sprintf@val+3)^(0+128)
 11094  0514  1283               	bcf	3,5	;RP0=0, select bank0
 11095  0515  1303               	bcf	3,6	;RP1=0, select bank0
 11096  0516  0853               	movf	?___fltol+2,w
 11097  0517  1683               	bsf	3,5	;RP0=1, select bank1
 11098  0518  1303               	bcf	3,6	;RP1=0, select bank1
 11099  0519  00B9               	movwf	(sprintf@val+2)^(0+128)
 11100  051A  1283               	bcf	3,5	;RP0=0, select bank0
 11101  051B  1303               	bcf	3,6	;RP1=0, select bank0
 11102  051C  0852               	movf	?___fltol+1,w
 11103  051D  1683               	bsf	3,5	;RP0=1, select bank1
 11104  051E  1303               	bcf	3,6	;RP1=0, select bank1
 11105  051F  00B8               	movwf	(sprintf@val+1)^(0+128)
 11106  0520  1283               	bcf	3,5	;RP0=0, select bank0
 11107  0521  1303               	bcf	3,6	;RP1=0, select bank0
 11108  0522  0851               	movf	?___fltol,w
 11109  0523  1683               	bsf	3,5	;RP0=1, select bank1
 11110  0524  1303               	bcf	3,6	;RP1=0, select bank1
 11111  0525  00B7               	movwf	sprintf@val^(0+128)
 11112                           
 11113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11114  0526  2E08               	goto	l3547
 11115  0527                     l3539:
 11116                           
 11117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11118  0527  0844               	movf	sprintf@c^(0+128),w
 11119  0528  00A5               	movwf	??_sprintf^(0+128)
 11120  0529  3001               	movlw	1
 11121  052A                     u5555:
 11122  052A  1003               	clrc
 11123  052B  0DA5               	rlf	??_sprintf^(0+128),f
 11124  052C  3EFF               	addlw	-1
 11125  052D  1D03               	skipz
 11126  052E  2D2A               	goto	u5555
 11127  052F  1003               	clrc
 11128  0530  0D25               	rlf	??_sprintf^(0+128),w
 11129  0531  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11130  0532  0084               	movwf	4
 11131  0533  120A  118A  200D  120A  118A  	fcall	stringdir
 11132  0538  00F0               	movwf	___lldiv@divisor
 11133  0539  120A  118A  200D  120A  118A  	fcall	stringdir
 11134  053E  00F1               	movwf	___lldiv@divisor+1
 11135  053F  120A  118A  200D  120A  118A  	fcall	stringdir
 11136  0544  00F2               	movwf	___lldiv@divisor+2
 11137  0545  120A  118A  200D  120A  118A  	fcall	stringdir
 11138  054A  00F3               	movwf	___lldiv@divisor+3
 11139  054B  083A               	movf	(sprintf@val+3)^(0+128),w
 11140  054C  00F7               	movwf	___lldiv@dividend+3
 11141  054D  0839               	movf	(sprintf@val+2)^(0+128),w
 11142  054E  00F6               	movwf	___lldiv@dividend+2
 11143  054F  0838               	movf	(sprintf@val+1)^(0+128),w
 11144  0550  00F5               	movwf	___lldiv@dividend+1
 11145  0551  0837               	movf	sprintf@val^(0+128),w
 11146  0552  00F4               	movwf	___lldiv@dividend
 11147  0553  160A  158A  2419  120A  118A  	fcall	___lldiv
 11148  0558  0873               	movf	?___lldiv+3,w
 11149  0559  1683               	bsf	3,5	;RP0=1, select bank1
 11150  055A  1303               	bcf	3,6	;RP1=0, select bank1
 11151  055B  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
 11152  055C  0872               	movf	?___lldiv+2,w
 11153  055D  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
 11154  055E  0871               	movf	?___lldiv+1,w
 11155  055F  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
 11156  0560  0870               	movf	?___lldiv,w
 11157  0561  00B3               	movwf	sprintf@tmpval^(0+128)
 11158  0562                     l3541:
 11159                           
 11160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11161  0562  3000               	movlw	0
 11162  0563  1283               	bcf	3,5	;RP0=0, select bank0
 11163  0564  1303               	bcf	3,6	;RP1=0, select bank0
 11164  0565  00A3               	movwf	___llmod@divisor+3
 11165  0566  3000               	movlw	0
 11166  0567  00A2               	movwf	___llmod@divisor+2
 11167  0568  3000               	movlw	0
 11168  0569  00A1               	movwf	___llmod@divisor+1
 11169  056A  300A               	movlw	10
 11170  056B  00A0               	movwf	___llmod@divisor
 11171  056C  1683               	bsf	3,5	;RP0=1, select bank1
 11172  056D  1303               	bcf	3,6	;RP1=0, select bank1
 11173  056E  0836               	movf	(sprintf@tmpval+3)^(0+128),w
 11174  056F  1283               	bcf	3,5	;RP0=0, select bank0
 11175  0570  1303               	bcf	3,6	;RP1=0, select bank0
 11176  0571  00A7               	movwf	___llmod@dividend+3
 11177  0572  1683               	bsf	3,5	;RP0=1, select bank1
 11178  0573  1303               	bcf	3,6	;RP1=0, select bank1
 11179  0574  0835               	movf	(sprintf@tmpval+2)^(0+128),w
 11180  0575  1283               	bcf	3,5	;RP0=0, select bank0
 11181  0576  1303               	bcf	3,6	;RP1=0, select bank0
 11182  0577  00A6               	movwf	___llmod@dividend+2
 11183  0578  1683               	bsf	3,5	;RP0=1, select bank1
 11184  0579  1303               	bcf	3,6	;RP1=0, select bank1
 11185  057A  0834               	movf	(sprintf@tmpval+1)^(0+128),w
 11186  057B  1283               	bcf	3,5	;RP0=0, select bank0
 11187  057C  1303               	bcf	3,6	;RP1=0, select bank0
 11188  057D  00A5               	movwf	___llmod@dividend+1
 11189  057E  1683               	bsf	3,5	;RP0=1, select bank1
 11190  057F  1303               	bcf	3,6	;RP1=0, select bank1
 11191  0580  0833               	movf	sprintf@tmpval^(0+128),w
 11192  0581  1283               	bcf	3,5	;RP0=0, select bank0
 11193  0582  1303               	bcf	3,6	;RP1=0, select bank0
 11194  0583  00A4               	movwf	___llmod@dividend
 11195  0584  160A  158A  22B2  120A  118A  	fcall	___llmod
 11196  0589  1283               	bcf	3,5	;RP0=0, select bank0
 11197  058A  1303               	bcf	3,6	;RP1=0, select bank0
 11198  058B  0823               	movf	?___llmod+3,w
 11199  058C  1683               	bsf	3,5	;RP0=1, select bank1
 11200  058D  1303               	bcf	3,6	;RP1=0, select bank1
 11201  058E  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
 11202  058F  1283               	bcf	3,5	;RP0=0, select bank0
 11203  0590  1303               	bcf	3,6	;RP1=0, select bank0
 11204  0591  0822               	movf	?___llmod+2,w
 11205  0592  1683               	bsf	3,5	;RP0=1, select bank1
 11206  0593  1303               	bcf	3,6	;RP1=0, select bank1
 11207  0594  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
 11208  0595  1283               	bcf	3,5	;RP0=0, select bank0
 11209  0596  1303               	bcf	3,6	;RP1=0, select bank0
 11210  0597  0821               	movf	?___llmod+1,w
 11211  0598  1683               	bsf	3,5	;RP0=1, select bank1
 11212  0599  1303               	bcf	3,6	;RP1=0, select bank1
 11213  059A  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
 11214  059B  1283               	bcf	3,5	;RP0=0, select bank0
 11215  059C  1303               	bcf	3,6	;RP1=0, select bank0
 11216  059D  0820               	movf	?___llmod,w
 11217  059E  1683               	bsf	3,5	;RP0=1, select bank1
 11218  059F  1303               	bcf	3,6	;RP1=0, select bank1
 11219  05A0  00B3               	movwf	sprintf@tmpval^(0+128)
 11220  05A1                     l3543:
 11221                           
 11222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11223  05A1  0833               	movf	sprintf@tmpval^(0+128),w
 11224  05A2  3E30               	addlw	48
 11225  05A3  00A5               	movwf	??_sprintf^(0+128)
 11226  05A4  0841               	movf	sprintf@sp^(0+128),w
 11227  05A5  0084               	movwf	4
 11228  05A6  0825               	movf	??_sprintf^(0+128),w
 11229  05A7  1783               	bsf	3,7	;select IRP bank2
 11230  05A8  0080               	movwf	0
 11231  05A9  3001               	movlw	1
 11232  05AA  00A5               	movwf	??_sprintf^(0+128)
 11233  05AB  0825               	movf	??_sprintf^(0+128),w
 11234  05AC  07C1               	addwf	sprintf@sp^(0+128),f
 11235  05AD                     l3545:
 11236                           
 11237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11238  05AD  0844               	movf	sprintf@c^(0+128),w
 11239  05AE  00A5               	movwf	??_sprintf^(0+128)
 11240  05AF  3001               	movlw	1
 11241  05B0                     u5565:
 11242  05B0  1003               	clrc
 11243  05B1  0DA5               	rlf	??_sprintf^(0+128),f
 11244  05B2  3EFF               	addlw	-1
 11245  05B3  1D03               	skipz
 11246  05B4  2DB0               	goto	u5565
 11247  05B5  1003               	clrc
 11248  05B6  0D25               	rlf	??_sprintf^(0+128),w
 11249  05B7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11250  05B8  0084               	movwf	4
 11251  05B9  120A  118A  200D  120A  118A  	fcall	stringdir
 11252  05BE  1283               	bcf	3,5	;RP0=0, select bank0
 11253  05BF  1303               	bcf	3,6	;RP1=0, select bank0
 11254  05C0  00A0               	movwf	___llmod@divisor
 11255  05C1  120A  118A  200D  120A  118A  	fcall	stringdir
 11256  05C6  00A1               	movwf	___llmod@divisor+1
 11257  05C7  120A  118A  200D  120A  118A  	fcall	stringdir
 11258  05CC  00A2               	movwf	___llmod@divisor+2
 11259  05CD  120A  118A  200D  120A  118A  	fcall	stringdir
 11260  05D2  00A3               	movwf	___llmod@divisor+3
 11261  05D3  1683               	bsf	3,5	;RP0=1, select bank1
 11262  05D4  1303               	bcf	3,6	;RP1=0, select bank1
 11263  05D5  083A               	movf	(sprintf@val+3)^(0+128),w
 11264  05D6  1283               	bcf	3,5	;RP0=0, select bank0
 11265  05D7  1303               	bcf	3,6	;RP1=0, select bank0
 11266  05D8  00A7               	movwf	___llmod@dividend+3
 11267  05D9  1683               	bsf	3,5	;RP0=1, select bank1
 11268  05DA  1303               	bcf	3,6	;RP1=0, select bank1
 11269  05DB  0839               	movf	(sprintf@val+2)^(0+128),w
 11270  05DC  1283               	bcf	3,5	;RP0=0, select bank0
 11271  05DD  1303               	bcf	3,6	;RP1=0, select bank0
 11272  05DE  00A6               	movwf	___llmod@dividend+2
 11273  05DF  1683               	bsf	3,5	;RP0=1, select bank1
 11274  05E0  1303               	bcf	3,6	;RP1=0, select bank1
 11275  05E1  0838               	movf	(sprintf@val+1)^(0+128),w
 11276  05E2  1283               	bcf	3,5	;RP0=0, select bank0
 11277  05E3  1303               	bcf	3,6	;RP1=0, select bank0
 11278  05E4  00A5               	movwf	___llmod@dividend+1
 11279  05E5  1683               	bsf	3,5	;RP0=1, select bank1
 11280  05E6  1303               	bcf	3,6	;RP1=0, select bank1
 11281  05E7  0837               	movf	sprintf@val^(0+128),w
 11282  05E8  1283               	bcf	3,5	;RP0=0, select bank0
 11283  05E9  1303               	bcf	3,6	;RP1=0, select bank0
 11284  05EA  00A4               	movwf	___llmod@dividend
 11285  05EB  160A  158A  22B2  120A  118A  	fcall	___llmod
 11286  05F0  1283               	bcf	3,5	;RP0=0, select bank0
 11287  05F1  1303               	bcf	3,6	;RP1=0, select bank0
 11288  05F2  0823               	movf	?___llmod+3,w
 11289  05F3  1683               	bsf	3,5	;RP0=1, select bank1
 11290  05F4  1303               	bcf	3,6	;RP1=0, select bank1
 11291  05F5  00BA               	movwf	(sprintf@val+3)^(0+128)
 11292  05F6  1283               	bcf	3,5	;RP0=0, select bank0
 11293  05F7  1303               	bcf	3,6	;RP1=0, select bank0
 11294  05F8  0822               	movf	?___llmod+2,w
 11295  05F9  1683               	bsf	3,5	;RP0=1, select bank1
 11296  05FA  1303               	bcf	3,6	;RP1=0, select bank1
 11297  05FB  00B9               	movwf	(sprintf@val+2)^(0+128)
 11298  05FC  1283               	bcf	3,5	;RP0=0, select bank0
 11299  05FD  1303               	bcf	3,6	;RP1=0, select bank0
 11300  05FE  0821               	movf	?___llmod+1,w
 11301  05FF  1683               	bsf	3,5	;RP0=1, select bank1
 11302  0600  1303               	bcf	3,6	;RP1=0, select bank1
 11303  0601  00B8               	movwf	(sprintf@val+1)^(0+128)
 11304  0602  1283               	bcf	3,5	;RP0=0, select bank0
 11305  0603  1303               	bcf	3,6	;RP1=0, select bank0
 11306  0604  0820               	movf	?___llmod,w
 11307  0605  1683               	bsf	3,5	;RP0=1, select bank1
 11308  0606  1303               	bcf	3,6	;RP1=0, select bank1
 11309  0607  00B7               	movwf	sprintf@val^(0+128)
 11310  0608                     l3547:
 11311                           
 11312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11313  0608  3001               	movlw	1
 11314  0609  02C4               	subwf	sprintf@c^(0+128),f
 11315  060A  0A44               	incf	sprintf@c^(0+128),w
 11316  060B  1D03               	btfss	3,2
 11317  060C  2E0E               	goto	u5571
 11318  060D  2E0F               	goto	u5570
 11319  060E                     u5571:
 11320  060E  2D27               	goto	l3539
 11321  060F                     u5570:
 11322  060F  2E21               	goto	l3555
 11323  0610                     l3549:
 11324                           
 11325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11326  0610  3030               	movlw	48
 11327  0611  00A5               	movwf	??_sprintf^(0+128)
 11328  0612  0841               	movf	sprintf@sp^(0+128),w
 11329  0613  0084               	movwf	4
 11330  0614  0825               	movf	??_sprintf^(0+128),w
 11331  0615  1783               	bsf	3,7	;select IRP bank2
 11332  0616  0080               	movwf	0
 11333  0617                     l3551:
 11334  0617  3001               	movlw	1
 11335  0618  00A5               	movwf	??_sprintf^(0+128)
 11336  0619  0825               	movf	??_sprintf^(0+128),w
 11337  061A  07C1               	addwf	sprintf@sp^(0+128),f
 11338  061B                     l3553:
 11339                           
 11340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11341  061B  30FF               	movlw	255
 11342  061C  07C2               	addwf	sprintf@prec^(0+128),f
 11343  061D  1803               	skipnc
 11344  061E  0AC3               	incf	(sprintf@prec+1)^(0+128),f
 11345  061F  30FF               	movlw	255
 11346  0620  07C3               	addwf	(sprintf@prec+1)^(0+128),f
 11347  0621                     l3555:
 11348                           
 11349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11350  0621  0842               	movf	sprintf@prec^(0+128),w
 11351  0622  0443               	iorwf	(sprintf@prec+1)^(0+128),w
 11352  0623  1D03               	btfss	3,2
 11353  0624  2E26               	goto	u5581
 11354  0625  2E27               	goto	u5580
 11355  0626                     u5581:
 11356  0626  2E10               	goto	l3549
 11357  0627                     u5580:
 11358  0627  2FC5               	goto	l3635
 11359  0628                     l3557:
 11360                           
 11361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11362  0628  082E               	movf	sprintf@ap^(0+128),w
 11363  0629  0084               	movwf	4
 11364  062A  1383               	bcf	3,7	;select IRP bank0
 11365  062B  0800               	movf	0,w
 11366  062C  00A5               	movwf	??_sprintf^(0+128)
 11367  062D  0A84               	incf	4,f
 11368  062E  0800               	movf	0,w
 11369  062F  00A6               	movwf	(??_sprintf^(0+128)+1)
 11370  0630  0825               	movf	??_sprintf^(0+128),w
 11371  0631  00B7               	movwf	sprintf@val^(0+128)
 11372  0632  0826               	movf	(??_sprintf+1)^(0+128),w
 11373  0633  00B8               	movwf	(sprintf@val+1)^(0+128)
 11374  0634  3000               	movlw	0
 11375  0635  1BB8               	btfsc	(sprintf@val+1)^(0+128),7
 11376  0636  30FF               	movlw	255
 11377  0637  00B9               	movwf	(sprintf@val+2)^(0+128)
 11378  0638  00BA               	movwf	(sprintf@val+3)^(0+128)
 11379  0639                     l3559:
 11380  0639  3002               	movlw	2
 11381  063A  00A5               	movwf	??_sprintf^(0+128)
 11382  063B  0825               	movf	??_sprintf^(0+128),w
 11383  063C  07AE               	addwf	sprintf@ap^(0+128),f
 11384  063D                     l3561:
 11385                           
 11386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11387  063D  1FBA               	btfss	(sprintf@val+3)^(0+128),7
 11388  063E  2E40               	goto	u5591
 11389  063F  2E41               	goto	u5590
 11390  0640                     u5591:
 11391  0640  2E50               	goto	l3567
 11392  0641                     u5590:
 11393  0641                     l3563:
 11394                           
 11395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11396  0641  3003               	movlw	3
 11397  0642  04AF               	iorwf	sprintf@flag^(0+128),f
 11398  0643  3000               	movlw	0
 11399  0644  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
 11400  0645                     l3565:
 11401                           
 11402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11403  0645  09B7               	comf	sprintf@val^(0+128),f
 11404  0646  09B8               	comf	(sprintf@val+1)^(0+128),f
 11405  0647  09B9               	comf	(sprintf@val+2)^(0+128),f
 11406  0648  09BA               	comf	(sprintf@val+3)^(0+128),f
 11407  0649  0AB7               	incf	sprintf@val^(0+128),f
 11408  064A  1903               	skipnz
 11409  064B  0AB8               	incf	(sprintf@val+1)^(0+128),f
 11410  064C  1903               	skipnz
 11411  064D  0AB9               	incf	(sprintf@val+2)^(0+128),f
 11412  064E  1903               	skipnz
 11413  064F  0ABA               	incf	(sprintf@val+3)^(0+128),f
 11414  0650                     l3567:
 11415                           
 11416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11417  0650  0842               	movf	sprintf@prec^(0+128),w
 11418  0651  0443               	iorwf	(sprintf@prec+1)^(0+128),w
 11419  0652  1D03               	btfss	3,2
 11420  0653  2E55               	goto	u5601
 11421  0654  2E56               	goto	u5600
 11422  0655                     u5601:
 11423  0655  2E64               	goto	l3573
 11424  0656                     u5600:
 11425  0656                     l3569:
 11426  0656  083A               	movf	(sprintf@val+3)^(0+128),w
 11427  0657  0439               	iorwf	(sprintf@val+2)^(0+128),w
 11428  0658  0438               	iorwf	(sprintf@val+1)^(0+128),w
 11429  0659  0437               	iorwf	sprintf@val^(0+128),w
 11430  065A  1D03               	skipz
 11431  065B  2E5D               	goto	u5611
 11432  065C  2E5E               	goto	u5610
 11433  065D                     u5611:
 11434  065D  2E64               	goto	l3573
 11435  065E                     u5610:
 11436  065E                     l3571:
 11437                           
 11438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11439  065E  3001               	movlw	1
 11440  065F  07C2               	addwf	sprintf@prec^(0+128),f
 11441  0660  1803               	skipnc
 11442  0661  0AC3               	incf	(sprintf@prec+1)^(0+128),f
 11443  0662  3000               	movlw	0
 11444  0663  07C3               	addwf	(sprintf@prec+1)^(0+128),f
 11445  0664                     l3573:
 11446                           
 11447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11448  0664  01C4               	clrf	sprintf@c^(0+128)
 11449  0665  0AC4               	incf	sprintf@c^(0+128),f
 11450  0666                     l3579:
 11451                           
 11452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11453  0666  0844               	movf	sprintf@c^(0+128),w
 11454  0667  00A5               	movwf	??_sprintf^(0+128)
 11455  0668  3001               	movlw	1
 11456  0669                     u5625:
 11457  0669  1003               	clrc
 11458  066A  0DA5               	rlf	??_sprintf^(0+128),f
 11459  066B  3EFF               	addlw	-1
 11460  066C  1D03               	skipz
 11461  066D  2E69               	goto	u5625
 11462  066E  1003               	clrc
 11463  066F  0D25               	rlf	??_sprintf^(0+128),w
 11464  0670  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11465  0671  0084               	movwf	4
 11466  0672  120A  118A  200D  120A  118A  	fcall	stringdir
 11467  0677  00A6               	movwf	(??_sprintf+1)^(0+128)
 11468  0678  120A  118A  200D  120A  118A  	fcall	stringdir
 11469  067D  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
 11470  067E  120A  118A  200D  120A  118A  	fcall	stringdir
 11471  0683  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
 11472  0684  120A  118A  200D  120A  118A  	fcall	stringdir
 11473  0689  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
 11474  068A  0829               	movf	(??_sprintf+4)^(0+128),w
 11475  068B  023A               	subwf	(sprintf@val+3)^(0+128),w
 11476  068C  1D03               	skipz
 11477  068D  2E98               	goto	u5635
 11478  068E  0828               	movf	(??_sprintf+3)^(0+128),w
 11479  068F  0239               	subwf	(sprintf@val+2)^(0+128),w
 11480  0690  1D03               	skipz
 11481  0691  2E98               	goto	u5635
 11482  0692  0827               	movf	(??_sprintf+2)^(0+128),w
 11483  0693  0238               	subwf	(sprintf@val+1)^(0+128),w
 11484  0694  1D03               	skipz
 11485  0695  2E98               	goto	u5635
 11486  0696  0826               	movf	(??_sprintf+1)^(0+128),w
 11487  0697  0237               	subwf	sprintf@val^(0+128),w
 11488  0698                     u5635:
 11489  0698  1803               	skipnc
 11490  0699  2E9B               	goto	u5631
 11491  069A  2E9C               	goto	u5630
 11492  069B                     u5631:
 11493  069B  2E9D               	goto	l3583
 11494  069C                     u5630:
 11495  069C  2EA7               	goto	l3585
 11496  069D                     l3583:
 11497  069D  3001               	movlw	1
 11498  069E  00A5               	movwf	??_sprintf^(0+128)
 11499  069F  0825               	movf	??_sprintf^(0+128),w
 11500  06A0  07C4               	addwf	sprintf@c^(0+128),f
 11501  06A1  300A               	movlw	10
 11502  06A2  0644               	xorwf	sprintf@c^(0+128),w
 11503  06A3  1D03               	btfss	3,2
 11504  06A4  2EA6               	goto	u5641
 11505  06A5  2EA7               	goto	u5640
 11506  06A6                     u5641:
 11507  06A6  2E66               	goto	l3579
 11508  06A7                     u5640:
 11509  06A7                     l3585:
 11510                           
 11511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11512  06A7  0843               	movf	(sprintf@prec+1)^(0+128),w
 11513  06A8  3A80               	xorlw	128
 11514  06A9  3C80               	sublw	128
 11515  06AA  1D03               	skipz
 11516  06AB  2EAE               	goto	u5655
 11517  06AC  0842               	movf	sprintf@prec^(0+128),w
 11518  06AD  0244               	subwf	sprintf@c^(0+128),w
 11519  06AE                     u5655:
 11520  06AE  1803               	skipnc
 11521  06AF  2EB1               	goto	u5651
 11522  06B0  2EB2               	goto	u5650
 11523  06B1                     u5651:
 11524  06B1  2EB9               	goto	l3589
 11525  06B2                     u5650:
 11526  06B2                     l3587:
 11527                           
 11528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11529  06B2  1683               	bsf	3,5	;RP0=1, select bank1
 11530  06B3  1303               	bcf	3,6	;RP1=0, select bank1
 11531  06B4  0842               	movf	sprintf@prec^(0+128),w
 11532  06B5  00A5               	movwf	??_sprintf^(0+128)
 11533  06B6  0825               	movf	??_sprintf^(0+128),w
 11534  06B7  00C4               	movwf	sprintf@c^(0+128)
 11535  06B8  2ED1               	goto	l3593
 11536  06B9                     l3589:
 11537  06B9  1683               	bsf	3,5	;RP0=1, select bank1
 11538  06BA  1303               	bcf	3,6	;RP1=0, select bank1
 11539  06BB  0843               	movf	(sprintf@prec+1)^(0+128),w
 11540  06BC  3A80               	xorlw	128
 11541  06BD  00A5               	movwf	??_sprintf^(0+128)
 11542  06BE  3080               	movlw	128
 11543  06BF  0225               	subwf	??_sprintf^(0+128),w
 11544  06C0  1D03               	skipz
 11545  06C1  2EC4               	goto	u5665
 11546  06C2  0844               	movf	sprintf@c^(0+128),w
 11547  06C3  0242               	subwf	sprintf@prec^(0+128),w
 11548  06C4                     u5665:
 11549  06C4  1803               	skipnc
 11550  06C5  2EC7               	goto	u5661
 11551  06C6  2EC8               	goto	u5660
 11552  06C7                     u5661:
 11553  06C7  2ED1               	goto	l3593
 11554  06C8                     u5660:
 11555  06C8                     l3591:
 11556                           
 11557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11558  06C8  1683               	bsf	3,5	;RP0=1, select bank1
 11559  06C9  1303               	bcf	3,6	;RP1=0, select bank1
 11560  06CA  0844               	movf	sprintf@c^(0+128),w
 11561  06CB  00A5               	movwf	??_sprintf^(0+128)
 11562  06CC  01A6               	clrf	(??_sprintf^(0+128)+1)
 11563  06CD  0825               	movf	??_sprintf^(0+128),w
 11564  06CE  00C2               	movwf	sprintf@prec^(0+128)
 11565  06CF  0826               	movf	(??_sprintf+1)^(0+128),w
 11566  06D0  00C3               	movwf	(sprintf@prec+1)^(0+128)
 11567  06D1                     l3593:
 11568                           
 11569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11570  06D1  1683               	bsf	3,5	;RP0=1, select bank1
 11571  06D2  1303               	bcf	3,6	;RP1=0, select bank1
 11572  06D3  0831               	movf	sprintf@width^(0+128),w
 11573  06D4  0432               	iorwf	(sprintf@width+1)^(0+128),w
 11574  06D5  1903               	btfsc	3,2
 11575  06D6  2ED8               	goto	u5671
 11576  06D7  2ED9               	goto	u5670
 11577  06D8                     u5671:
 11578  06D8  2EEB               	goto	l3599
 11579  06D9                     u5670:
 11580  06D9                     l3595:
 11581  06D9  3003               	movlw	3
 11582  06DA  052F               	andwf	sprintf@flag^(0+128),w
 11583  06DB  00A5               	movwf	??_sprintf^(0+128)
 11584  06DC  3000               	movlw	0
 11585  06DD  0530               	andwf	(sprintf@flag+1)^(0+128),w
 11586  06DE  00A6               	movwf	(??_sprintf+1)^(0+128)
 11587  06DF  0825               	movf	??_sprintf^(0+128),w
 11588  06E0  0426               	iorwf	(??_sprintf^(0+128)+1),w
 11589  06E1  1903               	btfsc	3,2
 11590  06E2  2EE4               	goto	u5681
 11591  06E3  2EE5               	goto	u5680
 11592  06E4                     u5681:
 11593  06E4  2EEB               	goto	l3599
 11594  06E5                     u5680:
 11595  06E5                     l3597:
 11596                           
 11597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11598  06E5  30FF               	movlw	255
 11599  06E6  07B1               	addwf	sprintf@width^(0+128),f
 11600  06E7  1803               	skipnc
 11601  06E8  0AB2               	incf	(sprintf@width+1)^(0+128),f
 11602  06E9  30FF               	movlw	255
 11603  06EA  07B2               	addwf	(sprintf@width+1)^(0+128),f
 11604  06EB                     l3599:
 11605                           
 11606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11607  06EB  1F30               	btfss	(sprintf@flag+1)^(0+128),6
 11608  06EC  2EEE               	goto	u5691
 11609  06ED  2EEF               	goto	u5690
 11610  06EE                     u5691:
 11611  06EE  2F0A               	goto	l3607
 11612  06EF                     u5690:
 11613  06EF                     l3601:
 11614                           
 11615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11616  06EF  0843               	movf	(sprintf@prec+1)^(0+128),w
 11617  06F0  3A80               	xorlw	128
 11618  06F1  00A5               	movwf	??_sprintf^(0+128)
 11619  06F2  0832               	movf	(sprintf@width+1)^(0+128),w
 11620  06F3  3A80               	xorlw	128
 11621  06F4  0225               	subwf	??_sprintf^(0+128),w
 11622  06F5  1D03               	skipz
 11623  06F6  2EF9               	goto	u5705
 11624  06F7  0831               	movf	sprintf@width^(0+128),w
 11625  06F8  0242               	subwf	sprintf@prec^(0+128),w
 11626  06F9                     u5705:
 11627  06F9  1803               	skipnc
 11628  06FA  2EFC               	goto	u5701
 11629  06FB  2EFD               	goto	u5700
 11630  06FC                     u5701:
 11631  06FC  2F06               	goto	l3605
 11632  06FD                     u5700:
 11633  06FD                     l3603:
 11634                           
 11635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11636  06FD  1683               	bsf	3,5	;RP0=1, select bank1
 11637  06FE  1303               	bcf	3,6	;RP1=0, select bank1
 11638  06FF  0842               	movf	sprintf@prec^(0+128),w
 11639  0700  02B1               	subwf	sprintf@width^(0+128),f
 11640  0701  0843               	movf	(sprintf@prec+1)^(0+128),w
 11641  0702  1C03               	skipc
 11642  0703  03B2               	decf	(sprintf@width+1)^(0+128),f
 11643  0704  02B2               	subwf	(sprintf@width+1)^(0+128),f
 11644  0705  2F0A               	goto	l3607
 11645  0706                     l3605:
 11646                           
 11647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11648  0706  1683               	bsf	3,5	;RP0=1, select bank1
 11649  0707  1303               	bcf	3,6	;RP1=0, select bank1
 11650  0708  01B1               	clrf	sprintf@width^(0+128)
 11651  0709  01B2               	clrf	(sprintf@width+1)^(0+128)
 11652  070A                     l3607:
 11653                           
 11654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11655  070A  0832               	movf	(sprintf@width+1)^(0+128),w
 11656  070B  3A80               	xorlw	128
 11657  070C  3C80               	sublw	128
 11658  070D  1D03               	skipz
 11659  070E  2F11               	goto	u5715
 11660  070F  0831               	movf	sprintf@width^(0+128),w
 11661  0710  0244               	subwf	sprintf@c^(0+128),w
 11662  0711                     u5715:
 11663  0711  1803               	skipnc
 11664  0712  2F14               	goto	u5711
 11665  0713  2F15               	goto	u5710
 11666  0714                     u5711:
 11667  0714  2F21               	goto	l3611
 11668  0715                     u5710:
 11669  0715                     l3609:
 11670                           
 11671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11672  0715  1683               	bsf	3,5	;RP0=1, select bank1
 11673  0716  1303               	bcf	3,6	;RP1=0, select bank1
 11674  0717  0844               	movf	sprintf@c^(0+128),w
 11675  0718  00A5               	movwf	??_sprintf^(0+128)
 11676  0719  01A6               	clrf	(??_sprintf^(0+128)+1)
 11677  071A  0825               	movf	??_sprintf^(0+128),w
 11678  071B  02B1               	subwf	sprintf@width^(0+128),f
 11679  071C  0826               	movf	(??_sprintf+1)^(0+128),w
 11680  071D  1C03               	skipc
 11681  071E  03B2               	decf	(sprintf@width+1)^(0+128),f
 11682  071F  02B2               	subwf	(sprintf@width+1)^(0+128),f
 11683  0720  2F25               	goto	l3613
 11684  0721                     l3611:
 11685                           
 11686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11687  0721  1683               	bsf	3,5	;RP0=1, select bank1
 11688  0722  1303               	bcf	3,6	;RP1=0, select bank1
 11689  0723  01B1               	clrf	sprintf@width^(0+128)
 11690  0724  01B2               	clrf	(sprintf@width+1)^(0+128)
 11691  0725                     l3613:
 11692                           
 11693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11694  0725  0831               	movf	sprintf@width^(0+128),w
 11695  0726  0432               	iorwf	(sprintf@width+1)^(0+128),w
 11696  0727  1903               	btfsc	3,2
 11697  0728  2F2A               	goto	u5721
 11698  0729  2F2B               	goto	u5720
 11699  072A                     u5721:
 11700  072A  2F42               	goto	l3621
 11701  072B                     u5720:
 11702  072B                     l3615:
 11703                           
 11704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11705  072B  3020               	movlw	32
 11706  072C  00A5               	movwf	??_sprintf^(0+128)
 11707  072D  0841               	movf	sprintf@sp^(0+128),w
 11708  072E  0084               	movwf	4
 11709  072F  0825               	movf	??_sprintf^(0+128),w
 11710  0730  1783               	bsf	3,7	;select IRP bank2
 11711  0731  0080               	movwf	0
 11712  0732                     l3617:
 11713  0732  3001               	movlw	1
 11714  0733  00A5               	movwf	??_sprintf^(0+128)
 11715  0734  0825               	movf	??_sprintf^(0+128),w
 11716  0735  07C1               	addwf	sprintf@sp^(0+128),f
 11717  0736                     l3619:
 11718  0736  30FF               	movlw	255
 11719  0737  07B1               	addwf	sprintf@width^(0+128),f
 11720  0738  1803               	skipnc
 11721  0739  0AB2               	incf	(sprintf@width+1)^(0+128),f
 11722  073A  30FF               	movlw	255
 11723  073B  07B2               	addwf	(sprintf@width+1)^(0+128),f
 11724  073C  0831               	movf	sprintf@width^(0+128),w
 11725  073D  0432               	iorwf	(sprintf@width+1)^(0+128),w
 11726  073E  1D03               	btfss	3,2
 11727  073F  2F41               	goto	u5731
 11728  0740  2F42               	goto	u5730
 11729  0741                     u5731:
 11730  0741  2F2B               	goto	l3615
 11731  0742                     u5730:
 11732  0742                     l3621:
 11733                           
 11734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11735  0742  3003               	movlw	3
 11736  0743  052F               	andwf	sprintf@flag^(0+128),w
 11737  0744  00A5               	movwf	??_sprintf^(0+128)
 11738  0745  3000               	movlw	0
 11739  0746  0530               	andwf	(sprintf@flag+1)^(0+128),w
 11740  0747  00A6               	movwf	(??_sprintf+1)^(0+128)
 11741  0748  0825               	movf	??_sprintf^(0+128),w
 11742  0749  0426               	iorwf	(??_sprintf^(0+128)+1),w
 11743  074A  1903               	btfsc	3,2
 11744  074B  2F4D               	goto	u5741
 11745  074C  2F4E               	goto	u5740
 11746  074D                     u5741:
 11747  074D  2FB7               	goto	l3633
 11748  074E                     u5740:
 11749  074E                     l3623:
 11750                           
 11751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11752  074E  302D               	movlw	45
 11753  074F  00A5               	movwf	??_sprintf^(0+128)
 11754  0750  0841               	movf	sprintf@sp^(0+128),w
 11755  0751  0084               	movwf	4
 11756  0752  0825               	movf	??_sprintf^(0+128),w
 11757  0753  1783               	bsf	3,7	;select IRP bank2
 11758  0754  0080               	movwf	0
 11759  0755                     l3625:
 11760  0755  3001               	movlw	1
 11761  0756  00A5               	movwf	??_sprintf^(0+128)
 11762  0757  0825               	movf	??_sprintf^(0+128),w
 11763  0758  07C1               	addwf	sprintf@sp^(0+128),f
 11764  0759  2FB7               	goto	l3633
 11765  075A                     l3627:
 11766                           
 11767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11768  075A  3000               	movlw	0
 11769  075B  1283               	bcf	3,5	;RP0=0, select bank0
 11770  075C  1303               	bcf	3,6	;RP1=0, select bank0
 11771  075D  00A3               	movwf	___llmod@divisor+3
 11772  075E  3000               	movlw	0
 11773  075F  00A2               	movwf	___llmod@divisor+2
 11774  0760  3000               	movlw	0
 11775  0761  00A1               	movwf	___llmod@divisor+1
 11776  0762  300A               	movlw	10
 11777  0763  00A0               	movwf	___llmod@divisor
 11778  0764  1683               	bsf	3,5	;RP0=1, select bank1
 11779  0765  1303               	bcf	3,6	;RP1=0, select bank1
 11780  0766  0842               	movf	sprintf@prec^(0+128),w
 11781  0767  00A5               	movwf	??_sprintf^(0+128)
 11782  0768  3001               	movlw	1
 11783  0769                     u5755:
 11784  0769  1003               	clrc
 11785  076A  0DA5               	rlf	??_sprintf^(0+128),f
 11786  076B  3EFF               	addlw	-1
 11787  076C  1D03               	skipz
 11788  076D  2F69               	goto	u5755
 11789  076E  1003               	clrc
 11790  076F  0D25               	rlf	??_sprintf^(0+128),w
 11791  0770  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11792  0771  0084               	movwf	4
 11793  0772  120A  118A  200D  120A  118A  	fcall	stringdir
 11794  0777  00F0               	movwf	___lldiv@divisor
 11795  0778  120A  118A  200D  120A  118A  	fcall	stringdir
 11796  077D  00F1               	movwf	___lldiv@divisor+1
 11797  077E  120A  118A  200D  120A  118A  	fcall	stringdir
 11798  0783  00F2               	movwf	___lldiv@divisor+2
 11799  0784  120A  118A  200D  120A  118A  	fcall	stringdir
 11800  0789  00F3               	movwf	___lldiv@divisor+3
 11801  078A  083A               	movf	(sprintf@val+3)^(0+128),w
 11802  078B  00F7               	movwf	___lldiv@dividend+3
 11803  078C  0839               	movf	(sprintf@val+2)^(0+128),w
 11804  078D  00F6               	movwf	___lldiv@dividend+2
 11805  078E  0838               	movf	(sprintf@val+1)^(0+128),w
 11806  078F  00F5               	movwf	___lldiv@dividend+1
 11807  0790  0837               	movf	sprintf@val^(0+128),w
 11808  0791  00F4               	movwf	___lldiv@dividend
 11809  0792  160A  158A  2419  120A  118A  	fcall	___lldiv
 11810  0797  0873               	movf	?___lldiv+3,w
 11811  0798  1283               	bcf	3,5	;RP0=0, select bank0
 11812  0799  1303               	bcf	3,6	;RP1=0, select bank0
 11813  079A  00A7               	movwf	___llmod@dividend+3
 11814  079B  0872               	movf	?___lldiv+2,w
 11815  079C  00A6               	movwf	___llmod@dividend+2
 11816  079D  0871               	movf	?___lldiv+1,w
 11817  079E  00A5               	movwf	___llmod@dividend+1
 11818  079F  0870               	movf	?___lldiv,w
 11819  07A0  00A4               	movwf	___llmod@dividend
 11820  07A1  160A  158A  22B2  120A  118A  	fcall	___llmod
 11821  07A6  1283               	bcf	3,5	;RP0=0, select bank0
 11822  07A7  1303               	bcf	3,6	;RP1=0, select bank0
 11823  07A8  0820               	movf	?___llmod,w
 11824  07A9  3E30               	addlw	48
 11825  07AA  1683               	bsf	3,5	;RP0=1, select bank1
 11826  07AB  1303               	bcf	3,6	;RP1=0, select bank1
 11827  07AC  00A6               	movwf	(??_sprintf+1)^(0+128)
 11828  07AD  0826               	movf	(??_sprintf+1)^(0+128),w
 11829  07AE  00C4               	movwf	sprintf@c^(0+128)
 11830  07AF                     l3629:
 11831                           
 11832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11833  07AF  0844               	movf	sprintf@c^(0+128),w
 11834  07B0  00A5               	movwf	??_sprintf^(0+128)
 11835  07B1  0841               	movf	sprintf@sp^(0+128),w
 11836  07B2  0084               	movwf	4
 11837  07B3  0825               	movf	??_sprintf^(0+128),w
 11838  07B4  1783               	bsf	3,7	;select IRP bank2
 11839  07B5  0080               	movwf	0
 11840  07B6  2F55               	goto	l3625
 11841  07B7                     l3633:
 11842                           
 11843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11844  07B7  30FF               	movlw	255
 11845  07B8  07C2               	addwf	sprintf@prec^(0+128),f
 11846  07B9  1803               	skipnc
 11847  07BA  0AC3               	incf	(sprintf@prec+1)^(0+128),f
 11848  07BB  30FF               	movlw	255
 11849  07BC  07C3               	addwf	(sprintf@prec+1)^(0+128),f
 11850  07BD  0A42               	incf	sprintf@prec^(0+128),w
 11851  07BE  1D03               	skipz
 11852  07BF  2FC4               	goto	u5761
 11853  07C0  0A43               	incf	(sprintf@prec+1)^(0+128),w
 11854  07C1  1D03               	btfss	3,2
 11855  07C2  2FC4               	goto	u5761
 11856  07C3  2FC5               	goto	u5760
 11857  07C4                     u5761:
 11858  07C4  2F5A               	goto	l3627
 11859  07C5                     u5760:
 11860  07C5                     l3635:
 11861                           
 11862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11863  07C5  3001               	movlw	1
 11864  07C6  07A0               	addwf	sprintf@f^(0+128),f
 11865  07C7  30FF               	movlw	-1
 11866  07C8  0720               	addwf	sprintf@f^(0+128),w
 11867  07C9  0084               	movwf	4
 11868  07CA  120A  118A  200D  120A  118A  	fcall	stringdir
 11869  07CF  00A5               	movwf	??_sprintf^(0+128)
 11870  07D0  0825               	movf	??_sprintf^(0+128),w
 11871  07D1  00C4               	movwf	sprintf@c^(0+128)
 11872  07D2  0844               	movf	sprintf@c^(0+128),w
 11873  07D3  1D03               	btfss	3,2
 11874  07D4  2FD6               	goto	u5771
 11875  07D5  2FD9               	goto	u5770
 11876  07D6                     u5771:
 11877  07D6  160A  118A  2D48   	goto	l3355
 11878  07D9                     u5770:
 11879  07D9                     l3637:
 11880                           
 11881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11882  07D9  0841               	movf	sprintf@sp^(0+128),w
 11883  07DA  0084               	movwf	4
 11884  07DB  1783               	bsf	3,7	;select IRP bank2
 11885  07DC  0180               	clrf	0
 11886  07DD                     l406:
 11887  07DD  0008               	return
 11888  07DE                     __end_of_sprintf:

Data Sizes:
    Strings     46
    Constant    144
    Data        2
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     40      61
    BANK3            96      0      60
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_8(CODE[3]), STR_6(CODE[7]), STR_5(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK3[20]), k(BANK3[20]), l(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    enviar@valor	PTR unsigned char  size(2) Largest target is 20
		 -> s(BANK3[20]), STR_4(CODE[4]), k(BANK3[20]), STR_3(CODE[4]), 
		 -> l(BANK3[20]), STR_2(CODE[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[4]), s(BANK3[20]), k(BANK3[20]), l(BANK3[20]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _conversor2->___xxtofl
    _conversor->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversor2->___flmul
    _conversor->___flmul
    ___flmul->___awdiv

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   45578
                                             37 BANK1      3     3      0
                      _Config_USARTT
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _conversor
                         _conversor2
                             _enviar
                            _recibir
                              _setup
                            _spiInit
                            _spiRead
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32954
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enviar                                               4     2      2     544
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _conversor2                                           9     5      4    5269
                                             30 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _conversor                                            9     5      4    5269
                                             30 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     514
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     558
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_USARTT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_USARTT
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conversor
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _conversor2
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _enviar
   _recibir
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      3C       9       62.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     28      3D       7       76.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D7      12        0.0%
ABS                  0      0      D7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 21 00:12:12 2021

                        _k 0190                          _l 01A4                          _p 00C8  
                        _s 01B8                          _v 00D4                          _x 00CC  
                        pc 0002                _SSPSTATbits 0094                         l92 18DD  
                       l95 1BBC                         l98 1C18               ___awdiv@sign 0021  
                       _vv 00D0                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l110 18F7                        l113 188B  
                      l122 1A21                        l107 1860                        l131 1A63  
                      l125 1912                        l205 1008                        l150 189C  
                      l119 1936                        l153 1CF4                        l162 1D42  
                      l410 1967                        l314 0C9E                        l171 1873  
                      l307 12B5                        l156 1D0E                        l412 197F  
                      l165 1D4C                        l406 07DD                        l159 1D28  
                      l191 0800                        l168 1D52                        l336 1605  
                      l601 1025                        l194 0806                        l187 18BF  
                      l188 18C4                        l604 1091                        l620 086D  
                      l605 10AA                        l613 0882                        l446 1C7E  
                      l623 0882                        l631 0902                        l376 0495  
                      l609 187E                        l369 0451                        l627 093F  
                      l563 1CE7                        l580 01D7                        l628 08B1  
                      l716 0119                        l741 13C0                        l581 013C  
                      l750 153D                        l638 0932                        l726 19E0  
                      l743 1397                        l591 01CA                        l584 019A  
                      l576 1B60                        l833 0FFF                        l737 1319  
                      l762 14AF                        l666 1B07                        l771 150F  
                      l852 1994                        l596 1A80                        l780 153D  
                      l845 0FF3                        l597 1A9C                        l854 19A6  
                      l598 1AB1                        l758 148B                        l839 0F6B  
                      l783 195A                        l768 14D1                        l890 1DD6  
                      l891 1DE2                        l883 1DBA                        l779 1531  
                      l877 1D75                        l879 1E0C                        l897 18AE  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0036               ___flmul@bexp 0037               ___flmul@sign 0031  
             ___flmul@temp 003C               ___flmul@prod 0038               ___fltol@exp1 005B  
                     l3001 090E                       l3011 0937                       l3003 0920  
                     l3101 1C76                       l3021 0130                       l3111 1AAE  
                     l3031 0156                       l3015 011A                       l3113 1AB0  
                     l3105 1A64                       l3121 1039                       l3201 1937  
                     l3041 018A                       l3033 0158                       l3017 0127  
                     l3009 0927                       l2403 185C                       l3211 1D5D  
                     l3107 1A78                       l3131 10A7                       l3123 1041  
                     l3203 193B                       l3043 018B                       l3035 0161  
                     l3027 013D                       l2411 1C8B                       l3301 19E7  
                     l3221 1D8B                       l3213 1D6D                       l3109 1A94  
                     l3133 10A9                       l3125 1045                       l3117 1009  
                     l3141 187E                       l3061 01BF                       l3053 01A6  
                     l3045 0194                       l3037 016A                       l3029 0145  
                     l2501 0101                       l2421 1C9C                       l2413 1C8D  
                     l2405 1C7F                       l3303 19F0                       l3311 1914  
                     l3231 1DC1                       l3223 1D98                       l3215 1D7D  
                     l3207 1D54                       l3127 1069                       l3119 101D  
                     l3151 081D                       l3071 1961                       l3063 01CF  
                     l3047 019E                       l3055 01B8                       l3039 017C  
                     l2503 0107                       l2431 1CB4                       l2423 1CA2  
                     l2415 1C91                       l2407 1C82                       l3305 19FF  
                     l3321 1930                       l3313 1919                       l3241 1DFA  
                     l3233 1DCC                       l3225 1D9F                       l3209 1D59  
                     l3129 106D                       l3137 1874                       l2601 134B  
                     l3161 0841                       l3153 0832                       l3145 0807  
                     l3081 1C19                       l3073 196E                       l2505 0108  
                     l2521 19BB                       l2513 19A7                       l2433 1CC5  
                     l2425 1CA5                       l2441 1CD9                       l2417 1C96  
                     l2409 1C86                       l3401 1637                       l3307 1A05  
                     l3315 191E                       l3323 1A22                       l3243 1DFF  
                     l3235 1DD0                       l3227 1DA3                       l3219 1D86  
                     l3331 1CE8                       l3251 18C5                       l3139 187C  
                     l2611 135F                       l2603 134F                       l3155 0833  
                     l3147 0814                       l3091 1C46                       l3083 1C29  
                     l3075 1975                       l3067 195B                       l2507 010F  
                     l2523 19BF                       l2515 19AD                       l2531 19DC  
                     l2443 1CDE                       l2435 1CCB                       l2427 1CAC  
                     l2419 1C9A                       l2451 1B09                       l3411 166A  
                     l3403 163B                       l3309 187F                       l3317 1925  
                     l3325 1A25                       l3245 1E03                       l3237 1DDA  
                     l3229 1DB1                       l3333 1CFA                       l3261 18D1  
                     l3253 18C8                       l3341 1000                       l2701 14D6  
                     l2621 13A4                       l2605 1353                       l2613 1363  
                     l2541 12C7                       l3157 083B                       l3093 1C58  
                     l3085 1C2C                       l3181 1AB2                       l3077 197B  
                     l3069 195D                       l2509 0115                       l2525 19C9  
                     l2517 19B0                       l2445 1CE3                       l2437 1CCC  
                     l2429 1CB0                       l2461 1B1D                       l2453 1B0D  
                     l3501 03A4                       l3421 16AF                       l3413 1683  
                     l3405 163F                       l3319 192B                       l3327 1A41  
                     l2391 1983                       l3247 1E04                       l3239 1DE4  
                     l3335 1D14                       l3271 18DA                       l3263 18D4  
                     l3255 18CA                       l3343 1005                       l2711 1514  
                     l2703 14DB                       l2623 13A6                       l2631 13B8  
                     l2615 1364                       l2607 1357                       l2551 12DB  
                     l2543 12C8                       l2535 12B6                       l3175 0862  
                     l3167 0849                       l3159 083D                       l3095 1C66  
                     l3087 1C39                       l3191 1AE2                       l3183 1ABC  
                     l2527 19CF                       l2519 19B7                       l2439 1CD3  
                     l2471 1B35                       l2463 1B23                       l2455 1B12  
                     l3511 0406                       l3503 03B1                       l3431 16E5  
                     l3423 16B5                       l3415 1687                       l3407 164D  
                     l3329 1A47                       l2393 198A                       l2801 0E5F  
                     l3337 1D2E                       l3273 18DB                       l3265 18D5  
                     l3257 18CB                       l3281 18B9                       l2721 152B  
                     l2713 1519                       l2705 14E9                       l2641 13E9  
                     l2633 13C4                       l2625 13AA                       l2617 137B  
                     l2609 135B                       l2561 12F1                       l2545 12CD  
                     l2553 12DD                       l2537 12BD                       l3177 0872  
                     l3169 085B                       l3097 1C67                       l3089 1C3D  
                     l3193 1AF0                       l3185 1ABF                       l2529 19D6  
                     l2481 1B57                       l2473 1B3F                       l2465 1B26  
                     l2457 1B14                       l2449 1B08                       l3601 06EF  
                     l3521 046C                       l3513 0445                       l3505 03BF  
                     l3441 178C                       l3433 1704                       l3425 16C8  
                     l3417 168B                       l3409 1651                       l3361 155A  
                     l3353 1541                       l3291 1898                       l2395 198E  
                     l2811 0F17                       l2803 0E8C                       l2731 0CA6  
                     l3347 1BC0                       l3339 1D48                       l3275 18DC  
                     l3267 18D6                       l3259 18CC                       l3283 18BB  
                     l2723 152D                       l2715 1521                       l2707 14ED  
                     l2651 1400                       l2643 13ED                       l2635 13C9  
                     l2627 13AB                       l2619 139B                       l2571 1306  
                     l2563 12F7                       l2555 12E5                       l2547 12D2  
                     l2539 12C3                       l3179 0877                       l3099 1C70  
                     l3195 1AF9                       l3187 1ACC                       l2491 00DE  
                     l2483 1B5C                       l2475 1B45                       l2467 1B2D  
                     l2459 1B18                       l3611 0721                       l3603 06FD  
                     l3531 04A3                       l3523 0479                       l3515 0459  
                     l3507 03C6                       l3451 01F3                       l3435 174F  
                     l3427 16DB                       l3419 16A4                       l3443 1794  
                     l3371 159A                       l3363 155E                       l3355 1548  
                     l3293 189B                       l2397 199D                       l2389 1981  
                     l2821 0F3C                       l2813 0F20                       l2805 0E9C  
                     l2741 0CBB                       l2733 0CAC                       l3349 1C02  
                     l3269 18D7                       l3285 18BE                       l3277 18B0  
                     l2725 1538                       l2717 1526                       l2709 150B  
                     l2661 1463                       l2653 1401                       l2645 13F1  
                     l2629 13B4                       l2581 1323                       l2573 130E  
                     l2565 12FB                       l2557 12EA                       l2549 12DA  
                     l3189 1AD0                       l3197 1AFF                       l2493 00E1  
                     l2901 11C1                       l2477 1B4C                       l2469 1B31  
                     l3621 0742                       l3613 0725                       l3605 0706  
                     l3541 0562                       l3533 04AA                       l3525 0488  
                     l3517 0462                       l3509 03CB                       l3461 0255  
                     l3453 021A                       l3445 17A3                       l3437 1768  
                     l3429 16DF                       l3381 15C1                       l3373 159E  
                     l3365 156E                       l3357 154E                       l3701 1EFF  
                     l3287 188C                       l2399 19A2                       l2831 0F54  
                     l2823 0F45                       l2815 0F2E                       l2807 0EC9  
                     l2751 0CD8                       l2743 0CC3                       l2735 0CB0  
                     l3279 18B7                       l2727 153C                       l2719 1527  
                     l2671 1498                       l2663 1469                       l2655 140A  
                     l2647 13FA                       l2639 13D2                       l2591 1337  
                     l2583 1327                       l2575 130F                       l2567 12FC  
                     l2559 12F0                       l2495 00E8                       l2487 00D6  
                     l2903 11C7                       l2479 1B52                       l2911 0943  
                     l3623 074E                       l3615 072B                       l3607 070A  
                     l3551 0617                       l3543 05A1                       l3535 04AE  
                     l3527 048F                       l3519 0466                       l3471 02D0  
                     l3463 0273                       l3455 0229                       l3447 17EA  
                     l3439 1771                       l3383 15C4                       l3391 1601  
                     l3367 1572                       l3375 15AE                       l3359 1555  
                     l3711 1F2A                       l3703 1F03                       l3289 1894  
                     l2841 0F83                       l2833 0F68                       l2817 0F37  
                     l2825 0F4B                       l2809 0EEF                       l2761 0CEF  
                     l2753 0CDC                       l2745 0CC5                       l2737 0CB1  
                     l2729 0C9F                       l3297 1869                       l2681 14B3  
                     l2665 146E                       l2649 13FC                       l2657 140F  
                     l2593 133B                       l2585 132B                       l2569 1301  
                     l2577 1311                       l2497 00EC                       l2489 00D8  
                     l2913 0947                       l3625 0755                       l3633 07B7  
                     l3617 0732                       l3609 0715                       l3561 063D  
                     l3553 061B                       l3545 05AD                       l3537 04CC  
                     l3529 049E                       l3481 0321                       l3473 031D  
                     l3457 0244                       l3449 01D8                       l3393 1603  
                     l3385 15D9                       l3377 15BC                       l3369 1587  
                     l3721 1F71                       l3713 1F2E                       l3705 1F12  
                     l3299 19E1                       l2851 0FBE                       l2843 0F87  
                     l2827 0F4F                       l2819 0F3B                       l2763 0CF1  
                     l2755 0CDD                       l2747 0CCD                       l2739 0CB6  
                     l2683 14B6                       l2675 14A1                       l2659 1425  
                     l2667 147D                       l2691 14C3                       l2595 133F  
                     l2587 132F                       l2579 131F                       l2499 00F0  
                     l2907 1272                       l2923 0A38                       l2915 0949  
                     l3627 075A                       l3619 0736                       l3571 065E  
                     l3563 0641                       l3555 0621                       l3539 0527  
                     l3547 0608                       l3491 0383                       l3475 031F  
                     l3467 0292                       l3459 024D                       l3387 15EC  
                     l3379 15BD                       l3635 07C5                       l3731 1F9A  
                     l3723 1F79                       l3715 1F36                       l3707 1F16  
                     l2861 0FEB                       l2853 0FCD                       l2845 0FA0  
                     l2837 0F70                       l2829 0F50                       l2781 0D62  
                     l2773 0D0C                       l2765 0CF9                       l2757 0CE2  
                     l2749 0CD2                       l2693 14C4                       l2685 14B8  
                     l2677 14AA                       l2669 1493                       l2597 1343  
                     l2589 1333                       l2941 0BE3                       l2925 0A3F  
                     l2917 0950                       l2933 0AF4                       l3629 07AF  
                     l3573 0664                       l3565 0645                       l3549 0610  
                     l3493 038F                       l3485 0358                       l3469 029B  
                     l3557 0628                       l3637 07D9                       l3397 1607  
                     l3389 15F0                       l3741 1FC5                       l3733 1FA9  
                     l3725 1F83                       l3717 1F56                       l3709 1F20  
                     l3661 1E2F                       l3653 1E0D                       l2871 18E2  
                     l2863 0FEC                       l2855 0FD7                       l2839 0F75  
                     l2847 0FA6                       l2791 0DDF                       l2783 0D8E  
                     l2775 0D1C                       l2767 0CFE                       l2759 0CE7  
                     l3647 1B64                       l2695 14C8                       l2687 14BD  
                     l2679 14AE                       l2599 1347                       l2951 189E  
                     l2943 0BEA                       l2935 0AFB                       l3591 06C8  
                     l3583 069D                       l3567 0650                       l3559 0639  
                     l3495 0396                       l3487 0362                       l3399 1629  
                     l3743 1FD1                       l3735 1FAD                       l3727 1F8C  
                     l3719 1F68                       l3671 1E5B                       l3663 1E37  
                     l3655 1E20                       l2873 18E8                       l2881 18FC  
                     l2865 0FF7                       l2857 0FD9                       l2849 0FB3  
                     l2793 0DFC                       l2785 0DAA                       l2777 0D29  
                     l2769 0D03                       l3649 1BA6                       l2697 14CE  
                     l2689 14BF                       l2953 189F                       l2929 0AC7  
                     l3593 06D1                       l3585 06A7                       l3569 0656  
                     l3497 039F                       l3489 037D                       l3745 1FE4  
                     l3737 1FB7                       l3729 1F96                       l3681 1E84  
                     l3673 1E64                       l3665 1E40                       l3657 1E25  
                     l2875 18EB                       l2883 1902                       l2859 0FE7  
                     l2795 0E0C                       l2787 0DC6                       l2779 0D46  
                     l2891 0800                       l2963 0883                       l2955 18A5  
                     l2947 0C72                       l3595 06D9                       l3587 06B2  
                     l3579 0666                       l3747 1FED                       l3739 1FC1  
                     l3691 1EAE                       l3683 1E93                       l3675 1E6D  
                     l3667 1E49                       l3659 1E2A                       l2877 18F4  
                     l2869 18DF                       l2885 1905                       l2797 0E29  
                     l2789 0DCF                       l2981 08C9                       l2965 0896  
                     l2893 10AE                       l2957 18AB                       l3597 06E5  
                     l3589 06B9                       l3693 1EBA                       l3685 1E96  
                     l3677 1E76                       l3669 1E52                       l2887 190A  
                     l2879 18F9                       l2799 0E42                       l2991 08F4  
                     l2983 08D2                       l2975 08B2                       l2895 10B4  
                     l2959 18AD                       l3599 06EB                       l3695 1EDA  
                     l3687 1EA0                       l3679 1E80                       l2889 190D  
                     l2993 08FC                       l2985 08DB                       l2977 08B8  
                     l2969 089F                       l3697 1EEC                       l3689 1EAA  
                     l2995 0906                       l2987 08E9                       l2979 08C7  
                     l3779 161B                       l3699 1EF5                       l2989 08F3  
                     STR_1 00A3                       STR_2 00C6                       STR_3 00CA  
                     STR_4 00B0                       STR_5 00B4                       STR_6 00BB  
                     STR_7 00C2                       STR_8 00CE                       u3010 1CD9  
                     u3011 1CD8                       u3020 1CDE                       u3100 1B52  
                     u3021 1CDD                       u3005 1CCD                       u3101 1B51  
                     u3110 1B57                       u3030 1B0D                       u3111 1B56  
                     u3031 1B0C                       u4000 0F68                       u3120 00DE  
                     u3040 1B18                       u4001 0F67                       u3121 00DD  
                     u3041 1B17                       u4010 0F6F                       u3210 19BF  
                     u3050 1B23                       u4011 0F6E                       u3211 19BE  
                     u3051 1B22                       u4020 0F75                       u3300 1301  
                     u3140 00F0                       u3220 19C9                       u4021 0F74  
                     u3301 1300                       u3141 00EF                       u3221 19C8  
                     u3205 19B1                       u4030 0F87                       u3310 1306  
                     u3070 1B35                       u4031 0F86                       u3311 1305  
                     u3135 00E2                       u3071 1B34                       u4040 0F96  
                     u5000 1D59                       u3400 13C0                       u3320 131F  
                     u3160 0101                       u3240 19DC                       u3080 1B3F  
                     u5001 1D58                       u3401 13BF                       u3321 131E  
                     u3161 0100                       u3241 19DB                       u3225 19C5  
                     u4105 10D1                       u3081 1B3E                       u3065 1B27  
                     u4050 0FB3                       u5010 1D5D                       u3410 13C4  
                     u3330 1323                       u3250 12C7                       u4130 11C7  
                     u4051 0FB2                       u5011 1D5C                       u3411 13C3  
                     u3331 1322                       u3251 12C6                       u3155 00F1  
                     u3235 19D0                       u4131 11C6                       u4115 112B  
                     u4060 0FCD                       u5100 1DDA                       u5020 1D7D  
                     u3500 1450                       u3420 13C9                       u3340 137B  
                     u3260 12CD                       u3180 0115                       u4300 0BEA  
                     u4220 0A3F                       u4061 0FCC                       u4045 0F91  
                     u5101 1DD9                       u5021 1D7C                       u3501 1451  
                     u3421 13C8                       u3341 137A                       u3261 12CC  
                     u3181 0114                       u3165 00FD                       u4125 1180  
                     u3085 1B3B                       u4301 0BE9                       u4221 0A3E  
                     u4205 09AC                       u4070 0FEB                       u5110 1DEF  
                     u3510 146E                       u3502 1456                       u3350 1386  
                     u3270 12D2                       u3190 19AD                       u4071 0FEA  
                     u4055 0FAF                       u3511 146D                       u3503 1457  
                     u3431 13DB                       u3351 1384                       u3271 12D1  
                     u3175 0109                       u3191 19AC                       u3095 1B46  
                     u4215 09F7                       u5120 1DFF                       u5040 1D9E  
                     u5200 1CFA                       u4080 0806                       u3600 14CE  
                     u3520 1493                       u3440 13ED                       u3432 13E2  
                     u3360 1387                       u3280 12F0                       u4065 0FC9  
                     u5121 1DFE                       u5041 1D9D                       u5201 1CF9  
                     u4081 0805                       u3601 14CD                       u3521 1492  
                     u3441 13EC                       u3433 13E9                       u3345 1377  
                     u3281 12EF                       u4145 11E4                       u5130 1E03  
                     u5210 1D14                       u3610 14D5                       u3530 1498  
                     u3450 13F1                       u3370 139B                       u3290 12FB  
                     u4410 0902                       u4090 10B4                       u4170 0947  
                     u5131 1E02                       u5115 1DEA                       u5035 1D90  
                     u5211 1D13                       u3611 14D4                       u3531 1497  
                     u3451 13F0                       u3371 139A                       u3291 12FA  
                     u4411 0901                       u4155 1231                       u4091 10B3  
                     u4315 0BFD                       u4235 0A52                       u4171 0946  
                     u2900 198E                       u5060 1DC0                       u5220 1D2E  
                     u5140 18B7                       u3700 153C                       u3620 14DB  
                     u3460 1400                       u3380 13AA                       u4500 013B  
                     u4420 0906                       u4340 18A5                       u4260 0AFB  
                     u4180 0950                       u5300 1637                       u2901 198D  
                     u5061 1DBF                       u5221 1D2D                       u5141 18B6  
                     u3701 153B                       u3621 14DA                       u3461 13FF  
                     u3381 13A9                       u4501 013A                       u4421 0905  
                     u4405 08F5                       u4165 127D                       u4341 18A4  
                     u4325 0C39                       u4261 0AFA                       u4245 0A8E  
                     u4181 094F                       u5301 1634                       u5150 1919  
                     u3710 0CB0                       u5230 1D48                       u3630 14ED  
                     u3550 14AE                       u4430 090D                       u4350 18AB  
                     u5310 163B                       u5151 1918                       u3711 0CAF  
                     u5055 1DB2                       u5231 1D47                       u3631 14EC  
                     u3551 14AD                       u4431 090C                       u4351 18AA  
                     u4335 0C75                       u4255 0ACA                       u5311 163A  
                     u5160 192B                       u2920 19A2                       u3720 0CB6  
                     u5080 1DD0                       u5240 1D52                       u3640 14FC  
                     u3560 14B3                       u3480 1425                       u4520 017C  
                     u4360 0896                       u5400 021A                       u5320 166A  
                     u5161 192A                       u2921 19A1                       u3801 0D70  
                     u3721 0CB5                       u5081 1DCF                       u5241 1D51  
                     u3561 14B2                       u3545 14A3                       u3481 1424  
                     u4521 017B                       u4361 0895                       u5401 0219  
                     u5321 1669                       u5170 1A2F                       u3802 0D77  
                     u3730 0CBB                       u5090 1DD6                       u3650 150B  
                     u3570 14BD                       u4610 01CF                       u4450 091F  
                     u4370 08B0                       u2930 1C86                       u5410 0229  
                     u5330 16A4                       u5250 154E                       u2915 1995  
                     u3811 0D9C                       u3803 0D7E                       u3731 0CBA  
                     u5091 1DD5                       u5075 1DC5                       u3651 150A  
                     u3571 14BC                       u3491 143C                       u3483 1421  
                     u3475 1403                       u3395 13AD                       u4611 01CE  
                     u4515 0163                       u4451 091E                       u4371 08AF  
                     u2931 1C85                       u4275 0B1B                       u4195 0970  
                     u5411 0228                       u5331 16A3                       u5251 154D  
                     u5180 1A51                       u3900 0ED5                       u3812 0DA3  
                     u3740 0CDC                       u3660 1514                       u3580 14C3  
                     u3492 143D                       u4700 1C58                       u4620 1961  
                     u4540 019A                       u4460 0926                       u2940 1C91  
                     u5420 0244                       u5340 16DF                       u5260 156E  
                     u3821 0DB8                       u3813 0DAA                       u3741 0CDB  
                     u3661 1513                       u3645 14F7                       u3581 14C2  
                     u3493 1442                       u4701 1C57                       u4621 1960  
                     u4605 01C1                       u4541 0199                       u4525 0178  
                     u4461 0925                       u4445 090F                       u2941 1C90  
                     u4285 0B57                       u5421 0243                       u5341 16DE  
                     u5261 156D                       u5190 1A63                       u3822 0DBF  
                     u3750 0CE2                       u3670 1519                       u3590 14C8  
                     u3494 1443                       u4550 019E                       u4390 08E9  
                     u2950 1CA2                       u5510 0458                       u5350 1768  
                     u5270 15AE                       u5191 1A62                       u3911 0EE1  
                     u3823 0DC6                       u3751 0CE1                       u3671 1518  
                     u3591 14C7                       u3495 1448                       u4551 019D  
                     u4535 018D                       u4391 08E8                       u2951 1CA1  
                     u4295 0BA2                       u5511 0457                       u5415 0225  
                     u5351 1767                       u5271 15AD                       u3920 0EFD  
                     u3912 0EE8                       u3760 0CE7                       u4800 106D  
                     u3680 1526                       u3496 1449                       u4720 1C76  
                     u4560 01A5                       u4480 0937                       u5600 0656  
                     u5520 0479                       u5440 0357                       u5360 178C  
                     u5280 15BC                       u3913 0EEF                       u3905 0ED0  
                     u3841 0DEE                       u3761 0CE6                       u4801 106C  
                     u3681 1525                       u4721 1C75                       u4705 1C54  
                     u4561 01A4                       u4481 0936                       u4385 08D4  
                     u5601 0655                       u5521 0478                       u5505 03CE  
                     u5441 0356                       u5361 178B                       u5281 15BB  
                     u3842 0DF5                       u3770 0CFE                       u4730 1A78  
                     u3690 152B                       u4650 197B                       u4490 0127  
                     u2970 1CB4                       u5610 065E                       u5530 0488  
                     u5450 0362                       u5370 17A3                       u5290 1600  
                     u3931 0F09                       u3851 0E1B                       u3843 0DFC  
                     u3835 0DC8                       u3771 0CFD                       u4731 1A77  
                     u4811 107C                       u3691 152A                       u4715 1C68  
                     u4651 197A                       u4635 1968                       u4491 0126  
                     u4475 0929                       u4395 08E5                       u2971 1CB3  
                     u5611 065D                       u5531 0487                       u5451 0361  
                     u5435 0324                       u5371 17A2                       u5291 15FF  
                     u3932 0F10                       u3852 0E22                       u3780 0D03  
                     u4740 1A94                       u4820 10A7                       u4812 107D  
                     u4900 0861                       u4660 1C29                       u4580 01B7  
                     u5700 06FD                       u5540 04A3                       u5460 037D  
                     u5380 01D8                       u3933 0F17                       u3925 0EF8  
                     u3853 0E29                       u3781 0D02                       u4741 1A93  
                     u4821 10A6                       u4813 1082                       u4901 0860  
                     u4661 1C28                       u4645 196F                       u4581 01B6  
                     u2965 1CA6                       u5701 06FC                       u5541 04A2  
                     u5525 0475                       u5461 037C                       u5445 0353  
                     u5381 17FA                       u4750 1AAE                       u4814 1083  
                     u4830 187C                       u4590 01BE                       u2990 1CC5  
                     u5710 0715                       u5630 069C                       u5470 038F  
                     u5390 01F3                       u3871 0E51                       u3791 0D54  
                     u4751 1AAD                       u4815 1088                       u4831 187B  
                     u4591 01BD                       u4575 01A7                       u2991 1CC4  
                     u5711 0714                       u5631 069B                       u5535 0484  
                     u5471 038E                       u5391 01F2                       u5375 179F  
                     u3960 0F3B                       u3872 0E58                       u3792 0D5B  
                     u4816 1089                       u4760 101D                       u4920 0872  
                     u4840 0814                       u4680 1C3D                       u5720 072B  
                     u5640 06A7                       u5480 03B1                       u3961 0F3A  
                     u3945 0F19                       u3881 0E7E                       u3873 0E5F  
                     u3865 0E2B                       u3793 0D62                       u4825 10A3  
                     u4761 101C                       u4921 0871                       u4841 0813  
                     u4681 1C3C                       u2985 1CB5                       u5721 072A  
                     u5705 06F9                       u5641 06A6                       u5625 0669  
                     u5481 03B0                       u5385 17F5                       u3882 0E85  
                     u4770 1039                       u4930 0877                       u4850 082B  
                     u5730 0742                       u5650 06B2                       u5570 060F  
                     u5490 03BF                       u3955 0F30                       u3891 0EAB  
                     u3883 0E8C                       u4755 1AAA                       u4771 1038  
                     u4931 0876                       u4915 0864                       u4675 1C2E  
                     u2995 1CC1                       u5731 0741                       u5715 0711  
                     u5651 06B1                       u5635 0698                       u5571 060E  
                     u5555 052A                       u5491 03BE                       u3980 0F4F  
                     u3892 0EB2                       u4780 1045                       u4860 0841  
                     u4940 1ABC                       u5740 074E                       u5660 06C8  
                     u5580 0627                       u3981 0F4E                       u3893 0EB9  
                     u4781 1044                       u4861 0840                       u4941 1ABB  
                     u5741 074D                       u5661 06C7                       u5581 0626  
                     u5565 05B0                       u5485 03AD                       u3990 0F54  
                     u4870 0848                       u5670 06D9                       u5590 0641  
                     u3991 0F53                       u3975 0F3E                       u4791 1054  
                     u4871 0847                       u4855 0826                       u4695 1C3F  
                     u5671 06D8                       u5655 06AE                       u5591 0640  
                     u5807 1E8C                       u4792 1055                       u4960 1AD0  
                     u5760 07C5                       u5680 06E5                       u4793 105A  
                     u4961 1ACF                       u5761 07C4                       u5681 06E4  
                     u5665 06C4                       u5817 1EA6                       u4794 105B  
                     u4890 085A                       u4970 1AE2                       u5770 07D9  
                     u5690 06EF                       u5907 190F                       u4795 1060  
                     u4891 0859                       u4971 1AE1                       u4955 1AC1  
                     u5771 07D6                       u5755 0769                       u5691 06EE  
                     u5827 1EFB                       u4796 1061                       u5780 1F79  
                     u5917 19EB                       u4885 084A                       u5781 1F78  
                     u5837 1F0B                       u4990 1AFF                       u5927 19FA  
                     u4991 1AFE                       u4975 1ADE                       u5847 1F26  
                     u5937 1A07                       u4985 1AF1                       u5857 1F92  
                     u5947 18EF                       u5867 1FA2                       u5877 1FBD  
                     u5797 1E7C                       u5887 1FF5                       u5897 1907  
                     _TRMT 04C1          ?_Lcd_Write_String 0073                       _flag 006F  
                     _main 1E0D                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075               _sprintf$1217 00AA            __end_of_Lcd_Cmd 18F8  
            ___fltol@sign1 005A            __end_of___fladd 153E                      ?_main 0070  
          __end_of___awdiv 1CE8            __end_of___flneg 187F            __end_of___awmod 1B61  
          __end_of___flmul 1000            __end_of___flsub 195B            __end_of___fltol 0883  
                    _ANSEL 0188            __end_of___lldiv 1C7F            ___awdiv@divisor 0077  
          __end_of___llmod 1B08            __end_of___lwdiv 011A            __end_of___lwmod 19E1  
          ___awdiv@counter 0020                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 00A3                      _count 00D8  
                    _scale 0940            __end_of_isdigit 18AF            __end_of_recibir 1874  
                    _setup 18C5                      _turno 006E                      pclath 000A  
          __end_of_spiInit 18C5            __end_of_spiRead 1009                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07DE           __end_of_Lcd_Init 1A22  
         __end_of_Lcd_Port 1861            __initialization 07DE               __end_of_main 2000  
              enviar@valor 0070                     ??_main 00C5         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0024                     ?_scale 003E  
         ___awdiv@dividend 0079                     ?_setup 0070                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 001B                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPBUF 0013                     _SSPCON 0014           __end_of___xxtofl 1E0D  
         __end_of__powers_ 0047                     ___flge 1009                     ___fleq 1A64  
                ??___fladd 005A                     ___wmul 195B                  ??___awdiv 007B  
                ??___flneg 0074                  ??___awmod 0074                  ??___flmul 002C  
                ??___flsub 007E                  ??___fltol 0055                  ??___lldiv 0078  
                ??___llmod 0028                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _enviar 1CE8                     _fround 10AB           ___awdiv@quotient 0022  
          ___awmod@divisor 0070                     _valorA 00D9                     _valorC 00DA  
                   _valorT 00DB            ___awmod@counter 0075               conversor@val 0046  
                ??_isdigit 0070         __size_of__Umul8_16 0027                  ??_recibir 0070  
                ??_spiInit 0073                  ??_spiRead 0070                  ??_sprintf 00A5  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070          __end_of_Lcd_Clear 188C  
               ___fltol@f1 0051      __end_of_Config_USARTT 189D             __pcstackCOMMON 0070  
             __pidataBANK0 00D4              __end_of_scale 0C9F              __end_of_setup 18DE  
           _Lcd_Set_Cursor 1913                 __div_to_l_ 011A                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020               sprintf@width 00B1  
                  ??_setup 0070         __size_of_conversor 005C                 __pbssBANK1 00C8  
               __pbssBANK3 0190              __div_to_l_@f1 0070              __div_to_l_@f2 0074  
        __end_of__Umul8_16 19A7                 __pmaintext 1E0D                    ?___flge 0070  
                  ?___fleq 0070                    ?___wmul 0070    __size_of_spiReceiveWait 0007  
                  ?_enviar 0070                    ?_fround 003E  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 1937                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPSTAT 0094                 __stringtab 0003  
           _Lcd_Write_Char 18F8                    _Lcd_Cmd 18DE                 _conversor2 1BBD  
        __end_of__npowers_ 007B                 _scale$1216 004C            __size_of___flge 00A2  
          __size_of___fleq 004E                    ___fladd 12B6                    ___awdiv 1C7F  
                  ___flneg 1874                    ___awmod 1B08                    ___flmul 0C9F  
                  ___flsub 1937                    ___fltol 0807                    ___lldiv 1C19  
          __size_of___wmul 0025                    ___llmod 1AB2                    ___lwdiv 00D6  
                  ___lwmod 19A7          __end_of_conversor 1BBD            __size_of_enviar 006B  
          __size_of_fround 020B            ?_Lcd_Set_Cursor 0074                    __ptext1 153E  
                  __ptext2 0940                    __ptext3 1B08                    __ptext4 1C7F  
                  __ptext5 189D                    __ptext6 10AB                    __ptext7 19A7  
                  __ptext8 00D6                    __ptext9 0883                ?__div_to_l_ 0070  
                  _dpowers 007B                    _isdigit 189D                 ??___xxtofl 0074  
                  _recibir 1869           ___awmod@dividend 0072                    _spiInit 18AF  
                  _spiRead 1000                    _retorno 00DC                    _sprintf 153E  
                  clrloop0 1862     __end_of_Lcd_Write_Char 1913       end_of_initialization 07FC  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  _RCSTAbits 0018  
                  psplit$0 D0034                  Lcd_Port@a 0070             __tdiv_to_l_@f1 0070  
           __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078                  _PORTCbits 0007  
                _PORTEbits 0009                ___fladd@grs 0065              ___xxtofl@sign 0078  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
              ___flmul@grs 0032                ?_conversor2 003E                  _TXSTAbits 0098  
      __size_of__div_to_l_ 00BE                  _Lcd_Clear 187F             _spiReceiveWait 0800  
           __end_of___flge 10AB             __end_of___fleq 1AB2             __end_of___wmul 1980  
         _Lcd_Write_String 1A22          pnum$text1_split_1 0034                _BAUDCTLbits 0187  
           __end_of_enviar 1D53             __end_of_fround 12B6        start_initialization 07DE  
      __end_of__tdiv_to_l_ 0940          __size_of_Lcd_Init 0041          __size_of_Lcd_Port 0006  
          ___llmod@divisor 0020            ___llmod@counter 0029     __end_of_spiReceiveWait 0807  
               ?_Lcd_Clear 0070                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 1980                __pdataBANK0 006E  
                 ??_enviar 0072            Lcd_Write_Char@a 0072                   ??_fround 0042  
            sprintf@tmpval 00B3                  ___fladd@a 0056                  ___fladd@b 0052  
      __size_of_conversor2 005C                 fround@prec 0051                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 0066                  ___flsub@b 006A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
   __size_of_Config_USARTT 0011          __size_of___xxtofl 00BA               _isdigit$1034 0070  
                 ?_Lcd_Cmd 0070                sprintf@flag 00AF                sprintf@eexp 00BB  
              sprintf@fval 00BD                sprintf@prec 00C2           ___lwdiv@dividend 0078  
          ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0075                   ?___fladd 0052  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 0066                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0020                  __npowers_ 0047  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
                __pstrings 0003                __tdiv_to_l_ 0883               ??__div_to_l_ 0078  
                _conversor 1B61                   ?_isdigit 0070                   ?_recibir 0070  
                 ?_spiInit 0070                   ?_spiRead 0070           ___lwdiv@quotient 007B  
                 ?_sprintf 00A0             __size_of_scale 035F             __size_of_setup 0019  
     spiInit@sTransmitEdge 0072             ___wmul@product 0074                  clear_ram0 1861  
                 _PIE1bits 008C         spiInit@sDataSample 0070                   Lcd_Cmd@a 0073  
       __end_of__div_to_l_ 01D8              _Config_USARTT 188C                ??_Lcd_Clear 0074  
              __stringbase 0012          ___wmul@multiplier 0070                 ?_conversor 003E  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 19E1                   _Lcd_Port 185B  
 __end_of_Lcd_Write_String 1A64               ??_conversor2 0042           __size_of_Lcd_Cmd 001A  
           ?_Config_USARTT 0070                ??__Umul8_16 0072           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0024           __size_of___fltol 007C  
         __size_of___lldiv 0066           __size_of___llmod 0056           __size_of___lwdiv 0044  
         __size_of___lwmod 003A                _fround$1214 004D                _fround$1215 0049  
       __end_of__stringtab 0013                 sprintf@val 00B7         __end_of_conversor2 1C19  
                 ___xxtofl 1D53           __size_of_isdigit 0012           __size_of_recibir 000B  
          ___lwdiv@divisor 0076            ___lwdiv@counter 007D                   __ptext10 011A  
                 __ptext11 195B                   __ptext20 1000                   __ptext12 1AB2  
                 __ptext21 0800                   __ptext13 1C19                   __ptext30 1980  
                 __ptext22 18AF                   __ptext14 0807                   __ptext31 1A22  
                 __ptext23 18C5                   __ptext15 1937                   __ptext32 18F8  
                 __ptext24 1869                   __ptext16 12B6                   __ptext33 1913  
                 __ptext25 1CE8                   __ptext17 1874                   __ptext34 19E1  
                 __ptext26 1BBD                   __ptext18 1009                   __ptext35 187F  
                 __ptext27 1B61                   __ptext19 1A64                   __ptext36 18DE  
                 __ptext28 1D53                   __ptext37 185B                   __ptext29 0C9F  
                 __ptext38 188C           __size_of_spiInit 0016           __size_of_spiRead 0009  
                 __powers_ 0013           __size_of_sprintf F2A0              __size_of_main 01F3  
                pnum$text1 000D               spiInit@sType 0073             conversor2@val2 0046  
        spiInit@sClockIdle 0071                ??_conversor 0042                 _INTCONbits 000B  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00AE  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C1  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
         ??_spiReceiveWait 0070            ??_Config_USARTT 0070                  stringcode 000D  
       Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070  
                 sprintf@c 00C4                   sprintf@f 00A0           ___lldiv@quotient 0079  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 000D  
                 stringtab 0003              ___fladd@signs 0062               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
