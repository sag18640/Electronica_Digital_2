

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 16:00:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F887 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  0087                     	;# 
   134  0088                     	;# 
   135  0089                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  0105                     	;# 
   159  0107                     	;# 
   160  0108                     	;# 
   161  0109                     	;# 
   162  010C                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  0185                     	;# 
   168  0187                     	;# 
   169  0188                     	;# 
   170  0189                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008F                     	;# 
   218  0090                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  0105                     	;# 
   237  0107                     	;# 
   238  0108                     	;# 
   239  0109                     	;# 
   240  010C                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0185                     	;# 
   246  0187                     	;# 
   247  0188                     	;# 
   248  0189                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0088                     	;# 
   291  0089                     	;# 
   292  008C                     	;# 
   293  008D                     	;# 
   294  008E                     	;# 
   295  008F                     	;# 
   296  0090                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0094                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0097                     	;# 
   306  0098                     	;# 
   307  0099                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  0105                     	;# 
   315  0107                     	;# 
   316  0108                     	;# 
   317  0109                     	;# 
   318  010C                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  0185                     	;# 
   324  0187                     	;# 
   325  0188                     	;# 
   326  0189                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0008                     	;# 
   338  0009                     	;# 
   339  000A                     	;# 
   340  000B                     	;# 
   341  000C                     	;# 
   342  000D                     	;# 
   343  000E                     	;# 
   344  000E                     	;# 
   345  000F                     	;# 
   346  0010                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0013                     	;# 
   350  0014                     	;# 
   351  0015                     	;# 
   352  0015                     	;# 
   353  0016                     	;# 
   354  0017                     	;# 
   355  0018                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001B                     	;# 
   359  001B                     	;# 
   360  001C                     	;# 
   361  001D                     	;# 
   362  001E                     	;# 
   363  001F                     	;# 
   364  0081                     	;# 
   365  0085                     	;# 
   366  0086                     	;# 
   367  0087                     	;# 
   368  0088                     	;# 
   369  0089                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  008F                     	;# 
   374  0090                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  0105                     	;# 
   393  0107                     	;# 
   394  0108                     	;# 
   395  0109                     	;# 
   396  010C                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  0185                     	;# 
   402  0187                     	;# 
   403  0188                     	;# 
   404  0189                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0008                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  0081                     	;# 
   443  0085                     	;# 
   444  0086                     	;# 
   445  0087                     	;# 
   446  0088                     	;# 
   447  0089                     	;# 
   448  008C                     	;# 
   449  008D                     	;# 
   450  008E                     	;# 
   451  008F                     	;# 
   452  0090                     	;# 
   453  0091                     	;# 
   454  0092                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0093                     	;# 
   458  0094                     	;# 
   459  0095                     	;# 
   460  0096                     	;# 
   461  0097                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009A                     	;# 
   465  009B                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  009F                     	;# 
   470  0105                     	;# 
   471  0107                     	;# 
   472  0108                     	;# 
   473  0109                     	;# 
   474  010C                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  0185                     	;# 
   480  0187                     	;# 
   481  0188                     	;# 
   482  0189                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485                           
   486                           	psect	idataCOMMON
   487  07FE                     __pidataCOMMON:
   488                           
   489                           ;initializer for _turno
   490  07FE  3401               	retlw	1
   491                           
   492                           ;initializer for _flag
   493  07FF  3401               	retlw	1
   494                           
   495                           	psect	strings
   496  0800                     __pstrings:
   497  0800                     stringtab:
   498  0800                     __stringtab:
   499                           
   500                           ;	String table - string pointers are 1 byte each
   501  0800  1BFF               	btfsc	btemp+1,7
   502  0801  280A               	ljmp	stringcode
   503  0802  1383               	bcf	3,7
   504  0803  187F               	btfsc	btemp+1,0
   505  0804  1783               	bsf	3,7
   506  0805  0800               	movf	0,w
   507  0806  0A84               	incf	4,f
   508  0807  1903               	skipnz
   509  0808  0AFF               	incf	btemp+1,f
   510  0809  0008               	return
   511  080A                     stringcode:
   512  080A                     stringdir:
   513  080A  3008               	movlw	high stringdir
   514  080B  008A               	movwf	10
   515  080C  0804               	movf	4,w
   516  080D  0A84               	incf	4,f
   517  080E  0782               	addwf	2,f
   518  080F                     __stringbase:
   519  080F  3400               	retlw	0
   520  0810                     __end_of__stringtab:
   521  0810                     __powers_:
   522  0810  3400               	retlw	0
   523  0811  3400               	retlw	0
   524  0812  3480               	retlw	128
   525  0813  343F               	retlw	63
   526  0814  3400               	retlw	0
   527  0815  3400               	retlw	0
   528  0816  3420               	retlw	32
   529  0817  3441               	retlw	65
   530  0818  3400               	retlw	0
   531  0819  3400               	retlw	0
   532  081A  34C8               	retlw	200
   533  081B  3442               	retlw	66
   534  081C  3400               	retlw	0
   535  081D  3400               	retlw	0
   536  081E  347A               	retlw	122
   537  081F  3444               	retlw	68
   538  0820  3400               	retlw	0
   539  0821  3440               	retlw	64
   540  0822  341C               	retlw	28
   541  0823  3446               	retlw	70
   542  0824  3400               	retlw	0
   543  0825  3450               	retlw	80
   544  0826  34C3               	retlw	195
   545  0827  3447               	retlw	71
   546  0828  3400               	retlw	0
   547  0829  3424               	retlw	36
   548  082A  3474               	retlw	116
   549  082B  3449               	retlw	73
   550  082C  3480               	retlw	128
   551  082D  3496               	retlw	150
   552  082E  3418               	retlw	24
   553  082F  344B               	retlw	75
   554  0830  3420               	retlw	32
   555  0831  34BC               	retlw	188
   556  0832  34BE               	retlw	190
   557  0833  344C               	retlw	76
   558  0834  3428               	retlw	40
   559  0835  346B               	retlw	107
   560  0836  346E               	retlw	110
   561  0837  344E               	retlw	78
   562  0838  34F9               	retlw	249
   563  0839  3402               	retlw	2
   564  083A  3415               	retlw	21
   565  083B  3450               	retlw	80
   566  083C  34EC               	retlw	236
   567  083D  3478               	retlw	120
   568  083E  34AD               	retlw	173
   569  083F  3460               	retlw	96
   570  0840  34CA               	retlw	202
   571  0841  34F2               	retlw	242
   572  0842  3449               	retlw	73
   573  0843  3471               	retlw	113
   574  0844                     __end_of__powers_:
   575  0844                     __npowers_:
   576  0844  3400               	retlw	0
   577  0845  3400               	retlw	0
   578  0846  3480               	retlw	128
   579  0847  343F               	retlw	63
   580  0848  34CD               	retlw	205
   581  0849  34CC               	retlw	204
   582  084A  34CC               	retlw	204
   583  084B  343D               	retlw	61
   584  084C  340A               	retlw	10
   585  084D  34D7               	retlw	215
   586  084E  3423               	retlw	35
   587  084F  343C               	retlw	60
   588  0850  346F               	retlw	111
   589  0851  3412               	retlw	18
   590  0852  3483               	retlw	131
   591  0853  343A               	retlw	58
   592  0854  3417               	retlw	23
   593  0855  34B7               	retlw	183
   594  0856  34D1               	retlw	209
   595  0857  3438               	retlw	56
   596  0858  34AC               	retlw	172
   597  0859  34C5               	retlw	197
   598  085A  3427               	retlw	39
   599  085B  3437               	retlw	55
   600  085C  34BD               	retlw	189
   601  085D  3437               	retlw	55
   602  085E  3486               	retlw	134
   603  085F  3435               	retlw	53
   604  0860  3495               	retlw	149
   605  0861  34BF               	retlw	191
   606  0862  34D6               	retlw	214
   607  0863  3433               	retlw	51
   608  0864  3477               	retlw	119
   609  0865  34CC               	retlw	204
   610  0866  342B               	retlw	43
   611  0867  3432               	retlw	50
   612  0868  345F               	retlw	95
   613  0869  3470               	retlw	112
   614  086A  3489               	retlw	137
   615  086B  3430               	retlw	48
   616  086C  34FF               	retlw	255
   617  086D  34E6               	retlw	230
   618  086E  34DB               	retlw	219
   619  086F  342E               	retlw	46
   620  0870  3408               	retlw	8
   621  0871  34E5               	retlw	229
   622  0872  343C               	retlw	60
   623  0873  341E               	retlw	30
   624  0874  3460               	retlw	96
   625  0875  3442               	retlw	66
   626  0876  34A2               	retlw	162
   627  0877  340D               	retlw	13
   628  0878                     __end_of__npowers_:
   629  0878                     _dpowers:
   630  0878  3401               	retlw	1
   631  0879  3400               	retlw	0
   632  087A  3400               	retlw	0
   633  087B  3400               	retlw	0
   634  087C  340A               	retlw	10
   635  087D  3400               	retlw	0
   636  087E  3400               	retlw	0
   637  087F  3400               	retlw	0
   638  0880  3464               	retlw	100
   639  0881  3400               	retlw	0
   640  0882  3400               	retlw	0
   641  0883  3400               	retlw	0
   642  0884  34E8               	retlw	232
   643  0885  3403               	retlw	3
   644  0886  3400               	retlw	0
   645  0887  3400               	retlw	0
   646  0888  3410               	retlw	16
   647  0889  3427               	retlw	39
   648  088A  3400               	retlw	0
   649  088B  3400               	retlw	0
   650  088C  34A0               	retlw	160
   651  088D  3486               	retlw	134
   652  088E  3401               	retlw	1
   653  088F  3400               	retlw	0
   654  0890  3440               	retlw	64
   655  0891  3442               	retlw	66
   656  0892  340F               	retlw	15
   657  0893  3400               	retlw	0
   658  0894  3480               	retlw	128
   659  0895  3496               	retlw	150
   660  0896  3498               	retlw	152
   661  0897  3400               	retlw	0
   662  0898  3400               	retlw	0
   663  0899  34E1               	retlw	225
   664  089A  34F5               	retlw	245
   665  089B  3405               	retlw	5
   666  089C  3400               	retlw	0
   667  089D  34CA               	retlw	202
   668  089E  349A               	retlw	154
   669  089F  343B               	retlw	59
   670  08A0                     __end_of_dpowers:
   671  0014                     _SSPCON	set	20
   672  0019                     _TXREG	set	25
   673  000B                     _INTCONbits	set	11
   674  0009                     _PORTEbits	set	9
   675  001A                     _RCREG	set	26
   676  0018                     _RCSTAbits	set	24
   677  000C                     _PIR1bits	set	12
   678  0006                     _PORTB	set	6
   679  0009                     _PORTE	set	9
   680  0008                     _PORTD	set	8
   681  0007                     _PORTCbits	set	7
   682  0013                     _SSPBUF	set	19
   683  0005                     _PORTA	set	5
   684  0094                     _SSPSTATbits	set	148
   685  0094                     _SSPSTAT	set	148
   686  008C                     _PIE1bits	set	140
   687  0099                     _SPBRG	set	153
   688  0098                     _TXSTAbits	set	152
   689  0085                     _TRISA	set	133
   690  0086                     _TRISB	set	134
   691  0089                     _TRISE	set	137
   692  0087                     _TRISC	set	135
   693  0088                     _TRISD	set	136
   694  043B                     _TRISC3	set	1083
   695  043D                     _TRISC5	set	1085
   696  04C1                     _TRMT	set	1217
   697  0187                     _BAUDCTLbits	set	391
   698  0188                     _ANSEL	set	392
   699  08A0                     STR_1:
   700  08A0  3453               	retlw	83	;'S'
   701  08A1  3431               	retlw	49	;'1'
   702  08A2  343A               	retlw	58	;':'
   703  08A3  3420               	retlw	32	;' '
   704  08A4  3420               	retlw	32	;' '
   705  08A5  3420               	retlw	32	;' '
   706  08A6  3453               	retlw	83	;'S'
   707  08A7  3432               	retlw	50	;'2'
   708  08A8  343A               	retlw	58	;':'
   709  08A9  3420               	retlw	32	;' '
   710  08AA  3420               	retlw	32	;' '
   711  08AB  3420               	retlw	32	;' '
   712  08AC  3420               	retlw	32	;' '
   713  08AD  3453               	retlw	83	;'S'
   714  08AE  3433               	retlw	51	;'3'
   715  08AF  343A               	retlw	58	;':'
   716  08B0  3400               	retlw	0
   717  08B1                     STR_2:
   718  08B1  3425               	retlw	37	;'%'
   719  08B2  3433               	retlw	51	;'3'
   720  08B3  342E               	retlw	46	;'.'
   721  08B4  3432               	retlw	50	;'2'
   722  08B5  3466               	retlw	102	;'f'
   723  08B6  3443               	retlw	67	;'C'
   724  08B7  3400               	retlw	0
   725  08B8                     STR_3:
   726  08B8  3425               	retlw	37	;'%'
   727  08B9  3433               	retlw	51	;'3'
   728  08BA  342E               	retlw	46	;'.'
   729  08BB  3432               	retlw	50	;'2'
   730  08BC  3466               	retlw	102	;'f'
   731  08BD  3456               	retlw	86	;'V'
   732  08BE  3400               	retlw	0
   733  08BF                     STR_4:
   734  08BF  3425               	retlw	37	;'%'
   735  08C0  3466               	retlw	102	;'f'
   736  08C1  3400               	retlw	0
   737                           
   738                           	psect	cinit
   739  000F                     start_initialization:	
   740                           ; #config settings
   741                           
   742  000F                     __initialization:
   743                           
   744                           ; Initialize objects allocated to COMMON
   745  000F  120A  118A  27FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   746  0014  00F8               	movwf	__pdataCOMMON& (0+127)
   747  0015  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   748  001A  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   749                           
   750                           ; Clear objects allocated to BANK3
   751  001B  1783               	bsf	3,7	;select IRP bank2
   752  001C  3090               	movlw	low __pbssBANK3
   753  001D  0084               	movwf	4
   754  001E  30C2               	movlw	low (__pbssBANK3+50)
   755  001F  160A  158A  2081  120A  118A  	fcall	clear_ram0
   756                           
   757                           ; Clear objects allocated to BANK1
   758  0024  1383               	bcf	3,7	;select IRP bank0
   759  0025  30D0               	movlw	low __pbssBANK1
   760  0026  0084               	movwf	4
   761  0027  30E5               	movlw	low (__pbssBANK1+21)
   762  0028  160A  158A  2081  120A  118A  	fcall	clear_ram0
   763                           
   764                           ; Clear objects allocated to BANK0
   765  002D  01ED               	clrf	__pbssBANK0& (0+127)
   766                           
   767                           ; Clear objects allocated to COMMON
   768  002E  01FA               	clrf	__pbssCOMMON& (0+127)
   769  002F                     end_of_initialization:	
   770                           ;End of C runtime variable initialization code
   771                           
   772  002F                     __end_of__initialization:
   773  002F  0183               	clrf	3
   774  0030  160A  118A  28B9   	ljmp	_main	;jump to C main() function
   775                           
   776                           	psect	bssCOMMON
   777  007A                     __pbssCOMMON:
   778  007A                     _retorno:
   779  007A                     	ds	1
   780                           
   781                           	psect	dataCOMMON
   782  0078                     __pdataCOMMON:
   783  0078                     _turno:
   784  0078                     	ds	1
   785  0079                     _flag:
   786  0079                     	ds	1
   787                           
   788                           	psect	bssBANK0
   789  006D                     __pbssBANK0:
   790  006D                     _valorT:
   791  006D                     	ds	1
   792                           
   793                           	psect	bssBANK1
   794  00D0                     __pbssBANK1:
   795  00D0                     _p:
   796  00D0                     	ds	4
   797  00D4                     _x:
   798  00D4                     	ds	4
   799  00D8                     _vv:
   800  00D8                     	ds	4
   801  00DC                     _v:
   802  00DC                     	ds	4
   803  00E0                     _enviado:
   804  00E0                     	ds	1
   805  00E1                     _recibido:
   806  00E1                     	ds	1
   807  00E2                     _count:
   808  00E2                     	ds	1
   809  00E3                     _valorA:
   810  00E3                     	ds	1
   811  00E4                     _valorC:
   812  00E4                     	ds	1
   813                           
   814                           	psect	bssBANK3
   815  0190                     __pbssBANK3:
   816  0190                     _l:
   817  0190                     	ds	25
   818  01A9                     _s:
   819  01A9                     	ds	25
   820                           
   821                           	psect	clrtext
   822  1881                     clear_ram0:	
   823                           ;	Called with FSR containing the base address, and
   824                           ;	W with the last address+1
   825                           
   826  1881  0064               	clrwdt	;clear the watchdog before getting into this loop
   827  1882                     clrloop0:
   828  1882  0180               	clrf	0	;clear RAM location pointed to by FSR
   829  1883  0A84               	incf	4,f	;increment pointer
   830  1884  0604               	xorwf	4,w	;XOR with final address
   831  1885  1903               	btfsc	3,2	;have we reached the end yet?
   832  1886  3400               	retlw	0	;all done for this memory range, return
   833  1887  0604               	xorwf	4,w	;XOR again to restore value
   834  1888  2882               	goto	clrloop0	;do the next byte
   835                           
   836                           	psect	cstackBANK1
   837  00A0                     __pcstackBANK1:
   838  00A0                     ?___flsub:
   839  00A0                     ___flsub@a:	
   840                           ; 4 bytes @ 0x0
   841                           
   842                           
   843                           ; 4 bytes @ 0x0
   844  00A0                     	ds	4
   845  00A4                     ___flsub@b:
   846                           
   847                           ; 4 bytes @ 0x4
   848  00A4                     	ds	4
   849  00A8                     ?_sprintf:
   850  00A8                     sprintf@f:	
   851                           ; 2 bytes @ 0x8
   852                           
   853                           
   854                           ; 1 bytes @ 0x8
   855  00A8                     	ds	5
   856  00AD                     ??_sprintf:
   857                           
   858                           ; 1 bytes @ 0xD
   859  00AD                     	ds	5
   860  00B2                     _sprintf$1274:
   861                           
   862                           ; 4 bytes @ 0x12
   863  00B2                     	ds	4
   864  00B6                     sprintf@ap:
   865                           
   866                           ; 1 bytes @ 0x16
   867  00B6                     	ds	1
   868  00B7                     sprintf@val:
   869                           
   870                           ; 4 bytes @ 0x17
   871  00B7                     	ds	4
   872  00BB                     sprintf@flag:
   873                           
   874                           ; 2 bytes @ 0x1B
   875  00BB                     	ds	2
   876  00BD                     sprintf@width:
   877                           
   878                           ; 2 bytes @ 0x1D
   879  00BD                     	ds	2
   880  00BF                     sprintf@tmpval:
   881                           
   882                           ; 4 bytes @ 0x1F
   883  00BF                     	ds	4
   884  00C3                     sprintf@eexp:
   885                           
   886                           ; 2 bytes @ 0x23
   887  00C3                     	ds	2
   888  00C5                     sprintf@fval:
   889                           
   890                           ; 4 bytes @ 0x25
   891  00C5                     	ds	4
   892  00C9                     sprintf@sp:
   893                           
   894                           ; 1 bytes @ 0x29
   895  00C9                     	ds	1
   896  00CA                     sprintf@prec:
   897                           
   898                           ; 2 bytes @ 0x2A
   899  00CA                     	ds	2
   900  00CC                     sprintf@c:
   901                           
   902                           ; 1 bytes @ 0x2C
   903  00CC                     	ds	1
   904  00CD                     ??_main:
   905                           
   906                           ; 1 bytes @ 0x2D
   907  00CD                     	ds	3
   908                           
   909                           	psect	cstackCOMMON
   910  0070                     __pcstackCOMMON:
   911  0070                     ?_isdigit:
   912  0070                     ?_setup:	
   913                           ; 1 bit 
   914                           
   915  0070                     ?_Config_USARTT:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_recibir:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_Lcd_Init:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_Lcd_Clear:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_spiRead:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ?_enviar:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_main:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ?_ISR:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     ??_ISR:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ?_Lcd_Port:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_Lcd_Cmd:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ?_Lcd_Write_Char:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ?_spiReceiveWait:	
   952                           ; 1 bytes @ 0x0
   953                           
   954                           
   955                           ; 1 bytes @ 0x0
   956  0070                     	ds	3
   957  0073                     ??_setup:
   958  0073                     ?_spiInit:	
   959                           ; 1 bytes @ 0x3
   960                           
   961  0073                     ??_Config_USARTT:	
   962                           ; 1 bytes @ 0x3
   963                           
   964  0073                     ??_recibir:	
   965                           ; 1 bytes @ 0x3
   966                           
   967  0073                     ??_spiRead:	
   968                           ; 1 bytes @ 0x3
   969                           
   970  0073                     ??_enviar:	
   971                           ; 1 bytes @ 0x3
   972                           
   973  0073                     ??_isdigit:	
   974                           ; 1 bytes @ 0x3
   975                           
   976  0073                     ??__tdiv_to_l_:	
   977                           ; 1 bytes @ 0x3
   978                           
   979  0073                     ??__div_to_l_:	
   980                           ; 1 bytes @ 0x3
   981                           
   982  0073                     ??_Lcd_Port:	
   983                           ; 1 bytes @ 0x3
   984                           
   985  0073                     ??_spiReceiveWait:	
   986                           ; 1 bytes @ 0x3
   987                           
   988  0073                     ??___lldiv:	
   989                           ; 1 bytes @ 0x3
   990                           
   991  0073                     ??___fleq:	
   992                           ; 1 bytes @ 0x3
   993                           
   994  0073                     ??___flge:	
   995                           ; 1 bytes @ 0x3
   996                           
   997  0073                     ??___llmod:	
   998                           ; 1 bytes @ 0x3
   999                           
  1000  0073                     ?__Umul8_16:	
  1001                           ; 1 bytes @ 0x3
  1002                           
  1003  0073                     ?___wmul:	
  1004                           ; 2 bytes @ 0x3
  1005                           
  1006  0073                     ?___awmod:	
  1007                           ; 2 bytes @ 0x3
  1008                           
  1009  0073                     ?___lwmod:	
  1010                           ; 2 bytes @ 0x3
  1011                           
  1012  0073                     ?___flneg:	
  1013                           ; 2 bytes @ 0x3
  1014                           
  1015  0073                     ?___xxtofl:	
  1016                           ; 4 bytes @ 0x3
  1017                           
  1018  0073                     Lcd_Port@a:	
  1019                           ; 4 bytes @ 0x3
  1020                           
  1021  0073                     enviar@valor:	
  1022                           ; 1 bytes @ 0x3
  1023                           
  1024  0073                     spiInit@sDataSample:	
  1025                           ; 1 bytes @ 0x3
  1026                           
  1027  0073                     __Umul8_16@multiplicand:	
  1028                           ; 1 bytes @ 0x3
  1029                           
  1030  0073                     _isdigit$1088:	
  1031                           ; 1 bytes @ 0x3
  1032                           
  1033  0073                     ___wmul@multiplier:	
  1034                           ; 1 bytes @ 0x3
  1035                           
  1036  0073                     ___awmod@divisor:	
  1037                           ; 2 bytes @ 0x3
  1038                           
  1039  0073                     ___lwmod@divisor:	
  1040                           ; 2 bytes @ 0x3
  1041                           
  1042  0073                     ___flneg@f1:	
  1043                           ; 2 bytes @ 0x3
  1044                           
  1045  0073                     ___xxtofl@val:	
  1046                           ; 4 bytes @ 0x3
  1047                           
  1048                           
  1049                           ; 4 bytes @ 0x3
  1050  0073                     	ds	1
  1051  0074                     ??_Lcd_Cmd:
  1052  0074                     ??_Lcd_Write_Char:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055  0074                     spiInit@sClockIdle:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058  0074                     ___llmod@counter:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061  0074                     isdigit@c:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0x4
  1066  0074                     	ds	1
  1067  0075                     ??__Umul8_16:
  1068  0075                     Lcd_Write_Char@a:	
  1069                           ; 1 bytes @ 0x5
  1070                           
  1071  0075                     spiInit@sTransmitEdge:	
  1072                           ; 1 bytes @ 0x5
  1073                           
  1074  0075                     ___wmul@multiplicand:	
  1075                           ; 1 bytes @ 0x5
  1076                           
  1077  0075                     ___awmod@dividend:	
  1078                           ; 2 bytes @ 0x5
  1079                           
  1080  0075                     ___lwmod@dividend:	
  1081                           ; 2 bytes @ 0x5
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0x5
  1085  0075                     	ds	1
  1086  0076                     ??_spiInit:
  1087  0076                     ?_Lcd_Write_String:	
  1088                           ; 1 bytes @ 0x6
  1089                           
  1090  0076                     Lcd_Cmd@a:	
  1091                           ; 1 bytes @ 0x6
  1092                           
  1093  0076                     spiInit@sType:	
  1094                           ; 1 bytes @ 0x6
  1095                           
  1096  0076                     Lcd_Write_String@a:	
  1097                           ; 1 bytes @ 0x6
  1098                           
  1099                           
  1100                           ; 2 bytes @ 0x6
  1101  0076                     	ds	1
  1102  0077                     ??_Lcd_Clear:
  1103  0077                     ?_Lcd_Set_Cursor:	
  1104                           ; 1 bytes @ 0x7
  1105                           
  1106  0077                     ??___wmul:	
  1107                           ; 1 bytes @ 0x7
  1108                           
  1109  0077                     ??___awmod:	
  1110                           ; 1 bytes @ 0x7
  1111                           
  1112  0077                     ??___flneg:	
  1113                           ; 1 bytes @ 0x7
  1114                           
  1115  0077                     ??___lwmod:	
  1116                           ; 1 bytes @ 0x7
  1117                           
  1118  0077                     Lcd_Set_Cursor@b:	
  1119                           ; 1 bytes @ 0x7
  1120                           
  1121                           
  1122                           ; 1 bytes @ 0x7
  1123  0077                     	ds	1
  1124  0078                     ??___flsub:
  1125                           
  1126                           	psect	cstackBANK0
  1127  0020                     __pcstackBANK0:	
  1128                           ; 1 bytes @ 0x8
  1129                           
  1130  0020                     ?___fleq:
  1131  0020                     ?___flge:	
  1132                           ; 1 bit 
  1133                           
  1134  0020                     ??_Lcd_Init:	
  1135                           ; 1 bit 
  1136                           
  1137  0020                     ??_Lcd_Set_Cursor:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0020                     ??_Lcd_Write_String:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0020                     ??___xxtofl:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0020                     ?__tdiv_to_l_:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0020                     ?__div_to_l_:	
  1150                           ; 4 bytes @ 0x0
  1151                           
  1152  0020                     ?___lldiv:	
  1153                           ; 4 bytes @ 0x0
  1154                           
  1155  0020                     ?___llmod:	
  1156                           ; 4 bytes @ 0x0
  1157                           
  1158  0020                     ___awmod@counter:	
  1159                           ; 4 bytes @ 0x0
  1160                           
  1161  0020                     ___lwmod@counter:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0020                     ___wmul@product:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0020                     __Umul8_16@product:	
  1168                           ; 2 bytes @ 0x0
  1169                           
  1170  0020                     ___lldiv@divisor:	
  1171                           ; 2 bytes @ 0x0
  1172                           
  1173  0020                     __div_to_l_@f1:	
  1174                           ; 4 bytes @ 0x0
  1175                           
  1176  0020                     ___fleq@ff1:	
  1177                           ; 4 bytes @ 0x0
  1178                           
  1179  0020                     ___flge@ff1:	
  1180                           ; 4 bytes @ 0x0
  1181                           
  1182  0020                     __tdiv_to_l_@f1:	
  1183                           ; 4 bytes @ 0x0
  1184                           
  1185  0020                     ___llmod@divisor:	
  1186                           ; 4 bytes @ 0x0
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0x0
  1190  0020                     	ds	1
  1191  0021                     ?___lwdiv:
  1192  0021                     Lcd_Set_Cursor@a:	
  1193                           ; 2 bytes @ 0x1
  1194                           
  1195  0021                     ___awmod@sign:	
  1196                           ; 1 bytes @ 0x1
  1197                           
  1198  0021                     ___lwdiv@divisor:	
  1199                           ; 1 bytes @ 0x1
  1200                           
  1201                           
  1202                           ; 2 bytes @ 0x1
  1203  0021                     	ds	1
  1204  0022                     ?___awdiv:
  1205  0022                     Lcd_Set_Cursor@temp:	
  1206                           ; 2 bytes @ 0x2
  1207                           
  1208  0022                     ___awdiv@divisor:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0022                     __Umul8_16@word_mpld:	
  1212                           ; 2 bytes @ 0x2
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x2
  1216  0022                     	ds	1
  1217  0023                     Lcd_Write_String@i:
  1218  0023                     ___lwdiv@dividend:	
  1219                           ; 2 bytes @ 0x3
  1220                           
  1221                           
  1222                           ; 2 bytes @ 0x3
  1223  0023                     	ds	1
  1224  0024                     __Umul8_16@multiplier:
  1225  0024                     ___xxtofl@sign:	
  1226                           ; 1 bytes @ 0x4
  1227                           
  1228  0024                     ___awdiv@dividend:	
  1229                           ; 1 bytes @ 0x4
  1230                           
  1231  0024                     ___lldiv@dividend:	
  1232                           ; 2 bytes @ 0x4
  1233                           
  1234  0024                     __div_to_l_@f2:	
  1235                           ; 4 bytes @ 0x4
  1236                           
  1237  0024                     ___fleq@ff2:	
  1238                           ; 4 bytes @ 0x4
  1239                           
  1240  0024                     ___flge@ff2:	
  1241                           ; 4 bytes @ 0x4
  1242                           
  1243  0024                     __tdiv_to_l_@f2:	
  1244                           ; 4 bytes @ 0x4
  1245                           
  1246  0024                     ___llmod@dividend:	
  1247                           ; 4 bytes @ 0x4
  1248                           
  1249                           
  1250                           ; 4 bytes @ 0x4
  1251  0024                     	ds	1
  1252  0025                     ??___lwdiv:
  1253  0025                     ___xxtofl@exp:	
  1254                           ; 1 bytes @ 0x5
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0x5
  1258  0025                     	ds	1
  1259  0026                     ??___awdiv:
  1260  0026                     ___lwdiv@counter:	
  1261                           ; 1 bytes @ 0x6
  1262                           
  1263  0026                     ___xxtofl@arg:	
  1264                           ; 1 bytes @ 0x6
  1265                           
  1266                           
  1267                           ; 4 bytes @ 0x6
  1268  0026                     	ds	1
  1269  0027                     ___awdiv@counter:
  1270  0027                     ___lwdiv@quotient:	
  1271                           ; 1 bytes @ 0x7
  1272                           
  1273                           
  1274                           ; 2 bytes @ 0x7
  1275  0027                     	ds	1
  1276  0028                     ___awdiv@sign:
  1277  0028                     ___lldiv@quotient:	
  1278                           ; 1 bytes @ 0x8
  1279                           
  1280  0028                     __div_to_l_@quot:	
  1281                           ; 4 bytes @ 0x8
  1282                           
  1283  0028                     __tdiv_to_l_@quot:	
  1284                           ; 4 bytes @ 0x8
  1285                           
  1286                           
  1287                           ; 4 bytes @ 0x8
  1288  0028                     	ds	1
  1289  0029                     ___awdiv@quotient:
  1290                           
  1291                           ; 2 bytes @ 0x9
  1292  0029                     	ds	2
  1293  002B                     ?___flmul:
  1294  002B                     ___flmul@b:	
  1295                           ; 4 bytes @ 0xB
  1296                           
  1297                           
  1298                           ; 4 bytes @ 0xB
  1299  002B                     	ds	1
  1300  002C                     ___lldiv@counter:
  1301  002C                     __div_to_l_@cntr:	
  1302                           ; 1 bytes @ 0xC
  1303                           
  1304  002C                     __tdiv_to_l_@cntr:	
  1305                           ; 1 bytes @ 0xC
  1306                           
  1307                           
  1308                           ; 1 bytes @ 0xC
  1309  002C                     	ds	1
  1310  002D                     __div_to_l_@exp1:
  1311  002D                     __tdiv_to_l_@exp1:	
  1312                           ; 1 bytes @ 0xD
  1313                           
  1314                           
  1315                           ; 1 bytes @ 0xD
  1316  002D                     	ds	2
  1317  002F                     ___flmul@a:
  1318                           
  1319                           ; 4 bytes @ 0xF
  1320  002F                     	ds	4
  1321  0033                     ??___flmul:
  1322                           
  1323                           ; 1 bytes @ 0x13
  1324  0033                     	ds	5
  1325  0038                     ___flmul@sign:
  1326                           
  1327                           ; 1 bytes @ 0x18
  1328  0038                     	ds	1
  1329  0039                     ___flmul@grs:
  1330                           
  1331                           ; 4 bytes @ 0x19
  1332  0039                     	ds	4
  1333  003D                     ___flmul@aexp:
  1334                           
  1335                           ; 1 bytes @ 0x1D
  1336  003D                     	ds	1
  1337  003E                     ___flmul@bexp:
  1338                           
  1339                           ; 1 bytes @ 0x1E
  1340  003E                     	ds	1
  1341  003F                     ___flmul@prod:
  1342                           
  1343                           ; 4 bytes @ 0x1F
  1344  003F                     	ds	4
  1345  0043                     ___flmul@temp:
  1346                           
  1347                           ; 2 bytes @ 0x23
  1348  0043                     	ds	2
  1349  0045                     ?_conversor2:
  1350  0045                     ?_conversor:	
  1351                           ; 4 bytes @ 0x25
  1352                           
  1353  0045                     ?_fround:	
  1354                           ; 4 bytes @ 0x25
  1355                           
  1356  0045                     ?_scale:	
  1357                           ; 4 bytes @ 0x25
  1358                           
  1359                           
  1360                           ; 4 bytes @ 0x25
  1361  0045                     	ds	4
  1362  0049                     ??_conversor2:
  1363  0049                     ??_conversor:	
  1364                           ; 1 bytes @ 0x29
  1365                           
  1366  0049                     ??_fround:	
  1367                           ; 1 bytes @ 0x29
  1368                           
  1369  0049                     ??_scale:	
  1370                           ; 1 bytes @ 0x29
  1371                           
  1372                           
  1373                           ; 1 bytes @ 0x29
  1374  0049                     	ds	4
  1375  004D                     conversor@val:
  1376  004D                     conversor2@val:	
  1377                           ; 1 bytes @ 0x2D
  1378                           
  1379                           
  1380                           ; 1 bytes @ 0x2D
  1381  004D                     	ds	3
  1382  0050                     _fround$1272:
  1383                           
  1384                           ; 4 bytes @ 0x30
  1385  0050                     	ds	3
  1386  0053                     _scale$1273:
  1387                           
  1388                           ; 4 bytes @ 0x33
  1389  0053                     	ds	1
  1390  0054                     _fround$1271:
  1391                           
  1392                           ; 4 bytes @ 0x34
  1393  0054                     	ds	3
  1394  0057                     scale@scl:
  1395                           
  1396                           ; 1 bytes @ 0x37
  1397  0057                     	ds	1
  1398  0058                     ?___fltol:
  1399  0058                     fround@prec:	
  1400                           ; 4 bytes @ 0x38
  1401                           
  1402  0058                     ___fltol@f1:	
  1403                           ; 1 bytes @ 0x38
  1404                           
  1405                           
  1406                           ; 4 bytes @ 0x38
  1407  0058                     	ds	1
  1408  0059                     ?___fladd:
  1409  0059                     ___fladd@b:	
  1410                           ; 4 bytes @ 0x39
  1411                           
  1412                           
  1413                           ; 4 bytes @ 0x39
  1414  0059                     	ds	3
  1415  005C                     ??___fltol:
  1416                           
  1417                           ; 1 bytes @ 0x3C
  1418  005C                     	ds	1
  1419  005D                     ___fladd@a:
  1420                           
  1421                           ; 4 bytes @ 0x3D
  1422  005D                     	ds	4
  1423  0061                     ??___fladd:
  1424  0061                     ___fltol@sign1:	
  1425                           ; 1 bytes @ 0x41
  1426                           
  1427                           
  1428                           ; 1 bytes @ 0x41
  1429  0061                     	ds	1
  1430  0062                     ___fltol@exp1:
  1431                           
  1432                           ; 1 bytes @ 0x42
  1433  0062                     	ds	7
  1434  0069                     ___fladd@signs:
  1435                           
  1436                           ; 1 bytes @ 0x49
  1437  0069                     	ds	1
  1438  006A                     ___fladd@aexp:
  1439                           
  1440                           ; 1 bytes @ 0x4A
  1441  006A                     	ds	1
  1442  006B                     ___fladd@bexp:
  1443                           
  1444                           ; 1 bytes @ 0x4B
  1445  006B                     	ds	1
  1446  006C                     ___fladd@grs:
  1447                           
  1448                           ; 1 bytes @ 0x4C
  1449  006C                     	ds	1
  1450                           
  1451                           	psect	maintext
  1452  10B9                     __pmaintext:	
  1453 ;;
  1454 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1455 ;;
  1456 ;; *************** function _main *****************
  1457 ;; Defined at:
  1458 ;;		line 67 in file "main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : B00/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0
  1474 ;;      Temps:          0       0       3       0       0
  1475 ;;      Totals:         0       0       3       0       0
  1476 ;;Total ram usage:        3 bytes
  1477 ;; Hardware stack levels required when called:    5
  1478 ;; This function calls:
  1479 ;;		_Config_USARTT
  1480 ;;		_Lcd_Clear
  1481 ;;		_Lcd_Init
  1482 ;;		_Lcd_Set_Cursor
  1483 ;;		_Lcd_Write_String
  1484 ;;		_conversor
  1485 ;;		_conversor2
  1486 ;;		_enviar
  1487 ;;		_recibir
  1488 ;;		_setup
  1489 ;;		_spiInit
  1490 ;;		_spiRead
  1491 ;;		_sprintf
  1492 ;; This function is called by:
  1493 ;;		Startup code after reset
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _main
  1499  10B9                     _main:
  1500  10B9                     l4473:	
  1501                           ;incstack = 0
  1502                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1503                           
  1504                           
  1505                           ;main.c: 68:     setup();
  1506  10B9  160A  158A  20CB  160A  118A  	fcall	_setup
  1507                           
  1508                           ;main.c: 69:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1509  10BE  01F3               	clrf	spiInit@sDataSample
  1510  10BF  01F4               	clrf	spiInit@sClockIdle
  1511  10C0  01F5               	clrf	spiInit@sTransmitEdge
  1512  10C1  3020               	movlw	32
  1513  10C2  160A  158A  20B5  160A  118A  	fcall	_spiInit
  1514                           
  1515                           ;main.c: 70:     Config_USARTT();
  1516  10C7  120A  158A  20C2  160A  118A  	fcall	_Config_USARTT
  1517  10CC                     l4475:
  1518                           
  1519                           ;main.c: 71:     recibir();
  1520  10CC  160A  158A  2092  160A  118A  	fcall	_recibir
  1521  10D1                     l4477:
  1522                           
  1523                           ;main.c: 72:     Lcd_Init();
  1524  10D1  160A  158A  2295  160A  118A  	fcall	_Lcd_Init
  1525  10D6                     l4479:
  1526                           
  1527                           ;main.c: 73:     Lcd_Clear();
  1528  10D6  160A  158A  20A8  160A  118A  	fcall	_Lcd_Clear
  1529  10DB                     l4481:
  1530                           
  1531                           ;main.c: 86:         Lcd_Set_Cursor(1, 1);
  1532  10DB  01F7               	clrf	Lcd_Set_Cursor@b
  1533  10DC  0AF7               	incf	Lcd_Set_Cursor@b,f
  1534  10DD  3001               	movlw	1
  1535  10DE  120A  118A  27D8  160A  118A  	fcall	_Lcd_Set_Cursor
  1536  10E3                     l4483:
  1537                           
  1538                           ;main.c: 87:         Lcd_Write_String("S1:   S2:    S3:");
  1539  10E3  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1540  10E4  00F6               	movwf	Lcd_Write_String@a
  1541  10E5  3080               	movlw	128
  1542  10E6  00F7               	movwf	Lcd_Write_String@a+1
  1543  10E7  160A  158A  2209  160A  118A  	fcall	_Lcd_Write_String
  1544  10EC                     l4485:
  1545                           
  1546                           ;main.c: 90:         PORTA = 0b00000110;
  1547  10EC  3006               	movlw	6
  1548  10ED  1283               	bcf	3,5	;RP0=0, select bank0
  1549  10EE  1303               	bcf	3,6	;RP1=0, select bank0
  1550  10EF  0085               	movwf	5	;volatile
  1551  10F0                     l4487:
  1552                           
  1553                           ;main.c: 91:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1554  10F0  3002               	movlw	2
  1555  10F1  1683               	bsf	3,5	;RP0=1, select bank1
  1556  10F2  1303               	bcf	3,6	;RP1=0, select bank1
  1557  10F3  00CF               	movwf	(??_main^(0+128)+2)
  1558  10F4  3004               	movlw	4
  1559  10F5  00CE               	movwf	(??_main^(0+128)+1)
  1560  10F6  30B9               	movlw	185
  1561  10F7  00CD               	movwf	??_main^(0+128)
  1562  10F8                     u7457:
  1563  10F8  0BCD               	decfsz	??_main^(0+128),f
  1564  10F9  28F8               	goto	u7457
  1565  10FA  0BCE               	decfsz	(??_main^(0+128)+1),f
  1566  10FB  28F8               	goto	u7457
  1567  10FC  0BCF               	decfsz	(??_main^(0+128)+2),f
  1568  10FD  28F8               	goto	u7457
  1569  10FE  28FF               	nop2
  1570  10FF                     l4489:
  1571                           
  1572                           ;main.c: 92:         SSPBUF = 0;
  1573  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  1574  1100  1303               	bcf	3,6	;RP1=0, select bank0
  1575  1101  0193               	clrf	19	;volatile
  1576  1102                     l4491:
  1577                           
  1578                           ;main.c: 93:         valorT = spiRead();
  1579  1102  160A  158A  2089  160A  118A  	fcall	_spiRead
  1580  1107  1683               	bsf	3,5	;RP0=1, select bank1
  1581  1108  1303               	bcf	3,6	;RP1=0, select bank1
  1582  1109  00CD               	movwf	??_main^(0+128)
  1583  110A  084D               	movf	??_main^(0+128),w
  1584  110B  1283               	bcf	3,5	;RP0=0, select bank0
  1585  110C  1303               	bcf	3,6	;RP1=0, select bank0
  1586  110D  00ED               	movwf	_valorT
  1587  110E                     l4493:
  1588                           
  1589                           ;main.c: 95:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1590  110E  3003               	movlw	3
  1591  110F  1683               	bsf	3,5	;RP0=1, select bank1
  1592  1110  1303               	bcf	3,6	;RP1=0, select bank1
  1593  1111  00CE               	movwf	(??_main^(0+128)+1)
  1594  1112  3097               	movlw	151
  1595  1113  00CD               	movwf	??_main^(0+128)
  1596  1114                     u7467:
  1597  1114  0BCD               	decfsz	??_main^(0+128),f
  1598  1115  2914               	goto	u7467
  1599  1116  0BCE               	decfsz	(??_main^(0+128)+1),f
  1600  1117  2914               	goto	u7467
  1601  1118                     l4495:
  1602                           
  1603                           ;main.c: 96:         PORTA = 0b00000111;
  1604  1118  3007               	movlw	7
  1605  1119  1283               	bcf	3,5	;RP0=0, select bank0
  1606  111A  1303               	bcf	3,6	;RP1=0, select bank0
  1607  111B  0085               	movwf	5	;volatile
  1608  111C                     l4497:
  1609                           
  1610                           ;main.c: 97:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1611  111C  3003               	movlw	3
  1612  111D  1683               	bsf	3,5	;RP0=1, select bank1
  1613  111E  1303               	bcf	3,6	;RP1=0, select bank1
  1614  111F  00CF               	movwf	(??_main^(0+128)+2)
  1615  1120  3008               	movlw	8
  1616  1121  00CE               	movwf	(??_main^(0+128)+1)
  1617  1122  3076               	movlw	118
  1618  1123  00CD               	movwf	??_main^(0+128)
  1619  1124                     u7477:
  1620  1124  0BCD               	decfsz	??_main^(0+128),f
  1621  1125  2924               	goto	u7477
  1622  1126  0BCE               	decfsz	(??_main^(0+128)+1),f
  1623  1127  2924               	goto	u7477
  1624  1128  0BCF               	decfsz	(??_main^(0+128)+2),f
  1625  1129  2924               	goto	u7477
  1626  112A  0000               	nop
  1627  112B                     l4499:
  1628                           
  1629                           ;main.c: 98:         Lcd_Set_Cursor(2, 11);
  1630  112B  300B               	movlw	11
  1631  112C  1683               	bsf	3,5	;RP0=1, select bank1
  1632  112D  1303               	bcf	3,6	;RP1=0, select bank1
  1633  112E  00CD               	movwf	??_main^(0+128)
  1634  112F  084D               	movf	??_main^(0+128),w
  1635  1130  00F7               	movwf	Lcd_Set_Cursor@b
  1636  1131  3002               	movlw	2
  1637  1132  120A  118A  27D8  160A  118A  	fcall	_Lcd_Set_Cursor
  1638  1137                     l4501:
  1639                           
  1640                           ;main.c: 99:         p = conversor2(valorT);
  1641  1137  1283               	bcf	3,5	;RP0=0, select bank0
  1642  1138  1303               	bcf	3,6	;RP1=0, select bank0
  1643  1139  086D               	movf	_valorT,w
  1644  113A  160A  158A  2489  160A  118A  	fcall	_conversor2
  1645  113F  1283               	bcf	3,5	;RP0=0, select bank0
  1646  1140  1303               	bcf	3,6	;RP1=0, select bank0
  1647  1141  0848               	movf	?_conversor2+3,w
  1648  1142  1683               	bsf	3,5	;RP0=1, select bank1
  1649  1143  1303               	bcf	3,6	;RP1=0, select bank1
  1650  1144  00D3               	movwf	(_p+3)^(0+128)
  1651  1145  1283               	bcf	3,5	;RP0=0, select bank0
  1652  1146  1303               	bcf	3,6	;RP1=0, select bank0
  1653  1147  0847               	movf	?_conversor2+2,w
  1654  1148  1683               	bsf	3,5	;RP0=1, select bank1
  1655  1149  1303               	bcf	3,6	;RP1=0, select bank1
  1656  114A  00D2               	movwf	(_p+2)^(0+128)
  1657  114B  1283               	bcf	3,5	;RP0=0, select bank0
  1658  114C  1303               	bcf	3,6	;RP1=0, select bank0
  1659  114D  0846               	movf	?_conversor2+1,w
  1660  114E  1683               	bsf	3,5	;RP0=1, select bank1
  1661  114F  1303               	bcf	3,6	;RP1=0, select bank1
  1662  1150  00D1               	movwf	(_p+1)^(0+128)
  1663  1151  1283               	bcf	3,5	;RP0=0, select bank0
  1664  1152  1303               	bcf	3,6	;RP1=0, select bank0
  1665  1153  0845               	movf	?_conversor2,w
  1666  1154  1683               	bsf	3,5	;RP0=1, select bank1
  1667  1155  1303               	bcf	3,6	;RP1=0, select bank1
  1668  1156  00D0               	movwf	_p^(0+128)
  1669  1157                     l4503:
  1670                           
  1671                           ;main.c: 100:         sprintf(s, "%3.2fC", p);
  1672  1157  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1673  1158  00CD               	movwf	??_main^(0+128)
  1674  1159  084D               	movf	??_main^(0+128),w
  1675  115A  00A8               	movwf	sprintf@f^(0+128)
  1676  115B  0853               	movf	(_p+3)^(0+128),w
  1677  115C  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1678  115D  0852               	movf	(_p+2)^(0+128),w
  1679  115E  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1680  115F  0851               	movf	(_p+1)^(0+128),w
  1681  1160  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1682  1161  0850               	movf	_p^(0+128),w
  1683  1162  00A9               	movwf	(?_sprintf^(0+128)+1)
  1684  1163  30A9               	movlw	(low (_s| (0+256)))& (0+255)
  1685  1164  160A  118A  24FC  160A  118A  	fcall	_sprintf
  1686  1169                     l4505:
  1687                           
  1688                           ;main.c: 101:         Lcd_Write_String(s);
  1689  1169  30A9               	movlw	(low (_s| (0+256)))& (0+255)
  1690  116A  00F6               	movwf	Lcd_Write_String@a
  1691  116B  3001               	movlw	1
  1692  116C  00F7               	movwf	Lcd_Write_String@a+1
  1693  116D  160A  158A  2209  160A  118A  	fcall	_Lcd_Write_String
  1694  1172                     l4507:
  1695                           
  1696                           ;main.c: 104:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1697  1172  3003               	movlw	3
  1698  1173  1683               	bsf	3,5	;RP0=1, select bank1
  1699  1174  1303               	bcf	3,6	;RP1=0, select bank1
  1700  1175  00CF               	movwf	(??_main^(0+128)+2)
  1701  1176  3008               	movlw	8
  1702  1177  00CE               	movwf	(??_main^(0+128)+1)
  1703  1178  3076               	movlw	118
  1704  1179  00CD               	movwf	??_main^(0+128)
  1705  117A                     u7487:
  1706  117A  0BCD               	decfsz	??_main^(0+128),f
  1707  117B  297A               	goto	u7487
  1708  117C  0BCE               	decfsz	(??_main^(0+128)+1),f
  1709  117D  297A               	goto	u7487
  1710  117E  0BCF               	decfsz	(??_main^(0+128)+2),f
  1711  117F  297A               	goto	u7487
  1712  1180  0000               	nop
  1713  1181                     l4509:
  1714                           
  1715                           ;main.c: 105:         PORTA = 0b00000101;
  1716  1181  3005               	movlw	5
  1717  1182  1283               	bcf	3,5	;RP0=0, select bank0
  1718  1183  1303               	bcf	3,6	;RP1=0, select bank0
  1719  1184  0085               	movwf	5	;volatile
  1720  1185                     l4511:
  1721                           
  1722                           ;main.c: 106:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1723  1185  3002               	movlw	2
  1724  1186  1683               	bsf	3,5	;RP0=1, select bank1
  1725  1187  1303               	bcf	3,6	;RP1=0, select bank1
  1726  1188  00CF               	movwf	(??_main^(0+128)+2)
  1727  1189  3004               	movlw	4
  1728  118A  00CE               	movwf	(??_main^(0+128)+1)
  1729  118B  30B9               	movlw	185
  1730  118C  00CD               	movwf	??_main^(0+128)
  1731  118D                     u7497:
  1732  118D  0BCD               	decfsz	??_main^(0+128),f
  1733  118E  298D               	goto	u7497
  1734  118F  0BCE               	decfsz	(??_main^(0+128)+1),f
  1735  1190  298D               	goto	u7497
  1736  1191  0BCF               	decfsz	(??_main^(0+128)+2),f
  1737  1192  298D               	goto	u7497
  1738  1193  2994               	nop2
  1739  1194                     l4513:
  1740                           
  1741                           ;main.c: 107:         SSPBUF = 1;
  1742  1194  3001               	movlw	1
  1743  1195  1283               	bcf	3,5	;RP0=0, select bank0
  1744  1196  1303               	bcf	3,6	;RP1=0, select bank0
  1745  1197  0093               	movwf	19	;volatile
  1746  1198                     l4515:
  1747                           
  1748                           ;main.c: 108:         valorA = spiRead();
  1749  1198  160A  158A  2089  160A  118A  	fcall	_spiRead
  1750  119D  1683               	bsf	3,5	;RP0=1, select bank1
  1751  119E  1303               	bcf	3,6	;RP1=0, select bank1
  1752  119F  00CD               	movwf	??_main^(0+128)
  1753  11A0  084D               	movf	??_main^(0+128),w
  1754  11A1  00E3               	movwf	_valorA^(0+128)
  1755  11A2                     l4517:
  1756                           
  1757                           ;main.c: 109:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1758  11A2  301A               	movlw	26
  1759  11A3  1683               	bsf	3,5	;RP0=1, select bank1
  1760  11A4  1303               	bcf	3,6	;RP1=0, select bank1
  1761  11A5  00CE               	movwf	(??_main^(0+128)+1)
  1762  11A6  30F7               	movlw	247
  1763  11A7  00CD               	movwf	??_main^(0+128)
  1764  11A8                     u7507:
  1765  11A8  0BCD               	decfsz	??_main^(0+128),f
  1766  11A9  29A8               	goto	u7507
  1767  11AA  0BCE               	decfsz	(??_main^(0+128)+1),f
  1768  11AB  29A8               	goto	u7507
  1769  11AC  29AD               	nop2
  1770  11AD                     l4519:
  1771                           
  1772                           ;main.c: 110:         PORTA = 0b00000111;
  1773  11AD  3007               	movlw	7
  1774  11AE  1283               	bcf	3,5	;RP0=0, select bank0
  1775  11AF  1303               	bcf	3,6	;RP1=0, select bank0
  1776  11B0  0085               	movwf	5	;volatile
  1777  11B1                     l4521:
  1778                           
  1779                           ;main.c: 111:         Lcd_Set_Cursor(2, 1);
  1780  11B1  01F7               	clrf	Lcd_Set_Cursor@b
  1781  11B2  0AF7               	incf	Lcd_Set_Cursor@b,f
  1782  11B3  3002               	movlw	2
  1783  11B4  120A  118A  27D8  160A  118A  	fcall	_Lcd_Set_Cursor
  1784  11B9                     l4523:
  1785                           
  1786                           ;main.c: 112:         v = conversor(valorA);
  1787  11B9  1683               	bsf	3,5	;RP0=1, select bank1
  1788  11BA  1303               	bcf	3,6	;RP1=0, select bank1
  1789  11BB  0863               	movf	_valorA^(0+128),w
  1790  11BC  160A  158A  242D  160A  118A  	fcall	_conversor
  1791  11C1  1283               	bcf	3,5	;RP0=0, select bank0
  1792  11C2  1303               	bcf	3,6	;RP1=0, select bank0
  1793  11C3  0848               	movf	?_conversor+3,w
  1794  11C4  1683               	bsf	3,5	;RP0=1, select bank1
  1795  11C5  1303               	bcf	3,6	;RP1=0, select bank1
  1796  11C6  00DF               	movwf	(_v+3)^(0+128)
  1797  11C7  1283               	bcf	3,5	;RP0=0, select bank0
  1798  11C8  1303               	bcf	3,6	;RP1=0, select bank0
  1799  11C9  0847               	movf	?_conversor+2,w
  1800  11CA  1683               	bsf	3,5	;RP0=1, select bank1
  1801  11CB  1303               	bcf	3,6	;RP1=0, select bank1
  1802  11CC  00DE               	movwf	(_v+2)^(0+128)
  1803  11CD  1283               	bcf	3,5	;RP0=0, select bank0
  1804  11CE  1303               	bcf	3,6	;RP1=0, select bank0
  1805  11CF  0846               	movf	?_conversor+1,w
  1806  11D0  1683               	bsf	3,5	;RP0=1, select bank1
  1807  11D1  1303               	bcf	3,6	;RP1=0, select bank1
  1808  11D2  00DD               	movwf	(_v+1)^(0+128)
  1809  11D3  1283               	bcf	3,5	;RP0=0, select bank0
  1810  11D4  1303               	bcf	3,6	;RP1=0, select bank0
  1811  11D5  0845               	movf	?_conversor,w
  1812  11D6  1683               	bsf	3,5	;RP0=1, select bank1
  1813  11D7  1303               	bcf	3,6	;RP1=0, select bank1
  1814  11D8  00DC               	movwf	_v^(0+128)
  1815  11D9                     l4525:
  1816                           
  1817                           ;main.c: 113:         sprintf(s, "%3.2fV", v);
  1818  11D9  30A9               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1819  11DA  00CD               	movwf	??_main^(0+128)
  1820  11DB  084D               	movf	??_main^(0+128),w
  1821  11DC  00A8               	movwf	sprintf@f^(0+128)
  1822  11DD  085F               	movf	(_v+3)^(0+128),w
  1823  11DE  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1824  11DF  085E               	movf	(_v+2)^(0+128),w
  1825  11E0  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1826  11E1  085D               	movf	(_v+1)^(0+128),w
  1827  11E2  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1828  11E3  085C               	movf	_v^(0+128),w
  1829  11E4  00A9               	movwf	(?_sprintf^(0+128)+1)
  1830  11E5  30A9               	movlw	(low (_s| (0+256)))& (0+255)
  1831  11E6  160A  118A  24FC  160A  118A  	fcall	_sprintf
  1832  11EB                     l4527:
  1833                           
  1834                           ;main.c: 114:         enviar(s);
  1835  11EB  30A9               	movlw	(low (_s| (0+256)))& (0+255)
  1836  11EC  160A  158A  21C7  160A  118A  	fcall	_enviar
  1837  11F1                     l4529:
  1838                           
  1839                           ;main.c: 115:         Lcd_Write_String(s);
  1840  11F1  30A9               	movlw	(low (_s| (0+256)))& (0+255)
  1841  11F2  00F6               	movwf	Lcd_Write_String@a
  1842  11F3  3001               	movlw	1
  1843  11F4  00F7               	movwf	Lcd_Write_String@a+1
  1844  11F5  160A  158A  2209  160A  118A  	fcall	_Lcd_Write_String
  1845  11FA                     l4531:
  1846                           
  1847                           ;main.c: 123:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1848  11FA  3003               	movlw	3
  1849  11FB  1683               	bsf	3,5	;RP0=1, select bank1
  1850  11FC  1303               	bcf	3,6	;RP1=0, select bank1
  1851  11FD  00CF               	movwf	(??_main^(0+128)+2)
  1852  11FE  3008               	movlw	8
  1853  11FF  00CE               	movwf	(??_main^(0+128)+1)
  1854  1200  3076               	movlw	118
  1855  1201  00CD               	movwf	??_main^(0+128)
  1856  1202                     u7517:
  1857  1202  0BCD               	decfsz	??_main^(0+128),f
  1858  1203  2A02               	goto	u7517
  1859  1204  0BCE               	decfsz	(??_main^(0+128)+1),f
  1860  1205  2A02               	goto	u7517
  1861  1206  0BCF               	decfsz	(??_main^(0+128)+2),f
  1862  1207  2A02               	goto	u7517
  1863  1208  0000               	nop
  1864  1209                     l4533:
  1865                           
  1866                           ;main.c: 124:         PORTA = 0b00000011;
  1867  1209  3003               	movlw	3
  1868  120A  1283               	bcf	3,5	;RP0=0, select bank0
  1869  120B  1303               	bcf	3,6	;RP1=0, select bank0
  1870  120C  0085               	movwf	5	;volatile
  1871  120D                     l4535:
  1872                           
  1873                           ;main.c: 125:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1874  120D  3002               	movlw	2
  1875  120E  1683               	bsf	3,5	;RP0=1, select bank1
  1876  120F  1303               	bcf	3,6	;RP1=0, select bank1
  1877  1210  00CF               	movwf	(??_main^(0+128)+2)
  1878  1211  3004               	movlw	4
  1879  1212  00CE               	movwf	(??_main^(0+128)+1)
  1880  1213  30B9               	movlw	185
  1881  1214  00CD               	movwf	??_main^(0+128)
  1882  1215                     u7527:
  1883  1215  0BCD               	decfsz	??_main^(0+128),f
  1884  1216  2A15               	goto	u7527
  1885  1217  0BCE               	decfsz	(??_main^(0+128)+1),f
  1886  1218  2A15               	goto	u7527
  1887  1219  0BCF               	decfsz	(??_main^(0+128)+2),f
  1888  121A  2A15               	goto	u7527
  1889  121B  2A1C               	nop2
  1890  121C                     l4537:
  1891                           
  1892                           ;main.c: 126:         SSPBUF = 2;
  1893  121C  3002               	movlw	2
  1894  121D  1283               	bcf	3,5	;RP0=0, select bank0
  1895  121E  1303               	bcf	3,6	;RP1=0, select bank0
  1896  121F  0093               	movwf	19	;volatile
  1897  1220                     l4539:
  1898                           
  1899                           ;main.c: 127:         valorC = spiRead();
  1900  1220  160A  158A  2089  160A  118A  	fcall	_spiRead
  1901  1225  1683               	bsf	3,5	;RP0=1, select bank1
  1902  1226  1303               	bcf	3,6	;RP1=0, select bank1
  1903  1227  00CD               	movwf	??_main^(0+128)
  1904  1228  084D               	movf	??_main^(0+128),w
  1905  1229  00E4               	movwf	_valorC^(0+128)
  1906  122A                     l4541:
  1907                           
  1908                           ;main.c: 128:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1909  122A  301A               	movlw	26
  1910  122B  1683               	bsf	3,5	;RP0=1, select bank1
  1911  122C  1303               	bcf	3,6	;RP1=0, select bank1
  1912  122D  00CE               	movwf	(??_main^(0+128)+1)
  1913  122E  30F7               	movlw	247
  1914  122F  00CD               	movwf	??_main^(0+128)
  1915  1230                     u7537:
  1916  1230  0BCD               	decfsz	??_main^(0+128),f
  1917  1231  2A30               	goto	u7537
  1918  1232  0BCE               	decfsz	(??_main^(0+128)+1),f
  1919  1233  2A30               	goto	u7537
  1920  1234  2A35               	nop2
  1921  1235                     l4543:
  1922                           
  1923                           ;main.c: 129:         PORTA = 0b00000111;
  1924  1235  3007               	movlw	7
  1925  1236  1283               	bcf	3,5	;RP0=0, select bank0
  1926  1237  1303               	bcf	3,6	;RP1=0, select bank0
  1927  1238  0085               	movwf	5	;volatile
  1928  1239                     l4545:
  1929                           
  1930                           ;main.c: 130:         Lcd_Set_Cursor(2, 7);
  1931  1239  3007               	movlw	7
  1932  123A  1683               	bsf	3,5	;RP0=1, select bank1
  1933  123B  1303               	bcf	3,6	;RP1=0, select bank1
  1934  123C  00CD               	movwf	??_main^(0+128)
  1935  123D  084D               	movf	??_main^(0+128),w
  1936  123E  00F7               	movwf	Lcd_Set_Cursor@b
  1937  123F  3002               	movlw	2
  1938  1240  120A  118A  27D8  160A  118A  	fcall	_Lcd_Set_Cursor
  1939  1245                     l4547:
  1940                           
  1941                           ;main.c: 131:         sprintf(l, "%f", valorC);
  1942  1245  30B0               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1943  1246  1683               	bsf	3,5	;RP0=1, select bank1
  1944  1247  1303               	bcf	3,6	;RP1=0, select bank1
  1945  1248  00CD               	movwf	??_main^(0+128)
  1946  1249  084D               	movf	??_main^(0+128),w
  1947  124A  00A8               	movwf	sprintf@f^(0+128)
  1948  124B  0864               	movf	_valorC^(0+128),w
  1949  124C  00CE               	movwf	(??_main+1)^(0+128)
  1950  124D  01CF               	clrf	((??_main+1)^(0+128)+1)
  1951  124E  084E               	movf	(??_main+1)^(0+128),w
  1952  124F  00A9               	movwf	(?_sprintf^(0+128)+1)
  1953  1250  084F               	movf	(??_main+2)^(0+128),w
  1954  1251  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1955  1252  3090               	movlw	(low (_l| (0+256)))& (0+255)
  1956  1253  160A  118A  24FC  160A  118A  	fcall	_sprintf
  1957  1258                     l4549:
  1958                           
  1959                           ;main.c: 132:         Lcd_Write_String(l);
  1960  1258  3090               	movlw	(low (_l| (0+256)))& (0+255)
  1961  1259  00F6               	movwf	Lcd_Write_String@a
  1962  125A  3001               	movlw	1
  1963  125B  00F7               	movwf	Lcd_Write_String@a+1
  1964  125C  160A  158A  2209  160A  118A  	fcall	_Lcd_Write_String
  1965  1261                     l4551:
  1966                           
  1967                           ;main.c: 133:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1968  1261  3002               	movlw	2
  1969  1262  1683               	bsf	3,5	;RP0=1, select bank1
  1970  1263  1303               	bcf	3,6	;RP1=0, select bank1
  1971  1264  00CF               	movwf	(??_main^(0+128)+2)
  1972  1265  3004               	movlw	4
  1973  1266  00CE               	movwf	(??_main^(0+128)+1)
  1974  1267  30B9               	movlw	185
  1975  1268  00CD               	movwf	??_main^(0+128)
  1976  1269                     u7547:
  1977  1269  0BCD               	decfsz	??_main^(0+128),f
  1978  126A  2A69               	goto	u7547
  1979  126B  0BCE               	decfsz	(??_main^(0+128)+1),f
  1980  126C  2A69               	goto	u7547
  1981  126D  0BCF               	decfsz	(??_main^(0+128)+2),f
  1982  126E  2A69               	goto	u7547
  1983  126F  2A70               	nop2
  1984  1270  28DB               	goto	l4481
  1985  1271  120A  118A  280C   	ljmp	start
  1986  1274                     __end_of_main:
  1987                           
  1988                           	psect	text1
  1989  14FC                     __ptext1:	
  1990 ;; *************** function _sprintf *****************
  1991 ;; Defined at:
  1992 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  sp              1    wreg     PTR unsigned char 
  1995 ;;		 -> l(25), s(25), 
  1996 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1997 ;;		 -> STR_4(3), STR_3(7), STR_2(7), 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  2000 ;;		 -> l(25), s(25), 
  2001 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  2002 ;;  tmpval          4   31[BANK1 ] struct .
  2003 ;;  val             4   23[BANK1 ] unsigned long 
  2004 ;;  prec            2   42[BANK1 ] int 
  2005 ;;  eexp            2   35[BANK1 ] int 
  2006 ;;  width           2   29[BANK1 ] int 
  2007 ;;  flag            2   27[BANK1 ] unsigned short 
  2008 ;;  cp              2    0        PTR const unsigned char 
  2009 ;;  len             2    0        unsigned int 
  2010 ;;  c               1   44[BANK1 ] unsigned char 
  2011 ;;  ap              1   22[BANK1 ] PTR void [1]
  2012 ;;		 -> ?_sprintf(2), 
  2013 ;;  d               1    0        unsigned char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  2    8[BANK1 ] int 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2023 ;;      Params:         0       0       5       0       0
  2024 ;;      Locals:         0       0      27       0       0
  2025 ;;      Temps:          0       0       5       0       0
  2026 ;;      Totals:         0       0      37       0       0
  2027 ;;Total ram usage:       37 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    4
  2030 ;; This function calls:
  2031 ;;		___awdiv
  2032 ;;		___fladd
  2033 ;;		___fleq
  2034 ;;		___flge
  2035 ;;		___flmul
  2036 ;;		___flneg
  2037 ;;		___flsub
  2038 ;;		___fltol
  2039 ;;		___lldiv
  2040 ;;		___llmod
  2041 ;;		___wmul
  2042 ;;		___xxtofl
  2043 ;;		__div_to_l_
  2044 ;;		__tdiv_to_l_
  2045 ;;		_fround
  2046 ;;		_isdigit
  2047 ;;		_scale
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function _sprintf
  2055  14FC                     _sprintf:
  2056                           
  2057                           ;incstack = 0
  2058                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2059                           ;sprintf@sp stored from wreg
  2060  14FC  1683               	bsf	3,5	;RP0=1, select bank1
  2061  14FD  1303               	bcf	3,6	;RP1=0, select bank1
  2062  14FE  00C9               	movwf	sprintf@sp^(0+128)
  2063  14FF                     l4205:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2066  14FF  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2067  1500  00AD               	movwf	??_sprintf^(0+128)
  2068  1501  082D               	movf	??_sprintf^(0+128),w
  2069  1502  00B6               	movwf	sprintf@ap^(0+128)
  2070  1503                     L1:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2073  1503  120A  118A  2DB2   	goto	l4455
  2074  1506                     l4207:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2077  1506  3025               	movlw	37
  2078  1507  064C               	xorwf	sprintf@c^(0+128),w
  2079  1508  1903               	btfsc	3,2
  2080  1509  2D0B               	goto	u6981
  2081  150A  2D0C               	goto	u6980
  2082  150B                     u6981:
  2083  150B  2D18               	goto	l4213
  2084  150C                     u6980:
  2085  150C                     l4209:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2088  150C  084C               	movf	sprintf@c^(0+128),w
  2089  150D  00AD               	movwf	??_sprintf^(0+128)
  2090  150E  0849               	movf	sprintf@sp^(0+128),w
  2091  150F  0084               	movwf	4
  2092  1510  082D               	movf	??_sprintf^(0+128),w
  2093  1511  1783               	bsf	3,7	;select IRP bank2
  2094  1512  0080               	movwf	0
  2095  1513                     l4211:
  2096  1513  3001               	movlw	1
  2097  1514  00AD               	movwf	??_sprintf^(0+128)
  2098  1515  082D               	movf	??_sprintf^(0+128),w
  2099  1516  07C9               	addwf	sprintf@sp^(0+128),f
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2102  1517  2D03               	goto	L1
  2103  1518                     l4213:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2106  1518  01BD               	clrf	sprintf@width^(0+128)
  2107  1519  01BE               	clrf	(sprintf@width+1)^(0+128)
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2110  151A  01BB               	clrf	sprintf@flag^(0+128)
  2111  151B  01BC               	clrf	(sprintf@flag+1)^(0+128)
  2112  151C                     l4215:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2115  151C  0828               	movf	sprintf@f^(0+128),w
  2116  151D  0084               	movwf	4
  2117  151E  120A  158A  200A  160A  118A  	fcall	stringdir
  2118  1523  160A  118A  2003  160A  118A  	fcall	_isdigit
  2119  1528  1C03               	btfss	3,0
  2120  1529  2D2B               	goto	u6991
  2121  152A  2D2C               	goto	u6990
  2122  152B                     u6991:
  2123  152B  2D6C               	goto	l4227
  2124  152C                     u6990:
  2125  152C                     l4217:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2128  152C  1683               	bsf	3,5	;RP0=1, select bank1
  2129  152D  1303               	bcf	3,6	;RP1=0, select bank1
  2130  152E  01BD               	clrf	sprintf@width^(0+128)
  2131  152F  01BE               	clrf	(sprintf@width+1)^(0+128)
  2132  1530                     l4219:
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2135  1530  300A               	movlw	10
  2136  1531  00F3               	movwf	___wmul@multiplier
  2137  1532  3000               	movlw	0
  2138  1533  00F4               	movwf	___wmul@multiplier+1
  2139  1534  1683               	bsf	3,5	;RP0=1, select bank1
  2140  1535  1303               	bcf	3,6	;RP1=0, select bank1
  2141  1536  083E               	movf	(sprintf@width+1)^(0+128),w
  2142  1537  00F6               	movwf	___wmul@multiplicand+1
  2143  1538  083D               	movf	sprintf@width^(0+128),w
  2144  1539  00F5               	movwf	___wmul@multiplicand
  2145  153A  160A  158A  2160  160A  118A  	fcall	___wmul
  2146  153F  0874               	movf	?___wmul+1,w
  2147  1540  1683               	bsf	3,5	;RP0=1, select bank1
  2148  1541  1303               	bcf	3,6	;RP1=0, select bank1
  2149  1542  00BE               	movwf	(sprintf@width+1)^(0+128)
  2150  1543  0873               	movf	?___wmul,w
  2151  1544  00BD               	movwf	sprintf@width^(0+128)
  2152  1545                     l4221:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2155  1545  0828               	movf	sprintf@f^(0+128),w
  2156  1546  0084               	movwf	4
  2157  1547  120A  158A  200A  160A  118A  	fcall	stringdir
  2158  154C  3ED0               	addlw	208
  2159  154D  00AD               	movwf	??_sprintf^(0+128)
  2160  154E  30FF               	movlw	255
  2161  154F  1803               	skipnc
  2162  1550  3000               	movlw	0
  2163  1551  00AE               	movwf	(??_sprintf^(0+128)+1)
  2164  1552  082D               	movf	??_sprintf^(0+128),w
  2165  1553  07BD               	addwf	sprintf@width^(0+128),f
  2166  1554  1803               	skipnc
  2167  1555  0ABE               	incf	(sprintf@width+1)^(0+128),f
  2168  1556  082E               	movf	(??_sprintf+1)^(0+128),w
  2169  1557  07BE               	addwf	(sprintf@width+1)^(0+128),f
  2170  1558                     l4223:
  2171  1558  3001               	movlw	1
  2172  1559  00AD               	movwf	??_sprintf^(0+128)
  2173  155A  082D               	movf	??_sprintf^(0+128),w
  2174  155B  07A8               	addwf	sprintf@f^(0+128),f
  2175  155C                     l4225:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2178  155C  0828               	movf	sprintf@f^(0+128),w
  2179  155D  0084               	movwf	4
  2180  155E  120A  158A  200A  160A  118A  	fcall	stringdir
  2181  1563  160A  118A  2003  160A  118A  	fcall	_isdigit
  2182  1568  1803               	btfsc	3,0
  2183  1569  2D6B               	goto	u7001
  2184  156A  2D6C               	goto	u7000
  2185  156B                     u7001:
  2186  156B  2D30               	goto	l4219
  2187  156C                     u7000:
  2188  156C                     l4227:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2191  156C  1683               	bsf	3,5	;RP0=1, select bank1
  2192  156D  1303               	bcf	3,6	;RP1=0, select bank1
  2193  156E  0828               	movf	sprintf@f^(0+128),w
  2194  156F  0084               	movwf	4
  2195  1570  120A  158A  200A  160A  118A  	fcall	stringdir
  2196  1575  3A2E               	xorlw	46
  2197  1576  1D03               	skipz
  2198  1577  2D79               	goto	u7011
  2199  1578  2D7A               	goto	u7010
  2200  1579                     u7011:
  2201  1579  2DBF               	goto	l4243
  2202  157A                     u7010:
  2203  157A                     l4229:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2206  157A  173C               	bsf	(sprintf@flag^(0+128)+1),6
  2207  157B                     l4231:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2210  157B  3001               	movlw	1
  2211  157C  00AD               	movwf	??_sprintf^(0+128)
  2212  157D  082D               	movf	??_sprintf^(0+128),w
  2213  157E  07A8               	addwf	sprintf@f^(0+128),f
  2214  157F                     l4233:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2217  157F  01CA               	clrf	sprintf@prec^(0+128)
  2218  1580  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2221  1581  2DAE               	goto	l4241
  2222  1582                     l4235:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2225  1582  300A               	movlw	10
  2226  1583  00F3               	movwf	___wmul@multiplier
  2227  1584  3000               	movlw	0
  2228  1585  00F4               	movwf	___wmul@multiplier+1
  2229  1586  1683               	bsf	3,5	;RP0=1, select bank1
  2230  1587  1303               	bcf	3,6	;RP1=0, select bank1
  2231  1588  084B               	movf	(sprintf@prec+1)^(0+128),w
  2232  1589  00F6               	movwf	___wmul@multiplicand+1
  2233  158A  084A               	movf	sprintf@prec^(0+128),w
  2234  158B  00F5               	movwf	___wmul@multiplicand
  2235  158C  160A  158A  2160  160A  118A  	fcall	___wmul
  2236  1591  0874               	movf	?___wmul+1,w
  2237  1592  1683               	bsf	3,5	;RP0=1, select bank1
  2238  1593  1303               	bcf	3,6	;RP1=0, select bank1
  2239  1594  00CB               	movwf	(sprintf@prec+1)^(0+128)
  2240  1595  0873               	movf	?___wmul,w
  2241  1596  00CA               	movwf	sprintf@prec^(0+128)
  2242  1597                     l4237:
  2243                           
  2244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2245  1597  0828               	movf	sprintf@f^(0+128),w
  2246  1598  0084               	movwf	4
  2247  1599  120A  158A  200A  160A  118A  	fcall	stringdir
  2248  159E  3ED0               	addlw	208
  2249  159F  00AD               	movwf	??_sprintf^(0+128)
  2250  15A0  30FF               	movlw	255
  2251  15A1  1803               	skipnc
  2252  15A2  3000               	movlw	0
  2253  15A3  00AE               	movwf	(??_sprintf^(0+128)+1)
  2254  15A4  082D               	movf	??_sprintf^(0+128),w
  2255  15A5  07CA               	addwf	sprintf@prec^(0+128),f
  2256  15A6  1803               	skipnc
  2257  15A7  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  2258  15A8  082E               	movf	(??_sprintf+1)^(0+128),w
  2259  15A9  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  2260  15AA                     l4239:
  2261  15AA  3001               	movlw	1
  2262  15AB  00AD               	movwf	??_sprintf^(0+128)
  2263  15AC  082D               	movf	??_sprintf^(0+128),w
  2264  15AD  07A8               	addwf	sprintf@f^(0+128),f
  2265  15AE                     l4241:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2268  15AE  0828               	movf	sprintf@f^(0+128),w
  2269  15AF  0084               	movwf	4
  2270  15B0  120A  158A  200A  160A  118A  	fcall	stringdir
  2271  15B5  160A  118A  2003  160A  118A  	fcall	_isdigit
  2272  15BA  1803               	btfsc	3,0
  2273  15BB  2DBD               	goto	u7021
  2274  15BC  2DBE               	goto	u7020
  2275  15BD                     u7021:
  2276  15BD  2D82               	goto	l4235
  2277  15BE                     u7020:
  2278  15BE  2DC5               	goto	l4249
  2279  15BF                     l4243:
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2282  15BF  01CA               	clrf	sprintf@prec^(0+128)
  2283  15C0  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2284  15C1                     l4245:
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2287  15C1  163C               	bsf	(sprintf@flag^(0+128)+1),4
  2288  15C2  2DC5               	goto	l4249
  2289  15C3                     l351:	
  2290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2291                           
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2294  15C3  153C               	bsf	(sprintf@flag^(0+128)+1),2
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2297  15C4  2DE1               	goto	l4251
  2298  15C5                     l4249:
  2299  15C5  3001               	movlw	1
  2300  15C6  1683               	bsf	3,5	;RP0=1, select bank1
  2301  15C7  1303               	bcf	3,6	;RP1=0, select bank1
  2302  15C8  07A8               	addwf	sprintf@f^(0+128),f
  2303  15C9  30FF               	movlw	-1
  2304  15CA  0728               	addwf	sprintf@f^(0+128),w
  2305  15CB  0084               	movwf	4
  2306  15CC  120A  158A  200A  160A  118A  	fcall	stringdir
  2307  15D1  00CC               	movwf	sprintf@c^(0+128)
  2308  15D2  00AD               	movwf	??_sprintf^(0+128)
  2309  15D3  01AE               	clrf	(??_sprintf^(0+128)+1)
  2310                           
  2311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2312                           ; Switch size 1, requested type "simple"
  2313                           ; Number of cases is 1, Range of values is 0 to 0
  2314                           ; switch strategies available:
  2315                           ; Name         Instructions Cycles
  2316                           ; simple_byte            4     3 (average)
  2317                           ; direct_byte           11     8 (fixed)
  2318                           ; jumptable            260     6 (fixed)
  2319                           ;	Chosen strategy is simple_byte
  2320  15D4  082E               	movf	(??_sprintf+1)^(0+128),w
  2321  15D5  3A00               	xorlw	0	; case 0
  2322  15D6  1903               	skipnz
  2323  15D7  2DD9               	goto	l4583
  2324  15D8  2D03               	goto	L1
  2325  15D9                     l4583:
  2326                           
  2327                           ; Switch size 1, requested type "simple"
  2328                           ; Number of cases is 2, Range of values is 0 to 102
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte            7     4 (average)
  2332                           ; jumptable            260     6 (fixed)
  2333                           ;	Chosen strategy is simple_byte
  2334  15D9  082D               	movf	??_sprintf^(0+128),w
  2335  15DA  3A00               	xorlw	0	; case 0
  2336  15DB  1903               	skipnz
  2337  15DC  2FFD               	goto	L3
  2338  15DD  3A66               	xorlw	102	; case 102
  2339  15DE  1903               	skipnz
  2340  15DF  2DC3               	goto	l351
  2341  15E0  2D03               	goto	L1
  2342  15E1                     l4251:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2345  15E1  3000               	movlw	0
  2346  15E2  053B               	andwf	sprintf@flag^(0+128),w
  2347  15E3  00AD               	movwf	??_sprintf^(0+128)
  2348  15E4  3007               	movlw	7
  2349  15E5  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2350  15E6  00AE               	movwf	(??_sprintf+1)^(0+128)
  2351  15E7  082D               	movf	??_sprintf^(0+128),w
  2352  15E8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2353  15E9  1903               	btfsc	3,2
  2354  15EA  2DEC               	goto	u7031
  2355  15EB  2DEF               	goto	u7030
  2356  15EC                     u7031:
  2357  15EC  120A  118A  2CED   	goto	l4409
  2358  15EF                     u7030:
  2359  15EF                     l4253:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2362  15EF  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  2363  15F0  2DF2               	goto	u7041
  2364  15F1  2DF3               	goto	u7040
  2365  15F2                     u7041:
  2366  15F2  2DF7               	goto	l4257
  2367  15F3                     u7040:
  2368  15F3                     l4255:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2371  15F3  3006               	movlw	6
  2372  15F4  00CA               	movwf	sprintf@prec^(0+128)
  2373  15F5  3000               	movlw	0
  2374  15F6  00CB               	movwf	(sprintf@prec^(0+128)+1)
  2375  15F7                     l4257:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2378  15F7  0836               	movf	sprintf@ap^(0+128),w
  2379  15F8  0084               	movwf	4
  2380  15F9  1383               	bcf	3,7	;select IRP bank0
  2381  15FA  0800               	movf	0,w
  2382  15FB  00C5               	movwf	sprintf@fval^(0+128)
  2383  15FC  0A84               	incf	4,f
  2384  15FD  0800               	movf	0,w
  2385  15FE  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2386  15FF  0A84               	incf	4,f
  2387  1600  0800               	movf	0,w
  2388  1601  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2389  1602  0A84               	incf	4,f
  2390  1603  0800               	movf	0,w
  2391  1604  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2392  1605                     l4259:
  2393  1605  3004               	movlw	4
  2394  1606  00AD               	movwf	??_sprintf^(0+128)
  2395  1607  082D               	movf	??_sprintf^(0+128),w
  2396  1608  07B6               	addwf	sprintf@ap^(0+128),f
  2397  1609                     l4261:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2400  1609  0848               	movf	(sprintf@fval+3)^(0+128),w
  2401  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2402  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2403  160C  00A3               	movwf	___flge@ff1+3
  2404  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2405  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2406  160F  0847               	movf	(sprintf@fval+2)^(0+128),w
  2407  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2408  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2409  1612  00A2               	movwf	___flge@ff1+2
  2410  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2411  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2412  1615  0846               	movf	(sprintf@fval+1)^(0+128),w
  2413  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2414  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2415  1618  00A1               	movwf	___flge@ff1+1
  2416  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2417  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2418  161B  0845               	movf	sprintf@fval^(0+128),w
  2419  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2420  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2421  161E  00A0               	movwf	___flge@ff1
  2422  161F  3000               	movlw	0
  2423  1620  00A7               	movwf	___flge@ff2+3
  2424  1621  3000               	movlw	0
  2425  1622  00A6               	movwf	___flge@ff2+2
  2426  1623  3000               	movlw	0
  2427  1624  00A5               	movwf	___flge@ff2+1
  2428  1625  3000               	movlw	0
  2429  1626  00A4               	movwf	___flge@ff2
  2430  1627  160A  118A  2015  160A  118A  	fcall	___flge
  2431  162C  1803               	btfsc	3,0
  2432  162D  2E2F               	goto	u7051
  2433  162E  2E30               	goto	u7050
  2434  162F                     u7051:
  2435  162F  2E4D               	goto	l4267
  2436  1630                     u7050:
  2437  1630                     l4263:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2440  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2441  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2442  1632  0848               	movf	(sprintf@fval+3)^(0+128),w
  2443  1633  00F6               	movwf	___flneg@f1+3
  2444  1634  0847               	movf	(sprintf@fval+2)^(0+128),w
  2445  1635  00F5               	movwf	___flneg@f1+2
  2446  1636  0846               	movf	(sprintf@fval+1)^(0+128),w
  2447  1637  00F4               	movwf	___flneg@f1+1
  2448  1638  0845               	movf	sprintf@fval^(0+128),w
  2449  1639  00F3               	movwf	___flneg@f1
  2450  163A  160A  158A  209D  160A  118A  	fcall	___flneg
  2451  163F  0876               	movf	?___flneg+3,w
  2452  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2453  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2454  1642  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2455  1643  0875               	movf	?___flneg+2,w
  2456  1644  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2457  1645  0874               	movf	?___flneg+1,w
  2458  1646  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2459  1647  0873               	movf	?___flneg,w
  2460  1648  00C5               	movwf	sprintf@fval^(0+128)
  2461  1649                     l4265:
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2464  1649  3003               	movlw	3
  2465  164A  04BB               	iorwf	sprintf@flag^(0+128),f
  2466  164B  3000               	movlw	0
  2467  164C  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2468  164D                     l4267:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2471  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2472  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2473  164F  01C3               	clrf	sprintf@eexp^(0+128)
  2474  1650  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2475  1651                     l4269:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2478  1651  0848               	movf	(sprintf@fval+3)^(0+128),w
  2479  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2480  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2481  1654  00A3               	movwf	___fleq@ff1+3
  2482  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2483  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2484  1657  0847               	movf	(sprintf@fval+2)^(0+128),w
  2485  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2486  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2487  165A  00A2               	movwf	___fleq@ff1+2
  2488  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2489  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2490  165D  0846               	movf	(sprintf@fval+1)^(0+128),w
  2491  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2492  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2493  1660  00A1               	movwf	___fleq@ff1+1
  2494  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2495  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2496  1663  0845               	movf	sprintf@fval^(0+128),w
  2497  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2498  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2499  1666  00A0               	movwf	___fleq@ff1
  2500  1667  3000               	movlw	0
  2501  1668  00A7               	movwf	___fleq@ff2+3
  2502  1669  3000               	movlw	0
  2503  166A  00A6               	movwf	___fleq@ff2+2
  2504  166B  3000               	movlw	0
  2505  166C  00A5               	movwf	___fleq@ff2+1
  2506  166D  3000               	movlw	0
  2507  166E  00A4               	movwf	___fleq@ff2
  2508  166F  160A  158A  22DC  160A  118A  	fcall	___fleq
  2509  1674  1803               	btfsc	3,0
  2510  1675  2E77               	goto	u7061
  2511  1676  2E78               	goto	u7060
  2512  1677                     u7061:
  2513  1677  2F94               	goto	l4295
  2514  1678                     u7060:
  2515  1678                     l4271:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2518  1678  1003               	clrc
  2519  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2520  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2521  167B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2522  167C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2523  167D  3E82               	addlw	130
  2524  167E  00C3               	movwf	sprintf@eexp^(0+128)
  2525  167F  30FF               	movlw	255
  2526  1680  1803               	skipnc
  2527  1681  3000               	movlw	0
  2528  1682  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2529  1683                     l4273:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2532  1683  30FF               	movlw	255
  2533  1684  07C3               	addwf	sprintf@eexp^(0+128),f
  2534  1685  1803               	skipnc
  2535  1686  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2536  1687  30FF               	movlw	255
  2537  1688  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2538  1689                     l4275:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2541  1689  3003               	movlw	3
  2542  168A  00F3               	movwf	___wmul@multiplier
  2543  168B  3000               	movlw	0
  2544  168C  00F4               	movwf	___wmul@multiplier+1
  2545  168D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2546  168E  00F6               	movwf	___wmul@multiplicand+1
  2547  168F  0843               	movf	sprintf@eexp^(0+128),w
  2548  1690  00F5               	movwf	___wmul@multiplicand
  2549  1691  160A  158A  2160  160A  118A  	fcall	___wmul
  2550  1696  0874               	movf	?___wmul+1,w
  2551  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2552  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2553  1699  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2554  169A  0873               	movf	?___wmul,w
  2555  169B  00C3               	movwf	sprintf@eexp^(0+128)
  2556  169C                     l4277:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2559  169C  300A               	movlw	10
  2560  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2561  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2562  169F  00A2               	movwf	___awdiv@divisor
  2563  16A0  3000               	movlw	0
  2564  16A1  00A3               	movwf	___awdiv@divisor+1
  2565  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2566  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2567  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2568  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2569  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2570  16A7  00A5               	movwf	___awdiv@dividend+1
  2571  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2572  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2573  16AA  0843               	movf	sprintf@eexp^(0+128),w
  2574  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2575  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2576  16AD  00A4               	movwf	___awdiv@dividend
  2577  16AE  120A  158A  20D3  160A  118A  	fcall	___awdiv
  2578  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2579  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2580  16B5  0823               	movf	?___awdiv+1,w
  2581  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2582  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2583  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2584  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2585  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2586  16BB  0822               	movf	?___awdiv,w
  2587  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2588  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2589  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  2590  16BF                     l4279:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2593  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2594  16C0  2EC2               	goto	u7071
  2595  16C1  2EC3               	goto	u7070
  2596  16C2                     u7071:
  2597  16C2  2EC9               	goto	l4283
  2598  16C3                     u7070:
  2599  16C3                     l4281:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2602  16C3  30FF               	movlw	255
  2603  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  2604  16C5  1803               	skipnc
  2605  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2606  16C7  30FF               	movlw	255
  2607  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2608  16C9                     l4283:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2611  16C9  0343               	decf	sprintf@eexp^(0+128),w
  2612  16CA  3AFF               	xorlw	255
  2613  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2614  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2615  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2616  16D2  0848               	movf	?_scale+3,w
  2617  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2618  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2619  16D5  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2620  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2621  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2622  16D8  0847               	movf	?_scale+2,w
  2623  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2624  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2625  16DB  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2626  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2627  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2628  16DE  0846               	movf	?_scale+1,w
  2629  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2630  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2631  16E1  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2632  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2633  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2634  16E4  0845               	movf	?_scale,w
  2635  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2636  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2637  16E7  00BF               	movwf	sprintf@tmpval^(0+128)
  2638  16E8                     l4285:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2641  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2642  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2643  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2644  16EB  00AE               	movwf	___flmul@b+3
  2645  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2646  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2647  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  2648  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2649  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2650  16F1  00AD               	movwf	___flmul@b+2
  2651  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2652  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2653  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  2654  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2655  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2656  16F7  00AC               	movwf	___flmul@b+1
  2657  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2658  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2659  16FA  0845               	movf	sprintf@fval^(0+128),w
  2660  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2661  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2662  16FD  00AB               	movwf	___flmul@b
  2663  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2664  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2665  1700  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2666  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2667  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2668  1703  00B2               	movwf	___flmul@a+3
  2669  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2670  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2671  1706  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2672  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2673  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2674  1709  00B1               	movwf	___flmul@a+2
  2675  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2676  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2677  170C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2678  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2679  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2680  170F  00B0               	movwf	___flmul@a+1
  2681  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2682  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2683  1712  083F               	movf	sprintf@tmpval^(0+128),w
  2684  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2685  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2686  1715  00AF               	movwf	___flmul@a
  2687  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2688  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2689  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2690  171D  082E               	movf	?___flmul+3,w
  2691  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2692  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2693  1720  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2694  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2695  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2696  1723  082D               	movf	?___flmul+2,w
  2697  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2698  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2699  1726  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2700  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2701  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2702  1729  082C               	movf	?___flmul+1,w
  2703  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2704  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2705  172C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2706  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2707  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2708  172F  082B               	movf	?___flmul,w
  2709  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2710  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2711  1732  00BF               	movwf	sprintf@tmpval^(0+128)
  2712  1733                     l4287:
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2715  1733  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2716  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2717  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2718  1736  00A3               	movwf	___flge@ff1+3
  2719  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2720  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2721  1739  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2722  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2723  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2724  173C  00A2               	movwf	___flge@ff1+2
  2725  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2726  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2727  173F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2728  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2729  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2730  1742  00A1               	movwf	___flge@ff1+1
  2731  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2732  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2733  1745  083F               	movf	sprintf@tmpval^(0+128),w
  2734  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2735  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2736  1748  00A0               	movwf	___flge@ff1
  2737  1749  303F               	movlw	63
  2738  174A  00A7               	movwf	___flge@ff2+3
  2739  174B  3080               	movlw	128
  2740  174C  00A6               	movwf	___flge@ff2+2
  2741  174D  3000               	movlw	0
  2742  174E  00A5               	movwf	___flge@ff2+1
  2743  174F  3000               	movlw	0
  2744  1750  00A4               	movwf	___flge@ff2
  2745  1751  160A  118A  2015  160A  118A  	fcall	___flge
  2746  1756  1803               	btfsc	3,0
  2747  1757  2F59               	goto	u7081
  2748  1758  2F5A               	goto	u7080
  2749  1759                     u7081:
  2750  1759  2F63               	goto	l4291
  2751  175A                     u7080:
  2752  175A                     l4289:
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2755  175A  30FF               	movlw	255
  2756  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2757  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2758  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2759  175E  1803               	skipnc
  2760  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2761  1760  30FF               	movlw	255
  2762  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2763  1762  2F94               	goto	l4295
  2764  1763                     l4291:
  2765  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2766  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2767  1765  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2768  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2769  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2770  1768  00A3               	movwf	___flge@ff1+3
  2771  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2772  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2773  176B  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2774  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2775  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2776  176E  00A2               	movwf	___flge@ff1+2
  2777  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2778  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2779  1771  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2780  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2781  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2782  1774  00A1               	movwf	___flge@ff1+1
  2783  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2784  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2785  1777  083F               	movf	sprintf@tmpval^(0+128),w
  2786  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2787  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2788  177A  00A0               	movwf	___flge@ff1
  2789  177B  3041               	movlw	65
  2790  177C  00A7               	movwf	___flge@ff2+3
  2791  177D  3020               	movlw	32
  2792  177E  00A6               	movwf	___flge@ff2+2
  2793  177F  3000               	movlw	0
  2794  1780  00A5               	movwf	___flge@ff2+1
  2795  1781  3000               	movlw	0
  2796  1782  00A4               	movwf	___flge@ff2
  2797  1783  160A  118A  2015  160A  118A  	fcall	___flge
  2798  1788  1C03               	btfss	3,0
  2799  1789  2F8B               	goto	u7091
  2800  178A  2F8C               	goto	u7090
  2801  178B                     u7091:
  2802  178B  2F94               	goto	l4295
  2803  178C                     u7090:
  2804  178C                     l4293:
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2807  178C  3001               	movlw	1
  2808  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2809  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2810  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2811  1790  1803               	skipnc
  2812  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2813  1792  3000               	movlw	0
  2814  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2815  1794                     l4295:
  2816                           
  2817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2818  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2819  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2820  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2821  1797  3A80               	xorlw	128
  2822  1798  00FF               	movwf	btemp+1
  2823  1799  3080               	movlw	128
  2824  179A  027F               	subwf	btemp+1,w
  2825  179B  1D03               	skipz
  2826  179C  2F9F               	goto	u7105
  2827  179D  300D               	movlw	13
  2828  179E  024A               	subwf	sprintf@prec^(0+128),w
  2829  179F                     u7105:
  2830  179F  1803               	skipnc
  2831  17A0  2FA2               	goto	u7101
  2832  17A1  2FA3               	goto	u7100
  2833  17A2                     u7101:
  2834  17A2  2FEA               	goto	l4299
  2835  17A3                     u7100:
  2836  17A3                     l4297:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2839  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2840  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2841  17A5  084A               	movf	sprintf@prec^(0+128),w
  2842  17A6  120A  118A  25CB  160A  118A  	fcall	_fround
  2843  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2844  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2845  17AD  0848               	movf	?_fround+3,w
  2846  17AE  00DC               	movwf	___fladd@b+3
  2847  17AF  0847               	movf	?_fround+2,w
  2848  17B0  00DB               	movwf	___fladd@b+2
  2849  17B1  0846               	movf	?_fround+1,w
  2850  17B2  00DA               	movwf	___fladd@b+1
  2851  17B3  0845               	movf	?_fround,w
  2852  17B4  00D9               	movwf	___fladd@b
  2853  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2854  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2855  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2856  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2857  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2858  17BA  00E0               	movwf	___fladd@a+3
  2859  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2860  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2861  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2862  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2863  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2864  17C0  00DF               	movwf	___fladd@a+2
  2865  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2866  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2867  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2868  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2869  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2870  17C6  00DE               	movwf	___fladd@a+1
  2871  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2872  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2873  17C9  0845               	movf	sprintf@fval^(0+128),w
  2874  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2875  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2876  17CC  00DD               	movwf	___fladd@a
  2877  17CD  160A  118A  2274  160A  118A  	fcall	___fladd
  2878  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2879  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2880  17D4  085C               	movf	?___fladd+3,w
  2881  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2882  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2883  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2884  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2885  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2886  17DA  085B               	movf	?___fladd+2,w
  2887  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2888  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2889  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2890  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2891  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2892  17E0  085A               	movf	?___fladd+1,w
  2893  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2894  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2895  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2896  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2897  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2898  17E6  0859               	movf	?___fladd,w
  2899  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2900  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2901  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2902  17EA                     l4299:
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2905  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2906  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2907  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2908  17ED  3A80               	xorlw	128
  2909  17EE  00FF               	movwf	btemp+1
  2910  17EF  3080               	movlw	128
  2911  17F0  027F               	subwf	btemp+1,w
  2912  17F1  1D03               	skipz
  2913  17F2  2FF5               	goto	u7115
  2914  17F3  300A               	movlw	10
  2915  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2916  17F5                     u7115:
  2917  17F5  1803               	skipnc
  2918  17F6  2FFA               	goto	u7111
  2919  17F7  120A  118A  2833   	goto	u7110
  2920  17FA                     u7111:
  2921  17FA  120A  118A  2892   	goto	l4307
  2922  17FD                     L3:
  2923  17FD                     L2:
  2924  17FD  120A  118A  2DC6   	ljmp	l4457
  2925                           
  2926                           	psect	text2
  2927  0C9D                     __ptext2:	
  2928 ;; *************** function _scale *****************
  2929 ;; Defined at:
  2930 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  scl             1    wreg     char 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  scl             1   55[BANK0 ] char 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  4   37[BANK0 ] char 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2944 ;;      Params:         0       4       0       0       0
  2945 ;;      Locals:         0       5       0       0       0
  2946 ;;      Temps:          0      10       0       0       0
  2947 ;;      Totals:         0      19       0       0       0
  2948 ;;Total ram usage:       19 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    3
  2951 ;; This function calls:
  2952 ;;		___awdiv
  2953 ;;		___awmod
  2954 ;;		___flmul
  2955 ;; This function is called by:
  2956 ;;		_sprintf
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _scale
  2962  0C9D                     _scale:
  2963                           
  2964                           ;incstack = 0
  2965                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2966                           ;scale@scl stored from wreg
  2967  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2969  0C9F  00D7               	movwf	scale@scl
  2970  0CA0                     l3889:
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2973  0CA0  1FD7               	btfss	scale@scl,7
  2974  0CA1  2CA3               	goto	u6091
  2975  0CA2  2CA4               	goto	u6090
  2976  0CA3                     u6091:
  2977  0CA3  2E53               	goto	l3911
  2978  0CA4                     u6090:
  2979  0CA4                     l3891:
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2982  0CA4  09D7               	comf	scale@scl,f
  2983  0CA5  0AD7               	incf	scale@scl,f
  2984  0CA6                     l3893:
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2987  0CA6  0857               	movf	scale@scl,w
  2988  0CA7  3A80               	xorlw	128
  2989  0CA8  3E12               	addlw	-238
  2990  0CA9  1C03               	skipc
  2991  0CAA  2CAC               	goto	u6101
  2992  0CAB  2CAD               	goto	u6100
  2993  0CAC                     u6101:
  2994  0CAC  2D97               	goto	l3901
  2995  0CAD                     u6100:
  2996  0CAD                     l3895:
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2999  0CAD  300A               	movlw	10
  3000  0CAE  00A2               	movwf	___awdiv@divisor
  3001  0CAF  3000               	movlw	0
  3002  0CB0  00A3               	movwf	___awdiv@divisor+1
  3003  0CB1  0857               	movf	scale@scl,w
  3004  0CB2  00F5               	movwf	___awmod@dividend
  3005  0CB3  01F6               	clrf	___awmod@dividend+1
  3006  0CB4  1BF5               	btfsc	___awmod@dividend,7
  3007  0CB5  03F6               	decf	___awmod@dividend+1,f
  3008  0CB6  3064               	movlw	100
  3009  0CB7  00F3               	movwf	___awmod@divisor
  3010  0CB8  3000               	movlw	0
  3011  0CB9  00F4               	movwf	___awmod@divisor+1
  3012  0CBA  160A  158A  23D2  120A  158A  	fcall	___awmod
  3013  0CBF  0874               	movf	?___awmod+1,w
  3014  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3016  0CC2  00A5               	movwf	___awdiv@dividend+1
  3017  0CC3  0873               	movf	?___awmod,w
  3018  0CC4  00A4               	movwf	___awdiv@dividend
  3019  0CC5  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3020  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0CCC  0822               	movf	?___awdiv,w
  3023  0CCD  00C9               	movwf	??_scale
  3024  0CCE  3001               	movlw	1
  3025  0CCF                     u6115:
  3026  0CCF  1003               	clrc
  3027  0CD0  0DC9               	rlf	??_scale,f
  3028  0CD1  3EFF               	addlw	-1
  3029  0CD2  1D03               	skipz
  3030  0CD3  2CCF               	goto	u6115
  3031  0CD4  1003               	clrc
  3032  0CD5  0D49               	rlf	??_scale,w
  3033  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3034  0CD7  0084               	movwf	4
  3035  0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  3036  0CDD  00CA               	movwf	??_scale+1
  3037  0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  3038  0CE3  00CB               	movwf	??_scale+2
  3039  0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  3040  0CE9  00CC               	movwf	??_scale+3
  3041  0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  3042  0CEF  00CD               	movwf	??_scale+4
  3043  0CF0  084D               	movf	??_scale+4,w
  3044  0CF1  00AE               	movwf	___flmul@b+3
  3045  0CF2  084C               	movf	??_scale+3,w
  3046  0CF3  00AD               	movwf	___flmul@b+2
  3047  0CF4  084B               	movf	??_scale+2,w
  3048  0CF5  00AC               	movwf	___flmul@b+1
  3049  0CF6  084A               	movf	??_scale+1,w
  3050  0CF7  00AB               	movwf	___flmul@b
  3051  0CF8  3064               	movlw	100
  3052  0CF9  00A2               	movwf	___awdiv@divisor
  3053  0CFA  3000               	movlw	0
  3054  0CFB  00A3               	movwf	___awdiv@divisor+1
  3055  0CFC  0857               	movf	scale@scl,w
  3056  0CFD  00A4               	movwf	___awdiv@dividend
  3057  0CFE  01A5               	clrf	___awdiv@dividend+1
  3058  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  3059  0D00  03A5               	decf	___awdiv@dividend+1,f
  3060  0D01  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3061  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0D08  0822               	movf	?___awdiv,w
  3064  0D09  00CE               	movwf	??_scale+5
  3065  0D0A  3001               	movlw	1
  3066  0D0B                     u6125:
  3067  0D0B  1003               	clrc
  3068  0D0C  0DCE               	rlf	??_scale+5,f
  3069  0D0D  3EFF               	addlw	-1
  3070  0D0E  1D03               	skipz
  3071  0D0F  2D0B               	goto	u6125
  3072  0D10  1003               	clrc
  3073  0D11  0D4E               	rlf	??_scale+5,w
  3074  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3075  0D13  0084               	movwf	4
  3076  0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  3077  0D19  00CF               	movwf	??_scale+6
  3078  0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  3079  0D1F  00D0               	movwf	??_scale+7
  3080  0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  3081  0D25  00D1               	movwf	??_scale+8
  3082  0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  3083  0D2B  00D2               	movwf	??_scale+9
  3084  0D2C  0852               	movf	??_scale+9,w
  3085  0D2D  00B2               	movwf	___flmul@a+3
  3086  0D2E  0851               	movf	??_scale+8,w
  3087  0D2F  00B1               	movwf	___flmul@a+2
  3088  0D30  0850               	movf	??_scale+7,w
  3089  0D31  00B0               	movwf	___flmul@a+1
  3090  0D32  084F               	movf	??_scale+6,w
  3091  0D33  00AF               	movwf	___flmul@a
  3092  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3093  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0D3B  082E               	movf	?___flmul+3,w
  3096  0D3C  00D6               	movwf	_scale$1273+3
  3097  0D3D  082D               	movf	?___flmul+2,w
  3098  0D3E  00D5               	movwf	_scale$1273+2
  3099  0D3F  082C               	movf	?___flmul+1,w
  3100  0D40  00D4               	movwf	_scale$1273+1
  3101  0D41  082B               	movf	?___flmul,w
  3102  0D42  00D3               	movwf	_scale$1273
  3103                           
  3104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3105  0D43  300A               	movlw	10
  3106  0D44  00F3               	movwf	___awmod@divisor
  3107  0D45  3000               	movlw	0
  3108  0D46  00F4               	movwf	___awmod@divisor+1
  3109  0D47  0857               	movf	scale@scl,w
  3110  0D48  00F5               	movwf	___awmod@dividend
  3111  0D49  01F6               	clrf	___awmod@dividend+1
  3112  0D4A  1BF5               	btfsc	___awmod@dividend,7
  3113  0D4B  03F6               	decf	___awmod@dividend+1,f
  3114  0D4C  160A  158A  23D2  120A  158A  	fcall	___awmod
  3115  0D51  0873               	movf	?___awmod,w
  3116  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0D54  00C9               	movwf	??_scale
  3119  0D55  3001               	movlw	1
  3120  0D56                     u6135:
  3121  0D56  1003               	clrc
  3122  0D57  0DC9               	rlf	??_scale,f
  3123  0D58  3EFF               	addlw	-1
  3124  0D59  1D03               	skipz
  3125  0D5A  2D56               	goto	u6135
  3126  0D5B  1003               	clrc
  3127  0D5C  0D49               	rlf	??_scale,w
  3128  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3129  0D5E  0084               	movwf	4
  3130  0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  3131  0D64  00CA               	movwf	??_scale+1
  3132  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  3133  0D6A  00CB               	movwf	??_scale+2
  3134  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3135  0D70  00CC               	movwf	??_scale+3
  3136  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  3137  0D76  00CD               	movwf	??_scale+4
  3138  0D77  084D               	movf	??_scale+4,w
  3139  0D78  00AE               	movwf	___flmul@b+3
  3140  0D79  084C               	movf	??_scale+3,w
  3141  0D7A  00AD               	movwf	___flmul@b+2
  3142  0D7B  084B               	movf	??_scale+2,w
  3143  0D7C  00AC               	movwf	___flmul@b+1
  3144  0D7D  084A               	movf	??_scale+1,w
  3145  0D7E  00AB               	movwf	___flmul@b
  3146  0D7F  0856               	movf	_scale$1273+3,w
  3147  0D80  00B2               	movwf	___flmul@a+3
  3148  0D81  0855               	movf	_scale$1273+2,w
  3149  0D82  00B1               	movwf	___flmul@a+2
  3150  0D83  0854               	movf	_scale$1273+1,w
  3151  0D84  00B0               	movwf	___flmul@a+1
  3152  0D85  0853               	movf	_scale$1273,w
  3153  0D86  00AF               	movwf	___flmul@a
  3154  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3155  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3156  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3157  0D8E  082E               	movf	?___flmul+3,w
  3158  0D8F  00C8               	movwf	?_scale+3
  3159  0D90  082D               	movf	?___flmul+2,w
  3160  0D91  00C7               	movwf	?_scale+2
  3161  0D92  082C               	movf	?___flmul+1,w
  3162  0D93  00C6               	movwf	?_scale+1
  3163  0D94  082B               	movf	?___flmul,w
  3164  0D95  00C5               	movwf	?_scale
  3165  0D96  2FFF               	goto	l329
  3166  0D97                     l3901:
  3167  0D97  0857               	movf	scale@scl,w
  3168  0D98  3A80               	xorlw	128
  3169  0D99  3E75               	addlw	-139
  3170  0D9A  1C03               	skipc
  3171  0D9B  2D9D               	goto	u6141
  3172  0D9C  2D9E               	goto	u6140
  3173  0D9D                     u6141:
  3174  0D9D  2E26               	goto	l3907
  3175  0D9E                     u6140:
  3176  0D9E                     l3903:
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3179  0D9E  300A               	movlw	10
  3180  0D9F  00F3               	movwf	___awmod@divisor
  3181  0DA0  3000               	movlw	0
  3182  0DA1  00F4               	movwf	___awmod@divisor+1
  3183  0DA2  0857               	movf	scale@scl,w
  3184  0DA3  00F5               	movwf	___awmod@dividend
  3185  0DA4  01F6               	clrf	___awmod@dividend+1
  3186  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3187  0DA6  03F6               	decf	___awmod@dividend+1,f
  3188  0DA7  160A  158A  23D2  120A  158A  	fcall	___awmod
  3189  0DAC  0873               	movf	?___awmod,w
  3190  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0DAF  00C9               	movwf	??_scale
  3193  0DB0  3001               	movlw	1
  3194  0DB1                     u6155:
  3195  0DB1  1003               	clrc
  3196  0DB2  0DC9               	rlf	??_scale,f
  3197  0DB3  3EFF               	addlw	-1
  3198  0DB4  1D03               	skipz
  3199  0DB5  2DB1               	goto	u6155
  3200  0DB6  1003               	clrc
  3201  0DB7  0D49               	rlf	??_scale,w
  3202  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3203  0DB9  0084               	movwf	4
  3204  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  3205  0DBF  00CA               	movwf	??_scale+1
  3206  0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  3207  0DC5  00CB               	movwf	??_scale+2
  3208  0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  3209  0DCB  00CC               	movwf	??_scale+3
  3210  0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  3211  0DD1  00CD               	movwf	??_scale+4
  3212  0DD2  084D               	movf	??_scale+4,w
  3213  0DD3  00AE               	movwf	___flmul@b+3
  3214  0DD4  084C               	movf	??_scale+3,w
  3215  0DD5  00AD               	movwf	___flmul@b+2
  3216  0DD6  084B               	movf	??_scale+2,w
  3217  0DD7  00AC               	movwf	___flmul@b+1
  3218  0DD8  084A               	movf	??_scale+1,w
  3219  0DD9  00AB               	movwf	___flmul@b
  3220  0DDA  300A               	movlw	10
  3221  0DDB  00A2               	movwf	___awdiv@divisor
  3222  0DDC  3000               	movlw	0
  3223  0DDD  00A3               	movwf	___awdiv@divisor+1
  3224  0DDE  0857               	movf	scale@scl,w
  3225  0DDF  00A4               	movwf	___awdiv@dividend
  3226  0DE0  01A5               	clrf	___awdiv@dividend+1
  3227  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  3228  0DE2  03A5               	decf	___awdiv@dividend+1,f
  3229  0DE3  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3230  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3232  0DEA  0822               	movf	?___awdiv,w
  3233  0DEB  00CE               	movwf	??_scale+5
  3234  0DEC  3001               	movlw	1
  3235  0DED                     u6165:
  3236  0DED  1003               	clrc
  3237  0DEE  0DCE               	rlf	??_scale+5,f
  3238  0DEF  3EFF               	addlw	-1
  3239  0DF0  1D03               	skipz
  3240  0DF1  2DED               	goto	u6165
  3241  0DF2  1003               	clrc
  3242  0DF3  0D4E               	rlf	??_scale+5,w
  3243  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3244  0DF5  0084               	movwf	4
  3245  0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  3246  0DFB  00CF               	movwf	??_scale+6
  3247  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  3248  0E01  00D0               	movwf	??_scale+7
  3249  0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  3250  0E07  00D1               	movwf	??_scale+8
  3251  0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  3252  0E0D  00D2               	movwf	??_scale+9
  3253  0E0E  0852               	movf	??_scale+9,w
  3254  0E0F  00B2               	movwf	___flmul@a+3
  3255  0E10  0851               	movf	??_scale+8,w
  3256  0E11  00B1               	movwf	___flmul@a+2
  3257  0E12  0850               	movf	??_scale+7,w
  3258  0E13  00B0               	movwf	___flmul@a+1
  3259  0E14  084F               	movf	??_scale+6,w
  3260  0E15  00AF               	movwf	___flmul@a
  3261  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3262  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0E1D  082E               	movf	?___flmul+3,w
  3265  0E1E  00C8               	movwf	?_scale+3
  3266  0E1F  082D               	movf	?___flmul+2,w
  3267  0E20  00C7               	movwf	?_scale+2
  3268  0E21  082C               	movf	?___flmul+1,w
  3269  0E22  00C6               	movwf	?_scale+1
  3270  0E23  082B               	movf	?___flmul,w
  3271  0E24  00C5               	movwf	?_scale
  3272  0E25  2FFF               	goto	l329
  3273  0E26                     l3907:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3276  0E26  0857               	movf	scale@scl,w
  3277  0E27  00C9               	movwf	??_scale
  3278  0E28  3001               	movlw	1
  3279  0E29                     u6175:
  3280  0E29  1003               	clrc
  3281  0E2A  0DC9               	rlf	??_scale,f
  3282  0E2B  3EFF               	addlw	-1
  3283  0E2C  1D03               	skipz
  3284  0E2D  2E29               	goto	u6175
  3285  0E2E  1003               	clrc
  3286  0E2F  0D49               	rlf	??_scale,w
  3287  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3288  0E31  0084               	movwf	4
  3289  0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  3290  0E37  00CA               	movwf	??_scale+1
  3291  0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  3292  0E3D  00CB               	movwf	??_scale+2
  3293  0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  3294  0E43  00CC               	movwf	??_scale+3
  3295  0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  3296  0E49  00CD               	movwf	??_scale+4
  3297  0E4A  084D               	movf	??_scale+4,w
  3298  0E4B  00C8               	movwf	?_scale+3
  3299  0E4C  084C               	movf	??_scale+3,w
  3300  0E4D  00C7               	movwf	?_scale+2
  3301  0E4E  084B               	movf	??_scale+2,w
  3302  0E4F  00C6               	movwf	?_scale+1
  3303  0E50  084A               	movf	??_scale+1,w
  3304  0E51  00C5               	movwf	?_scale
  3305  0E52  2FFF               	goto	l329
  3306  0E53                     l3911:
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3309  0E53  0857               	movf	scale@scl,w
  3310  0E54  3A80               	xorlw	128
  3311  0E55  3E12               	addlw	-238
  3312  0E56  1C03               	skipc
  3313  0E57  2E59               	goto	u6181
  3314  0E58  2E5A               	goto	u6180
  3315  0E59                     u6181:
  3316  0E59  2F44               	goto	l3919
  3317  0E5A                     u6180:
  3318  0E5A                     l3913:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3321  0E5A  300A               	movlw	10
  3322  0E5B  00A2               	movwf	___awdiv@divisor
  3323  0E5C  3000               	movlw	0
  3324  0E5D  00A3               	movwf	___awdiv@divisor+1
  3325  0E5E  0857               	movf	scale@scl,w
  3326  0E5F  00F5               	movwf	___awmod@dividend
  3327  0E60  01F6               	clrf	___awmod@dividend+1
  3328  0E61  1BF5               	btfsc	___awmod@dividend,7
  3329  0E62  03F6               	decf	___awmod@dividend+1,f
  3330  0E63  3064               	movlw	100
  3331  0E64  00F3               	movwf	___awmod@divisor
  3332  0E65  3000               	movlw	0
  3333  0E66  00F4               	movwf	___awmod@divisor+1
  3334  0E67  160A  158A  23D2  120A  158A  	fcall	___awmod
  3335  0E6C  0874               	movf	?___awmod+1,w
  3336  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0E6F  00A5               	movwf	___awdiv@dividend+1
  3339  0E70  0873               	movf	?___awmod,w
  3340  0E71  00A4               	movwf	___awdiv@dividend
  3341  0E72  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3342  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0E79  0822               	movf	?___awdiv,w
  3345  0E7A  00C9               	movwf	??_scale
  3346  0E7B  3001               	movlw	1
  3347  0E7C                     u6195:
  3348  0E7C  1003               	clrc
  3349  0E7D  0DC9               	rlf	??_scale,f
  3350  0E7E  3EFF               	addlw	-1
  3351  0E7F  1D03               	skipz
  3352  0E80  2E7C               	goto	u6195
  3353  0E81  1003               	clrc
  3354  0E82  0D49               	rlf	??_scale,w
  3355  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3356  0E84  0084               	movwf	4
  3357  0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  3358  0E8A  00CA               	movwf	??_scale+1
  3359  0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  3360  0E90  00CB               	movwf	??_scale+2
  3361  0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  3362  0E96  00CC               	movwf	??_scale+3
  3363  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  3364  0E9C  00CD               	movwf	??_scale+4
  3365  0E9D  084D               	movf	??_scale+4,w
  3366  0E9E  00AE               	movwf	___flmul@b+3
  3367  0E9F  084C               	movf	??_scale+3,w
  3368  0EA0  00AD               	movwf	___flmul@b+2
  3369  0EA1  084B               	movf	??_scale+2,w
  3370  0EA2  00AC               	movwf	___flmul@b+1
  3371  0EA3  084A               	movf	??_scale+1,w
  3372  0EA4  00AB               	movwf	___flmul@b
  3373  0EA5  3064               	movlw	100
  3374  0EA6  00A2               	movwf	___awdiv@divisor
  3375  0EA7  3000               	movlw	0
  3376  0EA8  00A3               	movwf	___awdiv@divisor+1
  3377  0EA9  0857               	movf	scale@scl,w
  3378  0EAA  00A4               	movwf	___awdiv@dividend
  3379  0EAB  01A5               	clrf	___awdiv@dividend+1
  3380  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  3381  0EAD  03A5               	decf	___awdiv@dividend+1,f
  3382  0EAE  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3383  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3385  0EB5  0822               	movf	?___awdiv,w
  3386  0EB6  00CE               	movwf	??_scale+5
  3387  0EB7  3001               	movlw	1
  3388  0EB8                     u6205:
  3389  0EB8  1003               	clrc
  3390  0EB9  0DCE               	rlf	??_scale+5,f
  3391  0EBA  3EFF               	addlw	-1
  3392  0EBB  1D03               	skipz
  3393  0EBC  2EB8               	goto	u6205
  3394  0EBD  1003               	clrc
  3395  0EBE  0D4E               	rlf	??_scale+5,w
  3396  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3397  0EC0  0084               	movwf	4
  3398  0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  3399  0EC6  00CF               	movwf	??_scale+6
  3400  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  3401  0ECC  00D0               	movwf	??_scale+7
  3402  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  3403  0ED2  00D1               	movwf	??_scale+8
  3404  0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  3405  0ED8  00D2               	movwf	??_scale+9
  3406  0ED9  0852               	movf	??_scale+9,w
  3407  0EDA  00B2               	movwf	___flmul@a+3
  3408  0EDB  0851               	movf	??_scale+8,w
  3409  0EDC  00B1               	movwf	___flmul@a+2
  3410  0EDD  0850               	movf	??_scale+7,w
  3411  0EDE  00B0               	movwf	___flmul@a+1
  3412  0EDF  084F               	movf	??_scale+6,w
  3413  0EE0  00AF               	movwf	___flmul@a
  3414  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3415  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0EE8  082E               	movf	?___flmul+3,w
  3418  0EE9  00D6               	movwf	_scale$1273+3
  3419  0EEA  082D               	movf	?___flmul+2,w
  3420  0EEB  00D5               	movwf	_scale$1273+2
  3421  0EEC  082C               	movf	?___flmul+1,w
  3422  0EED  00D4               	movwf	_scale$1273+1
  3423  0EEE  082B               	movf	?___flmul,w
  3424  0EEF  00D3               	movwf	_scale$1273
  3425                           
  3426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3427  0EF0  300A               	movlw	10
  3428  0EF1  00F3               	movwf	___awmod@divisor
  3429  0EF2  3000               	movlw	0
  3430  0EF3  00F4               	movwf	___awmod@divisor+1
  3431  0EF4  0857               	movf	scale@scl,w
  3432  0EF5  00F5               	movwf	___awmod@dividend
  3433  0EF6  01F6               	clrf	___awmod@dividend+1
  3434  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3435  0EF8  03F6               	decf	___awmod@dividend+1,f
  3436  0EF9  160A  158A  23D2  120A  158A  	fcall	___awmod
  3437  0EFE  0873               	movf	?___awmod,w
  3438  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0F01  00C9               	movwf	??_scale
  3441  0F02  3001               	movlw	1
  3442  0F03                     u6215:
  3443  0F03  1003               	clrc
  3444  0F04  0DC9               	rlf	??_scale,f
  3445  0F05  3EFF               	addlw	-1
  3446  0F06  1D03               	skipz
  3447  0F07  2F03               	goto	u6215
  3448  0F08  1003               	clrc
  3449  0F09  0D49               	rlf	??_scale,w
  3450  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3451  0F0B  0084               	movwf	4
  3452  0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3453  0F11  00CA               	movwf	??_scale+1
  3454  0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  3455  0F17  00CB               	movwf	??_scale+2
  3456  0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  3457  0F1D  00CC               	movwf	??_scale+3
  3458  0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  3459  0F23  00CD               	movwf	??_scale+4
  3460  0F24  084D               	movf	??_scale+4,w
  3461  0F25  00AE               	movwf	___flmul@b+3
  3462  0F26  084C               	movf	??_scale+3,w
  3463  0F27  00AD               	movwf	___flmul@b+2
  3464  0F28  084B               	movf	??_scale+2,w
  3465  0F29  00AC               	movwf	___flmul@b+1
  3466  0F2A  084A               	movf	??_scale+1,w
  3467  0F2B  00AB               	movwf	___flmul@b
  3468  0F2C  0856               	movf	_scale$1273+3,w
  3469  0F2D  00B2               	movwf	___flmul@a+3
  3470  0F2E  0855               	movf	_scale$1273+2,w
  3471  0F2F  00B1               	movwf	___flmul@a+2
  3472  0F30  0854               	movf	_scale$1273+1,w
  3473  0F31  00B0               	movwf	___flmul@a+1
  3474  0F32  0853               	movf	_scale$1273,w
  3475  0F33  00AF               	movwf	___flmul@a
  3476  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3477  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0F3B  082E               	movf	?___flmul+3,w
  3480  0F3C  00C8               	movwf	?_scale+3
  3481  0F3D  082D               	movf	?___flmul+2,w
  3482  0F3E  00C7               	movwf	?_scale+2
  3483  0F3F  082C               	movf	?___flmul+1,w
  3484  0F40  00C6               	movwf	?_scale+1
  3485  0F41  082B               	movf	?___flmul,w
  3486  0F42  00C5               	movwf	?_scale
  3487  0F43  2FFF               	goto	l329
  3488  0F44                     l3919:
  3489  0F44  0857               	movf	scale@scl,w
  3490  0F45  3A80               	xorlw	128
  3491  0F46  3E75               	addlw	-139
  3492  0F47  1C03               	skipc
  3493  0F48  2F4A               	goto	u6221
  3494  0F49  2F4B               	goto	u6220
  3495  0F4A                     u6221:
  3496  0F4A  2FD3               	goto	l3925
  3497  0F4B                     u6220:
  3498  0F4B                     l3921:
  3499                           
  3500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3501  0F4B  300A               	movlw	10
  3502  0F4C  00F3               	movwf	___awmod@divisor
  3503  0F4D  3000               	movlw	0
  3504  0F4E  00F4               	movwf	___awmod@divisor+1
  3505  0F4F  0857               	movf	scale@scl,w
  3506  0F50  00F5               	movwf	___awmod@dividend
  3507  0F51  01F6               	clrf	___awmod@dividend+1
  3508  0F52  1BF5               	btfsc	___awmod@dividend,7
  3509  0F53  03F6               	decf	___awmod@dividend+1,f
  3510  0F54  160A  158A  23D2  120A  158A  	fcall	___awmod
  3511  0F59  0873               	movf	?___awmod,w
  3512  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3513  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3514  0F5C  00C9               	movwf	??_scale
  3515  0F5D  3001               	movlw	1
  3516  0F5E                     u6235:
  3517  0F5E  1003               	clrc
  3518  0F5F  0DC9               	rlf	??_scale,f
  3519  0F60  3EFF               	addlw	-1
  3520  0F61  1D03               	skipz
  3521  0F62  2F5E               	goto	u6235
  3522  0F63  1003               	clrc
  3523  0F64  0D49               	rlf	??_scale,w
  3524  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3525  0F66  0084               	movwf	4
  3526  0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  3527  0F6C  00CA               	movwf	??_scale+1
  3528  0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  3529  0F72  00CB               	movwf	??_scale+2
  3530  0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  3531  0F78  00CC               	movwf	??_scale+3
  3532  0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  3533  0F7E  00CD               	movwf	??_scale+4
  3534  0F7F  084D               	movf	??_scale+4,w
  3535  0F80  00AE               	movwf	___flmul@b+3
  3536  0F81  084C               	movf	??_scale+3,w
  3537  0F82  00AD               	movwf	___flmul@b+2
  3538  0F83  084B               	movf	??_scale+2,w
  3539  0F84  00AC               	movwf	___flmul@b+1
  3540  0F85  084A               	movf	??_scale+1,w
  3541  0F86  00AB               	movwf	___flmul@b
  3542  0F87  300A               	movlw	10
  3543  0F88  00A2               	movwf	___awdiv@divisor
  3544  0F89  3000               	movlw	0
  3545  0F8A  00A3               	movwf	___awdiv@divisor+1
  3546  0F8B  0857               	movf	scale@scl,w
  3547  0F8C  00A4               	movwf	___awdiv@dividend
  3548  0F8D  01A5               	clrf	___awdiv@dividend+1
  3549  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  3550  0F8F  03A5               	decf	___awdiv@dividend+1,f
  3551  0F90  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3552  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3554  0F97  0822               	movf	?___awdiv,w
  3555  0F98  00CE               	movwf	??_scale+5
  3556  0F99  3001               	movlw	1
  3557  0F9A                     u6245:
  3558  0F9A  1003               	clrc
  3559  0F9B  0DCE               	rlf	??_scale+5,f
  3560  0F9C  3EFF               	addlw	-1
  3561  0F9D  1D03               	skipz
  3562  0F9E  2F9A               	goto	u6245
  3563  0F9F  1003               	clrc
  3564  0FA0  0D4E               	rlf	??_scale+5,w
  3565  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3566  0FA2  0084               	movwf	4
  3567  0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  3568  0FA8  00CF               	movwf	??_scale+6
  3569  0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  3570  0FAE  00D0               	movwf	??_scale+7
  3571  0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  3572  0FB4  00D1               	movwf	??_scale+8
  3573  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  3574  0FBA  00D2               	movwf	??_scale+9
  3575  0FBB  0852               	movf	??_scale+9,w
  3576  0FBC  00B2               	movwf	___flmul@a+3
  3577  0FBD  0851               	movf	??_scale+8,w
  3578  0FBE  00B1               	movwf	___flmul@a+2
  3579  0FBF  0850               	movf	??_scale+7,w
  3580  0FC0  00B0               	movwf	___flmul@a+1
  3581  0FC1  084F               	movf	??_scale+6,w
  3582  0FC2  00AF               	movwf	___flmul@a
  3583  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3584  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0FCA  082E               	movf	?___flmul+3,w
  3587  0FCB  00C8               	movwf	?_scale+3
  3588  0FCC  082D               	movf	?___flmul+2,w
  3589  0FCD  00C7               	movwf	?_scale+2
  3590  0FCE  082C               	movf	?___flmul+1,w
  3591  0FCF  00C6               	movwf	?_scale+1
  3592  0FD0  082B               	movf	?___flmul,w
  3593  0FD1  00C5               	movwf	?_scale
  3594  0FD2  2FFF               	goto	l329
  3595  0FD3                     l3925:
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3598  0FD3  0857               	movf	scale@scl,w
  3599  0FD4  00C9               	movwf	??_scale
  3600  0FD5  3001               	movlw	1
  3601  0FD6                     u6255:
  3602  0FD6  1003               	clrc
  3603  0FD7  0DC9               	rlf	??_scale,f
  3604  0FD8  3EFF               	addlw	-1
  3605  0FD9  1D03               	skipz
  3606  0FDA  2FD6               	goto	u6255
  3607  0FDB  1003               	clrc
  3608  0FDC  0D49               	rlf	??_scale,w
  3609  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3610  0FDE  0084               	movwf	4
  3611  0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  3612  0FE4  00CA               	movwf	??_scale+1
  3613  0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3614  0FEA  00CB               	movwf	??_scale+2
  3615  0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  3616  0FF0  00CC               	movwf	??_scale+3
  3617  0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  3618  0FF6  00CD               	movwf	??_scale+4
  3619  0FF7  084D               	movf	??_scale+4,w
  3620  0FF8  00C8               	movwf	?_scale+3
  3621  0FF9  084C               	movf	??_scale+3,w
  3622  0FFA  00C7               	movwf	?_scale+2
  3623  0FFB  084B               	movf	??_scale+2,w
  3624  0FFC  00C6               	movwf	?_scale+1
  3625  0FFD  084A               	movf	??_scale+1,w
  3626  0FFE  00C5               	movwf	?_scale
  3627  0FFF                     l329:
  3628  0FFF  0008               	return
  3629  1000                     __end_of_scale:
  3630                           
  3631                           	psect	text3
  3632  1BD2                     __ptext3:	
  3633 ;; *************** function ___awmod *****************
  3634 ;; Defined at:
  3635 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  divisor         2    3[COMMON] int 
  3638 ;;  dividend        2    5[COMMON] int 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  sign            1    1[BANK0 ] unsigned char 
  3641 ;;  counter         1    0[BANK0 ] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2    3[COMMON] int 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3651 ;;      Params:         4       0       0       0       0
  3652 ;;      Locals:         0       2       0       0       0
  3653 ;;      Temps:          1       0       0       0       0
  3654 ;;      Totals:         5       2       0       0       0
  3655 ;;Total ram usage:        7 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_scale
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           
  3666                           ;psect for function ___awmod
  3667  1BD2                     ___awmod:
  3668  1BD2                     l3763:	
  3669                           ;incstack = 0
  3670                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3671                           
  3672  1BD2  1283               	bcf	3,5	;RP0=0, select bank0
  3673  1BD3  1303               	bcf	3,6	;RP1=0, select bank0
  3674  1BD4  01A1               	clrf	___awmod@sign
  3675  1BD5                     l3765:
  3676  1BD5  1FF6               	btfss	___awmod@dividend+1,7
  3677  1BD6  2BD8               	goto	u5791
  3678  1BD7  2BD9               	goto	u5790
  3679  1BD8                     u5791:
  3680  1BD8  2BE0               	goto	l3771
  3681  1BD9                     u5790:
  3682  1BD9                     l3767:
  3683  1BD9  09F5               	comf	___awmod@dividend,f
  3684  1BDA  09F6               	comf	___awmod@dividend+1,f
  3685  1BDB  0AF5               	incf	___awmod@dividend,f
  3686  1BDC  1903               	skipnz
  3687  1BDD  0AF6               	incf	___awmod@dividend+1,f
  3688  1BDE                     l3769:
  3689  1BDE  01A1               	clrf	___awmod@sign
  3690  1BDF  0AA1               	incf	___awmod@sign,f
  3691  1BE0                     l3771:
  3692  1BE0  1FF4               	btfss	___awmod@divisor+1,7
  3693  1BE1  2BE3               	goto	u5801
  3694  1BE2  2BE4               	goto	u5800
  3695  1BE3                     u5801:
  3696  1BE3  2BE9               	goto	l3775
  3697  1BE4                     u5800:
  3698  1BE4                     l3773:
  3699  1BE4  09F3               	comf	___awmod@divisor,f
  3700  1BE5  09F4               	comf	___awmod@divisor+1,f
  3701  1BE6  0AF3               	incf	___awmod@divisor,f
  3702  1BE7  1903               	skipnz
  3703  1BE8  0AF4               	incf	___awmod@divisor+1,f
  3704  1BE9                     l3775:
  3705  1BE9  0873               	movf	___awmod@divisor,w
  3706  1BEA  0474               	iorwf	___awmod@divisor+1,w
  3707  1BEB  1903               	btfsc	3,2
  3708  1BEC  2BEE               	goto	u5811
  3709  1BED  2BEF               	goto	u5810
  3710  1BEE                     u5811:
  3711  1BEE  2C1E               	goto	l3793
  3712  1BEF                     u5810:
  3713  1BEF                     l3777:
  3714  1BEF  01A0               	clrf	___awmod@counter
  3715  1BF0  0AA0               	incf	___awmod@counter,f
  3716  1BF1  2BFD               	goto	l3783
  3717  1BF2                     l3779:
  3718  1BF2  3001               	movlw	1
  3719  1BF3                     u5825:
  3720  1BF3  1003               	clrc
  3721  1BF4  0DF3               	rlf	___awmod@divisor,f
  3722  1BF5  0DF4               	rlf	___awmod@divisor+1,f
  3723  1BF6  3EFF               	addlw	-1
  3724  1BF7  1D03               	skipz
  3725  1BF8  2BF3               	goto	u5825
  3726  1BF9                     l3781:
  3727  1BF9  3001               	movlw	1
  3728  1BFA  00F7               	movwf	??___awmod
  3729  1BFB  0877               	movf	??___awmod,w
  3730  1BFC  07A0               	addwf	___awmod@counter,f
  3731  1BFD                     l3783:
  3732  1BFD  1FF4               	btfss	___awmod@divisor+1,7
  3733  1BFE  2C00               	goto	u5831
  3734  1BFF  2C01               	goto	u5830
  3735  1C00                     u5831:
  3736  1C00  2BF2               	goto	l3779
  3737  1C01                     u5830:
  3738  1C01                     l3785:
  3739  1C01  0874               	movf	___awmod@divisor+1,w
  3740  1C02  0276               	subwf	___awmod@dividend+1,w
  3741  1C03  1D03               	skipz
  3742  1C04  2C07               	goto	u5845
  3743  1C05  0873               	movf	___awmod@divisor,w
  3744  1C06  0275               	subwf	___awmod@dividend,w
  3745  1C07                     u5845:
  3746  1C07  1C03               	skipc
  3747  1C08  2C0A               	goto	u5841
  3748  1C09  2C0B               	goto	u5840
  3749  1C0A                     u5841:
  3750  1C0A  2C11               	goto	l3789
  3751  1C0B                     u5840:
  3752  1C0B                     l3787:
  3753  1C0B  0873               	movf	___awmod@divisor,w
  3754  1C0C  02F5               	subwf	___awmod@dividend,f
  3755  1C0D  0874               	movf	___awmod@divisor+1,w
  3756  1C0E  1C03               	skipc
  3757  1C0F  03F6               	decf	___awmod@dividend+1,f
  3758  1C10  02F6               	subwf	___awmod@dividend+1,f
  3759  1C11                     l3789:
  3760  1C11  3001               	movlw	1
  3761  1C12                     u5855:
  3762  1C12  1003               	clrc
  3763  1C13  0CF4               	rrf	___awmod@divisor+1,f
  3764  1C14  0CF3               	rrf	___awmod@divisor,f
  3765  1C15  3EFF               	addlw	-1
  3766  1C16  1D03               	skipz
  3767  1C17  2C12               	goto	u5855
  3768  1C18                     l3791:
  3769  1C18  3001               	movlw	1
  3770  1C19  02A0               	subwf	___awmod@counter,f
  3771  1C1A  1D03               	btfss	3,2
  3772  1C1B  2C1D               	goto	u5861
  3773  1C1C  2C1E               	goto	u5860
  3774  1C1D                     u5861:
  3775  1C1D  2C01               	goto	l3785
  3776  1C1E                     u5860:
  3777  1C1E                     l3793:
  3778  1C1E  0821               	movf	___awmod@sign,w
  3779  1C1F  1903               	btfsc	3,2
  3780  1C20  2C22               	goto	u5871
  3781  1C21  2C23               	goto	u5870
  3782  1C22                     u5871:
  3783  1C22  2C28               	goto	l3797
  3784  1C23                     u5870:
  3785  1C23                     l3795:
  3786  1C23  09F5               	comf	___awmod@dividend,f
  3787  1C24  09F6               	comf	___awmod@dividend+1,f
  3788  1C25  0AF5               	incf	___awmod@dividend,f
  3789  1C26  1903               	skipnz
  3790  1C27  0AF6               	incf	___awmod@dividend+1,f
  3791  1C28                     l3797:
  3792  1C28  0876               	movf	___awmod@dividend+1,w
  3793  1C29  00F4               	movwf	?___awmod+1
  3794  1C2A  0875               	movf	___awmod@dividend,w
  3795  1C2B  00F3               	movwf	?___awmod
  3796  1C2C                     l582:
  3797  1C2C  0008               	return
  3798  1C2D                     __end_of___awmod:
  3799                           
  3800                           	psect	text4
  3801  08D3                     __ptext4:	
  3802 ;; *************** function ___awdiv *****************
  3803 ;; Defined at:
  3804 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  divisor         2    2[BANK0 ] int 
  3807 ;;  dividend        2    4[BANK0 ] int 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  quotient        2    9[BANK0 ] int 
  3810 ;;  sign            1    8[BANK0 ] unsigned char 
  3811 ;;  counter         1    7[BANK0 ] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  2    2[BANK0 ] int 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         0       4       0       0       0
  3822 ;;      Locals:         0       4       0       0       0
  3823 ;;      Temps:          0       1       0       0       0
  3824 ;;      Totals:         0       9       0       0       0
  3825 ;;Total ram usage:        9 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    1
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_scale
  3832 ;;		_sprintf
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           
  3837                           ;psect for function ___awdiv
  3838  08D3                     ___awdiv:
  3839  08D3                     l3719:	
  3840                           ;incstack = 0
  3841                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3842                           
  3843  08D3  1283               	bcf	3,5	;RP0=0, select bank0
  3844  08D4  1303               	bcf	3,6	;RP1=0, select bank0
  3845  08D5  01A8               	clrf	___awdiv@sign
  3846  08D6                     l3721:
  3847  08D6  1FA3               	btfss	___awdiv@divisor+1,7
  3848  08D7  28D9               	goto	u5691
  3849  08D8  28DA               	goto	u5690
  3850  08D9                     u5691:
  3851  08D9  28E1               	goto	l3727
  3852  08DA                     u5690:
  3853  08DA                     l3723:
  3854  08DA  09A2               	comf	___awdiv@divisor,f
  3855  08DB  09A3               	comf	___awdiv@divisor+1,f
  3856  08DC  0AA2               	incf	___awdiv@divisor,f
  3857  08DD  1903               	skipnz
  3858  08DE  0AA3               	incf	___awdiv@divisor+1,f
  3859  08DF                     l3725:
  3860  08DF  01A8               	clrf	___awdiv@sign
  3861  08E0  0AA8               	incf	___awdiv@sign,f
  3862  08E1                     l3727:
  3863  08E1  1FA5               	btfss	___awdiv@dividend+1,7
  3864  08E2  28E4               	goto	u5701
  3865  08E3  28E5               	goto	u5700
  3866  08E4                     u5701:
  3867  08E4  28EE               	goto	l3733
  3868  08E5                     u5700:
  3869  08E5                     l3729:
  3870  08E5  09A4               	comf	___awdiv@dividend,f
  3871  08E6  09A5               	comf	___awdiv@dividend+1,f
  3872  08E7  0AA4               	incf	___awdiv@dividend,f
  3873  08E8  1903               	skipnz
  3874  08E9  0AA5               	incf	___awdiv@dividend+1,f
  3875  08EA                     l3731:
  3876  08EA  3001               	movlw	1
  3877  08EB  00A6               	movwf	??___awdiv
  3878  08EC  0826               	movf	??___awdiv,w
  3879  08ED  06A8               	xorwf	___awdiv@sign,f
  3880  08EE                     l3733:
  3881  08EE  01A9               	clrf	___awdiv@quotient
  3882  08EF  01AA               	clrf	___awdiv@quotient+1
  3883  08F0                     l3735:
  3884  08F0  0822               	movf	___awdiv@divisor,w
  3885  08F1  0423               	iorwf	___awdiv@divisor+1,w
  3886  08F2  1903               	btfsc	3,2
  3887  08F3  28F5               	goto	u5711
  3888  08F4  28F6               	goto	u5710
  3889  08F5                     u5711:
  3890  08F5  292D               	goto	l3755
  3891  08F6                     u5710:
  3892  08F6                     l3737:
  3893  08F6  01A7               	clrf	___awdiv@counter
  3894  08F7  0AA7               	incf	___awdiv@counter,f
  3895  08F8  2904               	goto	l3743
  3896  08F9                     l3739:
  3897  08F9  3001               	movlw	1
  3898  08FA                     u5725:
  3899  08FA  1003               	clrc
  3900  08FB  0DA2               	rlf	___awdiv@divisor,f
  3901  08FC  0DA3               	rlf	___awdiv@divisor+1,f
  3902  08FD  3EFF               	addlw	-1
  3903  08FE  1D03               	skipz
  3904  08FF  28FA               	goto	u5725
  3905  0900                     l3741:
  3906  0900  3001               	movlw	1
  3907  0901  00A6               	movwf	??___awdiv
  3908  0902  0826               	movf	??___awdiv,w
  3909  0903  07A7               	addwf	___awdiv@counter,f
  3910  0904                     l3743:
  3911  0904  1FA3               	btfss	___awdiv@divisor+1,7
  3912  0905  2907               	goto	u5731
  3913  0906  2908               	goto	u5730
  3914  0907                     u5731:
  3915  0907  28F9               	goto	l3739
  3916  0908                     u5730:
  3917  0908                     l3745:
  3918  0908  3001               	movlw	1
  3919  0909                     u5745:
  3920  0909  1003               	clrc
  3921  090A  0DA9               	rlf	___awdiv@quotient,f
  3922  090B  0DAA               	rlf	___awdiv@quotient+1,f
  3923  090C  3EFF               	addlw	-1
  3924  090D  1D03               	skipz
  3925  090E  2909               	goto	u5745
  3926  090F  0823               	movf	___awdiv@divisor+1,w
  3927  0910  0225               	subwf	___awdiv@dividend+1,w
  3928  0911  1D03               	skipz
  3929  0912  2915               	goto	u5755
  3930  0913  0822               	movf	___awdiv@divisor,w
  3931  0914  0224               	subwf	___awdiv@dividend,w
  3932  0915                     u5755:
  3933  0915  1C03               	skipc
  3934  0916  2918               	goto	u5751
  3935  0917  2919               	goto	u5750
  3936  0918                     u5751:
  3937  0918  2920               	goto	l3751
  3938  0919                     u5750:
  3939  0919                     l3747:
  3940  0919  0822               	movf	___awdiv@divisor,w
  3941  091A  02A4               	subwf	___awdiv@dividend,f
  3942  091B  0823               	movf	___awdiv@divisor+1,w
  3943  091C  1C03               	skipc
  3944  091D  03A5               	decf	___awdiv@dividend+1,f
  3945  091E  02A5               	subwf	___awdiv@dividend+1,f
  3946  091F                     l3749:
  3947  091F  1429               	bsf	___awdiv@quotient,0
  3948  0920                     l3751:
  3949  0920  3001               	movlw	1
  3950  0921                     u5765:
  3951  0921  1003               	clrc
  3952  0922  0CA3               	rrf	___awdiv@divisor+1,f
  3953  0923  0CA2               	rrf	___awdiv@divisor,f
  3954  0924  3EFF               	addlw	-1
  3955  0925  1D03               	skipz
  3956  0926  2921               	goto	u5765
  3957  0927                     l3753:
  3958  0927  3001               	movlw	1
  3959  0928  02A7               	subwf	___awdiv@counter,f
  3960  0929  1D03               	btfss	3,2
  3961  092A  292C               	goto	u5771
  3962  092B  292D               	goto	u5770
  3963  092C                     u5771:
  3964  092C  2908               	goto	l3745
  3965  092D                     u5770:
  3966  092D                     l3755:
  3967  092D  0828               	movf	___awdiv@sign,w
  3968  092E  1903               	btfsc	3,2
  3969  092F  2931               	goto	u5781
  3970  0930  2932               	goto	u5780
  3971  0931                     u5781:
  3972  0931  2937               	goto	l3759
  3973  0932                     u5780:
  3974  0932                     l3757:
  3975  0932  09A9               	comf	___awdiv@quotient,f
  3976  0933  09AA               	comf	___awdiv@quotient+1,f
  3977  0934  0AA9               	incf	___awdiv@quotient,f
  3978  0935  1903               	skipnz
  3979  0936  0AAA               	incf	___awdiv@quotient+1,f
  3980  0937                     l3759:
  3981  0937  082A               	movf	___awdiv@quotient+1,w
  3982  0938  00A3               	movwf	?___awdiv+1
  3983  0939  0829               	movf	___awdiv@quotient,w
  3984  093A  00A2               	movwf	?___awdiv
  3985  093B                     l569:
  3986  093B  0008               	return
  3987  093C                     __end_of___awdiv:
  3988                           
  3989                           	psect	text5
  3990  1003                     __ptext5:	
  3991 ;; *************** function _isdigit *****************
  3992 ;; Defined at:
  3993 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  c               1    wreg     unsigned char 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  c               1    4[COMMON] unsigned char 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;		None               void
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4007 ;;      Params:         0       0       0       0       0
  4008 ;;      Locals:         2       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0
  4010 ;;      Totals:         2       0       0       0       0
  4011 ;;Total ram usage:        2 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    1
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_sprintf
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           
  4022                           ;psect for function _isdigit
  4023  1003                     _isdigit:
  4024                           
  4025                           ;incstack = 0
  4026                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4027                           ;isdigit@c stored from wreg
  4028  1003  00F4               	movwf	isdigit@c
  4029  1004                     l2919:
  4030  1004  01F3               	clrf	_isdigit$1088
  4031  1005                     l2921:
  4032  1005  303A               	movlw	58
  4033  1006  0274               	subwf	isdigit@c,w
  4034  1007  1803               	skipnc
  4035  1008  280A               	goto	u4291
  4036  1009  280B               	goto	u4290
  4037  100A                     u4291:
  4038  100A  2813               	goto	l2927
  4039  100B                     u4290:
  4040  100B                     l2923:
  4041  100B  3030               	movlw	48
  4042  100C  0274               	subwf	isdigit@c,w
  4043  100D  1C03               	skipc
  4044  100E  2810               	goto	u4301
  4045  100F  2811               	goto	u4300
  4046  1010                     u4301:
  4047  1010  2813               	goto	l2927
  4048  1011                     u4300:
  4049  1011                     l2925:
  4050  1011  01F3               	clrf	_isdigit$1088
  4051  1012  0AF3               	incf	_isdigit$1088,f
  4052  1013                     l2927:
  4053  1013  0C73               	rrf	_isdigit$1088,w
  4054  1014                     l903:
  4055  1014  0008               	return
  4056  1015                     __end_of_isdigit:
  4057                           
  4058                           	psect	text6
  4059  05CB                     __ptext6:	
  4060 ;; *************** function _fround *****************
  4061 ;; Defined at:
  4062 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  prec            1    wreg     unsigned char 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  prec            1   56[BANK0 ] unsigned char 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  4   37[BANK0 ] unsigned char 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4076 ;;      Params:         0       4       0       0       0
  4077 ;;      Locals:         0       9       0       0       0
  4078 ;;      Temps:          0       7       0       0       0
  4079 ;;      Totals:         0      20       0       0       0
  4080 ;;Total ram usage:       20 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    3
  4083 ;; This function calls:
  4084 ;;		___flmul
  4085 ;;		___lwdiv
  4086 ;;		___lwmod
  4087 ;; This function is called by:
  4088 ;;		_sprintf
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           
  4093                           ;psect for function _fround
  4094  05CB                     _fround:
  4095                           
  4096                           ;incstack = 0
  4097                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4098                           ;fround@prec stored from wreg
  4099  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  4100  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  4101  05CD  00D8               	movwf	fround@prec
  4102  05CE                     l3871:
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4105  05CE  306E               	movlw	110
  4106  05CF  0258               	subwf	fround@prec,w
  4107  05D0  1C03               	skipc
  4108  05D1  2DD3               	goto	u6011
  4109  05D2  2DD4               	goto	u6010
  4110  05D3                     u6011:
  4111  05D3  2EE3               	goto	l3879
  4112  05D4                     u6010:
  4113  05D4                     l3873:
  4114                           
  4115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4116  05D4  303F               	movlw	63
  4117  05D5  00AE               	movwf	___flmul@b+3
  4118  05D6  3000               	movlw	0
  4119  05D7  00AD               	movwf	___flmul@b+2
  4120  05D8  3000               	movlw	0
  4121  05D9  00AC               	movwf	___flmul@b+1
  4122  05DA  3000               	movlw	0
  4123  05DB  00AB               	movwf	___flmul@b
  4124  05DC  3064               	movlw	100
  4125  05DD  00A1               	movwf	___lwdiv@divisor
  4126  05DE  3000               	movlw	0
  4127  05DF  00A2               	movwf	___lwdiv@divisor+1
  4128  05E0  0858               	movf	fround@prec,w
  4129  05E1  00C9               	movwf	??_fround
  4130  05E2  01CA               	clrf	??_fround+1
  4131  05E3  0849               	movf	??_fround,w
  4132  05E4  00A3               	movwf	___lwdiv@dividend
  4133  05E5  084A               	movf	??_fround+1,w
  4134  05E6  00A4               	movwf	___lwdiv@dividend+1
  4135  05E7  160A  158A  224F  120A  118A  	fcall	___lwdiv
  4136  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  4137  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  4138  05EE  0821               	movf	?___lwdiv,w
  4139  05EF  00CB               	movwf	??_fround+2
  4140  05F0  3001               	movlw	1
  4141  05F1                     u6025:
  4142  05F1  1003               	clrc
  4143  05F2  0DCB               	rlf	??_fround+2,f
  4144  05F3  3EFF               	addlw	-1
  4145  05F4  1D03               	skipz
  4146  05F5  2DF1               	goto	u6025
  4147  05F6  1003               	clrc
  4148  05F7  0D4B               	rlf	??_fround+2,w
  4149  05F8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4150  05F9  0084               	movwf	4
  4151  05FA  120A  158A  200A  120A  118A  	fcall	stringdir
  4152  05FF  00CC               	movwf	??_fround+3
  4153  0600  120A  158A  200A  120A  118A  	fcall	stringdir
  4154  0605  00CD               	movwf	??_fround+4
  4155  0606  120A  158A  200A  120A  118A  	fcall	stringdir
  4156  060B  00CE               	movwf	??_fround+5
  4157  060C  120A  158A  200A  120A  118A  	fcall	stringdir
  4158  0611  00CF               	movwf	??_fround+6
  4159  0612  084F               	movf	??_fround+6,w
  4160  0613  00B2               	movwf	___flmul@a+3
  4161  0614  084E               	movf	??_fround+5,w
  4162  0615  00B1               	movwf	___flmul@a+2
  4163  0616  084D               	movf	??_fround+4,w
  4164  0617  00B0               	movwf	___flmul@a+1
  4165  0618  084C               	movf	??_fround+3,w
  4166  0619  00AF               	movwf	___flmul@a
  4167  061A  120A  158A  213C  120A  118A  	fcall	___flmul
  4168  061F  1283               	bcf	3,5	;RP0=0, select bank0
  4169  0620  1303               	bcf	3,6	;RP1=0, select bank0
  4170  0621  082E               	movf	?___flmul+3,w
  4171  0622  00D7               	movwf	_fround$1271+3
  4172  0623  082D               	movf	?___flmul+2,w
  4173  0624  00D6               	movwf	_fround$1271+2
  4174  0625  082C               	movf	?___flmul+1,w
  4175  0626  00D5               	movwf	_fround$1271+1
  4176  0627  082B               	movf	?___flmul,w
  4177  0628  00D4               	movwf	_fround$1271
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4180  0629  300A               	movlw	10
  4181  062A  00A1               	movwf	___lwdiv@divisor
  4182  062B  3000               	movlw	0
  4183  062C  00A2               	movwf	___lwdiv@divisor+1
  4184  062D  0858               	movf	fround@prec,w
  4185  062E  00C9               	movwf	??_fround
  4186  062F  01CA               	clrf	??_fround+1
  4187  0630  0849               	movf	??_fround,w
  4188  0631  00F5               	movwf	___lwmod@dividend
  4189  0632  084A               	movf	??_fround+1,w
  4190  0633  00F6               	movwf	___lwmod@dividend+1
  4191  0634  3064               	movlw	100
  4192  0635  00F3               	movwf	___lwmod@divisor
  4193  0636  3000               	movlw	0
  4194  0637  00F4               	movwf	___lwmod@divisor+1
  4195  0638  160A  158A  218B  120A  118A  	fcall	___lwmod
  4196  063D  0874               	movf	?___lwmod+1,w
  4197  063E  1283               	bcf	3,5	;RP0=0, select bank0
  4198  063F  1303               	bcf	3,6	;RP1=0, select bank0
  4199  0640  00A4               	movwf	___lwdiv@dividend+1
  4200  0641  0873               	movf	?___lwmod,w
  4201  0642  00A3               	movwf	___lwdiv@dividend
  4202  0643  160A  158A  224F  120A  118A  	fcall	___lwdiv
  4203  0648  1283               	bcf	3,5	;RP0=0, select bank0
  4204  0649  1303               	bcf	3,6	;RP1=0, select bank0
  4205  064A  0821               	movf	?___lwdiv,w
  4206  064B  00CB               	movwf	??_fround+2
  4207  064C  3001               	movlw	1
  4208  064D                     u6035:
  4209  064D  1003               	clrc
  4210  064E  0DCB               	rlf	??_fround+2,f
  4211  064F  3EFF               	addlw	-1
  4212  0650  1D03               	skipz
  4213  0651  2E4D               	goto	u6035
  4214  0652  1003               	clrc
  4215  0653  0D4B               	rlf	??_fround+2,w
  4216  0654  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4217  0655  0084               	movwf	4
  4218  0656  120A  158A  200A  120A  118A  	fcall	stringdir
  4219  065B  00CC               	movwf	??_fround+3
  4220  065C  120A  158A  200A  120A  118A  	fcall	stringdir
  4221  0661  00CD               	movwf	??_fround+4
  4222  0662  120A  158A  200A  120A  118A  	fcall	stringdir
  4223  0667  00CE               	movwf	??_fround+5
  4224  0668  120A  158A  200A  120A  118A  	fcall	stringdir
  4225  066D  00CF               	movwf	??_fround+6
  4226  066E  084F               	movf	??_fround+6,w
  4227  066F  00AE               	movwf	___flmul@b+3
  4228  0670  084E               	movf	??_fround+5,w
  4229  0671  00AD               	movwf	___flmul@b+2
  4230  0672  084D               	movf	??_fround+4,w
  4231  0673  00AC               	movwf	___flmul@b+1
  4232  0674  084C               	movf	??_fround+3,w
  4233  0675  00AB               	movwf	___flmul@b
  4234  0676  0857               	movf	_fround$1271+3,w
  4235  0677  00B2               	movwf	___flmul@a+3
  4236  0678  0856               	movf	_fround$1271+2,w
  4237  0679  00B1               	movwf	___flmul@a+2
  4238  067A  0855               	movf	_fround$1271+1,w
  4239  067B  00B0               	movwf	___flmul@a+1
  4240  067C  0854               	movf	_fround$1271,w
  4241  067D  00AF               	movwf	___flmul@a
  4242  067E  120A  158A  213C  120A  118A  	fcall	___flmul
  4243  0683  1283               	bcf	3,5	;RP0=0, select bank0
  4244  0684  1303               	bcf	3,6	;RP1=0, select bank0
  4245  0685  082E               	movf	?___flmul+3,w
  4246  0686  00D3               	movwf	_fround$1272+3
  4247  0687  082D               	movf	?___flmul+2,w
  4248  0688  00D2               	movwf	_fround$1272+2
  4249  0689  082C               	movf	?___flmul+1,w
  4250  068A  00D1               	movwf	_fround$1272+1
  4251  068B  082B               	movf	?___flmul,w
  4252  068C  00D0               	movwf	_fround$1272
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4255  068D  300A               	movlw	10
  4256  068E  00F3               	movwf	___lwmod@divisor
  4257  068F  3000               	movlw	0
  4258  0690  00F4               	movwf	___lwmod@divisor+1
  4259  0691  0858               	movf	fround@prec,w
  4260  0692  00C9               	movwf	??_fround
  4261  0693  01CA               	clrf	??_fround+1
  4262  0694  0849               	movf	??_fround,w
  4263  0695  00F5               	movwf	___lwmod@dividend
  4264  0696  084A               	movf	??_fround+1,w
  4265  0697  00F6               	movwf	___lwmod@dividend+1
  4266  0698  160A  158A  218B  120A  118A  	fcall	___lwmod
  4267  069D  0873               	movf	?___lwmod,w
  4268  069E  1283               	bcf	3,5	;RP0=0, select bank0
  4269  069F  1303               	bcf	3,6	;RP1=0, select bank0
  4270  06A0  00CB               	movwf	??_fround+2
  4271  06A1  3001               	movlw	1
  4272  06A2                     u6045:
  4273  06A2  1003               	clrc
  4274  06A3  0DCB               	rlf	??_fround+2,f
  4275  06A4  3EFF               	addlw	-1
  4276  06A5  1D03               	skipz
  4277  06A6  2EA2               	goto	u6045
  4278  06A7  1003               	clrc
  4279  06A8  0D4B               	rlf	??_fround+2,w
  4280  06A9  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4281  06AA  0084               	movwf	4
  4282  06AB  120A  158A  200A  120A  118A  	fcall	stringdir
  4283  06B0  00CC               	movwf	??_fround+3
  4284  06B1  120A  158A  200A  120A  118A  	fcall	stringdir
  4285  06B6  00CD               	movwf	??_fround+4
  4286  06B7  120A  158A  200A  120A  118A  	fcall	stringdir
  4287  06BC  00CE               	movwf	??_fround+5
  4288  06BD  120A  158A  200A  120A  118A  	fcall	stringdir
  4289  06C2  00CF               	movwf	??_fround+6
  4290  06C3  084F               	movf	??_fround+6,w
  4291  06C4  00AE               	movwf	___flmul@b+3
  4292  06C5  084E               	movf	??_fround+5,w
  4293  06C6  00AD               	movwf	___flmul@b+2
  4294  06C7  084D               	movf	??_fround+4,w
  4295  06C8  00AC               	movwf	___flmul@b+1
  4296  06C9  084C               	movf	??_fround+3,w
  4297  06CA  00AB               	movwf	___flmul@b
  4298  06CB  0853               	movf	_fround$1272+3,w
  4299  06CC  00B2               	movwf	___flmul@a+3
  4300  06CD  0852               	movf	_fround$1272+2,w
  4301  06CE  00B1               	movwf	___flmul@a+2
  4302  06CF  0851               	movf	_fround$1272+1,w
  4303  06D0  00B0               	movwf	___flmul@a+1
  4304  06D1  0850               	movf	_fround$1272,w
  4305  06D2  00AF               	movwf	___flmul@a
  4306  06D3  120A  158A  213C  120A  118A  	fcall	___flmul
  4307  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  4308  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  4309  06DA  082E               	movf	?___flmul+3,w
  4310  06DB  00C8               	movwf	?_fround+3
  4311  06DC  082D               	movf	?___flmul+2,w
  4312  06DD  00C7               	movwf	?_fround+2
  4313  06DE  082C               	movf	?___flmul+1,w
  4314  06DF  00C6               	movwf	?_fround+1
  4315  06E0  082B               	movf	?___flmul,w
  4316  06E1  00C5               	movwf	?_fround
  4317  06E2  2FD7               	goto	l322
  4318  06E3                     l3879:
  4319  06E3  300B               	movlw	11
  4320  06E4  0258               	subwf	fround@prec,w
  4321  06E5  1C03               	skipc
  4322  06E6  2EE8               	goto	u6051
  4323  06E7  2EE9               	goto	u6050
  4324  06E8                     u6051:
  4325  06E8  2F94               	goto	l3885
  4326  06E9                     u6050:
  4327  06E9                     l3881:
  4328                           
  4329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4330  06E9  303F               	movlw	63
  4331  06EA  00AE               	movwf	___flmul@b+3
  4332  06EB  3000               	movlw	0
  4333  06EC  00AD               	movwf	___flmul@b+2
  4334  06ED  3000               	movlw	0
  4335  06EE  00AC               	movwf	___flmul@b+1
  4336  06EF  3000               	movlw	0
  4337  06F0  00AB               	movwf	___flmul@b
  4338  06F1  300A               	movlw	10
  4339  06F2  00A1               	movwf	___lwdiv@divisor
  4340  06F3  3000               	movlw	0
  4341  06F4  00A2               	movwf	___lwdiv@divisor+1
  4342  06F5  0858               	movf	fround@prec,w
  4343  06F6  00C9               	movwf	??_fround
  4344  06F7  01CA               	clrf	??_fround+1
  4345  06F8  0849               	movf	??_fround,w
  4346  06F9  00A3               	movwf	___lwdiv@dividend
  4347  06FA  084A               	movf	??_fround+1,w
  4348  06FB  00A4               	movwf	___lwdiv@dividend+1
  4349  06FC  160A  158A  224F  120A  118A  	fcall	___lwdiv
  4350  0701  1283               	bcf	3,5	;RP0=0, select bank0
  4351  0702  1303               	bcf	3,6	;RP1=0, select bank0
  4352  0703  0821               	movf	?___lwdiv,w
  4353  0704  00CB               	movwf	??_fround+2
  4354  0705  3001               	movlw	1
  4355  0706                     u6065:
  4356  0706  1003               	clrc
  4357  0707  0DCB               	rlf	??_fround+2,f
  4358  0708  3EFF               	addlw	-1
  4359  0709  1D03               	skipz
  4360  070A  2F06               	goto	u6065
  4361  070B  1003               	clrc
  4362  070C  0D4B               	rlf	??_fround+2,w
  4363  070D  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4364  070E  0084               	movwf	4
  4365  070F  120A  158A  200A  120A  118A  	fcall	stringdir
  4366  0714  00CC               	movwf	??_fround+3
  4367  0715  120A  158A  200A  120A  118A  	fcall	stringdir
  4368  071A  00CD               	movwf	??_fround+4
  4369  071B  120A  158A  200A  120A  118A  	fcall	stringdir
  4370  0720  00CE               	movwf	??_fround+5
  4371  0721  120A  158A  200A  120A  118A  	fcall	stringdir
  4372  0726  00CF               	movwf	??_fround+6
  4373  0727  084F               	movf	??_fround+6,w
  4374  0728  00B2               	movwf	___flmul@a+3
  4375  0729  084E               	movf	??_fround+5,w
  4376  072A  00B1               	movwf	___flmul@a+2
  4377  072B  084D               	movf	??_fround+4,w
  4378  072C  00B0               	movwf	___flmul@a+1
  4379  072D  084C               	movf	??_fround+3,w
  4380  072E  00AF               	movwf	___flmul@a
  4381  072F  120A  158A  213C  120A  118A  	fcall	___flmul
  4382  0734  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0735  1303               	bcf	3,6	;RP1=0, select bank0
  4384  0736  082E               	movf	?___flmul+3,w
  4385  0737  00D7               	movwf	_fround$1271+3
  4386  0738  082D               	movf	?___flmul+2,w
  4387  0739  00D6               	movwf	_fround$1271+2
  4388  073A  082C               	movf	?___flmul+1,w
  4389  073B  00D5               	movwf	_fround$1271+1
  4390  073C  082B               	movf	?___flmul,w
  4391  073D  00D4               	movwf	_fround$1271
  4392                           
  4393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4394  073E  300A               	movlw	10
  4395  073F  00F3               	movwf	___lwmod@divisor
  4396  0740  3000               	movlw	0
  4397  0741  00F4               	movwf	___lwmod@divisor+1
  4398  0742  0858               	movf	fround@prec,w
  4399  0743  00C9               	movwf	??_fround
  4400  0744  01CA               	clrf	??_fround+1
  4401  0745  0849               	movf	??_fround,w
  4402  0746  00F5               	movwf	___lwmod@dividend
  4403  0747  084A               	movf	??_fround+1,w
  4404  0748  00F6               	movwf	___lwmod@dividend+1
  4405  0749  160A  158A  218B  120A  118A  	fcall	___lwmod
  4406  074E  0873               	movf	?___lwmod,w
  4407  074F  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0750  1303               	bcf	3,6	;RP1=0, select bank0
  4409  0751  00CB               	movwf	??_fround+2
  4410  0752  3001               	movlw	1
  4411  0753                     u6075:
  4412  0753  1003               	clrc
  4413  0754  0DCB               	rlf	??_fround+2,f
  4414  0755  3EFF               	addlw	-1
  4415  0756  1D03               	skipz
  4416  0757  2F53               	goto	u6075
  4417  0758  1003               	clrc
  4418  0759  0D4B               	rlf	??_fround+2,w
  4419  075A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4420  075B  0084               	movwf	4
  4421  075C  120A  158A  200A  120A  118A  	fcall	stringdir
  4422  0761  00CC               	movwf	??_fround+3
  4423  0762  120A  158A  200A  120A  118A  	fcall	stringdir
  4424  0767  00CD               	movwf	??_fround+4
  4425  0768  120A  158A  200A  120A  118A  	fcall	stringdir
  4426  076D  00CE               	movwf	??_fround+5
  4427  076E  120A  158A  200A  120A  118A  	fcall	stringdir
  4428  0773  00CF               	movwf	??_fround+6
  4429  0774  084F               	movf	??_fround+6,w
  4430  0775  00AE               	movwf	___flmul@b+3
  4431  0776  084E               	movf	??_fround+5,w
  4432  0777  00AD               	movwf	___flmul@b+2
  4433  0778  084D               	movf	??_fround+4,w
  4434  0779  00AC               	movwf	___flmul@b+1
  4435  077A  084C               	movf	??_fround+3,w
  4436  077B  00AB               	movwf	___flmul@b
  4437  077C  0857               	movf	_fround$1271+3,w
  4438  077D  00B2               	movwf	___flmul@a+3
  4439  077E  0856               	movf	_fround$1271+2,w
  4440  077F  00B1               	movwf	___flmul@a+2
  4441  0780  0855               	movf	_fround$1271+1,w
  4442  0781  00B0               	movwf	___flmul@a+1
  4443  0782  0854               	movf	_fround$1271,w
  4444  0783  00AF               	movwf	___flmul@a
  4445  0784  120A  158A  213C  120A  118A  	fcall	___flmul
  4446  0789  1283               	bcf	3,5	;RP0=0, select bank0
  4447  078A  1303               	bcf	3,6	;RP1=0, select bank0
  4448  078B  082E               	movf	?___flmul+3,w
  4449  078C  00C8               	movwf	?_fround+3
  4450  078D  082D               	movf	?___flmul+2,w
  4451  078E  00C7               	movwf	?_fround+2
  4452  078F  082C               	movf	?___flmul+1,w
  4453  0790  00C6               	movwf	?_fround+1
  4454  0791  082B               	movf	?___flmul,w
  4455  0792  00C5               	movwf	?_fround
  4456  0793  2FD7               	goto	l322
  4457  0794                     l3885:
  4458                           
  4459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4460  0794  303F               	movlw	63
  4461  0795  00AE               	movwf	___flmul@b+3
  4462  0796  3000               	movlw	0
  4463  0797  00AD               	movwf	___flmul@b+2
  4464  0798  3000               	movlw	0
  4465  0799  00AC               	movwf	___flmul@b+1
  4466  079A  3000               	movlw	0
  4467  079B  00AB               	movwf	___flmul@b
  4468  079C  0858               	movf	fround@prec,w
  4469  079D  00C9               	movwf	??_fround
  4470  079E  3001               	movlw	1
  4471  079F                     u6085:
  4472  079F  1003               	clrc
  4473  07A0  0DC9               	rlf	??_fround,f
  4474  07A1  3EFF               	addlw	-1
  4475  07A2  1D03               	skipz
  4476  07A3  2F9F               	goto	u6085
  4477  07A4  1003               	clrc
  4478  07A5  0D49               	rlf	??_fround,w
  4479  07A6  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4480  07A7  0084               	movwf	4
  4481  07A8  120A  158A  200A  120A  118A  	fcall	stringdir
  4482  07AD  00CA               	movwf	??_fround+1
  4483  07AE  120A  158A  200A  120A  118A  	fcall	stringdir
  4484  07B3  00CB               	movwf	??_fround+2
  4485  07B4  120A  158A  200A  120A  118A  	fcall	stringdir
  4486  07B9  00CC               	movwf	??_fround+3
  4487  07BA  120A  158A  200A  120A  118A  	fcall	stringdir
  4488  07BF  00CD               	movwf	??_fround+4
  4489  07C0  084D               	movf	??_fround+4,w
  4490  07C1  00B2               	movwf	___flmul@a+3
  4491  07C2  084C               	movf	??_fround+3,w
  4492  07C3  00B1               	movwf	___flmul@a+2
  4493  07C4  084B               	movf	??_fround+2,w
  4494  07C5  00B0               	movwf	___flmul@a+1
  4495  07C6  084A               	movf	??_fround+1,w
  4496  07C7  00AF               	movwf	___flmul@a
  4497  07C8  120A  158A  213C  120A  118A  	fcall	___flmul
  4498  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  4499  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  4500  07CF  082E               	movf	?___flmul+3,w
  4501  07D0  00C8               	movwf	?_fround+3
  4502  07D1  082D               	movf	?___flmul+2,w
  4503  07D2  00C7               	movwf	?_fround+2
  4504  07D3  082C               	movf	?___flmul+1,w
  4505  07D4  00C6               	movwf	?_fround+1
  4506  07D5  082B               	movf	?___flmul,w
  4507  07D6  00C5               	movwf	?_fround
  4508  07D7                     l322:
  4509  07D7  0008               	return
  4510  07D8                     __end_of_fround:
  4511                           
  4512                           	psect	text7
  4513  198B                     __ptext7:	
  4514 ;; *************** function ___lwmod *****************
  4515 ;; Defined at:
  4516 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  divisor         2    3[COMMON] unsigned int 
  4519 ;;  dividend        2    5[COMMON] unsigned int 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  counter         1    0[BANK0 ] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  2    3[COMMON] unsigned int 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         4       0       0       0       0
  4532 ;;      Locals:         0       1       0       0       0
  4533 ;;      Temps:          1       0       0       0       0
  4534 ;;      Totals:         5       1       0       0       0
  4535 ;;Total ram usage:        6 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    1
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_fround
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           
  4546                           ;psect for function ___lwmod
  4547  198B                     ___lwmod:
  4548  198B                     l3827:	
  4549                           ;incstack = 0
  4550                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4551                           
  4552  198B  0873               	movf	___lwmod@divisor,w
  4553  198C  0474               	iorwf	___lwmod@divisor+1,w
  4554  198D  1903               	btfsc	3,2
  4555  198E  2990               	goto	u5951
  4556  198F  2991               	goto	u5950
  4557  1990                     u5951:
  4558  1990  29C2               	goto	l3845
  4559  1991                     u5950:
  4560  1991                     l3829:
  4561  1991  1283               	bcf	3,5	;RP0=0, select bank0
  4562  1992  1303               	bcf	3,6	;RP1=0, select bank0
  4563  1993  01A0               	clrf	___lwmod@counter
  4564  1994  0AA0               	incf	___lwmod@counter,f
  4565  1995  29A1               	goto	l3835
  4566  1996                     l3831:
  4567  1996  3001               	movlw	1
  4568  1997                     u5965:
  4569  1997  1003               	clrc
  4570  1998  0DF3               	rlf	___lwmod@divisor,f
  4571  1999  0DF4               	rlf	___lwmod@divisor+1,f
  4572  199A  3EFF               	addlw	-1
  4573  199B  1D03               	skipz
  4574  199C  2997               	goto	u5965
  4575  199D                     l3833:
  4576  199D  3001               	movlw	1
  4577  199E  00F7               	movwf	??___lwmod
  4578  199F  0877               	movf	??___lwmod,w
  4579  19A0  07A0               	addwf	___lwmod@counter,f
  4580  19A1                     l3835:
  4581  19A1  1FF4               	btfss	___lwmod@divisor+1,7
  4582  19A2  29A4               	goto	u5971
  4583  19A3  29A5               	goto	u5970
  4584  19A4                     u5971:
  4585  19A4  2996               	goto	l3831
  4586  19A5                     u5970:
  4587  19A5                     l3837:
  4588  19A5  0874               	movf	___lwmod@divisor+1,w
  4589  19A6  0276               	subwf	___lwmod@dividend+1,w
  4590  19A7  1D03               	skipz
  4591  19A8  29AB               	goto	u5985
  4592  19A9  0873               	movf	___lwmod@divisor,w
  4593  19AA  0275               	subwf	___lwmod@dividend,w
  4594  19AB                     u5985:
  4595  19AB  1C03               	skipc
  4596  19AC  29AE               	goto	u5981
  4597  19AD  29AF               	goto	u5980
  4598  19AE                     u5981:
  4599  19AE  29B5               	goto	l3841
  4600  19AF                     u5980:
  4601  19AF                     l3839:
  4602  19AF  0873               	movf	___lwmod@divisor,w
  4603  19B0  02F5               	subwf	___lwmod@dividend,f
  4604  19B1  0874               	movf	___lwmod@divisor+1,w
  4605  19B2  1C03               	skipc
  4606  19B3  03F6               	decf	___lwmod@dividend+1,f
  4607  19B4  02F6               	subwf	___lwmod@dividend+1,f
  4608  19B5                     l3841:
  4609  19B5  3001               	movlw	1
  4610  19B6                     u5995:
  4611  19B6  1003               	clrc
  4612  19B7  0CF4               	rrf	___lwmod@divisor+1,f
  4613  19B8  0CF3               	rrf	___lwmod@divisor,f
  4614  19B9  3EFF               	addlw	-1
  4615  19BA  1D03               	skipz
  4616  19BB  29B6               	goto	u5995
  4617  19BC                     l3843:
  4618  19BC  3001               	movlw	1
  4619  19BD  02A0               	subwf	___lwmod@counter,f
  4620  19BE  1D03               	btfss	3,2
  4621  19BF  29C1               	goto	u6001
  4622  19C0  29C2               	goto	u6000
  4623  19C1                     u6001:
  4624  19C1  29A5               	goto	l3837
  4625  19C2                     u6000:
  4626  19C2                     l3845:
  4627  19C2  0876               	movf	___lwmod@dividend+1,w
  4628  19C3  00F4               	movwf	?___lwmod+1
  4629  19C4  0875               	movf	___lwmod@dividend,w
  4630  19C5  00F3               	movwf	?___lwmod
  4631  19C6                     l732:
  4632  19C6  0008               	return
  4633  19C7                     __end_of___lwmod:
  4634                           
  4635                           	psect	text8
  4636  1A4F                     __ptext8:	
  4637 ;; *************** function ___lwdiv *****************
  4638 ;; Defined at:
  4639 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;  divisor         2    1[BANK0 ] unsigned int 
  4642 ;;  dividend        2    3[BANK0 ] unsigned int 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  quotient        2    7[BANK0 ] unsigned int 
  4645 ;;  counter         1    6[BANK0 ] unsigned char 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  2    1[BANK0 ] unsigned int 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, status,0
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4655 ;;      Params:         0       4       0       0       0
  4656 ;;      Locals:         0       3       0       0       0
  4657 ;;      Temps:          0       1       0       0       0
  4658 ;;      Totals:         0       8       0       0       0
  4659 ;;Total ram usage:        8 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_fround
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function ___lwdiv
  4671  1A4F                     ___lwdiv:
  4672  1A4F                     l3801:	
  4673                           ;incstack = 0
  4674                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4675                           
  4676  1A4F  1283               	bcf	3,5	;RP0=0, select bank0
  4677  1A50  1303               	bcf	3,6	;RP1=0, select bank0
  4678  1A51  01A7               	clrf	___lwdiv@quotient
  4679  1A52  01A8               	clrf	___lwdiv@quotient+1
  4680  1A53                     l3803:
  4681  1A53  0821               	movf	___lwdiv@divisor,w
  4682  1A54  0422               	iorwf	___lwdiv@divisor+1,w
  4683  1A55  1903               	btfsc	3,2
  4684  1A56  2A58               	goto	u5881
  4685  1A57  2A59               	goto	u5880
  4686  1A58                     u5881:
  4687  1A58  2A90               	goto	l3823
  4688  1A59                     u5880:
  4689  1A59                     l3805:
  4690  1A59  01A6               	clrf	___lwdiv@counter
  4691  1A5A  0AA6               	incf	___lwdiv@counter,f
  4692  1A5B  2A67               	goto	l3811
  4693  1A5C                     l3807:
  4694  1A5C  3001               	movlw	1
  4695  1A5D                     u5895:
  4696  1A5D  1003               	clrc
  4697  1A5E  0DA1               	rlf	___lwdiv@divisor,f
  4698  1A5F  0DA2               	rlf	___lwdiv@divisor+1,f
  4699  1A60  3EFF               	addlw	-1
  4700  1A61  1D03               	skipz
  4701  1A62  2A5D               	goto	u5895
  4702  1A63                     l3809:
  4703  1A63  3001               	movlw	1
  4704  1A64  00A5               	movwf	??___lwdiv
  4705  1A65  0825               	movf	??___lwdiv,w
  4706  1A66  07A6               	addwf	___lwdiv@counter,f
  4707  1A67                     l3811:
  4708  1A67  1FA2               	btfss	___lwdiv@divisor+1,7
  4709  1A68  2A6A               	goto	u5901
  4710  1A69  2A6B               	goto	u5900
  4711  1A6A                     u5901:
  4712  1A6A  2A5C               	goto	l3807
  4713  1A6B                     u5900:
  4714  1A6B                     l3813:
  4715  1A6B  3001               	movlw	1
  4716  1A6C                     u5915:
  4717  1A6C  1003               	clrc
  4718  1A6D  0DA7               	rlf	___lwdiv@quotient,f
  4719  1A6E  0DA8               	rlf	___lwdiv@quotient+1,f
  4720  1A6F  3EFF               	addlw	-1
  4721  1A70  1D03               	skipz
  4722  1A71  2A6C               	goto	u5915
  4723  1A72  0822               	movf	___lwdiv@divisor+1,w
  4724  1A73  0224               	subwf	___lwdiv@dividend+1,w
  4725  1A74  1D03               	skipz
  4726  1A75  2A78               	goto	u5925
  4727  1A76  0821               	movf	___lwdiv@divisor,w
  4728  1A77  0223               	subwf	___lwdiv@dividend,w
  4729  1A78                     u5925:
  4730  1A78  1C03               	skipc
  4731  1A79  2A7B               	goto	u5921
  4732  1A7A  2A7C               	goto	u5920
  4733  1A7B                     u5921:
  4734  1A7B  2A83               	goto	l3819
  4735  1A7C                     u5920:
  4736  1A7C                     l3815:
  4737  1A7C  0821               	movf	___lwdiv@divisor,w
  4738  1A7D  02A3               	subwf	___lwdiv@dividend,f
  4739  1A7E  0822               	movf	___lwdiv@divisor+1,w
  4740  1A7F  1C03               	skipc
  4741  1A80  03A4               	decf	___lwdiv@dividend+1,f
  4742  1A81  02A4               	subwf	___lwdiv@dividend+1,f
  4743  1A82                     l3817:
  4744  1A82  1427               	bsf	___lwdiv@quotient,0
  4745  1A83                     l3819:
  4746  1A83  3001               	movlw	1
  4747  1A84                     u5935:
  4748  1A84  1003               	clrc
  4749  1A85  0CA2               	rrf	___lwdiv@divisor+1,f
  4750  1A86  0CA1               	rrf	___lwdiv@divisor,f
  4751  1A87  3EFF               	addlw	-1
  4752  1A88  1D03               	skipz
  4753  1A89  2A84               	goto	u5935
  4754  1A8A                     l3821:
  4755  1A8A  3001               	movlw	1
  4756  1A8B  02A6               	subwf	___lwdiv@counter,f
  4757  1A8C  1D03               	btfss	3,2
  4758  1A8D  2A8F               	goto	u5941
  4759  1A8E  2A90               	goto	u5940
  4760  1A8F                     u5941:
  4761  1A8F  2A6B               	goto	l3813
  4762  1A90                     u5940:
  4763  1A90                     l3823:
  4764  1A90  0828               	movf	___lwdiv@quotient+1,w
  4765  1A91  00A2               	movwf	?___lwdiv+1
  4766  1A92  0827               	movf	___lwdiv@quotient,w
  4767  1A93  00A1               	movwf	?___lwdiv
  4768  1A94                     l722:
  4769  1A94  0008               	return
  4770  1A95                     __end_of___lwdiv:
  4771                           
  4772                           	psect	text9
  4773  1E85                     __ptext9:	
  4774 ;; *************** function __tdiv_to_l_ *****************
  4775 ;; Defined at:
  4776 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  f1              4    0[BANK0 ] float 
  4779 ;;  f2              4    4[BANK0 ] float 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  quot            4    8[BANK0 ] unsigned long 
  4782 ;;  exp1            1   13[BANK0 ] unsigned char 
  4783 ;;  cntr            1   12[BANK0 ] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  4    0[BANK0 ] unsigned long 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4793 ;;      Params:         0       8       0       0       0
  4794 ;;      Locals:         0       6       0       0       0
  4795 ;;      Temps:          4       0       0       0       0
  4796 ;;      Totals:         4      14       0       0       0
  4797 ;;Total ram usage:       18 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_sprintf
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           
  4808                           ;psect for function __tdiv_to_l_
  4809  1E85                     __tdiv_to_l_:
  4810  1E85                     l3929:	
  4811                           ;incstack = 0
  4812                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4813                           
  4814  1E85  1283               	bcf	3,5	;RP0=0, select bank0
  4815  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  4816  1E87  0820               	movf	__tdiv_to_l_@f1,w
  4817  1E88  00F3               	movwf	??__tdiv_to_l_
  4818  1E89  0821               	movf	__tdiv_to_l_@f1+1,w
  4819  1E8A  00F4               	movwf	??__tdiv_to_l_+1
  4820  1E8B  0822               	movf	__tdiv_to_l_@f1+2,w
  4821  1E8C  00F5               	movwf	??__tdiv_to_l_+2
  4822  1E8D  1003               	clrc
  4823  1E8E  0D74               	rlf	??__tdiv_to_l_+1,w
  4824  1E8F  0D75               	rlf	??__tdiv_to_l_+2,w
  4825  1E90  00F6               	movwf	??__tdiv_to_l_+3
  4826  1E91  0876               	movf	??__tdiv_to_l_+3,w
  4827  1E92  00AD               	movwf	__tdiv_to_l_@exp1
  4828  1E93  082D               	movf	__tdiv_to_l_@exp1,w
  4829  1E94  1D03               	btfss	3,2
  4830  1E95  2E97               	goto	u6261
  4831  1E96  2E98               	goto	u6260
  4832  1E97                     u6261:
  4833  1E97  2EA1               	goto	l3935
  4834  1E98                     u6260:
  4835  1E98                     l3931:
  4836  1E98  3000               	movlw	0
  4837  1E99  00A3               	movwf	?__tdiv_to_l_+3
  4838  1E9A  3000               	movlw	0
  4839  1E9B  00A2               	movwf	?__tdiv_to_l_+2
  4840  1E9C  3000               	movlw	0
  4841  1E9D  00A1               	movwf	?__tdiv_to_l_+1
  4842  1E9E  3000               	movlw	0
  4843  1E9F  00A0               	movwf	?__tdiv_to_l_
  4844  1EA0  2F41               	goto	l633
  4845  1EA1                     l3935:
  4846  1EA1  0824               	movf	__tdiv_to_l_@f2,w
  4847  1EA2  00F3               	movwf	??__tdiv_to_l_
  4848  1EA3  0825               	movf	__tdiv_to_l_@f2+1,w
  4849  1EA4  00F4               	movwf	??__tdiv_to_l_+1
  4850  1EA5  0826               	movf	__tdiv_to_l_@f2+2,w
  4851  1EA6  00F5               	movwf	??__tdiv_to_l_+2
  4852  1EA7  1003               	clrc
  4853  1EA8  0D74               	rlf	??__tdiv_to_l_+1,w
  4854  1EA9  0D75               	rlf	??__tdiv_to_l_+2,w
  4855  1EAA  00F6               	movwf	??__tdiv_to_l_+3
  4856  1EAB  0876               	movf	??__tdiv_to_l_+3,w
  4857  1EAC  00AC               	movwf	__tdiv_to_l_@cntr
  4858  1EAD  082C               	movf	__tdiv_to_l_@cntr,w
  4859  1EAE  1D03               	btfss	3,2
  4860  1EAF  2EB1               	goto	u6271
  4861  1EB0  2EB2               	goto	u6270
  4862  1EB1                     u6271:
  4863  1EB1  2EB3               	goto	l634
  4864  1EB2                     u6270:
  4865  1EB2  2E98               	goto	l3931
  4866  1EB3                     l634:
  4867  1EB3  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4868  1EB4                     l3941:
  4869  1EB4  30FF               	movlw	255
  4870  1EB5  05A0               	andwf	__tdiv_to_l_@f1,f
  4871  1EB6  30FF               	movlw	255
  4872  1EB7  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4873  1EB8  3000               	movlw	0
  4874  1EB9  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4875  1EBA                     l3943:
  4876  1EBA  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4877  1EBB  30FF               	movlw	255
  4878  1EBC  05A4               	andwf	__tdiv_to_l_@f2,f
  4879  1EBD  30FF               	movlw	255
  4880  1EBE  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4881  1EBF  3000               	movlw	0
  4882  1EC0  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4883  1EC1  3000               	movlw	0
  4884  1EC2  00AB               	movwf	__tdiv_to_l_@quot+3
  4885  1EC3  3000               	movlw	0
  4886  1EC4  00AA               	movwf	__tdiv_to_l_@quot+2
  4887  1EC5  3000               	movlw	0
  4888  1EC6  00A9               	movwf	__tdiv_to_l_@quot+1
  4889  1EC7  3000               	movlw	0
  4890  1EC8  00A8               	movwf	__tdiv_to_l_@quot
  4891  1EC9                     l3945:
  4892  1EC9  307F               	movlw	127
  4893  1ECA  02AD               	subwf	__tdiv_to_l_@exp1,f
  4894  1ECB                     l3947:
  4895  1ECB  3098               	movlw	152
  4896  1ECC  072C               	addwf	__tdiv_to_l_@cntr,w
  4897  1ECD  00F3               	movwf	??__tdiv_to_l_
  4898  1ECE  0873               	movf	??__tdiv_to_l_,w
  4899  1ECF  02AD               	subwf	__tdiv_to_l_@exp1,f
  4900  1ED0  3018               	movlw	24
  4901  1ED1  00F3               	movwf	??__tdiv_to_l_
  4902  1ED2  0873               	movf	??__tdiv_to_l_,w
  4903  1ED3  00AC               	movwf	__tdiv_to_l_@cntr
  4904  1ED4                     l3949:
  4905  1ED4  3001               	movlw	1
  4906  1ED5  00F3               	movwf	??__tdiv_to_l_
  4907  1ED6                     u6285:
  4908  1ED6  1003               	clrc
  4909  1ED7  0DA8               	rlf	__tdiv_to_l_@quot,f
  4910  1ED8  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4911  1ED9  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4912  1EDA  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4913  1EDB  0BF3               	decfsz	??__tdiv_to_l_,f
  4914  1EDC  2ED6               	goto	u6285
  4915  1EDD                     l3951:
  4916  1EDD  0826               	movf	__tdiv_to_l_@f2+2,w
  4917  1EDE  0222               	subwf	__tdiv_to_l_@f1+2,w
  4918  1EDF  1D03               	skipz
  4919  1EE0  2EE7               	goto	u6295
  4920  1EE1  0825               	movf	__tdiv_to_l_@f2+1,w
  4921  1EE2  0221               	subwf	__tdiv_to_l_@f1+1,w
  4922  1EE3  1D03               	skipz
  4923  1EE4  2EE7               	goto	u6295
  4924  1EE5  0824               	movf	__tdiv_to_l_@f2,w
  4925  1EE6  0220               	subwf	__tdiv_to_l_@f1,w
  4926  1EE7                     u6295:
  4927  1EE7  1C03               	skipc
  4928  1EE8  2EEA               	goto	u6291
  4929  1EE9  2EEB               	goto	u6290
  4930  1EEA                     u6291:
  4931  1EEA  2EF6               	goto	l3957
  4932  1EEB                     u6290:
  4933  1EEB                     l3953:
  4934  1EEB  0824               	movf	__tdiv_to_l_@f2,w
  4935  1EEC  02A0               	subwf	__tdiv_to_l_@f1,f
  4936  1EED  0825               	movf	__tdiv_to_l_@f2+1,w
  4937  1EEE  1C03               	skipc
  4938  1EEF  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4939  1EF0  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4940  1EF1  0826               	movf	__tdiv_to_l_@f2+2,w
  4941  1EF2  1C03               	skipc
  4942  1EF3  0A26               	incf	__tdiv_to_l_@f2+2,w
  4943  1EF4  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4944  1EF5                     l3955:
  4945  1EF5  1428               	bsf	__tdiv_to_l_@quot,0
  4946  1EF6                     l3957:
  4947  1EF6  3001               	movlw	1
  4948  1EF7                     u6305:
  4949  1EF7  1003               	clrc
  4950  1EF8  0DA0               	rlf	__tdiv_to_l_@f1,f
  4951  1EF9  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4952  1EFA  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4953  1EFB  3EFF               	addlw	-1
  4954  1EFC  1D03               	skipz
  4955  1EFD  2EF7               	goto	u6305
  4956  1EFE                     l3959:
  4957  1EFE  3001               	movlw	1
  4958  1EFF  02AC               	subwf	__tdiv_to_l_@cntr,f
  4959  1F00  1D03               	btfss	3,2
  4960  1F01  2F03               	goto	u6311
  4961  1F02  2F04               	goto	u6310
  4962  1F03                     u6311:
  4963  1F03  2ED4               	goto	l3949
  4964  1F04                     u6310:
  4965  1F04                     l637:
  4966  1F04  1FAD               	btfss	__tdiv_to_l_@exp1,7
  4967  1F05  2F07               	goto	u6321
  4968  1F06  2F08               	goto	u6320
  4969  1F07                     u6321:
  4970  1F07  2F22               	goto	l3969
  4971  1F08                     u6320:
  4972  1F08                     l3961:
  4973  1F08  082D               	movf	__tdiv_to_l_@exp1,w
  4974  1F09  3A80               	xorlw	128
  4975  1F0A  3E97               	addlw	151
  4976  1F0B  1803               	skipnc
  4977  1F0C  2F0E               	goto	u6331
  4978  1F0D  2F0F               	goto	u6330
  4979  1F0E                     u6331:
  4980  1F0E  2F10               	goto	l3967
  4981  1F0F                     u6330:
  4982  1F0F  2E98               	goto	l3931
  4983  1F10                     l3967:
  4984  1F10  3001               	movlw	1
  4985  1F11                     u6345:
  4986  1F11  1003               	clrc
  4987  1F12  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  4988  1F13  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  4989  1F14  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  4990  1F15  0CA8               	rrf	__tdiv_to_l_@quot,f
  4991  1F16  3EFF               	addlw	-1
  4992  1F17  1D03               	skipz
  4993  1F18  2F11               	goto	u6345
  4994  1F19  3001               	movlw	1
  4995  1F1A  00F3               	movwf	??__tdiv_to_l_
  4996  1F1B  0873               	movf	??__tdiv_to_l_,w
  4997  1F1C  07AD               	addwf	__tdiv_to_l_@exp1,f
  4998  1F1D  1D03               	btfss	3,2
  4999  1F1E  2F20               	goto	u6351
  5000  1F1F  2F21               	goto	u6350
  5001  1F20                     u6351:
  5002  1F20  2F10               	goto	l3967
  5003  1F21                     u6350:
  5004  1F21  2F39               	goto	l3977
  5005  1F22                     l3969:
  5006  1F22  3018               	movlw	24
  5007  1F23  022D               	subwf	__tdiv_to_l_@exp1,w
  5008  1F24  1C03               	skipc
  5009  1F25  2F27               	goto	u6361
  5010  1F26  2F28               	goto	u6360
  5011  1F27                     u6361:
  5012  1F27  2F34               	goto	l644
  5013  1F28                     u6360:
  5014  1F28  2E98               	goto	l3931
  5015  1F29                     l3975:
  5016  1F29  3001               	movlw	1
  5017  1F2A  00F3               	movwf	??__tdiv_to_l_
  5018  1F2B                     u6375:
  5019  1F2B  1003               	clrc
  5020  1F2C  0DA8               	rlf	__tdiv_to_l_@quot,f
  5021  1F2D  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5022  1F2E  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5023  1F2F  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5024  1F30  0BF3               	decfsz	??__tdiv_to_l_,f
  5025  1F31  2F2B               	goto	u6375
  5026  1F32  3001               	movlw	1
  5027  1F33  02AD               	subwf	__tdiv_to_l_@exp1,f
  5028  1F34                     l644:
  5029  1F34  082D               	movf	__tdiv_to_l_@exp1,w
  5030  1F35  1D03               	btfss	3,2
  5031  1F36  2F38               	goto	u6381
  5032  1F37  2F39               	goto	u6380
  5033  1F38                     u6381:
  5034  1F38  2F29               	goto	l3975
  5035  1F39                     u6380:
  5036  1F39                     l3977:
  5037  1F39  082B               	movf	__tdiv_to_l_@quot+3,w
  5038  1F3A  00A3               	movwf	?__tdiv_to_l_+3
  5039  1F3B  082A               	movf	__tdiv_to_l_@quot+2,w
  5040  1F3C  00A2               	movwf	?__tdiv_to_l_+2
  5041  1F3D  0829               	movf	__tdiv_to_l_@quot+1,w
  5042  1F3E  00A1               	movwf	?__tdiv_to_l_+1
  5043  1F3F  0828               	movf	__tdiv_to_l_@quot,w
  5044  1F40  00A0               	movwf	?__tdiv_to_l_
  5045  1F41                     l633:
  5046  1F41  0008               	return
  5047  1F42                     __end_of__tdiv_to_l_:
  5048                           
  5049                           	psect	text10
  5050  1F42                     __ptext10:	
  5051 ;; *************** function __div_to_l_ *****************
  5052 ;; Defined at:
  5053 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  f1              4    0[BANK0 ] unsigned long 
  5056 ;;  f2              4    4[BANK0 ] unsigned long 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  quot            4    8[BANK0 ] unsigned long 
  5059 ;;  exp1            1   13[BANK0 ] unsigned char 
  5060 ;;  cntr            1   12[BANK0 ] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  4    0[BANK0 ] unsigned long 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5070 ;;      Params:         0       8       0       0       0
  5071 ;;      Locals:         0       6       0       0       0
  5072 ;;      Temps:          1       0       0       0       0
  5073 ;;      Totals:         1      14       0       0       0
  5074 ;;Total ram usage:       15 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    1
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_sprintf
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           
  5085                           ;psect for function __div_to_l_
  5086  1F42                     __div_to_l_:
  5087  1F42                     l3981:	
  5088                           ;incstack = 0
  5089                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5090                           
  5091  1F42  1003               	clrc
  5092  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  5093  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  5094  1F45  0D22               	rlf	__div_to_l_@f1+2,w
  5095  1F46  0D23               	rlf	__div_to_l_@f1+3,w
  5096  1F47  00F3               	movwf	??__div_to_l_
  5097  1F48  0873               	movf	??__div_to_l_,w
  5098  1F49  00AD               	movwf	__div_to_l_@exp1
  5099  1F4A  082D               	movf	__div_to_l_@exp1,w
  5100  1F4B  1D03               	btfss	3,2
  5101  1F4C  2F4E               	goto	u6391
  5102  1F4D  2F4F               	goto	u6390
  5103  1F4E                     u6391:
  5104  1F4E  2F58               	goto	l3987
  5105  1F4F                     u6390:
  5106  1F4F                     l3983:
  5107  1F4F  3000               	movlw	0
  5108  1F50  00A3               	movwf	?__div_to_l_+3
  5109  1F51  3000               	movlw	0
  5110  1F52  00A2               	movwf	?__div_to_l_+2
  5111  1F53  3000               	movlw	0
  5112  1F54  00A1               	movwf	?__div_to_l_+1
  5113  1F55  3000               	movlw	0
  5114  1F56  00A0               	movwf	?__div_to_l_
  5115  1F57  2FFF               	goto	l586
  5116  1F58                     l3987:
  5117  1F58  1003               	clrc
  5118  1F59  0D26               	rlf	__div_to_l_@f2+2,w
  5119  1F5A  0D27               	rlf	__div_to_l_@f2+3,w
  5120  1F5B  00F3               	movwf	??__div_to_l_
  5121  1F5C  0873               	movf	??__div_to_l_,w
  5122  1F5D  00AC               	movwf	__div_to_l_@cntr
  5123  1F5E  082C               	movf	__div_to_l_@cntr,w
  5124  1F5F  1D03               	btfss	3,2
  5125  1F60  2F62               	goto	u6401
  5126  1F61  2F63               	goto	u6400
  5127  1F62                     u6401:
  5128  1F62  2F64               	goto	l587
  5129  1F63                     u6400:
  5130  1F63  2F4F               	goto	l3983
  5131  1F64                     l587:
  5132  1F64  17A2               	bsf	__div_to_l_@f1+2,7
  5133  1F65                     l3993:
  5134  1F65  30FF               	movlw	255
  5135  1F66  05A0               	andwf	__div_to_l_@f1,f
  5136  1F67  30FF               	movlw	255
  5137  1F68  05A1               	andwf	__div_to_l_@f1+1,f
  5138  1F69  30FF               	movlw	255
  5139  1F6A  05A2               	andwf	__div_to_l_@f1+2,f
  5140  1F6B  3000               	movlw	0
  5141  1F6C  05A3               	andwf	__div_to_l_@f1+3,f
  5142  1F6D                     l3995:
  5143  1F6D  17A6               	bsf	__div_to_l_@f2+2,7
  5144  1F6E  30FF               	movlw	255
  5145  1F6F  05A4               	andwf	__div_to_l_@f2,f
  5146  1F70  30FF               	movlw	255
  5147  1F71  05A5               	andwf	__div_to_l_@f2+1,f
  5148  1F72  30FF               	movlw	255
  5149  1F73  05A6               	andwf	__div_to_l_@f2+2,f
  5150  1F74  3000               	movlw	0
  5151  1F75  05A7               	andwf	__div_to_l_@f2+3,f
  5152  1F76  3000               	movlw	0
  5153  1F77  00AB               	movwf	__div_to_l_@quot+3
  5154  1F78  3000               	movlw	0
  5155  1F79  00AA               	movwf	__div_to_l_@quot+2
  5156  1F7A  3000               	movlw	0
  5157  1F7B  00A9               	movwf	__div_to_l_@quot+1
  5158  1F7C  3000               	movlw	0
  5159  1F7D  00A8               	movwf	__div_to_l_@quot
  5160  1F7E                     l3997:
  5161  1F7E  307F               	movlw	127
  5162  1F7F  02AD               	subwf	__div_to_l_@exp1,f
  5163  1F80                     l3999:
  5164  1F80  30A0               	movlw	160
  5165  1F81  072C               	addwf	__div_to_l_@cntr,w
  5166  1F82  00F3               	movwf	??__div_to_l_
  5167  1F83  0873               	movf	??__div_to_l_,w
  5168  1F84  02AD               	subwf	__div_to_l_@exp1,f
  5169  1F85  3020               	movlw	32
  5170  1F86  00F3               	movwf	??__div_to_l_
  5171  1F87  0873               	movf	??__div_to_l_,w
  5172  1F88  00AC               	movwf	__div_to_l_@cntr
  5173  1F89                     l4001:
  5174  1F89  3001               	movlw	1
  5175  1F8A  00F3               	movwf	??__div_to_l_
  5176  1F8B                     u6415:
  5177  1F8B  1003               	clrc
  5178  1F8C  0DA8               	rlf	__div_to_l_@quot,f
  5179  1F8D  0DA9               	rlf	__div_to_l_@quot+1,f
  5180  1F8E  0DAA               	rlf	__div_to_l_@quot+2,f
  5181  1F8F  0DAB               	rlf	__div_to_l_@quot+3,f
  5182  1F90  0BF3               	decfsz	??__div_to_l_,f
  5183  1F91  2F8B               	goto	u6415
  5184  1F92                     l4003:
  5185  1F92  0827               	movf	__div_to_l_@f2+3,w
  5186  1F93  0223               	subwf	__div_to_l_@f1+3,w
  5187  1F94  1D03               	skipz
  5188  1F95  2FA0               	goto	u6425
  5189  1F96  0826               	movf	__div_to_l_@f2+2,w
  5190  1F97  0222               	subwf	__div_to_l_@f1+2,w
  5191  1F98  1D03               	skipz
  5192  1F99  2FA0               	goto	u6425
  5193  1F9A  0825               	movf	__div_to_l_@f2+1,w
  5194  1F9B  0221               	subwf	__div_to_l_@f1+1,w
  5195  1F9C  1D03               	skipz
  5196  1F9D  2FA0               	goto	u6425
  5197  1F9E  0824               	movf	__div_to_l_@f2,w
  5198  1F9F  0220               	subwf	__div_to_l_@f1,w
  5199  1FA0                     u6425:
  5200  1FA0  1C03               	skipc
  5201  1FA1  2FA3               	goto	u6421
  5202  1FA2  2FA4               	goto	u6420
  5203  1FA3                     u6421:
  5204  1FA3  2FB3               	goto	l4009
  5205  1FA4                     u6420:
  5206  1FA4                     l4005:
  5207  1FA4  0824               	movf	__div_to_l_@f2,w
  5208  1FA5  02A0               	subwf	__div_to_l_@f1,f
  5209  1FA6  0825               	movf	__div_to_l_@f2+1,w
  5210  1FA7  1C03               	skipc
  5211  1FA8  0F25               	incfsz	__div_to_l_@f2+1,w
  5212  1FA9  02A1               	subwf	__div_to_l_@f1+1,f
  5213  1FAA  0826               	movf	__div_to_l_@f2+2,w
  5214  1FAB  1C03               	skipc
  5215  1FAC  0F26               	incfsz	__div_to_l_@f2+2,w
  5216  1FAD  02A2               	subwf	__div_to_l_@f1+2,f
  5217  1FAE  0827               	movf	__div_to_l_@f2+3,w
  5218  1FAF  1C03               	skipc
  5219  1FB0  0F27               	incfsz	__div_to_l_@f2+3,w
  5220  1FB1  02A3               	subwf	__div_to_l_@f1+3,f
  5221  1FB2                     l4007:
  5222  1FB2  1428               	bsf	__div_to_l_@quot,0
  5223  1FB3                     l4009:
  5224  1FB3  3001               	movlw	1
  5225  1FB4  00F3               	movwf	??__div_to_l_
  5226  1FB5                     u6435:
  5227  1FB5  1003               	clrc
  5228  1FB6  0DA0               	rlf	__div_to_l_@f1,f
  5229  1FB7  0DA1               	rlf	__div_to_l_@f1+1,f
  5230  1FB8  0DA2               	rlf	__div_to_l_@f1+2,f
  5231  1FB9  0DA3               	rlf	__div_to_l_@f1+3,f
  5232  1FBA  0BF3               	decfsz	??__div_to_l_,f
  5233  1FBB  2FB5               	goto	u6435
  5234  1FBC                     l4011:
  5235  1FBC  3001               	movlw	1
  5236  1FBD  02AC               	subwf	__div_to_l_@cntr,f
  5237  1FBE  1D03               	btfss	3,2
  5238  1FBF  2FC1               	goto	u6441
  5239  1FC0  2FC2               	goto	u6440
  5240  1FC1                     u6441:
  5241  1FC1  2F89               	goto	l4001
  5242  1FC2                     u6440:
  5243  1FC2                     l590:
  5244  1FC2  1FAD               	btfss	__div_to_l_@exp1,7
  5245  1FC3  2FC5               	goto	u6451
  5246  1FC4  2FC6               	goto	u6450
  5247  1FC5                     u6451:
  5248  1FC5  2FE0               	goto	l4021
  5249  1FC6                     u6450:
  5250  1FC6                     l4013:
  5251  1FC6  082D               	movf	__div_to_l_@exp1,w
  5252  1FC7  3A80               	xorlw	128
  5253  1FC8  3E9F               	addlw	159
  5254  1FC9  1803               	skipnc
  5255  1FCA  2FCC               	goto	u6461
  5256  1FCB  2FCD               	goto	u6460
  5257  1FCC                     u6461:
  5258  1FCC  2FCE               	goto	l4019
  5259  1FCD                     u6460:
  5260  1FCD  2F4F               	goto	l3983
  5261  1FCE                     l4019:
  5262  1FCE  3001               	movlw	1
  5263  1FCF                     u6475:
  5264  1FCF  1003               	clrc
  5265  1FD0  0CAB               	rrf	__div_to_l_@quot+3,f
  5266  1FD1  0CAA               	rrf	__div_to_l_@quot+2,f
  5267  1FD2  0CA9               	rrf	__div_to_l_@quot+1,f
  5268  1FD3  0CA8               	rrf	__div_to_l_@quot,f
  5269  1FD4  3EFF               	addlw	-1
  5270  1FD5  1D03               	skipz
  5271  1FD6  2FCF               	goto	u6475
  5272  1FD7  3001               	movlw	1
  5273  1FD8  00F3               	movwf	??__div_to_l_
  5274  1FD9  0873               	movf	??__div_to_l_,w
  5275  1FDA  07AD               	addwf	__div_to_l_@exp1,f
  5276  1FDB  1D03               	btfss	3,2
  5277  1FDC  2FDE               	goto	u6481
  5278  1FDD  2FDF               	goto	u6480
  5279  1FDE                     u6481:
  5280  1FDE  2FCE               	goto	l4019
  5281  1FDF                     u6480:
  5282  1FDF  2FF7               	goto	l4029
  5283  1FE0                     l4021:
  5284  1FE0  3020               	movlw	32
  5285  1FE1  022D               	subwf	__div_to_l_@exp1,w
  5286  1FE2  1C03               	skipc
  5287  1FE3  2FE5               	goto	u6491
  5288  1FE4  2FE6               	goto	u6490
  5289  1FE5                     u6491:
  5290  1FE5  2FF2               	goto	l597
  5291  1FE6                     u6490:
  5292  1FE6  2F4F               	goto	l3983
  5293  1FE7                     l4027:
  5294  1FE7  3001               	movlw	1
  5295  1FE8  00F3               	movwf	??__div_to_l_
  5296  1FE9                     u6505:
  5297  1FE9  1003               	clrc
  5298  1FEA  0DA8               	rlf	__div_to_l_@quot,f
  5299  1FEB  0DA9               	rlf	__div_to_l_@quot+1,f
  5300  1FEC  0DAA               	rlf	__div_to_l_@quot+2,f
  5301  1FED  0DAB               	rlf	__div_to_l_@quot+3,f
  5302  1FEE  0BF3               	decfsz	??__div_to_l_,f
  5303  1FEF  2FE9               	goto	u6505
  5304  1FF0  3001               	movlw	1
  5305  1FF1  02AD               	subwf	__div_to_l_@exp1,f
  5306  1FF2                     l597:
  5307  1FF2  082D               	movf	__div_to_l_@exp1,w
  5308  1FF3  1D03               	btfss	3,2
  5309  1FF4  2FF6               	goto	u6511
  5310  1FF5  2FF7               	goto	u6510
  5311  1FF6                     u6511:
  5312  1FF6  2FE7               	goto	l4027
  5313  1FF7                     u6510:
  5314  1FF7                     l4029:
  5315  1FF7  082B               	movf	__div_to_l_@quot+3,w
  5316  1FF8  00A3               	movwf	?__div_to_l_+3
  5317  1FF9  082A               	movf	__div_to_l_@quot+2,w
  5318  1FFA  00A2               	movwf	?__div_to_l_+2
  5319  1FFB  0829               	movf	__div_to_l_@quot+1,w
  5320  1FFC  00A1               	movwf	?__div_to_l_+1
  5321  1FFD  0828               	movf	__div_to_l_@quot,w
  5322  1FFE  00A0               	movwf	?__div_to_l_
  5323  1FFF                     l586:
  5324  1FFF  0008               	return
  5325  2000                     __end_of__div_to_l_:
  5326                           
  5327                           	psect	text11
  5328  1960                     __ptext11:	
  5329 ;; *************** function ___wmul *****************
  5330 ;; Defined at:
  5331 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  multiplier      2    3[COMMON] unsigned int 
  5334 ;;  multiplicand    2    5[COMMON] unsigned int 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  product         2    0[BANK0 ] unsigned int 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  2    3[COMMON] unsigned int 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5346 ;;      Params:         4       0       0       0       0
  5347 ;;      Locals:         0       2       0       0       0
  5348 ;;      Temps:          0       0       0       0       0
  5349 ;;      Totals:         4       2       0       0       0
  5350 ;;Total ram usage:        6 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:    1
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_sprintf
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           
  5361                           ;psect for function ___wmul
  5362  1960                     ___wmul:
  5363  1960                     l4033:	
  5364                           ;incstack = 0
  5365                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5366                           
  5367  1960  1283               	bcf	3,5	;RP0=0, select bank0
  5368  1961  1303               	bcf	3,6	;RP1=0, select bank0
  5369  1962  01A0               	clrf	___wmul@product
  5370  1963  01A1               	clrf	___wmul@product+1
  5371  1964                     l4035:
  5372  1964  1C73               	btfss	___wmul@multiplier,0
  5373  1965  2967               	goto	u6521
  5374  1966  2968               	goto	u6520
  5375  1967                     u6521:
  5376  1967  2970               	goto	l416
  5377  1968                     u6520:
  5378  1968                     l4037:
  5379  1968  0875               	movf	___wmul@multiplicand,w
  5380  1969  1283               	bcf	3,5	;RP0=0, select bank0
  5381  196A  1303               	bcf	3,6	;RP1=0, select bank0
  5382  196B  07A0               	addwf	___wmul@product,f
  5383  196C  1803               	skipnc
  5384  196D  0AA1               	incf	___wmul@product+1,f
  5385  196E  0876               	movf	___wmul@multiplicand+1,w
  5386  196F  07A1               	addwf	___wmul@product+1,f
  5387  1970                     l416:
  5388  1970  3001               	movlw	1
  5389  1971                     u6535:
  5390  1971  1003               	clrc
  5391  1972  0DF5               	rlf	___wmul@multiplicand,f
  5392  1973  0DF6               	rlf	___wmul@multiplicand+1,f
  5393  1974  3EFF               	addlw	-1
  5394  1975  1D03               	skipz
  5395  1976  2971               	goto	u6535
  5396  1977                     l4039:
  5397  1977  3001               	movlw	1
  5398  1978                     u6545:
  5399  1978  1003               	clrc
  5400  1979  0CF4               	rrf	___wmul@multiplier+1,f
  5401  197A  0CF3               	rrf	___wmul@multiplier,f
  5402  197B  3EFF               	addlw	-1
  5403  197C  1D03               	skipz
  5404  197D  2978               	goto	u6545
  5405  197E                     l4041:
  5406  197E  0873               	movf	___wmul@multiplier,w
  5407  197F  0474               	iorwf	___wmul@multiplier+1,w
  5408  1980  1D03               	btfss	3,2
  5409  1981  2983               	goto	u6551
  5410  1982  2984               	goto	u6550
  5411  1983                     u6551:
  5412  1983  2964               	goto	l4035
  5413  1984                     u6550:
  5414  1984                     l4043:
  5415  1984  1283               	bcf	3,5	;RP0=0, select bank0
  5416  1985  1303               	bcf	3,6	;RP1=0, select bank0
  5417  1986  0821               	movf	___wmul@product+1,w
  5418  1987  00F4               	movwf	?___wmul+1
  5419  1988  0820               	movf	___wmul@product,w
  5420  1989  00F3               	movwf	?___wmul
  5421  198A                     l418:
  5422  198A  0008               	return
  5423  198B                     __end_of___wmul:
  5424                           
  5425                           	psect	text12
  5426  1B7C                     __ptext12:	
  5427 ;; *************** function ___llmod *****************
  5428 ;; Defined at:
  5429 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  divisor         4    0[BANK0 ] unsigned long 
  5432 ;;  dividend        4    4[BANK0 ] unsigned long 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;  counter         1    4[COMMON] unsigned char 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  4    0[BANK0 ] unsigned long 
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5444 ;;      Params:         0       8       0       0       0
  5445 ;;      Locals:         1       0       0       0       0
  5446 ;;      Temps:          1       0       0       0       0
  5447 ;;      Totals:         2       8       0       0       0
  5448 ;;Total ram usage:       10 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_sprintf
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           
  5459                           ;psect for function ___llmod
  5460  1B7C                     ___llmod:
  5461  1B7C                     l4103:	
  5462                           ;incstack = 0
  5463                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5464                           
  5465  1B7C  1283               	bcf	3,5	;RP0=0, select bank0
  5466  1B7D  1303               	bcf	3,6	;RP1=0, select bank0
  5467  1B7E  0823               	movf	___llmod@divisor+3,w
  5468  1B7F  0422               	iorwf	___llmod@divisor+2,w
  5469  1B80  0421               	iorwf	___llmod@divisor+1,w
  5470  1B81  0420               	iorwf	___llmod@divisor,w
  5471  1B82  1903               	skipnz
  5472  1B83  2B85               	goto	u6731
  5473  1B84  2B86               	goto	u6730
  5474  1B85                     u6731:
  5475  1B85  2BC9               	goto	l4119
  5476  1B86                     u6730:
  5477  1B86                     l4105:
  5478  1B86  01F4               	clrf	___llmod@counter
  5479  1B87  0AF4               	incf	___llmod@counter,f
  5480  1B88  2B96               	goto	l4109
  5481  1B89                     l4107:
  5482  1B89  3001               	movlw	1
  5483  1B8A  00F3               	movwf	??___llmod
  5484  1B8B                     u6745:
  5485  1B8B  1003               	clrc
  5486  1B8C  0DA0               	rlf	___llmod@divisor,f
  5487  1B8D  0DA1               	rlf	___llmod@divisor+1,f
  5488  1B8E  0DA2               	rlf	___llmod@divisor+2,f
  5489  1B8F  0DA3               	rlf	___llmod@divisor+3,f
  5490  1B90  0BF3               	decfsz	??___llmod,f
  5491  1B91  2B8B               	goto	u6745
  5492  1B92  3001               	movlw	1
  5493  1B93  00F3               	movwf	??___llmod
  5494  1B94  0873               	movf	??___llmod,w
  5495  1B95  07F4               	addwf	___llmod@counter,f
  5496  1B96                     l4109:
  5497  1B96  1FA3               	btfss	___llmod@divisor+3,7
  5498  1B97  2B99               	goto	u6751
  5499  1B98  2B9A               	goto	u6750
  5500  1B99                     u6751:
  5501  1B99  2B89               	goto	l4107
  5502  1B9A                     u6750:
  5503  1B9A                     l4111:
  5504  1B9A  0823               	movf	___llmod@divisor+3,w
  5505  1B9B  0227               	subwf	___llmod@dividend+3,w
  5506  1B9C  1D03               	skipz
  5507  1B9D  2BA8               	goto	u6765
  5508  1B9E  0822               	movf	___llmod@divisor+2,w
  5509  1B9F  0226               	subwf	___llmod@dividend+2,w
  5510  1BA0  1D03               	skipz
  5511  1BA1  2BA8               	goto	u6765
  5512  1BA2  0821               	movf	___llmod@divisor+1,w
  5513  1BA3  0225               	subwf	___llmod@dividend+1,w
  5514  1BA4  1D03               	skipz
  5515  1BA5  2BA8               	goto	u6765
  5516  1BA6  0820               	movf	___llmod@divisor,w
  5517  1BA7  0224               	subwf	___llmod@dividend,w
  5518  1BA8                     u6765:
  5519  1BA8  1C03               	skipc
  5520  1BA9  2BAB               	goto	u6761
  5521  1BAA  2BAC               	goto	u6760
  5522  1BAB                     u6761:
  5523  1BAB  2BBA               	goto	l4115
  5524  1BAC                     u6760:
  5525  1BAC                     l4113:
  5526  1BAC  0820               	movf	___llmod@divisor,w
  5527  1BAD  02A4               	subwf	___llmod@dividend,f
  5528  1BAE  0821               	movf	___llmod@divisor+1,w
  5529  1BAF  1C03               	skipc
  5530  1BB0  0F21               	incfsz	___llmod@divisor+1,w
  5531  1BB1  02A5               	subwf	___llmod@dividend+1,f
  5532  1BB2  0822               	movf	___llmod@divisor+2,w
  5533  1BB3  1C03               	skipc
  5534  1BB4  0F22               	incfsz	___llmod@divisor+2,w
  5535  1BB5  02A6               	subwf	___llmod@dividend+2,f
  5536  1BB6  0823               	movf	___llmod@divisor+3,w
  5537  1BB7  1C03               	skipc
  5538  1BB8  0F23               	incfsz	___llmod@divisor+3,w
  5539  1BB9  02A7               	subwf	___llmod@dividend+3,f
  5540  1BBA                     l4115:
  5541  1BBA  3001               	movlw	1
  5542  1BBB                     u6775:
  5543  1BBB  1003               	clrc
  5544  1BBC  0CA3               	rrf	___llmod@divisor+3,f
  5545  1BBD  0CA2               	rrf	___llmod@divisor+2,f
  5546  1BBE  0CA1               	rrf	___llmod@divisor+1,f
  5547  1BBF  0CA0               	rrf	___llmod@divisor,f
  5548  1BC0  3EFF               	addlw	-1
  5549  1BC1  1D03               	skipz
  5550  1BC2  2BBB               	goto	u6775
  5551  1BC3                     l4117:
  5552  1BC3  3001               	movlw	1
  5553  1BC4  02F4               	subwf	___llmod@counter,f
  5554  1BC5  1D03               	btfss	3,2
  5555  1BC6  2BC8               	goto	u6781
  5556  1BC7  2BC9               	goto	u6780
  5557  1BC8                     u6781:
  5558  1BC8  2B9A               	goto	l4111
  5559  1BC9                     u6780:
  5560  1BC9                     l4119:
  5561  1BC9  0827               	movf	___llmod@dividend+3,w
  5562  1BCA  00A3               	movwf	?___llmod+3
  5563  1BCB  0826               	movf	___llmod@dividend+2,w
  5564  1BCC  00A2               	movwf	?___llmod+2
  5565  1BCD  0825               	movf	___llmod@dividend+1,w
  5566  1BCE  00A1               	movwf	?___llmod+1
  5567  1BCF  0824               	movf	___llmod@dividend,w
  5568  1BD0  00A0               	movwf	?___llmod
  5569  1BD1                     l672:
  5570  1BD1  0008               	return
  5571  1BD2                     __end_of___llmod:
  5572                           
  5573                           	psect	text13
  5574  1CE5                     __ptext13:	
  5575 ;; *************** function ___lldiv *****************
  5576 ;; Defined at:
  5577 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  divisor         4    0[BANK0 ] unsigned long 
  5580 ;;  dividend        4    4[BANK0 ] unsigned long 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  quotient        4    8[BANK0 ] unsigned long 
  5583 ;;  counter         1   12[BANK0 ] unsigned char 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  4    0[BANK0 ] unsigned long 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5593 ;;      Params:         0       8       0       0       0
  5594 ;;      Locals:         0       5       0       0       0
  5595 ;;      Temps:          1       0       0       0       0
  5596 ;;      Totals:         1      13       0       0       0
  5597 ;;Total ram usage:       14 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    1
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_sprintf
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           
  5608                           ;psect for function ___lldiv
  5609  1CE5                     ___lldiv:
  5610  1CE5                     l4047:	
  5611                           ;incstack = 0
  5612                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5613                           
  5614  1CE5  3000               	movlw	0
  5615  1CE6  1283               	bcf	3,5	;RP0=0, select bank0
  5616  1CE7  1303               	bcf	3,6	;RP1=0, select bank0
  5617  1CE8  00AB               	movwf	___lldiv@quotient+3
  5618  1CE9  3000               	movlw	0
  5619  1CEA  00AA               	movwf	___lldiv@quotient+2
  5620  1CEB  3000               	movlw	0
  5621  1CEC  00A9               	movwf	___lldiv@quotient+1
  5622  1CED  3000               	movlw	0
  5623  1CEE  00A8               	movwf	___lldiv@quotient
  5624  1CEF  0823               	movf	___lldiv@divisor+3,w
  5625  1CF0  0422               	iorwf	___lldiv@divisor+2,w
  5626  1CF1  0421               	iorwf	___lldiv@divisor+1,w
  5627  1CF2  0420               	iorwf	___lldiv@divisor,w
  5628  1CF3  1903               	skipnz
  5629  1CF4  2CF6               	goto	u6561
  5630  1CF5  2CF7               	goto	u6560
  5631  1CF6                     u6561:
  5632  1CF6  2D44               	goto	l4067
  5633  1CF7                     u6560:
  5634  1CF7                     l4049:
  5635  1CF7  01AC               	clrf	___lldiv@counter
  5636  1CF8  0AAC               	incf	___lldiv@counter,f
  5637  1CF9  2D07               	goto	l4053
  5638  1CFA                     l4051:
  5639  1CFA  3001               	movlw	1
  5640  1CFB  00F3               	movwf	??___lldiv
  5641  1CFC                     u6575:
  5642  1CFC  1003               	clrc
  5643  1CFD  0DA0               	rlf	___lldiv@divisor,f
  5644  1CFE  0DA1               	rlf	___lldiv@divisor+1,f
  5645  1CFF  0DA2               	rlf	___lldiv@divisor+2,f
  5646  1D00  0DA3               	rlf	___lldiv@divisor+3,f
  5647  1D01  0BF3               	decfsz	??___lldiv,f
  5648  1D02  2CFC               	goto	u6575
  5649  1D03  3001               	movlw	1
  5650  1D04  00F3               	movwf	??___lldiv
  5651  1D05  0873               	movf	??___lldiv,w
  5652  1D06  07AC               	addwf	___lldiv@counter,f
  5653  1D07                     l4053:
  5654  1D07  1FA3               	btfss	___lldiv@divisor+3,7
  5655  1D08  2D0A               	goto	u6581
  5656  1D09  2D0B               	goto	u6580
  5657  1D0A                     u6581:
  5658  1D0A  2CFA               	goto	l4051
  5659  1D0B                     u6580:
  5660  1D0B                     l4055:
  5661  1D0B  3001               	movlw	1
  5662  1D0C  00F3               	movwf	??___lldiv
  5663  1D0D                     u6595:
  5664  1D0D  1003               	clrc
  5665  1D0E  0DA8               	rlf	___lldiv@quotient,f
  5666  1D0F  0DA9               	rlf	___lldiv@quotient+1,f
  5667  1D10  0DAA               	rlf	___lldiv@quotient+2,f
  5668  1D11  0DAB               	rlf	___lldiv@quotient+3,f
  5669  1D12  0BF3               	decfsz	??___lldiv,f
  5670  1D13  2D0D               	goto	u6595
  5671  1D14                     l4057:
  5672  1D14  0823               	movf	___lldiv@divisor+3,w
  5673  1D15  0227               	subwf	___lldiv@dividend+3,w
  5674  1D16  1D03               	skipz
  5675  1D17  2D22               	goto	u6605
  5676  1D18  0822               	movf	___lldiv@divisor+2,w
  5677  1D19  0226               	subwf	___lldiv@dividend+2,w
  5678  1D1A  1D03               	skipz
  5679  1D1B  2D22               	goto	u6605
  5680  1D1C  0821               	movf	___lldiv@divisor+1,w
  5681  1D1D  0225               	subwf	___lldiv@dividend+1,w
  5682  1D1E  1D03               	skipz
  5683  1D1F  2D22               	goto	u6605
  5684  1D20  0820               	movf	___lldiv@divisor,w
  5685  1D21  0224               	subwf	___lldiv@dividend,w
  5686  1D22                     u6605:
  5687  1D22  1C03               	skipc
  5688  1D23  2D25               	goto	u6601
  5689  1D24  2D26               	goto	u6600
  5690  1D25                     u6601:
  5691  1D25  2D35               	goto	l4063
  5692  1D26                     u6600:
  5693  1D26                     l4059:
  5694  1D26  0820               	movf	___lldiv@divisor,w
  5695  1D27  02A4               	subwf	___lldiv@dividend,f
  5696  1D28  0821               	movf	___lldiv@divisor+1,w
  5697  1D29  1C03               	skipc
  5698  1D2A  0F21               	incfsz	___lldiv@divisor+1,w
  5699  1D2B  02A5               	subwf	___lldiv@dividend+1,f
  5700  1D2C  0822               	movf	___lldiv@divisor+2,w
  5701  1D2D  1C03               	skipc
  5702  1D2E  0F22               	incfsz	___lldiv@divisor+2,w
  5703  1D2F  02A6               	subwf	___lldiv@dividend+2,f
  5704  1D30  0823               	movf	___lldiv@divisor+3,w
  5705  1D31  1C03               	skipc
  5706  1D32  0F23               	incfsz	___lldiv@divisor+3,w
  5707  1D33  02A7               	subwf	___lldiv@dividend+3,f
  5708  1D34                     l4061:
  5709  1D34  1428               	bsf	___lldiv@quotient,0
  5710  1D35                     l4063:
  5711  1D35  3001               	movlw	1
  5712  1D36                     u6615:
  5713  1D36  1003               	clrc
  5714  1D37  0CA3               	rrf	___lldiv@divisor+3,f
  5715  1D38  0CA2               	rrf	___lldiv@divisor+2,f
  5716  1D39  0CA1               	rrf	___lldiv@divisor+1,f
  5717  1D3A  0CA0               	rrf	___lldiv@divisor,f
  5718  1D3B  3EFF               	addlw	-1
  5719  1D3C  1D03               	skipz
  5720  1D3D  2D36               	goto	u6615
  5721  1D3E                     l4065:
  5722  1D3E  3001               	movlw	1
  5723  1D3F  02AC               	subwf	___lldiv@counter,f
  5724  1D40  1D03               	btfss	3,2
  5725  1D41  2D43               	goto	u6621
  5726  1D42  2D44               	goto	u6620
  5727  1D43                     u6621:
  5728  1D43  2D0B               	goto	l4055
  5729  1D44                     u6620:
  5730  1D44                     l4067:
  5731  1D44  082B               	movf	___lldiv@quotient+3,w
  5732  1D45  00A3               	movwf	?___lldiv+3
  5733  1D46  082A               	movf	___lldiv@quotient+2,w
  5734  1D47  00A2               	movwf	?___lldiv+2
  5735  1D48  0829               	movf	___lldiv@quotient+1,w
  5736  1D49  00A1               	movwf	?___lldiv+1
  5737  1D4A  0828               	movf	___lldiv@quotient,w
  5738  1D4B  00A0               	movwf	?___lldiv
  5739  1D4C                     l452:
  5740  1D4C  0008               	return
  5741  1D4D                     __end_of___lldiv:
  5742                           
  5743                           	psect	text14
  5744  1D4D                     __ptext14:	
  5745 ;; *************** function ___fltol *****************
  5746 ;; Defined at:
  5747 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  f1              4   56[BANK0 ] unsigned long 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  exp1            1   66[BANK0 ] unsigned char 
  5752 ;;  sign1           1   65[BANK0 ] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  4   56[BANK0 ] long 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5762 ;;      Params:         0       4       0       0       0
  5763 ;;      Locals:         0       2       0       0       0
  5764 ;;      Temps:          0       5       0       0       0
  5765 ;;      Totals:         0      11       0       0       0
  5766 ;;Total ram usage:       11 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    1
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_sprintf
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function ___fltol
  5778  1D4D                     ___fltol:
  5779  1D4D                     l3113:	
  5780                           ;incstack = 0
  5781                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5782                           
  5783  1D4D  1003               	clrc
  5784  1D4E  1283               	bcf	3,5	;RP0=0, select bank0
  5785  1D4F  1303               	bcf	3,6	;RP1=0, select bank0
  5786  1D50  0D5A               	rlf	___fltol@f1+2,w
  5787  1D51  0D5B               	rlf	___fltol@f1+3,w
  5788  1D52  00DC               	movwf	??___fltol
  5789  1D53  085C               	movf	??___fltol,w
  5790  1D54  00E2               	movwf	___fltol@exp1
  5791  1D55  0862               	movf	___fltol@exp1,w
  5792  1D56  1D03               	btfss	3,2
  5793  1D57  2D59               	goto	u4791
  5794  1D58  2D5A               	goto	u4790
  5795  1D59                     u4791:
  5796  1D59  2D63               	goto	l3119
  5797  1D5A                     u4790:
  5798  1D5A                     l3115:
  5799  1D5A  3000               	movlw	0
  5800  1D5B  00DB               	movwf	?___fltol+3
  5801  1D5C  3000               	movlw	0
  5802  1D5D  00DA               	movwf	?___fltol+2
  5803  1D5E  3000               	movlw	0
  5804  1D5F  00D9               	movwf	?___fltol+1
  5805  1D60  3000               	movlw	0
  5806  1D61  00D8               	movwf	?___fltol
  5807  1D62  2DC8               	goto	l619
  5808  1D63                     l3119:
  5809  1D63  0858               	movf	___fltol@f1,w
  5810  1D64  00DC               	movwf	??___fltol
  5811  1D65  0859               	movf	___fltol@f1+1,w
  5812  1D66  00DD               	movwf	??___fltol+1
  5813  1D67  085A               	movf	___fltol@f1+2,w
  5814  1D68  00DE               	movwf	??___fltol+2
  5815  1D69  085B               	movf	___fltol@f1+3,w
  5816  1D6A  00DF               	movwf	??___fltol+3
  5817  1D6B  301F               	movlw	31
  5818  1D6C                     u4805:
  5819  1D6C  1003               	clrc
  5820  1D6D  0CDF               	rrf	??___fltol+3,f
  5821  1D6E  0CDE               	rrf	??___fltol+2,f
  5822  1D6F  0CDD               	rrf	??___fltol+1,f
  5823  1D70  0CDC               	rrf	??___fltol,f
  5824  1D71                     u4800:
  5825  1D71  3EFF               	addlw	-1
  5826  1D72  1D03               	skipz
  5827  1D73  2D6C               	goto	u4805
  5828  1D74  085C               	movf	??___fltol,w
  5829  1D75  00E0               	movwf	??___fltol+4
  5830  1D76  0860               	movf	??___fltol+4,w
  5831  1D77  00E1               	movwf	___fltol@sign1
  5832  1D78                     l3121:
  5833  1D78  17DA               	bsf	___fltol@f1+2,7
  5834  1D79                     l3123:
  5835  1D79  30FF               	movlw	255
  5836  1D7A  05D8               	andwf	___fltol@f1,f
  5837  1D7B  30FF               	movlw	255
  5838  1D7C  05D9               	andwf	___fltol@f1+1,f
  5839  1D7D  30FF               	movlw	255
  5840  1D7E  05DA               	andwf	___fltol@f1+2,f
  5841  1D7F  3000               	movlw	0
  5842  1D80  05DB               	andwf	___fltol@f1+3,f
  5843  1D81                     l3125:
  5844  1D81  3096               	movlw	150
  5845  1D82  02E2               	subwf	___fltol@exp1,f
  5846  1D83                     l3127:
  5847  1D83  1FE2               	btfss	___fltol@exp1,7
  5848  1D84  2D86               	goto	u4811
  5849  1D85  2D87               	goto	u4810
  5850  1D86                     u4811:
  5851  1D86  2DA1               	goto	l3137
  5852  1D87                     u4810:
  5853  1D87                     l3129:
  5854  1D87  0862               	movf	___fltol@exp1,w
  5855  1D88  3A80               	xorlw	128
  5856  1D89  3E97               	addlw	151
  5857  1D8A  1803               	skipnc
  5858  1D8B  2D8D               	goto	u4821
  5859  1D8C  2D8E               	goto	u4820
  5860  1D8D                     u4821:
  5861  1D8D  2D8F               	goto	l3135
  5862  1D8E                     u4820:
  5863  1D8E  2D5A               	goto	l3115
  5864  1D8F                     l3135:
  5865  1D8F  3001               	movlw	1
  5866  1D90                     u4835:
  5867  1D90  1003               	clrc
  5868  1D91  0CDB               	rrf	___fltol@f1+3,f
  5869  1D92  0CDA               	rrf	___fltol@f1+2,f
  5870  1D93  0CD9               	rrf	___fltol@f1+1,f
  5871  1D94  0CD8               	rrf	___fltol@f1,f
  5872  1D95  3EFF               	addlw	-1
  5873  1D96  1D03               	skipz
  5874  1D97  2D90               	goto	u4835
  5875  1D98  3001               	movlw	1
  5876  1D99  00DC               	movwf	??___fltol
  5877  1D9A  085C               	movf	??___fltol,w
  5878  1D9B  07E2               	addwf	___fltol@exp1,f
  5879  1D9C  1D03               	btfss	3,2
  5880  1D9D  2D9F               	goto	u4841
  5881  1D9E  2DA0               	goto	u4840
  5882  1D9F                     u4841:
  5883  1D9F  2D8F               	goto	l3135
  5884  1DA0                     u4840:
  5885  1DA0  2DB8               	goto	l3145
  5886  1DA1                     l3137:
  5887  1DA1  3020               	movlw	32
  5888  1DA2  0262               	subwf	___fltol@exp1,w
  5889  1DA3  1C03               	skipc
  5890  1DA4  2DA6               	goto	u4851
  5891  1DA5  2DA7               	goto	u4850
  5892  1DA6                     u4851:
  5893  1DA6  2DB3               	goto	l626
  5894  1DA7                     u4850:
  5895  1DA7  2D5A               	goto	l3115
  5896  1DA8                     l3143:
  5897  1DA8  3001               	movlw	1
  5898  1DA9  00DC               	movwf	??___fltol
  5899  1DAA                     u4865:
  5900  1DAA  1003               	clrc
  5901  1DAB  0DD8               	rlf	___fltol@f1,f
  5902  1DAC  0DD9               	rlf	___fltol@f1+1,f
  5903  1DAD  0DDA               	rlf	___fltol@f1+2,f
  5904  1DAE  0DDB               	rlf	___fltol@f1+3,f
  5905  1DAF  0BDC               	decfsz	??___fltol,f
  5906  1DB0  2DAA               	goto	u4865
  5907  1DB1  3001               	movlw	1
  5908  1DB2  02E2               	subwf	___fltol@exp1,f
  5909  1DB3                     l626:
  5910  1DB3  0862               	movf	___fltol@exp1,w
  5911  1DB4  1D03               	btfss	3,2
  5912  1DB5  2DB7               	goto	u4871
  5913  1DB6  2DB8               	goto	u4870
  5914  1DB7                     u4871:
  5915  1DB7  2DA8               	goto	l3143
  5916  1DB8                     u4870:
  5917  1DB8                     l3145:
  5918  1DB8  0861               	movf	___fltol@sign1,w
  5919  1DB9  1903               	btfsc	3,2
  5920  1DBA  2DBC               	goto	u4881
  5921  1DBB  2DBD               	goto	u4880
  5922  1DBC                     u4881:
  5923  1DBC  2DC8               	goto	l629
  5924  1DBD                     u4880:
  5925  1DBD                     l3147:
  5926  1DBD  09D8               	comf	___fltol@f1,f
  5927  1DBE  09D9               	comf	___fltol@f1+1,f
  5928  1DBF  09DA               	comf	___fltol@f1+2,f
  5929  1DC0  09DB               	comf	___fltol@f1+3,f
  5930  1DC1  0AD8               	incf	___fltol@f1,f
  5931  1DC2  1903               	skipnz
  5932  1DC3  0AD9               	incf	___fltol@f1+1,f
  5933  1DC4  1903               	skipnz
  5934  1DC5  0ADA               	incf	___fltol@f1+2,f
  5935  1DC6  1903               	skipnz
  5936  1DC7  0ADB               	incf	___fltol@f1+3,f
  5937  1DC8                     l629:
  5938  1DC8                     l619:
  5939  1DC8  0008               	return
  5940  1DC9                     __end_of___fltol:
  5941                           
  5942                           	psect	text15
  5943  1B2C                     __ptext15:	
  5944 ;; *************** function ___flsub *****************
  5945 ;; Defined at:
  5946 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  a               4    0[BANK1 ] long 
  5949 ;;  b               4    4[BANK1 ] long 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;		None
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  4    0[BANK1 ] long 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5961 ;;      Params:         0       0       8       0       0
  5962 ;;      Locals:         0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0
  5964 ;;      Totals:         0       0       8       0       0
  5965 ;;Total ram usage:        8 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    2
  5968 ;; This function calls:
  5969 ;;		___fladd
  5970 ;; This function is called by:
  5971 ;;		_sprintf
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           
  5976                           ;psect for function ___flsub
  5977  1B2C                     ___flsub:
  5978  1B2C                     l3169:	
  5979                           ;incstack = 0
  5980                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5981                           
  5982  1B2C  3080               	movlw	128
  5983  1B2D  1683               	bsf	3,5	;RP0=1, select bank1
  5984  1B2E  1303               	bcf	3,6	;RP1=0, select bank1
  5985  1B2F  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5986  1B30                     l3171:
  5987  1B30  0827               	movf	(___flsub@b+3)^(0+128),w
  5988  1B31  1283               	bcf	3,5	;RP0=0, select bank0
  5989  1B32  1303               	bcf	3,6	;RP1=0, select bank0
  5990  1B33  00DC               	movwf	___fladd@b+3
  5991  1B34  1683               	bsf	3,5	;RP0=1, select bank1
  5992  1B35  1303               	bcf	3,6	;RP1=0, select bank1
  5993  1B36  0826               	movf	(___flsub@b+2)^(0+128),w
  5994  1B37  1283               	bcf	3,5	;RP0=0, select bank0
  5995  1B38  1303               	bcf	3,6	;RP1=0, select bank0
  5996  1B39  00DB               	movwf	___fladd@b+2
  5997  1B3A  1683               	bsf	3,5	;RP0=1, select bank1
  5998  1B3B  1303               	bcf	3,6	;RP1=0, select bank1
  5999  1B3C  0825               	movf	(___flsub@b+1)^(0+128),w
  6000  1B3D  1283               	bcf	3,5	;RP0=0, select bank0
  6001  1B3E  1303               	bcf	3,6	;RP1=0, select bank0
  6002  1B3F  00DA               	movwf	___fladd@b+1
  6003  1B40  1683               	bsf	3,5	;RP0=1, select bank1
  6004  1B41  1303               	bcf	3,6	;RP1=0, select bank1
  6005  1B42  0824               	movf	___flsub@b^(0+128),w
  6006  1B43  1283               	bcf	3,5	;RP0=0, select bank0
  6007  1B44  1303               	bcf	3,6	;RP1=0, select bank0
  6008  1B45  00D9               	movwf	___fladd@b
  6009  1B46  1683               	bsf	3,5	;RP0=1, select bank1
  6010  1B47  1303               	bcf	3,6	;RP1=0, select bank1
  6011  1B48  0823               	movf	(___flsub@a+3)^(0+128),w
  6012  1B49  1283               	bcf	3,5	;RP0=0, select bank0
  6013  1B4A  1303               	bcf	3,6	;RP1=0, select bank0
  6014  1B4B  00E0               	movwf	___fladd@a+3
  6015  1B4C  1683               	bsf	3,5	;RP0=1, select bank1
  6016  1B4D  1303               	bcf	3,6	;RP1=0, select bank1
  6017  1B4E  0822               	movf	(___flsub@a+2)^(0+128),w
  6018  1B4F  1283               	bcf	3,5	;RP0=0, select bank0
  6019  1B50  1303               	bcf	3,6	;RP1=0, select bank0
  6020  1B51  00DF               	movwf	___fladd@a+2
  6021  1B52  1683               	bsf	3,5	;RP0=1, select bank1
  6022  1B53  1303               	bcf	3,6	;RP1=0, select bank1
  6023  1B54  0821               	movf	(___flsub@a+1)^(0+128),w
  6024  1B55  1283               	bcf	3,5	;RP0=0, select bank0
  6025  1B56  1303               	bcf	3,6	;RP1=0, select bank0
  6026  1B57  00DE               	movwf	___fladd@a+1
  6027  1B58  1683               	bsf	3,5	;RP0=1, select bank1
  6028  1B59  1303               	bcf	3,6	;RP1=0, select bank1
  6029  1B5A  0820               	movf	___flsub@a^(0+128),w
  6030  1B5B  1283               	bcf	3,5	;RP0=0, select bank0
  6031  1B5C  1303               	bcf	3,6	;RP1=0, select bank0
  6032  1B5D  00DD               	movwf	___fladd@a
  6033  1B5E  160A  118A  2274  160A  158A  	fcall	___fladd
  6034  1B63  1283               	bcf	3,5	;RP0=0, select bank0
  6035  1B64  1303               	bcf	3,6	;RP1=0, select bank0
  6036  1B65  085C               	movf	?___fladd+3,w
  6037  1B66  1683               	bsf	3,5	;RP0=1, select bank1
  6038  1B67  1303               	bcf	3,6	;RP1=0, select bank1
  6039  1B68  00A3               	movwf	(?___flsub+3)^(0+128)
  6040  1B69  1283               	bcf	3,5	;RP0=0, select bank0
  6041  1B6A  1303               	bcf	3,6	;RP1=0, select bank0
  6042  1B6B  085B               	movf	?___fladd+2,w
  6043  1B6C  1683               	bsf	3,5	;RP0=1, select bank1
  6044  1B6D  1303               	bcf	3,6	;RP1=0, select bank1
  6045  1B6E  00A2               	movwf	(?___flsub+2)^(0+128)
  6046  1B6F  1283               	bcf	3,5	;RP0=0, select bank0
  6047  1B70  1303               	bcf	3,6	;RP1=0, select bank0
  6048  1B71  085A               	movf	?___fladd+1,w
  6049  1B72  1683               	bsf	3,5	;RP0=1, select bank1
  6050  1B73  1303               	bcf	3,6	;RP1=0, select bank1
  6051  1B74  00A1               	movwf	(?___flsub+1)^(0+128)
  6052  1B75  1283               	bcf	3,5	;RP0=0, select bank0
  6053  1B76  1303               	bcf	3,6	;RP1=0, select bank0
  6054  1B77  0859               	movf	?___fladd,w
  6055  1B78  1683               	bsf	3,5	;RP0=1, select bank1
  6056  1B79  1303               	bcf	3,6	;RP1=0, select bank1
  6057  1B7A  00A0               	movwf	?___flsub^(0+128)
  6058  1B7B                     l789:
  6059  1B7B  0008               	return
  6060  1B7C                     __end_of___flsub:
  6061                           
  6062                           	psect	text16
  6063  1274                     __ptext16:	
  6064 ;; *************** function ___fladd *****************
  6065 ;; Defined at:
  6066 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  b               4   57[BANK0 ] long 
  6069 ;;  a               4   61[BANK0 ] long 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  grs             1   76[BANK0 ] unsigned char 
  6072 ;;  bexp            1   75[BANK0 ] unsigned char 
  6073 ;;  aexp            1   74[BANK0 ] unsigned char 
  6074 ;;  signs           1   73[BANK0 ] unsigned char 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  4   57[BANK0 ] unsigned char 
  6077 ;; Registers used:
  6078 ;;		wreg, status,2, status,0, btemp+1
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6084 ;;      Params:         0       8       0       0       0
  6085 ;;      Locals:         0       4       0       0       0
  6086 ;;      Temps:          0       8       0       0       0
  6087 ;;      Totals:         0      20       0       0       0
  6088 ;;Total ram usage:       20 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:    1
  6091 ;; This function calls:
  6092 ;;		Nothing
  6093 ;; This function is called by:
  6094 ;;		_sprintf
  6095 ;;		___flsub
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           
  6100                           ;psect for function ___fladd
  6101  1274                     ___fladd:
  6102  1274                     l2503:	
  6103                           ;incstack = 0
  6104                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6105                           
  6106  1274  1283               	bcf	3,5	;RP0=0, select bank0
  6107  1275  1303               	bcf	3,6	;RP1=0, select bank0
  6108  1276  085C               	movf	___fladd@b+3,w
  6109  1277  3980               	andlw	128
  6110  1278  00E1               	movwf	??___fladd
  6111  1279  0861               	movf	??___fladd,w
  6112  127A  00E9               	movwf	___fladd@signs
  6113  127B                     l2505:
  6114  127B  085C               	movf	___fladd@b+3,w
  6115  127C  00E1               	movwf	??___fladd
  6116  127D  0761               	addwf	??___fladd,w
  6117  127E  00E2               	movwf	??___fladd+1
  6118  127F  0862               	movf	??___fladd+1,w
  6119  1280  00EB               	movwf	___fladd@bexp
  6120  1281                     l2507:
  6121  1281  1FDB               	btfss	___fladd@b+2,7
  6122  1282  2A84               	goto	u3201
  6123  1283  2A85               	goto	u3200
  6124  1284                     u3201:
  6125  1284  2A86               	goto	l2511
  6126  1285                     u3200:
  6127  1285                     l2509:
  6128  1285  146B               	bsf	___fladd@bexp,0
  6129  1286                     l2511:
  6130  1286  086B               	movf	___fladd@bexp,w
  6131  1287  1903               	btfsc	3,2
  6132  1288  2A8A               	goto	u3211
  6133  1289  2A8B               	goto	u3210
  6134  128A                     u3211:
  6135  128A  2A9B               	goto	l2521
  6136  128B                     u3210:
  6137  128B                     l2513:
  6138  128B  0A6B               	incf	___fladd@bexp,w
  6139  128C  1D03               	btfss	3,2
  6140  128D  2A8F               	goto	u3221
  6141  128E  2A90               	goto	u3220
  6142  128F                     u3221:
  6143  128F  2A98               	goto	l2517
  6144  1290                     u3220:
  6145  1290                     l2515:
  6146  1290  3000               	movlw	0
  6147  1291  00DC               	movwf	___fladd@b+3
  6148  1292  3000               	movlw	0
  6149  1293  00DB               	movwf	___fladd@b+2
  6150  1294  3000               	movlw	0
  6151  1295  00DA               	movwf	___fladd@b+1
  6152  1296  3000               	movlw	0
  6153  1297  00D9               	movwf	___fladd@b
  6154  1298                     l2517:
  6155  1298  17DB               	bsf	___fladd@b+2,7
  6156  1299                     l2519:
  6157  1299  01DC               	clrf	___fladd@b+3
  6158  129A  2AA3               	goto	l2523
  6159  129B                     l2521:
  6160  129B  3000               	movlw	0
  6161  129C  00DC               	movwf	___fladd@b+3
  6162  129D  3000               	movlw	0
  6163  129E  00DB               	movwf	___fladd@b+2
  6164  129F  3000               	movlw	0
  6165  12A0  00DA               	movwf	___fladd@b+1
  6166  12A1  3000               	movlw	0
  6167  12A2  00D9               	movwf	___fladd@b
  6168  12A3                     l2523:
  6169  12A3  0860               	movf	___fladd@a+3,w
  6170  12A4  3980               	andlw	128
  6171  12A5  00E1               	movwf	??___fladd
  6172  12A6  0861               	movf	??___fladd,w
  6173  12A7  00EA               	movwf	___fladd@aexp
  6174  12A8                     l2525:
  6175  12A8  086A               	movf	___fladd@aexp,w
  6176  12A9  0669               	xorwf	___fladd@signs,w
  6177  12AA  1903               	skipnz
  6178  12AB  2AAD               	goto	u3231
  6179  12AC  2AAE               	goto	u3230
  6180  12AD                     u3231:
  6181  12AD  2AAF               	goto	l2529
  6182  12AE                     u3230:
  6183  12AE                     l2527:
  6184  12AE  1769               	bsf	___fladd@signs,6
  6185  12AF                     l2529:
  6186  12AF  0860               	movf	___fladd@a+3,w
  6187  12B0  00E1               	movwf	??___fladd
  6188  12B1  0761               	addwf	??___fladd,w
  6189  12B2  00E2               	movwf	??___fladd+1
  6190  12B3  0862               	movf	??___fladd+1,w
  6191  12B4  00EA               	movwf	___fladd@aexp
  6192  12B5                     l2531:
  6193  12B5  1FDF               	btfss	___fladd@a+2,7
  6194  12B6  2AB8               	goto	u3241
  6195  12B7  2AB9               	goto	u3240
  6196  12B8                     u3241:
  6197  12B8  2ABA               	goto	l2535
  6198  12B9                     u3240:
  6199  12B9                     l2533:
  6200  12B9  146A               	bsf	___fladd@aexp,0
  6201  12BA                     l2535:
  6202  12BA  086A               	movf	___fladd@aexp,w
  6203  12BB  1903               	btfsc	3,2
  6204  12BC  2ABE               	goto	u3251
  6205  12BD  2ABF               	goto	u3250
  6206  12BE                     u3251:
  6207  12BE  2ACF               	goto	l2545
  6208  12BF                     u3250:
  6209  12BF                     l2537:
  6210  12BF  0A6A               	incf	___fladd@aexp,w
  6211  12C0  1D03               	btfss	3,2
  6212  12C1  2AC3               	goto	u3261
  6213  12C2  2AC4               	goto	u3260
  6214  12C3                     u3261:
  6215  12C3  2ACC               	goto	l2541
  6216  12C4                     u3260:
  6217  12C4                     l2539:
  6218  12C4  3000               	movlw	0
  6219  12C5  00E0               	movwf	___fladd@a+3
  6220  12C6  3000               	movlw	0
  6221  12C7  00DF               	movwf	___fladd@a+2
  6222  12C8  3000               	movlw	0
  6223  12C9  00DE               	movwf	___fladd@a+1
  6224  12CA  3000               	movlw	0
  6225  12CB  00DD               	movwf	___fladd@a
  6226  12CC                     l2541:
  6227  12CC  17DF               	bsf	___fladd@a+2,7
  6228  12CD                     l2543:
  6229  12CD  01E0               	clrf	___fladd@a+3
  6230  12CE  2AD7               	goto	l743
  6231  12CF                     l2545:
  6232  12CF  3000               	movlw	0
  6233  12D0  00E0               	movwf	___fladd@a+3
  6234  12D1  3000               	movlw	0
  6235  12D2  00DF               	movwf	___fladd@a+2
  6236  12D3  3000               	movlw	0
  6237  12D4  00DE               	movwf	___fladd@a+1
  6238  12D5  3000               	movlw	0
  6239  12D6  00DD               	movwf	___fladd@a
  6240  12D7                     l743:
  6241  12D7  086B               	movf	___fladd@bexp,w
  6242  12D8  026A               	subwf	___fladd@aexp,w
  6243  12D9  1803               	skipnc
  6244  12DA  2ADC               	goto	u3271
  6245  12DB  2ADD               	goto	u3270
  6246  12DC                     u3271:
  6247  12DC  2B21               	goto	l2581
  6248  12DD                     u3270:
  6249  12DD                     l2547:
  6250  12DD  1F69               	btfss	___fladd@signs,6
  6251  12DE  2AE0               	goto	u3281
  6252  12DF  2AE1               	goto	u3280
  6253  12E0                     u3281:
  6254  12E0  2AE5               	goto	l2551
  6255  12E1                     u3280:
  6256  12E1                     l2549:
  6257  12E1  3080               	movlw	128
  6258  12E2  00E1               	movwf	??___fladd
  6259  12E3  0861               	movf	??___fladd,w
  6260  12E4  06E9               	xorwf	___fladd@signs,f
  6261  12E5                     l2551:
  6262  12E5  086B               	movf	___fladd@bexp,w
  6263  12E6  00E1               	movwf	??___fladd
  6264  12E7  0861               	movf	??___fladd,w
  6265  12E8  00EC               	movwf	___fladd@grs
  6266  12E9                     l2553:
  6267  12E9  086A               	movf	___fladd@aexp,w
  6268  12EA  00E1               	movwf	??___fladd
  6269  12EB  0861               	movf	??___fladd,w
  6270  12EC  00EB               	movwf	___fladd@bexp
  6271  12ED                     l2555:
  6272  12ED  086C               	movf	___fladd@grs,w
  6273  12EE  00E1               	movwf	??___fladd
  6274  12EF  0861               	movf	??___fladd,w
  6275  12F0  00EA               	movwf	___fladd@aexp
  6276  12F1                     l2557:
  6277  12F1  0859               	movf	___fladd@b,w
  6278  12F2  00E1               	movwf	??___fladd
  6279  12F3  0861               	movf	??___fladd,w
  6280  12F4  00EC               	movwf	___fladd@grs
  6281  12F5                     l2559:
  6282  12F5  085D               	movf	___fladd@a,w
  6283  12F6  00E1               	movwf	??___fladd
  6284  12F7  0861               	movf	??___fladd,w
  6285  12F8  00D9               	movwf	___fladd@b
  6286  12F9                     l2561:
  6287  12F9  086C               	movf	___fladd@grs,w
  6288  12FA  00E1               	movwf	??___fladd
  6289  12FB  0861               	movf	??___fladd,w
  6290  12FC  00DD               	movwf	___fladd@a
  6291  12FD                     l2563:
  6292  12FD  085A               	movf	___fladd@b+1,w
  6293  12FE  00E1               	movwf	??___fladd
  6294  12FF  0861               	movf	??___fladd,w
  6295  1300  00EC               	movwf	___fladd@grs
  6296  1301                     l2565:
  6297  1301  085E               	movf	___fladd@a+1,w
  6298  1302  00E1               	movwf	??___fladd
  6299  1303  0861               	movf	??___fladd,w
  6300  1304  00DA               	movwf	___fladd@b+1
  6301  1305                     l2567:
  6302  1305  086C               	movf	___fladd@grs,w
  6303  1306  00E1               	movwf	??___fladd
  6304  1307  0861               	movf	??___fladd,w
  6305  1308  00DE               	movwf	___fladd@a+1
  6306  1309                     l2569:
  6307  1309  085B               	movf	___fladd@b+2,w
  6308  130A  00E1               	movwf	??___fladd
  6309  130B  0861               	movf	??___fladd,w
  6310  130C  00EC               	movwf	___fladd@grs
  6311  130D                     l2571:
  6312  130D  085F               	movf	___fladd@a+2,w
  6313  130E  00E1               	movwf	??___fladd
  6314  130F  0861               	movf	??___fladd,w
  6315  1310  00DB               	movwf	___fladd@b+2
  6316  1311                     l2573:
  6317  1311  086C               	movf	___fladd@grs,w
  6318  1312  00E1               	movwf	??___fladd
  6319  1313  0861               	movf	??___fladd,w
  6320  1314  00DF               	movwf	___fladd@a+2
  6321  1315                     l2575:
  6322  1315  085C               	movf	___fladd@b+3,w
  6323  1316  00E1               	movwf	??___fladd
  6324  1317  0861               	movf	??___fladd,w
  6325  1318  00EC               	movwf	___fladd@grs
  6326  1319                     l2577:
  6327  1319  0860               	movf	___fladd@a+3,w
  6328  131A  00E1               	movwf	??___fladd
  6329  131B  0861               	movf	??___fladd,w
  6330  131C  00DC               	movwf	___fladd@b+3
  6331  131D                     l2579:
  6332  131D  086C               	movf	___fladd@grs,w
  6333  131E  00E1               	movwf	??___fladd
  6334  131F  0861               	movf	??___fladd,w
  6335  1320  00E0               	movwf	___fladd@a+3
  6336  1321                     l2581:
  6337  1321  01EC               	clrf	___fladd@grs
  6338  1322                     l2583:
  6339  1322  086A               	movf	___fladd@aexp,w
  6340  1323  00E1               	movwf	??___fladd
  6341  1324  01E2               	clrf	??___fladd+1
  6342  1325  0862               	movf	??___fladd+1,w
  6343  1326  00E4               	movwf	??___fladd+3
  6344  1327  086B               	movf	___fladd@bexp,w
  6345  1328  0261               	subwf	??___fladd,w
  6346  1329  00E3               	movwf	??___fladd+2
  6347  132A  1C03               	skipc
  6348  132B  03E4               	decf	??___fladd+3,f
  6349  132C  0864               	movf	??___fladd+3,w
  6350  132D  3A80               	xorlw	128
  6351  132E  00FF               	movwf	btemp+1
  6352  132F  3080               	movlw	128
  6353  1330  027F               	subwf	btemp+1,w
  6354  1331  1D03               	skipz
  6355  1332  2B35               	goto	u3295
  6356  1333  301A               	movlw	26
  6357  1334  0263               	subwf	??___fladd+2,w
  6358  1335                     u3295:
  6359  1335  1C03               	skipc
  6360  1336  2B38               	goto	u3291
  6361  1337  2B39               	goto	u3290
  6362  1338                     u3291:
  6363  1338  2B76               	goto	l2599
  6364  1339                     u3290:
  6365  1339                     l2585:
  6366  1339  1283               	bcf	3,5	;RP0=0, select bank0
  6367  133A  1303               	bcf	3,6	;RP1=0, select bank0
  6368  133B  085C               	movf	___fladd@b+3,w
  6369  133C  045B               	iorwf	___fladd@b+2,w
  6370  133D  045A               	iorwf	___fladd@b+1,w
  6371  133E  0459               	iorwf	___fladd@b,w
  6372  133F  1D03               	skipz
  6373  1340  2B42               	goto	u3301
  6374  1341  2B44               	goto	u3300
  6375  1342                     u3301:
  6376  1342  3001               	movlw	1
  6377  1343  2B45               	goto	u3310
  6378  1344                     u3300:
  6379  1344  3000               	movlw	0
  6380  1345                     u3310:
  6381  1345  00E1               	movwf	??___fladd
  6382  1346  0861               	movf	??___fladd,w
  6383  1347  00EC               	movwf	___fladd@grs
  6384  1348  3000               	movlw	0
  6385  1349  00DC               	movwf	___fladd@b+3
  6386  134A  3000               	movlw	0
  6387  134B  00DB               	movwf	___fladd@b+2
  6388  134C  3000               	movlw	0
  6389  134D  00DA               	movwf	___fladd@b+1
  6390  134E  3000               	movlw	0
  6391  134F  00D9               	movwf	___fladd@b
  6392  1350  086A               	movf	___fladd@aexp,w
  6393  1351  00E1               	movwf	??___fladd
  6394  1352  0861               	movf	??___fladd,w
  6395  1353  00EB               	movwf	___fladd@bexp
  6396  1354  2B7E               	goto	l747
  6397  1355                     l749:
  6398  1355  1C6C               	btfss	___fladd@grs,0
  6399  1356  2B58               	goto	u3321
  6400  1357  2B59               	goto	u3320
  6401  1358                     u3321:
  6402  1358  2B62               	goto	l2589
  6403  1359                     u3320:
  6404  1359                     l2587:
  6405  1359  086C               	movf	___fladd@grs,w
  6406  135A  00E1               	movwf	??___fladd
  6407  135B  1003               	clrc
  6408  135C  0C61               	rrf	??___fladd,w
  6409  135D  3801               	iorlw	1
  6410  135E  00E2               	movwf	??___fladd+1
  6411  135F  0862               	movf	??___fladd+1,w
  6412  1360  00EC               	movwf	___fladd@grs
  6413  1361  2B64               	goto	l2591
  6414  1362                     l2589:
  6415  1362  1003               	clrc
  6416  1363  0CEC               	rrf	___fladd@grs,f
  6417  1364                     l2591:
  6418  1364  1C59               	btfss	___fladd@b,0
  6419  1365  2B67               	goto	u3331
  6420  1366  2B68               	goto	u3330
  6421  1367                     u3331:
  6422  1367  2B69               	goto	l2595
  6423  1368                     u3330:
  6424  1368                     l2593:
  6425  1368  17EC               	bsf	___fladd@grs,7
  6426  1369                     l2595:
  6427  1369  3001               	movlw	1
  6428  136A  00E1               	movwf	??___fladd
  6429  136B                     u3345:
  6430  136B  0D5C               	rlf	___fladd@b+3,w
  6431  136C  0CDC               	rrf	___fladd@b+3,f
  6432  136D  0CDB               	rrf	___fladd@b+2,f
  6433  136E  0CDA               	rrf	___fladd@b+1,f
  6434  136F  0CD9               	rrf	___fladd@b,f
  6435  1370  0BE1               	decfsz	??___fladd& (0+127),f
  6436  1371  2B6B               	goto	u3345
  6437  1372                     l2597:
  6438  1372  3001               	movlw	1
  6439  1373  00E1               	movwf	??___fladd
  6440  1374  0861               	movf	??___fladd,w
  6441  1375  07EB               	addwf	___fladd@bexp,f
  6442  1376                     l2599:
  6443  1376  1283               	bcf	3,5	;RP0=0, select bank0
  6444  1377  1303               	bcf	3,6	;RP1=0, select bank0
  6445  1378  086A               	movf	___fladd@aexp,w
  6446  1379  026B               	subwf	___fladd@bexp,w
  6447  137A  1C03               	skipc
  6448  137B  2B7D               	goto	u3351
  6449  137C  2B7E               	goto	u3350
  6450  137D                     u3351:
  6451  137D  2B55               	goto	l749
  6452  137E                     u3350:
  6453  137E                     l747:
  6454  137E  1B69               	btfsc	___fladd@signs,6
  6455  137F  2B81               	goto	u3361
  6456  1380  2B82               	goto	u3360
  6457  1381                     u3361:
  6458  1381  2BCD               	goto	l2625
  6459  1382                     u3360:
  6460  1382                     l2601:
  6461  1382  086B               	movf	___fladd@bexp,w
  6462  1383  1D03               	btfss	3,2
  6463  1384  2B86               	goto	u3371
  6464  1385  2B87               	goto	u3370
  6465  1386                     u3371:
  6466  1386  2B90               	goto	l2607
  6467  1387                     u3370:
  6468  1387                     l2603:
  6469  1387  3000               	movlw	0
  6470  1388  00DC               	movwf	?___fladd+3
  6471  1389  3000               	movlw	0
  6472  138A  00DB               	movwf	?___fladd+2
  6473  138B  3000               	movlw	0
  6474  138C  00DA               	movwf	?___fladd+1
  6475  138D  3000               	movlw	0
  6476  138E  00D9               	movwf	?___fladd
  6477  138F  2CFB               	goto	l756
  6478  1390                     l2607:
  6479  1390  085D               	movf	___fladd@a,w
  6480  1391  07D9               	addwf	___fladd@b,f
  6481  1392  085E               	movf	___fladd@a+1,w
  6482  1393  1103               	clrz
  6483  1394  1803               	skipnc
  6484  1395  3E01               	addlw	1
  6485  1396  1903               	skipnz
  6486  1397  2B99               	goto	u3381
  6487  1398  07DA               	addwf	___fladd@b+1,f
  6488  1399                     u3381:
  6489  1399  085F               	movf	___fladd@a+2,w
  6490  139A  1103               	clrz
  6491  139B  1803               	skipnc
  6492  139C  3E01               	addlw	1
  6493  139D  1903               	skipnz
  6494  139E  2BA0               	goto	u3382
  6495  139F  07DB               	addwf	___fladd@b+2,f
  6496  13A0                     u3382:
  6497  13A0  0860               	movf	___fladd@a+3,w
  6498  13A1  1103               	clrz
  6499  13A2  1803               	skipnc
  6500  13A3  3E01               	addlw	1
  6501  13A4  1903               	skipnz
  6502  13A5  2BA7               	goto	u3383
  6503  13A6  07DC               	addwf	___fladd@b+3,f
  6504  13A7                     u3383:
  6505  13A7                     l2609:
  6506  13A7  1C5C               	btfss	___fladd@b+3,0
  6507  13A8  2BAA               	goto	u3391
  6508  13A9  2BAB               	goto	u3390
  6509  13AA                     u3391:
  6510  13AA  2C81               	goto	l2659
  6511  13AB                     u3390:
  6512  13AB                     l2611:
  6513  13AB  1C6C               	btfss	___fladd@grs,0
  6514  13AC  2BAE               	goto	u3401
  6515  13AD  2BAF               	goto	u3400
  6516  13AE                     u3401:
  6517  13AE  2BB8               	goto	l2615
  6518  13AF                     u3400:
  6519  13AF                     l2613:
  6520  13AF  086C               	movf	___fladd@grs,w
  6521  13B0  00E1               	movwf	??___fladd
  6522  13B1  1003               	clrc
  6523  13B2  0C61               	rrf	??___fladd,w
  6524  13B3  3801               	iorlw	1
  6525  13B4  00E2               	movwf	??___fladd+1
  6526  13B5  0862               	movf	??___fladd+1,w
  6527  13B6  00EC               	movwf	___fladd@grs
  6528  13B7  2BBA               	goto	l2617
  6529  13B8                     l2615:
  6530  13B8  1003               	clrc
  6531  13B9  0CEC               	rrf	___fladd@grs,f
  6532  13BA                     l2617:
  6533  13BA  1C59               	btfss	___fladd@b,0
  6534  13BB  2BBD               	goto	u3411
  6535  13BC  2BBE               	goto	u3410
  6536  13BD                     u3411:
  6537  13BD  2BBF               	goto	l2621
  6538  13BE                     u3410:
  6539  13BE                     l2619:
  6540  13BE  17EC               	bsf	___fladd@grs,7
  6541  13BF                     l2621:
  6542  13BF  3001               	movlw	1
  6543  13C0  00E1               	movwf	??___fladd
  6544  13C1                     u3425:
  6545  13C1  0D5C               	rlf	___fladd@b+3,w
  6546  13C2  0CDC               	rrf	___fladd@b+3,f
  6547  13C3  0CDB               	rrf	___fladd@b+2,f
  6548  13C4  0CDA               	rrf	___fladd@b+1,f
  6549  13C5  0CD9               	rrf	___fladd@b,f
  6550  13C6  0BE1               	decfsz	??___fladd& (0+127),f
  6551  13C7  2BC1               	goto	u3425
  6552  13C8                     l2623:
  6553  13C8  3001               	movlw	1
  6554  13C9  00E1               	movwf	??___fladd
  6555  13CA  0861               	movf	??___fladd,w
  6556  13CB  07EB               	addwf	___fladd@bexp,f
  6557  13CC  2C81               	goto	l2659
  6558  13CD                     l2625:
  6559  13CD  085C               	movf	___fladd@b+3,w
  6560  13CE  3A80               	xorlw	128
  6561  13CF  00FF               	movwf	btemp+1
  6562  13D0  0860               	movf	___fladd@a+3,w
  6563  13D1  3A80               	xorlw	128
  6564  13D2  027F               	subwf	btemp+1,w
  6565  13D3  1D03               	skipz
  6566  13D4  2BDF               	goto	u3433
  6567  13D5  085F               	movf	___fladd@a+2,w
  6568  13D6  025B               	subwf	___fladd@b+2,w
  6569  13D7  1D03               	skipz
  6570  13D8  2BDF               	goto	u3433
  6571  13D9  085E               	movf	___fladd@a+1,w
  6572  13DA  025A               	subwf	___fladd@b+1,w
  6573  13DB  1D03               	skipz
  6574  13DC  2BDF               	goto	u3433
  6575  13DD  085D               	movf	___fladd@a,w
  6576  13DE  0259               	subwf	___fladd@b,w
  6577  13DF                     u3433:
  6578  13DF  1803               	skipnc
  6579  13E0  2BE2               	goto	u3431
  6580  13E1  2BE3               	goto	u3430
  6581  13E2                     u3431:
  6582  13E2  2C3B               	goto	l2635
  6583  13E3                     u3430:
  6584  13E3                     l2627:
  6585  13E3  30FF               	movlw	255
  6586  13E4  00E1               	movwf	??___fladd
  6587  13E5  30FF               	movlw	255
  6588  13E6  00E2               	movwf	??___fladd+1
  6589  13E7  30FF               	movlw	255
  6590  13E8  00E3               	movwf	??___fladd+2
  6591  13E9  30FF               	movlw	255
  6592  13EA  00E4               	movwf	??___fladd+3
  6593  13EB  085D               	movf	___fladd@a,w
  6594  13EC  00E5               	movwf	??___fladd+4
  6595  13ED  085E               	movf	___fladd@a+1,w
  6596  13EE  00E6               	movwf	??___fladd+5
  6597  13EF  085F               	movf	___fladd@a+2,w
  6598  13F0  00E7               	movwf	??___fladd+6
  6599  13F1  0860               	movf	___fladd@a+3,w
  6600  13F2  00E8               	movwf	??___fladd+7
  6601  13F3  0859               	movf	___fladd@b,w
  6602  13F4  02E5               	subwf	??___fladd+4,f
  6603  13F5  085A               	movf	___fladd@b+1,w
  6604  13F6  1C03               	skipc
  6605  13F7  0F5A               	incfsz	___fladd@b+1,w
  6606  13F8  2BFA               	goto	u3441
  6607  13F9  2BFB               	goto	u3442
  6608  13FA                     u3441:
  6609  13FA  02E6               	subwf	??___fladd+5,f
  6610  13FB                     u3442:
  6611  13FB  085B               	movf	___fladd@b+2,w
  6612  13FC  1C03               	skipc
  6613  13FD  0F5B               	incfsz	___fladd@b+2,w
  6614  13FE  2C00               	goto	u3443
  6615  13FF  2C01               	goto	u3444
  6616  1400                     u3443:
  6617  1400  02E7               	subwf	??___fladd+6,f
  6618  1401                     u3444:
  6619  1401  085C               	movf	___fladd@b+3,w
  6620  1402  1C03               	skipc
  6621  1403  0F5C               	incfsz	___fladd@b+3,w
  6622  1404  2C06               	goto	u3445
  6623  1405  2C07               	goto	u3446
  6624  1406                     u3445:
  6625  1406  02E8               	subwf	??___fladd+7,f
  6626  1407                     u3446:
  6627  1407  0865               	movf	??___fladd+4,w
  6628  1408  07E1               	addwf	??___fladd,f
  6629  1409  0866               	movf	??___fladd+5,w
  6630  140A  1803               	skipnc
  6631  140B  0F66               	incfsz	??___fladd+5,w
  6632  140C  2C0E               	goto	u3450
  6633  140D  2C0F               	goto	u3451
  6634  140E                     u3450:
  6635  140E  07E2               	addwf	??___fladd+1,f
  6636  140F                     u3451:
  6637  140F  0867               	movf	??___fladd+6,w
  6638  1410  1803               	skipnc
  6639  1411  0F67               	incfsz	??___fladd+6,w
  6640  1412  2C14               	goto	u3452
  6641  1413  2C15               	goto	u3453
  6642  1414                     u3452:
  6643  1414  07E3               	addwf	??___fladd+2,f
  6644  1415                     u3453:
  6645  1415  0868               	movf	??___fladd+7,w
  6646  1416  1803               	skipnc
  6647  1417  0A68               	incf	??___fladd+7,w
  6648  1418  07E4               	addwf	??___fladd+3,f
  6649  1419  0864               	movf	??___fladd+3,w
  6650  141A  00DC               	movwf	___fladd@b+3
  6651  141B  0863               	movf	??___fladd+2,w
  6652  141C  00DB               	movwf	___fladd@b+2
  6653  141D  0862               	movf	??___fladd+1,w
  6654  141E  00DA               	movwf	___fladd@b+1
  6655  141F  0861               	movf	??___fladd,w
  6656  1420  00D9               	movwf	___fladd@b
  6657  1421                     l2629:
  6658  1421  3080               	movlw	128
  6659  1422  00E1               	movwf	??___fladd
  6660  1423  0861               	movf	??___fladd,w
  6661  1424  06E9               	xorwf	___fladd@signs,f
  6662  1425  09EC               	comf	___fladd@grs,f
  6663  1426  0AEC               	incf	___fladd@grs,f
  6664  1427                     l2631:
  6665  1427  086C               	movf	___fladd@grs,w
  6666  1428  1D03               	btfss	3,2
  6667  1429  2C2B               	goto	u3461
  6668  142A  2C2C               	goto	u3460
  6669  142B                     u3461:
  6670  142B  2C49               	goto	l764
  6671  142C                     u3460:
  6672  142C                     l2633:
  6673  142C  3001               	movlw	1
  6674  142D  07D9               	addwf	___fladd@b,f
  6675  142E  3000               	movlw	0
  6676  142F  1803               	skipnc
  6677  1430  3001               	movlw	1
  6678  1431  07DA               	addwf	___fladd@b+1,f
  6679  1432  3000               	movlw	0
  6680  1433  1803               	skipnc
  6681  1434  3001               	movlw	1
  6682  1435  07DB               	addwf	___fladd@b+2,f
  6683  1436  3000               	movlw	0
  6684  1437  1803               	skipnc
  6685  1438  3001               	movlw	1
  6686  1439  07DC               	addwf	___fladd@b+3,f
  6687  143A  2C49               	goto	l764
  6688  143B                     l2635:
  6689  143B  085D               	movf	___fladd@a,w
  6690  143C  02D9               	subwf	___fladd@b,f
  6691  143D  085E               	movf	___fladd@a+1,w
  6692  143E  1C03               	skipc
  6693  143F  0F5E               	incfsz	___fladd@a+1,w
  6694  1440  02DA               	subwf	___fladd@b+1,f
  6695  1441  085F               	movf	___fladd@a+2,w
  6696  1442  1C03               	skipc
  6697  1443  0F5F               	incfsz	___fladd@a+2,w
  6698  1444  02DB               	subwf	___fladd@b+2,f
  6699  1445  0860               	movf	___fladd@a+3,w
  6700  1446  1C03               	skipc
  6701  1447  0F60               	incfsz	___fladd@a+3,w
  6702  1448  02DC               	subwf	___fladd@b+3,f
  6703  1449                     l764:
  6704  1449  085C               	movf	___fladd@b+3,w
  6705  144A  045B               	iorwf	___fladd@b+2,w
  6706  144B  045A               	iorwf	___fladd@b+1,w
  6707  144C  0459               	iorwf	___fladd@b,w
  6708  144D  1D03               	skipz
  6709  144E  2C50               	goto	u3471
  6710  144F  2C51               	goto	u3470
  6711  1450                     u3471:
  6712  1450  2C7D               	goto	l2657
  6713  1451                     u3470:
  6714  1451                     l2637:
  6715  1451  086C               	movf	___fladd@grs,w
  6716  1452  1D03               	btfss	3,2
  6717  1453  2C55               	goto	u3481
  6718  1454  2C56               	goto	u3480
  6719  1455                     u3481:
  6720  1455  2C7D               	goto	l2657
  6721  1456                     u3480:
  6722  1456                     l2639:
  6723  1456  3000               	movlw	0
  6724  1457  00DC               	movwf	?___fladd+3
  6725  1458  3000               	movlw	0
  6726  1459  00DB               	movwf	?___fladd+2
  6727  145A  3000               	movlw	0
  6728  145B  00DA               	movwf	?___fladd+1
  6729  145C  3000               	movlw	0
  6730  145D  00D9               	movwf	?___fladd
  6731  145E  2CFB               	goto	l756
  6732  145F                     l2643:
  6733  145F  3001               	movlw	1
  6734  1460  00E1               	movwf	??___fladd
  6735  1461                     u3495:
  6736  1461  1003               	clrc
  6737  1462  0DD9               	rlf	___fladd@b,f
  6738  1463  0DDA               	rlf	___fladd@b+1,f
  6739  1464  0DDB               	rlf	___fladd@b+2,f
  6740  1465  0DDC               	rlf	___fladd@b+3,f
  6741  1466  0BE1               	decfsz	??___fladd,f
  6742  1467  2C61               	goto	u3495
  6743  1468                     l2645:
  6744  1468  1FEC               	btfss	___fladd@grs,7
  6745  1469  2C6B               	goto	u3501
  6746  146A  2C6C               	goto	u3500
  6747  146B                     u3501:
  6748  146B  2C6D               	goto	l768
  6749  146C                     u3500:
  6750  146C                     l2647:
  6751  146C  1459               	bsf	___fladd@b,0
  6752  146D                     l768:
  6753  146D  1C6C               	btfss	___fladd@grs,0
  6754  146E  2C70               	goto	u3511
  6755  146F  2C71               	goto	u3510
  6756  1470                     u3511:
  6757  1470  2C74               	goto	l2651
  6758  1471                     u3510:
  6759  1471                     l2649:
  6760  1471  1403               	setc
  6761  1472  0DEC               	rlf	___fladd@grs,f
  6762  1473  2C76               	goto	l2653
  6763  1474                     l2651:
  6764  1474  1003               	clrc
  6765  1475  0DEC               	rlf	___fladd@grs,f
  6766  1476                     l2653:
  6767  1476  086B               	movf	___fladd@bexp,w
  6768  1477  1903               	btfsc	3,2
  6769  1478  2C7A               	goto	u3521
  6770  1479  2C7B               	goto	u3520
  6771  147A                     u3521:
  6772  147A  2C7D               	goto	l2657
  6773  147B                     u3520:
  6774  147B                     l2655:
  6775  147B  3001               	movlw	1
  6776  147C  02EB               	subwf	___fladd@bexp,f
  6777  147D                     l2657:
  6778  147D  1FDB               	btfss	___fladd@b+2,7
  6779  147E  2C80               	goto	u3531
  6780  147F  2C81               	goto	u3530
  6781  1480                     u3531:
  6782  1480  2C5F               	goto	l2643
  6783  1481                     u3530:
  6784  1481                     l2659:
  6785  1481  01EA               	clrf	___fladd@aexp
  6786  1482                     l2661:
  6787  1482  1FEC               	btfss	___fladd@grs,7
  6788  1483  2C85               	goto	u3541
  6789  1484  2C86               	goto	u3540
  6790  1485                     u3541:
  6791  1485  2C94               	goto	l2669
  6792  1486                     u3540:
  6793  1486                     l2663:
  6794  1486  086C               	movf	___fladd@grs,w
  6795  1487  397F               	andlw	127
  6796  1488  1903               	btfsc	3,2
  6797  1489  2C8B               	goto	u3551
  6798  148A  2C8C               	goto	u3550
  6799  148B                     u3551:
  6800  148B  2C8F               	goto	l774
  6801  148C                     u3550:
  6802  148C                     l2665:
  6803  148C  01EA               	clrf	___fladd@aexp
  6804  148D  0AEA               	incf	___fladd@aexp,f
  6805  148E  2C94               	goto	l2669
  6806  148F                     l774:
  6807  148F  1C59               	btfss	___fladd@b,0
  6808  1490  2C92               	goto	u3561
  6809  1491  2C93               	goto	u3560
  6810  1492                     u3561:
  6811  1492  2C94               	goto	l2669
  6812  1493                     u3560:
  6813  1493  2C8C               	goto	l2665
  6814  1494                     l2669:
  6815  1494  086A               	movf	___fladd@aexp,w
  6816  1495  1903               	btfsc	3,2
  6817  1496  2C98               	goto	u3571
  6818  1497  2C99               	goto	u3570
  6819  1498                     u3571:
  6820  1498  2CCD               	goto	l777
  6821  1499                     u3570:
  6822  1499                     l2671:
  6823  1499  3001               	movlw	1
  6824  149A  07D9               	addwf	___fladd@b,f
  6825  149B  3000               	movlw	0
  6826  149C  1803               	skipnc
  6827  149D  3001               	movlw	1
  6828  149E  07DA               	addwf	___fladd@b+1,f
  6829  149F  3000               	movlw	0
  6830  14A0  1803               	skipnc
  6831  14A1  3001               	movlw	1
  6832  14A2  07DB               	addwf	___fladd@b+2,f
  6833  14A3  3000               	movlw	0
  6834  14A4  1803               	skipnc
  6835  14A5  3001               	movlw	1
  6836  14A6  07DC               	addwf	___fladd@b+3,f
  6837  14A7                     l2673:
  6838  14A7  1C5C               	btfss	___fladd@b+3,0
  6839  14A8  2CAA               	goto	u3581
  6840  14A9  2CAB               	goto	u3580
  6841  14AA                     u3581:
  6842  14AA  2CCD               	goto	l777
  6843  14AB                     u3580:
  6844  14AB                     l2675:
  6845  14AB  0859               	movf	___fladd@b,w
  6846  14AC  00E1               	movwf	??___fladd
  6847  14AD  085A               	movf	___fladd@b+1,w
  6848  14AE  00E2               	movwf	??___fladd+1
  6849  14AF  085B               	movf	___fladd@b+2,w
  6850  14B0  00E3               	movwf	??___fladd+2
  6851  14B1  085C               	movf	___fladd@b+3,w
  6852  14B2  00E4               	movwf	??___fladd+3
  6853  14B3  3001               	movlw	1
  6854  14B4  00E5               	movwf	??___fladd+4
  6855  14B5                     u3595:
  6856  14B5  0D64               	rlf	??___fladd+3,w
  6857  14B6  0CE4               	rrf	??___fladd+3,f
  6858  14B7  0CE3               	rrf	??___fladd+2,f
  6859  14B8  0CE2               	rrf	??___fladd+1,f
  6860  14B9  0CE1               	rrf	??___fladd,f
  6861  14BA                     u3590:
  6862  14BA  0BE5               	decfsz	??___fladd+4,f
  6863  14BB  2CB5               	goto	u3595
  6864  14BC  0864               	movf	??___fladd+3,w
  6865  14BD  00DC               	movwf	___fladd@b+3
  6866  14BE  0863               	movf	??___fladd+2,w
  6867  14BF  00DB               	movwf	___fladd@b+2
  6868  14C0  0862               	movf	??___fladd+1,w
  6869  14C1  00DA               	movwf	___fladd@b+1
  6870  14C2  0861               	movf	??___fladd,w
  6871  14C3  00D9               	movwf	___fladd@b
  6872  14C4  0A6B               	incf	___fladd@bexp,w
  6873  14C5  1903               	btfsc	3,2
  6874  14C6  2CC8               	goto	u3601
  6875  14C7  2CC9               	goto	u3600
  6876  14C8                     u3601:
  6877  14C8  2CCD               	goto	l777
  6878  14C9                     u3600:
  6879  14C9                     l2677:
  6880  14C9  3001               	movlw	1
  6881  14CA  00E1               	movwf	??___fladd
  6882  14CB  0861               	movf	??___fladd,w
  6883  14CC  07EB               	addwf	___fladd@bexp,f
  6884  14CD                     l777:
  6885  14CD  0A6B               	incf	___fladd@bexp,w
  6886  14CE  1903               	btfsc	3,2
  6887  14CF  2CD1               	goto	u3611
  6888  14D0  2CD2               	goto	u3610
  6889  14D1                     u3611:
  6890  14D1  2CD7               	goto	l2681
  6891  14D2                     u3610:
  6892  14D2                     l2679:
  6893  14D2  086B               	movf	___fladd@bexp,w
  6894  14D3  1D03               	btfss	3,2
  6895  14D4  2CD6               	goto	u3621
  6896  14D5  2CD7               	goto	u3620
  6897  14D6                     u3621:
  6898  14D6  2CE5               	goto	l2687
  6899  14D7                     u3620:
  6900  14D7                     l2681:
  6901  14D7  3000               	movlw	0
  6902  14D8  00DC               	movwf	___fladd@b+3
  6903  14D9  3000               	movlw	0
  6904  14DA  00DB               	movwf	___fladd@b+2
  6905  14DB  3000               	movlw	0
  6906  14DC  00DA               	movwf	___fladd@b+1
  6907  14DD  3000               	movlw	0
  6908  14DE  00D9               	movwf	___fladd@b
  6909  14DF                     l2683:
  6910  14DF  086B               	movf	___fladd@bexp,w
  6911  14E0  1D03               	btfss	3,2
  6912  14E1  2CE3               	goto	u3631
  6913  14E2  2CE4               	goto	u3630
  6914  14E3                     u3631:
  6915  14E3  2CE5               	goto	l2687
  6916  14E4                     u3630:
  6917  14E4                     l2685:
  6918  14E4  01E9               	clrf	___fladd@signs
  6919  14E5                     l2687:
  6920  14E5  1C6B               	btfss	___fladd@bexp,0
  6921  14E6  2CE8               	goto	u3641
  6922  14E7  2CE9               	goto	u3640
  6923  14E8                     u3641:
  6924  14E8  2CEB               	goto	l2691
  6925  14E9                     u3640:
  6926  14E9                     l2689:
  6927  14E9  17DB               	bsf	___fladd@b+2,7
  6928  14EA  2CEF               	goto	l785
  6929  14EB                     l2691:
  6930  14EB  307F               	movlw	127
  6931  14EC  00E1               	movwf	??___fladd
  6932  14ED  0861               	movf	??___fladd,w
  6933  14EE  05DB               	andwf	___fladd@b+2,f
  6934  14EF                     l785:
  6935  14EF  086B               	movf	___fladd@bexp,w
  6936  14F0  00E1               	movwf	??___fladd
  6937  14F1  1003               	clrc
  6938  14F2  0C61               	rrf	??___fladd,w
  6939  14F3  00E2               	movwf	??___fladd+1
  6940  14F4  0862               	movf	??___fladd+1,w
  6941  14F5  00DC               	movwf	___fladd@b+3
  6942  14F6                     l2693:
  6943  14F6  1FE9               	btfss	___fladd@signs,7
  6944  14F7  2CF9               	goto	u3651
  6945  14F8  2CFA               	goto	u3650
  6946  14F9                     u3651:
  6947  14F9  2CFB               	goto	l786
  6948  14FA                     u3650:
  6949  14FA                     l2695:
  6950  14FA  17DC               	bsf	___fladd@b+3,7
  6951  14FB                     l786:
  6952  14FB                     l756:
  6953  14FB  0008               	return
  6954  14FC                     __end_of___fladd:
  6955                           
  6956                           	psect	text17
  6957  189D                     __ptext17:	
  6958 ;; *************** function ___flneg *****************
  6959 ;; Defined at:
  6960 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;  f1              4    3[COMMON] unsigned char 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;		None
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  4    3[COMMON] unsigned char 
  6967 ;; Registers used:
  6968 ;;		wreg
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6974 ;;      Params:         4       0       0       0       0
  6975 ;;      Locals:         0       0       0       0       0
  6976 ;;      Temps:          0       0       0       0       0
  6977 ;;      Totals:         4       0       0       0       0
  6978 ;;Total ram usage:        4 bytes
  6979 ;; Hardware stack levels used:    1
  6980 ;; Hardware stack levels required when called:    1
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_sprintf
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           
  6989                           ;psect for function ___flneg
  6990  189D                     ___flneg:
  6991  189D                     l3105:	
  6992                           ;incstack = 0
  6993                           ; Regs used in ___flneg: [wreg]
  6994                           
  6995  189D  0876               	movf	___flneg@f1+3,w
  6996  189E  0475               	iorwf	___flneg@f1+2,w
  6997  189F  0474               	iorwf	___flneg@f1+1,w
  6998  18A0  0473               	iorwf	___flneg@f1,w
  6999  18A1  1903               	skipnz
  7000  18A2  28A4               	goto	u4781
  7001  18A3  28A5               	goto	u4780
  7002  18A4                     u4781:
  7003  18A4  28A7               	goto	l3109
  7004  18A5                     u4780:
  7005  18A5                     l3107:
  7006  18A5  3080               	movlw	128
  7007  18A6  06F6               	xorwf	___flneg@f1+3,f
  7008  18A7                     l3109:
  7009  18A7                     l615:
  7010  18A7  0008               	return
  7011  18A8                     __end_of___flneg:
  7012                           
  7013                           	psect	text18
  7014  1015                     __ptext18:	
  7015 ;; *************** function ___flge *****************
  7016 ;; Defined at:
  7017 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  ff1             4    0[BANK0 ] unsigned char 
  7020 ;;  ff2             4    4[BANK0 ] unsigned char 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;		None
  7023 ;; Return value:  Size  Location     Type
  7024 ;;		None               void
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7032 ;;      Params:         0       8       0       0       0
  7033 ;;      Locals:         0       0       0       0       0
  7034 ;;      Temps:          4       0       0       0       0
  7035 ;;      Totals:         4       8       0       0       0
  7036 ;;Total ram usage:       12 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    1
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_sprintf
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           
  7047                           ;psect for function ___flge
  7048  1015                     ___flge:
  7049  1015                     l4083:	
  7050                           ;incstack = 0
  7051                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7052                           
  7053  1015  3000               	movlw	0
  7054  1016  1283               	bcf	3,5	;RP0=0, select bank0
  7055  1017  1303               	bcf	3,6	;RP1=0, select bank0
  7056  1018  0520               	andwf	___flge@ff1,w
  7057  1019  00F3               	movwf	??___flge
  7058  101A  3000               	movlw	0
  7059  101B  0521               	andwf	___flge@ff1+1,w
  7060  101C  00F4               	movwf	??___flge+1
  7061  101D  3080               	movlw	128
  7062  101E  0522               	andwf	___flge@ff1+2,w
  7063  101F  00F5               	movwf	??___flge+2
  7064  1020  307F               	movlw	127
  7065  1021  0523               	andwf	___flge@ff1+3,w
  7066  1022  00F6               	movwf	??___flge+3
  7067  1023  0876               	movf	??___flge+3,w
  7068  1024  0475               	iorwf	??___flge+2,w
  7069  1025  0474               	iorwf	??___flge+1,w
  7070  1026  0473               	iorwf	??___flge,w
  7071  1027  1D03               	skipz
  7072  1028  282A               	goto	u6661
  7073  1029  282B               	goto	u6660
  7074  102A                     u6661:
  7075  102A  2833               	goto	l607
  7076  102B                     u6660:
  7077  102B                     l4085:
  7078  102B  3000               	movlw	0
  7079  102C  00A3               	movwf	___flge@ff1+3
  7080  102D  3000               	movlw	0
  7081  102E  00A2               	movwf	___flge@ff1+2
  7082  102F  3000               	movlw	0
  7083  1030  00A1               	movwf	___flge@ff1+1
  7084  1031  3000               	movlw	0
  7085  1032  00A0               	movwf	___flge@ff1
  7086  1033                     l607:
  7087  1033  3000               	movlw	0
  7088  1034  0524               	andwf	___flge@ff2,w
  7089  1035  00F3               	movwf	??___flge
  7090  1036  3000               	movlw	0
  7091  1037  0525               	andwf	___flge@ff2+1,w
  7092  1038  00F4               	movwf	??___flge+1
  7093  1039  3080               	movlw	128
  7094  103A  0526               	andwf	___flge@ff2+2,w
  7095  103B  00F5               	movwf	??___flge+2
  7096  103C  307F               	movlw	127
  7097  103D  0527               	andwf	___flge@ff2+3,w
  7098  103E  00F6               	movwf	??___flge+3
  7099  103F  0876               	movf	??___flge+3,w
  7100  1040  0475               	iorwf	??___flge+2,w
  7101  1041  0474               	iorwf	??___flge+1,w
  7102  1042  0473               	iorwf	??___flge,w
  7103  1043  1D03               	skipz
  7104  1044  2846               	goto	u6671
  7105  1045  2847               	goto	u6670
  7106  1046                     u6671:
  7107  1046  284F               	goto	l4089
  7108  1047                     u6670:
  7109  1047                     l4087:
  7110  1047  3000               	movlw	0
  7111  1048  00A7               	movwf	___flge@ff2+3
  7112  1049  3000               	movlw	0
  7113  104A  00A6               	movwf	___flge@ff2+2
  7114  104B  3000               	movlw	0
  7115  104C  00A5               	movwf	___flge@ff2+1
  7116  104D  3000               	movlw	0
  7117  104E  00A4               	movwf	___flge@ff2
  7118  104F                     l4089:
  7119  104F  1FA3               	btfss	___flge@ff1+3,7
  7120  1050  2852               	goto	u6681
  7121  1051  2853               	goto	u6680
  7122  1052                     u6681:
  7123  1052  2877               	goto	l4093
  7124  1053                     u6680:
  7125  1053                     l4091:
  7126  1053  3000               	movlw	0
  7127  1054  00F3               	movwf	??___flge
  7128  1055  3000               	movlw	0
  7129  1056  00F4               	movwf	??___flge+1
  7130  1057  3000               	movlw	0
  7131  1058  00F5               	movwf	??___flge+2
  7132  1059  3080               	movlw	128
  7133  105A  00F6               	movwf	??___flge+3
  7134  105B  0820               	movf	___flge@ff1,w
  7135  105C  02F3               	subwf	??___flge,f
  7136  105D  0821               	movf	___flge@ff1+1,w
  7137  105E  1C03               	skipc
  7138  105F  0F21               	incfsz	___flge@ff1+1,w
  7139  1060  2862               	goto	u6691
  7140  1061  2863               	goto	u6692
  7141  1062                     u6691:
  7142  1062  02F4               	subwf	??___flge+1,f
  7143  1063                     u6692:
  7144  1063  0822               	movf	___flge@ff1+2,w
  7145  1064  1C03               	skipc
  7146  1065  0F22               	incfsz	___flge@ff1+2,w
  7147  1066  2868               	goto	u6693
  7148  1067  2869               	goto	u6694
  7149  1068                     u6693:
  7150  1068  02F5               	subwf	??___flge+2,f
  7151  1069                     u6694:
  7152  1069  0823               	movf	___flge@ff1+3,w
  7153  106A  1C03               	skipc
  7154  106B  0F23               	incfsz	___flge@ff1+3,w
  7155  106C  286E               	goto	u6695
  7156  106D  286F               	goto	u6696
  7157  106E                     u6695:
  7158  106E  02F6               	subwf	??___flge+3,f
  7159  106F                     u6696:
  7160  106F  0876               	movf	??___flge+3,w
  7161  1070  00A3               	movwf	___flge@ff1+3
  7162  1071  0875               	movf	??___flge+2,w
  7163  1072  00A2               	movwf	___flge@ff1+2
  7164  1073  0874               	movf	??___flge+1,w
  7165  1074  00A1               	movwf	___flge@ff1+1
  7166  1075  0873               	movf	??___flge,w
  7167  1076  00A0               	movwf	___flge@ff1
  7168  1077                     l4093:
  7169  1077  1FA7               	btfss	___flge@ff2+3,7
  7170  1078  287A               	goto	u6701
  7171  1079  287B               	goto	u6700
  7172  107A                     u6701:
  7173  107A  289F               	goto	l610
  7174  107B                     u6700:
  7175  107B                     l4095:
  7176  107B  3000               	movlw	0
  7177  107C  00F3               	movwf	??___flge
  7178  107D  3000               	movlw	0
  7179  107E  00F4               	movwf	??___flge+1
  7180  107F  3000               	movlw	0
  7181  1080  00F5               	movwf	??___flge+2
  7182  1081  3080               	movlw	128
  7183  1082  00F6               	movwf	??___flge+3
  7184  1083  0824               	movf	___flge@ff2,w
  7185  1084  02F3               	subwf	??___flge,f
  7186  1085  0825               	movf	___flge@ff2+1,w
  7187  1086  1C03               	skipc
  7188  1087  0F25               	incfsz	___flge@ff2+1,w
  7189  1088  288A               	goto	u6711
  7190  1089  288B               	goto	u6712
  7191  108A                     u6711:
  7192  108A  02F4               	subwf	??___flge+1,f
  7193  108B                     u6712:
  7194  108B  0826               	movf	___flge@ff2+2,w
  7195  108C  1C03               	skipc
  7196  108D  0F26               	incfsz	___flge@ff2+2,w
  7197  108E  2890               	goto	u6713
  7198  108F  2891               	goto	u6714
  7199  1090                     u6713:
  7200  1090  02F5               	subwf	??___flge+2,f
  7201  1091                     u6714:
  7202  1091  0827               	movf	___flge@ff2+3,w
  7203  1092  1C03               	skipc
  7204  1093  0F27               	incfsz	___flge@ff2+3,w
  7205  1094  2896               	goto	u6715
  7206  1095  2897               	goto	u6716
  7207  1096                     u6715:
  7208  1096  02F6               	subwf	??___flge+3,f
  7209  1097                     u6716:
  7210  1097  0876               	movf	??___flge+3,w
  7211  1098  00A7               	movwf	___flge@ff2+3
  7212  1099  0875               	movf	??___flge+2,w
  7213  109A  00A6               	movwf	___flge@ff2+2
  7214  109B  0874               	movf	??___flge+1,w
  7215  109C  00A5               	movwf	___flge@ff2+1
  7216  109D  0873               	movf	??___flge,w
  7217  109E  00A4               	movwf	___flge@ff2
  7218  109F                     l610:
  7219  109F  3080               	movlw	128
  7220  10A0  06A3               	xorwf	___flge@ff1+3,f
  7221  10A1  3080               	movlw	128
  7222  10A2  06A7               	xorwf	___flge@ff2+3,f
  7223  10A3  0827               	movf	___flge@ff2+3,w
  7224  10A4  0223               	subwf	___flge@ff1+3,w
  7225  10A5  1D03               	skipz
  7226  10A6  28B1               	goto	u6725
  7227  10A7  0826               	movf	___flge@ff2+2,w
  7228  10A8  0222               	subwf	___flge@ff1+2,w
  7229  10A9  1D03               	skipz
  7230  10AA  28B1               	goto	u6725
  7231  10AB  0825               	movf	___flge@ff2+1,w
  7232  10AC  0221               	subwf	___flge@ff1+1,w
  7233  10AD  1D03               	skipz
  7234  10AE  28B1               	goto	u6725
  7235  10AF  0824               	movf	___flge@ff2,w
  7236  10B0  0220               	subwf	___flge@ff1,w
  7237  10B1                     u6725:
  7238  10B1  1803               	skipnc
  7239  10B2  28B4               	goto	u6721
  7240  10B3  28B5               	goto	u6720
  7241  10B4                     u6721:
  7242  10B4  28B7               	goto	l4099
  7243  10B5                     u6720:
  7244  10B5                     l4097:
  7245  10B5  1003               	clrc
  7246  10B6  28B8               	goto	l611
  7247  10B7                     l4099:
  7248  10B7  1403               	setc
  7249  10B8                     l611:
  7250  10B8  0008               	return
  7251  10B9                     __end_of___flge:
  7252                           
  7253                           	psect	text19
  7254  1ADC                     __ptext19:	
  7255 ;; *************** function ___fleq *****************
  7256 ;; Defined at:
  7257 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  ff1             4    0[BANK0 ] unsigned char 
  7260 ;;  ff2             4    4[BANK0 ] unsigned char 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;		None
  7263 ;; Return value:  Size  Location     Type
  7264 ;;		None               void
  7265 ;; Registers used:
  7266 ;;		wreg, status,2, status,0
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7272 ;;      Params:         0       8       0       0       0
  7273 ;;      Locals:         0       0       0       0       0
  7274 ;;      Temps:          4       0       0       0       0
  7275 ;;      Totals:         4       8       0       0       0
  7276 ;;Total ram usage:       12 bytes
  7277 ;; Hardware stack levels used:    1
  7278 ;; Hardware stack levels required when called:    1
  7279 ;; This function calls:
  7280 ;;		Nothing
  7281 ;; This function is called by:
  7282 ;;		_sprintf
  7283 ;; This function uses a non-reentrant model
  7284 ;;
  7285                           
  7286                           
  7287                           ;psect for function ___fleq
  7288  1ADC                     ___fleq:
  7289  1ADC                     l4071:	
  7290                           ;incstack = 0
  7291                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7292                           
  7293  1ADC  3000               	movlw	0
  7294  1ADD  1283               	bcf	3,5	;RP0=0, select bank0
  7295  1ADE  1303               	bcf	3,6	;RP1=0, select bank0
  7296  1ADF  0520               	andwf	___fleq@ff1,w
  7297  1AE0  00F3               	movwf	??___fleq
  7298  1AE1  3000               	movlw	0
  7299  1AE2  0521               	andwf	___fleq@ff1+1,w
  7300  1AE3  00F4               	movwf	??___fleq+1
  7301  1AE4  3080               	movlw	128
  7302  1AE5  0522               	andwf	___fleq@ff1+2,w
  7303  1AE6  00F5               	movwf	??___fleq+2
  7304  1AE7  307F               	movlw	127
  7305  1AE8  0523               	andwf	___fleq@ff1+3,w
  7306  1AE9  00F6               	movwf	??___fleq+3
  7307  1AEA  0876               	movf	??___fleq+3,w
  7308  1AEB  0475               	iorwf	??___fleq+2,w
  7309  1AEC  0474               	iorwf	??___fleq+1,w
  7310  1AED  0473               	iorwf	??___fleq,w
  7311  1AEE  1D03               	skipz
  7312  1AEF  2AF1               	goto	u6631
  7313  1AF0  2AF2               	goto	u6630
  7314  1AF1                     u6631:
  7315  1AF1  2AFA               	goto	l602
  7316  1AF2                     u6630:
  7317  1AF2                     l4073:
  7318  1AF2  3000               	movlw	0
  7319  1AF3  00A3               	movwf	___fleq@ff1+3
  7320  1AF4  3000               	movlw	0
  7321  1AF5  00A2               	movwf	___fleq@ff1+2
  7322  1AF6  3000               	movlw	0
  7323  1AF7  00A1               	movwf	___fleq@ff1+1
  7324  1AF8  3000               	movlw	0
  7325  1AF9  00A0               	movwf	___fleq@ff1
  7326  1AFA                     l602:
  7327  1AFA  3000               	movlw	0
  7328  1AFB  0524               	andwf	___fleq@ff2,w
  7329  1AFC  00F3               	movwf	??___fleq
  7330  1AFD  3000               	movlw	0
  7331  1AFE  0525               	andwf	___fleq@ff2+1,w
  7332  1AFF  00F4               	movwf	??___fleq+1
  7333  1B00  3080               	movlw	128
  7334  1B01  0526               	andwf	___fleq@ff2+2,w
  7335  1B02  00F5               	movwf	??___fleq+2
  7336  1B03  307F               	movlw	127
  7337  1B04  0527               	andwf	___fleq@ff2+3,w
  7338  1B05  00F6               	movwf	??___fleq+3
  7339  1B06  0876               	movf	??___fleq+3,w
  7340  1B07  0475               	iorwf	??___fleq+2,w
  7341  1B08  0474               	iorwf	??___fleq+1,w
  7342  1B09  0473               	iorwf	??___fleq,w
  7343  1B0A  1D03               	skipz
  7344  1B0B  2B0D               	goto	u6641
  7345  1B0C  2B0E               	goto	u6640
  7346  1B0D                     u6641:
  7347  1B0D  2B16               	goto	l603
  7348  1B0E                     u6640:
  7349  1B0E                     l4075:
  7350  1B0E  3000               	movlw	0
  7351  1B0F  00A7               	movwf	___fleq@ff2+3
  7352  1B10  3000               	movlw	0
  7353  1B11  00A6               	movwf	___fleq@ff2+2
  7354  1B12  3000               	movlw	0
  7355  1B13  00A5               	movwf	___fleq@ff2+1
  7356  1B14  3000               	movlw	0
  7357  1B15  00A4               	movwf	___fleq@ff2
  7358  1B16                     l603:
  7359  1B16  0827               	movf	___fleq@ff2+3,w
  7360  1B17  0623               	xorwf	___fleq@ff1+3,w
  7361  1B18  1D03               	skipz
  7362  1B19  2B24               	goto	u6655
  7363  1B1A  0826               	movf	___fleq@ff2+2,w
  7364  1B1B  0622               	xorwf	___fleq@ff1+2,w
  7365  1B1C  1D03               	skipz
  7366  1B1D  2B24               	goto	u6655
  7367  1B1E  0825               	movf	___fleq@ff2+1,w
  7368  1B1F  0621               	xorwf	___fleq@ff1+1,w
  7369  1B20  1D03               	skipz
  7370  1B21  2B24               	goto	u6655
  7371  1B22  0824               	movf	___fleq@ff2,w
  7372  1B23  0620               	xorwf	___fleq@ff1,w
  7373  1B24                     u6655:
  7374  1B24  1903               	skipnz
  7375  1B25  2B27               	goto	u6651
  7376  1B26  2B28               	goto	u6650
  7377  1B27                     u6651:
  7378  1B27  2B2A               	goto	l4079
  7379  1B28                     u6650:
  7380  1B28                     l4077:
  7381  1B28  1003               	clrc
  7382  1B29  2B2B               	goto	l604
  7383  1B2A                     l4079:
  7384  1B2A  1403               	setc
  7385  1B2B                     l604:
  7386  1B2B  0008               	return
  7387  1B2C                     __end_of___fleq:
  7388                           
  7389                           	psect	text20
  7390  1889                     __ptext20:	
  7391 ;; *************** function _spiRead *****************
  7392 ;; Defined at:
  7393 ;;		line 48 in file "SPI.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;		None
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;		None
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  1    wreg      unsigned char 
  7400 ;; Registers used:
  7401 ;;		wreg, status,2, status,0, pclath, cstack
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7407 ;;      Params:         0       0       0       0       0
  7408 ;;      Locals:         0       0       0       0       0
  7409 ;;      Temps:          0       0       0       0       0
  7410 ;;      Totals:         0       0       0       0       0
  7411 ;;Total ram usage:        0 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:    2
  7414 ;; This function calls:
  7415 ;;		_spiReceiveWait
  7416 ;; This function is called by:
  7417 ;;		_main
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           
  7422                           ;psect for function _spiRead
  7423  1889                     _spiRead:
  7424  1889                     l3299:	
  7425                           ;incstack = 0
  7426                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  7427                           
  7428                           
  7429                           ;SPI.c: 50:     spiReceiveWait();
  7430  1889  160A  158A  207A  160A  158A  	fcall	_spiReceiveWait
  7431  188E                     l3301:
  7432                           
  7433                           ;SPI.c: 51:     return(SSPBUF);
  7434  188E  1283               	bcf	3,5	;RP0=0, select bank0
  7435  188F  1303               	bcf	3,6	;RP1=0, select bank0
  7436  1890  0813               	movf	19,w	;volatile
  7437  1891                     l220:
  7438  1891  0008               	return
  7439  1892                     __end_of_spiRead:
  7440                           
  7441                           	psect	text21
  7442  187A                     __ptext21:	
  7443 ;; *************** function _spiReceiveWait *****************
  7444 ;; Defined at:
  7445 ;;		line 30 in file "SPI.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;		None
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		None
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7459 ;;      Params:         0       0       0       0       0
  7460 ;;      Locals:         0       0       0       0       0
  7461 ;;      Temps:          0       0       0       0       0
  7462 ;;      Totals:         0       0       0       0       0
  7463 ;;Total ram usage:        0 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; Hardware stack levels required when called:    1
  7466 ;; This function calls:
  7467 ;;		Nothing
  7468 ;; This function is called by:
  7469 ;;		_spiRead
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           
  7474                           ;psect for function _spiReceiveWait
  7475  187A                     _spiReceiveWait:
  7476  187A                     l2859:	
  7477                           ;incstack = 0
  7478                           ; Regs used in _spiReceiveWait: []
  7479                           
  7480  187A                     l206:	
  7481                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  7482                           
  7483  187A  1683               	bsf	3,5	;RP0=1, select bank1
  7484  187B  1303               	bcf	3,6	;RP1=0, select bank1
  7485  187C  1C14               	btfss	20,0	;volatile
  7486  187D  287F               	goto	u4031
  7487  187E  2880               	goto	u4030
  7488  187F                     u4031:
  7489  187F  287A               	goto	l206
  7490  1880                     u4030:
  7491  1880                     l209:
  7492  1880  0008               	return
  7493  1881                     __end_of_spiReceiveWait:
  7494                           
  7495                           	psect	text22
  7496  18B5                     __ptext22:	
  7497 ;; *************** function _spiInit *****************
  7498 ;; Defined at:
  7499 ;;		line 13 in file "SPI.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  sType           1    wreg     enum E1264
  7502 ;;  sDataSample     1    3[COMMON] enum E1272
  7503 ;;  sClockIdle      1    4[COMMON] enum E1276
  7504 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  sType           1    6[COMMON] enum E1264
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  1    wreg      void 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2, status,0
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7516 ;;      Params:         3       0       0       0       0
  7517 ;;      Locals:         1       0       0       0       0
  7518 ;;      Temps:          0       0       0       0       0
  7519 ;;      Totals:         4       0       0       0       0
  7520 ;;Total ram usage:        4 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    1
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_main
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           
  7531                           ;psect for function _spiInit
  7532  18B5                     _spiInit:
  7533                           
  7534                           ;incstack = 0
  7535                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  7536                           ;spiInit@sType stored from wreg
  7537  18B5  00F6               	movwf	spiInit@sType
  7538  18B6                     l3245:
  7539                           
  7540                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
  7541  18B6  1683               	bsf	3,5	;RP0=1, select bank1
  7542  18B7  1303               	bcf	3,6	;RP1=0, select bank1
  7543  18B8  1287               	bcf	7,5	;volatile
  7544                           
  7545                           ;SPI.c: 16:     if(sType & 0b00000100)
  7546  18B9  1D76               	btfss	spiInit@sType,2
  7547  18BA  28BC               	goto	u5091
  7548  18BB  28BD               	goto	u5090
  7549  18BC                     u5091:
  7550  18BC  28C1               	goto	l3251
  7551  18BD                     u5090:
  7552  18BD                     l3247:
  7553                           
  7554                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
  7555  18BD  0875               	movf	spiInit@sTransmitEdge,w
  7556  18BE  0094               	movwf	20	;volatile
  7557  18BF                     l3249:
  7558                           
  7559                           ;SPI.c: 19:         TRISC3 = 1;
  7560  18BF  1587               	bsf	7,3	;volatile
  7561                           
  7562                           ;SPI.c: 20:     }
  7563  18C0  28C5               	goto	l202
  7564  18C1                     l3251:
  7565                           
  7566                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  7567  18C1  0873               	movf	spiInit@sDataSample,w
  7568  18C2  0475               	iorwf	spiInit@sTransmitEdge,w
  7569  18C3  0094               	movwf	20	;volatile
  7570  18C4                     l3253:
  7571                           
  7572                           ;SPI.c: 24:         TRISC3 = 0;
  7573  18C4  1187               	bcf	7,3	;volatile
  7574  18C5                     l202:	
  7575                           ;SPI.c: 25:     }
  7576                           
  7577                           
  7578                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
  7579  18C5  0876               	movf	spiInit@sType,w
  7580  18C6  0474               	iorwf	spiInit@sClockIdle,w
  7581  18C7  1283               	bcf	3,5	;RP0=0, select bank0
  7582  18C8  1303               	bcf	3,6	;RP1=0, select bank0
  7583  18C9  0094               	movwf	20	;volatile
  7584  18CA                     l203:
  7585  18CA  0008               	return
  7586  18CB                     __end_of_spiInit:
  7587                           
  7588                           	psect	text23
  7589  18CB                     __ptext23:	
  7590 ;; *************** function _setup *****************
  7591 ;; Defined at:
  7592 ;;		line 141 in file "main.c"
  7593 ;; Parameters:    Size  Location     Type
  7594 ;;		None
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;		None
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  1    wreg      void 
  7599 ;; Registers used:
  7600 ;;		wreg, status,2
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7606 ;;      Params:         0       0       0       0       0
  7607 ;;      Locals:         0       0       0       0       0
  7608 ;;      Temps:          0       0       0       0       0
  7609 ;;      Totals:         0       0       0       0       0
  7610 ;;Total ram usage:        0 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:    1
  7613 ;; This function calls:
  7614 ;;		Nothing
  7615 ;; This function is called by:
  7616 ;;		_main
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           
  7621                           ;psect for function _setup
  7622  18CB                     _setup:
  7623  18CB                     l3219:	
  7624                           ;incstack = 0
  7625                           ; Regs used in _setup: [wreg+status,2]
  7626                           
  7627                           
  7628                           ;main.c: 142:     TRISD = 0b00000000;
  7629  18CB  1683               	bsf	3,5	;RP0=1, select bank1
  7630  18CC  1303               	bcf	3,6	;RP1=0, select bank1
  7631  18CD  0188               	clrf	8	;volatile
  7632  18CE                     l3221:
  7633                           
  7634                           ;main.c: 143:     TRISC = 0b10010000;
  7635  18CE  3090               	movlw	144
  7636  18CF  0087               	movwf	7	;volatile
  7637  18D0                     l3223:
  7638                           
  7639                           ;main.c: 144:     TRISE = 0b00000000;
  7640  18D0  0189               	clrf	9	;volatile
  7641  18D1                     l3225:
  7642                           
  7643                           ;main.c: 145:     TRISB = 0b00000000;
  7644  18D1  0186               	clrf	6	;volatile
  7645  18D2                     l3227:
  7646                           
  7647                           ;main.c: 146:     TRISA = 0b00000000;
  7648  18D2  0185               	clrf	5	;volatile
  7649                           
  7650                           ;main.c: 147:     ANSEL = 0b00000011;
  7651  18D3  3003               	movlw	3
  7652  18D4  1683               	bsf	3,5	;RP0=1, select bank3
  7653  18D5  1703               	bsf	3,6	;RP1=1, select bank3
  7654  18D6  0088               	movwf	8	;volatile
  7655  18D7                     l3229:
  7656                           
  7657                           ;main.c: 148:     PORTCbits.RC0 = 1;
  7658  18D7  1283               	bcf	3,5	;RP0=0, select bank0
  7659  18D8  1303               	bcf	3,6	;RP1=0, select bank0
  7660  18D9  1407               	bsf	7,0	;volatile
  7661  18DA                     l3231:
  7662                           
  7663                           ;main.c: 149:     PORTCbits.RC1 = 1;
  7664  18DA  1487               	bsf	7,1	;volatile
  7665  18DB                     l3233:
  7666                           
  7667                           ;main.c: 150:     PORTCbits.RC2 = 1;
  7668  18DB  1507               	bsf	7,2	;volatile
  7669  18DC                     l3235:
  7670                           
  7671                           ;main.c: 151:     PORTCbits.RC6 = 0;
  7672  18DC  1307               	bcf	7,6	;volatile
  7673  18DD                     l3237:
  7674                           
  7675                           ;main.c: 152:     PORTCbits.RC7 = 0;
  7676  18DD  1387               	bcf	7,7	;volatile
  7677                           
  7678                           ;main.c: 153:     PORTA = 0b11111111;
  7679  18DE  30FF               	movlw	255
  7680  18DF  0085               	movwf	5	;volatile
  7681  18E0                     l3239:
  7682                           
  7683                           ;main.c: 154:     PORTD = 0;
  7684  18E0  0188               	clrf	8	;volatile
  7685  18E1                     l3241:
  7686                           
  7687                           ;main.c: 155:     PORTE = 0;
  7688  18E1  0189               	clrf	9	;volatile
  7689  18E2                     l3243:
  7690                           
  7691                           ;main.c: 156:     PORTB = 0;
  7692  18E2  0186               	clrf	6	;volatile
  7693  18E3                     l99:
  7694  18E3  0008               	return
  7695  18E4                     __end_of_setup:
  7696                           
  7697                           	psect	text24
  7698  1892                     __ptext24:	
  7699 ;; *************** function _recibir *****************
  7700 ;; Defined at:
  7701 ;;		line 40 in file "USART.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;		None
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;		None
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      void 
  7708 ;; Registers used:
  7709 ;;		None
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7715 ;;      Params:         0       0       0       0       0
  7716 ;;      Locals:         0       0       0       0       0
  7717 ;;      Temps:          0       0       0       0       0
  7718 ;;      Totals:         0       0       0       0       0
  7719 ;;Total ram usage:        0 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    1
  7722 ;; This function calls:
  7723 ;;		Nothing
  7724 ;; This function is called by:
  7725 ;;		_main
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           
  7730                           ;psect for function _recibir
  7731  1892                     _recibir:
  7732  1892                     l3265:	
  7733                           ;incstack = 0
  7734                           ; Regs used in _recibir: []
  7735                           
  7736                           
  7737                           ;USART.c: 41:     RCSTAbits.CREN = 1;
  7738  1892  1283               	bcf	3,5	;RP0=0, select bank0
  7739  1893  1303               	bcf	3,6	;RP1=0, select bank0
  7740  1894  1618               	bsf	24,4	;volatile
  7741                           
  7742                           ;USART.c: 42:     RCSTAbits.FERR = 0;
  7743  1895  1118               	bcf	24,2	;volatile
  7744                           
  7745                           ;USART.c: 43:     PIE1bits.RCIE = 1;
  7746  1896  1683               	bsf	3,5	;RP0=1, select bank1
  7747  1897  1303               	bcf	3,6	;RP1=0, select bank1
  7748  1898  168C               	bsf	12,5	;volatile
  7749                           
  7750                           ;USART.c: 44:     RCSTAbits.OERR = 0;
  7751  1899  1283               	bcf	3,5	;RP0=0, select bank0
  7752  189A  1303               	bcf	3,6	;RP1=0, select bank0
  7753  189B  1098               	bcf	24,1	;volatile
  7754  189C                     l186:
  7755  189C  0008               	return
  7756  189D                     __end_of_recibir:
  7757                           
  7758                           	psect	text25
  7759  19C7                     __ptext25:	
  7760 ;; *************** function _enviar *****************
  7761 ;; Defined at:
  7762 ;;		line 22 in file "USART.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  valor           1    wreg     PTR unsigned char 
  7765 ;;		 -> s(25), 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  valor           1    3[COMMON] PTR unsigned char 
  7768 ;;		 -> s(25), 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      void 
  7771 ;; Registers used:
  7772 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7778 ;;      Params:         0       0       0       0       0
  7779 ;;      Locals:         1       0       0       0       0
  7780 ;;      Temps:          0       0       0       0       0
  7781 ;;      Totals:         1       0       0       0       0
  7782 ;;Total ram usage:        1 bytes
  7783 ;; Hardware stack levels used:    1
  7784 ;; Hardware stack levels required when called:    1
  7785 ;; This function calls:
  7786 ;;		Nothing
  7787 ;; This function is called by:
  7788 ;;		_main
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           
  7793                           ;psect for function _enviar
  7794  19C7                     _enviar:
  7795                           
  7796                           ;incstack = 0
  7797                           ; Regs used in _enviar: [wreg-fsr0h+status,2+status,0]
  7798                           ;enviar@valor stored from wreg
  7799  19C7  00F3               	movwf	enviar@valor
  7800  19C8                     l3579:
  7801                           
  7802                           ;USART.c: 23:     TXREG = valor[0];
  7803  19C8  0873               	movf	enviar@valor,w
  7804  19C9  0084               	movwf	4
  7805  19CA  1783               	bsf	3,7	;select IRP bank2
  7806  19CB  0800               	movf	0,w
  7807  19CC  1283               	bcf	3,5	;RP0=0, select bank0
  7808  19CD  1303               	bcf	3,6	;RP1=0, select bank0
  7809  19CE  0099               	movwf	25	;volatile
  7810  19CF                     l168:	
  7811                           ;USART.c: 25:     }
  7812                           
  7813                           
  7814                           ;USART.c: 24:     while (TRMT == 0) {
  7815  19CF  1683               	bsf	3,5	;RP0=1, select bank1
  7816  19D0  1303               	bcf	3,6	;RP1=0, select bank1
  7817  19D1  1C98               	btfss	24,1	;volatile
  7818  19D2  29D4               	goto	u5621
  7819  19D3  29D5               	goto	u5620
  7820  19D4                     u5621:
  7821  19D4  29CF               	goto	l168
  7822  19D5                     u5620:
  7823  19D5                     l3581:
  7824                           
  7825                           ;USART.c: 26:     TXREG = valor[1];
  7826  19D5  0A73               	incf	enviar@valor,w
  7827  19D6  0084               	movwf	4
  7828  19D7  1783               	bsf	3,7	;select IRP bank2
  7829  19D8  0800               	movf	0,w
  7830  19D9  1283               	bcf	3,5	;RP0=0, select bank0
  7831  19DA  1303               	bcf	3,6	;RP1=0, select bank0
  7832  19DB  0099               	movwf	25	;volatile
  7833  19DC                     l171:	
  7834                           ;USART.c: 28:     }
  7835                           
  7836                           
  7837                           ;USART.c: 27:     while (TRMT == 0) {
  7838  19DC  1683               	bsf	3,5	;RP0=1, select bank1
  7839  19DD  1303               	bcf	3,6	;RP1=0, select bank1
  7840  19DE  1C98               	btfss	24,1	;volatile
  7841  19DF  29E1               	goto	u5631
  7842  19E0  29E2               	goto	u5630
  7843  19E1                     u5631:
  7844  19E1  29DC               	goto	l171
  7845  19E2                     u5630:
  7846  19E2                     l3583:
  7847                           
  7848                           ;USART.c: 29:     TXREG = valor[2];
  7849  19E2  0873               	movf	enviar@valor,w
  7850  19E3  3E02               	addlw	2
  7851  19E4  0084               	movwf	4
  7852  19E5  1783               	bsf	3,7	;select IRP bank2
  7853  19E6  0800               	movf	0,w
  7854  19E7  1283               	bcf	3,5	;RP0=0, select bank0
  7855  19E8  1303               	bcf	3,6	;RP1=0, select bank0
  7856  19E9  0099               	movwf	25	;volatile
  7857  19EA                     l174:	
  7858                           ;USART.c: 31:     }
  7859                           
  7860                           
  7861                           ;USART.c: 30:     while (TRMT == 0) {
  7862  19EA  1683               	bsf	3,5	;RP0=1, select bank1
  7863  19EB  1303               	bcf	3,6	;RP1=0, select bank1
  7864  19EC  1C98               	btfss	24,1	;volatile
  7865  19ED  29EF               	goto	u5641
  7866  19EE  29F0               	goto	u5640
  7867  19EF                     u5641:
  7868  19EF  29EA               	goto	l174
  7869  19F0                     u5640:
  7870  19F0                     l3585:
  7871                           
  7872                           ;USART.c: 32:     TXREG = valor[3];
  7873  19F0  0873               	movf	enviar@valor,w
  7874  19F1  3E03               	addlw	3
  7875  19F2  0084               	movwf	4
  7876  19F3  1783               	bsf	3,7	;select IRP bank2
  7877  19F4  0800               	movf	0,w
  7878  19F5  1283               	bcf	3,5	;RP0=0, select bank0
  7879  19F6  1303               	bcf	3,6	;RP1=0, select bank0
  7880  19F7  0099               	movwf	25	;volatile
  7881  19F8                     l177:	
  7882                           ;USART.c: 34:     }
  7883                           
  7884                           
  7885                           ;USART.c: 33:     while (TRMT == 0) {
  7886  19F8  1683               	bsf	3,5	;RP0=1, select bank1
  7887  19F9  1303               	bcf	3,6	;RP1=0, select bank1
  7888  19FA  1C98               	btfss	24,1	;volatile
  7889  19FB  29FD               	goto	u5651
  7890  19FC  29FE               	goto	u5650
  7891  19FD                     u5651:
  7892  19FD  29F8               	goto	l177
  7893  19FE                     u5650:
  7894  19FE                     l3587:
  7895                           
  7896                           ;USART.c: 35:     TXREG = 0x20;
  7897  19FE  3020               	movlw	32
  7898  19FF  1283               	bcf	3,5	;RP0=0, select bank0
  7899  1A00  1303               	bcf	3,6	;RP1=0, select bank0
  7900  1A01  0099               	movwf	25	;volatile
  7901  1A02                     l180:	
  7902                           ;USART.c: 37:     }
  7903                           
  7904                           
  7905                           ;USART.c: 36:     while (TRMT == 0) {
  7906  1A02  1683               	bsf	3,5	;RP0=1, select bank1
  7907  1A03  1303               	bcf	3,6	;RP1=0, select bank1
  7908  1A04  1C98               	btfss	24,1	;volatile
  7909  1A05  2A07               	goto	u5661
  7910  1A06  2A08               	goto	u5660
  7911  1A07                     u5661:
  7912  1A07  2A02               	goto	l180
  7913  1A08                     u5660:
  7914  1A08                     l183:
  7915  1A08  0008               	return
  7916  1A09                     __end_of_enviar:
  7917                           
  7918                           	psect	text26
  7919  1C89                     __ptext26:	
  7920 ;; *************** function _conversor2 *****************
  7921 ;; Defined at:
  7922 ;;		line 170 in file "main.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  val             1    wreg     unsigned char 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;  val             1   45[BANK0 ] unsigned char 
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  4   37[BANK0 ] float 
  7929 ;; Registers used:
  7930 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7936 ;;      Params:         0       4       0       0       0
  7937 ;;      Locals:         0       1       0       0       0
  7938 ;;      Temps:          0       4       0       0       0
  7939 ;;      Totals:         0       9       0       0       0
  7940 ;;Total ram usage:        9 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    3
  7943 ;; This function calls:
  7944 ;;		___flmul
  7945 ;;		___xxtofl
  7946 ;; This function is called by:
  7947 ;;		_main
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951                           
  7952                           ;psect for function _conversor2
  7953  1C89                     _conversor2:
  7954                           
  7955                           ;incstack = 0
  7956                           ; Regs used in _conversor2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7957                           ;conversor2@val stored from wreg
  7958  1C89  1283               	bcf	3,5	;RP0=0, select bank0
  7959  1C8A  1303               	bcf	3,6	;RP1=0, select bank0
  7960  1C8B  00CD               	movwf	conversor2@val
  7961  1C8C                     l4199:
  7962                           
  7963                           ;main.c: 171:     vv = 1.95 * val;
  7964  1C8C  303F               	movlw	63
  7965  1C8D  00AE               	movwf	___flmul@b+3
  7966  1C8E  30F9               	movlw	249
  7967  1C8F  00AD               	movwf	___flmul@b+2
  7968  1C90  3099               	movlw	153
  7969  1C91  00AC               	movwf	___flmul@b+1
  7970  1C92  309A               	movlw	154
  7971  1C93  00AB               	movwf	___flmul@b
  7972  1C94  084D               	movf	conversor2@val,w
  7973  1C95  00C9               	movwf	??_conversor2
  7974  1C96  01CA               	clrf	??_conversor2+1
  7975  1C97  01CB               	clrf	??_conversor2+2
  7976  1C98  01CC               	clrf	??_conversor2+3
  7977  1C99  084C               	movf	??_conversor2+3,w
  7978  1C9A  00F6               	movwf	___xxtofl@val+3
  7979  1C9B  084B               	movf	??_conversor2+2,w
  7980  1C9C  00F5               	movwf	___xxtofl@val+2
  7981  1C9D  084A               	movf	??_conversor2+1,w
  7982  1C9E  00F4               	movwf	___xxtofl@val+1
  7983  1C9F  0849               	movf	??_conversor2,w
  7984  1CA0  00F3               	movwf	___xxtofl@val
  7985  1CA1  3001               	movlw	1
  7986  1CA2  160A  158A  25C9  160A  158A  	fcall	___xxtofl
  7987  1CA7  0876               	movf	?___xxtofl+3,w
  7988  1CA8  1283               	bcf	3,5	;RP0=0, select bank0
  7989  1CA9  1303               	bcf	3,6	;RP1=0, select bank0
  7990  1CAA  00B2               	movwf	___flmul@a+3
  7991  1CAB  0875               	movf	?___xxtofl+2,w
  7992  1CAC  00B1               	movwf	___flmul@a+2
  7993  1CAD  0874               	movf	?___xxtofl+1,w
  7994  1CAE  00B0               	movwf	___flmul@a+1
  7995  1CAF  0873               	movf	?___xxtofl,w
  7996  1CB0  00AF               	movwf	___flmul@a
  7997  1CB1  120A  158A  213C  160A  158A  	fcall	___flmul
  7998  1CB6  1283               	bcf	3,5	;RP0=0, select bank0
  7999  1CB7  1303               	bcf	3,6	;RP1=0, select bank0
  8000  1CB8  082E               	movf	?___flmul+3,w
  8001  1CB9  1683               	bsf	3,5	;RP0=1, select bank1
  8002  1CBA  1303               	bcf	3,6	;RP1=0, select bank1
  8003  1CBB  00DB               	movwf	(_vv+3)^(0+128)
  8004  1CBC  1283               	bcf	3,5	;RP0=0, select bank0
  8005  1CBD  1303               	bcf	3,6	;RP1=0, select bank0
  8006  1CBE  082D               	movf	?___flmul+2,w
  8007  1CBF  1683               	bsf	3,5	;RP0=1, select bank1
  8008  1CC0  1303               	bcf	3,6	;RP1=0, select bank1
  8009  1CC1  00DA               	movwf	(_vv+2)^(0+128)
  8010  1CC2  1283               	bcf	3,5	;RP0=0, select bank0
  8011  1CC3  1303               	bcf	3,6	;RP1=0, select bank0
  8012  1CC4  082C               	movf	?___flmul+1,w
  8013  1CC5  1683               	bsf	3,5	;RP0=1, select bank1
  8014  1CC6  1303               	bcf	3,6	;RP1=0, select bank1
  8015  1CC7  00D9               	movwf	(_vv+1)^(0+128)
  8016  1CC8  1283               	bcf	3,5	;RP0=0, select bank0
  8017  1CC9  1303               	bcf	3,6	;RP1=0, select bank0
  8018  1CCA  082B               	movf	?___flmul,w
  8019  1CCB  1683               	bsf	3,5	;RP0=1, select bank1
  8020  1CCC  1303               	bcf	3,6	;RP1=0, select bank1
  8021  1CCD  00D8               	movwf	_vv^(0+128)
  8022  1CCE                     l4201:
  8023                           
  8024                           ;main.c: 172:     return (vv);
  8025  1CCE  085B               	movf	(_vv+3)^(0+128),w
  8026  1CCF  1283               	bcf	3,5	;RP0=0, select bank0
  8027  1CD0  1303               	bcf	3,6	;RP1=0, select bank0
  8028  1CD1  00C8               	movwf	?_conversor2+3
  8029  1CD2  1683               	bsf	3,5	;RP0=1, select bank1
  8030  1CD3  1303               	bcf	3,6	;RP1=0, select bank1
  8031  1CD4  085A               	movf	(_vv+2)^(0+128),w
  8032  1CD5  1283               	bcf	3,5	;RP0=0, select bank0
  8033  1CD6  1303               	bcf	3,6	;RP1=0, select bank0
  8034  1CD7  00C7               	movwf	?_conversor2+2
  8035  1CD8  1683               	bsf	3,5	;RP0=1, select bank1
  8036  1CD9  1303               	bcf	3,6	;RP1=0, select bank1
  8037  1CDA  0859               	movf	(_vv+1)^(0+128),w
  8038  1CDB  1283               	bcf	3,5	;RP0=0, select bank0
  8039  1CDC  1303               	bcf	3,6	;RP1=0, select bank0
  8040  1CDD  00C6               	movwf	?_conversor2+1
  8041  1CDE  1683               	bsf	3,5	;RP0=1, select bank1
  8042  1CDF  1303               	bcf	3,6	;RP1=0, select bank1
  8043  1CE0  0858               	movf	_vv^(0+128),w
  8044  1CE1  1283               	bcf	3,5	;RP0=0, select bank0
  8045  1CE2  1303               	bcf	3,6	;RP1=0, select bank0
  8046  1CE3  00C5               	movwf	?_conversor2
  8047  1CE4                     l105:
  8048  1CE4  0008               	return
  8049  1CE5                     __end_of_conversor2:
  8050                           
  8051                           	psect	text27
  8052  1C2D                     __ptext27:	
  8053 ;; *************** function _conversor *****************
  8054 ;; Defined at:
  8055 ;;		line 165 in file "main.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;  val             1    wreg     unsigned char 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;  val             1   45[BANK0 ] unsigned char 
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  4   37[BANK0 ] float 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8069 ;;      Params:         0       4       0       0       0
  8070 ;;      Locals:         0       1       0       0       0
  8071 ;;      Temps:          0       4       0       0       0
  8072 ;;      Totals:         0       9       0       0       0
  8073 ;;Total ram usage:        9 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:    3
  8076 ;; This function calls:
  8077 ;;		___flmul
  8078 ;;		___xxtofl
  8079 ;; This function is called by:
  8080 ;;		_main
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           
  8085                           ;psect for function _conversor
  8086  1C2D                     _conversor:
  8087                           
  8088                           ;incstack = 0
  8089                           ; Regs used in _conversor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8090                           ;conversor@val stored from wreg
  8091  1C2D  1283               	bcf	3,5	;RP0=0, select bank0
  8092  1C2E  1303               	bcf	3,6	;RP1=0, select bank0
  8093  1C2F  00CD               	movwf	conversor@val
  8094  1C30                     l4467:
  8095                           
  8096                           ;main.c: 166:     x = 0.0195 * val;
  8097  1C30  303C               	movlw	60
  8098  1C31  00AE               	movwf	___flmul@b+3
  8099  1C32  309F               	movlw	159
  8100  1C33  00AD               	movwf	___flmul@b+2
  8101  1C34  30BE               	movlw	190
  8102  1C35  00AC               	movwf	___flmul@b+1
  8103  1C36  3077               	movlw	119
  8104  1C37  00AB               	movwf	___flmul@b
  8105  1C38  084D               	movf	conversor@val,w
  8106  1C39  00C9               	movwf	??_conversor
  8107  1C3A  01CA               	clrf	??_conversor+1
  8108  1C3B  01CB               	clrf	??_conversor+2
  8109  1C3C  01CC               	clrf	??_conversor+3
  8110  1C3D  084C               	movf	??_conversor+3,w
  8111  1C3E  00F6               	movwf	___xxtofl@val+3
  8112  1C3F  084B               	movf	??_conversor+2,w
  8113  1C40  00F5               	movwf	___xxtofl@val+2
  8114  1C41  084A               	movf	??_conversor+1,w
  8115  1C42  00F4               	movwf	___xxtofl@val+1
  8116  1C43  0849               	movf	??_conversor,w
  8117  1C44  00F3               	movwf	___xxtofl@val
  8118  1C45  3001               	movlw	1
  8119  1C46  160A  158A  25C9  160A  158A  	fcall	___xxtofl
  8120  1C4B  0876               	movf	?___xxtofl+3,w
  8121  1C4C  1283               	bcf	3,5	;RP0=0, select bank0
  8122  1C4D  1303               	bcf	3,6	;RP1=0, select bank0
  8123  1C4E  00B2               	movwf	___flmul@a+3
  8124  1C4F  0875               	movf	?___xxtofl+2,w
  8125  1C50  00B1               	movwf	___flmul@a+2
  8126  1C51  0874               	movf	?___xxtofl+1,w
  8127  1C52  00B0               	movwf	___flmul@a+1
  8128  1C53  0873               	movf	?___xxtofl,w
  8129  1C54  00AF               	movwf	___flmul@a
  8130  1C55  120A  158A  213C  160A  158A  	fcall	___flmul
  8131  1C5A  1283               	bcf	3,5	;RP0=0, select bank0
  8132  1C5B  1303               	bcf	3,6	;RP1=0, select bank0
  8133  1C5C  082E               	movf	?___flmul+3,w
  8134  1C5D  1683               	bsf	3,5	;RP0=1, select bank1
  8135  1C5E  1303               	bcf	3,6	;RP1=0, select bank1
  8136  1C5F  00D7               	movwf	(_x+3)^(0+128)
  8137  1C60  1283               	bcf	3,5	;RP0=0, select bank0
  8138  1C61  1303               	bcf	3,6	;RP1=0, select bank0
  8139  1C62  082D               	movf	?___flmul+2,w
  8140  1C63  1683               	bsf	3,5	;RP0=1, select bank1
  8141  1C64  1303               	bcf	3,6	;RP1=0, select bank1
  8142  1C65  00D6               	movwf	(_x+2)^(0+128)
  8143  1C66  1283               	bcf	3,5	;RP0=0, select bank0
  8144  1C67  1303               	bcf	3,6	;RP1=0, select bank0
  8145  1C68  082C               	movf	?___flmul+1,w
  8146  1C69  1683               	bsf	3,5	;RP0=1, select bank1
  8147  1C6A  1303               	bcf	3,6	;RP1=0, select bank1
  8148  1C6B  00D5               	movwf	(_x+1)^(0+128)
  8149  1C6C  1283               	bcf	3,5	;RP0=0, select bank0
  8150  1C6D  1303               	bcf	3,6	;RP1=0, select bank0
  8151  1C6E  082B               	movf	?___flmul,w
  8152  1C6F  1683               	bsf	3,5	;RP0=1, select bank1
  8153  1C70  1303               	bcf	3,6	;RP1=0, select bank1
  8154  1C71  00D4               	movwf	_x^(0+128)
  8155  1C72                     l4469:
  8156                           
  8157                           ;main.c: 167:     return (x);
  8158  1C72  0857               	movf	(_x+3)^(0+128),w
  8159  1C73  1283               	bcf	3,5	;RP0=0, select bank0
  8160  1C74  1303               	bcf	3,6	;RP1=0, select bank0
  8161  1C75  00C8               	movwf	?_conversor+3
  8162  1C76  1683               	bsf	3,5	;RP0=1, select bank1
  8163  1C77  1303               	bcf	3,6	;RP1=0, select bank1
  8164  1C78  0856               	movf	(_x+2)^(0+128),w
  8165  1C79  1283               	bcf	3,5	;RP0=0, select bank0
  8166  1C7A  1303               	bcf	3,6	;RP1=0, select bank0
  8167  1C7B  00C7               	movwf	?_conversor+2
  8168  1C7C  1683               	bsf	3,5	;RP0=1, select bank1
  8169  1C7D  1303               	bcf	3,6	;RP1=0, select bank1
  8170  1C7E  0855               	movf	(_x+1)^(0+128),w
  8171  1C7F  1283               	bcf	3,5	;RP0=0, select bank0
  8172  1C80  1303               	bcf	3,6	;RP1=0, select bank0
  8173  1C81  00C6               	movwf	?_conversor+1
  8174  1C82  1683               	bsf	3,5	;RP0=1, select bank1
  8175  1C83  1303               	bcf	3,6	;RP1=0, select bank1
  8176  1C84  0854               	movf	_x^(0+128),w
  8177  1C85  1283               	bcf	3,5	;RP0=0, select bank0
  8178  1C86  1303               	bcf	3,6	;RP1=0, select bank0
  8179  1C87  00C5               	movwf	?_conversor
  8180  1C88                     l102:
  8181  1C88  0008               	return
  8182  1C89                     __end_of_conversor:
  8183                           
  8184                           	psect	text28
  8185  1DC9                     __ptext28:	
  8186 ;; *************** function ___xxtofl *****************
  8187 ;; Defined at:
  8188 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  sign            1    wreg     unsigned char 
  8191 ;;  val             4    3[COMMON] long 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;  sign            1    4[BANK0 ] unsigned char 
  8194 ;;  arg             4    6[BANK0 ] unsigned long 
  8195 ;;  exp             1    5[BANK0 ] unsigned char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  4    3[COMMON] unsigned char 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8205 ;;      Params:         4       0       0       0       0
  8206 ;;      Locals:         0       6       0       0       0
  8207 ;;      Temps:          0       4       0       0       0
  8208 ;;      Totals:         4      10       0       0       0
  8209 ;;Total ram usage:       14 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:    1
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_conversor
  8216 ;;		_conversor2
  8217 ;;		_sprintf
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           
  8222                           ;psect for function ___xxtofl
  8223  1DC9                     ___xxtofl:
  8224                           
  8225                           ;incstack = 0
  8226                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8227                           ;___xxtofl@sign stored from wreg
  8228  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  8229  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  8230  1DCB  00A4               	movwf	___xxtofl@sign
  8231  1DCC                     l4123:
  8232  1DCC  0824               	movf	___xxtofl@sign,w
  8233  1DCD  1903               	btfsc	3,2
  8234  1DCE  2DD0               	goto	u6791
  8235  1DCF  2DD1               	goto	u6790
  8236  1DD0                     u6791:
  8237  1DD0  2DE5               	goto	l4129
  8238  1DD1                     u6790:
  8239  1DD1                     l4125:
  8240  1DD1  1FF6               	btfss	___xxtofl@val+3,7
  8241  1DD2  2DD4               	goto	u6801
  8242  1DD3  2DD5               	goto	u6800
  8243  1DD4                     u6801:
  8244  1DD4  2DE5               	goto	l4129
  8245  1DD5                     u6800:
  8246  1DD5                     l4127:
  8247  1DD5  0973               	comf	___xxtofl@val,w
  8248  1DD6  00A6               	movwf	___xxtofl@arg
  8249  1DD7  0974               	comf	___xxtofl@val+1,w
  8250  1DD8  00A7               	movwf	___xxtofl@arg+1
  8251  1DD9  0975               	comf	___xxtofl@val+2,w
  8252  1DDA  00A8               	movwf	___xxtofl@arg+2
  8253  1DDB  0976               	comf	___xxtofl@val+3,w
  8254  1DDC  00A9               	movwf	___xxtofl@arg+3
  8255  1DDD  0AA6               	incf	___xxtofl@arg,f
  8256  1DDE  1903               	skipnz
  8257  1DDF  0AA7               	incf	___xxtofl@arg+1,f
  8258  1DE0  1903               	skipnz
  8259  1DE1  0AA8               	incf	___xxtofl@arg+2,f
  8260  1DE2  1903               	skipnz
  8261  1DE3  0AA9               	incf	___xxtofl@arg+3,f
  8262  1DE4  2DED               	goto	l883
  8263  1DE5                     l4129:
  8264  1DE5  0876               	movf	___xxtofl@val+3,w
  8265  1DE6  00A9               	movwf	___xxtofl@arg+3
  8266  1DE7  0875               	movf	___xxtofl@val+2,w
  8267  1DE8  00A8               	movwf	___xxtofl@arg+2
  8268  1DE9  0874               	movf	___xxtofl@val+1,w
  8269  1DEA  00A7               	movwf	___xxtofl@arg+1
  8270  1DEB  0873               	movf	___xxtofl@val,w
  8271  1DEC  00A6               	movwf	___xxtofl@arg
  8272  1DED                     l883:
  8273  1DED  0876               	movf	___xxtofl@val+3,w
  8274  1DEE  0475               	iorwf	___xxtofl@val+2,w
  8275  1DEF  0474               	iorwf	___xxtofl@val+1,w
  8276  1DF0  0473               	iorwf	___xxtofl@val,w
  8277  1DF1  1D03               	skipz
  8278  1DF2  2DF4               	goto	u6811
  8279  1DF3  2DF5               	goto	u6810
  8280  1DF4                     u6811:
  8281  1DF4  2DFE               	goto	l4135
  8282  1DF5                     u6810:
  8283  1DF5                     l4131:
  8284  1DF5  3000               	movlw	0
  8285  1DF6  00F6               	movwf	?___xxtofl+3
  8286  1DF7  3000               	movlw	0
  8287  1DF8  00F5               	movwf	?___xxtofl+2
  8288  1DF9  3000               	movlw	0
  8289  1DFA  00F4               	movwf	?___xxtofl+1
  8290  1DFB  3000               	movlw	0
  8291  1DFC  00F3               	movwf	?___xxtofl
  8292  1DFD  2E84               	goto	l885
  8293  1DFE                     l4135:
  8294  1DFE  3096               	movlw	150
  8295  1DFF  00A0               	movwf	??___xxtofl
  8296  1E00  0820               	movf	??___xxtofl,w
  8297  1E01  00A5               	movwf	___xxtofl@exp
  8298  1E02  2E10               	goto	l4139
  8299  1E03                     l4137:
  8300  1E03  3001               	movlw	1
  8301  1E04  00A0               	movwf	??___xxtofl
  8302  1E05  0820               	movf	??___xxtofl,w
  8303  1E06  07A5               	addwf	___xxtofl@exp,f
  8304  1E07  3001               	movlw	1
  8305  1E08                     u6825:
  8306  1E08  1003               	clrc
  8307  1E09  0CA9               	rrf	___xxtofl@arg+3,f
  8308  1E0A  0CA8               	rrf	___xxtofl@arg+2,f
  8309  1E0B  0CA7               	rrf	___xxtofl@arg+1,f
  8310  1E0C  0CA6               	rrf	___xxtofl@arg,f
  8311  1E0D  3EFF               	addlw	-1
  8312  1E0E  1D03               	skipz
  8313  1E0F  2E08               	goto	u6825
  8314  1E10                     l4139:
  8315  1E10  30FE               	movlw	254
  8316  1E11  0529               	andwf	___xxtofl@arg+3,w
  8317  1E12  1D03               	btfss	3,2
  8318  1E13  2E15               	goto	u6831
  8319  1E14  2E16               	goto	u6830
  8320  1E15                     u6831:
  8321  1E15  2E03               	goto	l4137
  8322  1E16                     u6830:
  8323  1E16  2E32               	goto	l889
  8324  1E17                     l4141:
  8325  1E17  3001               	movlw	1
  8326  1E18  00A0               	movwf	??___xxtofl
  8327  1E19  0820               	movf	??___xxtofl,w
  8328  1E1A  07A5               	addwf	___xxtofl@exp,f
  8329  1E1B                     l4143:
  8330  1E1B  3001               	movlw	1
  8331  1E1C  07A6               	addwf	___xxtofl@arg,f
  8332  1E1D  3000               	movlw	0
  8333  1E1E  1803               	skipnc
  8334  1E1F  3001               	movlw	1
  8335  1E20  07A7               	addwf	___xxtofl@arg+1,f
  8336  1E21  3000               	movlw	0
  8337  1E22  1803               	skipnc
  8338  1E23  3001               	movlw	1
  8339  1E24  07A8               	addwf	___xxtofl@arg+2,f
  8340  1E25  3000               	movlw	0
  8341  1E26  1803               	skipnc
  8342  1E27  3001               	movlw	1
  8343  1E28  07A9               	addwf	___xxtofl@arg+3,f
  8344  1E29                     l4145:
  8345  1E29  3001               	movlw	1
  8346  1E2A                     u6845:
  8347  1E2A  1003               	clrc
  8348  1E2B  0CA9               	rrf	___xxtofl@arg+3,f
  8349  1E2C  0CA8               	rrf	___xxtofl@arg+2,f
  8350  1E2D  0CA7               	rrf	___xxtofl@arg+1,f
  8351  1E2E  0CA6               	rrf	___xxtofl@arg,f
  8352  1E2F  3EFF               	addlw	-1
  8353  1E30  1D03               	skipz
  8354  1E31  2E2A               	goto	u6845
  8355  1E32                     l889:
  8356  1E32  30FF               	movlw	255
  8357  1E33  0529               	andwf	___xxtofl@arg+3,w
  8358  1E34  1D03               	btfss	3,2
  8359  1E35  2E37               	goto	u6851
  8360  1E36  2E38               	goto	u6850
  8361  1E37                     u6851:
  8362  1E37  2E17               	goto	l4141
  8363  1E38                     u6850:
  8364  1E38  2E44               	goto	l4149
  8365  1E39                     l4147:
  8366  1E39  3001               	movlw	1
  8367  1E3A  02A5               	subwf	___xxtofl@exp,f
  8368  1E3B  3001               	movlw	1
  8369  1E3C  00A0               	movwf	??___xxtofl
  8370  1E3D                     u6865:
  8371  1E3D  1003               	clrc
  8372  1E3E  0DA6               	rlf	___xxtofl@arg,f
  8373  1E3F  0DA7               	rlf	___xxtofl@arg+1,f
  8374  1E40  0DA8               	rlf	___xxtofl@arg+2,f
  8375  1E41  0DA9               	rlf	___xxtofl@arg+3,f
  8376  1E42  0BA0               	decfsz	??___xxtofl,f
  8377  1E43  2E3D               	goto	u6865
  8378  1E44                     l4149:
  8379  1E44  1BA8               	btfsc	___xxtofl@arg+2,7
  8380  1E45  2E47               	goto	u6871
  8381  1E46  2E48               	goto	u6870
  8382  1E47                     u6871:
  8383  1E47  2E4E               	goto	l896
  8384  1E48                     u6870:
  8385  1E48                     l4151:
  8386  1E48  3002               	movlw	2
  8387  1E49  0225               	subwf	___xxtofl@exp,w
  8388  1E4A  1803               	skipnc
  8389  1E4B  2E4D               	goto	u6881
  8390  1E4C  2E4E               	goto	u6880
  8391  1E4D                     u6881:
  8392  1E4D  2E39               	goto	l4147
  8393  1E4E                     u6880:
  8394  1E4E                     l896:
  8395  1E4E  1825               	btfsc	___xxtofl@exp,0
  8396  1E4F  2E51               	goto	u6891
  8397  1E50  2E52               	goto	u6890
  8398  1E51                     u6891:
  8399  1E51  2E5A               	goto	l897
  8400  1E52                     u6890:
  8401  1E52                     l4153:
  8402  1E52  30FF               	movlw	255
  8403  1E53  05A6               	andwf	___xxtofl@arg,f
  8404  1E54  30FF               	movlw	255
  8405  1E55  05A7               	andwf	___xxtofl@arg+1,f
  8406  1E56  307F               	movlw	127
  8407  1E57  05A8               	andwf	___xxtofl@arg+2,f
  8408  1E58  30FF               	movlw	255
  8409  1E59  05A9               	andwf	___xxtofl@arg+3,f
  8410  1E5A                     l897:
  8411  1E5A  1003               	clrc
  8412  1E5B  0CA5               	rrf	___xxtofl@exp,f
  8413  1E5C                     l4155:
  8414  1E5C  0825               	movf	___xxtofl@exp,w
  8415  1E5D  00A0               	movwf	??___xxtofl
  8416  1E5E  01A1               	clrf	??___xxtofl+1
  8417  1E5F  01A2               	clrf	??___xxtofl+2
  8418  1E60  01A3               	clrf	??___xxtofl+3
  8419  1E61  3018               	movlw	24
  8420  1E62                     u6905:
  8421  1E62  1003               	clrc
  8422  1E63  0DA0               	rlf	??___xxtofl,f
  8423  1E64  0DA1               	rlf	??___xxtofl+1,f
  8424  1E65  0DA2               	rlf	??___xxtofl+2,f
  8425  1E66  0DA3               	rlf	??___xxtofl+3,f
  8426  1E67                     u6900:
  8427  1E67  3EFF               	addlw	-1
  8428  1E68  1D03               	skipz
  8429  1E69  2E62               	goto	u6905
  8430  1E6A  0820               	movf	??___xxtofl,w
  8431  1E6B  04A6               	iorwf	___xxtofl@arg,f
  8432  1E6C  0821               	movf	??___xxtofl+1,w
  8433  1E6D  04A7               	iorwf	___xxtofl@arg+1,f
  8434  1E6E  0822               	movf	??___xxtofl+2,w
  8435  1E6F  04A8               	iorwf	___xxtofl@arg+2,f
  8436  1E70  0823               	movf	??___xxtofl+3,w
  8437  1E71  04A9               	iorwf	___xxtofl@arg+3,f
  8438  1E72                     l4157:
  8439  1E72  0824               	movf	___xxtofl@sign,w
  8440  1E73  1903               	btfsc	3,2
  8441  1E74  2E76               	goto	u6911
  8442  1E75  2E77               	goto	u6910
  8443  1E76                     u6911:
  8444  1E76  2E7C               	goto	l4163
  8445  1E77                     u6910:
  8446  1E77                     l4159:
  8447  1E77  1FF6               	btfss	___xxtofl@val+3,7
  8448  1E78  2E7A               	goto	u6921
  8449  1E79  2E7B               	goto	u6920
  8450  1E7A                     u6921:
  8451  1E7A  2E7C               	goto	l4163
  8452  1E7B                     u6920:
  8453  1E7B                     l4161:
  8454  1E7B  17A9               	bsf	___xxtofl@arg+3,7
  8455  1E7C                     l4163:
  8456  1E7C  0829               	movf	___xxtofl@arg+3,w
  8457  1E7D  00F6               	movwf	?___xxtofl+3
  8458  1E7E  0828               	movf	___xxtofl@arg+2,w
  8459  1E7F  00F5               	movwf	?___xxtofl+2
  8460  1E80  0827               	movf	___xxtofl@arg+1,w
  8461  1E81  00F4               	movwf	?___xxtofl+1
  8462  1E82  0826               	movf	___xxtofl@arg,w
  8463  1E83  00F3               	movwf	?___xxtofl
  8464  1E84                     l885:
  8465  1E84  0008               	return
  8466  1E85                     __end_of___xxtofl:
  8467                           
  8468                           	psect	text29
  8469  093C                     __ptext29:	
  8470 ;; *************** function ___flmul *****************
  8471 ;; Defined at:
  8472 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;  b               4   11[BANK0 ] unsigned char 
  8475 ;;  a               4   15[BANK0 ] unsigned char 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;  prod            4   31[BANK0 ] struct .
  8478 ;;  grs             4   25[BANK0 ] unsigned long 
  8479 ;;  temp            2   35[BANK0 ] struct .
  8480 ;;  bexp            1   30[BANK0 ] unsigned char 
  8481 ;;  aexp            1   29[BANK0 ] unsigned char 
  8482 ;;  sign            1   24[BANK0 ] unsigned char 
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  4   11[BANK0 ] unsigned char 
  8485 ;; Registers used:
  8486 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8492 ;;      Params:         0       8       0       0       0
  8493 ;;      Locals:         0      13       0       0       0
  8494 ;;      Temps:          0       5       0       0       0
  8495 ;;      Totals:         0      26       0       0       0
  8496 ;;Total ram usage:       26 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; Hardware stack levels required when called:    2
  8499 ;; This function calls:
  8500 ;;		__Umul8_16
  8501 ;; This function is called by:
  8502 ;;		_conversor
  8503 ;;		_conversor2
  8504 ;;		_fround
  8505 ;;		_scale
  8506 ;;		_sprintf
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           
  8511                           ;psect for function ___flmul
  8512  093C                     ___flmul:
  8513  093C                     l2697:	
  8514                           ;incstack = 0
  8515                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8516                           
  8517  093C  1283               	bcf	3,5	;RP0=0, select bank0
  8518  093D  1303               	bcf	3,6	;RP1=0, select bank0
  8519  093E  082E               	movf	___flmul@b+3,w
  8520  093F  3980               	andlw	128
  8521  0940  00B3               	movwf	??___flmul
  8522  0941  0833               	movf	??___flmul,w
  8523  0942  00B8               	movwf	___flmul@sign
  8524  0943                     l2699:
  8525  0943  082E               	movf	___flmul@b+3,w
  8526  0944  00B3               	movwf	??___flmul
  8527  0945  0733               	addwf	??___flmul,w
  8528  0946  00B4               	movwf	??___flmul+1
  8529  0947  0834               	movf	??___flmul+1,w
  8530  0948  00BE               	movwf	___flmul@bexp
  8531  0949                     l2701:
  8532  0949  1FAD               	btfss	___flmul@b+2,7
  8533  094A  294C               	goto	u3661
  8534  094B  294D               	goto	u3660
  8535  094C                     u3661:
  8536  094C  294E               	goto	l2705
  8537  094D                     u3660:
  8538  094D                     l2703:
  8539  094D  143E               	bsf	___flmul@bexp,0
  8540  094E                     l2705:
  8541  094E  083E               	movf	___flmul@bexp,w
  8542  094F  1903               	btfsc	3,2
  8543  0950  2952               	goto	u3671
  8544  0951  2953               	goto	u3670
  8545  0952                     u3671:
  8546  0952  2962               	goto	l2713
  8547  0953                     u3670:
  8548  0953                     l2707:
  8549  0953  0A3E               	incf	___flmul@bexp,w
  8550  0954  1D03               	btfss	3,2
  8551  0955  2957               	goto	u3681
  8552  0956  2958               	goto	u3680
  8553  0957                     u3681:
  8554  0957  2960               	goto	l2711
  8555  0958                     u3680:
  8556  0958                     l2709:
  8557  0958  3000               	movlw	0
  8558  0959  00AE               	movwf	___flmul@b+3
  8559  095A  3000               	movlw	0
  8560  095B  00AD               	movwf	___flmul@b+2
  8561  095C  3000               	movlw	0
  8562  095D  00AC               	movwf	___flmul@b+1
  8563  095E  3000               	movlw	0
  8564  095F  00AB               	movwf	___flmul@b
  8565  0960                     l2711:
  8566  0960  17AD               	bsf	___flmul@b+2,7
  8567  0961  296A               	goto	l2715
  8568  0962                     l2713:
  8569  0962  3000               	movlw	0
  8570  0963  00AE               	movwf	___flmul@b+3
  8571  0964  3000               	movlw	0
  8572  0965  00AD               	movwf	___flmul@b+2
  8573  0966  3000               	movlw	0
  8574  0967  00AC               	movwf	___flmul@b+1
  8575  0968  3000               	movlw	0
  8576  0969  00AB               	movwf	___flmul@b
  8577  096A                     l2715:
  8578  096A  0832               	movf	___flmul@a+3,w
  8579  096B  3980               	andlw	128
  8580  096C  00B3               	movwf	??___flmul
  8581  096D  0833               	movf	??___flmul,w
  8582  096E  06B8               	xorwf	___flmul@sign,f
  8583  096F                     l2717:
  8584  096F  0832               	movf	___flmul@a+3,w
  8585  0970  00B3               	movwf	??___flmul
  8586  0971  0733               	addwf	??___flmul,w
  8587  0972  00B4               	movwf	??___flmul+1
  8588  0973  0834               	movf	??___flmul+1,w
  8589  0974  00BD               	movwf	___flmul@aexp
  8590  0975                     l2719:
  8591  0975  1FB1               	btfss	___flmul@a+2,7
  8592  0976  2978               	goto	u3691
  8593  0977  2979               	goto	u3690
  8594  0978                     u3691:
  8595  0978  297A               	goto	l2723
  8596  0979                     u3690:
  8597  0979                     l2721:
  8598  0979  143D               	bsf	___flmul@aexp,0
  8599  097A                     l2723:
  8600  097A  083D               	movf	___flmul@aexp,w
  8601  097B  1903               	btfsc	3,2
  8602  097C  297E               	goto	u3701
  8603  097D  297F               	goto	u3700
  8604  097E                     u3701:
  8605  097E  298E               	goto	l2731
  8606  097F                     u3700:
  8607  097F                     l2725:
  8608  097F  0A3D               	incf	___flmul@aexp,w
  8609  0980  1D03               	btfss	3,2
  8610  0981  2983               	goto	u3711
  8611  0982  2984               	goto	u3710
  8612  0983                     u3711:
  8613  0983  298C               	goto	l2729
  8614  0984                     u3710:
  8615  0984                     l2727:
  8616  0984  3000               	movlw	0
  8617  0985  00B2               	movwf	___flmul@a+3
  8618  0986  3000               	movlw	0
  8619  0987  00B1               	movwf	___flmul@a+2
  8620  0988  3000               	movlw	0
  8621  0989  00B0               	movwf	___flmul@a+1
  8622  098A  3000               	movlw	0
  8623  098B  00AF               	movwf	___flmul@a
  8624  098C                     l2729:
  8625  098C  17B1               	bsf	___flmul@a+2,7
  8626  098D  2996               	goto	l2733
  8627  098E                     l2731:
  8628  098E  3000               	movlw	0
  8629  098F  00B2               	movwf	___flmul@a+3
  8630  0990  3000               	movlw	0
  8631  0991  00B1               	movwf	___flmul@a+2
  8632  0992  3000               	movlw	0
  8633  0993  00B0               	movwf	___flmul@a+1
  8634  0994  3000               	movlw	0
  8635  0995  00AF               	movwf	___flmul@a
  8636  0996                     l2733:
  8637  0996  083D               	movf	___flmul@aexp,w
  8638  0997  1903               	btfsc	3,2
  8639  0998  299A               	goto	u3721
  8640  0999  299B               	goto	u3720
  8641  099A                     u3721:
  8642  099A  29A0               	goto	l2737
  8643  099B                     u3720:
  8644  099B                     l2735:
  8645  099B  083E               	movf	___flmul@bexp,w
  8646  099C  1D03               	btfss	3,2
  8647  099D  299F               	goto	u3731
  8648  099E  29A0               	goto	u3730
  8649  099F                     u3731:
  8650  099F  29A9               	goto	l2741
  8651  09A0                     u3730:
  8652  09A0                     l2737:
  8653  09A0  3000               	movlw	0
  8654  09A1  00AE               	movwf	?___flmul+3
  8655  09A2  3000               	movlw	0
  8656  09A3  00AD               	movwf	?___flmul+2
  8657  09A4  3000               	movlw	0
  8658  09A5  00AC               	movwf	?___flmul+1
  8659  09A6  3000               	movlw	0
  8660  09A7  00AB               	movwf	?___flmul
  8661  09A8  2C9C               	goto	l839
  8662  09A9                     l2741:
  8663  09A9  082B               	movf	___flmul@b,w
  8664  09AA  00B3               	movwf	??___flmul
  8665  09AB  0833               	movf	??___flmul,w
  8666  09AC  00F3               	movwf	__Umul8_16@multiplicand
  8667  09AD  0831               	movf	___flmul@a+2,w
  8668  09AE  160A  158A  2137  120A  158A  	fcall	__Umul8_16
  8669  09B3  0874               	movf	?__Umul8_16+1,w
  8670  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  8671  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  8672  09B6  00C4               	movwf	___flmul@temp+1
  8673  09B7  0873               	movf	?__Umul8_16,w
  8674  09B8  00C3               	movwf	___flmul@temp
  8675  09B9                     l2743:
  8676  09B9  0843               	movf	___flmul@temp,w
  8677  09BA  00B3               	movwf	??___flmul
  8678  09BB  01B4               	clrf	??___flmul+1
  8679  09BC  01B5               	clrf	??___flmul+2
  8680  09BD  01B6               	clrf	??___flmul+3
  8681  09BE  0836               	movf	??___flmul+3,w
  8682  09BF  00BC               	movwf	___flmul@grs+3
  8683  09C0  0835               	movf	??___flmul+2,w
  8684  09C1  00BB               	movwf	___flmul@grs+2
  8685  09C2  0834               	movf	??___flmul+1,w
  8686  09C3  00BA               	movwf	___flmul@grs+1
  8687  09C4  0833               	movf	??___flmul,w
  8688  09C5  00B9               	movwf	___flmul@grs
  8689  09C6                     l2745:
  8690  09C6  0844               	movf	___flmul@temp+1,w
  8691  09C7  00B3               	movwf	??___flmul
  8692  09C8  01B4               	clrf	??___flmul+1
  8693  09C9  01B5               	clrf	??___flmul+2
  8694  09CA  01B6               	clrf	??___flmul+3
  8695  09CB  0836               	movf	??___flmul+3,w
  8696  09CC  00C2               	movwf	___flmul@prod+3
  8697  09CD  0835               	movf	??___flmul+2,w
  8698  09CE  00C1               	movwf	___flmul@prod+2
  8699  09CF  0834               	movf	??___flmul+1,w
  8700  09D0  00C0               	movwf	___flmul@prod+1
  8701  09D1  0833               	movf	??___flmul,w
  8702  09D2  00BF               	movwf	___flmul@prod
  8703  09D3  082C               	movf	___flmul@b+1,w
  8704  09D4  00B3               	movwf	??___flmul
  8705  09D5  0833               	movf	??___flmul,w
  8706  09D6  00F3               	movwf	__Umul8_16@multiplicand
  8707  09D7  0830               	movf	___flmul@a+1,w
  8708  09D8  160A  158A  2137  120A  158A  	fcall	__Umul8_16
  8709  09DD  0874               	movf	?__Umul8_16+1,w
  8710  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  8711  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  8712  09E0  00C4               	movwf	___flmul@temp+1
  8713  09E1  0873               	movf	?__Umul8_16,w
  8714  09E2  00C3               	movwf	___flmul@temp
  8715  09E3                     l2747:
  8716  09E3  0843               	movf	___flmul@temp,w
  8717  09E4  00B3               	movwf	??___flmul
  8718  09E5  01B4               	clrf	??___flmul+1
  8719  09E6  01B5               	clrf	??___flmul+2
  8720  09E7  01B6               	clrf	??___flmul+3
  8721  09E8  0833               	movf	??___flmul,w
  8722  09E9  07B9               	addwf	___flmul@grs,f
  8723  09EA  0834               	movf	??___flmul+1,w
  8724  09EB  1103               	clrz
  8725  09EC  1803               	skipnc
  8726  09ED  3E01               	addlw	1
  8727  09EE  1903               	skipnz
  8728  09EF  29F1               	goto	u3741
  8729  09F0  07BA               	addwf	___flmul@grs+1,f
  8730  09F1                     u3741:
  8731  09F1  0835               	movf	??___flmul+2,w
  8732  09F2  1103               	clrz
  8733  09F3  1803               	skipnc
  8734  09F4  3E01               	addlw	1
  8735  09F5  1903               	skipnz
  8736  09F6  29F8               	goto	u3742
  8737  09F7  07BB               	addwf	___flmul@grs+2,f
  8738  09F8                     u3742:
  8739  09F8  0836               	movf	??___flmul+3,w
  8740  09F9  1103               	clrz
  8741  09FA  1803               	skipnc
  8742  09FB  3E01               	addlw	1
  8743  09FC  1903               	skipnz
  8744  09FD  29FF               	goto	u3743
  8745  09FE  07BC               	addwf	___flmul@grs+3,f
  8746  09FF                     u3743:
  8747  09FF                     l2749:
  8748  09FF  0844               	movf	___flmul@temp+1,w
  8749  0A00  00B3               	movwf	??___flmul
  8750  0A01  01B4               	clrf	??___flmul+1
  8751  0A02  01B5               	clrf	??___flmul+2
  8752  0A03  01B6               	clrf	??___flmul+3
  8753  0A04  0833               	movf	??___flmul,w
  8754  0A05  07BF               	addwf	___flmul@prod,f
  8755  0A06  0834               	movf	??___flmul+1,w
  8756  0A07  1103               	clrz
  8757  0A08  1803               	skipnc
  8758  0A09  3E01               	addlw	1
  8759  0A0A  1903               	skipnz
  8760  0A0B  2A0D               	goto	u3751
  8761  0A0C  07C0               	addwf	___flmul@prod+1,f
  8762  0A0D                     u3751:
  8763  0A0D  0835               	movf	??___flmul+2,w
  8764  0A0E  1103               	clrz
  8765  0A0F  1803               	skipnc
  8766  0A10  3E01               	addlw	1
  8767  0A11  1903               	skipnz
  8768  0A12  2A14               	goto	u3752
  8769  0A13  07C1               	addwf	___flmul@prod+2,f
  8770  0A14                     u3752:
  8771  0A14  0836               	movf	??___flmul+3,w
  8772  0A15  1103               	clrz
  8773  0A16  1803               	skipnc
  8774  0A17  3E01               	addlw	1
  8775  0A18  1903               	skipnz
  8776  0A19  2A1B               	goto	u3753
  8777  0A1A  07C2               	addwf	___flmul@prod+3,f
  8778  0A1B                     u3753:
  8779  0A1B  082D               	movf	___flmul@b+2,w
  8780  0A1C  00B3               	movwf	??___flmul
  8781  0A1D  0833               	movf	??___flmul,w
  8782  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  8783  0A1F  082F               	movf	___flmul@a,w
  8784  0A20  160A  158A  2137  120A  158A  	fcall	__Umul8_16
  8785  0A25  0874               	movf	?__Umul8_16+1,w
  8786  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8787  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8788  0A28  00C4               	movwf	___flmul@temp+1
  8789  0A29  0873               	movf	?__Umul8_16,w
  8790  0A2A  00C3               	movwf	___flmul@temp
  8791  0A2B                     l2751:
  8792  0A2B  0843               	movf	___flmul@temp,w
  8793  0A2C  00B3               	movwf	??___flmul
  8794  0A2D  01B4               	clrf	??___flmul+1
  8795  0A2E  01B5               	clrf	??___flmul+2
  8796  0A2F  01B6               	clrf	??___flmul+3
  8797  0A30  0833               	movf	??___flmul,w
  8798  0A31  07B9               	addwf	___flmul@grs,f
  8799  0A32  0834               	movf	??___flmul+1,w
  8800  0A33  1103               	clrz
  8801  0A34  1803               	skipnc
  8802  0A35  3E01               	addlw	1
  8803  0A36  1903               	skipnz
  8804  0A37  2A39               	goto	u3761
  8805  0A38  07BA               	addwf	___flmul@grs+1,f
  8806  0A39                     u3761:
  8807  0A39  0835               	movf	??___flmul+2,w
  8808  0A3A  1103               	clrz
  8809  0A3B  1803               	skipnc
  8810  0A3C  3E01               	addlw	1
  8811  0A3D  1903               	skipnz
  8812  0A3E  2A40               	goto	u3762
  8813  0A3F  07BB               	addwf	___flmul@grs+2,f
  8814  0A40                     u3762:
  8815  0A40  0836               	movf	??___flmul+3,w
  8816  0A41  1103               	clrz
  8817  0A42  1803               	skipnc
  8818  0A43  3E01               	addlw	1
  8819  0A44  1903               	skipnz
  8820  0A45  2A47               	goto	u3763
  8821  0A46  07BC               	addwf	___flmul@grs+3,f
  8822  0A47                     u3763:
  8823  0A47                     l2753:
  8824  0A47  0844               	movf	___flmul@temp+1,w
  8825  0A48  00B3               	movwf	??___flmul
  8826  0A49  01B4               	clrf	??___flmul+1
  8827  0A4A  01B5               	clrf	??___flmul+2
  8828  0A4B  01B6               	clrf	??___flmul+3
  8829  0A4C  0833               	movf	??___flmul,w
  8830  0A4D  07BF               	addwf	___flmul@prod,f
  8831  0A4E  0834               	movf	??___flmul+1,w
  8832  0A4F  1103               	clrz
  8833  0A50  1803               	skipnc
  8834  0A51  3E01               	addlw	1
  8835  0A52  1903               	skipnz
  8836  0A53  2A55               	goto	u3771
  8837  0A54  07C0               	addwf	___flmul@prod+1,f
  8838  0A55                     u3771:
  8839  0A55  0835               	movf	??___flmul+2,w
  8840  0A56  1103               	clrz
  8841  0A57  1803               	skipnc
  8842  0A58  3E01               	addlw	1
  8843  0A59  1903               	skipnz
  8844  0A5A  2A5C               	goto	u3772
  8845  0A5B  07C1               	addwf	___flmul@prod+2,f
  8846  0A5C                     u3772:
  8847  0A5C  0836               	movf	??___flmul+3,w
  8848  0A5D  1103               	clrz
  8849  0A5E  1803               	skipnc
  8850  0A5F  3E01               	addlw	1
  8851  0A60  1903               	skipnz
  8852  0A61  2A63               	goto	u3773
  8853  0A62  07C2               	addwf	___flmul@prod+3,f
  8854  0A63                     u3773:
  8855  0A63                     l2755:
  8856  0A63  3008               	movlw	8
  8857  0A64  00B3               	movwf	??___flmul
  8858  0A65                     u3785:
  8859  0A65  1003               	clrc
  8860  0A66  0DB9               	rlf	___flmul@grs,f
  8861  0A67  0DBA               	rlf	___flmul@grs+1,f
  8862  0A68  0DBB               	rlf	___flmul@grs+2,f
  8863  0A69  0DBC               	rlf	___flmul@grs+3,f
  8864  0A6A  0BB3               	decfsz	??___flmul,f
  8865  0A6B  2A65               	goto	u3785
  8866  0A6C                     l2757:
  8867  0A6C  082C               	movf	___flmul@b+1,w
  8868  0A6D  00B3               	movwf	??___flmul
  8869  0A6E  0833               	movf	??___flmul,w
  8870  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  8871  0A70  082F               	movf	___flmul@a,w
  8872  0A71  160A  158A  2137  120A  158A  	fcall	__Umul8_16
  8873  0A76  0874               	movf	?__Umul8_16+1,w
  8874  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8875  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8876  0A79  00C4               	movwf	___flmul@temp+1
  8877  0A7A  0873               	movf	?__Umul8_16,w
  8878  0A7B  00C3               	movwf	___flmul@temp
  8879  0A7C                     l2759:
  8880  0A7C  0843               	movf	___flmul@temp,w
  8881  0A7D  00B3               	movwf	??___flmul
  8882  0A7E  0844               	movf	___flmul@temp+1,w
  8883  0A7F  00B4               	movwf	??___flmul+1
  8884  0A80  01B5               	clrf	??___flmul+2
  8885  0A81  01B6               	clrf	??___flmul+3
  8886  0A82  0833               	movf	??___flmul,w
  8887  0A83  07B9               	addwf	___flmul@grs,f
  8888  0A84  0834               	movf	??___flmul+1,w
  8889  0A85  1103               	clrz
  8890  0A86  1803               	skipnc
  8891  0A87  3E01               	addlw	1
  8892  0A88  1903               	skipnz
  8893  0A89  2A8B               	goto	u3791
  8894  0A8A  07BA               	addwf	___flmul@grs+1,f
  8895  0A8B                     u3791:
  8896  0A8B  0835               	movf	??___flmul+2,w
  8897  0A8C  1103               	clrz
  8898  0A8D  1803               	skipnc
  8899  0A8E  3E01               	addlw	1
  8900  0A8F  1903               	skipnz
  8901  0A90  2A92               	goto	u3792
  8902  0A91  07BB               	addwf	___flmul@grs+2,f
  8903  0A92                     u3792:
  8904  0A92  0836               	movf	??___flmul+3,w
  8905  0A93  1103               	clrz
  8906  0A94  1803               	skipnc
  8907  0A95  3E01               	addlw	1
  8908  0A96  1903               	skipnz
  8909  0A97  2A99               	goto	u3793
  8910  0A98  07BC               	addwf	___flmul@grs+3,f
  8911  0A99                     u3793:
  8912  0A99                     l2761:
  8913  0A99  082B               	movf	___flmul@b,w
  8914  0A9A  00B3               	movwf	??___flmul
  8915  0A9B  0833               	movf	??___flmul,w
  8916  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  8917  0A9D  0830               	movf	___flmul@a+1,w
  8918  0A9E  160A  158A  2137  120A  158A  	fcall	__Umul8_16
  8919  0AA3  0874               	movf	?__Umul8_16+1,w
  8920  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8921  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8922  0AA6  00C4               	movwf	___flmul@temp+1
  8923  0AA7  0873               	movf	?__Umul8_16,w
  8924  0AA8  00C3               	movwf	___flmul@temp
  8925  0AA9                     l2763:
  8926  0AA9  0843               	movf	___flmul@temp,w
  8927  0AAA  00B3               	movwf	??___flmul
  8928  0AAB  0844               	movf	___flmul@temp+1,w
  8929  0AAC  00B4               	movwf	??___flmul+1
  8930  0AAD  01B5               	clrf	??___flmul+2
  8931  0AAE  01B6               	clrf	??___flmul+3
  8932  0AAF  0833               	movf	??___flmul,w
  8933  0AB0  07B9               	addwf	___flmul@grs,f
  8934  0AB1  0834               	movf	??___flmul+1,w
  8935  0AB2  1103               	clrz
  8936  0AB3  1803               	skipnc
  8937  0AB4  3E01               	addlw	1
  8938  0AB5  1903               	skipnz
  8939  0AB6  2AB8               	goto	u3801
  8940  0AB7  07BA               	addwf	___flmul@grs+1,f
  8941  0AB8                     u3801:
  8942  0AB8  0835               	movf	??___flmul+2,w
  8943  0AB9  1103               	clrz
  8944  0ABA  1803               	skipnc
  8945  0ABB  3E01               	addlw	1
  8946  0ABC  1903               	skipnz
  8947  0ABD  2ABF               	goto	u3802
  8948  0ABE  07BB               	addwf	___flmul@grs+2,f
  8949  0ABF                     u3802:
  8950  0ABF  0836               	movf	??___flmul+3,w
  8951  0AC0  1103               	clrz
  8952  0AC1  1803               	skipnc
  8953  0AC2  3E01               	addlw	1
  8954  0AC3  1903               	skipnz
  8955  0AC4  2AC6               	goto	u3803
  8956  0AC5  07BC               	addwf	___flmul@grs+3,f
  8957  0AC6                     u3803:
  8958  0AC6                     l2765:
  8959  0AC6  3008               	movlw	8
  8960  0AC7  00B3               	movwf	??___flmul
  8961  0AC8                     u3815:
  8962  0AC8  1003               	clrc
  8963  0AC9  0DB9               	rlf	___flmul@grs,f
  8964  0ACA  0DBA               	rlf	___flmul@grs+1,f
  8965  0ACB  0DBB               	rlf	___flmul@grs+2,f
  8966  0ACC  0DBC               	rlf	___flmul@grs+3,f
  8967  0ACD  0BB3               	decfsz	??___flmul,f
  8968  0ACE  2AC8               	goto	u3815
  8969  0ACF  082B               	movf	___flmul@b,w
  8970  0AD0  00B3               	movwf	??___flmul
  8971  0AD1  0833               	movf	??___flmul,w
  8972  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8973  0AD3  082F               	movf	___flmul@a,w
  8974  0AD4  160A  158A  2137  120A  158A  	fcall	__Umul8_16
  8975  0AD9  0874               	movf	?__Umul8_16+1,w
  8976  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8977  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8978  0ADC  00C4               	movwf	___flmul@temp+1
  8979  0ADD  0873               	movf	?__Umul8_16,w
  8980  0ADE  00C3               	movwf	___flmul@temp
  8981  0ADF                     l2767:
  8982  0ADF  0843               	movf	___flmul@temp,w
  8983  0AE0  00B3               	movwf	??___flmul
  8984  0AE1  0844               	movf	___flmul@temp+1,w
  8985  0AE2  00B4               	movwf	??___flmul+1
  8986  0AE3  01B5               	clrf	??___flmul+2
  8987  0AE4  01B6               	clrf	??___flmul+3
  8988  0AE5  0833               	movf	??___flmul,w
  8989  0AE6  07B9               	addwf	___flmul@grs,f
  8990  0AE7  0834               	movf	??___flmul+1,w
  8991  0AE8  1103               	clrz
  8992  0AE9  1803               	skipnc
  8993  0AEA  3E01               	addlw	1
  8994  0AEB  1903               	skipnz
  8995  0AEC  2AEE               	goto	u3821
  8996  0AED  07BA               	addwf	___flmul@grs+1,f
  8997  0AEE                     u3821:
  8998  0AEE  0835               	movf	??___flmul+2,w
  8999  0AEF  1103               	clrz
  9000  0AF0  1803               	skipnc
  9001  0AF1  3E01               	addlw	1
  9002  0AF2  1903               	skipnz
  9003  0AF3  2AF5               	goto	u3822
  9004  0AF4  07BB               	addwf	___flmul@grs+2,f
  9005  0AF5                     u3822:
  9006  0AF5  0836               	movf	??___flmul+3,w
  9007  0AF6  1103               	clrz
  9008  0AF7  1803               	skipnc
  9009  0AF8  3E01               	addlw	1
  9010  0AF9  1903               	skipnz
  9011  0AFA  2AFC               	goto	u3823
  9012  0AFB  07BC               	addwf	___flmul@grs+3,f
  9013  0AFC                     u3823:
  9014  0AFC                     l2769:
  9015  0AFC  082C               	movf	___flmul@b+1,w
  9016  0AFD  00B3               	movwf	??___flmul
  9017  0AFE  0833               	movf	??___flmul,w
  9018  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  9019  0B00  0831               	movf	___flmul@a+2,w
  9020  0B01  160A  158A  2137  120A  158A  	fcall	__Umul8_16
  9021  0B06  0874               	movf	?__Umul8_16+1,w
  9022  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  9023  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  9024  0B09  00C4               	movwf	___flmul@temp+1
  9025  0B0A  0873               	movf	?__Umul8_16,w
  9026  0B0B  00C3               	movwf	___flmul@temp
  9027  0B0C  0843               	movf	___flmul@temp,w
  9028  0B0D  00B3               	movwf	??___flmul
  9029  0B0E  0844               	movf	___flmul@temp+1,w
  9030  0B0F  00B4               	movwf	??___flmul+1
  9031  0B10  01B5               	clrf	??___flmul+2
  9032  0B11  01B6               	clrf	??___flmul+3
  9033  0B12  0833               	movf	??___flmul,w
  9034  0B13  07BF               	addwf	___flmul@prod,f
  9035  0B14  0834               	movf	??___flmul+1,w
  9036  0B15  1103               	clrz
  9037  0B16  1803               	skipnc
  9038  0B17  3E01               	addlw	1
  9039  0B18  1903               	skipnz
  9040  0B19  2B1B               	goto	u3831
  9041  0B1A  07C0               	addwf	___flmul@prod+1,f
  9042  0B1B                     u3831:
  9043  0B1B  0835               	movf	??___flmul+2,w
  9044  0B1C  1103               	clrz
  9045  0B1D  1803               	skipnc
  9046  0B1E  3E01               	addlw	1
  9047  0B1F  1903               	skipnz
  9048  0B20  2B22               	goto	u3832
  9049  0B21  07C1               	addwf	___flmul@prod+2,f
  9050  0B22                     u3832:
  9051  0B22  0836               	movf	??___flmul+3,w
  9052  0B23  1103               	clrz
  9053  0B24  1803               	skipnc
  9054  0B25  3E01               	addlw	1
  9055  0B26  1903               	skipnz
  9056  0B27  2B29               	goto	u3833
  9057  0B28  07C2               	addwf	___flmul@prod+3,f
  9058  0B29                     u3833:
  9059  0B29                     l2771:
  9060  0B29  082D               	movf	___flmul@b+2,w
  9061  0B2A  00B3               	movwf	??___flmul
  9062  0B2B  0833               	movf	??___flmul,w
  9063  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  9064  0B2D  0830               	movf	___flmul@a+1,w
  9065  0B2E  160A  158A  2137  120A  158A  	fcall	__Umul8_16
  9066  0B33  0874               	movf	?__Umul8_16+1,w
  9067  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  9068  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  9069  0B36  00C4               	movwf	___flmul@temp+1
  9070  0B37  0873               	movf	?__Umul8_16,w
  9071  0B38  00C3               	movwf	___flmul@temp
  9072  0B39                     l2773:
  9073  0B39  0843               	movf	___flmul@temp,w
  9074  0B3A  00B3               	movwf	??___flmul
  9075  0B3B  0844               	movf	___flmul@temp+1,w
  9076  0B3C  00B4               	movwf	??___flmul+1
  9077  0B3D  01B5               	clrf	??___flmul+2
  9078  0B3E  01B6               	clrf	??___flmul+3
  9079  0B3F  0833               	movf	??___flmul,w
  9080  0B40  07BF               	addwf	___flmul@prod,f
  9081  0B41  0834               	movf	??___flmul+1,w
  9082  0B42  1103               	clrz
  9083  0B43  1803               	skipnc
  9084  0B44  3E01               	addlw	1
  9085  0B45  1903               	skipnz
  9086  0B46  2B48               	goto	u3841
  9087  0B47  07C0               	addwf	___flmul@prod+1,f
  9088  0B48                     u3841:
  9089  0B48  0835               	movf	??___flmul+2,w
  9090  0B49  1103               	clrz
  9091  0B4A  1803               	skipnc
  9092  0B4B  3E01               	addlw	1
  9093  0B4C  1903               	skipnz
  9094  0B4D  2B4F               	goto	u3842
  9095  0B4E  07C1               	addwf	___flmul@prod+2,f
  9096  0B4F                     u3842:
  9097  0B4F  0836               	movf	??___flmul+3,w
  9098  0B50  1103               	clrz
  9099  0B51  1803               	skipnc
  9100  0B52  3E01               	addlw	1
  9101  0B53  1903               	skipnz
  9102  0B54  2B56               	goto	u3843
  9103  0B55  07C2               	addwf	___flmul@prod+3,f
  9104  0B56                     u3843:
  9105  0B56  082D               	movf	___flmul@b+2,w
  9106  0B57  00B3               	movwf	??___flmul
  9107  0B58  0833               	movf	??___flmul,w
  9108  0B59  00F3               	movwf	__Umul8_16@multiplicand
  9109  0B5A  0831               	movf	___flmul@a+2,w
  9110  0B5B  160A  158A  2137  120A  158A  	fcall	__Umul8_16
  9111  0B60  0874               	movf	?__Umul8_16+1,w
  9112  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  9113  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  9114  0B63  00C4               	movwf	___flmul@temp+1
  9115  0B64  0873               	movf	?__Umul8_16,w
  9116  0B65  00C3               	movwf	___flmul@temp
  9117  0B66                     l2775:
  9118  0B66  0843               	movf	___flmul@temp,w
  9119  0B67  00B3               	movwf	??___flmul
  9120  0B68  0844               	movf	___flmul@temp+1,w
  9121  0B69  00B4               	movwf	??___flmul+1
  9122  0B6A  01B5               	clrf	??___flmul+2
  9123  0B6B  01B6               	clrf	??___flmul+3
  9124  0B6C  3008               	movlw	8
  9125  0B6D                     u3855:
  9126  0B6D  1003               	clrc
  9127  0B6E  0DB3               	rlf	??___flmul,f
  9128  0B6F  0DB4               	rlf	??___flmul+1,f
  9129  0B70  0DB5               	rlf	??___flmul+2,f
  9130  0B71  0DB6               	rlf	??___flmul+3,f
  9131  0B72                     u3850:
  9132  0B72  3EFF               	addlw	-1
  9133  0B73  1D03               	skipz
  9134  0B74  2B6D               	goto	u3855
  9135  0B75  0833               	movf	??___flmul,w
  9136  0B76  07BF               	addwf	___flmul@prod,f
  9137  0B77  0834               	movf	??___flmul+1,w
  9138  0B78  1103               	clrz
  9139  0B79  1803               	skipnc
  9140  0B7A  3E01               	addlw	1
  9141  0B7B  1903               	skipnz
  9142  0B7C  2B7E               	goto	u3861
  9143  0B7D  07C0               	addwf	___flmul@prod+1,f
  9144  0B7E                     u3861:
  9145  0B7E  0835               	movf	??___flmul+2,w
  9146  0B7F  1103               	clrz
  9147  0B80  1803               	skipnc
  9148  0B81  3E01               	addlw	1
  9149  0B82  1903               	skipnz
  9150  0B83  2B85               	goto	u3862
  9151  0B84  07C1               	addwf	___flmul@prod+2,f
  9152  0B85                     u3862:
  9153  0B85  0836               	movf	??___flmul+3,w
  9154  0B86  1103               	clrz
  9155  0B87  1803               	skipnc
  9156  0B88  3E01               	addlw	1
  9157  0B89  1903               	skipnz
  9158  0B8A  2B8C               	goto	u3863
  9159  0B8B  07C2               	addwf	___flmul@prod+3,f
  9160  0B8C                     u3863:
  9161  0B8C                     l2777:
  9162  0B8C  0839               	movf	___flmul@grs,w
  9163  0B8D  00B3               	movwf	??___flmul
  9164  0B8E  083A               	movf	___flmul@grs+1,w
  9165  0B8F  00B4               	movwf	??___flmul+1
  9166  0B90  083B               	movf	___flmul@grs+2,w
  9167  0B91  00B5               	movwf	??___flmul+2
  9168  0B92  083C               	movf	___flmul@grs+3,w
  9169  0B93  00B6               	movwf	??___flmul+3
  9170  0B94  3018               	movlw	24
  9171  0B95                     u3875:
  9172  0B95  1003               	clrc
  9173  0B96  0CB6               	rrf	??___flmul+3,f
  9174  0B97  0CB5               	rrf	??___flmul+2,f
  9175  0B98  0CB4               	rrf	??___flmul+1,f
  9176  0B99  0CB3               	rrf	??___flmul,f
  9177  0B9A                     u3870:
  9178  0B9A  3EFF               	addlw	-1
  9179  0B9B  1D03               	skipz
  9180  0B9C  2B95               	goto	u3875
  9181  0B9D  0833               	movf	??___flmul,w
  9182  0B9E  07BF               	addwf	___flmul@prod,f
  9183  0B9F  0834               	movf	??___flmul+1,w
  9184  0BA0  1103               	clrz
  9185  0BA1  1803               	skipnc
  9186  0BA2  3E01               	addlw	1
  9187  0BA3  1903               	skipnz
  9188  0BA4  2BA6               	goto	u3881
  9189  0BA5  07C0               	addwf	___flmul@prod+1,f
  9190  0BA6                     u3881:
  9191  0BA6  0835               	movf	??___flmul+2,w
  9192  0BA7  1103               	clrz
  9193  0BA8  1803               	skipnc
  9194  0BA9  3E01               	addlw	1
  9195  0BAA  1903               	skipnz
  9196  0BAB  2BAD               	goto	u3882
  9197  0BAC  07C1               	addwf	___flmul@prod+2,f
  9198  0BAD                     u3882:
  9199  0BAD  0836               	movf	??___flmul+3,w
  9200  0BAE  1103               	clrz
  9201  0BAF  1803               	skipnc
  9202  0BB0  3E01               	addlw	1
  9203  0BB1  1903               	skipnz
  9204  0BB2  2BB4               	goto	u3883
  9205  0BB3  07C2               	addwf	___flmul@prod+3,f
  9206  0BB4                     u3883:
  9207  0BB4                     l2779:
  9208  0BB4  3008               	movlw	8
  9209  0BB5  00B3               	movwf	??___flmul
  9210  0BB6                     u3895:
  9211  0BB6  1003               	clrc
  9212  0BB7  0DB9               	rlf	___flmul@grs,f
  9213  0BB8  0DBA               	rlf	___flmul@grs+1,f
  9214  0BB9  0DBB               	rlf	___flmul@grs+2,f
  9215  0BBA  0DBC               	rlf	___flmul@grs+3,f
  9216  0BBB  0BB3               	decfsz	??___flmul,f
  9217  0BBC  2BB6               	goto	u3895
  9218  0BBD                     l2781:
  9219  0BBD  083E               	movf	___flmul@bexp,w
  9220  0BBE  073D               	addwf	___flmul@aexp,w
  9221  0BBF  00B3               	movwf	??___flmul
  9222  0BC0  01B4               	clrf	??___flmul+1
  9223  0BC1  0DB4               	rlf	??___flmul+1,f
  9224  0BC2  0833               	movf	??___flmul,w
  9225  0BC3  3E82               	addlw	130
  9226  0BC4  00C3               	movwf	___flmul@temp
  9227  0BC5  0834               	movf	??___flmul+1,w
  9228  0BC6  1803               	skipnc
  9229  0BC7  3E01               	addlw	1
  9230  0BC8  3EFF               	addlw	255
  9231  0BC9  00C4               	movwf	___flmul@temp+1
  9232  0BCA  2BE8               	goto	l2793
  9233  0BCB                     l2783:
  9234  0BCB  3001               	movlw	1
  9235  0BCC  00B3               	movwf	??___flmul
  9236  0BCD                     u3905:
  9237  0BCD  1003               	clrc
  9238  0BCE  0DBF               	rlf	___flmul@prod,f
  9239  0BCF  0DC0               	rlf	___flmul@prod+1,f
  9240  0BD0  0DC1               	rlf	___flmul@prod+2,f
  9241  0BD1  0DC2               	rlf	___flmul@prod+3,f
  9242  0BD2  0BB3               	decfsz	??___flmul,f
  9243  0BD3  2BCD               	goto	u3905
  9244  0BD4                     l2785:
  9245  0BD4  1FBC               	btfss	___flmul@grs+3,7
  9246  0BD5  2BD7               	goto	u3911
  9247  0BD6  2BD8               	goto	u3910
  9248  0BD7                     u3911:
  9249  0BD7  2BD9               	goto	l2789
  9250  0BD8                     u3910:
  9251  0BD8                     l2787:
  9252  0BD8  143F               	bsf	___flmul@prod,0
  9253  0BD9                     l2789:
  9254  0BD9  3001               	movlw	1
  9255  0BDA  00B3               	movwf	??___flmul
  9256  0BDB                     u3925:
  9257  0BDB  1003               	clrc
  9258  0BDC  0DB9               	rlf	___flmul@grs,f
  9259  0BDD  0DBA               	rlf	___flmul@grs+1,f
  9260  0BDE  0DBB               	rlf	___flmul@grs+2,f
  9261  0BDF  0DBC               	rlf	___flmul@grs+3,f
  9262  0BE0  0BB3               	decfsz	??___flmul,f
  9263  0BE1  2BDB               	goto	u3925
  9264  0BE2                     l2791:
  9265  0BE2  30FF               	movlw	255
  9266  0BE3  07C3               	addwf	___flmul@temp,f
  9267  0BE4  1803               	skipnc
  9268  0BE5  0AC4               	incf	___flmul@temp+1,f
  9269  0BE6  30FF               	movlw	255
  9270  0BE7  07C4               	addwf	___flmul@temp+1,f
  9271  0BE8                     l2793:
  9272  0BE8  1FC1               	btfss	___flmul@prod+2,7
  9273  0BE9  2BEB               	goto	u3931
  9274  0BEA  2BEC               	goto	u3930
  9275  0BEB                     u3931:
  9276  0BEB  2BCB               	goto	l2783
  9277  0BEC                     u3930:
  9278  0BEC                     l2795:
  9279  0BEC  01BD               	clrf	___flmul@aexp
  9280  0BED                     l2797:
  9281  0BED  1FBC               	btfss	___flmul@grs+3,7
  9282  0BEE  2BF0               	goto	u3941
  9283  0BEF  2BF1               	goto	u3940
  9284  0BF0                     u3941:
  9285  0BF0  2C0D               	goto	l2805
  9286  0BF1                     u3940:
  9287  0BF1                     l2799:
  9288  0BF1  30FF               	movlw	255
  9289  0BF2  0539               	andwf	___flmul@grs,w
  9290  0BF3  00B3               	movwf	??___flmul
  9291  0BF4  30FF               	movlw	255
  9292  0BF5  053A               	andwf	___flmul@grs+1,w
  9293  0BF6  00B4               	movwf	??___flmul+1
  9294  0BF7  30FF               	movlw	255
  9295  0BF8  053B               	andwf	___flmul@grs+2,w
  9296  0BF9  00B5               	movwf	??___flmul+2
  9297  0BFA  307F               	movlw	127
  9298  0BFB  053C               	andwf	___flmul@grs+3,w
  9299  0BFC  00B6               	movwf	??___flmul+3
  9300  0BFD  0836               	movf	??___flmul+3,w
  9301  0BFE  0435               	iorwf	??___flmul+2,w
  9302  0BFF  0434               	iorwf	??___flmul+1,w
  9303  0C00  0433               	iorwf	??___flmul,w
  9304  0C01  1903               	skipnz
  9305  0C02  2C04               	goto	u3951
  9306  0C03  2C05               	goto	u3950
  9307  0C04                     u3951:
  9308  0C04  2C08               	goto	l845
  9309  0C05                     u3950:
  9310  0C05                     l2801:
  9311  0C05  01BD               	clrf	___flmul@aexp
  9312  0C06  0ABD               	incf	___flmul@aexp,f
  9313  0C07  2C0D               	goto	l2805
  9314  0C08                     l845:
  9315  0C08  1C3F               	btfss	___flmul@prod,0
  9316  0C09  2C0B               	goto	u3961
  9317  0C0A  2C0C               	goto	u3960
  9318  0C0B                     u3961:
  9319  0C0B  2C0D               	goto	l2805
  9320  0C0C                     u3960:
  9321  0C0C  2C05               	goto	l2801
  9322  0C0D                     l2805:
  9323  0C0D  083D               	movf	___flmul@aexp,w
  9324  0C0E  1903               	btfsc	3,2
  9325  0C0F  2C11               	goto	u3971
  9326  0C10  2C12               	goto	u3970
  9327  0C11                     u3971:
  9328  0C11  2C43               	goto	l2815
  9329  0C12                     u3970:
  9330  0C12                     l2807:
  9331  0C12  3001               	movlw	1
  9332  0C13  07BF               	addwf	___flmul@prod,f
  9333  0C14  3000               	movlw	0
  9334  0C15  1803               	skipnc
  9335  0C16  3001               	movlw	1
  9336  0C17  07C0               	addwf	___flmul@prod+1,f
  9337  0C18  3000               	movlw	0
  9338  0C19  1803               	skipnc
  9339  0C1A  3001               	movlw	1
  9340  0C1B  07C1               	addwf	___flmul@prod+2,f
  9341  0C1C  3000               	movlw	0
  9342  0C1D  1803               	skipnc
  9343  0C1E  3001               	movlw	1
  9344  0C1F  07C2               	addwf	___flmul@prod+3,f
  9345  0C20                     l2809:
  9346  0C20  1C42               	btfss	___flmul@prod+3,0
  9347  0C21  2C23               	goto	u3981
  9348  0C22  2C24               	goto	u3980
  9349  0C23                     u3981:
  9350  0C23  2C43               	goto	l2815
  9351  0C24                     u3980:
  9352  0C24                     l2811:
  9353  0C24  083F               	movf	___flmul@prod,w
  9354  0C25  00B3               	movwf	??___flmul
  9355  0C26  0840               	movf	___flmul@prod+1,w
  9356  0C27  00B4               	movwf	??___flmul+1
  9357  0C28  0841               	movf	___flmul@prod+2,w
  9358  0C29  00B5               	movwf	??___flmul+2
  9359  0C2A  0842               	movf	___flmul@prod+3,w
  9360  0C2B  00B6               	movwf	??___flmul+3
  9361  0C2C  3001               	movlw	1
  9362  0C2D  00B7               	movwf	??___flmul+4
  9363  0C2E                     u3995:
  9364  0C2E  0D36               	rlf	??___flmul+3,w
  9365  0C2F  0CB6               	rrf	??___flmul+3,f
  9366  0C30  0CB5               	rrf	??___flmul+2,f
  9367  0C31  0CB4               	rrf	??___flmul+1,f
  9368  0C32  0CB3               	rrf	??___flmul,f
  9369  0C33                     u3990:
  9370  0C33  0BB7               	decfsz	??___flmul+4,f
  9371  0C34  2C2E               	goto	u3995
  9372  0C35  0836               	movf	??___flmul+3,w
  9373  0C36  00C2               	movwf	___flmul@prod+3
  9374  0C37  0835               	movf	??___flmul+2,w
  9375  0C38  00C1               	movwf	___flmul@prod+2
  9376  0C39  0834               	movf	??___flmul+1,w
  9377  0C3A  00C0               	movwf	___flmul@prod+1
  9378  0C3B  0833               	movf	??___flmul,w
  9379  0C3C  00BF               	movwf	___flmul@prod
  9380  0C3D                     l2813:
  9381  0C3D  3001               	movlw	1
  9382  0C3E  07C3               	addwf	___flmul@temp,f
  9383  0C3F  1803               	skipnc
  9384  0C40  0AC4               	incf	___flmul@temp+1,f
  9385  0C41  3000               	movlw	0
  9386  0C42  07C4               	addwf	___flmul@temp+1,f
  9387  0C43                     l2815:
  9388  0C43  0844               	movf	___flmul@temp+1,w
  9389  0C44  3A80               	xorlw	128
  9390  0C45  00FF               	movwf	btemp+1
  9391  0C46  3080               	movlw	128
  9392  0C47  027F               	subwf	btemp+1,w
  9393  0C48  1D03               	skipz
  9394  0C49  2C4C               	goto	u4005
  9395  0C4A  30FF               	movlw	255
  9396  0C4B  0243               	subwf	___flmul@temp,w
  9397  0C4C                     u4005:
  9398  0C4C  1C03               	skipc
  9399  0C4D  2C4F               	goto	u4001
  9400  0C4E  2C50               	goto	u4000
  9401  0C4F                     u4001:
  9402  0C4F  2C5B               	goto	l2819
  9403  0C50                     u4000:
  9404  0C50                     l2817:
  9405  0C50  307F               	movlw	127
  9406  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  9407  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  9408  0C53  00C2               	movwf	___flmul@prod+3
  9409  0C54  3080               	movlw	128
  9410  0C55  00C1               	movwf	___flmul@prod+2
  9411  0C56  3000               	movlw	0
  9412  0C57  00C0               	movwf	___flmul@prod+1
  9413  0C58  3000               	movlw	0
  9414  0C59  00BF               	movwf	___flmul@prod
  9415  0C5A  2C90               	goto	l851
  9416  0C5B                     l2819:
  9417  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  9418  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  9419  0C5D  0844               	movf	___flmul@temp+1,w
  9420  0C5E  3A80               	xorlw	128
  9421  0C5F  00FF               	movwf	btemp+1
  9422  0C60  3080               	movlw	128
  9423  0C61  027F               	subwf	btemp+1,w
  9424  0C62  1D03               	skipz
  9425  0C63  2C66               	goto	u4015
  9426  0C64  3001               	movlw	1
  9427  0C65  0243               	subwf	___flmul@temp,w
  9428  0C66                     u4015:
  9429  0C66  1803               	skipnc
  9430  0C67  2C69               	goto	u4011
  9431  0C68  2C6A               	goto	u4010
  9432  0C69                     u4011:
  9433  0C69  2C76               	goto	l2825
  9434  0C6A                     u4010:
  9435  0C6A                     l2821:
  9436  0C6A  3000               	movlw	0
  9437  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  9438  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  9439  0C6D  00C2               	movwf	___flmul@prod+3
  9440  0C6E  3000               	movlw	0
  9441  0C6F  00C1               	movwf	___flmul@prod+2
  9442  0C70  3000               	movlw	0
  9443  0C71  00C0               	movwf	___flmul@prod+1
  9444  0C72  3000               	movlw	0
  9445  0C73  00BF               	movwf	___flmul@prod
  9446  0C74                     l2823:
  9447  0C74  01B8               	clrf	___flmul@sign
  9448  0C75  2C90               	goto	l851
  9449  0C76                     l2825:
  9450  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  9451  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  9452  0C78  0843               	movf	___flmul@temp,w
  9453  0C79  00B3               	movwf	??___flmul
  9454  0C7A  0833               	movf	??___flmul,w
  9455  0C7B  00BE               	movwf	___flmul@bexp
  9456  0C7C  30FF               	movlw	255
  9457  0C7D  05BF               	andwf	___flmul@prod,f
  9458  0C7E  30FF               	movlw	255
  9459  0C7F  05C0               	andwf	___flmul@prod+1,f
  9460  0C80  307F               	movlw	127
  9461  0C81  05C1               	andwf	___flmul@prod+2,f
  9462  0C82  3000               	movlw	0
  9463  0C83  05C2               	andwf	___flmul@prod+3,f
  9464  0C84                     l2827:
  9465  0C84  1C3E               	btfss	___flmul@bexp,0
  9466  0C85  2C87               	goto	u4021
  9467  0C86  2C88               	goto	u4020
  9468  0C87                     u4021:
  9469  0C87  2C89               	goto	l2831
  9470  0C88                     u4020:
  9471  0C88                     l2829:
  9472  0C88  17C1               	bsf	___flmul@prod+2,7
  9473  0C89                     l2831:
  9474  0C89  083E               	movf	___flmul@bexp,w
  9475  0C8A  00B3               	movwf	??___flmul
  9476  0C8B  1003               	clrc
  9477  0C8C  0C33               	rrf	??___flmul,w
  9478  0C8D  00B4               	movwf	??___flmul+1
  9479  0C8E  0834               	movf	??___flmul+1,w
  9480  0C8F  00C2               	movwf	___flmul@prod+3
  9481  0C90                     l851:
  9482  0C90  0838               	movf	___flmul@sign,w
  9483  0C91  00B3               	movwf	??___flmul
  9484  0C92  0833               	movf	??___flmul,w
  9485  0C93  04C2               	iorwf	___flmul@prod+3,f
  9486  0C94                     l2833:
  9487  0C94  0842               	movf	___flmul@prod+3,w
  9488  0C95  00AE               	movwf	?___flmul+3
  9489  0C96  0841               	movf	___flmul@prod+2,w
  9490  0C97  00AD               	movwf	?___flmul+2
  9491  0C98  0840               	movf	___flmul@prod+1,w
  9492  0C99  00AC               	movwf	?___flmul+1
  9493  0C9A  083F               	movf	___flmul@prod,w
  9494  0C9B  00AB               	movwf	?___flmul
  9495  0C9C                     l839:
  9496  0C9C  0008               	return
  9497  0C9D                     __end_of___flmul:
  9498                           
  9499                           	psect	text30
  9500  1937                     __ptext30:	
  9501 ;; *************** function __Umul8_16 *****************
  9502 ;; Defined at:
  9503 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  multiplier      1    wreg     unsigned char 
  9506 ;;  multiplicand    1    3[COMMON] unsigned char 
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9509 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  9510 ;;  product         2    0[BANK0 ] unsigned int 
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  2    3[COMMON] unsigned int 
  9513 ;; Registers used:
  9514 ;;		wreg, status,2, status,0
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9520 ;;      Params:         2       0       0       0       0
  9521 ;;      Locals:         0       5       0       0       0
  9522 ;;      Temps:          2       0       0       0       0
  9523 ;;      Totals:         4       5       0       0       0
  9524 ;;Total ram usage:        9 bytes
  9525 ;; Hardware stack levels used:    1
  9526 ;; Hardware stack levels required when called:    1
  9527 ;; This function calls:
  9528 ;;		Nothing
  9529 ;; This function is called by:
  9530 ;;		___flmul
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           
  9535                           ;psect for function __Umul8_16
  9536  1937                     __Umul8_16:
  9537                           
  9538                           ;incstack = 0
  9539                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9540                           ;__Umul8_16@multiplier stored from wreg
  9541  1937  1283               	bcf	3,5	;RP0=0, select bank0
  9542  1938  1303               	bcf	3,6	;RP1=0, select bank0
  9543  1939  00A4               	movwf	__Umul8_16@multiplier
  9544  193A                     l2357:
  9545  193A  01A0               	clrf	__Umul8_16@product
  9546  193B  01A1               	clrf	__Umul8_16@product+1
  9547  193C                     l2359:
  9548  193C  0873               	movf	__Umul8_16@multiplicand,w
  9549  193D  00F5               	movwf	??__Umul8_16
  9550  193E  01F6               	clrf	??__Umul8_16+1
  9551  193F  0875               	movf	??__Umul8_16,w
  9552  1940  00A2               	movwf	__Umul8_16@word_mpld
  9553  1941  0876               	movf	??__Umul8_16+1,w
  9554  1942  00A3               	movwf	__Umul8_16@word_mpld+1
  9555  1943                     l2361:
  9556  1943  1C24               	btfss	__Umul8_16@multiplier,0
  9557  1944  2946               	goto	u2851
  9558  1945  2947               	goto	u2850
  9559  1946                     u2851:
  9560  1946  294D               	goto	l858
  9561  1947                     u2850:
  9562  1947                     l2363:
  9563  1947  0822               	movf	__Umul8_16@word_mpld,w
  9564  1948  07A0               	addwf	__Umul8_16@product,f
  9565  1949  1803               	skipnc
  9566  194A  0AA1               	incf	__Umul8_16@product+1,f
  9567  194B  0823               	movf	__Umul8_16@word_mpld+1,w
  9568  194C  07A1               	addwf	__Umul8_16@product+1,f
  9569  194D                     l858:
  9570  194D  3001               	movlw	1
  9571  194E                     u2865:
  9572  194E  1003               	clrc
  9573  194F  0DA2               	rlf	__Umul8_16@word_mpld,f
  9574  1950  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9575  1951  3EFF               	addlw	-1
  9576  1952  1D03               	skipz
  9577  1953  294E               	goto	u2865
  9578  1954  1003               	clrc
  9579  1955  0CA4               	rrf	__Umul8_16@multiplier,f
  9580  1956                     l2365:
  9581  1956  0824               	movf	__Umul8_16@multiplier,w
  9582  1957  1D03               	btfss	3,2
  9583  1958  295A               	goto	u2871
  9584  1959  295B               	goto	u2870
  9585  195A                     u2871:
  9586  195A  2943               	goto	l2361
  9587  195B                     u2870:
  9588  195B                     l2367:
  9589  195B  0821               	movf	__Umul8_16@product+1,w
  9590  195C  00F4               	movwf	?__Umul8_16+1
  9591  195D  0820               	movf	__Umul8_16@product,w
  9592  195E  00F3               	movwf	?__Umul8_16
  9593  195F                     l860:
  9594  195F  0008               	return
  9595  1960                     __end_of__Umul8_16:
  9596                           
  9597                           	psect	text31
  9598  1A09                     __ptext31:	
  9599 ;; *************** function _Lcd_Write_String *****************
  9600 ;; Defined at:
  9601 ;;		line 67 in file "LCD.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  a               2    6[COMMON] PTR unsigned char 
  9604 ;;		 -> l(25), s(25), STR_1(17), 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;  i               2    3[BANK0 ] int 
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9616 ;;      Params:         2       0       0       0       0
  9617 ;;      Locals:         0       2       0       0       0
  9618 ;;      Temps:          0       3       0       0       0
  9619 ;;      Totals:         2       5       0       0       0
  9620 ;;Total ram usage:        7 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; Hardware stack levels required when called:    3
  9623 ;; This function calls:
  9624 ;;		_Lcd_Write_Char
  9625 ;; This function is called by:
  9626 ;;		_main
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function _Lcd_Write_String
  9632  1A09                     _Lcd_Write_String:
  9633  1A09                     l4191:	
  9634                           ;incstack = 0
  9635                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9636                           
  9637                           
  9638                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  9639  1A09  1283               	bcf	3,5	;RP0=0, select bank0
  9640  1A0A  1303               	bcf	3,6	;RP1=0, select bank0
  9641  1A0B  01A3               	clrf	Lcd_Write_String@i
  9642  1A0C  01A4               	clrf	Lcd_Write_String@i+1
  9643  1A0D  2A32               	goto	l4197
  9644  1A0E                     l4193:
  9645                           
  9646                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  9647  1A0E  0823               	movf	Lcd_Write_String@i,w
  9648  1A0F  0776               	addwf	Lcd_Write_String@a,w
  9649  1A10  00A1               	movwf	??_Lcd_Write_String+1
  9650  1A11  0877               	movf	Lcd_Write_String@a+1,w
  9651  1A12  00A0               	movwf	??_Lcd_Write_String
  9652  1A13  1803               	skipnc
  9653  1A14  0AA0               	incf	??_Lcd_Write_String,f
  9654  1A15  1FA3               	btfss	Lcd_Write_String@i,7
  9655  1A16  2A18               	goto	u6950
  9656  1A17  03A0               	decf	??_Lcd_Write_String,f
  9657  1A18                     u6950:
  9658  1A18  1283               	bcf	3,5	;RP0=0, select bank0
  9659  1A19  1303               	bcf	3,6	;RP1=0, select bank0
  9660  1A1A  0820               	movf	??_Lcd_Write_String,w
  9661  1A1B  00A2               	movwf	??_Lcd_Write_String+2
  9662  1A1C  0822               	movf	??_Lcd_Write_String+2,w
  9663  1A1D  00FF               	movwf	btemp+1
  9664  1A1E  0821               	movf	??_Lcd_Write_String+1,w
  9665  1A1F  0084               	movwf	4
  9666  1A20  120A  158A  2000  160A  158A  	fcall	stringtab
  9667  1A25  160A  158A  20FE  160A  158A  	fcall	_Lcd_Write_Char
  9668  1A2A                     l4195:
  9669  1A2A  3001               	movlw	1
  9670  1A2B  1283               	bcf	3,5	;RP0=0, select bank0
  9671  1A2C  1303               	bcf	3,6	;RP1=0, select bank0
  9672  1A2D  07A3               	addwf	Lcd_Write_String@i,f
  9673  1A2E  1803               	skipnc
  9674  1A2F  0AA4               	incf	Lcd_Write_String@i+1,f
  9675  1A30  3000               	movlw	0
  9676  1A31  07A4               	addwf	Lcd_Write_String@i+1,f
  9677  1A32                     l4197:
  9678  1A32  0823               	movf	Lcd_Write_String@i,w
  9679  1A33  0776               	addwf	Lcd_Write_String@a,w
  9680  1A34  00A1               	movwf	??_Lcd_Write_String+1
  9681  1A35  0877               	movf	Lcd_Write_String@a+1,w
  9682  1A36  00A0               	movwf	??_Lcd_Write_String
  9683  1A37  1803               	skipnc
  9684  1A38  0AA0               	incf	??_Lcd_Write_String,f
  9685  1A39  1FA3               	btfss	Lcd_Write_String@i,7
  9686  1A3A  2A3C               	goto	u6960
  9687  1A3B  03A0               	decf	??_Lcd_Write_String,f
  9688  1A3C                     u6960:
  9689  1A3C  1283               	bcf	3,5	;RP0=0, select bank0
  9690  1A3D  1303               	bcf	3,6	;RP1=0, select bank0
  9691  1A3E  0820               	movf	??_Lcd_Write_String,w
  9692  1A3F  00A2               	movwf	??_Lcd_Write_String+2
  9693  1A40  0822               	movf	??_Lcd_Write_String+2,w
  9694  1A41  00FF               	movwf	btemp+1
  9695  1A42  0821               	movf	??_Lcd_Write_String+1,w
  9696  1A43  0084               	movwf	4
  9697  1A44  120A  158A  2000  160A  158A  	fcall	stringtab
  9698  1A49  3A00               	xorlw	0
  9699  1A4A  1D03               	skipz
  9700  1A4B  2A4D               	goto	u6971
  9701  1A4C  2A4E               	goto	u6970
  9702  1A4D                     u6971:
  9703  1A4D  2A0E               	goto	l4193
  9704  1A4E                     u6970:
  9705  1A4E                     l146:
  9706  1A4E  0008               	return
  9707  1A4F                     __end_of_Lcd_Write_String:
  9708                           
  9709                           	psect	text32
  9710  18FE                     __ptext32:	
  9711 ;; *************** function _Lcd_Write_Char *****************
  9712 ;; Defined at:
  9713 ;;		line 58 in file "LCD.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  a               1    wreg     unsigned char 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  a               1    5[COMMON] unsigned char 
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  1    wreg      void 
  9720 ;; Registers used:
  9721 ;;		wreg, status,2, status,0, pclath, cstack
  9722 ;; Tracked objects:
  9723 ;;		On entry : 0/0
  9724 ;;		On exit  : 0/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9727 ;;      Params:         0       0       0       0       0
  9728 ;;      Locals:         1       0       0       0       0
  9729 ;;      Temps:          1       0       0       0       0
  9730 ;;      Totals:         2       0       0       0       0
  9731 ;;Total ram usage:        2 bytes
  9732 ;; Hardware stack levels used:    1
  9733 ;; Hardware stack levels required when called:    2
  9734 ;; This function calls:
  9735 ;;		_Lcd_Port
  9736 ;; This function is called by:
  9737 ;;		_Lcd_Write_String
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           
  9742                           ;psect for function _Lcd_Write_Char
  9743  18FE                     _Lcd_Write_Char:
  9744                           
  9745                           ;incstack = 0
  9746                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9747                           ;Lcd_Write_Char@a stored from wreg
  9748  18FE  00F5               	movwf	Lcd_Write_Char@a
  9749  18FF                     l3859:
  9750                           
  9751                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  9752  18FF  1283               	bcf	3,5	;RP0=0, select bank0
  9753  1900  1303               	bcf	3,6	;RP1=0, select bank0
  9754  1901  1409               	bsf	9,0	;volatile
  9755  1902                     l3861:
  9756                           
  9757                           ;LCD.c: 60:     Lcd_Port(a);
  9758  1902  0875               	movf	Lcd_Write_Char@a,w
  9759  1903  160A  158A  2074  160A  158A  	fcall	_Lcd_Port
  9760  1908                     l3863:
  9761                           
  9762                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
  9763  1908  1283               	bcf	3,5	;RP0=0, select bank0
  9764  1909  1303               	bcf	3,6	;RP1=0, select bank0
  9765  190A  1489               	bsf	9,1	;volatile
  9766  190B                     l3865:
  9767                           
  9768                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9769  190B  301A               	movlw	26
  9770  190C  00F4               	movwf	??_Lcd_Write_Char
  9771  190D                     u7557:
  9772  190D  0BF4               	decfsz	??_Lcd_Write_Char,f
  9773  190E  290D               	goto	u7557
  9774  190F  0000               	nop
  9775  1910                     l3867:
  9776                           
  9777                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
  9778  1910  1283               	bcf	3,5	;RP0=0, select bank0
  9779  1911  1303               	bcf	3,6	;RP1=0, select bank0
  9780  1912  1089               	bcf	9,1	;volatile
  9781  1913                     l3869:
  9782                           
  9783                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9784  1913  301A               	movlw	26
  9785  1914  00F4               	movwf	??_Lcd_Write_Char
  9786  1915                     u7567:
  9787  1915  0BF4               	decfsz	??_Lcd_Write_Char,f
  9788  1916  2915               	goto	u7567
  9789  1917  0000               	nop
  9790  1918                     l140:
  9791  1918  0008               	return
  9792  1919                     __end_of_Lcd_Write_Char:
  9793                           
  9794                           	psect	text33
  9795  07D8                     __ptext33:	
  9796 ;; *************** function _Lcd_Set_Cursor *****************
  9797 ;; Defined at:
  9798 ;;		line 33 in file "LCD.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  a               1    wreg     unsigned char 
  9801 ;;  b               1    7[COMMON] unsigned char 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;  a               1    1[BANK0 ] unsigned char 
  9804 ;;  temp            1    2[BANK0 ] unsigned char 
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      void 
  9807 ;; Registers used:
  9808 ;;		wreg, status,2, status,0, pclath, cstack
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9814 ;;      Params:         1       0       0       0       0
  9815 ;;      Locals:         0       2       0       0       0
  9816 ;;      Temps:          0       1       0       0       0
  9817 ;;      Totals:         1       3       0       0       0
  9818 ;;Total ram usage:        4 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:    3
  9821 ;; This function calls:
  9822 ;;		_Lcd_Cmd
  9823 ;; This function is called by:
  9824 ;;		_main
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           
  9829                           ;psect for function _Lcd_Set_Cursor
  9830  07D8                     _Lcd_Set_Cursor:
  9831                           
  9832                           ;incstack = 0
  9833                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9834                           ;Lcd_Set_Cursor@a stored from wreg
  9835  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  9836  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  9837  07DA  00A1               	movwf	Lcd_Set_Cursor@a
  9838  07DB                     l4179:
  9839                           
  9840                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
  9841  07DB  0321               	decf	Lcd_Set_Cursor@a,w
  9842  07DC  1D03               	btfss	3,2
  9843  07DD  2FDF               	goto	u6931
  9844  07DE  2FE0               	goto	u6930
  9845  07DF                     u6931:
  9846  07DF  2FEC               	goto	l4185
  9847  07E0                     u6930:
  9848  07E0                     l4181:
  9849                           
  9850                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  9851  07E0  0877               	movf	Lcd_Set_Cursor@b,w
  9852  07E1  3E7F               	addlw	127
  9853  07E2  00A0               	movwf	??_Lcd_Set_Cursor
  9854  07E3  0820               	movf	??_Lcd_Set_Cursor,w
  9855  07E4  00A2               	movwf	Lcd_Set_Cursor@temp
  9856  07E5                     l4183:
  9857                           
  9858                           ;LCD.c: 37:         Lcd_Cmd(temp);
  9859  07E5  0822               	movf	Lcd_Set_Cursor@temp,w
  9860  07E6  160A  158A  20E4  120A  118A  	fcall	_Lcd_Cmd
  9861                           
  9862                           ;LCD.c: 38:     } else if (a == 2) {
  9863  07EB  2FFD               	goto	l134
  9864  07EC                     l4185:
  9865  07EC  3002               	movlw	2
  9866  07ED  0621               	xorwf	Lcd_Set_Cursor@a,w
  9867  07EE  1D03               	btfss	3,2
  9868  07EF  2FF1               	goto	u6941
  9869  07F0  2FF2               	goto	u6940
  9870  07F1                     u6941:
  9871  07F1  2FFD               	goto	l134
  9872  07F2                     u6940:
  9873  07F2                     l4187:
  9874                           
  9875                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  9876  07F2  0877               	movf	Lcd_Set_Cursor@b,w
  9877  07F3  3EBF               	addlw	191
  9878  07F4  00A0               	movwf	??_Lcd_Set_Cursor
  9879  07F5  0820               	movf	??_Lcd_Set_Cursor,w
  9880  07F6  00A2               	movwf	Lcd_Set_Cursor@temp
  9881  07F7                     l4189:
  9882                           
  9883                           ;LCD.c: 40:         Lcd_Cmd(temp);
  9884  07F7  0822               	movf	Lcd_Set_Cursor@temp,w
  9885  07F8  160A  158A  20E4  120A  118A  	fcall	_Lcd_Cmd
  9886  07FD                     l134:
  9887  07FD  0008               	return
  9888  07FE                     __end_of_Lcd_Set_Cursor:
  9889                           
  9890                           	psect	text34
  9891  1A95                     __ptext34:	
  9892 ;; *************** function _Lcd_Init *****************
  9893 ;; Defined at:
  9894 ;;		line 44 in file "LCD.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;		None
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;		None
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      void 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2, status,0, pclath, cstack
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9908 ;;      Params:         0       0       0       0       0
  9909 ;;      Locals:         0       0       0       0       0
  9910 ;;      Temps:          0       2       0       0       0
  9911 ;;      Totals:         0       2       0       0       0
  9912 ;;Total ram usage:        2 bytes
  9913 ;; Hardware stack levels used:    1
  9914 ;; Hardware stack levels required when called:    3
  9915 ;; This function calls:
  9916 ;;		_Lcd_Cmd
  9917 ;;		_Lcd_Port
  9918 ;; This function is called by:
  9919 ;;		_main
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923                           
  9924                           ;psect for function _Lcd_Init
  9925  1A95                     _Lcd_Init:
  9926  1A95                     l4167:	
  9927                           ;incstack = 0
  9928                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9929                           
  9930                           
  9931                           ;LCD.c: 45:     Lcd_Port(0x00);
  9932  1A95  3000               	movlw	0
  9933  1A96  160A  158A  2074  160A  158A  	fcall	_Lcd_Port
  9934  1A9B                     l4169:
  9935                           
  9936                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9937  1A9B  3034               	movlw	52
  9938  1A9C  1283               	bcf	3,5	;RP0=0, select bank0
  9939  1A9D  1303               	bcf	3,6	;RP1=0, select bank0
  9940  1A9E  00A1               	movwf	??_Lcd_Init+1
  9941  1A9F  30F1               	movlw	241
  9942  1AA0  00A0               	movwf	??_Lcd_Init
  9943  1AA1                     u7577:
  9944  1AA1  0BA0               	decfsz	??_Lcd_Init,f
  9945  1AA2  2AA1               	goto	u7577
  9946  1AA3  0BA1               	decfsz	??_Lcd_Init+1,f
  9947  1AA4  2AA1               	goto	u7577
  9948  1AA5                     l4171:
  9949                           
  9950                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
  9951  1AA5  303F               	movlw	63
  9952  1AA6  160A  158A  20E4  160A  158A  	fcall	_Lcd_Cmd
  9953                           
  9954                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9955  1AAB  301A               	movlw	26
  9956  1AAC  1283               	bcf	3,5	;RP0=0, select bank0
  9957  1AAD  1303               	bcf	3,6	;RP1=0, select bank0
  9958  1AAE  00A1               	movwf	??_Lcd_Init+1
  9959  1AAF  30F7               	movlw	247
  9960  1AB0  00A0               	movwf	??_Lcd_Init
  9961  1AB1                     u7587:
  9962  1AB1  0BA0               	decfsz	??_Lcd_Init,f
  9963  1AB2  2AB1               	goto	u7587
  9964  1AB3  0BA1               	decfsz	??_Lcd_Init+1,f
  9965  1AB4  2AB1               	goto	u7587
  9966  1AB5  2AB6               	nop2
  9967  1AB6                     l4173:
  9968                           
  9969                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  9970  1AB6  303F               	movlw	63
  9971  1AB7  160A  158A  20E4  160A  158A  	fcall	_Lcd_Cmd
  9972  1ABC                     l4175:
  9973                           
  9974                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9975  1ABC  3084               	movlw	132
  9976  1ABD  1283               	bcf	3,5	;RP0=0, select bank0
  9977  1ABE  1303               	bcf	3,6	;RP1=0, select bank0
  9978  1ABF  00A0               	movwf	??_Lcd_Init
  9979  1AC0                     u7597:
  9980  1AC0  0BA0               	decfsz	??_Lcd_Init,f
  9981  1AC1  2AC0               	goto	u7597
  9982  1AC2  0000               	nop
  9983                           
  9984                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  9985  1AC3  303F               	movlw	63
  9986  1AC4  160A  158A  20E4  160A  158A  	fcall	_Lcd_Cmd
  9987                           
  9988                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  9989  1AC9  3038               	movlw	56
  9990  1ACA  160A  158A  20E4  160A  158A  	fcall	_Lcd_Cmd
  9991                           
  9992                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  9993  1ACF  300C               	movlw	12
  9994  1AD0  160A  158A  20E4  160A  158A  	fcall	_Lcd_Cmd
  9995                           
  9996                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  9997  1AD5  3006               	movlw	6
  9998  1AD6  160A  158A  20E4  160A  158A  	fcall	_Lcd_Cmd
  9999  1ADB                     l137:
 10000  1ADB  0008               	return
 10001  1ADC                     __end_of_Lcd_Init:
 10002                           
 10003                           	psect	text35
 10004  18A8                     __ptext35:	
 10005 ;; *************** function _Lcd_Clear *****************
 10006 ;; Defined at:
 10007 ;;		line 28 in file "LCD.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;		None
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;		None
 10012 ;; Return value:  Size  Location     Type
 10013 ;;                  1    wreg      void 
 10014 ;; Registers used:
 10015 ;;		wreg, status,2, status,0, pclath, cstack
 10016 ;; Tracked objects:
 10017 ;;		On entry : 0/0
 10018 ;;		On exit  : 0/0
 10019 ;;		Unchanged: 0/0
 10020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10021 ;;      Params:         0       0       0       0       0
 10022 ;;      Locals:         0       0       0       0       0
 10023 ;;      Temps:          0       0       0       0       0
 10024 ;;      Totals:         0       0       0       0       0
 10025 ;;Total ram usage:        0 bytes
 10026 ;; Hardware stack levels used:    1
 10027 ;; Hardware stack levels required when called:    3
 10028 ;; This function calls:
 10029 ;;		_Lcd_Cmd
 10030 ;; This function is called by:
 10031 ;;		_main
 10032 ;; This function uses a non-reentrant model
 10033 ;;
 10034                           
 10035                           
 10036                           ;psect for function _Lcd_Clear
 10037  18A8                     _Lcd_Clear:
 10038  18A8                     l4177:	
 10039                           ;incstack = 0
 10040                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10041                           
 10042                           
 10043                           ;LCD.c: 29:     Lcd_Cmd(0);
 10044  18A8  3000               	movlw	0
 10045  18A9  160A  158A  20E4  160A  158A  	fcall	_Lcd_Cmd
 10046                           
 10047                           ;LCD.c: 30:     Lcd_Cmd(1);
 10048  18AE  3001               	movlw	1
 10049  18AF  160A  158A  20E4  160A  158A  	fcall	_Lcd_Cmd
 10050  18B4                     l128:
 10051  18B4  0008               	return
 10052  18B5                     __end_of_Lcd_Clear:
 10053                           
 10054                           	psect	text36
 10055  18E4                     __ptext36:	
 10056 ;; *************** function _Lcd_Cmd *****************
 10057 ;; Defined at:
 10058 ;;		line 20 in file "LCD.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;  a               1    wreg     unsigned char 
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;  a               1    6[COMMON] unsigned char 
 10063 ;; Return value:  Size  Location     Type
 10064 ;;                  1    wreg      void 
 10065 ;; Registers used:
 10066 ;;		wreg, status,2, status,0, pclath, cstack
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 0/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10072 ;;      Params:         0       0       0       0       0
 10073 ;;      Locals:         1       0       0       0       0
 10074 ;;      Temps:          2       0       0       0       0
 10075 ;;      Totals:         3       0       0       0       0
 10076 ;;Total ram usage:        3 bytes
 10077 ;; Hardware stack levels used:    1
 10078 ;; Hardware stack levels required when called:    2
 10079 ;; This function calls:
 10080 ;;		_Lcd_Port
 10081 ;; This function is called by:
 10082 ;;		_Lcd_Clear
 10083 ;;		_Lcd_Set_Cursor
 10084 ;;		_Lcd_Init
 10085 ;; This function uses a non-reentrant model
 10086 ;;
 10087                           
 10088                           
 10089                           ;psect for function _Lcd_Cmd
 10090  18E4                     _Lcd_Cmd:
 10091                           
 10092                           ;incstack = 0
 10093                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10094                           ;Lcd_Cmd@a stored from wreg
 10095  18E4  00F6               	movwf	Lcd_Cmd@a
 10096  18E5                     l3849:
 10097                           
 10098                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
 10099  18E5  1283               	bcf	3,5	;RP0=0, select bank0
 10100  18E6  1303               	bcf	3,6	;RP1=0, select bank0
 10101  18E7  1009               	bcf	9,0	;volatile
 10102  18E8                     l3851:
 10103                           
 10104                           ;LCD.c: 22:     Lcd_Port(a);
 10105  18E8  0876               	movf	Lcd_Cmd@a,w
 10106  18E9  160A  158A  2074  160A  158A  	fcall	_Lcd_Port
 10107  18EE                     l3853:
 10108                           
 10109                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
 10110  18EE  1283               	bcf	3,5	;RP0=0, select bank0
 10111  18EF  1303               	bcf	3,6	;RP1=0, select bank0
 10112  18F0  1489               	bsf	9,1	;volatile
 10113  18F1                     l3855:
 10114                           
 10115                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10116  18F1  300B               	movlw	11
 10117  18F2  00F5               	movwf	??_Lcd_Cmd+1
 10118  18F3  3062               	movlw	98
 10119  18F4  00F4               	movwf	??_Lcd_Cmd
 10120  18F5                     u7607:
 10121  18F5  0BF4               	decfsz	??_Lcd_Cmd,f
 10122  18F6  28F5               	goto	u7607
 10123  18F7  0BF5               	decfsz	??_Lcd_Cmd+1,f
 10124  18F8  28F5               	goto	u7607
 10125  18F9  0000               	nop
 10126  18FA                     l3857:
 10127                           
 10128                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
 10129  18FA  1283               	bcf	3,5	;RP0=0, select bank0
 10130  18FB  1303               	bcf	3,6	;RP1=0, select bank0
 10131  18FC  1089               	bcf	9,1	;volatile
 10132  18FD                     l125:
 10133  18FD  0008               	return
 10134  18FE                     __end_of_Lcd_Cmd:
 10135                           
 10136                           	psect	text37
 10137  1874                     __ptext37:	
 10138 ;; *************** function _Lcd_Port *****************
 10139 ;; Defined at:
 10140 ;;		line 16 in file "LCD.c"
 10141 ;; Parameters:    Size  Location     Type
 10142 ;;  a               1    wreg     unsigned char 
 10143 ;; Auto vars:     Size  Location     Type
 10144 ;;  a               1    3[COMMON] unsigned char 
 10145 ;; Return value:  Size  Location     Type
 10146 ;;                  1    wreg      void 
 10147 ;; Registers used:
 10148 ;;		wreg
 10149 ;; Tracked objects:
 10150 ;;		On entry : 0/0
 10151 ;;		On exit  : 0/0
 10152 ;;		Unchanged: 0/0
 10153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10154 ;;      Params:         0       0       0       0       0
 10155 ;;      Locals:         1       0       0       0       0
 10156 ;;      Temps:          0       0       0       0       0
 10157 ;;      Totals:         1       0       0       0       0
 10158 ;;Total ram usage:        1 bytes
 10159 ;; Hardware stack levels used:    1
 10160 ;; Hardware stack levels required when called:    1
 10161 ;; This function calls:
 10162 ;;		Nothing
 10163 ;; This function is called by:
 10164 ;;		_Lcd_Cmd
 10165 ;;		_Lcd_Init
 10166 ;;		_Lcd_Write_Char
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           
 10171                           ;psect for function _Lcd_Port
 10172  1874                     _Lcd_Port:
 10173                           
 10174                           ;incstack = 0
 10175                           ; Regs used in _Lcd_Port: [wreg]
 10176                           ;Lcd_Port@a stored from wreg
 10177  1874  00F3               	movwf	Lcd_Port@a
 10178  1875                     l3717:
 10179                           
 10180                           ;LCD.c: 17:     PORTD = a;
 10181  1875  0873               	movf	Lcd_Port@a,w
 10182  1876  1283               	bcf	3,5	;RP0=0, select bank0
 10183  1877  1303               	bcf	3,6	;RP1=0, select bank0
 10184  1878  0088               	movwf	8	;volatile
 10185  1879                     l122:
 10186  1879  0008               	return
 10187  187A                     __end_of_Lcd_Port:
 10188                           
 10189                           	psect	text38
 10190  08C2                     __ptext38:	
 10191 ;; *************** function _Config_USARTT *****************
 10192 ;; Defined at:
 10193 ;;		line 11 in file "USART.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;		None
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;		None
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      void 
 10200 ;; Registers used:
 10201 ;;		wreg
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10207 ;;      Params:         0       0       0       0       0
 10208 ;;      Locals:         0       0       0       0       0
 10209 ;;      Temps:          0       0       0       0       0
 10210 ;;      Totals:         0       0       0       0       0
 10211 ;;Total ram usage:        0 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; Hardware stack levels required when called:    1
 10214 ;; This function calls:
 10215 ;;		Nothing
 10216 ;; This function is called by:
 10217 ;;		_main
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           
 10222                           ;psect for function _Config_USARTT
 10223  08C2                     _Config_USARTT:
 10224  08C2                     l3255:	
 10225                           ;incstack = 0
 10226                           ; Regs used in _Config_USARTT: [wreg]
 10227                           
 10228                           
 10229                           ;USART.c: 12:     TXSTAbits.SYNC = 0;
 10230  08C2  1683               	bsf	3,5	;RP0=1, select bank1
 10231  08C3  1303               	bcf	3,6	;RP1=0, select bank1
 10232  08C4  1218               	bcf	24,4	;volatile
 10233                           
 10234                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
 10235  08C5  1698               	bsf	24,5	;volatile
 10236                           
 10237                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
 10238  08C6  1118               	bcf	24,2	;volatile
 10239                           
 10240                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
 10241  08C7  1683               	bsf	3,5	;RP0=1, select bank3
 10242  08C8  1703               	bsf	3,6	;RP1=1, select bank3
 10243  08C9  1587               	bsf	7,3	;volatile
 10244  08CA                     l3257:
 10245                           
 10246                           ;USART.c: 16:     SPBRG = 25;
 10247  08CA  3019               	movlw	25
 10248  08CB  1683               	bsf	3,5	;RP0=1, select bank1
 10249  08CC  1303               	bcf	3,6	;RP1=0, select bank1
 10250  08CD  0099               	movwf	25	;volatile
 10251  08CE                     l3259:
 10252                           
 10253                           ;USART.c: 17:     RCSTAbits.SPEN = 1;
 10254  08CE  1283               	bcf	3,5	;RP0=0, select bank0
 10255  08CF  1303               	bcf	3,6	;RP1=0, select bank0
 10256  08D0  1798               	bsf	24,7	;volatile
 10257  08D1                     l3261:
 10258                           
 10259                           ;USART.c: 18:     INTCONbits.GIE = 1;
 10260  08D1  178B               	bsf	11,7	;volatile
 10261  08D2                     l165:
 10262  08D2  0008               	return
 10263  08D3                     __end_of_Config_USARTT:
 10264                           
 10265                           	psect	text39
 10266  1919                     __ptext39:	
 10267 ;; *************** function _ISR *****************
 10268 ;; Defined at:
 10269 ;;		line 179 in file "main.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;		None
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  1    wreg      void 
 10276 ;; Registers used:
 10277 ;;		wreg
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10283 ;;      Params:         0       0       0       0       0
 10284 ;;      Locals:         0       0       0       0       0
 10285 ;;      Temps:          3       0       0       0       0
 10286 ;;      Totals:         3       0       0       0       0
 10287 ;;Total ram usage:        3 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		Interrupt level 1
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           
 10297                           ;psect for function _ISR
 10298  1919                     _ISR:
 10299  1919                     i1l3669:
 10300                           
 10301                           ;main.c: 180:     if (PIR1bits.RCIF == 1) {
 10302  1919  1283               	bcf	3,5	;RP0=0, select bank0
 10303  191A  1303               	bcf	3,6	;RP1=0, select bank0
 10304  191B  1E8C               	btfss	12,5	;volatile
 10305  191C  291E               	goto	u567_21
 10306  191D  291F               	goto	u567_20
 10307  191E                     u567_21:
 10308  191E  2930               	goto	i1l113
 10309  191F                     u567_20:
 10310  191F                     i1l3671:
 10311                           
 10312                           ;main.c: 181:         if (RCSTAbits.OERR == 1) {
 10313  191F  1C98               	btfss	24,1	;volatile
 10314  1920  2922               	goto	u568_21
 10315  1921  2923               	goto	u568_20
 10316  1922                     u568_21:
 10317  1922  292A               	goto	i1l3677
 10318  1923                     u568_20:
 10319  1923                     i1l3673:
 10320                           
 10321                           ;main.c: 182:             RCSTAbits.CREN = 0;
 10322  1923  1218               	bcf	24,4	;volatile
 10323  1924                     i1l3675:
 10324                           
 10325                           ;main.c: 183:             _delay((unsigned long)((300)*(8000000/4000000.0)));
 10326  1924  30C7               	movlw	199
 10327  1925  00F0               	movwf	??_ISR
 10328  1926                     u761_27:
 10329  1926  0BF0               	decfsz	??_ISR,f
 10330  1927  2926               	goto	u761_27
 10331  1928  2929               	nop2
 10332                           
 10333                           ;main.c: 184:         } else {
 10334  1929  2930               	goto	i1l113
 10335  192A                     i1l3677:
 10336                           
 10337                           ;main.c: 185:             recibido = RCREG;
 10338  192A  081A               	movf	26,w	;volatile
 10339  192B  00F0               	movwf	??_ISR
 10340  192C  0870               	movf	??_ISR,w
 10341  192D  1683               	bsf	3,5	;RP0=1, select bank1
 10342  192E  1303               	bcf	3,6	;RP1=0, select bank1
 10343  192F  00E1               	movwf	_recibido^(0+128)
 10344  1930                     i1l113:
 10345  1930  0872               	movf	??_ISR+2,w
 10346  1931  008A               	movwf	10
 10347  1932  0E71               	swapf	??_ISR+1,w
 10348  1933  0083               	movwf	3
 10349  1934  0EFE               	swapf	btemp,f
 10350  1935  0E7E               	swapf	btemp,w
 10351  1936  0009               	retfie
 10352  1937                     __end_of_ISR:
 10353  007E                     btemp	set	126	;btemp
 10354  007E                     wtemp0	set	126
 10355                           
 10356                           	psect	intentry
 10357  0004                     __pintentry:	
 10358                           ;incstack = 0
 10359                           ; Regs used in _ISR: [wreg]
 10360                           
 10361  0004                     interrupt_function:
 10362  007E                     saved_w	set	btemp
 10363  0004  00FE               	movwf	btemp
 10364  0005  0E03               	swapf	3,w
 10365  0006  00F1               	movwf	??_ISR+1
 10366  0007  080A               	movf	10,w
 10367  0008  00F2               	movwf	??_ISR+2
 10368  0009  160A  158A  2919   	ljmp	_ISR
 10369                           
 10370                           	psect	config
 10371                           
 10372                           ;Config register CONFIG1 @ 0x2007
 10373                           ;	Oscillator Selection bits
 10374                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
 10375                           ;	Watchdog Timer Enable bit
 10376                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10377                           ;	Power-up Timer Enable bit
 10378                           ;	PWRTE = OFF, PWRT disabled
 10379                           ;	RE3/MCLR pin function select bit
 10380                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10381                           ;	Code Protection bit
 10382                           ;	CP = OFF, Program memory code protection is disabled
 10383                           ;	Data Code Protection bit
 10384                           ;	CPD = OFF, Data memory code protection is disabled
 10385                           ;	Brown Out Reset Selection bits
 10386                           ;	BOREN = OFF, BOR disabled
 10387                           ;	Internal External Switchover bit
 10388                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10389                           ;	Fail-Safe Clock Monitor Enabled bit
 10390                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10391                           ;	Low Voltage Programming Enable bit
 10392                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10393                           ;	In-Circuit Debugger Mode bit
 10394                           ;	DEBUG = 0x1, unprogrammed default
 10395  2007                     	org	8199
 10396  2007  20D5               	dw	8405
 10397                           
 10398                           ;Config register CONFIG2 @ 0x2008
 10399                           ;	Brown-out Reset Selection bit
 10400                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10401                           ;	Flash Program Memory Self Write Enable bits
 10402                           ;	WRT = OFF, Write protection off
 10403  2008                     	org	8200
 10404  2008  3FFF               	dw	16383
 10405                           
 10406                           	psect	text1_split_1
 10407  0033                     u7110:
 10408  0033                     l4301:
 10409  0033  1683               	bsf	3,5	;RP0=1, select bank1
 10410  0034  1303               	bcf	3,6	;RP1=0, select bank1
 10411  0035  0848               	movf	(sprintf@fval+3)^(0+128),w
 10412  0036  1283               	bcf	3,5	;RP0=0, select bank0
 10413  0037  1303               	bcf	3,6	;RP1=0, select bank0
 10414  0038  00A3               	movwf	___fleq@ff1+3
 10415  0039  1683               	bsf	3,5	;RP0=1, select bank1
 10416  003A  1303               	bcf	3,6	;RP1=0, select bank1
 10417  003B  0847               	movf	(sprintf@fval+2)^(0+128),w
 10418  003C  1283               	bcf	3,5	;RP0=0, select bank0
 10419  003D  1303               	bcf	3,6	;RP1=0, select bank0
 10420  003E  00A2               	movwf	___fleq@ff1+2
 10421  003F  1683               	bsf	3,5	;RP0=1, select bank1
 10422  0040  1303               	bcf	3,6	;RP1=0, select bank1
 10423  0041  0846               	movf	(sprintf@fval+1)^(0+128),w
 10424  0042  1283               	bcf	3,5	;RP0=0, select bank0
 10425  0043  1303               	bcf	3,6	;RP1=0, select bank0
 10426  0044  00A1               	movwf	___fleq@ff1+1
 10427  0045  1683               	bsf	3,5	;RP0=1, select bank1
 10428  0046  1303               	bcf	3,6	;RP1=0, select bank1
 10429  0047  0845               	movf	sprintf@fval^(0+128),w
 10430  0048  1283               	bcf	3,5	;RP0=0, select bank0
 10431  0049  1303               	bcf	3,6	;RP1=0, select bank0
 10432  004A  00A0               	movwf	___fleq@ff1
 10433  004B  3000               	movlw	0
 10434  004C  00A7               	movwf	___fleq@ff2+3
 10435  004D  3000               	movlw	0
 10436  004E  00A6               	movwf	___fleq@ff2+2
 10437  004F  3000               	movlw	0
 10438  0050  00A5               	movwf	___fleq@ff2+1
 10439  0051  3000               	movlw	0
 10440  0052  00A4               	movwf	___fleq@ff2
 10441  0053  160A  158A  22DC  120A  118A  	fcall	___fleq
 10442  0058  1803               	btfsc	3,0
 10443  0059  285B               	goto	u7121
 10444  005A  285C               	goto	u7120
 10445  005B                     u7121:
 10446  005B  293E               	goto	l4321
 10447  005C                     u7120:
 10448  005C                     l4303:
 10449  005C  1683               	bsf	3,5	;RP0=1, select bank1
 10450  005D  1303               	bcf	3,6	;RP1=0, select bank1
 10451  005E  0848               	movf	(sprintf@fval+3)^(0+128),w
 10452  005F  1283               	bcf	3,5	;RP0=0, select bank0
 10453  0060  1303               	bcf	3,6	;RP1=0, select bank0
 10454  0061  00DB               	movwf	___fltol@f1+3
 10455  0062  1683               	bsf	3,5	;RP0=1, select bank1
 10456  0063  1303               	bcf	3,6	;RP1=0, select bank1
 10457  0064  0847               	movf	(sprintf@fval+2)^(0+128),w
 10458  0065  1283               	bcf	3,5	;RP0=0, select bank0
 10459  0066  1303               	bcf	3,6	;RP1=0, select bank0
 10460  0067  00DA               	movwf	___fltol@f1+2
 10461  0068  1683               	bsf	3,5	;RP0=1, select bank1
 10462  0069  1303               	bcf	3,6	;RP1=0, select bank1
 10463  006A  0846               	movf	(sprintf@fval+1)^(0+128),w
 10464  006B  1283               	bcf	3,5	;RP0=0, select bank0
 10465  006C  1303               	bcf	3,6	;RP1=0, select bank0
 10466  006D  00D9               	movwf	___fltol@f1+1
 10467  006E  1683               	bsf	3,5	;RP0=1, select bank1
 10468  006F  1303               	bcf	3,6	;RP1=0, select bank1
 10469  0070  0845               	movf	sprintf@fval^(0+128),w
 10470  0071  1283               	bcf	3,5	;RP0=0, select bank0
 10471  0072  1303               	bcf	3,6	;RP1=0, select bank0
 10472  0073  00D8               	movwf	___fltol@f1
 10473  0074  160A  158A  254D  120A  118A  	fcall	___fltol
 10474  0079  1283               	bcf	3,5	;RP0=0, select bank0
 10475  007A  1303               	bcf	3,6	;RP1=0, select bank0
 10476  007B  085B               	movf	?___fltol+3,w
 10477  007C  045A               	iorwf	?___fltol+2,w
 10478  007D  0459               	iorwf	?___fltol+1,w
 10479  007E  0458               	iorwf	?___fltol,w
 10480  007F  1D03               	skipz
 10481  0080  2882               	goto	u7131
 10482  0081  2883               	goto	u7130
 10483  0082                     u7131:
 10484  0082  293E               	goto	l4321
 10485  0083                     u7130:
 10486  0083                     l4305:
 10487  0083  1683               	bsf	3,5	;RP0=1, select bank1
 10488  0084  1303               	bcf	3,6	;RP1=0, select bank1
 10489  0085  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10490  0086  3A80               	xorlw	128
 10491  0087  00FF               	movwf	btemp+1
 10492  0088  3080               	movlw	128
 10493  0089  027F               	subwf	btemp+1,w
 10494  008A  1D03               	skipz
 10495  008B  288E               	goto	u7145
 10496  008C  3002               	movlw	2
 10497  008D  0243               	subwf	sprintf@eexp^(0+128),w
 10498  008E                     u7145:
 10499  008E  1C03               	skipc
 10500  008F  2891               	goto	u7141
 10501  0090  2892               	goto	u7140
 10502  0091                     u7141:
 10503  0091  293E               	goto	l4321
 10504  0092                     u7140:
 10505  0092                     l4307:
 10506                           
 10507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10508  0092  1683               	bsf	3,5	;RP0=1, select bank1
 10509  0093  1303               	bcf	3,6	;RP1=0, select bank1
 10510  0094  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10511  0095  1283               	bcf	3,5	;RP0=0, select bank0
 10512  0096  1303               	bcf	3,6	;RP1=0, select bank0
 10513  0097  00A3               	movwf	___flge@ff1+3
 10514  0098  1683               	bsf	3,5	;RP0=1, select bank1
 10515  0099  1303               	bcf	3,6	;RP1=0, select bank1
 10516  009A  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10517  009B  1283               	bcf	3,5	;RP0=0, select bank0
 10518  009C  1303               	bcf	3,6	;RP1=0, select bank0
 10519  009D  00A2               	movwf	___flge@ff1+2
 10520  009E  1683               	bsf	3,5	;RP0=1, select bank1
 10521  009F  1303               	bcf	3,6	;RP1=0, select bank1
 10522  00A0  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10523  00A1  1283               	bcf	3,5	;RP0=0, select bank0
 10524  00A2  1303               	bcf	3,6	;RP1=0, select bank0
 10525  00A3  00A1               	movwf	___flge@ff1+1
 10526  00A4  1683               	bsf	3,5	;RP0=1, select bank1
 10527  00A5  1303               	bcf	3,6	;RP1=0, select bank1
 10528  00A6  083F               	movf	sprintf@tmpval^(0+128),w
 10529  00A7  1283               	bcf	3,5	;RP0=0, select bank0
 10530  00A8  1303               	bcf	3,6	;RP1=0, select bank0
 10531  00A9  00A0               	movwf	___flge@ff1
 10532  00AA  3040               	movlw	64
 10533  00AB  00A7               	movwf	___flge@ff2+3
 10534  00AC  3089               	movlw	137
 10535  00AD  00A6               	movwf	___flge@ff2+2
 10536  00AE  3070               	movlw	112
 10537  00AF  00A5               	movwf	___flge@ff2+1
 10538  00B0  305F               	movlw	95
 10539  00B1  00A4               	movwf	___flge@ff2
 10540  00B2  160A  118A  2015  120A  118A  	fcall	___flge
 10541  00B7  1803               	btfsc	3,0
 10542  00B8  28BA               	goto	u7151
 10543  00B9  28BB               	goto	u7150
 10544  00BA                     u7151:
 10545  00BA  28C4               	goto	l4311
 10546  00BB                     u7150:
 10547  00BB                     l4309:
 10548                           
 10549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10550  00BB  30F7               	movlw	247
 10551  00BC  1683               	bsf	3,5	;RP0=1, select bank1
 10552  00BD  1303               	bcf	3,6	;RP1=0, select bank1
 10553  00BE  07C3               	addwf	sprintf@eexp^(0+128),f
 10554  00BF  1803               	skipnc
 10555  00C0  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10556  00C1  30FF               	movlw	255
 10557  00C2  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10558                           
 10559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10560  00C3  28CC               	goto	l4313
 10561  00C4                     l4311:
 10562                           
 10563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10564  00C4  30F8               	movlw	248
 10565  00C5  1683               	bsf	3,5	;RP0=1, select bank1
 10566  00C6  1303               	bcf	3,6	;RP1=0, select bank1
 10567  00C7  07C3               	addwf	sprintf@eexp^(0+128),f
 10568  00C8  1803               	skipnc
 10569  00C9  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10570  00CA  30FF               	movlw	255
 10571  00CB  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10572  00CC                     l4313:
 10573                           
 10574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10575  00CC  0843               	movf	sprintf@eexp^(0+128),w
 10576  00CD  120A  158A  249D  120A  118A  	fcall	_scale
 10577  00D2  1283               	bcf	3,5	;RP0=0, select bank0
 10578  00D3  1303               	bcf	3,6	;RP1=0, select bank0
 10579  00D4  0848               	movf	?_scale+3,w
 10580  00D5  1683               	bsf	3,5	;RP0=1, select bank1
 10581  00D6  1303               	bcf	3,6	;RP1=0, select bank1
 10582  00D7  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10583  00D8  1283               	bcf	3,5	;RP0=0, select bank0
 10584  00D9  1303               	bcf	3,6	;RP1=0, select bank0
 10585  00DA  0847               	movf	?_scale+2,w
 10586  00DB  1683               	bsf	3,5	;RP0=1, select bank1
 10587  00DC  1303               	bcf	3,6	;RP1=0, select bank1
 10588  00DD  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10589  00DE  1283               	bcf	3,5	;RP0=0, select bank0
 10590  00DF  1303               	bcf	3,6	;RP1=0, select bank0
 10591  00E0  0846               	movf	?_scale+1,w
 10592  00E1  1683               	bsf	3,5	;RP0=1, select bank1
 10593  00E2  1303               	bcf	3,6	;RP1=0, select bank1
 10594  00E3  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10595  00E4  1283               	bcf	3,5	;RP0=0, select bank0
 10596  00E5  1303               	bcf	3,6	;RP1=0, select bank0
 10597  00E6  0845               	movf	?_scale,w
 10598  00E7  1683               	bsf	3,5	;RP0=1, select bank1
 10599  00E8  1303               	bcf	3,6	;RP1=0, select bank1
 10600  00E9  00BF               	movwf	sprintf@tmpval^(0+128)
 10601  00EA                     l4315:
 10602  00EA  0848               	movf	(sprintf@fval+3)^(0+128),w
 10603  00EB  1283               	bcf	3,5	;RP0=0, select bank0
 10604  00EC  1303               	bcf	3,6	;RP1=0, select bank0
 10605  00ED  00A3               	movwf	__div_to_l_@f1+3
 10606  00EE  1683               	bsf	3,5	;RP0=1, select bank1
 10607  00EF  1303               	bcf	3,6	;RP1=0, select bank1
 10608  00F0  0847               	movf	(sprintf@fval+2)^(0+128),w
 10609  00F1  1283               	bcf	3,5	;RP0=0, select bank0
 10610  00F2  1303               	bcf	3,6	;RP1=0, select bank0
 10611  00F3  00A2               	movwf	__div_to_l_@f1+2
 10612  00F4  1683               	bsf	3,5	;RP0=1, select bank1
 10613  00F5  1303               	bcf	3,6	;RP1=0, select bank1
 10614  00F6  0846               	movf	(sprintf@fval+1)^(0+128),w
 10615  00F7  1283               	bcf	3,5	;RP0=0, select bank0
 10616  00F8  1303               	bcf	3,6	;RP1=0, select bank0
 10617  00F9  00A1               	movwf	__div_to_l_@f1+1
 10618  00FA  1683               	bsf	3,5	;RP0=1, select bank1
 10619  00FB  1303               	bcf	3,6	;RP1=0, select bank1
 10620  00FC  0845               	movf	sprintf@fval^(0+128),w
 10621  00FD  1283               	bcf	3,5	;RP0=0, select bank0
 10622  00FE  1303               	bcf	3,6	;RP1=0, select bank0
 10623  00FF  00A0               	movwf	__div_to_l_@f1
 10624  0100  1683               	bsf	3,5	;RP0=1, select bank1
 10625  0101  1303               	bcf	3,6	;RP1=0, select bank1
 10626  0102  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10627  0103  1283               	bcf	3,5	;RP0=0, select bank0
 10628  0104  1303               	bcf	3,6	;RP1=0, select bank0
 10629  0105  00A7               	movwf	__div_to_l_@f2+3
 10630  0106  1683               	bsf	3,5	;RP0=1, select bank1
 10631  0107  1303               	bcf	3,6	;RP1=0, select bank1
 10632  0108  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10633  0109  1283               	bcf	3,5	;RP0=0, select bank0
 10634  010A  1303               	bcf	3,6	;RP1=0, select bank0
 10635  010B  00A6               	movwf	__div_to_l_@f2+2
 10636  010C  1683               	bsf	3,5	;RP0=1, select bank1
 10637  010D  1303               	bcf	3,6	;RP1=0, select bank1
 10638  010E  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10639  010F  1283               	bcf	3,5	;RP0=0, select bank0
 10640  0110  1303               	bcf	3,6	;RP1=0, select bank0
 10641  0111  00A5               	movwf	__div_to_l_@f2+1
 10642  0112  1683               	bsf	3,5	;RP0=1, select bank1
 10643  0113  1303               	bcf	3,6	;RP1=0, select bank1
 10644  0114  083F               	movf	sprintf@tmpval^(0+128),w
 10645  0115  1283               	bcf	3,5	;RP0=0, select bank0
 10646  0116  1303               	bcf	3,6	;RP1=0, select bank0
 10647  0117  00A4               	movwf	__div_to_l_@f2
 10648  0118  160A  158A  2742  120A  118A  	fcall	__div_to_l_
 10649  011D  1283               	bcf	3,5	;RP0=0, select bank0
 10650  011E  1303               	bcf	3,6	;RP1=0, select bank0
 10651  011F  0823               	movf	?__div_to_l_+3,w
 10652  0120  1683               	bsf	3,5	;RP0=1, select bank1
 10653  0121  1303               	bcf	3,6	;RP1=0, select bank1
 10654  0122  00BA               	movwf	(sprintf@val+3)^(0+128)
 10655  0123  1283               	bcf	3,5	;RP0=0, select bank0
 10656  0124  1303               	bcf	3,6	;RP1=0, select bank0
 10657  0125  0822               	movf	?__div_to_l_+2,w
 10658  0126  1683               	bsf	3,5	;RP0=1, select bank1
 10659  0127  1303               	bcf	3,6	;RP1=0, select bank1
 10660  0128  00B9               	movwf	(sprintf@val+2)^(0+128)
 10661  0129  1283               	bcf	3,5	;RP0=0, select bank0
 10662  012A  1303               	bcf	3,6	;RP1=0, select bank0
 10663  012B  0821               	movf	?__div_to_l_+1,w
 10664  012C  1683               	bsf	3,5	;RP0=1, select bank1
 10665  012D  1303               	bcf	3,6	;RP1=0, select bank1
 10666  012E  00B8               	movwf	(sprintf@val+1)^(0+128)
 10667  012F  1283               	bcf	3,5	;RP0=0, select bank0
 10668  0130  1303               	bcf	3,6	;RP1=0, select bank0
 10669  0131  0820               	movf	?__div_to_l_,w
 10670  0132  1683               	bsf	3,5	;RP0=1, select bank1
 10671  0133  1303               	bcf	3,6	;RP1=0, select bank1
 10672  0134  00B7               	movwf	sprintf@val^(0+128)
 10673  0135                     l4319:
 10674                           
 10675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10676  0135  3000               	movlw	0
 10677  0136  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10678  0137  3000               	movlw	0
 10679  0138  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10680  0139  3000               	movlw	0
 10681  013A  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10682  013B  3000               	movlw	0
 10683  013C  00C5               	movwf	sprintf@fval^(0+128)
 10684                           
 10685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10686  013D  29A4               	goto	l4327
 10687  013E                     l4321:
 10688                           
 10689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10690  013E  1683               	bsf	3,5	;RP0=1, select bank1
 10691  013F  1303               	bcf	3,6	;RP1=0, select bank1
 10692  0140  0848               	movf	(sprintf@fval+3)^(0+128),w
 10693  0141  1283               	bcf	3,5	;RP0=0, select bank0
 10694  0142  1303               	bcf	3,6	;RP1=0, select bank0
 10695  0143  00DB               	movwf	___fltol@f1+3
 10696  0144  1683               	bsf	3,5	;RP0=1, select bank1
 10697  0145  1303               	bcf	3,6	;RP1=0, select bank1
 10698  0146  0847               	movf	(sprintf@fval+2)^(0+128),w
 10699  0147  1283               	bcf	3,5	;RP0=0, select bank0
 10700  0148  1303               	bcf	3,6	;RP1=0, select bank0
 10701  0149  00DA               	movwf	___fltol@f1+2
 10702  014A  1683               	bsf	3,5	;RP0=1, select bank1
 10703  014B  1303               	bcf	3,6	;RP1=0, select bank1
 10704  014C  0846               	movf	(sprintf@fval+1)^(0+128),w
 10705  014D  1283               	bcf	3,5	;RP0=0, select bank0
 10706  014E  1303               	bcf	3,6	;RP1=0, select bank0
 10707  014F  00D9               	movwf	___fltol@f1+1
 10708  0150  1683               	bsf	3,5	;RP0=1, select bank1
 10709  0151  1303               	bcf	3,6	;RP1=0, select bank1
 10710  0152  0845               	movf	sprintf@fval^(0+128),w
 10711  0153  1283               	bcf	3,5	;RP0=0, select bank0
 10712  0154  1303               	bcf	3,6	;RP1=0, select bank0
 10713  0155  00D8               	movwf	___fltol@f1
 10714  0156  160A  158A  254D  120A  118A  	fcall	___fltol
 10715  015B  1283               	bcf	3,5	;RP0=0, select bank0
 10716  015C  1303               	bcf	3,6	;RP1=0, select bank0
 10717  015D  085B               	movf	?___fltol+3,w
 10718  015E  1683               	bsf	3,5	;RP0=1, select bank1
 10719  015F  1303               	bcf	3,6	;RP1=0, select bank1
 10720  0160  00BA               	movwf	(sprintf@val+3)^(0+128)
 10721  0161  1283               	bcf	3,5	;RP0=0, select bank0
 10722  0162  1303               	bcf	3,6	;RP1=0, select bank0
 10723  0163  085A               	movf	?___fltol+2,w
 10724  0164  1683               	bsf	3,5	;RP0=1, select bank1
 10725  0165  1303               	bcf	3,6	;RP1=0, select bank1
 10726  0166  00B9               	movwf	(sprintf@val+2)^(0+128)
 10727  0167  1283               	bcf	3,5	;RP0=0, select bank0
 10728  0168  1303               	bcf	3,6	;RP1=0, select bank0
 10729  0169  0859               	movf	?___fltol+1,w
 10730  016A  1683               	bsf	3,5	;RP0=1, select bank1
 10731  016B  1303               	bcf	3,6	;RP1=0, select bank1
 10732  016C  00B8               	movwf	(sprintf@val+1)^(0+128)
 10733  016D  1283               	bcf	3,5	;RP0=0, select bank0
 10734  016E  1303               	bcf	3,6	;RP1=0, select bank0
 10735  016F  0858               	movf	?___fltol,w
 10736  0170  1683               	bsf	3,5	;RP0=1, select bank1
 10737  0171  1303               	bcf	3,6	;RP1=0, select bank1
 10738  0172  00B7               	movwf	sprintf@val^(0+128)
 10739  0173                     l4323:
 10740                           
 10741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10742  0173  083A               	movf	(sprintf@val+3)^(0+128),w
 10743  0174  00F6               	movwf	___xxtofl@val+3
 10744  0175  0839               	movf	(sprintf@val+2)^(0+128),w
 10745  0176  00F5               	movwf	___xxtofl@val+2
 10746  0177  0838               	movf	(sprintf@val+1)^(0+128),w
 10747  0178  00F4               	movwf	___xxtofl@val+1
 10748  0179  0837               	movf	sprintf@val^(0+128),w
 10749  017A  00F3               	movwf	___xxtofl@val
 10750  017B  3000               	movlw	0
 10751  017C  160A  158A  25C9  120A  118A  	fcall	___xxtofl
 10752  0181  0876               	movf	?___xxtofl+3,w
 10753  0182  1683               	bsf	3,5	;RP0=1, select bank1
 10754  0183  1303               	bcf	3,6	;RP1=0, select bank1
 10755  0184  00A3               	movwf	(___flsub@a+3)^(0+128)
 10756  0185  0875               	movf	?___xxtofl+2,w
 10757  0186  00A2               	movwf	(___flsub@a+2)^(0+128)
 10758  0187  0874               	movf	?___xxtofl+1,w
 10759  0188  00A1               	movwf	(___flsub@a+1)^(0+128)
 10760  0189  0873               	movf	?___xxtofl,w
 10761  018A  00A0               	movwf	___flsub@a^(0+128)
 10762  018B  0848               	movf	(sprintf@fval+3)^(0+128),w
 10763  018C  00A7               	movwf	(___flsub@b+3)^(0+128)
 10764  018D  0847               	movf	(sprintf@fval+2)^(0+128),w
 10765  018E  00A6               	movwf	(___flsub@b+2)^(0+128)
 10766  018F  0846               	movf	(sprintf@fval+1)^(0+128),w
 10767  0190  00A5               	movwf	(___flsub@b+1)^(0+128)
 10768  0191  0845               	movf	sprintf@fval^(0+128),w
 10769  0192  00A4               	movwf	___flsub@b^(0+128)
 10770  0193  160A  158A  232C  120A  118A  	fcall	___flsub
 10771  0198  1683               	bsf	3,5	;RP0=1, select bank1
 10772  0199  1303               	bcf	3,6	;RP1=0, select bank1
 10773  019A  0823               	movf	(?___flsub+3)^(0+128),w
 10774  019B  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10775  019C  0822               	movf	(?___flsub+2)^(0+128),w
 10776  019D  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10777  019E  0821               	movf	(?___flsub+1)^(0+128),w
 10778  019F  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10779  01A0  0820               	movf	?___flsub^(0+128),w
 10780  01A1  00C5               	movwf	sprintf@fval^(0+128)
 10781  01A2                     l4325:
 10782                           
 10783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10784  01A2  01C3               	clrf	sprintf@eexp^(0+128)
 10785  01A3  01C4               	clrf	(sprintf@eexp+1)^(0+128)
 10786  01A4                     l4327:
 10787                           
 10788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10789  01A4  01CC               	clrf	sprintf@c^(0+128)
 10790  01A5  0ACC               	incf	sprintf@c^(0+128),f
 10791  01A6                     l4333:
 10792                           
 10793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10794  01A6  084C               	movf	sprintf@c^(0+128),w
 10795  01A7  00AD               	movwf	??_sprintf^(0+128)
 10796  01A8  3001               	movlw	1
 10797  01A9                     u7165:
 10798  01A9  1003               	clrc
 10799  01AA  0DAD               	rlf	??_sprintf^(0+128),f
 10800  01AB  3EFF               	addlw	-1
 10801  01AC  1D03               	skipz
 10802  01AD  29A9               	goto	u7165
 10803  01AE  1003               	clrc
 10804  01AF  0D2D               	rlf	??_sprintf^(0+128),w
 10805  01B0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10806  01B1  0084               	movwf	4
 10807  01B2  120A  158A  200A  120A  118A  	fcall	stringdir
 10808  01B7  00AE               	movwf	(??_sprintf+1)^(0+128)
 10809  01B8  120A  158A  200A  120A  118A  	fcall	stringdir
 10810  01BD  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 10811  01BE  120A  158A  200A  120A  118A  	fcall	stringdir
 10812  01C3  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 10813  01C4  120A  158A  200A  120A  118A  	fcall	stringdir
 10814  01C9  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 10815  01CA  0831               	movf	(??_sprintf+4)^(0+128),w
 10816  01CB  023A               	subwf	(sprintf@val+3)^(0+128),w
 10817  01CC  1D03               	skipz
 10818  01CD  29D8               	goto	u7175
 10819  01CE  0830               	movf	(??_sprintf+3)^(0+128),w
 10820  01CF  0239               	subwf	(sprintf@val+2)^(0+128),w
 10821  01D0  1D03               	skipz
 10822  01D1  29D8               	goto	u7175
 10823  01D2  082F               	movf	(??_sprintf+2)^(0+128),w
 10824  01D3  0238               	subwf	(sprintf@val+1)^(0+128),w
 10825  01D4  1D03               	skipz
 10826  01D5  29D8               	goto	u7175
 10827  01D6  082E               	movf	(??_sprintf+1)^(0+128),w
 10828  01D7  0237               	subwf	sprintf@val^(0+128),w
 10829  01D8                     u7175:
 10830  01D8  1803               	skipnc
 10831  01D9  29DB               	goto	u7171
 10832  01DA  29DC               	goto	u7170
 10833  01DB                     u7171:
 10834  01DB  29DD               	goto	l4337
 10835  01DC                     u7170:
 10836  01DC  29E7               	goto	l4339
 10837  01DD                     l4337:
 10838  01DD  3001               	movlw	1
 10839  01DE  00AD               	movwf	??_sprintf^(0+128)
 10840  01DF  082D               	movf	??_sprintf^(0+128),w
 10841  01E0  07CC               	addwf	sprintf@c^(0+128),f
 10842  01E1  300A               	movlw	10
 10843  01E2  064C               	xorwf	sprintf@c^(0+128),w
 10844  01E3  1D03               	btfss	3,2
 10845  01E4  29E6               	goto	u7181
 10846  01E5  29E7               	goto	u7180
 10847  01E6                     u7181:
 10848  01E6  29A6               	goto	l4333
 10849  01E7                     u7180:
 10850  01E7                     l4339:
 10851                           
 10852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10853  01E7  084C               	movf	sprintf@c^(0+128),w
 10854  01E8  074A               	addwf	sprintf@prec^(0+128),w
 10855  01E9  00AD               	movwf	??_sprintf^(0+128)
 10856  01EA  084B               	movf	(sprintf@prec+1)^(0+128),w
 10857  01EB  1803               	skipnc
 10858  01EC  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 10859  01ED  00AE               	movwf	(??_sprintf^(0+128)+1)
 10860  01EE  0843               	movf	sprintf@eexp^(0+128),w
 10861  01EF  072D               	addwf	??_sprintf^(0+128),w
 10862  01F0  00AF               	movwf	(??_sprintf+2)^(0+128)
 10863  01F1  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10864  01F2  1803               	skipnc
 10865  01F3  0A44               	incf	(sprintf@eexp+1)^(0+128),w
 10866  01F4  072E               	addwf	(??_sprintf+1)^(0+128),w
 10867  01F5  00B0               	movwf	(??_sprintf+3)^(0+128)
 10868  01F6  082F               	movf	(??_sprintf+2)^(0+128),w
 10869  01F7  02BD               	subwf	sprintf@width^(0+128),f
 10870  01F8  0830               	movf	(??_sprintf+3)^(0+128),w
 10871  01F9  1C03               	skipc
 10872  01FA  03BE               	decf	(sprintf@width+1)^(0+128),f
 10873  01FB  02BE               	subwf	(sprintf@width+1)^(0+128),f
 10874                           
 10875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10876  01FC  084A               	movf	sprintf@prec^(0+128),w
 10877  01FD  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10878  01FE  1903               	btfsc	3,2
 10879  01FF  2A01               	goto	u7191
 10880  0200  2A02               	goto	u7190
 10881  0201                     u7191:
 10882  0201  2A08               	goto	l4343
 10883  0202                     u7190:
 10884  0202                     l4341:
 10885                           
 10886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10887  0202  30FF               	movlw	255
 10888  0203  07BD               	addwf	sprintf@width^(0+128),f
 10889  0204  1803               	skipnc
 10890  0205  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10891  0206  30FF               	movlw	255
 10892  0207  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10893  0208                     l4343:
 10894                           
 10895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10896  0208  3003               	movlw	3
 10897  0209  053B               	andwf	sprintf@flag^(0+128),w
 10898  020A  00AD               	movwf	??_sprintf^(0+128)
 10899  020B  3000               	movlw	0
 10900  020C  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10901  020D  00AE               	movwf	(??_sprintf+1)^(0+128)
 10902  020E  082D               	movf	??_sprintf^(0+128),w
 10903  020F  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10904  0210  1903               	btfsc	3,2
 10905  0211  2A13               	goto	u7201
 10906  0212  2A14               	goto	u7200
 10907  0213                     u7201:
 10908  0213  2A29               	goto	l4353
 10909  0214                     u7200:
 10910  0214                     l4345:
 10911                           
 10912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10913  0214  30FF               	movlw	255
 10914  0215  07BD               	addwf	sprintf@width^(0+128),f
 10915  0216  1803               	skipnc
 10916  0217  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10917  0218  30FF               	movlw	255
 10918  0219  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10919  021A  2A29               	goto	l4353
 10920  021B                     l4347:
 10921                           
 10922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10923  021B  3020               	movlw	32
 10924  021C  1683               	bsf	3,5	;RP0=1, select bank1
 10925  021D  1303               	bcf	3,6	;RP1=0, select bank1
 10926  021E  00AD               	movwf	??_sprintf^(0+128)
 10927  021F  0849               	movf	sprintf@sp^(0+128),w
 10928  0220  0084               	movwf	4
 10929  0221  082D               	movf	??_sprintf^(0+128),w
 10930  0222  1783               	bsf	3,7	;select IRP bank2
 10931  0223  0080               	movwf	0
 10932  0224                     l4349:
 10933  0224  3001               	movlw	1
 10934  0225  00AD               	movwf	??_sprintf^(0+128)
 10935  0226  082D               	movf	??_sprintf^(0+128),w
 10936  0227  07C9               	addwf	sprintf@sp^(0+128),f
 10937  0228  2A14               	goto	l4345
 10938  0229                     l4353:
 10939                           
 10940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10941  0229  083E               	movf	(sprintf@width+1)^(0+128),w
 10942  022A  3A80               	xorlw	128
 10943  022B  00FF               	movwf	btemp+1
 10944  022C  3080               	movlw	128
 10945  022D  027F               	subwf	btemp+1,w
 10946  022E  1D03               	skipz
 10947  022F  2A32               	goto	u7215
 10948  0230  3001               	movlw	1
 10949  0231  023D               	subwf	sprintf@width^(0+128),w
 10950  0232                     u7215:
 10951  0232  1803               	skipnc
 10952  0233  2A35               	goto	u7211
 10953  0234  2A36               	goto	u7210
 10954  0235                     u7211:
 10955  0235  2A1B               	goto	l4347
 10956  0236                     u7210:
 10957  0236                     l4355:
 10958                           
 10959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10960  0236  3003               	movlw	3
 10961  0237  1683               	bsf	3,5	;RP0=1, select bank1
 10962  0238  1303               	bcf	3,6	;RP1=0, select bank1
 10963  0239  053B               	andwf	sprintf@flag^(0+128),w
 10964  023A  00AD               	movwf	??_sprintf^(0+128)
 10965  023B  3000               	movlw	0
 10966  023C  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10967  023D  00AE               	movwf	(??_sprintf+1)^(0+128)
 10968  023E  082D               	movf	??_sprintf^(0+128),w
 10969  023F  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10970  0240  1903               	btfsc	3,2
 10971  0241  2A43               	goto	u7221
 10972  0242  2A44               	goto	u7220
 10973  0243                     u7221:
 10974  0243  2AF6               	goto	l382
 10975  0244                     u7220:
 10976  0244                     l4357:
 10977                           
 10978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10979  0244  302D               	movlw	45
 10980  0245  00AD               	movwf	??_sprintf^(0+128)
 10981  0246  0849               	movf	sprintf@sp^(0+128),w
 10982  0247  0084               	movwf	4
 10983  0248  082D               	movf	??_sprintf^(0+128),w
 10984  0249  1783               	bsf	3,7	;select IRP bank2
 10985  024A  0080               	movwf	0
 10986  024B                     l4359:
 10987  024B  3001               	movlw	1
 10988  024C  00AD               	movwf	??_sprintf^(0+128)
 10989  024D  082D               	movf	??_sprintf^(0+128),w
 10990  024E  07C9               	addwf	sprintf@sp^(0+128),f
 10991  024F  2AF6               	goto	l382
 10992  0250                     l4361:
 10993                           
 10994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10995  0250  084C               	movf	sprintf@c^(0+128),w
 10996  0251  00AD               	movwf	??_sprintf^(0+128)
 10997  0252  3001               	movlw	1
 10998  0253                     u7235:
 10999  0253  1003               	clrc
 11000  0254  0DAD               	rlf	??_sprintf^(0+128),f
 11001  0255  3EFF               	addlw	-1
 11002  0256  1D03               	skipz
 11003  0257  2A53               	goto	u7235
 11004  0258  1003               	clrc
 11005  0259  0D2D               	rlf	??_sprintf^(0+128),w
 11006  025A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11007  025B  0084               	movwf	4
 11008  025C  120A  158A  200A  120A  118A  	fcall	stringdir
 11009  0261  1283               	bcf	3,5	;RP0=0, select bank0
 11010  0262  1303               	bcf	3,6	;RP1=0, select bank0
 11011  0263  00A0               	movwf	___lldiv@divisor
 11012  0264  120A  158A  200A  120A  118A  	fcall	stringdir
 11013  0269  00A1               	movwf	___lldiv@divisor+1
 11014  026A  120A  158A  200A  120A  118A  	fcall	stringdir
 11015  026F  00A2               	movwf	___lldiv@divisor+2
 11016  0270  120A  158A  200A  120A  118A  	fcall	stringdir
 11017  0275  00A3               	movwf	___lldiv@divisor+3
 11018  0276  1683               	bsf	3,5	;RP0=1, select bank1
 11019  0277  1303               	bcf	3,6	;RP1=0, select bank1
 11020  0278  083A               	movf	(sprintf@val+3)^(0+128),w
 11021  0279  1283               	bcf	3,5	;RP0=0, select bank0
 11022  027A  1303               	bcf	3,6	;RP1=0, select bank0
 11023  027B  00A7               	movwf	___lldiv@dividend+3
 11024  027C  1683               	bsf	3,5	;RP0=1, select bank1
 11025  027D  1303               	bcf	3,6	;RP1=0, select bank1
 11026  027E  0839               	movf	(sprintf@val+2)^(0+128),w
 11027  027F  1283               	bcf	3,5	;RP0=0, select bank0
 11028  0280  1303               	bcf	3,6	;RP1=0, select bank0
 11029  0281  00A6               	movwf	___lldiv@dividend+2
 11030  0282  1683               	bsf	3,5	;RP0=1, select bank1
 11031  0283  1303               	bcf	3,6	;RP1=0, select bank1
 11032  0284  0838               	movf	(sprintf@val+1)^(0+128),w
 11033  0285  1283               	bcf	3,5	;RP0=0, select bank0
 11034  0286  1303               	bcf	3,6	;RP1=0, select bank0
 11035  0287  00A5               	movwf	___lldiv@dividend+1
 11036  0288  1683               	bsf	3,5	;RP0=1, select bank1
 11037  0289  1303               	bcf	3,6	;RP1=0, select bank1
 11038  028A  0837               	movf	sprintf@val^(0+128),w
 11039  028B  1283               	bcf	3,5	;RP0=0, select bank0
 11040  028C  1303               	bcf	3,6	;RP1=0, select bank0
 11041  028D  00A4               	movwf	___lldiv@dividend
 11042  028E  160A  158A  24E5  120A  118A  	fcall	___lldiv
 11043  0293  1283               	bcf	3,5	;RP0=0, select bank0
 11044  0294  1303               	bcf	3,6	;RP1=0, select bank0
 11045  0295  0823               	movf	?___lldiv+3,w
 11046  0296  1683               	bsf	3,5	;RP0=1, select bank1
 11047  0297  1303               	bcf	3,6	;RP1=0, select bank1
 11048  0298  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 11049  0299  1283               	bcf	3,5	;RP0=0, select bank0
 11050  029A  1303               	bcf	3,6	;RP1=0, select bank0
 11051  029B  0822               	movf	?___lldiv+2,w
 11052  029C  1683               	bsf	3,5	;RP0=1, select bank1
 11053  029D  1303               	bcf	3,6	;RP1=0, select bank1
 11054  029E  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 11055  029F  1283               	bcf	3,5	;RP0=0, select bank0
 11056  02A0  1303               	bcf	3,6	;RP1=0, select bank0
 11057  02A1  0821               	movf	?___lldiv+1,w
 11058  02A2  1683               	bsf	3,5	;RP0=1, select bank1
 11059  02A3  1303               	bcf	3,6	;RP1=0, select bank1
 11060  02A4  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 11061  02A5  1283               	bcf	3,5	;RP0=0, select bank0
 11062  02A6  1303               	bcf	3,6	;RP1=0, select bank0
 11063  02A7  0820               	movf	?___lldiv,w
 11064  02A8  1683               	bsf	3,5	;RP0=1, select bank1
 11065  02A9  1303               	bcf	3,6	;RP1=0, select bank1
 11066  02AA  00BF               	movwf	sprintf@tmpval^(0+128)
 11067  02AB                     l4363:
 11068                           
 11069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 11070  02AB  3000               	movlw	0
 11071  02AC  1283               	bcf	3,5	;RP0=0, select bank0
 11072  02AD  1303               	bcf	3,6	;RP1=0, select bank0
 11073  02AE  00A3               	movwf	___llmod@divisor+3
 11074  02AF  3000               	movlw	0
 11075  02B0  00A2               	movwf	___llmod@divisor+2
 11076  02B1  3000               	movlw	0
 11077  02B2  00A1               	movwf	___llmod@divisor+1
 11078  02B3  300A               	movlw	10
 11079  02B4  00A0               	movwf	___llmod@divisor
 11080  02B5  1683               	bsf	3,5	;RP0=1, select bank1
 11081  02B6  1303               	bcf	3,6	;RP1=0, select bank1
 11082  02B7  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 11083  02B8  1283               	bcf	3,5	;RP0=0, select bank0
 11084  02B9  1303               	bcf	3,6	;RP1=0, select bank0
 11085  02BA  00A7               	movwf	___llmod@dividend+3
 11086  02BB  1683               	bsf	3,5	;RP0=1, select bank1
 11087  02BC  1303               	bcf	3,6	;RP1=0, select bank1
 11088  02BD  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 11089  02BE  1283               	bcf	3,5	;RP0=0, select bank0
 11090  02BF  1303               	bcf	3,6	;RP1=0, select bank0
 11091  02C0  00A6               	movwf	___llmod@dividend+2
 11092  02C1  1683               	bsf	3,5	;RP0=1, select bank1
 11093  02C2  1303               	bcf	3,6	;RP1=0, select bank1
 11094  02C3  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 11095  02C4  1283               	bcf	3,5	;RP0=0, select bank0
 11096  02C5  1303               	bcf	3,6	;RP1=0, select bank0
 11097  02C6  00A5               	movwf	___llmod@dividend+1
 11098  02C7  1683               	bsf	3,5	;RP0=1, select bank1
 11099  02C8  1303               	bcf	3,6	;RP1=0, select bank1
 11100  02C9  083F               	movf	sprintf@tmpval^(0+128),w
 11101  02CA  1283               	bcf	3,5	;RP0=0, select bank0
 11102  02CB  1303               	bcf	3,6	;RP1=0, select bank0
 11103  02CC  00A4               	movwf	___llmod@dividend
 11104  02CD  160A  158A  237C  120A  118A  	fcall	___llmod
 11105  02D2  1283               	bcf	3,5	;RP0=0, select bank0
 11106  02D3  1303               	bcf	3,6	;RP1=0, select bank0
 11107  02D4  0823               	movf	?___llmod+3,w
 11108  02D5  1683               	bsf	3,5	;RP0=1, select bank1
 11109  02D6  1303               	bcf	3,6	;RP1=0, select bank1
 11110  02D7  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 11111  02D8  1283               	bcf	3,5	;RP0=0, select bank0
 11112  02D9  1303               	bcf	3,6	;RP1=0, select bank0
 11113  02DA  0822               	movf	?___llmod+2,w
 11114  02DB  1683               	bsf	3,5	;RP0=1, select bank1
 11115  02DC  1303               	bcf	3,6	;RP1=0, select bank1
 11116  02DD  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 11117  02DE  1283               	bcf	3,5	;RP0=0, select bank0
 11118  02DF  1303               	bcf	3,6	;RP1=0, select bank0
 11119  02E0  0821               	movf	?___llmod+1,w
 11120  02E1  1683               	bsf	3,5	;RP0=1, select bank1
 11121  02E2  1303               	bcf	3,6	;RP1=0, select bank1
 11122  02E3  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 11123  02E4  1283               	bcf	3,5	;RP0=0, select bank0
 11124  02E5  1303               	bcf	3,6	;RP1=0, select bank0
 11125  02E6  0820               	movf	?___llmod,w
 11126  02E7  1683               	bsf	3,5	;RP0=1, select bank1
 11127  02E8  1303               	bcf	3,6	;RP1=0, select bank1
 11128  02E9  00BF               	movwf	sprintf@tmpval^(0+128)
 11129  02EA                     l4365:
 11130                           
 11131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11132  02EA  083F               	movf	sprintf@tmpval^(0+128),w
 11133  02EB  3E30               	addlw	48
 11134  02EC  00AD               	movwf	??_sprintf^(0+128)
 11135  02ED  0849               	movf	sprintf@sp^(0+128),w
 11136  02EE  0084               	movwf	4
 11137  02EF  082D               	movf	??_sprintf^(0+128),w
 11138  02F0  1783               	bsf	3,7	;select IRP bank2
 11139  02F1  0080               	movwf	0
 11140  02F2  3001               	movlw	1
 11141  02F3  00AD               	movwf	??_sprintf^(0+128)
 11142  02F4  082D               	movf	??_sprintf^(0+128),w
 11143  02F5  07C9               	addwf	sprintf@sp^(0+128),f
 11144  02F6                     l382:	
 11145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 11146                           
 11147                           
 11148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11149  02F6  3001               	movlw	1
 11150  02F7  02CC               	subwf	sprintf@c^(0+128),f
 11151  02F8  0A4C               	incf	sprintf@c^(0+128),w
 11152  02F9  1D03               	btfss	3,2
 11153  02FA  2AFC               	goto	u7241
 11154  02FB  2AFD               	goto	u7240
 11155  02FC                     u7241:
 11156  02FC  2A50               	goto	l4361
 11157  02FD                     u7240:
 11158  02FD  2B11               	goto	l4373
 11159  02FE                     l4367:
 11160                           
 11161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11162  02FE  3030               	movlw	48
 11163  02FF  1683               	bsf	3,5	;RP0=1, select bank1
 11164  0300  1303               	bcf	3,6	;RP1=0, select bank1
 11165  0301  00AD               	movwf	??_sprintf^(0+128)
 11166  0302  0849               	movf	sprintf@sp^(0+128),w
 11167  0303  0084               	movwf	4
 11168  0304  082D               	movf	??_sprintf^(0+128),w
 11169  0305  1783               	bsf	3,7	;select IRP bank2
 11170  0306  0080               	movwf	0
 11171  0307                     l4369:
 11172  0307  3001               	movlw	1
 11173  0308  00AD               	movwf	??_sprintf^(0+128)
 11174  0309  082D               	movf	??_sprintf^(0+128),w
 11175  030A  07C9               	addwf	sprintf@sp^(0+128),f
 11176  030B                     l4371:
 11177                           
 11178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11179  030B  30FF               	movlw	255
 11180  030C  07C3               	addwf	sprintf@eexp^(0+128),f
 11181  030D  1803               	skipnc
 11182  030E  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 11183  030F  30FF               	movlw	255
 11184  0310  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 11185  0311                     l4373:
 11186                           
 11187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11188  0311  0844               	movf	(sprintf@eexp+1)^(0+128),w
 11189  0312  3A80               	xorlw	128
 11190  0313  00FF               	movwf	btemp+1
 11191  0314  3080               	movlw	128
 11192  0315  027F               	subwf	btemp+1,w
 11193  0316  1D03               	skipz
 11194  0317  2B1A               	goto	u7255
 11195  0318  3001               	movlw	1
 11196  0319  0243               	subwf	sprintf@eexp^(0+128),w
 11197  031A                     u7255:
 11198  031A  1803               	skipnc
 11199  031B  2B1D               	goto	u7251
 11200  031C  2B1E               	goto	u7250
 11201  031D                     u7251:
 11202  031D  2AFE               	goto	l4367
 11203  031E                     u7250:
 11204  031E                     l4375:
 11205                           
 11206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11207  031E  1683               	bsf	3,5	;RP0=1, select bank1
 11208  031F  1303               	bcf	3,6	;RP1=0, select bank1
 11209  0320  084B               	movf	(sprintf@prec+1)^(0+128),w
 11210  0321  3A80               	xorlw	128
 11211  0322  00FF               	movwf	btemp+1
 11212  0323  3080               	movlw	128
 11213  0324  027F               	subwf	btemp+1,w
 11214  0325  1D03               	skipz
 11215  0326  2B29               	goto	u7265
 11216  0327  3009               	movlw	9
 11217  0328  024A               	subwf	sprintf@prec^(0+128),w
 11218  0329                     u7265:
 11219  0329  1C03               	skipc
 11220  032A  2B2C               	goto	u7261
 11221  032B  2B2D               	goto	u7260
 11222  032C                     u7261:
 11223  032C  2B34               	goto	l4379
 11224  032D                     u7260:
 11225  032D                     l4377:
 11226                           
 11227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11228  032D  3008               	movlw	8
 11229  032E  1683               	bsf	3,5	;RP0=1, select bank1
 11230  032F  1303               	bcf	3,6	;RP1=0, select bank1
 11231  0330  00AD               	movwf	??_sprintf^(0+128)
 11232  0331  082D               	movf	??_sprintf^(0+128),w
 11233  0332  00CC               	movwf	sprintf@c^(0+128)
 11234  0333  2B3A               	goto	l389
 11235  0334                     l4379:
 11236                           
 11237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11238  0334  1683               	bsf	3,5	;RP0=1, select bank1
 11239  0335  1303               	bcf	3,6	;RP1=0, select bank1
 11240  0336  084A               	movf	sprintf@prec^(0+128),w
 11241  0337  00AD               	movwf	??_sprintf^(0+128)
 11242  0338  082D               	movf	??_sprintf^(0+128),w
 11243  0339  00CC               	movwf	sprintf@c^(0+128)
 11244  033A                     l389:
 11245                           
 11246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11247  033A  084C               	movf	sprintf@c^(0+128),w
 11248  033B  00AD               	movwf	??_sprintf^(0+128)
 11249  033C  01AE               	clrf	(??_sprintf^(0+128)+1)
 11250  033D  082D               	movf	??_sprintf^(0+128),w
 11251  033E  02CA               	subwf	sprintf@prec^(0+128),f
 11252  033F  082E               	movf	(??_sprintf+1)^(0+128),w
 11253  0340  1C03               	skipc
 11254  0341  03CB               	decf	(sprintf@prec+1)^(0+128),f
 11255  0342  02CB               	subwf	(sprintf@prec+1)^(0+128),f
 11256  0343                     l4381:
 11257                           
 11258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11259  0343  084C               	movf	sprintf@c^(0+128),w
 11260  0344  1903               	btfsc	3,2
 11261  0345  2B47               	goto	u7271
 11262  0346  2B48               	goto	u7270
 11263  0347                     u7271:
 11264  0347  2B53               	goto	l4387
 11265  0348                     u7270:
 11266  0348                     l4383:
 11267                           
 11268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11269  0348  302E               	movlw	46
 11270  0349  00AD               	movwf	??_sprintf^(0+128)
 11271  034A  0849               	movf	sprintf@sp^(0+128),w
 11272  034B  0084               	movwf	4
 11273  034C  082D               	movf	??_sprintf^(0+128),w
 11274  034D  1783               	bsf	3,7	;select IRP bank2
 11275  034E  0080               	movwf	0
 11276  034F                     l4385:
 11277  034F  3001               	movlw	1
 11278  0350  00AD               	movwf	??_sprintf^(0+128)
 11279  0351  082D               	movf	??_sprintf^(0+128),w
 11280  0352  07C9               	addwf	sprintf@sp^(0+128),f
 11281  0353                     l4387:
 11282                           
 11283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11284  0353  084C               	movf	sprintf@c^(0+128),w
 11285  0354  120A  158A  249D  120A  118A  	fcall	_scale
 11286  0359  1283               	bcf	3,5	;RP0=0, select bank0
 11287  035A  1303               	bcf	3,6	;RP1=0, select bank0
 11288  035B  0848               	movf	?_scale+3,w
 11289  035C  1683               	bsf	3,5	;RP0=1, select bank1
 11290  035D  1303               	bcf	3,6	;RP1=0, select bank1
 11291  035E  00B5               	movwf	(_sprintf$1274+3)^(0+128)
 11292  035F  1283               	bcf	3,5	;RP0=0, select bank0
 11293  0360  1303               	bcf	3,6	;RP1=0, select bank0
 11294  0361  0847               	movf	?_scale+2,w
 11295  0362  1683               	bsf	3,5	;RP0=1, select bank1
 11296  0363  1303               	bcf	3,6	;RP1=0, select bank1
 11297  0364  00B4               	movwf	(_sprintf$1274+2)^(0+128)
 11298  0365  1283               	bcf	3,5	;RP0=0, select bank0
 11299  0366  1303               	bcf	3,6	;RP1=0, select bank0
 11300  0367  0846               	movf	?_scale+1,w
 11301  0368  1683               	bsf	3,5	;RP0=1, select bank1
 11302  0369  1303               	bcf	3,6	;RP1=0, select bank1
 11303  036A  00B3               	movwf	(_sprintf$1274+1)^(0+128)
 11304  036B  1283               	bcf	3,5	;RP0=0, select bank0
 11305  036C  1303               	bcf	3,6	;RP1=0, select bank0
 11306  036D  0845               	movf	?_scale,w
 11307  036E  1683               	bsf	3,5	;RP0=1, select bank1
 11308  036F  1303               	bcf	3,6	;RP1=0, select bank1
 11309  0370  00B2               	movwf	_sprintf$1274^(0+128)
 11310  0371                     l4389:
 11311                           
 11312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11313  0371  0835               	movf	(_sprintf$1274+3)^(0+128),w
 11314  0372  1283               	bcf	3,5	;RP0=0, select bank0
 11315  0373  1303               	bcf	3,6	;RP1=0, select bank0
 11316  0374  00B2               	movwf	___flmul@a+3
 11317  0375  1683               	bsf	3,5	;RP0=1, select bank1
 11318  0376  1303               	bcf	3,6	;RP1=0, select bank1
 11319  0377  0834               	movf	(_sprintf$1274+2)^(0+128),w
 11320  0378  1283               	bcf	3,5	;RP0=0, select bank0
 11321  0379  1303               	bcf	3,6	;RP1=0, select bank0
 11322  037A  00B1               	movwf	___flmul@a+2
 11323  037B  1683               	bsf	3,5	;RP0=1, select bank1
 11324  037C  1303               	bcf	3,6	;RP1=0, select bank1
 11325  037D  0833               	movf	(_sprintf$1274+1)^(0+128),w
 11326  037E  1283               	bcf	3,5	;RP0=0, select bank0
 11327  037F  1303               	bcf	3,6	;RP1=0, select bank0
 11328  0380  00B0               	movwf	___flmul@a+1
 11329  0381  1683               	bsf	3,5	;RP0=1, select bank1
 11330  0382  1303               	bcf	3,6	;RP1=0, select bank1
 11331  0383  0832               	movf	_sprintf$1274^(0+128),w
 11332  0384  1283               	bcf	3,5	;RP0=0, select bank0
 11333  0385  1303               	bcf	3,6	;RP1=0, select bank0
 11334  0386  00AF               	movwf	___flmul@a
 11335  0387  1683               	bsf	3,5	;RP0=1, select bank1
 11336  0388  1303               	bcf	3,6	;RP1=0, select bank1
 11337  0389  0848               	movf	(sprintf@fval+3)^(0+128),w
 11338  038A  1283               	bcf	3,5	;RP0=0, select bank0
 11339  038B  1303               	bcf	3,6	;RP1=0, select bank0
 11340  038C  00AE               	movwf	___flmul@b+3
 11341  038D  1683               	bsf	3,5	;RP0=1, select bank1
 11342  038E  1303               	bcf	3,6	;RP1=0, select bank1
 11343  038F  0847               	movf	(sprintf@fval+2)^(0+128),w
 11344  0390  1283               	bcf	3,5	;RP0=0, select bank0
 11345  0391  1303               	bcf	3,6	;RP1=0, select bank0
 11346  0392  00AD               	movwf	___flmul@b+2
 11347  0393  1683               	bsf	3,5	;RP0=1, select bank1
 11348  0394  1303               	bcf	3,6	;RP1=0, select bank1
 11349  0395  0846               	movf	(sprintf@fval+1)^(0+128),w
 11350  0396  1283               	bcf	3,5	;RP0=0, select bank0
 11351  0397  1303               	bcf	3,6	;RP1=0, select bank0
 11352  0398  00AC               	movwf	___flmul@b+1
 11353  0399  1683               	bsf	3,5	;RP0=1, select bank1
 11354  039A  1303               	bcf	3,6	;RP1=0, select bank1
 11355  039B  0845               	movf	sprintf@fval^(0+128),w
 11356  039C  1283               	bcf	3,5	;RP0=0, select bank0
 11357  039D  1303               	bcf	3,6	;RP1=0, select bank0
 11358  039E  00AB               	movwf	___flmul@b
 11359  039F  120A  158A  213C  120A  118A  	fcall	___flmul
 11360  03A4  1283               	bcf	3,5	;RP0=0, select bank0
 11361  03A5  1303               	bcf	3,6	;RP1=0, select bank0
 11362  03A6  082E               	movf	?___flmul+3,w
 11363  03A7  00DB               	movwf	___fltol@f1+3
 11364  03A8  082D               	movf	?___flmul+2,w
 11365  03A9  00DA               	movwf	___fltol@f1+2
 11366  03AA  082C               	movf	?___flmul+1,w
 11367  03AB  00D9               	movwf	___fltol@f1+1
 11368  03AC  082B               	movf	?___flmul,w
 11369  03AD  00D8               	movwf	___fltol@f1
 11370  03AE  160A  158A  254D  120A  118A  	fcall	___fltol
 11371  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 11372  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 11373  03B5  085B               	movf	?___fltol+3,w
 11374  03B6  1683               	bsf	3,5	;RP0=1, select bank1
 11375  03B7  1303               	bcf	3,6	;RP1=0, select bank1
 11376  03B8  00BA               	movwf	(sprintf@val+3)^(0+128)
 11377  03B9  1283               	bcf	3,5	;RP0=0, select bank0
 11378  03BA  1303               	bcf	3,6	;RP1=0, select bank0
 11379  03BB  085A               	movf	?___fltol+2,w
 11380  03BC  1683               	bsf	3,5	;RP0=1, select bank1
 11381  03BD  1303               	bcf	3,6	;RP1=0, select bank1
 11382  03BE  00B9               	movwf	(sprintf@val+2)^(0+128)
 11383  03BF  1283               	bcf	3,5	;RP0=0, select bank0
 11384  03C0  1303               	bcf	3,6	;RP1=0, select bank0
 11385  03C1  0859               	movf	?___fltol+1,w
 11386  03C2  1683               	bsf	3,5	;RP0=1, select bank1
 11387  03C3  1303               	bcf	3,6	;RP1=0, select bank1
 11388  03C4  00B8               	movwf	(sprintf@val+1)^(0+128)
 11389  03C5  1283               	bcf	3,5	;RP0=0, select bank0
 11390  03C6  1303               	bcf	3,6	;RP1=0, select bank0
 11391  03C7  0858               	movf	?___fltol,w
 11392  03C8  1683               	bsf	3,5	;RP0=1, select bank1
 11393  03C9  1303               	bcf	3,6	;RP1=0, select bank1
 11394  03CA  00B7               	movwf	sprintf@val^(0+128)
 11395                           
 11396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11397  03CB  2CCD               	goto	l4399
 11398  03CC                     l4391:
 11399                           
 11400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11401  03CC  084C               	movf	sprintf@c^(0+128),w
 11402  03CD  00AD               	movwf	??_sprintf^(0+128)
 11403  03CE  3001               	movlw	1
 11404  03CF                     u7285:
 11405  03CF  1003               	clrc
 11406  03D0  0DAD               	rlf	??_sprintf^(0+128),f
 11407  03D1  3EFF               	addlw	-1
 11408  03D2  1D03               	skipz
 11409  03D3  2BCF               	goto	u7285
 11410  03D4  1003               	clrc
 11411  03D5  0D2D               	rlf	??_sprintf^(0+128),w
 11412  03D6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11413  03D7  0084               	movwf	4
 11414  03D8  120A  158A  200A  120A  118A  	fcall	stringdir
 11415  03DD  1283               	bcf	3,5	;RP0=0, select bank0
 11416  03DE  1303               	bcf	3,6	;RP1=0, select bank0
 11417  03DF  00A0               	movwf	___lldiv@divisor
 11418  03E0  120A  158A  200A  120A  118A  	fcall	stringdir
 11419  03E5  00A1               	movwf	___lldiv@divisor+1
 11420  03E6  120A  158A  200A  120A  118A  	fcall	stringdir
 11421  03EB  00A2               	movwf	___lldiv@divisor+2
 11422  03EC  120A  158A  200A  120A  118A  	fcall	stringdir
 11423  03F1  00A3               	movwf	___lldiv@divisor+3
 11424  03F2  1683               	bsf	3,5	;RP0=1, select bank1
 11425  03F3  1303               	bcf	3,6	;RP1=0, select bank1
 11426  03F4  083A               	movf	(sprintf@val+3)^(0+128),w
 11427  03F5  1283               	bcf	3,5	;RP0=0, select bank0
 11428  03F6  1303               	bcf	3,6	;RP1=0, select bank0
 11429  03F7  00A7               	movwf	___lldiv@dividend+3
 11430  03F8  1683               	bsf	3,5	;RP0=1, select bank1
 11431  03F9  1303               	bcf	3,6	;RP1=0, select bank1
 11432  03FA  0839               	movf	(sprintf@val+2)^(0+128),w
 11433  03FB  1283               	bcf	3,5	;RP0=0, select bank0
 11434  03FC  1303               	bcf	3,6	;RP1=0, select bank0
 11435  03FD  00A6               	movwf	___lldiv@dividend+2
 11436  03FE  1683               	bsf	3,5	;RP0=1, select bank1
 11437  03FF  1303               	bcf	3,6	;RP1=0, select bank1
 11438  0400  0838               	movf	(sprintf@val+1)^(0+128),w
 11439  0401  1283               	bcf	3,5	;RP0=0, select bank0
 11440  0402  1303               	bcf	3,6	;RP1=0, select bank0
 11441  0403  00A5               	movwf	___lldiv@dividend+1
 11442  0404  1683               	bsf	3,5	;RP0=1, select bank1
 11443  0405  1303               	bcf	3,6	;RP1=0, select bank1
 11444  0406  0837               	movf	sprintf@val^(0+128),w
 11445  0407  1283               	bcf	3,5	;RP0=0, select bank0
 11446  0408  1303               	bcf	3,6	;RP1=0, select bank0
 11447  0409  00A4               	movwf	___lldiv@dividend
 11448  040A  160A  158A  24E5  120A  118A  	fcall	___lldiv
 11449  040F  1283               	bcf	3,5	;RP0=0, select bank0
 11450  0410  1303               	bcf	3,6	;RP1=0, select bank0
 11451  0411  0823               	movf	?___lldiv+3,w
 11452  0412  1683               	bsf	3,5	;RP0=1, select bank1
 11453  0413  1303               	bcf	3,6	;RP1=0, select bank1
 11454  0414  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 11455  0415  1283               	bcf	3,5	;RP0=0, select bank0
 11456  0416  1303               	bcf	3,6	;RP1=0, select bank0
 11457  0417  0822               	movf	?___lldiv+2,w
 11458  0418  1683               	bsf	3,5	;RP0=1, select bank1
 11459  0419  1303               	bcf	3,6	;RP1=0, select bank1
 11460  041A  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 11461  041B  1283               	bcf	3,5	;RP0=0, select bank0
 11462  041C  1303               	bcf	3,6	;RP1=0, select bank0
 11463  041D  0821               	movf	?___lldiv+1,w
 11464  041E  1683               	bsf	3,5	;RP0=1, select bank1
 11465  041F  1303               	bcf	3,6	;RP1=0, select bank1
 11466  0420  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 11467  0421  1283               	bcf	3,5	;RP0=0, select bank0
 11468  0422  1303               	bcf	3,6	;RP1=0, select bank0
 11469  0423  0820               	movf	?___lldiv,w
 11470  0424  1683               	bsf	3,5	;RP0=1, select bank1
 11471  0425  1303               	bcf	3,6	;RP1=0, select bank1
 11472  0426  00BF               	movwf	sprintf@tmpval^(0+128)
 11473  0427                     l4393:
 11474                           
 11475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11476  0427  3000               	movlw	0
 11477  0428  1283               	bcf	3,5	;RP0=0, select bank0
 11478  0429  1303               	bcf	3,6	;RP1=0, select bank0
 11479  042A  00A3               	movwf	___llmod@divisor+3
 11480  042B  3000               	movlw	0
 11481  042C  00A2               	movwf	___llmod@divisor+2
 11482  042D  3000               	movlw	0
 11483  042E  00A1               	movwf	___llmod@divisor+1
 11484  042F  300A               	movlw	10
 11485  0430  00A0               	movwf	___llmod@divisor
 11486  0431  1683               	bsf	3,5	;RP0=1, select bank1
 11487  0432  1303               	bcf	3,6	;RP1=0, select bank1
 11488  0433  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 11489  0434  1283               	bcf	3,5	;RP0=0, select bank0
 11490  0435  1303               	bcf	3,6	;RP1=0, select bank0
 11491  0436  00A7               	movwf	___llmod@dividend+3
 11492  0437  1683               	bsf	3,5	;RP0=1, select bank1
 11493  0438  1303               	bcf	3,6	;RP1=0, select bank1
 11494  0439  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 11495  043A  1283               	bcf	3,5	;RP0=0, select bank0
 11496  043B  1303               	bcf	3,6	;RP1=0, select bank0
 11497  043C  00A6               	movwf	___llmod@dividend+2
 11498  043D  1683               	bsf	3,5	;RP0=1, select bank1
 11499  043E  1303               	bcf	3,6	;RP1=0, select bank1
 11500  043F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 11501  0440  1283               	bcf	3,5	;RP0=0, select bank0
 11502  0441  1303               	bcf	3,6	;RP1=0, select bank0
 11503  0442  00A5               	movwf	___llmod@dividend+1
 11504  0443  1683               	bsf	3,5	;RP0=1, select bank1
 11505  0444  1303               	bcf	3,6	;RP1=0, select bank1
 11506  0445  083F               	movf	sprintf@tmpval^(0+128),w
 11507  0446  1283               	bcf	3,5	;RP0=0, select bank0
 11508  0447  1303               	bcf	3,6	;RP1=0, select bank0
 11509  0448  00A4               	movwf	___llmod@dividend
 11510  0449  160A  158A  237C  120A  118A  	fcall	___llmod
 11511  044E  1283               	bcf	3,5	;RP0=0, select bank0
 11512  044F  1303               	bcf	3,6	;RP1=0, select bank0
 11513  0450  0823               	movf	?___llmod+3,w
 11514  0451  1683               	bsf	3,5	;RP0=1, select bank1
 11515  0452  1303               	bcf	3,6	;RP1=0, select bank1
 11516  0453  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 11517  0454  1283               	bcf	3,5	;RP0=0, select bank0
 11518  0455  1303               	bcf	3,6	;RP1=0, select bank0
 11519  0456  0822               	movf	?___llmod+2,w
 11520  0457  1683               	bsf	3,5	;RP0=1, select bank1
 11521  0458  1303               	bcf	3,6	;RP1=0, select bank1
 11522  0459  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 11523  045A  1283               	bcf	3,5	;RP0=0, select bank0
 11524  045B  1303               	bcf	3,6	;RP1=0, select bank0
 11525  045C  0821               	movf	?___llmod+1,w
 11526  045D  1683               	bsf	3,5	;RP0=1, select bank1
 11527  045E  1303               	bcf	3,6	;RP1=0, select bank1
 11528  045F  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 11529  0460  1283               	bcf	3,5	;RP0=0, select bank0
 11530  0461  1303               	bcf	3,6	;RP1=0, select bank0
 11531  0462  0820               	movf	?___llmod,w
 11532  0463  1683               	bsf	3,5	;RP0=1, select bank1
 11533  0464  1303               	bcf	3,6	;RP1=0, select bank1
 11534  0465  00BF               	movwf	sprintf@tmpval^(0+128)
 11535  0466                     l4395:
 11536                           
 11537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11538  0466  083F               	movf	sprintf@tmpval^(0+128),w
 11539  0467  3E30               	addlw	48
 11540  0468  00AD               	movwf	??_sprintf^(0+128)
 11541  0469  0849               	movf	sprintf@sp^(0+128),w
 11542  046A  0084               	movwf	4
 11543  046B  082D               	movf	??_sprintf^(0+128),w
 11544  046C  1783               	bsf	3,7	;select IRP bank2
 11545  046D  0080               	movwf	0
 11546  046E  3001               	movlw	1
 11547  046F  00AD               	movwf	??_sprintf^(0+128)
 11548  0470  082D               	movf	??_sprintf^(0+128),w
 11549  0471  07C9               	addwf	sprintf@sp^(0+128),f
 11550  0472                     l4397:
 11551                           
 11552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11553  0472  084C               	movf	sprintf@c^(0+128),w
 11554  0473  00AD               	movwf	??_sprintf^(0+128)
 11555  0474  3001               	movlw	1
 11556  0475                     u7295:
 11557  0475  1003               	clrc
 11558  0476  0DAD               	rlf	??_sprintf^(0+128),f
 11559  0477  3EFF               	addlw	-1
 11560  0478  1D03               	skipz
 11561  0479  2C75               	goto	u7295
 11562  047A  1003               	clrc
 11563  047B  0D2D               	rlf	??_sprintf^(0+128),w
 11564  047C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11565  047D  0084               	movwf	4
 11566  047E  120A  158A  200A  120A  118A  	fcall	stringdir
 11567  0483  1283               	bcf	3,5	;RP0=0, select bank0
 11568  0484  1303               	bcf	3,6	;RP1=0, select bank0
 11569  0485  00A0               	movwf	___llmod@divisor
 11570  0486  120A  158A  200A  120A  118A  	fcall	stringdir
 11571  048B  00A1               	movwf	___llmod@divisor+1
 11572  048C  120A  158A  200A  120A  118A  	fcall	stringdir
 11573  0491  00A2               	movwf	___llmod@divisor+2
 11574  0492  120A  158A  200A  120A  118A  	fcall	stringdir
 11575  0497  00A3               	movwf	___llmod@divisor+3
 11576  0498  1683               	bsf	3,5	;RP0=1, select bank1
 11577  0499  1303               	bcf	3,6	;RP1=0, select bank1
 11578  049A  083A               	movf	(sprintf@val+3)^(0+128),w
 11579  049B  1283               	bcf	3,5	;RP0=0, select bank0
 11580  049C  1303               	bcf	3,6	;RP1=0, select bank0
 11581  049D  00A7               	movwf	___llmod@dividend+3
 11582  049E  1683               	bsf	3,5	;RP0=1, select bank1
 11583  049F  1303               	bcf	3,6	;RP1=0, select bank1
 11584  04A0  0839               	movf	(sprintf@val+2)^(0+128),w
 11585  04A1  1283               	bcf	3,5	;RP0=0, select bank0
 11586  04A2  1303               	bcf	3,6	;RP1=0, select bank0
 11587  04A3  00A6               	movwf	___llmod@dividend+2
 11588  04A4  1683               	bsf	3,5	;RP0=1, select bank1
 11589  04A5  1303               	bcf	3,6	;RP1=0, select bank1
 11590  04A6  0838               	movf	(sprintf@val+1)^(0+128),w
 11591  04A7  1283               	bcf	3,5	;RP0=0, select bank0
 11592  04A8  1303               	bcf	3,6	;RP1=0, select bank0
 11593  04A9  00A5               	movwf	___llmod@dividend+1
 11594  04AA  1683               	bsf	3,5	;RP0=1, select bank1
 11595  04AB  1303               	bcf	3,6	;RP1=0, select bank1
 11596  04AC  0837               	movf	sprintf@val^(0+128),w
 11597  04AD  1283               	bcf	3,5	;RP0=0, select bank0
 11598  04AE  1303               	bcf	3,6	;RP1=0, select bank0
 11599  04AF  00A4               	movwf	___llmod@dividend
 11600  04B0  160A  158A  237C  120A  118A  	fcall	___llmod
 11601  04B5  1283               	bcf	3,5	;RP0=0, select bank0
 11602  04B6  1303               	bcf	3,6	;RP1=0, select bank0
 11603  04B7  0823               	movf	?___llmod+3,w
 11604  04B8  1683               	bsf	3,5	;RP0=1, select bank1
 11605  04B9  1303               	bcf	3,6	;RP1=0, select bank1
 11606  04BA  00BA               	movwf	(sprintf@val+3)^(0+128)
 11607  04BB  1283               	bcf	3,5	;RP0=0, select bank0
 11608  04BC  1303               	bcf	3,6	;RP1=0, select bank0
 11609  04BD  0822               	movf	?___llmod+2,w
 11610  04BE  1683               	bsf	3,5	;RP0=1, select bank1
 11611  04BF  1303               	bcf	3,6	;RP1=0, select bank1
 11612  04C0  00B9               	movwf	(sprintf@val+2)^(0+128)
 11613  04C1  1283               	bcf	3,5	;RP0=0, select bank0
 11614  04C2  1303               	bcf	3,6	;RP1=0, select bank0
 11615  04C3  0821               	movf	?___llmod+1,w
 11616  04C4  1683               	bsf	3,5	;RP0=1, select bank1
 11617  04C5  1303               	bcf	3,6	;RP1=0, select bank1
 11618  04C6  00B8               	movwf	(sprintf@val+1)^(0+128)
 11619  04C7  1283               	bcf	3,5	;RP0=0, select bank0
 11620  04C8  1303               	bcf	3,6	;RP1=0, select bank0
 11621  04C9  0820               	movf	?___llmod,w
 11622  04CA  1683               	bsf	3,5	;RP0=1, select bank1
 11623  04CB  1303               	bcf	3,6	;RP1=0, select bank1
 11624  04CC  00B7               	movwf	sprintf@val^(0+128)
 11625  04CD                     l4399:
 11626                           
 11627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11628  04CD  3001               	movlw	1
 11629  04CE  02CC               	subwf	sprintf@c^(0+128),f
 11630  04CF  0A4C               	incf	sprintf@c^(0+128),w
 11631  04D0  1D03               	btfss	3,2
 11632  04D1  2CD3               	goto	u7301
 11633  04D2  2CD4               	goto	u7300
 11634  04D3                     u7301:
 11635  04D3  2BCC               	goto	l4391
 11636  04D4                     u7300:
 11637  04D4  2CE6               	goto	l4407
 11638  04D5                     l4401:
 11639                           
 11640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11641  04D5  3030               	movlw	48
 11642  04D6  00AD               	movwf	??_sprintf^(0+128)
 11643  04D7  0849               	movf	sprintf@sp^(0+128),w
 11644  04D8  0084               	movwf	4
 11645  04D9  082D               	movf	??_sprintf^(0+128),w
 11646  04DA  1783               	bsf	3,7	;select IRP bank2
 11647  04DB  0080               	movwf	0
 11648  04DC                     l4403:
 11649  04DC  3001               	movlw	1
 11650  04DD  00AD               	movwf	??_sprintf^(0+128)
 11651  04DE  082D               	movf	??_sprintf^(0+128),w
 11652  04DF  07C9               	addwf	sprintf@sp^(0+128),f
 11653  04E0                     l4405:
 11654                           
 11655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11656  04E0  30FF               	movlw	255
 11657  04E1  07CA               	addwf	sprintf@prec^(0+128),f
 11658  04E2  1803               	skipnc
 11659  04E3  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11660  04E4  30FF               	movlw	255
 11661  04E5  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11662  04E6                     l4407:
 11663                           
 11664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11665  04E6  084A               	movf	sprintf@prec^(0+128),w
 11666  04E7  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11667  04E8  1D03               	btfss	3,2
 11668  04E9  2CEB               	goto	u7311
 11669  04EA  2CEC               	goto	u7310
 11670  04EB                     u7311:
 11671  04EB  2CD5               	goto	l4401
 11672  04EC                     u7310:
 11673  04EC  2DB2               	goto	l4455
 11674  04ED                     l4409:
 11675                           
 11676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11677  04ED  084A               	movf	sprintf@prec^(0+128),w
 11678  04EE  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11679  04EF  1D03               	btfss	3,2
 11680  04F0  2CF2               	goto	u7321
 11681  04F1  2CF3               	goto	u7320
 11682  04F2                     u7321:
 11683  04F2  2D01               	goto	l397
 11684  04F3                     u7320:
 11685  04F3                     l4411:
 11686  04F3  083A               	movf	(sprintf@val+3)^(0+128),w
 11687  04F4  0439               	iorwf	(sprintf@val+2)^(0+128),w
 11688  04F5  0438               	iorwf	(sprintf@val+1)^(0+128),w
 11689  04F6  0437               	iorwf	sprintf@val^(0+128),w
 11690  04F7  1D03               	skipz
 11691  04F8  2CFA               	goto	u7331
 11692  04F9  2CFB               	goto	u7330
 11693  04FA                     u7331:
 11694  04FA  2D01               	goto	l397
 11695  04FB                     u7330:
 11696  04FB                     l4413:
 11697                           
 11698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11699  04FB  3001               	movlw	1
 11700  04FC  07CA               	addwf	sprintf@prec^(0+128),f
 11701  04FD  1803               	skipnc
 11702  04FE  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11703  04FF  3000               	movlw	0
 11704  0500  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11705  0501                     l397:
 11706                           
 11707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11708  0501  084B               	movf	(sprintf@prec+1)^(0+128),w
 11709  0502  3A80               	xorlw	128
 11710  0503  3C80               	sublw	128
 11711  0504  1D03               	skipz
 11712  0505  2D08               	goto	u7345
 11713  0506  084A               	movf	sprintf@prec^(0+128),w
 11714  0507  024C               	subwf	sprintf@c^(0+128),w
 11715  0508                     u7345:
 11716  0508  1803               	skipnc
 11717  0509  2D0B               	goto	u7341
 11718  050A  2D0C               	goto	u7340
 11719  050B                     u7341:
 11720  050B  2D13               	goto	l4417
 11721  050C                     u7340:
 11722  050C                     l4415:
 11723                           
 11724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11725  050C  1683               	bsf	3,5	;RP0=1, select bank1
 11726  050D  1303               	bcf	3,6	;RP1=0, select bank1
 11727  050E  084A               	movf	sprintf@prec^(0+128),w
 11728  050F  00AD               	movwf	??_sprintf^(0+128)
 11729  0510  082D               	movf	??_sprintf^(0+128),w
 11730  0511  00CC               	movwf	sprintf@c^(0+128)
 11731  0512  2D2B               	goto	l4421
 11732  0513                     l4417:
 11733  0513  1683               	bsf	3,5	;RP0=1, select bank1
 11734  0514  1303               	bcf	3,6	;RP1=0, select bank1
 11735  0515  084B               	movf	(sprintf@prec+1)^(0+128),w
 11736  0516  3A80               	xorlw	128
 11737  0517  00AD               	movwf	??_sprintf^(0+128)
 11738  0518  3080               	movlw	128
 11739  0519  022D               	subwf	??_sprintf^(0+128),w
 11740  051A  1D03               	skipz
 11741  051B  2D1E               	goto	u7355
 11742  051C  084C               	movf	sprintf@c^(0+128),w
 11743  051D  024A               	subwf	sprintf@prec^(0+128),w
 11744  051E                     u7355:
 11745  051E  1803               	skipnc
 11746  051F  2D21               	goto	u7351
 11747  0520  2D22               	goto	u7350
 11748  0521                     u7351:
 11749  0521  2D2B               	goto	l4421
 11750  0522                     u7350:
 11751  0522                     l4419:
 11752                           
 11753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11754  0522  1683               	bsf	3,5	;RP0=1, select bank1
 11755  0523  1303               	bcf	3,6	;RP1=0, select bank1
 11756  0524  084C               	movf	sprintf@c^(0+128),w
 11757  0525  00AD               	movwf	??_sprintf^(0+128)
 11758  0526  01AE               	clrf	(??_sprintf^(0+128)+1)
 11759  0527  082D               	movf	??_sprintf^(0+128),w
 11760  0528  00CA               	movwf	sprintf@prec^(0+128)
 11761  0529  082E               	movf	(??_sprintf+1)^(0+128),w
 11762  052A  00CB               	movwf	(sprintf@prec+1)^(0+128)
 11763  052B                     l4421:
 11764                           
 11765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11766  052B  1683               	bsf	3,5	;RP0=1, select bank1
 11767  052C  1303               	bcf	3,6	;RP1=0, select bank1
 11768  052D  083D               	movf	sprintf@width^(0+128),w
 11769  052E  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11770  052F  1903               	btfsc	3,2
 11771  0530  2D32               	goto	u7361
 11772  0531  2D33               	goto	u7360
 11773  0532                     u7361:
 11774  0532  2D45               	goto	l4427
 11775  0533                     u7360:
 11776  0533                     l4423:
 11777  0533  3003               	movlw	3
 11778  0534  053B               	andwf	sprintf@flag^(0+128),w
 11779  0535  00AD               	movwf	??_sprintf^(0+128)
 11780  0536  3000               	movlw	0
 11781  0537  053C               	andwf	(sprintf@flag+1)^(0+128),w
 11782  0538  00AE               	movwf	(??_sprintf+1)^(0+128)
 11783  0539  082D               	movf	??_sprintf^(0+128),w
 11784  053A  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11785  053B  1903               	btfsc	3,2
 11786  053C  2D3E               	goto	u7371
 11787  053D  2D3F               	goto	u7370
 11788  053E                     u7371:
 11789  053E  2D45               	goto	l4427
 11790  053F                     u7370:
 11791  053F                     l4425:
 11792                           
 11793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11794  053F  30FF               	movlw	255
 11795  0540  07BD               	addwf	sprintf@width^(0+128),f
 11796  0541  1803               	skipnc
 11797  0542  0ABE               	incf	(sprintf@width+1)^(0+128),f
 11798  0543  30FF               	movlw	255
 11799  0544  07BE               	addwf	(sprintf@width+1)^(0+128),f
 11800  0545                     l4427:
 11801                           
 11802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11803  0545  1F3C               	btfss	(sprintf@flag+1)^(0+128),6
 11804  0546  2D48               	goto	u7381
 11805  0547  2D49               	goto	u7380
 11806  0548                     u7381:
 11807  0548  2D64               	goto	l4435
 11808  0549                     u7380:
 11809  0549                     l4429:
 11810                           
 11811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11812  0549  084B               	movf	(sprintf@prec+1)^(0+128),w
 11813  054A  3A80               	xorlw	128
 11814  054B  00AD               	movwf	??_sprintf^(0+128)
 11815  054C  083E               	movf	(sprintf@width+1)^(0+128),w
 11816  054D  3A80               	xorlw	128
 11817  054E  022D               	subwf	??_sprintf^(0+128),w
 11818  054F  1D03               	skipz
 11819  0550  2D53               	goto	u7395
 11820  0551  083D               	movf	sprintf@width^(0+128),w
 11821  0552  024A               	subwf	sprintf@prec^(0+128),w
 11822  0553                     u7395:
 11823  0553  1803               	skipnc
 11824  0554  2D56               	goto	u7391
 11825  0555  2D57               	goto	u7390
 11826  0556                     u7391:
 11827  0556  2D60               	goto	l4433
 11828  0557                     u7390:
 11829  0557                     l4431:
 11830                           
 11831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11832  0557  1683               	bsf	3,5	;RP0=1, select bank1
 11833  0558  1303               	bcf	3,6	;RP1=0, select bank1
 11834  0559  084A               	movf	sprintf@prec^(0+128),w
 11835  055A  02BD               	subwf	sprintf@width^(0+128),f
 11836  055B  084B               	movf	(sprintf@prec+1)^(0+128),w
 11837  055C  1C03               	skipc
 11838  055D  03BE               	decf	(sprintf@width+1)^(0+128),f
 11839  055E  02BE               	subwf	(sprintf@width+1)^(0+128),f
 11840  055F  2D64               	goto	l4435
 11841  0560                     l4433:
 11842                           
 11843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11844  0560  1683               	bsf	3,5	;RP0=1, select bank1
 11845  0561  1303               	bcf	3,6	;RP1=0, select bank1
 11846  0562  01BD               	clrf	sprintf@width^(0+128)
 11847  0563  01BE               	clrf	(sprintf@width+1)^(0+128)
 11848  0564                     l4435:
 11849                           
 11850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11851  0564  083E               	movf	(sprintf@width+1)^(0+128),w
 11852  0565  3A80               	xorlw	128
 11853  0566  3C80               	sublw	128
 11854  0567  1D03               	skipz
 11855  0568  2D6B               	goto	u7405
 11856  0569  083D               	movf	sprintf@width^(0+128),w
 11857  056A  024C               	subwf	sprintf@c^(0+128),w
 11858  056B                     u7405:
 11859  056B  1803               	skipnc
 11860  056C  2D6E               	goto	u7401
 11861  056D  2D6F               	goto	u7400
 11862  056E                     u7401:
 11863  056E  2D7B               	goto	l4439
 11864  056F                     u7400:
 11865  056F                     l4437:
 11866                           
 11867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11868  056F  1683               	bsf	3,5	;RP0=1, select bank1
 11869  0570  1303               	bcf	3,6	;RP1=0, select bank1
 11870  0571  084C               	movf	sprintf@c^(0+128),w
 11871  0572  00AD               	movwf	??_sprintf^(0+128)
 11872  0573  01AE               	clrf	(??_sprintf^(0+128)+1)
 11873  0574  082D               	movf	??_sprintf^(0+128),w
 11874  0575  02BD               	subwf	sprintf@width^(0+128),f
 11875  0576  082E               	movf	(??_sprintf+1)^(0+128),w
 11876  0577  1C03               	skipc
 11877  0578  03BE               	decf	(sprintf@width+1)^(0+128),f
 11878  0579  02BE               	subwf	(sprintf@width+1)^(0+128),f
 11879  057A  2D7F               	goto	l4441
 11880  057B                     l4439:
 11881                           
 11882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11883  057B  1683               	bsf	3,5	;RP0=1, select bank1
 11884  057C  1303               	bcf	3,6	;RP1=0, select bank1
 11885  057D  01BD               	clrf	sprintf@width^(0+128)
 11886  057E  01BE               	clrf	(sprintf@width+1)^(0+128)
 11887  057F                     l4441:
 11888                           
 11889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11890  057F  083D               	movf	sprintf@width^(0+128),w
 11891  0580  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11892  0581  1903               	btfsc	3,2
 11893  0582  2D84               	goto	u7411
 11894  0583  2D85               	goto	u7410
 11895  0584                     u7411:
 11896  0584  2D9C               	goto	l4449
 11897  0585                     u7410:
 11898  0585                     l4443:
 11899                           
 11900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11901  0585  3020               	movlw	32
 11902  0586  00AD               	movwf	??_sprintf^(0+128)
 11903  0587  0849               	movf	sprintf@sp^(0+128),w
 11904  0588  0084               	movwf	4
 11905  0589  082D               	movf	??_sprintf^(0+128),w
 11906  058A  1783               	bsf	3,7	;select IRP bank2
 11907  058B  0080               	movwf	0
 11908  058C                     l4445:
 11909  058C  3001               	movlw	1
 11910  058D  00AD               	movwf	??_sprintf^(0+128)
 11911  058E  082D               	movf	??_sprintf^(0+128),w
 11912  058F  07C9               	addwf	sprintf@sp^(0+128),f
 11913  0590                     l4447:
 11914  0590  30FF               	movlw	255
 11915  0591  07BD               	addwf	sprintf@width^(0+128),f
 11916  0592  1803               	skipnc
 11917  0593  0ABE               	incf	(sprintf@width+1)^(0+128),f
 11918  0594  30FF               	movlw	255
 11919  0595  07BE               	addwf	(sprintf@width+1)^(0+128),f
 11920  0596  083D               	movf	sprintf@width^(0+128),w
 11921  0597  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11922  0598  1D03               	btfss	3,2
 11923  0599  2D9B               	goto	u7421
 11924  059A  2D9C               	goto	u7420
 11925  059B                     u7421:
 11926  059B  2D85               	goto	l4443
 11927  059C                     u7420:
 11928  059C                     l4449:
 11929                           
 11930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11931  059C  3003               	movlw	3
 11932  059D  053B               	andwf	sprintf@flag^(0+128),w
 11933  059E  00AD               	movwf	??_sprintf^(0+128)
 11934  059F  3000               	movlw	0
 11935  05A0  053C               	andwf	(sprintf@flag+1)^(0+128),w
 11936  05A1  00AE               	movwf	(??_sprintf+1)^(0+128)
 11937  05A2  082D               	movf	??_sprintf^(0+128),w
 11938  05A3  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11939  05A4  1903               	btfsc	3,2
 11940  05A5  2DA7               	goto	u7431
 11941  05A6  2DA8               	goto	u7430
 11942  05A7                     u7431:
 11943  05A7  2DB2               	goto	l4455
 11944  05A8                     u7430:
 11945  05A8                     l4451:
 11946                           
 11947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11948  05A8  302D               	movlw	45
 11949  05A9  00AD               	movwf	??_sprintf^(0+128)
 11950  05AA  0849               	movf	sprintf@sp^(0+128),w
 11951  05AB  0084               	movwf	4
 11952  05AC  082D               	movf	??_sprintf^(0+128),w
 11953  05AD  1783               	bsf	3,7	;select IRP bank2
 11954  05AE  0080               	movwf	0
 11955  05AF  160A  118A  2D13   	goto	l4211
 11956  05B2                     l4455:
 11957                           
 11958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11959  05B2  3001               	movlw	1
 11960  05B3  07A8               	addwf	sprintf@f^(0+128),f
 11961  05B4  30FF               	movlw	-1
 11962  05B5  0728               	addwf	sprintf@f^(0+128),w
 11963  05B6  0084               	movwf	4
 11964  05B7  120A  158A  200A  120A  118A  	fcall	stringdir
 11965  05BC  00AD               	movwf	??_sprintf^(0+128)
 11966  05BD  082D               	movf	??_sprintf^(0+128),w
 11967  05BE  00CC               	movwf	sprintf@c^(0+128)
 11968  05BF  084C               	movf	sprintf@c^(0+128),w
 11969  05C0  1D03               	btfss	3,2
 11970  05C1  2DC3               	goto	u7441
 11971  05C2  2DC6               	goto	u7440
 11972  05C3                     u7441:
 11973  05C3  160A  118A  2D06   	goto	l4207
 11974  05C6                     u7440:
 11975  05C6                     l4457:
 11976                           
 11977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11978  05C6  0849               	movf	sprintf@sp^(0+128),w
 11979  05C7  0084               	movwf	4
 11980  05C8  1783               	bsf	3,7	;select IRP bank2
 11981  05C9  0180               	clrf	0
 11982  05CA                     l412:
 11983  05CA  0008               	return
 11984  05CB                     __end_of_sprintf:

Data Sizes:
    Strings     34
    Constant    144
    Data        2
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      78
    BANK1            80     48      69
    BANK3            96      0      50
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[3]), STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 25
		 -> l(BANK3[25]), s(BANK3[25]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    enviar@valor	PTR unsigned char  size(1) Largest target is 25
		 -> s(BANK3[25]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 25
		 -> l(BANK3[25]), s(BANK3[25]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversor2->___flmul
    _conversor->___flmul
    ___flmul->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   49155
                                             45 BANK1      3     3      0
                      _Config_USARTT
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _conversor
                         _conversor2
                             _enviar
                            _recibir
                              _setup
                            _spiInit
                            _spiRead
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   36405
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8544
                                             37 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6600
                                             37 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             56 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             57 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviar                                               1     1      0     121
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversor2                                           9     5      4    5474
                                             37 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _conversor                                            9     5      4    5474
                                             37 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     552
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_USARTT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_USARTT
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conversor
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _conversor2
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _enviar
   _recibir
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     30      45       7       86.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D0      12        0.0%
ABS                  0      0      D0       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 16:00:29 2021

                        _l 0190                          _p 00D0                          _s 01A9  
                        _v 00DC                          _x 00D4                          pc 0002  
              _SSPSTATbits 0094                         l99 18E3               ___awdiv@sign 0028  
                       _vv 00D8                         fsr 0004        ___wmul@multiplicand 0075  
      __Umul8_16@word_mpld 0022                        l102 1C88                        l105 1CE4  
                      l122 1879                        l202 18C5                        l203 18CA  
                      l140 1918                        l220 1891                        l125 18FD  
                      l134 07FD                        l206 187A                        l128 18B4  
                      l137 1ADB                        l209 1880                        l146 1A4E  
                      l322 07D7                        l171 19DC                        l180 1A02  
                      l412 05CA                        l165 08D2                        l174 19EA  
                      l183 1A08                        l351 15C3                        l168 19CF  
                      l416 1970                        l177 19F8                        l329 0FFF  
                      l186 189C                        l602 1AFA                        l610 109F  
                      l418 198A                        l603 1B16                        l611 10B8  
                      l604 1B2B                        l452 1D4C                        l382 02F6  
                      l607 1033                        l615 18A7                        l633 1F41  
                      l626 1DB3                        l634 1EB3                        l722 1A94  
                      l619 1DC8                        l644 1F34                        l732 19C6  
                      l629 1DC8                        l637 1F04                        l397 0501  
                      l389 033A                        l590 1FC2                        l582 1C2C  
                      l743 12D7                        l903 1014                        l672 1BD1  
                      l569 093B                        l586 1FFF                        l851 0C90  
                      l747 137E                        l587 1F64                        l860 195F  
                      l764 1449                        l756 14FB                        l845 0C08  
                      l749 1355                        l597 1FF2                        l774 148F  
                      l839 0C9C                        l768 146D                        l785 14EF  
                      l777 14CD                        l858 194D                        l786 14FB  
                      l883 1DED                        l885 1E84                        l789 1B7B  
                      l896 1E4E                        l897 1E5A                        l889 1E32  
                      _ISR 1919                        fsr0 0004                        indf 0000  
             ___awmod@sign 0021               ___flmul@aexp 003D               ___flmul@bexp 003E  
             ___flmul@sign 0038               ___flmul@temp 0043               ___flmul@prod 003F  
                     ?_ISR 0070               ___fltol@exp1 0062                       l3105 189D  
                     l3121 1D78                       l3113 1D4D                       l4001 1F89  
                     l3107 18A5                       l3123 1D79                       l3115 1D5A  
                     l4011 1FBC                       l4003 1F92                       l3221 18CE  
                     l3301 188E                       l3109 18A7                       l3125 1D81  
                     l4013 1FC6                       l4021 1FE0                       l4005 1FA4  
                     l3231 18DA                       l3223 18D0                       l2511 1286  
                     l2503 1274                       l3143 1DA8                       l3135 1D8F  
                     l3127 1D83                       l3119 1D63                       l4111 1B9A  
                     l4103 1B7C                       l4007 1FB2                       l2361 1943  
                     l4201 1CCE                       l3241 18E1                       l3233 18DB  
                     l3225 18D1                       l2601 1382                       l2513 128B  
                     l2521 129B                       l2505 127B                       l3145 1DB8  
                     l3129 1D87                       l3137 1DA1                       l4113 1BAC  
                     l4105 1B86                       l4041 197E                       l4033 1960  
                     l4009 1FB3                       l2363 1947                       l4131 1DF5  
                     l4123 1DCC                       l3243 18E2                       l3235 18DC  
                     l3227 18D2                       l3219 18CB                       l3251 18C1  
                     l2611 13AB                       l2603 1387                       l2531 12B5  
                     l2523 12A3                       l2515 1290                       l2507 1281  
                     l3171 1B30                       l3147 1DBD                       l4051 1CFA  
                     l4115 1BBA                       l4107 1B89                       l4043 1984  
                     l4035 1964                       l4027 1FE7                       l4019 1FCE  
                     l4211 1513                       l3261 08D1                       l2365 1956  
                     l2357 193A                       l2701 0949                       l4141 1E17  
                     l4125 1DD1                       l3237 18DD                       l3229 18D7  
                     l3253 18C4                       l3245 18B6                       l2621 13BF  
                     l2613 13AF                       l2541 12CC                       l2533 12B9  
                     l2525 12A8                       l2517 1298                       l2509 1285  
                     l4061 1D34                       l4053 1D07                       l4117 1BC3  
                     l4109 1B96                       l4037 1968                       l4029 1FF7  
                     l4301 0033                       l4221 1545                       l4213 1518  
                     l4205 14FF                       l3255 08C2                       l2367 195B  
                     l2359 193C                       l2711 0960                       l2703 094D  
                     l4151 1E48                       l4143 1E1B                       l4135 1DFE  
                     l4127 1DD5                       l3239 18E0                       l3247 18BD  
                     l4071 1ADC                       l2631 1427                       l2623 13C8  
                     l2615 13B8                       l2607 1390                       l2551 12E5  
                     l2543 12CD                       l2535 12BA                       l2527 12AE  
                     l2519 1299                       l4063 1D35                       l4055 1D0B  
                     l4047 1CE5                       l4119 1BC9                       l4039 1977  
                     l4311 00C4                       l4303 005C                       l4231 157B  
                     l4223 1558                       l4215 151C                       l4207 1506  
                     l3257 08CA                       l2801 0C05                       l2721 0979  
                     l2713 0962                       l2705 094E                       l4161 1E7B  
                     l4153 1E52                       l4145 1E29                       l4137 1E03  
                     l4129 1DE5                       l3265 1892                       l3249 18BF  
                     l4073 1AF2                       l2633 142C                       l2617 13BA  
                     l2609 13A7                       l2625 13CD                       l2561 12F9  
                     l2553 12E9                       l2537 12BF                       l2545 12CF  
                     l2529 12AF                       l3169 1B2C                       l4065 1D3E  
                     l4057 1D14                       l4049 1CF7                       l4401 04D5  
                     l4313 00CC                       l4305 0083                       l4321 013E  
                     l4241 15AE                       l4233 157F                       l4225 155C  
                     l4217 152C                       l4209 150C                       l3259 08CE  
                     l4171 1AA5                       l2811 0C24                       l2731 098E  
                     l2723 097A                       l2715 096A                       l2707 0953  
                     l4163 1E7C                       l4155 1E5C                       l4147 1E39  
                     l4139 1E10                       l4075 1B0E                       l4091 1053  
                     l4083 1015                       l2651 1474                       l2643 145F  
                     l2627 13E3                       l2635 143B                       l2619 13BE  
                     l2571 130D                       l2563 12FD                       l2555 12ED  
                     l2547 12DD                       l2539 12C4                       l4059 1D26  
                     l4067 1D44                       l4411 04F3                       l4403 04DC  
                     l4323 0173                       l4315 00EA                       l4307 0092  
                     l4251 15E1                       l4235 1582                       l4243 15BF  
                     l4219 1530                       l4227 156C                       l4173 1AB6  
                     l4181 07E0                       l2821 0C6A                       l2813 0C3D  
                     l2805 0C0D                       l2741 09A9                       l2733 0996  
                     l2725 097F                       l2717 096F                       l2709 0958  
                     l4157 1E72                       l4149 1E44                       l4077 1B28  
                     l4093 1077                       l4085 102B                       l2661 1482  
                     l2653 1476                       l2645 1468                       l2637 1451  
                     l2629 1421                       l2573 1311                       l2565 1301  
                     l2557 12F1                       l2549 12E1                       l2581 1321  
                     l4421 052B                       l4413 04FB                       l4405 04E0  
                     l4341 0202                       l4333 01A6                       l4325 01A2  
                     l4309 00BB                       l4261 1609                       l4253 15EF  
                     l4245 15C1                       l4237 1597                       l4229 157A  
                     l4501 1137                       l4175 1ABC                       l4167 1A95  
                     l4183 07E5                       l4191 1A09                       l2831 0C89  
                     l2823 0C74                       l2807 0C12                       l2815 0C43  
                     l2751 0A2B                       l2743 09B9                       l2735 099B  
                     l2727 0984                       l2719 0975                       l4159 1E77  
                     l4079 1B2A                       l4095 107B                       l4087 1047  
                     l2671 1499                       l2663 1486                       l2655 147B  
                     l2647 146C                       l2639 1456                       l2591 1364  
                     l2583 1322                       l2575 1315                       l2567 1305  
                     l2559 12F5                       l4431 0557                       l4423 0533  
                     l4415 050C                       l4407 04E6                       l4343 0208  
                     l4327 01A4                       l4319 0135                       l4271 1678  
                     l4263 1630                       l4255 15F3                       l4239 15AA  
                     l4511 1185                       l4503 1157                       l4177 18A8  
                     l4169 1A9B                       l4185 07EC                       l4193 1A0E  
                     l2833 0C94                       l2825 0C76                       l2817 0C50  
                     l2809 0C20                       l2761 0A99                       l2753 0A47  
                     l2745 09C6                       l2737 09A0                       l2729 098C  
                     l4097 10B5                       l4089 104F                       l2681 14D7  
                     l2673 14A7                       l2665 148C                       l2649 1471  
                     l2657 147D                       l2593 1368                       l2585 1339  
                     l2577 1319                       l2569 1309                       l3801 1A4F  
                     l2921 1005                       l3721 08D6                       l4441 057F  
                     l4433 0560                       l4425 053F                       l4417 0513  
                     l4361 0250                       l4345 0214                       l4353 0229  
                     l4337 01DD                       l4281 16C3                       l4273 1683  
                     l4265 1649                       l4257 15F7                       l4409 04ED  
                     l4249 15C5                       l4521 11B1                       l4513 1194  
                     l4505 1169                       l4187 07F2                       l4179 07DB  
                     l4195 1A2A                       l2827 0C84                       l2819 0C5B  
                     l2771 0B29                       l2763 0AA9                       l2755 0A63  
                     l2747 09E3                       l3299 1889                       l4099 10B7  
                     l2691 14EB                       l2683 14DF                       l2675 14AB  
                     l2659 1481                       l2595 1369                       l2587 1359  
                     l2579 131D                       l3811 1A67                       l3803 1A53  
                     l2923 100B                       l3731 08EA                       l3723 08DA  
                     l4451 05A8                       l4443 0585                       l4435 0564  
                     l4427 0545                       l4419 0522                       l4371 030B  
                     l4363 02AB                       l4355 0236                       l4347 021B  
                     l4339 01E7                       l4291 1763                       l4283 16C9  
                     l4275 1689                       l4267 164D                       l4259 1605  
                     l4531 11FA                       l4523 11B9                       l4515 1198  
                     l4507 1172                       l3717 1875                       l4189 07F7  
                     l4197 1A32                       l2829 0C88                       l2781 0BBD  
                     l2773 0B39                       l2765 0AC6                       l2757 0A6C  
                     l2749 09FF                       l3581 19D5                       l2693 14F6  
                     l2685 14E4                       l2677 14C9                       l2669 1494  
                     l2597 1372                       l2589 1362                       l3821 1A8A  
                     l3813 1A6B                       l3805 1A59                       l2925 1011  
                     l3741 0900                       l3733 08EE                       l3725 08DF  
                     l3901 0D97                       l4445 058C                       l4437 056F  
                     l4429 0549                       l4381 0343                       l4373 0311  
                     l4365 02EA                       l4357 0244                       l4349 0224  
                     l4293 178C                       l4285 16E8                       l4277 169C  
                     l4269 1651                       l4541 122A                       l4533 1209  
                     l4525 11D9                       l4517 11A2                       l4509 1181  
                     l2791 0BE2                       l2783 0BCB                       l2775 0B66  
                     l2767 0ADF                       l2759 0A7C                       l4199 1C8C  
                     l3583 19E2                       l2695 14FA                       l2687 14E5  
                     l2679 14D2                       l2599 1376                       l3815 1A7C  
                     l3807 1A5C                       l3823 1A90                       l3831 1996  
                     l2927 1013                       l2919 1004                       l3751 0920  
                     l3743 0904                       l3735 08F0                       l3727 08E1  
                     l3719 08D3                       l3903 0D9E                       l3911 0E53  
                     l4447 0590                       l4439 057B                       l4391 03CC  
                     l4383 0348                       l4375 031E                       l4367 02FE  
                     l4359 024B                       l4287 1733                       l4279 16BF  
                     l4295 1794                       l4455 05B2                       l4551 1261  
                     l4543 1235                       l4535 120D                       l4527 11EB  
                     l4519 11AD                       l2785 0BD4                       l2793 0BE8  
                     l2777 0B8C                       l2769 0AFC                       l2697 093C  
                     l3585 19F0                       l2689 14E9                       l3817 1A82  
                     l3809 1A63                       l3841 19B5                       l3833 199D  
                     l3753 0927                       l3745 0908                       l3737 08F6  
                     l3729 08E5                       l3921 0F4B                       l3913 0E5A  
                     l4449 059C                       l4393 0427                       l4385 034F  
                     l4377 032D                       l4369 0307                       l4297 17A3  
                     l4289 175A                       l4457 05C6                       l4545 1239  
                     l4537 121C                       l4529 11F1                       l4481 10DB  
                     l4473 10B9                       l3851 18E8                       l2795 0BEC  
                     l2787 0BD8                       l2779 0BB4                       l2699 0943  
                     l4467 1C30                       l3587 19FE                       l3579 19C8  
                     l2859 187A                       l3931 1E98                       l3819 1A83  
                     l3843 19BC                       l3835 19A1                       l3827 198B  
                     l3747 0919                       l3739 08F9                       l3755 092D  
                     l3771 1BE0                       l3763 1BD2                       l3907 0E26  
                     l4395 0466                       l4387 0353                       l4379 0334  
                     l4299 17EA                       l4547 1245                       l4539 1220  
                     l4491 1102                       l4483 10E3                       l4475 10CC  
                     l3853 18EE                       l3861 1902                       l2797 0BED  
                     l2789 0BD9                       l4469 1C72                       l3941 1EB4  
                     l3837 19A5                       l3829 1991                       l3845 19C2  
                     l3757 0932                       l3749 091F                       l3781 1BF9  
                     l3773 1BE4                       l3765 1BD5                       l3925 0FD3  
                     l4397 0472                       l4389 0371                       l4549 1258  
                     l4493 110E                       l4485 10EC                       l4477 10D1  
                     l3855 18F1                       l3863 1908                       l2799 0BF1  
                     l3951 1EDD                       l3943 1EBA                       l3935 1EA1  
                     l3839 19AF                       l3871 05CE                       l3759 0937  
                     l3791 1C18                       l3783 1BFD                       l3775 1BE9  
                     l3767 1BD9                       l3919 0F44                       l4399 04CD  
                     l4583 15D9                       l4495 1118                       l4487 10F0  
                     l4479 10D6                       l3857 18FA                       l3849 18E5  
                     l3865 190B                       l3961 1F08                       l3953 1EEB  
                     l3945 1EC9                       l3929 1E85                       l3881 06E9  
                     l3873 05D4                       l3785 1C01                       l3777 1BEF  
                     l3793 1C1E                       l3769 1BDE                       l4497 111C  
                     l4489 10FF                       l3867 1910                       l3859 18FF  
                     l3955 1EF5                       l3947 1ECB                       l3795 1C23  
                     l3787 1C0B                       l3779 1BF2                       l3891 0CA4  
                     l4499 112B                       l3869 1913                       l3981 1F42  
                     l3957 1EF6                       l3949 1ED4                       l3885 0794  
                     l3797 1C28                       l3789 1C11                       l3893 0CA6  
                     l3983 1F4F                       l3975 1F29                       l3967 1F10  
                     l3959 1EFE                       l3879 06E3                       l3895 0CAD  
                     l3993 1F65                       l3977 1F39                       l3969 1F22  
                     l3889 0CA0                       l3995 1F6D                       l3987 1F58  
                     l3997 1F7E                       l3999 1F80                       STR_1 08A0  
                     STR_2 08B1                       STR_3 08B8                       STR_4 08BF  
                     u4000 0C50                       u3200 1285                       u4001 0C4F  
                     u3201 1284                       u4010 0C6A                       u3210 128B  
                     u4011 0C69                       u3211 128A                       u4020 0C88  
                     u3300 1344                       u3220 1290                       u4021 0C87  
                     u4005 0C4C                       u3301 1342                       u3221 128F  
                     u4030 1880                       u3310 1345                       u3230 12AE  
                     u4015 0C66                       u4031 187F                       u3231 12AD  
                     u3400 13AF                       u3320 1359                       u3240 12B9  
                     u3401 13AE                       u3321 1358                       u3241 12B8  
                     u3410 13BE                       u3330 1368                       u3250 12BF  
                     u3411 13BD                       u3331 1367                       u3251 12BE  
                     u3500 146C                       u3260 12C4                       u4300 1011  
                     u3501 146B                       u3261 12C3                       u4301 1010  
                     u3510 1471                       u3430 13E3                       u3350 137E  
                     u3270 12DD                       u3511 1470                       u3431 13E2  
                     u3351 137D                       u3271 12DC                       u3600 14C9  
                     u3520 147B                       u3360 1382                       u3280 12E1  
                     u6000 19C2                       u3601 14C8                       u3521 147A  
                     u3441 13FA                       u3433 13DF                       u3425 13C1  
                     u3361 1381                       u3345 136B                       u3281 12E0  
                     u6001 19C1                       u3610 14D2                       u3530 1481  
                     u3450 140E                       u3442 13FB                       u3370 1387  
                     u3290 1339                       u6010 05D4                       u3611 14D1  
                     u3531 1480                       u3451 140F                       u3443 1400  
                     u3371 1386                       u3291 1338                       u6011 05D3  
                     u3700 097F                       u3620 14D7                       u3540 1486  
                     u3460 142C                       u3452 1414                       u3444 1401  
                     u6100 0CAD                       u3701 097E                       u3621 14D6  
                     u3541 1485                       u3461 142B                       u3453 1415  
                     u3445 1406                       u3381 1399                       u6101 0CAC  
                     u3710 0984                       u3630 14E4                       u3550 148C  
                     u3470 1451                       u3446 1407                       u3390 13AB  
                     u3382 13A0                       u3711 0983                       u3631 14E3  
                     u3551 148B                       u3471 1450                       u3391 13AA  
                     u3383 13A7                       u3295 1335                       u3720 099B  
                     u3640 14E9                       u3560 1493                       u3480 1456  
                     u7000 156C                       u3801 0AB8                       u3721 099A  
                     u3641 14E8                       u3561 1492                       u3481 1455  
                     u6025 05F1                       u7001 156B                       u2850 1947  
                     u3802 0ABF                       u3730 09A0                       u5090 18BD  
                     u3650 14FA                       u3570 1499                       u6050 06E9  
                     u4290 100B                       u7010 157A                       u2851 1946  
                     u3803 0AC6                       u3731 099F                       u5091 18BC  
                     u3651 14F9                       u3571 1498                       u6051 06E8  
                     u6035 064D                       u4291 100A                       u6115 0CCF  
                     u7011 1579                       u3660 094D                       u3580 14AB  
                     u6220 0F4B                       u6140 0D9E                       u7100 17A3  
                     u7020 15BE                       u3821 0AEE                       u3741 09F1  
                     u3661 094C                       u3581 14AA                       u6045 06A2  
                     u6221 0F4A                       u6205 0EB8                       u6141 0D9D  
                     u6125 0D0B                       u7101 17A2                       u7021 15BD  
                     u2870 195B                       u3910 0BD8                       u3822 0AF5  
                     u3742 09F8                       u3670 0953                       u3590 14BA  
                     u6310 1F04                       u7110 0033                       u7030 15EF  
                     u2871 195A                       u3911 0BD7                       u3831 0B1B  
                     u3823 0AFC                       u3815 0AC8                       u3751 0A0D  
                     u3743 09FF                       u3671 0952                       u3495 1461  
                     u6311 1F03                       u6215 0F03                       u6135 0D56  
                     u7111 17FA                       u7031 15EC                       u3832 0B22  
                     u3752 0A14                       u3680 0958                       u4800 1D71  
                     u6400 1F63                       u6320 1F08                       u7200 0214  
                     u7120 005C                       u7040 15F3                       u2865 194E  
                     u3905 0BCD                       u3841 0B48                       u3833 0B29  
                     u3761 0A39                       u3753 0A1B                       u3681 0957  
                     u6401 1F62                       u6321 1F07                       u6305 1EF7  
                     u6065 0706                       u7201 0213                       u7121 005B  
                     u7105 179F                       u7041 15F2                       u3930 0BEC  
                     u3850 0B72                       u3842 0B4F                       u3762 0A40  
                     u3690 0979                       u4810 1D87                       u6330 1F0F  
                     u6090 0CA4                       u7210 0236                       u7130 0083  
                     u7050 1630                       u3931 0BEB                       u3843 0B56  
                     u3771 0A55                       u3763 0A47                       u3691 0978  
                     u3595 14B5                       u4811 1D86                       u6331 1F0E  
                     u6075 0753                       u6235 0F5E                       u6155 0DB1  
                     u6091 0CA3                       u7211 0235                       u7131 0082  
                     u7115 17F5                       u7051 162F                       u3940 0BF1  
                     u3772 0A5C                       u5620 19D5                       u4820 1D8E  
                     u6420 1FA4                       u6260 1E98                       u5700 08E5  
                     u6180 0E5A                       u7300 04D4                       u7220 0244  
                     u7140 0092                       u7060 1678                       u3941 0BF0  
                     u3925 0BDB                       u3861 0B7E                       u3773 0A63  
                     u5621 19D4                       u4821 1D8D                       u4805 1D6C  
                     u6421 1FA3                       u6261 1E97                       u6085 079F  
                     u5701 08E4                       u6245 0F9A                       u6181 0E59  
                     u6165 0DED                       u7301 04D3                       u7221 0243  
                     u7141 0091                       u7061 1677                       u3950 0C05  
                     u3870 0B9A                       u3862 0B85                       u5630 19E2  
                     u6510 1FF7                       u6350 1F21                       u6270 1EB2  
                     u5710 08F6                       u7310 04EC                       u7150 00BB  
                     u7070 16C3                       u3951 0C04                       u3863 0B8C  
                     u3855 0B6D                       u3791 0A8B                       u5631 19E1  
                     u6511 1FF6                       u6415 1F8B                       u6351 1F20  
                     u6271 1EB1                       u5711 08F5                       u6255 0FD6  
                     u6175 0E29                       u7311 04EB                       u7215 0232  
                     u7151 00BA                       u7071 16C2                       u3960 0C0C  
                     u3792 0A92                       u5640 19F0                       u4840 1DA0  
                     u6600 1D26                       u6520 1968                       u6440 1FC2  
                     u6360 1F28                       u5800 1BE4                       u7400 056F  
                     u7320 04F3                       u7240 02FD                       u7080 175A  
                     u3961 0C0B                       u3881 0BA6                       u3793 0A99  
                     u3785 0A65                       u5641 19EF                       u4841 1D9F  
                     u6601 1D25                       u6521 1967                       u6505 1FE9  
                     u6441 1FC1                       u6425 1FA0                       u6361 1F27  
                     u6345 1F11                       u5801 1BE3                       u7401 056E  
                     u7321 04F2                       u7241 02FC                       u7145 008E  
                     u7081 1759                       u3970 0C12                       u3882 0BAD  
                     u5650 19FE                       u4850 1DA7                       u6450 1FC6  
                     u6290 1EEB                       u5730 0908                       u5810 1BEF  
                     u7410 0585                       u7330 04FB                       u7250 031E  
                     u7170 01DC                       u7090 178C                       u3971 0C11  
                     u3883 0BB4                       u3875 0B95                       u5651 19FD  
                     u4851 1DA6                       u4835 1D90                       u6451 1FC5  
                     u6435 1FB5                       u6291 1EEA                       u5731 0907  
                     u5811 1BEE                       u6195 0E7C                       u7411 0584  
                     u7331 04FA                       u7251 031D                       u7235 0253  
                     u7171 01DB                       u7091 178B                       u3980 0C24  
                     u5660 1A08                       u6700 107B                       u4780 18A5  
                     u6620 1D44                       u6460 1FCD                       u6380 1F39  
                     u5900 1A6B                       u7420 059C                       u7340 050C  
                     u7260 032D                       u7180 01E7                       u3981 0C23  
                     u5661 1A07                       u6701 107A                       u4781 18A4  
                     u6621 1D43                       u6605 1D22                       u6461 1FCC  
                     u6381 1F38                       u6285 1ED6                       u5901 1A6A  
                     u5725 08FA                       u7421 059B                       u7405 056B  
                     u7341 050B                       u7261 032C                       u7181 01E6  
                     u7165 01A9                       u3990 0C33                       u6630 1AF2  
                     u4870 1DB8                       u4790 1D5A                       u6550 1984  
                     u6390 1F4F                       u5750 0919                       u5830 1C01  
                     u7430 05A8                       u7350 0522                       u7270 0348  
                     u7190 0202                       u3895 0BB6                       u6631 1AF1  
                     u6711 108A                       u4871 1DB7                       u4791 1D59  
                     u6615 1D36                       u6551 1983                       u6535 1971  
                     u6391 1F4E                       u6375 1F2B                       u6295 1EE7  
                     u5751 0918                       u5831 1C00                       u7431 05A7  
                     u7351 0521                       u7271 0347                       u7255 031A  
                     u7191 0201                       u7175 01D8                       u6800 1DD5  
                     u6640 1B0E                       u6720 10B5                       u6712 108B  
                     u4880 1DBD                       u6560 1CF7                       u6480 1FDF  
                     u5920 1A7C                       u5840 1C0B                       u7440 05C6  
                     u7360 0533                       u6801 1DD4                       u6641 1B0D  
                     u6721 10B4                       u6713 1090                       u4881 1DBC  
                     u4865 1DAA                       u6561 1CF6                       u6545 1978  
                     u6481 1FDE                       u5921 1A7B                       u5745 0909  
                     u5841 1C0A                       u5825 1BF3                       u7441 05C3  
                     u7361 0532                       u7345 0508                       u7265 0329  
                     u6810 1DF5                       u6650 1B28                       u6714 1091  
                     u6730 1B86                       u6490 1FE6                       u5770 092D  
                     u5690 08DA                       u7370 053F                       u3995 0C2E  
                     u6811 1DF4                       u6651 1B27                       u6715 1096  
                     u6731 1B85                       u6491 1FE5                       u6475 1FCF  
                     u5915 1A6C                       u5771 092C                       u5755 0915  
                     u5691 08D9                       u7371 053E                       u7355 051E  
                     u7507 11A8                       u6900 1E67                       u6716 1097  
                     u6660 102B                       u6580 1D0B                       u5940 1A90  
                     u5780 0932                       u5860 1C1E                       u7380 0549  
                     u6725 10B1                       u6661 102A                       u6581 1D0A  
                     u5941 1A8F                       u5925 1A78                       u5781 0931  
                     u5765 0921                       u5861 1C1D                       u5845 1C07  
                     u7381 0548                       u7285 03CF                       u7517 1202  
                     u6910 1E77                       u6830 1E16                       u6670 1047  
                     u6750 1B9A                       u5950 1991                       u5870 1C23  
                     u5790 1BD9                       u7390 0557                       u7607 18F5  
                     u6911 1E76                       u6831 1E15                       u6655 1B24  
                     u6671 1046                       u6575 1CFC                       u6751 1B99  
                     u5935 1A84                       u5951 1990                       u5871 1C22  
                     u5855 1C12                       u5791 1BD8                       u7391 0556  
                     u7295 0475                       u7527 1215                       u6920 1E7B  
                     u6680 1053                       u6760 1BAC                       u5880 1A59  
                     u6921 1E7A                       u6905 1E62                       u6825 1E08  
                     u6681 1052                       u6761 1BAB                       u6745 1B8B  
                     u5881 1A58                       u7537 1230                       u7457 10F8  
                     u6930 07E0                       u6850 1E38                       u5970 19A5  
                     u6931 07DF                       u6851 1E37                       u6691 1062  
                     u6595 1D0D                       u5971 19A4                       u7395 0553  
                     u7547 1269                       u7467 1114                       u6940 07F2  
                     u6692 1063                       u6780 1BC9                       u5980 19AF  
                     u6941 07F1                       u7557 190D                       u6845 1E2A  
                     u6693 1068                       u6781 1BC8                       u6765 1BA8  
                     u5981 19AE                       u5965 1997                       u7477 1124  
                     u6950 1A18                       u6870 1E48                       u6790 1DD1  
                     u6694 1069                       u7567 1915                       u6871 1E47  
                     u6791 1DD0                       u6695 106E                       u6775 1BBB  
                     u5895 1A5D                       u7487 117A                       u6960 1A3C  
                     u6880 1E4E                       u6696 106F                       u7577 1AA1  
                     u6881 1E4D                       u6865 1E3D                       u5985 19AB  
                     u7497 118D                       u6970 1A4E                       u6890 1E52  
                     u7587 1AB1                       u6971 1A4D                       u6891 1E51  
                     u5995 19B6                       u6980 150C                       u7597 1AC0  
                     u6981 150B                       u6990 152C                       u6991 152B  
                     _TRMT 04C1          ?_Lcd_Write_String 0076                       _flag 0079  
                     _main 10B9                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0020               _sprintf$1274 00B2            __end_of_Lcd_Cmd 18FE  
                    ??_ISR 0070              ___fltol@sign1 0061            __end_of___fladd 14FC  
                    ?_main 0070            __end_of___awdiv 093C            __end_of___flneg 18A8  
          __end_of___awmod 1C2D            __end_of___flmul 0C9D            __end_of___flsub 1B7C  
          __end_of___fltol 1DC9                      _ANSEL 0188            __end_of___lldiv 1D4D  
          ___awdiv@divisor 0022            __end_of___llmod 1BD2            __end_of___lwdiv 1A95  
                    i1l113 1930            __end_of___lwmod 19C7            ___awdiv@counter 0027  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 08A0                      _count 00E2  
                    _scale 0C9D            __end_of_isdigit 1015            __end_of_recibir 189D  
                    _setup 18CB                      _turno 0078                      pclath 000A  
          __end_of_spiInit 18CB            __end_of_spiRead 1892                      status 0003  
                    wtemp0 007E            __end_of_sprintf 05CB           __end_of_Lcd_Init 1ADC  
         __end_of_Lcd_Port 187A            __initialization 000F               __end_of_main 1274  
              enviar@valor 0073                     ??_main 00CD         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0024                     ?_scale 0045  
         ___awdiv@dividend 0024                     ?_setup 0070                     i1l3671 191F  
                   i1l3673 1923                     i1l3675 1924                     i1l3677 192A  
                   i1l3669 1919                     u567_20 191F                     u567_21 191E  
                   u568_20 1923                     u568_21 1922                  ??_Lcd_Cmd 0074  
                   u761_27 1926    __size_of_Lcd_Write_Char 001B                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPBUF 0013                     _SSPCON 0014  
         __end_of___xxtofl 1E85           __end_of__powers_ 0844                     ___flge 1015  
                   ___fleq 1ADC                  ??___fladd 0061                     ___wmul 1960  
                ??___awdiv 0026                  ??___flneg 0077                  ??___awmod 0077  
                ??___flmul 0033                  ??___flsub 0078                  ??___fltol 005C  
                ??___lldiv 0073                  ??___llmod 0073                  ??___lwdiv 0025  
                ??___lwmod 0077                     _enviar 19C7                     _fround 05CB  
         ___awdiv@quotient 0029            ___awmod@divisor 0073                     _valorA 00E3  
                   _valorC 00E4                     _valorT 006D            ___awmod@counter 0020  
             conversor@val 004D               __pdataCOMMON 0078                  ??_isdigit 0073  
       __size_of__Umul8_16 0029                  ??_recibir 0073                     saved_w 007E  
                ??_spiInit 0076                  ??_spiRead 0073                  ??_sprintf 00AD  
          Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0077                 ___flge@ff1 0020  
               ___flge@ff2 0024               ___xxtofl@arg 0026               ___xxtofl@exp 0025  
             ___xxtofl@val 0073                 ___fleq@ff1 0020                 ___fleq@ff2 0024  
  __end_of__initialization 002F                 ___flneg@f1 0073          __end_of_Lcd_Clear 18B5  
               ___fltol@f1 0058      __end_of_Config_USARTT 08D3             __pcstackCOMMON 0070  
            __end_of_scale 1000              __end_of_setup 18E4             _Lcd_Set_Cursor 07D8  
               __div_to_l_ 1F42                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 002D            __div_to_l_@cntr 002C                    ??_scale 0049  
          __div_to_l_@quot 0028               sprintf@width 00BD                    ??_setup 0073  
       __size_of_conversor 005C                 __pbssBANK0 006D                 __pbssBANK1 00D0  
               __pbssBANK3 0190              __div_to_l_@f1 0020              __div_to_l_@f2 0024  
        __end_of__Umul8_16 1960                 __pmaintext 10B9                    ?___flge 0020  
                  ?___fleq 0020                    ?___wmul 0073                 __pintentry 0004  
  __size_of_spiReceiveWait 0007                    ?_enviar 0070                    ?_fround 0045  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 07FE                  ?___xxtofl 0073  
               ??_Lcd_Init 0020                 ??_Lcd_Port 0073                    _SSPSTAT 0094  
               __stringtab 0800             _Lcd_Write_Char 18FE                    _Lcd_Cmd 18E4  
               _conversor2 1C89          __end_of__npowers_ 0878                 _scale$1273 0053  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 1274  
                  ___awdiv 08D3                    ___flneg 189D                    ___awmod 1BD2  
                  ___flmul 093C                    ___flsub 1B2C                    ___fltol 1D4D  
                  ___lldiv 1CE5            __size_of___wmul 002B                    ___llmod 1B7C  
                  ___lwdiv 1A4F                    ___lwmod 198B          __end_of_conversor 1C89  
          __size_of_enviar 0042            __size_of_fround 020D            ?_Lcd_Set_Cursor 0077  
                  __ptext1 14FC                    __ptext2 0C9D                    __ptext3 1BD2  
                  __ptext4 08D3                    __ptext5 1003                    __ptext6 05CB  
                  __ptext7 198B                    __ptext8 1A4F                    __ptext9 1E85  
             __size_of_ISR 001E                ?__div_to_l_ 0020                    _enviado 00E0  
                  _dpowers 0878                    _isdigit 1003                 ??___xxtofl 0020  
                  _recibir 1892           ___awmod@dividend 0075                    _spiInit 18B5  
                  _spiRead 1889                    _retorno 007A              conversor2@val 004D  
                  _sprintf 14FC                    clrloop0 1882     __end_of_Lcd_Write_Char 1919  
     end_of_initialization 002F            ___lldiv@divisor 0020            ___lldiv@counter 002C  
                _RCSTAbits 0018                    psplit$0 F0038                  Lcd_Port@a 0073  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0073  
                _PORTCbits 0007                  _PORTEbits 0009                ___fladd@grs 006C  
            ___xxtofl@sign 0024            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076  
        Lcd_Write_String@i 0023                ___flmul@grs 0039                ?_conversor2 0045  
                _TXSTAbits 0098        __size_of__div_to_l_ 00BE                  _Lcd_Clear 18A8  
           _spiReceiveWait 187A             __end_of___flge 10B9             __end_of___fleq 1B2C  
           __end_of___wmul 198B           _Lcd_Write_String 1A09              __pidataCOMMON 07FE  
        pnum$text1_split_1 0038                _BAUDCTLbits 0187             __end_of_enviar 1A09  
           __end_of_fround 07D8        start_initialization 000F                __end_of_ISR 1937  
      __end_of__tdiv_to_l_ 1F42          __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006  
          ___llmod@divisor 0020            ___llmod@counter 0074     __end_of_spiReceiveWait 1881  
               ?_Lcd_Clear 0070                   ??___flge 0073                   ??___fleq 0073  
                 ??___wmul 0077                  __Umul8_16 1937                   ??_enviar 0073  
          Lcd_Write_Char@a 0075                   ??_fround 0049              sprintf@tmpval 00BF  
                ___fladd@a 005D                  ___fladd@b 0059        __size_of_conversor2 005C  
               fround@prec 0058                  ___flmul@a 002F                  ___flmul@b 002B  
              __pbssCOMMON 007A                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
   __size_of_Config_USARTT 0011          __size_of___xxtofl 00BC               _isdigit$1088 0073  
                 ?_Lcd_Cmd 0070                sprintf@flag 00BB                sprintf@eexp 00C3  
              sprintf@fval 00C5                sprintf@prec 00CA           ___lwdiv@dividend 0023  
          ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0020                   ?___fladd 0059  
                 ?___awdiv 0022                   ?___flneg 0073                   ?___awmod 0073  
                 ?___flmul 002B                   ?___flsub 00A0                   ?___fltol 0058  
                 ?___lldiv 0020                   ?___llmod 0020                  __npowers_ 0844  
               ?__Umul8_16 0073                   ?___lwdiv 0021                   ?___lwmod 0073  
                __pstrings 0800                __tdiv_to_l_ 1E85               ??__div_to_l_ 0073  
                _conversor 1C2D                   ?_isdigit 0070                   ?_recibir 0070  
                 ?_spiInit 0073                   ?_spiRead 0070           ___lwdiv@quotient 0027  
                 ?_sprintf 00A8             __size_of_scale 0363             __size_of_setup 0019  
     spiInit@sTransmitEdge 0075          interrupt_function 0004             ___wmul@product 0020  
                clear_ram0 1881                   _PIE1bits 008C         spiInit@sDataSample 0073  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C         __end_of__div_to_l_ 2000  
            _Config_USARTT 08C2                ??_Lcd_Clear 0077                __stringbase 080F  
        ___wmul@multiplier 0073                 ?_conversor 0045           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 1A95                   _Lcd_Port 1874   __end_of_Lcd_Write_String 1A4F  
             ??_conversor2 0049           __size_of_Lcd_Cmd 001A             ?_Config_USARTT 0070  
              ??__Umul8_16 0075           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 005B           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0068  
         __size_of___llmod 0056           __size_of___lwdiv 0046           __size_of___lwmod 003C  
              _fround$1271 0054                _fround$1272 0050         __end_of__stringtab 0810  
               sprintf@val 00B7         __end_of_conversor2 1CE5                   ___xxtofl 1DC9  
         __size_of_isdigit 0012           __size_of_recibir 000B            ___lwdiv@divisor 0021  
          ___lwdiv@counter 0026                   __ptext10 1F42                   __ptext11 1960  
                 __ptext20 1889                   __ptext12 1B7C                   __ptext21 187A  
                 __ptext13 1CE5                   __ptext30 1937                   __ptext22 18B5  
                 __ptext14 1D4D                   __ptext31 1A09                   __ptext23 18CB  
                 __ptext15 1B2C                   __ptext32 18FE                   __ptext24 1892  
                 __ptext16 1274                   __ptext33 07D8                   __ptext25 19C7  
                 __ptext17 189D                   __ptext34 1A95                   __ptext26 1C89  
                 __ptext18 1015                   __ptext35 18A8                   __ptext27 1C2D  
                 __ptext19 1ADC                   __ptext36 18E4                   __ptext28 1DC9  
                 __ptext37 1874                   __ptext29 093C                   __ptext38 08C2  
                 __ptext39 1919           __size_of_spiInit 0016           __size_of_spiRead 0009  
                 __powers_ 0810           __size_of_sprintf F0CF              __size_of_main 01BB  
                pnum$text1 000F                   _recibido 00E1               spiInit@sType 0076  
        spiInit@sClockIdle 0074                ??_conversor 0049                 _INTCONbits 000B  
                 isdigit@c 0074                   scale@scl 0057                   intlevel1 0000  
                sprintf@ap 00B6           __tdiv_to_l_@exp1 002D           __tdiv_to_l_@cntr 002C  
                sprintf@sp 00C9           __tdiv_to_l_@quot 0028           ___lwmod@dividend 0075  
         ___lldiv@dividend 0024           ??_spiReceiveWait 0073            ??_Config_USARTT 0073  
                stringcode 080A         Lcd_Set_Cursor@temp 0022               ?__tdiv_to_l_ 0020  
   __Umul8_16@multiplicand 0073                   sprintf@c 00CC                   sprintf@f 00A8  
         ___lldiv@quotient 0028            ___lwmod@divisor 0073            ___lwmod@counter 0020  
                 stringdir 080A                   stringtab 0800              ___fladd@signs 0069  
             ___fladd@aexp 006A               ___fladd@bexp 006B       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  
