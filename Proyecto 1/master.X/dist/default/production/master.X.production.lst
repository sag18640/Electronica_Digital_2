

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 23:38:25 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	idataCOMMON
   485  07FE                     __pidataCOMMON:
   486                           
   487                           ;initializer for _turno
   488  07FE  3401               	retlw	1
   489                           
   490                           ;initializer for _flag
   491  07FF  3401               	retlw	1
   492                           
   493                           	psect	strings
   494  1800                     __pstrings:
   495  1800                     stringtab:
   496  1800                     __stringtab:
   497                           
   498                           ;	String table - string pointers are 1 byte each
   499  1800  1BFF               	btfsc	btemp+1,7
   500  1801  280A               	ljmp	stringcode
   501  1802  1383               	bcf	3,7
   502  1803  187F               	btfsc	btemp+1,0
   503  1804  1783               	bsf	3,7
   504  1805  0800               	movf	0,w
   505  1806  0A84               	incf	4,f
   506  1807  1903               	skipnz
   507  1808  0AFF               	incf	btemp+1,f
   508  1809  0008               	return
   509  180A                     stringcode:
   510  180A                     stringdir:
   511  180A  3018               	movlw	high stringdir
   512  180B  008A               	movwf	10
   513  180C  0804               	movf	4,w
   514  180D  0A84               	incf	4,f
   515  180E  0782               	addwf	2,f
   516  180F                     __stringbase:
   517  180F  3400               	retlw	0
   518  1810                     __end_of__stringtab:
   519  1810                     __powers_:
   520  1810  3400               	retlw	0
   521  1811  3400               	retlw	0
   522  1812  3480               	retlw	128
   523  1813  343F               	retlw	63
   524  1814  3400               	retlw	0
   525  1815  3400               	retlw	0
   526  1816  3420               	retlw	32
   527  1817  3441               	retlw	65
   528  1818  3400               	retlw	0
   529  1819  3400               	retlw	0
   530  181A  34C8               	retlw	200
   531  181B  3442               	retlw	66
   532  181C  3400               	retlw	0
   533  181D  3400               	retlw	0
   534  181E  347A               	retlw	122
   535  181F  3444               	retlw	68
   536  1820  3400               	retlw	0
   537  1821  3440               	retlw	64
   538  1822  341C               	retlw	28
   539  1823  3446               	retlw	70
   540  1824  3400               	retlw	0
   541  1825  3450               	retlw	80
   542  1826  34C3               	retlw	195
   543  1827  3447               	retlw	71
   544  1828  3400               	retlw	0
   545  1829  3424               	retlw	36
   546  182A  3474               	retlw	116
   547  182B  3449               	retlw	73
   548  182C  3480               	retlw	128
   549  182D  3496               	retlw	150
   550  182E  3418               	retlw	24
   551  182F  344B               	retlw	75
   552  1830  3420               	retlw	32
   553  1831  34BC               	retlw	188
   554  1832  34BE               	retlw	190
   555  1833  344C               	retlw	76
   556  1834  3428               	retlw	40
   557  1835  346B               	retlw	107
   558  1836  346E               	retlw	110
   559  1837  344E               	retlw	78
   560  1838  34F9               	retlw	249
   561  1839  3402               	retlw	2
   562  183A  3415               	retlw	21
   563  183B  3450               	retlw	80
   564  183C  34EC               	retlw	236
   565  183D  3478               	retlw	120
   566  183E  34AD               	retlw	173
   567  183F  3460               	retlw	96
   568  1840  34CA               	retlw	202
   569  1841  34F2               	retlw	242
   570  1842  3449               	retlw	73
   571  1843  3471               	retlw	113
   572  1844                     __end_of__powers_:
   573  1844                     __npowers_:
   574  1844  3400               	retlw	0
   575  1845  3400               	retlw	0
   576  1846  3480               	retlw	128
   577  1847  343F               	retlw	63
   578  1848  34CD               	retlw	205
   579  1849  34CC               	retlw	204
   580  184A  34CC               	retlw	204
   581  184B  343D               	retlw	61
   582  184C  340A               	retlw	10
   583  184D  34D7               	retlw	215
   584  184E  3423               	retlw	35
   585  184F  343C               	retlw	60
   586  1850  346F               	retlw	111
   587  1851  3412               	retlw	18
   588  1852  3483               	retlw	131
   589  1853  343A               	retlw	58
   590  1854  3417               	retlw	23
   591  1855  34B7               	retlw	183
   592  1856  34D1               	retlw	209
   593  1857  3438               	retlw	56
   594  1858  34AC               	retlw	172
   595  1859  34C5               	retlw	197
   596  185A  3427               	retlw	39
   597  185B  3437               	retlw	55
   598  185C  34BD               	retlw	189
   599  185D  3437               	retlw	55
   600  185E  3486               	retlw	134
   601  185F  3435               	retlw	53
   602  1860  3495               	retlw	149
   603  1861  34BF               	retlw	191
   604  1862  34D6               	retlw	214
   605  1863  3433               	retlw	51
   606  1864  3477               	retlw	119
   607  1865  34CC               	retlw	204
   608  1866  342B               	retlw	43
   609  1867  3432               	retlw	50
   610  1868  345F               	retlw	95
   611  1869  3470               	retlw	112
   612  186A  3489               	retlw	137
   613  186B  3430               	retlw	48
   614  186C  34FF               	retlw	255
   615  186D  34E6               	retlw	230
   616  186E  34DB               	retlw	219
   617  186F  342E               	retlw	46
   618  1870  3408               	retlw	8
   619  1871  34E5               	retlw	229
   620  1872  343C               	retlw	60
   621  1873  341E               	retlw	30
   622  1874  3460               	retlw	96
   623  1875  3442               	retlw	66
   624  1876  34A2               	retlw	162
   625  1877  340D               	retlw	13
   626  1878                     __end_of__npowers_:
   627  1878                     _dpowers:
   628  1878  3401               	retlw	1
   629  1879  3400               	retlw	0
   630  187A  3400               	retlw	0
   631  187B  3400               	retlw	0
   632  187C  340A               	retlw	10
   633  187D  3400               	retlw	0
   634  187E  3400               	retlw	0
   635  187F  3400               	retlw	0
   636  1880  3464               	retlw	100
   637  1881  3400               	retlw	0
   638  1882  3400               	retlw	0
   639  1883  3400               	retlw	0
   640  1884  34E8               	retlw	232
   641  1885  3403               	retlw	3
   642  1886  3400               	retlw	0
   643  1887  3400               	retlw	0
   644  1888  3410               	retlw	16
   645  1889  3427               	retlw	39
   646  188A  3400               	retlw	0
   647  188B  3400               	retlw	0
   648  188C  34A0               	retlw	160
   649  188D  3486               	retlw	134
   650  188E  3401               	retlw	1
   651  188F  3400               	retlw	0
   652  1890  3440               	retlw	64
   653  1891  3442               	retlw	66
   654  1892  340F               	retlw	15
   655  1893  3400               	retlw	0
   656  1894  3480               	retlw	128
   657  1895  3496               	retlw	150
   658  1896  3498               	retlw	152
   659  1897  3400               	retlw	0
   660  1898  3400               	retlw	0
   661  1899  34E1               	retlw	225
   662  189A  34F5               	retlw	245
   663  189B  3405               	retlw	5
   664  189C  3400               	retlw	0
   665  189D  34CA               	retlw	202
   666  189E  349A               	retlw	154
   667  189F  343B               	retlw	59
   668  18A0                     __end_of_dpowers:
   669  0014                     _SSPCON	set	20
   670  0019                     _TXREG	set	25
   671  000B                     _INTCONbits	set	11
   672  0009                     _PORTEbits	set	9
   673  001A                     _RCREG	set	26
   674  0018                     _RCSTAbits	set	24
   675  000C                     _PIR1bits	set	12
   676  000B                     _INTCON	set	11
   677  0006                     _PORTB	set	6
   678  0009                     _PORTE	set	9
   679  0008                     _PORTD	set	8
   680  0007                     _PORTC	set	7
   681  0013                     _SSPBUF	set	19
   682  0007                     _PORTCbits	set	7
   683  0094                     _SSPSTATbits	set	148
   684  0094                     _SSPSTAT	set	148
   685  008C                     _PIE1bits	set	140
   686  0099                     _SPBRG	set	153
   687  0098                     _TXSTAbits	set	152
   688  0086                     _TRISB	set	134
   689  0089                     _TRISE	set	137
   690  0087                     _TRISC	set	135
   691  0088                     _TRISD	set	136
   692  043B                     _TRISC3	set	1083
   693  043D                     _TRISC5	set	1085
   694  04C1                     _TRMT	set	1217
   695  0187                     _BAUDCTLbits	set	391
   696  0188                     _ANSEL	set	392
   697  18A0                     STR_1:
   698  18A0  3453               	retlw	83	;'S'
   699  18A1  3431               	retlw	49	;'1'
   700  18A2  343A               	retlw	58	;':'
   701  18A3  3420               	retlw	32	;' '
   702  18A4  3420               	retlw	32	;' '
   703  18A5  3420               	retlw	32	;' '
   704  18A6  3453               	retlw	83	;'S'
   705  18A7  3432               	retlw	50	;'2'
   706  18A8  343A               	retlw	58	;':'
   707  18A9  3420               	retlw	32	;' '
   708  18AA  3420               	retlw	32	;' '
   709  18AB  3420               	retlw	32	;' '
   710  18AC  3420               	retlw	32	;' '
   711  18AD  3453               	retlw	83	;'S'
   712  18AE  3433               	retlw	51	;'3'
   713  18AF  343A               	retlw	58	;':'
   714  18B0  3400               	retlw	0
   715  18B1                     STR_2:
   716  18B1  3425               	retlw	37	;'%'
   717  18B2  3433               	retlw	51	;'3'
   718  18B3  342E               	retlw	46	;'.'
   719  18B4  3432               	retlw	50	;'2'
   720  18B5  3466               	retlw	102	;'f'
   721  18B6  3443               	retlw	67	;'C'
   722  18B7  3400               	retlw	0
   723                           
   724                           	psect	cinit
   725  000F                     start_initialization:	
   726                           ; #config settings
   727                           
   728  000F                     __initialization:
   729                           
   730                           ; Initialize objects allocated to COMMON
   731  000F  120A  118A  27FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   732  0014  00F8               	movwf	__pdataCOMMON& (0+127)
   733  0015  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   734  001A  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   735                           
   736                           ; Clear objects allocated to BANK3
   737  001B  1783               	bsf	3,7	;select IRP bank2
   738  001C  3090               	movlw	low __pbssBANK3
   739  001D  0084               	movwf	4
   740  001E  30A4               	movlw	low (__pbssBANK3+20)
   741  001F  160A  158A  22DB  120A  118A  	fcall	clear_ram0
   742                           
   743                           ; Clear objects allocated to BANK1
   744  0024  1383               	bcf	3,7	;select IRP bank0
   745  0025  30D0               	movlw	low __pbssBANK1
   746  0026  0084               	movwf	4
   747  0027  30E5               	movlw	low (__pbssBANK1+21)
   748  0028  160A  158A  22DB  120A  118A  	fcall	clear_ram0
   749                           
   750                           ; Clear objects allocated to BANK0
   751  002D  01ED               	clrf	__pbssBANK0& (0+127)
   752                           
   753                           ; Clear objects allocated to COMMON
   754  002E  01FA               	clrf	__pbssCOMMON& (0+127)
   755  002F                     end_of_initialization:	
   756                           ;End of C runtime variable initialization code
   757                           
   758  002F                     __end_of__initialization:
   759  002F  0183               	clrf	3
   760  0030  120A  158A  287C   	ljmp	_main	;jump to C main() function
   761                           
   762                           	psect	bssCOMMON
   763  007A                     __pbssCOMMON:
   764  007A                     _retorno:
   765  007A                     	ds	1
   766                           
   767                           	psect	dataCOMMON
   768  0078                     __pdataCOMMON:
   769  0078                     _turno:
   770  0078                     	ds	1
   771  0079                     _flag:
   772  0079                     	ds	1
   773                           
   774                           	psect	bssBANK0
   775  006D                     __pbssBANK0:
   776  006D                     _valorT:
   777  006D                     	ds	1
   778                           
   779                           	psect	bssBANK1
   780  00D0                     __pbssBANK1:
   781  00D0                     _p:
   782  00D0                     	ds	4
   783  00D4                     _x:
   784  00D4                     	ds	4
   785  00D8                     _vv:
   786  00D8                     	ds	4
   787  00DC                     _v:
   788  00DC                     	ds	4
   789  00E0                     _enviado:
   790  00E0                     	ds	1
   791  00E1                     _recibido:
   792  00E1                     	ds	1
   793  00E2                     _count:
   794  00E2                     	ds	1
   795  00E3                     _valorA:
   796  00E3                     	ds	1
   797  00E4                     _valorC:
   798  00E4                     	ds	1
   799                           
   800                           	psect	bssBANK3
   801  0190                     __pbssBANK3:
   802  0190                     _s:
   803  0190                     	ds	20
   804                           
   805                           	psect	clrtext
   806  1ADB                     clear_ram0:	
   807                           ;	Called with FSR containing the base address, and
   808                           ;	W with the last address+1
   809                           
   810  1ADB  0064               	clrwdt	;clear the watchdog before getting into this loop
   811  1ADC                     clrloop0:
   812  1ADC  0180               	clrf	0	;clear RAM location pointed to by FSR
   813  1ADD  0A84               	incf	4,f	;increment pointer
   814  1ADE  0604               	xorwf	4,w	;XOR with final address
   815  1ADF  1903               	btfsc	3,2	;have we reached the end yet?
   816  1AE0  3400               	retlw	0	;all done for this memory range, return
   817  1AE1  0604               	xorwf	4,w	;XOR again to restore value
   818  1AE2  2ADC               	goto	clrloop0	;do the next byte
   819                           
   820                           	psect	cstackBANK1
   821  00A0                     __pcstackBANK1:
   822  00A0                     ?___flsub:
   823  00A0                     ___flsub@a:	
   824                           ; 4 bytes @ 0x0
   825                           
   826                           
   827                           ; 4 bytes @ 0x0
   828  00A0                     	ds	4
   829  00A4                     ___flsub@b:
   830                           
   831                           ; 4 bytes @ 0x4
   832  00A4                     	ds	4
   833  00A8                     ?_sprintf:
   834  00A8                     sprintf@f:	
   835                           ; 2 bytes @ 0x8
   836                           
   837                           
   838                           ; 1 bytes @ 0x8
   839  00A8                     	ds	5
   840  00AD                     ??_sprintf:
   841                           
   842                           ; 1 bytes @ 0xD
   843  00AD                     	ds	5
   844  00B2                     _sprintf$1267:
   845                           
   846                           ; 4 bytes @ 0x12
   847  00B2                     	ds	4
   848  00B6                     sprintf@ap:
   849                           
   850                           ; 1 bytes @ 0x16
   851  00B6                     	ds	1
   852  00B7                     sprintf@val:
   853                           
   854                           ; 4 bytes @ 0x17
   855  00B7                     	ds	4
   856  00BB                     sprintf@flag:
   857                           
   858                           ; 2 bytes @ 0x1B
   859  00BB                     	ds	2
   860  00BD                     sprintf@width:
   861                           
   862                           ; 2 bytes @ 0x1D
   863  00BD                     	ds	2
   864  00BF                     sprintf@tmpval:
   865                           
   866                           ; 4 bytes @ 0x1F
   867  00BF                     	ds	4
   868  00C3                     sprintf@eexp:
   869                           
   870                           ; 2 bytes @ 0x23
   871  00C3                     	ds	2
   872  00C5                     sprintf@fval:
   873                           
   874                           ; 4 bytes @ 0x25
   875  00C5                     	ds	4
   876  00C9                     sprintf@sp:
   877                           
   878                           ; 1 bytes @ 0x29
   879  00C9                     	ds	1
   880  00CA                     sprintf@prec:
   881                           
   882                           ; 2 bytes @ 0x2A
   883  00CA                     	ds	2
   884  00CC                     sprintf@c:
   885                           
   886                           ; 1 bytes @ 0x2C
   887  00CC                     	ds	1
   888  00CD                     ??_main:
   889                           
   890                           ; 1 bytes @ 0x2D
   891  00CD                     	ds	3
   892                           
   893                           	psect	cstackCOMMON
   894  0070                     __pcstackCOMMON:
   895  0070                     ?_isdigit:
   896  0070                     ?_setup:	
   897                           ; 1 bit 
   898                           
   899  0070                     ?_Config_USARTT:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_recibir:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_Lcd_Init:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_Lcd_Clear:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_spiRead:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_main:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_ISR:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ??_ISR:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_Lcd_Port:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_Lcd_Cmd:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_Lcd_Write_Char:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_spiReceiveWait:	
   933                           ; 1 bytes @ 0x0
   934                           
   935                           
   936                           ; 1 bytes @ 0x0
   937  0070                     	ds	3
   938  0073                     ??_setup:
   939  0073                     ??_Config_USARTT:	
   940                           ; 1 bytes @ 0x3
   941                           
   942  0073                     ??_recibir:	
   943                           ; 1 bytes @ 0x3
   944                           
   945  0073                     ?_spiInit:	
   946                           ; 1 bytes @ 0x3
   947                           
   948  0073                     ??_spiRead:	
   949                           ; 1 bytes @ 0x3
   950                           
   951  0073                     ??_isdigit:	
   952                           ; 1 bytes @ 0x3
   953                           
   954  0073                     ??__tdiv_to_l_:	
   955                           ; 1 bytes @ 0x3
   956                           
   957  0073                     ??__div_to_l_:	
   958                           ; 1 bytes @ 0x3
   959                           
   960  0073                     ??_Lcd_Port:	
   961                           ; 1 bytes @ 0x3
   962                           
   963  0073                     ??_spiReceiveWait:	
   964                           ; 1 bytes @ 0x3
   965                           
   966  0073                     ??___lldiv:	
   967                           ; 1 bytes @ 0x3
   968                           
   969  0073                     ??___fleq:	
   970                           ; 1 bytes @ 0x3
   971                           
   972  0073                     ??___flge:	
   973                           ; 1 bytes @ 0x3
   974                           
   975  0073                     ??___llmod:	
   976                           ; 1 bytes @ 0x3
   977                           
   978  0073                     ?__Umul8_16:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  0073                     ?___wmul:	
   982                           ; 2 bytes @ 0x3
   983                           
   984  0073                     ?___awmod:	
   985                           ; 2 bytes @ 0x3
   986                           
   987  0073                     ?___lwmod:	
   988                           ; 2 bytes @ 0x3
   989                           
   990  0073                     ?___flneg:	
   991                           ; 2 bytes @ 0x3
   992                           
   993  0073                     ?___xxtofl:	
   994                           ; 4 bytes @ 0x3
   995                           
   996  0073                     Lcd_Port@a:	
   997                           ; 4 bytes @ 0x3
   998                           
   999  0073                     spiInit@sDataSample:	
  1000                           ; 1 bytes @ 0x3
  1001                           
  1002  0073                     __Umul8_16@multiplicand:	
  1003                           ; 1 bytes @ 0x3
  1004                           
  1005  0073                     _isdigit$1075:	
  1006                           ; 1 bytes @ 0x3
  1007                           
  1008  0073                     ___wmul@multiplier:	
  1009                           ; 1 bytes @ 0x3
  1010                           
  1011  0073                     ___awmod@divisor:	
  1012                           ; 2 bytes @ 0x3
  1013                           
  1014  0073                     ___lwmod@divisor:	
  1015                           ; 2 bytes @ 0x3
  1016                           
  1017  0073                     ___flneg@f1:	
  1018                           ; 2 bytes @ 0x3
  1019                           
  1020  0073                     ___xxtofl@val:	
  1021                           ; 4 bytes @ 0x3
  1022                           
  1023                           
  1024                           ; 4 bytes @ 0x3
  1025  0073                     	ds	1
  1026  0074                     ??_Lcd_Cmd:
  1027  0074                     ??_Lcd_Write_Char:	
  1028                           ; 1 bytes @ 0x4
  1029                           
  1030  0074                     spiInit@sClockIdle:	
  1031                           ; 1 bytes @ 0x4
  1032                           
  1033  0074                     ___llmod@counter:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036  0074                     isdigit@c:	
  1037                           ; 1 bytes @ 0x4
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x4
  1041  0074                     	ds	1
  1042  0075                     ??__Umul8_16:
  1043  0075                     Lcd_Write_Char@a:	
  1044                           ; 1 bytes @ 0x5
  1045                           
  1046  0075                     spiInit@sTransmitEdge:	
  1047                           ; 1 bytes @ 0x5
  1048                           
  1049  0075                     ___wmul@multiplicand:	
  1050                           ; 1 bytes @ 0x5
  1051                           
  1052  0075                     ___awmod@dividend:	
  1053                           ; 2 bytes @ 0x5
  1054                           
  1055  0075                     ___lwmod@dividend:	
  1056                           ; 2 bytes @ 0x5
  1057                           
  1058                           
  1059                           ; 2 bytes @ 0x5
  1060  0075                     	ds	1
  1061  0076                     ??_spiInit:
  1062  0076                     ?_Lcd_Write_String:	
  1063                           ; 1 bytes @ 0x6
  1064                           
  1065  0076                     Lcd_Cmd@a:	
  1066                           ; 1 bytes @ 0x6
  1067                           
  1068  0076                     spiInit@sType:	
  1069                           ; 1 bytes @ 0x6
  1070                           
  1071  0076                     Lcd_Write_String@a:	
  1072                           ; 1 bytes @ 0x6
  1073                           
  1074                           
  1075                           ; 2 bytes @ 0x6
  1076  0076                     	ds	1
  1077  0077                     ??_Lcd_Clear:
  1078  0077                     ?_Lcd_Set_Cursor:	
  1079                           ; 1 bytes @ 0x7
  1080                           
  1081  0077                     ??___wmul:	
  1082                           ; 1 bytes @ 0x7
  1083                           
  1084  0077                     ??___awmod:	
  1085                           ; 1 bytes @ 0x7
  1086                           
  1087  0077                     ??___flneg:	
  1088                           ; 1 bytes @ 0x7
  1089                           
  1090  0077                     ??___lwmod:	
  1091                           ; 1 bytes @ 0x7
  1092                           
  1093  0077                     Lcd_Set_Cursor@b:	
  1094                           ; 1 bytes @ 0x7
  1095                           
  1096                           
  1097                           ; 1 bytes @ 0x7
  1098  0077                     	ds	1
  1099  0078                     ??___flsub:
  1100                           
  1101                           	psect	cstackBANK0
  1102  0020                     __pcstackBANK0:	
  1103                           ; 1 bytes @ 0x8
  1104                           
  1105  0020                     ?___fleq:
  1106  0020                     ?___flge:	
  1107                           ; 1 bit 
  1108                           
  1109  0020                     ??_Lcd_Init:	
  1110                           ; 1 bit 
  1111                           
  1112  0020                     ??_Lcd_Set_Cursor:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0020                     ??_Lcd_Write_String:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0020                     ??___xxtofl:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0020                     ?__tdiv_to_l_:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0020                     ?__div_to_l_:	
  1125                           ; 4 bytes @ 0x0
  1126                           
  1127  0020                     ?___lldiv:	
  1128                           ; 4 bytes @ 0x0
  1129                           
  1130  0020                     ?___llmod:	
  1131                           ; 4 bytes @ 0x0
  1132                           
  1133  0020                     ___awmod@counter:	
  1134                           ; 4 bytes @ 0x0
  1135                           
  1136  0020                     ___lwmod@counter:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0020                     ___wmul@product:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0020                     __Umul8_16@product:	
  1143                           ; 2 bytes @ 0x0
  1144                           
  1145  0020                     ___lldiv@divisor:	
  1146                           ; 2 bytes @ 0x0
  1147                           
  1148  0020                     __div_to_l_@f1:	
  1149                           ; 4 bytes @ 0x0
  1150                           
  1151  0020                     ___fleq@ff1:	
  1152                           ; 4 bytes @ 0x0
  1153                           
  1154  0020                     ___flge@ff1:	
  1155                           ; 4 bytes @ 0x0
  1156                           
  1157  0020                     __tdiv_to_l_@f1:	
  1158                           ; 4 bytes @ 0x0
  1159                           
  1160  0020                     ___llmod@divisor:	
  1161                           ; 4 bytes @ 0x0
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0x0
  1165  0020                     	ds	1
  1166  0021                     ?___lwdiv:
  1167  0021                     Lcd_Set_Cursor@a:	
  1168                           ; 2 bytes @ 0x1
  1169                           
  1170  0021                     ___awmod@sign:	
  1171                           ; 1 bytes @ 0x1
  1172                           
  1173  0021                     ___lwdiv@divisor:	
  1174                           ; 1 bytes @ 0x1
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x1
  1178  0021                     	ds	1
  1179  0022                     ?___awdiv:
  1180  0022                     Lcd_Set_Cursor@temp:	
  1181                           ; 2 bytes @ 0x2
  1182                           
  1183  0022                     ___awdiv@divisor:	
  1184                           ; 1 bytes @ 0x2
  1185                           
  1186  0022                     __Umul8_16@word_mpld:	
  1187                           ; 2 bytes @ 0x2
  1188                           
  1189                           
  1190                           ; 2 bytes @ 0x2
  1191  0022                     	ds	1
  1192  0023                     Lcd_Write_String@i:
  1193  0023                     ___lwdiv@dividend:	
  1194                           ; 2 bytes @ 0x3
  1195                           
  1196                           
  1197                           ; 2 bytes @ 0x3
  1198  0023                     	ds	1
  1199  0024                     __Umul8_16@multiplier:
  1200  0024                     ___xxtofl@sign:	
  1201                           ; 1 bytes @ 0x4
  1202                           
  1203  0024                     ___awdiv@dividend:	
  1204                           ; 1 bytes @ 0x4
  1205                           
  1206  0024                     ___lldiv@dividend:	
  1207                           ; 2 bytes @ 0x4
  1208                           
  1209  0024                     __div_to_l_@f2:	
  1210                           ; 4 bytes @ 0x4
  1211                           
  1212  0024                     ___fleq@ff2:	
  1213                           ; 4 bytes @ 0x4
  1214                           
  1215  0024                     ___flge@ff2:	
  1216                           ; 4 bytes @ 0x4
  1217                           
  1218  0024                     __tdiv_to_l_@f2:	
  1219                           ; 4 bytes @ 0x4
  1220                           
  1221  0024                     ___llmod@dividend:	
  1222                           ; 4 bytes @ 0x4
  1223                           
  1224                           
  1225                           ; 4 bytes @ 0x4
  1226  0024                     	ds	1
  1227  0025                     ??___lwdiv:
  1228  0025                     ___xxtofl@exp:	
  1229                           ; 1 bytes @ 0x5
  1230                           
  1231                           
  1232                           ; 1 bytes @ 0x5
  1233  0025                     	ds	1
  1234  0026                     ??___awdiv:
  1235  0026                     ___lwdiv@counter:	
  1236                           ; 1 bytes @ 0x6
  1237                           
  1238  0026                     ___xxtofl@arg:	
  1239                           ; 1 bytes @ 0x6
  1240                           
  1241                           
  1242                           ; 4 bytes @ 0x6
  1243  0026                     	ds	1
  1244  0027                     ___awdiv@counter:
  1245  0027                     ___lwdiv@quotient:	
  1246                           ; 1 bytes @ 0x7
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0x7
  1250  0027                     	ds	1
  1251  0028                     ___awdiv@sign:
  1252  0028                     ___lldiv@quotient:	
  1253                           ; 1 bytes @ 0x8
  1254                           
  1255  0028                     __div_to_l_@quot:	
  1256                           ; 4 bytes @ 0x8
  1257                           
  1258  0028                     __tdiv_to_l_@quot:	
  1259                           ; 4 bytes @ 0x8
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0x8
  1263  0028                     	ds	1
  1264  0029                     ___awdiv@quotient:
  1265                           
  1266                           ; 2 bytes @ 0x9
  1267  0029                     	ds	2
  1268  002B                     ?___flmul:
  1269  002B                     ___flmul@b:	
  1270                           ; 4 bytes @ 0xB
  1271                           
  1272                           
  1273                           ; 4 bytes @ 0xB
  1274  002B                     	ds	1
  1275  002C                     ___lldiv@counter:
  1276  002C                     __div_to_l_@cntr:	
  1277                           ; 1 bytes @ 0xC
  1278                           
  1279  002C                     __tdiv_to_l_@cntr:	
  1280                           ; 1 bytes @ 0xC
  1281                           
  1282                           
  1283                           ; 1 bytes @ 0xC
  1284  002C                     	ds	1
  1285  002D                     __div_to_l_@exp1:
  1286  002D                     __tdiv_to_l_@exp1:	
  1287                           ; 1 bytes @ 0xD
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0xD
  1291  002D                     	ds	2
  1292  002F                     ___flmul@a:
  1293                           
  1294                           ; 4 bytes @ 0xF
  1295  002F                     	ds	4
  1296  0033                     ??___flmul:
  1297                           
  1298                           ; 1 bytes @ 0x13
  1299  0033                     	ds	5
  1300  0038                     ___flmul@sign:
  1301                           
  1302                           ; 1 bytes @ 0x18
  1303  0038                     	ds	1
  1304  0039                     ___flmul@grs:
  1305                           
  1306                           ; 4 bytes @ 0x19
  1307  0039                     	ds	4
  1308  003D                     ___flmul@aexp:
  1309                           
  1310                           ; 1 bytes @ 0x1D
  1311  003D                     	ds	1
  1312  003E                     ___flmul@bexp:
  1313                           
  1314                           ; 1 bytes @ 0x1E
  1315  003E                     	ds	1
  1316  003F                     ___flmul@prod:
  1317                           
  1318                           ; 4 bytes @ 0x1F
  1319  003F                     	ds	4
  1320  0043                     ___flmul@temp:
  1321                           
  1322                           ; 2 bytes @ 0x23
  1323  0043                     	ds	2
  1324  0045                     ?_conversor2:
  1325  0045                     ?_fround:	
  1326                           ; 4 bytes @ 0x25
  1327                           
  1328  0045                     ?_scale:	
  1329                           ; 4 bytes @ 0x25
  1330                           
  1331                           
  1332                           ; 4 bytes @ 0x25
  1333  0045                     	ds	4
  1334  0049                     ??_conversor2:
  1335  0049                     ??_fround:	
  1336                           ; 1 bytes @ 0x29
  1337                           
  1338  0049                     ??_scale:	
  1339                           ; 1 bytes @ 0x29
  1340                           
  1341                           
  1342                           ; 1 bytes @ 0x29
  1343  0049                     	ds	4
  1344  004D                     conversor2@val:
  1345                           
  1346                           ; 1 bytes @ 0x2D
  1347  004D                     	ds	3
  1348  0050                     _fround$1265:
  1349                           
  1350                           ; 4 bytes @ 0x30
  1351  0050                     	ds	3
  1352  0053                     _scale$1266:
  1353                           
  1354                           ; 4 bytes @ 0x33
  1355  0053                     	ds	1
  1356  0054                     _fround$1264:
  1357                           
  1358                           ; 4 bytes @ 0x34
  1359  0054                     	ds	3
  1360  0057                     scale@scl:
  1361                           
  1362                           ; 1 bytes @ 0x37
  1363  0057                     	ds	1
  1364  0058                     ?___fltol:
  1365  0058                     fround@prec:	
  1366                           ; 4 bytes @ 0x38
  1367                           
  1368  0058                     ___fltol@f1:	
  1369                           ; 1 bytes @ 0x38
  1370                           
  1371                           
  1372                           ; 4 bytes @ 0x38
  1373  0058                     	ds	1
  1374  0059                     ?___fladd:
  1375  0059                     ___fladd@b:	
  1376                           ; 4 bytes @ 0x39
  1377                           
  1378                           
  1379                           ; 4 bytes @ 0x39
  1380  0059                     	ds	3
  1381  005C                     ??___fltol:
  1382                           
  1383                           ; 1 bytes @ 0x3C
  1384  005C                     	ds	1
  1385  005D                     ___fladd@a:
  1386                           
  1387                           ; 4 bytes @ 0x3D
  1388  005D                     	ds	4
  1389  0061                     ??___fladd:
  1390  0061                     ___fltol@sign1:	
  1391                           ; 1 bytes @ 0x41
  1392                           
  1393                           
  1394                           ; 1 bytes @ 0x41
  1395  0061                     	ds	1
  1396  0062                     ___fltol@exp1:
  1397                           
  1398                           ; 1 bytes @ 0x42
  1399  0062                     	ds	7
  1400  0069                     ___fladd@signs:
  1401                           
  1402                           ; 1 bytes @ 0x49
  1403  0069                     	ds	1
  1404  006A                     ___fladd@aexp:
  1405                           
  1406                           ; 1 bytes @ 0x4A
  1407  006A                     	ds	1
  1408  006B                     ___fladd@bexp:
  1409                           
  1410                           ; 1 bytes @ 0x4B
  1411  006B                     	ds	1
  1412  006C                     ___fladd@grs:
  1413                           
  1414                           ; 1 bytes @ 0x4C
  1415  006C                     	ds	1
  1416                           
  1417                           	psect	maintext
  1418  087C                     __pmaintext:	
  1419 ;;
  1420 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1421 ;;
  1422 ;; *************** function _main *****************
  1423 ;; Defined at:
  1424 ;;		line 67 in file "main.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : B00/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0
  1440 ;;      Temps:          0       0       3       0       0
  1441 ;;      Totals:         0       0       3       0       0
  1442 ;;Total ram usage:        3 bytes
  1443 ;; Hardware stack levels required when called:    5
  1444 ;; This function calls:
  1445 ;;		_Config_USARTT
  1446 ;;		_Lcd_Clear
  1447 ;;		_Lcd_Init
  1448 ;;		_Lcd_Set_Cursor
  1449 ;;		_Lcd_Write_String
  1450 ;;		_conversor2
  1451 ;;		_recibir
  1452 ;;		_setup
  1453 ;;		_spiInit
  1454 ;;		_spiRead
  1455 ;;		_sprintf
  1456 ;; This function is called by:
  1457 ;;		Startup code after reset
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _main
  1463  087C                     _main:
  1464  087C                     l4351:	
  1465                           ;incstack = 0
  1466                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1467                           
  1468                           
  1469                           ;main.c: 68:     setup();
  1470  087C  160A  158A  237D  120A  158A  	fcall	_setup
  1471                           
  1472                           ;main.c: 69:     Config_USARTT();
  1473  0881  160A  158A  230F  120A  158A  	fcall	_Config_USARTT
  1474  0886                     l4353:
  1475                           
  1476                           ;main.c: 70:     recibir();
  1477  0886  160A  158A  22EC  120A  158A  	fcall	_recibir
  1478  088B                     l4355:
  1479                           
  1480                           ;main.c: 71:     Lcd_Init();
  1481  088B  160A  158A  2497  120A  158A  	fcall	_Lcd_Init
  1482  0890                     l4357:
  1483                           
  1484                           ;main.c: 72:     Lcd_Clear();
  1485  0890  160A  158A  2302  120A  158A  	fcall	_Lcd_Clear
  1486  0895                     l4359:
  1487                           
  1488                           ;main.c: 73:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1489  0895  01F3               	clrf	spiInit@sDataSample
  1490  0896  01F4               	clrf	spiInit@sClockIdle
  1491  0897  01F5               	clrf	spiInit@sTransmitEdge
  1492  0898  3020               	movlw	32
  1493  0899  160A  158A  2332  120A  158A  	fcall	_spiInit
  1494  089E                     l4361:
  1495                           
  1496                           ;main.c: 77:         Lcd_Set_Cursor(1, 1);
  1497  089E  01F7               	clrf	Lcd_Set_Cursor@b
  1498  089F  0AF7               	incf	Lcd_Set_Cursor@b,f
  1499  08A0  3001               	movlw	1
  1500  08A1  120A  118A  27D8  120A  158A  	fcall	_Lcd_Set_Cursor
  1501  08A6                     l4363:
  1502                           
  1503                           ;main.c: 78:         Lcd_Write_String("S1:   S2:    S3:");
  1504  08A6  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1505  08A7  00F6               	movwf	Lcd_Write_String@a
  1506  08A8  3080               	movlw	128
  1507  08A9  00F7               	movwf	Lcd_Write_String@a+1
  1508  08AA  160A  158A  240B  120A  158A  	fcall	_Lcd_Write_String
  1509  08AF                     l4365:
  1510                           
  1511                           ;main.c: 85:         Lcd_Set_Cursor(2, 11);
  1512  08AF  300B               	movlw	11
  1513  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  1514  08B1  1303               	bcf	3,6	;RP1=0, select bank1
  1515  08B2  00CD               	movwf	??_main^(0+128)
  1516  08B3  084D               	movf	??_main^(0+128),w
  1517  08B4  00F7               	movwf	Lcd_Set_Cursor@b
  1518  08B5  3002               	movlw	2
  1519  08B6  120A  118A  27D8  120A  158A  	fcall	_Lcd_Set_Cursor
  1520  08BB                     l4367:
  1521                           
  1522                           ;main.c: 86:                 p = conversor2(valorT);
  1523  08BB  1283               	bcf	3,5	;RP0=0, select bank0
  1524  08BC  1303               	bcf	3,6	;RP1=0, select bank0
  1525  08BD  086D               	movf	_valorT,w
  1526  08BE  160A  158A  262F  120A  158A  	fcall	_conversor2
  1527  08C3  1283               	bcf	3,5	;RP0=0, select bank0
  1528  08C4  1303               	bcf	3,6	;RP1=0, select bank0
  1529  08C5  0848               	movf	?_conversor2+3,w
  1530  08C6  1683               	bsf	3,5	;RP0=1, select bank1
  1531  08C7  1303               	bcf	3,6	;RP1=0, select bank1
  1532  08C8  00D3               	movwf	(_p+3)^(0+128)
  1533  08C9  1283               	bcf	3,5	;RP0=0, select bank0
  1534  08CA  1303               	bcf	3,6	;RP1=0, select bank0
  1535  08CB  0847               	movf	?_conversor2+2,w
  1536  08CC  1683               	bsf	3,5	;RP0=1, select bank1
  1537  08CD  1303               	bcf	3,6	;RP1=0, select bank1
  1538  08CE  00D2               	movwf	(_p+2)^(0+128)
  1539  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  1540  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  1541  08D1  0846               	movf	?_conversor2+1,w
  1542  08D2  1683               	bsf	3,5	;RP0=1, select bank1
  1543  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  1544  08D4  00D1               	movwf	(_p+1)^(0+128)
  1545  08D5  1283               	bcf	3,5	;RP0=0, select bank0
  1546  08D6  1303               	bcf	3,6	;RP1=0, select bank0
  1547  08D7  0845               	movf	?_conversor2,w
  1548  08D8  1683               	bsf	3,5	;RP0=1, select bank1
  1549  08D9  1303               	bcf	3,6	;RP1=0, select bank1
  1550  08DA  00D0               	movwf	_p^(0+128)
  1551  08DB                     l4369:
  1552                           
  1553                           ;main.c: 87:         sprintf(s, "%3.2fC", p);
  1554  08DB  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1555  08DC  00CD               	movwf	??_main^(0+128)
  1556  08DD  084D               	movf	??_main^(0+128),w
  1557  08DE  00A8               	movwf	sprintf@f^(0+128)
  1558  08DF  0853               	movf	(_p+3)^(0+128),w
  1559  08E0  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1560  08E1  0852               	movf	(_p+2)^(0+128),w
  1561  08E2  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1562  08E3  0851               	movf	(_p+1)^(0+128),w
  1563  08E4  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1564  08E5  0850               	movf	_p^(0+128),w
  1565  08E6  00A9               	movwf	(?_sprintf^(0+128)+1)
  1566  08E7  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1567  08E8  160A  118A  24FC  120A  158A  	fcall	_sprintf
  1568  08ED                     l4371:
  1569                           
  1570                           ;main.c: 88:         Lcd_Write_String(s);
  1571  08ED  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1572  08EE  00F6               	movwf	Lcd_Write_String@a
  1573  08EF  3001               	movlw	1
  1574  08F0  00F7               	movwf	Lcd_Write_String@a+1
  1575  08F1  160A  158A  240B  120A  158A  	fcall	_Lcd_Write_String
  1576  08F6                     l4373:
  1577                           
  1578                           ;main.c: 94:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1579  08F6  3003               	movlw	3
  1580  08F7  1683               	bsf	3,5	;RP0=1, select bank1
  1581  08F8  1303               	bcf	3,6	;RP1=0, select bank1
  1582  08F9  00CE               	movwf	(??_main^(0+128)+1)
  1583  08FA  3097               	movlw	151
  1584  08FB  00CD               	movwf	??_main^(0+128)
  1585  08FC                     u7407:
  1586  08FC  0BCD               	decfsz	??_main^(0+128),f
  1587  08FD  28FC               	goto	u7407
  1588  08FE  0BCE               	decfsz	(??_main^(0+128)+1),f
  1589  08FF  28FC               	goto	u7407
  1590  0900                     l4375:
  1591                           
  1592                           ;main.c: 95:         PORTCbits.RC0 = 0;
  1593  0900  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0901  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0902  1007               	bcf	7,0	;volatile
  1596  0903                     l4377:
  1597                           
  1598                           ;main.c: 96:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1599  0903  3003               	movlw	3
  1600  0904  1683               	bsf	3,5	;RP0=1, select bank1
  1601  0905  1303               	bcf	3,6	;RP1=0, select bank1
  1602  0906  00CE               	movwf	(??_main^(0+128)+1)
  1603  0907  3097               	movlw	151
  1604  0908  00CD               	movwf	??_main^(0+128)
  1605  0909                     u7417:
  1606  0909  0BCD               	decfsz	??_main^(0+128),f
  1607  090A  2909               	goto	u7417
  1608  090B  0BCE               	decfsz	(??_main^(0+128)+1),f
  1609  090C  2909               	goto	u7417
  1610  090D                     l4379:
  1611                           
  1612                           ;main.c: 97:         SSPBUF = 0;
  1613  090D  1283               	bcf	3,5	;RP0=0, select bank0
  1614  090E  1303               	bcf	3,6	;RP1=0, select bank0
  1615  090F  0193               	clrf	19	;volatile
  1616  0910                     l4381:
  1617                           
  1618                           ;main.c: 98:         valorT = spiRead();
  1619  0910  160A  158A  22E3  120A  158A  	fcall	_spiRead
  1620  0915  1683               	bsf	3,5	;RP0=1, select bank1
  1621  0916  1303               	bcf	3,6	;RP1=0, select bank1
  1622  0917  00CD               	movwf	??_main^(0+128)
  1623  0918  084D               	movf	??_main^(0+128),w
  1624  0919  1283               	bcf	3,5	;RP0=0, select bank0
  1625  091A  1303               	bcf	3,6	;RP1=0, select bank0
  1626  091B  00ED               	movwf	_valorT
  1627  091C                     l4383:
  1628                           
  1629                           ;main.c: 99:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1630  091C  3003               	movlw	3
  1631  091D  1683               	bsf	3,5	;RP0=1, select bank1
  1632  091E  1303               	bcf	3,6	;RP1=0, select bank1
  1633  091F  00CE               	movwf	(??_main^(0+128)+1)
  1634  0920  3097               	movlw	151
  1635  0921  00CD               	movwf	??_main^(0+128)
  1636  0922                     u7427:
  1637  0922  0BCD               	decfsz	??_main^(0+128),f
  1638  0923  2922               	goto	u7427
  1639  0924  0BCE               	decfsz	(??_main^(0+128)+1),f
  1640  0925  2922               	goto	u7427
  1641  0926                     l4385:
  1642                           
  1643                           ;main.c: 100:         PORTCbits.RC0 = 1;
  1644  0926  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0927  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0928  1407               	bsf	7,0	;volatile
  1647  0929                     l4387:
  1648                           
  1649                           ;main.c: 101:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1650  0929  3003               	movlw	3
  1651  092A  1683               	bsf	3,5	;RP0=1, select bank1
  1652  092B  1303               	bcf	3,6	;RP1=0, select bank1
  1653  092C  00CF               	movwf	(??_main^(0+128)+2)
  1654  092D  3008               	movlw	8
  1655  092E  00CE               	movwf	(??_main^(0+128)+1)
  1656  092F  3076               	movlw	118
  1657  0930  00CD               	movwf	??_main^(0+128)
  1658  0931                     u7437:
  1659  0931  0BCD               	decfsz	??_main^(0+128),f
  1660  0932  2931               	goto	u7437
  1661  0933  0BCE               	decfsz	(??_main^(0+128)+1),f
  1662  0934  2931               	goto	u7437
  1663  0935  0BCF               	decfsz	(??_main^(0+128)+2),f
  1664  0936  2931               	goto	u7437
  1665  0937  0000               	nop
  1666  0938  289E               	goto	l4361
  1667  0939  120A  118A  280C   	ljmp	start
  1668  093C                     __end_of_main:
  1669                           
  1670                           	psect	text1
  1671  14FC                     __ptext1:	
  1672 ;; *************** function _sprintf *****************
  1673 ;; Defined at:
  1674 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  sp              1    wreg     PTR unsigned char 
  1677 ;;		 -> s(20), 
  1678 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1679 ;;		 -> STR_2(7), 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1682 ;;		 -> s(20), 
  1683 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1684 ;;  tmpval          4   31[BANK1 ] struct .
  1685 ;;  val             4   23[BANK1 ] unsigned long 
  1686 ;;  prec            2   42[BANK1 ] int 
  1687 ;;  eexp            2   35[BANK1 ] int 
  1688 ;;  width           2   29[BANK1 ] int 
  1689 ;;  flag            2   27[BANK1 ] unsigned short 
  1690 ;;  cp              2    0        PTR const unsigned char 
  1691 ;;  len             2    0        unsigned int 
  1692 ;;  c               1   44[BANK1 ] unsigned char 
  1693 ;;  ap              1   22[BANK1 ] PTR void [1]
  1694 ;;		 -> ?_sprintf(2), 
  1695 ;;  d               1    0        unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2    8[BANK1 ] int 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         0       0       5       0       0
  1706 ;;      Locals:         0       0      27       0       0
  1707 ;;      Temps:          0       0       5       0       0
  1708 ;;      Totals:         0       0      37       0       0
  1709 ;;Total ram usage:       37 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    4
  1712 ;; This function calls:
  1713 ;;		___awdiv
  1714 ;;		___fladd
  1715 ;;		___fleq
  1716 ;;		___flge
  1717 ;;		___flmul
  1718 ;;		___flneg
  1719 ;;		___flsub
  1720 ;;		___fltol
  1721 ;;		___lldiv
  1722 ;;		___llmod
  1723 ;;		___wmul
  1724 ;;		___xxtofl
  1725 ;;		__div_to_l_
  1726 ;;		__tdiv_to_l_
  1727 ;;		_fround
  1728 ;;		_isdigit
  1729 ;;		_scale
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           
  1736                           ;psect for function _sprintf
  1737  14FC                     _sprintf:
  1738                           
  1739                           ;incstack = 0
  1740                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1741                           ;sprintf@sp stored from wreg
  1742  14FC  1683               	bsf	3,5	;RP0=1, select bank1
  1743  14FD  1303               	bcf	3,6	;RP1=0, select bank1
  1744  14FE  00C9               	movwf	sprintf@sp^(0+128)
  1745  14FF                     l4089:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1748  14FF  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1749  1500  00AD               	movwf	??_sprintf^(0+128)
  1750  1501  082D               	movf	??_sprintf^(0+128),w
  1751  1502  00B6               	movwf	sprintf@ap^(0+128)
  1752  1503                     L1:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1755  1503  120A  118A  2DB2   	goto	l4339
  1756  1506                     l4091:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1759  1506  3025               	movlw	37
  1760  1507  064C               	xorwf	sprintf@c^(0+128),w
  1761  1508  1903               	btfsc	3,2
  1762  1509  2D0B               	goto	u6931
  1763  150A  2D0C               	goto	u6930
  1764  150B                     u6931:
  1765  150B  2D18               	goto	l4097
  1766  150C                     u6930:
  1767  150C                     l4093:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1770  150C  084C               	movf	sprintf@c^(0+128),w
  1771  150D  00AD               	movwf	??_sprintf^(0+128)
  1772  150E  0849               	movf	sprintf@sp^(0+128),w
  1773  150F  0084               	movwf	4
  1774  1510  082D               	movf	??_sprintf^(0+128),w
  1775  1511  1783               	bsf	3,7	;select IRP bank2
  1776  1512  0080               	movwf	0
  1777  1513                     l4095:
  1778  1513  3001               	movlw	1
  1779  1514  00AD               	movwf	??_sprintf^(0+128)
  1780  1515  082D               	movf	??_sprintf^(0+128),w
  1781  1516  07C9               	addwf	sprintf@sp^(0+128),f
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1784  1517  2D03               	goto	L1
  1785  1518                     l4097:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1788  1518  01BD               	clrf	sprintf@width^(0+128)
  1789  1519  01BE               	clrf	(sprintf@width+1)^(0+128)
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1792  151A  01BB               	clrf	sprintf@flag^(0+128)
  1793  151B  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1794  151C                     l4099:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1797  151C  0828               	movf	sprintf@f^(0+128),w
  1798  151D  0084               	movwf	4
  1799  151E  160A  158A  200A  160A  118A  	fcall	stringdir
  1800  1523  160A  158A  2320  160A  118A  	fcall	_isdigit
  1801  1528  1C03               	btfss	3,0
  1802  1529  2D2B               	goto	u6941
  1803  152A  2D2C               	goto	u6940
  1804  152B                     u6941:
  1805  152B  2D6C               	goto	l4111
  1806  152C                     u6940:
  1807  152C                     l4101:
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1810  152C  1683               	bsf	3,5	;RP0=1, select bank1
  1811  152D  1303               	bcf	3,6	;RP1=0, select bank1
  1812  152E  01BD               	clrf	sprintf@width^(0+128)
  1813  152F  01BE               	clrf	(sprintf@width+1)^(0+128)
  1814  1530                     l4103:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1817  1530  300A               	movlw	10
  1818  1531  00F3               	movwf	___wmul@multiplier
  1819  1532  3000               	movlw	0
  1820  1533  00F4               	movwf	___wmul@multiplier+1
  1821  1534  1683               	bsf	3,5	;RP0=1, select bank1
  1822  1535  1303               	bcf	3,6	;RP1=0, select bank1
  1823  1536  083E               	movf	(sprintf@width+1)^(0+128),w
  1824  1537  00F6               	movwf	___wmul@multiplicand+1
  1825  1538  083D               	movf	sprintf@width^(0+128),w
  1826  1539  00F5               	movwf	___wmul@multiplicand
  1827  153A  160A  158A  23E0  160A  118A  	fcall	___wmul
  1828  153F  0874               	movf	?___wmul+1,w
  1829  1540  1683               	bsf	3,5	;RP0=1, select bank1
  1830  1541  1303               	bcf	3,6	;RP1=0, select bank1
  1831  1542  00BE               	movwf	(sprintf@width+1)^(0+128)
  1832  1543  0873               	movf	?___wmul,w
  1833  1544  00BD               	movwf	sprintf@width^(0+128)
  1834  1545                     l4105:
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1837  1545  0828               	movf	sprintf@f^(0+128),w
  1838  1546  0084               	movwf	4
  1839  1547  160A  158A  200A  160A  118A  	fcall	stringdir
  1840  154C  3ED0               	addlw	208
  1841  154D  00AD               	movwf	??_sprintf^(0+128)
  1842  154E  30FF               	movlw	255
  1843  154F  1803               	skipnc
  1844  1550  3000               	movlw	0
  1845  1551  00AE               	movwf	(??_sprintf^(0+128)+1)
  1846  1552  082D               	movf	??_sprintf^(0+128),w
  1847  1553  07BD               	addwf	sprintf@width^(0+128),f
  1848  1554  1803               	skipnc
  1849  1555  0ABE               	incf	(sprintf@width+1)^(0+128),f
  1850  1556  082E               	movf	(??_sprintf+1)^(0+128),w
  1851  1557  07BE               	addwf	(sprintf@width+1)^(0+128),f
  1852  1558                     l4107:
  1853  1558  3001               	movlw	1
  1854  1559  00AD               	movwf	??_sprintf^(0+128)
  1855  155A  082D               	movf	??_sprintf^(0+128),w
  1856  155B  07A8               	addwf	sprintf@f^(0+128),f
  1857  155C                     l4109:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1860  155C  0828               	movf	sprintf@f^(0+128),w
  1861  155D  0084               	movwf	4
  1862  155E  160A  158A  200A  160A  118A  	fcall	stringdir
  1863  1563  160A  158A  2320  160A  118A  	fcall	_isdigit
  1864  1568  1803               	btfsc	3,0
  1865  1569  2D6B               	goto	u6951
  1866  156A  2D6C               	goto	u6950
  1867  156B                     u6951:
  1868  156B  2D30               	goto	l4103
  1869  156C                     u6950:
  1870  156C                     l4111:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1873  156C  1683               	bsf	3,5	;RP0=1, select bank1
  1874  156D  1303               	bcf	3,6	;RP1=0, select bank1
  1875  156E  0828               	movf	sprintf@f^(0+128),w
  1876  156F  0084               	movwf	4
  1877  1570  160A  158A  200A  160A  118A  	fcall	stringdir
  1878  1575  3A2E               	xorlw	46
  1879  1576  1D03               	skipz
  1880  1577  2D79               	goto	u6961
  1881  1578  2D7A               	goto	u6960
  1882  1579                     u6961:
  1883  1579  2DBF               	goto	l4127
  1884  157A                     u6960:
  1885  157A                     l4113:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1888  157A  173C               	bsf	(sprintf@flag^(0+128)+1),6
  1889  157B                     l4115:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1892  157B  3001               	movlw	1
  1893  157C  00AD               	movwf	??_sprintf^(0+128)
  1894  157D  082D               	movf	??_sprintf^(0+128),w
  1895  157E  07A8               	addwf	sprintf@f^(0+128),f
  1896  157F                     l4117:
  1897                           
  1898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1899  157F  01CA               	clrf	sprintf@prec^(0+128)
  1900  1580  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1901                           
  1902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1903  1581  2DAE               	goto	l4125
  1904  1582                     l4119:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1907  1582  300A               	movlw	10
  1908  1583  00F3               	movwf	___wmul@multiplier
  1909  1584  3000               	movlw	0
  1910  1585  00F4               	movwf	___wmul@multiplier+1
  1911  1586  1683               	bsf	3,5	;RP0=1, select bank1
  1912  1587  1303               	bcf	3,6	;RP1=0, select bank1
  1913  1588  084B               	movf	(sprintf@prec+1)^(0+128),w
  1914  1589  00F6               	movwf	___wmul@multiplicand+1
  1915  158A  084A               	movf	sprintf@prec^(0+128),w
  1916  158B  00F5               	movwf	___wmul@multiplicand
  1917  158C  160A  158A  23E0  160A  118A  	fcall	___wmul
  1918  1591  0874               	movf	?___wmul+1,w
  1919  1592  1683               	bsf	3,5	;RP0=1, select bank1
  1920  1593  1303               	bcf	3,6	;RP1=0, select bank1
  1921  1594  00CB               	movwf	(sprintf@prec+1)^(0+128)
  1922  1595  0873               	movf	?___wmul,w
  1923  1596  00CA               	movwf	sprintf@prec^(0+128)
  1924  1597                     l4121:
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1927  1597  0828               	movf	sprintf@f^(0+128),w
  1928  1598  0084               	movwf	4
  1929  1599  160A  158A  200A  160A  118A  	fcall	stringdir
  1930  159E  3ED0               	addlw	208
  1931  159F  00AD               	movwf	??_sprintf^(0+128)
  1932  15A0  30FF               	movlw	255
  1933  15A1  1803               	skipnc
  1934  15A2  3000               	movlw	0
  1935  15A3  00AE               	movwf	(??_sprintf^(0+128)+1)
  1936  15A4  082D               	movf	??_sprintf^(0+128),w
  1937  15A5  07CA               	addwf	sprintf@prec^(0+128),f
  1938  15A6  1803               	skipnc
  1939  15A7  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  1940  15A8  082E               	movf	(??_sprintf+1)^(0+128),w
  1941  15A9  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  1942  15AA                     l4123:
  1943  15AA  3001               	movlw	1
  1944  15AB  00AD               	movwf	??_sprintf^(0+128)
  1945  15AC  082D               	movf	??_sprintf^(0+128),w
  1946  15AD  07A8               	addwf	sprintf@f^(0+128),f
  1947  15AE                     l4125:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1950  15AE  0828               	movf	sprintf@f^(0+128),w
  1951  15AF  0084               	movwf	4
  1952  15B0  160A  158A  200A  160A  118A  	fcall	stringdir
  1953  15B5  160A  158A  2320  160A  118A  	fcall	_isdigit
  1954  15BA  1803               	btfsc	3,0
  1955  15BB  2DBD               	goto	u6971
  1956  15BC  2DBE               	goto	u6970
  1957  15BD                     u6971:
  1958  15BD  2D82               	goto	l4119
  1959  15BE                     u6970:
  1960  15BE  2DC5               	goto	l4133
  1961  15BF                     l4127:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1964  15BF  01CA               	clrf	sprintf@prec^(0+128)
  1965  15C0  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1966  15C1                     l4129:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1969  15C1  163C               	bsf	(sprintf@flag^(0+128)+1),4
  1970  15C2  2DC5               	goto	l4133
  1971  15C3                     l345:	
  1972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1973                           
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1976  15C3  153C               	bsf	(sprintf@flag^(0+128)+1),2
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1979  15C4  2DE1               	goto	l4135
  1980  15C5                     l4133:
  1981  15C5  3001               	movlw	1
  1982  15C6  1683               	bsf	3,5	;RP0=1, select bank1
  1983  15C7  1303               	bcf	3,6	;RP1=0, select bank1
  1984  15C8  07A8               	addwf	sprintf@f^(0+128),f
  1985  15C9  30FF               	movlw	-1
  1986  15CA  0728               	addwf	sprintf@f^(0+128),w
  1987  15CB  0084               	movwf	4
  1988  15CC  160A  158A  200A  160A  118A  	fcall	stringdir
  1989  15D1  00CC               	movwf	sprintf@c^(0+128)
  1990  15D2  00AD               	movwf	??_sprintf^(0+128)
  1991  15D3  01AE               	clrf	(??_sprintf^(0+128)+1)
  1992                           
  1993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1994                           ; Switch size 1, requested type "simple"
  1995                           ; Number of cases is 1, Range of values is 0 to 0
  1996                           ; switch strategies available:
  1997                           ; Name         Instructions Cycles
  1998                           ; simple_byte            4     3 (average)
  1999                           ; direct_byte           11     8 (fixed)
  2000                           ; jumptable            260     6 (fixed)
  2001                           ;	Chosen strategy is simple_byte
  2002  15D4  082E               	movf	(??_sprintf+1)^(0+128),w
  2003  15D5  3A00               	xorlw	0	; case 0
  2004  15D6  1903               	skipnz
  2005  15D7  2DD9               	goto	l4423
  2006  15D8  2D03               	goto	L1
  2007  15D9                     l4423:
  2008                           
  2009                           ; Switch size 1, requested type "simple"
  2010                           ; Number of cases is 2, Range of values is 0 to 102
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte            7     4 (average)
  2014                           ; jumptable            260     6 (fixed)
  2015                           ;	Chosen strategy is simple_byte
  2016  15D9  082D               	movf	??_sprintf^(0+128),w
  2017  15DA  3A00               	xorlw	0	; case 0
  2018  15DB  1903               	skipnz
  2019  15DC  2FFD               	goto	L3
  2020  15DD  3A66               	xorlw	102	; case 102
  2021  15DE  1903               	skipnz
  2022  15DF  2DC3               	goto	l345
  2023  15E0  2D03               	goto	L1
  2024  15E1                     l4135:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2027  15E1  3000               	movlw	0
  2028  15E2  053B               	andwf	sprintf@flag^(0+128),w
  2029  15E3  00AD               	movwf	??_sprintf^(0+128)
  2030  15E4  3007               	movlw	7
  2031  15E5  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2032  15E6  00AE               	movwf	(??_sprintf+1)^(0+128)
  2033  15E7  082D               	movf	??_sprintf^(0+128),w
  2034  15E8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2035  15E9  1903               	btfsc	3,2
  2036  15EA  2DEC               	goto	u6981
  2037  15EB  2DEF               	goto	u6980
  2038  15EC                     u6981:
  2039  15EC  120A  118A  2CED   	goto	l4293
  2040  15EF                     u6980:
  2041  15EF                     l4137:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2044  15EF  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  2045  15F0  2DF2               	goto	u6991
  2046  15F1  2DF3               	goto	u6990
  2047  15F2                     u6991:
  2048  15F2  2DF7               	goto	l4141
  2049  15F3                     u6990:
  2050  15F3                     l4139:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2053  15F3  3006               	movlw	6
  2054  15F4  00CA               	movwf	sprintf@prec^(0+128)
  2055  15F5  3000               	movlw	0
  2056  15F6  00CB               	movwf	(sprintf@prec^(0+128)+1)
  2057  15F7                     l4141:
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2060  15F7  0836               	movf	sprintf@ap^(0+128),w
  2061  15F8  0084               	movwf	4
  2062  15F9  1383               	bcf	3,7	;select IRP bank0
  2063  15FA  0800               	movf	0,w
  2064  15FB  00C5               	movwf	sprintf@fval^(0+128)
  2065  15FC  0A84               	incf	4,f
  2066  15FD  0800               	movf	0,w
  2067  15FE  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2068  15FF  0A84               	incf	4,f
  2069  1600  0800               	movf	0,w
  2070  1601  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2071  1602  0A84               	incf	4,f
  2072  1603  0800               	movf	0,w
  2073  1604  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2074  1605                     l4143:
  2075  1605  3004               	movlw	4
  2076  1606  00AD               	movwf	??_sprintf^(0+128)
  2077  1607  082D               	movf	??_sprintf^(0+128),w
  2078  1608  07B6               	addwf	sprintf@ap^(0+128),f
  2079  1609                     l4145:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2082  1609  0848               	movf	(sprintf@fval+3)^(0+128),w
  2083  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2084  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2085  160C  00A3               	movwf	___flge@ff1+3
  2086  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2087  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2088  160F  0847               	movf	(sprintf@fval+2)^(0+128),w
  2089  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2090  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2091  1612  00A2               	movwf	___flge@ff1+2
  2092  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2093  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2094  1615  0846               	movf	(sprintf@fval+1)^(0+128),w
  2095  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2096  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2097  1618  00A1               	movwf	___flge@ff1+1
  2098  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2099  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2100  161B  0845               	movf	sprintf@fval^(0+128),w
  2101  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2102  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2103  161E  00A0               	movwf	___flge@ff1
  2104  161F  3000               	movlw	0
  2105  1620  00A7               	movwf	___flge@ff2+3
  2106  1621  3000               	movlw	0
  2107  1622  00A6               	movwf	___flge@ff2+2
  2108  1623  3000               	movlw	0
  2109  1624  00A5               	movwf	___flge@ff2+1
  2110  1625  3000               	movlw	0
  2111  1626  00A4               	movwf	___flge@ff2
  2112  1627  160A  158A  275C  160A  118A  	fcall	___flge
  2113  162C  1803               	btfsc	3,0
  2114  162D  2E2F               	goto	u7001
  2115  162E  2E30               	goto	u7000
  2116  162F                     u7001:
  2117  162F  2E4D               	goto	l4151
  2118  1630                     u7000:
  2119  1630                     l4147:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2122  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2123  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2124  1632  0848               	movf	(sprintf@fval+3)^(0+128),w
  2125  1633  00F6               	movwf	___flneg@f1+3
  2126  1634  0847               	movf	(sprintf@fval+2)^(0+128),w
  2127  1635  00F5               	movwf	___flneg@f1+2
  2128  1636  0846               	movf	(sprintf@fval+1)^(0+128),w
  2129  1637  00F4               	movwf	___flneg@f1+1
  2130  1638  0845               	movf	sprintf@fval^(0+128),w
  2131  1639  00F3               	movwf	___flneg@f1
  2132  163A  160A  158A  22F7  160A  118A  	fcall	___flneg
  2133  163F  0876               	movf	?___flneg+3,w
  2134  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2135  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2136  1642  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2137  1643  0875               	movf	?___flneg+2,w
  2138  1644  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2139  1645  0874               	movf	?___flneg+1,w
  2140  1646  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2141  1647  0873               	movf	?___flneg,w
  2142  1648  00C5               	movwf	sprintf@fval^(0+128)
  2143  1649                     l4149:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2146  1649  3003               	movlw	3
  2147  164A  04BB               	iorwf	sprintf@flag^(0+128),f
  2148  164B  3000               	movlw	0
  2149  164C  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2150  164D                     l4151:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2153  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2154  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2155  164F  01C3               	clrf	sprintf@eexp^(0+128)
  2156  1650  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2157  1651                     l4153:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2160  1651  0848               	movf	(sprintf@fval+3)^(0+128),w
  2161  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2162  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2163  1654  00A3               	movwf	___fleq@ff1+3
  2164  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2165  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2166  1657  0847               	movf	(sprintf@fval+2)^(0+128),w
  2167  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2168  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2169  165A  00A2               	movwf	___fleq@ff1+2
  2170  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2171  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2172  165D  0846               	movf	(sprintf@fval+1)^(0+128),w
  2173  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2174  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2175  1660  00A1               	movwf	___fleq@ff1+1
  2176  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2177  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2178  1663  0845               	movf	sprintf@fval^(0+128),w
  2179  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2180  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2181  1666  00A0               	movwf	___fleq@ff1
  2182  1667  3000               	movlw	0
  2183  1668  00A7               	movwf	___fleq@ff2+3
  2184  1669  3000               	movlw	0
  2185  166A  00A6               	movwf	___fleq@ff2+2
  2186  166B  3000               	movlw	0
  2187  166C  00A5               	movwf	___fleq@ff2+1
  2188  166D  3000               	movlw	0
  2189  166E  00A4               	movwf	___fleq@ff2
  2190  166F  160A  158A  24DE  160A  118A  	fcall	___fleq
  2191  1674  1803               	btfsc	3,0
  2192  1675  2E77               	goto	u7011
  2193  1676  2E78               	goto	u7010
  2194  1677                     u7011:
  2195  1677  2F94               	goto	l4179
  2196  1678                     u7010:
  2197  1678                     l4155:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2200  1678  1003               	clrc
  2201  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2202  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2203  167B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2204  167C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2205  167D  3E82               	addlw	130
  2206  167E  00C3               	movwf	sprintf@eexp^(0+128)
  2207  167F  30FF               	movlw	255
  2208  1680  1803               	skipnc
  2209  1681  3000               	movlw	0
  2210  1682  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2211  1683                     l4157:
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2214  1683  30FF               	movlw	255
  2215  1684  07C3               	addwf	sprintf@eexp^(0+128),f
  2216  1685  1803               	skipnc
  2217  1686  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2218  1687  30FF               	movlw	255
  2219  1688  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2220  1689                     l4159:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2223  1689  3003               	movlw	3
  2224  168A  00F3               	movwf	___wmul@multiplier
  2225  168B  3000               	movlw	0
  2226  168C  00F4               	movwf	___wmul@multiplier+1
  2227  168D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2228  168E  00F6               	movwf	___wmul@multiplicand+1
  2229  168F  0843               	movf	sprintf@eexp^(0+128),w
  2230  1690  00F5               	movwf	___wmul@multiplicand
  2231  1691  160A  158A  23E0  160A  118A  	fcall	___wmul
  2232  1696  0874               	movf	?___wmul+1,w
  2233  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2234  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2235  1699  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2236  169A  0873               	movf	?___wmul,w
  2237  169B  00C3               	movwf	sprintf@eexp^(0+128)
  2238  169C                     l4161:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2241  169C  300A               	movlw	10
  2242  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2243  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2244  169F  00A2               	movwf	___awdiv@divisor
  2245  16A0  3000               	movlw	0
  2246  16A1  00A3               	movwf	___awdiv@divisor+1
  2247  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2248  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2249  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2250  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2251  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2252  16A7  00A5               	movwf	___awdiv@dividend+1
  2253  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2254  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2255  16AA  0843               	movf	sprintf@eexp^(0+128),w
  2256  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2257  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2258  16AD  00A4               	movwf	___awdiv@dividend
  2259  16AE  160A  158A  26F3  160A  118A  	fcall	___awdiv
  2260  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2261  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2262  16B5  0823               	movf	?___awdiv+1,w
  2263  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2264  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2265  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2266  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2267  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2268  16BB  0822               	movf	?___awdiv,w
  2269  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2270  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2271  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  2272  16BF                     l4163:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2275  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2276  16C0  2EC2               	goto	u7021
  2277  16C1  2EC3               	goto	u7020
  2278  16C2                     u7021:
  2279  16C2  2EC9               	goto	l4167
  2280  16C3                     u7020:
  2281  16C3                     l4165:
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2284  16C3  30FF               	movlw	255
  2285  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  2286  16C5  1803               	skipnc
  2287  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2288  16C7  30FF               	movlw	255
  2289  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2290  16C9                     l4167:
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2293  16C9  0343               	decf	sprintf@eexp^(0+128),w
  2294  16CA  3AFF               	xorlw	255
  2295  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2296  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2297  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2298  16D2  0848               	movf	?_scale+3,w
  2299  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2300  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2301  16D5  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2302  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2303  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2304  16D8  0847               	movf	?_scale+2,w
  2305  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2306  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2307  16DB  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2308  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2309  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2310  16DE  0846               	movf	?_scale+1,w
  2311  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2312  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2313  16E1  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2314  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2315  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2316  16E4  0845               	movf	?_scale,w
  2317  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2318  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2319  16E7  00BF               	movwf	sprintf@tmpval^(0+128)
  2320  16E8                     l4169:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2323  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2324  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2325  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2326  16EB  00AE               	movwf	___flmul@b+3
  2327  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2328  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2329  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  2330  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2331  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2332  16F1  00AD               	movwf	___flmul@b+2
  2333  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2334  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2335  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  2336  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2337  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2338  16F7  00AC               	movwf	___flmul@b+1
  2339  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2340  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2341  16FA  0845               	movf	sprintf@fval^(0+128),w
  2342  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2343  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2344  16FD  00AB               	movwf	___flmul@b
  2345  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2346  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2347  1700  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2348  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2349  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2350  1703  00B2               	movwf	___flmul@a+3
  2351  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2352  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2353  1706  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2354  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2355  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2356  1709  00B1               	movwf	___flmul@a+2
  2357  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2358  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2359  170C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2360  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2361  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2362  170F  00B0               	movwf	___flmul@a+1
  2363  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2364  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2365  1712  083F               	movf	sprintf@tmpval^(0+128),w
  2366  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2367  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2368  1715  00AF               	movwf	___flmul@a
  2369  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2370  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2371  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2372  171D  082E               	movf	?___flmul+3,w
  2373  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2374  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2375  1720  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2376  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2377  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2378  1723  082D               	movf	?___flmul+2,w
  2379  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2380  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2381  1726  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2382  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2383  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2384  1729  082C               	movf	?___flmul+1,w
  2385  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2386  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2387  172C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2388  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2389  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2390  172F  082B               	movf	?___flmul,w
  2391  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2392  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2393  1732  00BF               	movwf	sprintf@tmpval^(0+128)
  2394  1733                     l4171:
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2397  1733  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2398  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2399  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2400  1736  00A3               	movwf	___flge@ff1+3
  2401  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2402  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2403  1739  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2404  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2405  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2406  173C  00A2               	movwf	___flge@ff1+2
  2407  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2408  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2409  173F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2410  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2411  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2412  1742  00A1               	movwf	___flge@ff1+1
  2413  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2414  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2415  1745  083F               	movf	sprintf@tmpval^(0+128),w
  2416  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2417  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2418  1748  00A0               	movwf	___flge@ff1
  2419  1749  303F               	movlw	63
  2420  174A  00A7               	movwf	___flge@ff2+3
  2421  174B  3080               	movlw	128
  2422  174C  00A6               	movwf	___flge@ff2+2
  2423  174D  3000               	movlw	0
  2424  174E  00A5               	movwf	___flge@ff2+1
  2425  174F  3000               	movlw	0
  2426  1750  00A4               	movwf	___flge@ff2
  2427  1751  160A  158A  275C  160A  118A  	fcall	___flge
  2428  1756  1803               	btfsc	3,0
  2429  1757  2F59               	goto	u7031
  2430  1758  2F5A               	goto	u7030
  2431  1759                     u7031:
  2432  1759  2F63               	goto	l4175
  2433  175A                     u7030:
  2434  175A                     l4173:
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2437  175A  30FF               	movlw	255
  2438  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2439  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2440  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2441  175E  1803               	skipnc
  2442  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2443  1760  30FF               	movlw	255
  2444  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2445  1762  2F94               	goto	l4179
  2446  1763                     l4175:
  2447  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2448  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2449  1765  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2450  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2451  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2452  1768  00A3               	movwf	___flge@ff1+3
  2453  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2454  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2455  176B  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2456  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2457  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2458  176E  00A2               	movwf	___flge@ff1+2
  2459  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2460  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2461  1771  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2462  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2463  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2464  1774  00A1               	movwf	___flge@ff1+1
  2465  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2466  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2467  1777  083F               	movf	sprintf@tmpval^(0+128),w
  2468  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2469  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2470  177A  00A0               	movwf	___flge@ff1
  2471  177B  3041               	movlw	65
  2472  177C  00A7               	movwf	___flge@ff2+3
  2473  177D  3020               	movlw	32
  2474  177E  00A6               	movwf	___flge@ff2+2
  2475  177F  3000               	movlw	0
  2476  1780  00A5               	movwf	___flge@ff2+1
  2477  1781  3000               	movlw	0
  2478  1782  00A4               	movwf	___flge@ff2
  2479  1783  160A  158A  275C  160A  118A  	fcall	___flge
  2480  1788  1C03               	btfss	3,0
  2481  1789  2F8B               	goto	u7041
  2482  178A  2F8C               	goto	u7040
  2483  178B                     u7041:
  2484  178B  2F94               	goto	l4179
  2485  178C                     u7040:
  2486  178C                     l4177:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2489  178C  3001               	movlw	1
  2490  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2491  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2492  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2493  1790  1803               	skipnc
  2494  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2495  1792  3000               	movlw	0
  2496  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2497  1794                     l4179:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2500  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2501  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2502  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2503  1797  3A80               	xorlw	128
  2504  1798  00FF               	movwf	btemp+1
  2505  1799  3080               	movlw	128
  2506  179A  027F               	subwf	btemp+1,w
  2507  179B  1D03               	skipz
  2508  179C  2F9F               	goto	u7055
  2509  179D  300D               	movlw	13
  2510  179E  024A               	subwf	sprintf@prec^(0+128),w
  2511  179F                     u7055:
  2512  179F  1803               	skipnc
  2513  17A0  2FA2               	goto	u7051
  2514  17A1  2FA3               	goto	u7050
  2515  17A2                     u7051:
  2516  17A2  2FEA               	goto	l4183
  2517  17A3                     u7050:
  2518  17A3                     l4181:
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2521  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2522  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2523  17A5  084A               	movf	sprintf@prec^(0+128),w
  2524  17A6  120A  118A  25CB  160A  118A  	fcall	_fround
  2525  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2526  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2527  17AD  0848               	movf	?_fround+3,w
  2528  17AE  00DC               	movwf	___fladd@b+3
  2529  17AF  0847               	movf	?_fround+2,w
  2530  17B0  00DB               	movwf	___fladd@b+2
  2531  17B1  0846               	movf	?_fround+1,w
  2532  17B2  00DA               	movwf	___fladd@b+1
  2533  17B3  0845               	movf	?_fround,w
  2534  17B4  00D9               	movwf	___fladd@b
  2535  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2536  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2537  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2538  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2539  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2540  17BA  00E0               	movwf	___fladd@a+3
  2541  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2542  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2543  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2544  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2545  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2546  17C0  00DF               	movwf	___fladd@a+2
  2547  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2548  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2549  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2550  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2551  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2552  17C6  00DE               	movwf	___fladd@a+1
  2553  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2554  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2555  17C9  0845               	movf	sprintf@fval^(0+128),w
  2556  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2557  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2558  17CC  00DD               	movwf	___fladd@a
  2559  17CD  160A  118A  2274  160A  118A  	fcall	___fladd
  2560  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2561  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2562  17D4  085C               	movf	?___fladd+3,w
  2563  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2564  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2565  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2566  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2567  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2568  17DA  085B               	movf	?___fladd+2,w
  2569  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2570  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2571  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2572  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2573  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2574  17E0  085A               	movf	?___fladd+1,w
  2575  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2576  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2577  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2578  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2579  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2580  17E6  0859               	movf	?___fladd,w
  2581  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2582  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2583  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2584  17EA                     l4183:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2587  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2588  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2589  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2590  17ED  3A80               	xorlw	128
  2591  17EE  00FF               	movwf	btemp+1
  2592  17EF  3080               	movlw	128
  2593  17F0  027F               	subwf	btemp+1,w
  2594  17F1  1D03               	skipz
  2595  17F2  2FF5               	goto	u7065
  2596  17F3  300A               	movlw	10
  2597  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2598  17F5                     u7065:
  2599  17F5  1803               	skipnc
  2600  17F6  2FFA               	goto	u7061
  2601  17F7  120A  118A  2833   	goto	u7060
  2602  17FA                     u7061:
  2603  17FA  120A  118A  2892   	goto	l4191
  2604  17FD                     L3:
  2605  17FD                     L2:
  2606  17FD  120A  118A  2DC6   	ljmp	l4341
  2607                           
  2608                           	psect	text2
  2609  0C9D                     __ptext2:	
  2610 ;; *************** function _scale *****************
  2611 ;; Defined at:
  2612 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  scl             1    wreg     char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  scl             1   55[BANK0 ] char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  4   37[BANK0 ] char 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2626 ;;      Params:         0       4       0       0       0
  2627 ;;      Locals:         0       5       0       0       0
  2628 ;;      Temps:          0      10       0       0       0
  2629 ;;      Totals:         0      19       0       0       0
  2630 ;;Total ram usage:       19 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    3
  2633 ;; This function calls:
  2634 ;;		___awdiv
  2635 ;;		___awmod
  2636 ;;		___flmul
  2637 ;; This function is called by:
  2638 ;;		_sprintf
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _scale
  2644  0C9D                     _scale:
  2645                           
  2646                           ;incstack = 0
  2647                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2648                           ;scale@scl stored from wreg
  2649  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2651  0C9F  00D7               	movwf	scale@scl
  2652  0CA0                     l3773:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2655  0CA0  1FD7               	btfss	scale@scl,7
  2656  0CA1  2CA3               	goto	u6041
  2657  0CA2  2CA4               	goto	u6040
  2658  0CA3                     u6041:
  2659  0CA3  2E53               	goto	l3795
  2660  0CA4                     u6040:
  2661  0CA4                     l3775:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2664  0CA4  09D7               	comf	scale@scl,f
  2665  0CA5  0AD7               	incf	scale@scl,f
  2666  0CA6                     l3777:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2669  0CA6  0857               	movf	scale@scl,w
  2670  0CA7  3A80               	xorlw	128
  2671  0CA8  3E12               	addlw	-238
  2672  0CA9  1C03               	skipc
  2673  0CAA  2CAC               	goto	u6051
  2674  0CAB  2CAD               	goto	u6050
  2675  0CAC                     u6051:
  2676  0CAC  2D97               	goto	l3785
  2677  0CAD                     u6050:
  2678  0CAD                     l3779:
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2681  0CAD  300A               	movlw	10
  2682  0CAE  00A2               	movwf	___awdiv@divisor
  2683  0CAF  3000               	movlw	0
  2684  0CB0  00A3               	movwf	___awdiv@divisor+1
  2685  0CB1  0857               	movf	scale@scl,w
  2686  0CB2  00F5               	movwf	___awmod@dividend
  2687  0CB3  01F6               	clrf	___awmod@dividend+1
  2688  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2689  0CB5  03F6               	decf	___awmod@dividend+1,f
  2690  0CB6  3064               	movlw	100
  2691  0CB7  00F3               	movwf	___awmod@divisor
  2692  0CB8  3000               	movlw	0
  2693  0CB9  00F4               	movwf	___awmod@divisor+1
  2694  0CBA  160A  158A  25D4  120A  158A  	fcall	___awmod
  2695  0CBF  0874               	movf	?___awmod+1,w
  2696  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0CC2  00A5               	movwf	___awdiv@dividend+1
  2699  0CC3  0873               	movf	?___awmod,w
  2700  0CC4  00A4               	movwf	___awdiv@dividend
  2701  0CC5  160A  158A  26F3  120A  158A  	fcall	___awdiv
  2702  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0CCC  0822               	movf	?___awdiv,w
  2705  0CCD  00C9               	movwf	??_scale
  2706  0CCE  3001               	movlw	1
  2707  0CCF                     u6065:
  2708  0CCF  1003               	clrc
  2709  0CD0  0DC9               	rlf	??_scale,f
  2710  0CD1  3EFF               	addlw	-1
  2711  0CD2  1D03               	skipz
  2712  0CD3  2CCF               	goto	u6065
  2713  0CD4  1003               	clrc
  2714  0CD5  0D49               	rlf	??_scale,w
  2715  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2716  0CD7  0084               	movwf	4
  2717  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  2718  0CDD  00CA               	movwf	??_scale+1
  2719  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  2720  0CE3  00CB               	movwf	??_scale+2
  2721  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  2722  0CE9  00CC               	movwf	??_scale+3
  2723  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  2724  0CEF  00CD               	movwf	??_scale+4
  2725  0CF0  084D               	movf	??_scale+4,w
  2726  0CF1  00AE               	movwf	___flmul@b+3
  2727  0CF2  084C               	movf	??_scale+3,w
  2728  0CF3  00AD               	movwf	___flmul@b+2
  2729  0CF4  084B               	movf	??_scale+2,w
  2730  0CF5  00AC               	movwf	___flmul@b+1
  2731  0CF6  084A               	movf	??_scale+1,w
  2732  0CF7  00AB               	movwf	___flmul@b
  2733  0CF8  3064               	movlw	100
  2734  0CF9  00A2               	movwf	___awdiv@divisor
  2735  0CFA  3000               	movlw	0
  2736  0CFB  00A3               	movwf	___awdiv@divisor+1
  2737  0CFC  0857               	movf	scale@scl,w
  2738  0CFD  00A4               	movwf	___awdiv@dividend
  2739  0CFE  01A5               	clrf	___awdiv@dividend+1
  2740  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  2741  0D00  03A5               	decf	___awdiv@dividend+1,f
  2742  0D01  160A  158A  26F3  120A  158A  	fcall	___awdiv
  2743  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0D08  0822               	movf	?___awdiv,w
  2746  0D09  00CE               	movwf	??_scale+5
  2747  0D0A  3001               	movlw	1
  2748  0D0B                     u6075:
  2749  0D0B  1003               	clrc
  2750  0D0C  0DCE               	rlf	??_scale+5,f
  2751  0D0D  3EFF               	addlw	-1
  2752  0D0E  1D03               	skipz
  2753  0D0F  2D0B               	goto	u6075
  2754  0D10  1003               	clrc
  2755  0D11  0D4E               	rlf	??_scale+5,w
  2756  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2757  0D13  0084               	movwf	4
  2758  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  2759  0D19  00CF               	movwf	??_scale+6
  2760  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  2761  0D1F  00D0               	movwf	??_scale+7
  2762  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  2763  0D25  00D1               	movwf	??_scale+8
  2764  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  2765  0D2B  00D2               	movwf	??_scale+9
  2766  0D2C  0852               	movf	??_scale+9,w
  2767  0D2D  00B2               	movwf	___flmul@a+3
  2768  0D2E  0851               	movf	??_scale+8,w
  2769  0D2F  00B1               	movwf	___flmul@a+2
  2770  0D30  0850               	movf	??_scale+7,w
  2771  0D31  00B0               	movwf	___flmul@a+1
  2772  0D32  084F               	movf	??_scale+6,w
  2773  0D33  00AF               	movwf	___flmul@a
  2774  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2775  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0D3B  082E               	movf	?___flmul+3,w
  2778  0D3C  00D6               	movwf	_scale$1266+3
  2779  0D3D  082D               	movf	?___flmul+2,w
  2780  0D3E  00D5               	movwf	_scale$1266+2
  2781  0D3F  082C               	movf	?___flmul+1,w
  2782  0D40  00D4               	movwf	_scale$1266+1
  2783  0D41  082B               	movf	?___flmul,w
  2784  0D42  00D3               	movwf	_scale$1266
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2787  0D43  300A               	movlw	10
  2788  0D44  00F3               	movwf	___awmod@divisor
  2789  0D45  3000               	movlw	0
  2790  0D46  00F4               	movwf	___awmod@divisor+1
  2791  0D47  0857               	movf	scale@scl,w
  2792  0D48  00F5               	movwf	___awmod@dividend
  2793  0D49  01F6               	clrf	___awmod@dividend+1
  2794  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2795  0D4B  03F6               	decf	___awmod@dividend+1,f
  2796  0D4C  160A  158A  25D4  120A  158A  	fcall	___awmod
  2797  0D51  0873               	movf	?___awmod,w
  2798  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0D54  00C9               	movwf	??_scale
  2801  0D55  3001               	movlw	1
  2802  0D56                     u6085:
  2803  0D56  1003               	clrc
  2804  0D57  0DC9               	rlf	??_scale,f
  2805  0D58  3EFF               	addlw	-1
  2806  0D59  1D03               	skipz
  2807  0D5A  2D56               	goto	u6085
  2808  0D5B  1003               	clrc
  2809  0D5C  0D49               	rlf	??_scale,w
  2810  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2811  0D5E  0084               	movwf	4
  2812  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  2813  0D64  00CA               	movwf	??_scale+1
  2814  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  2815  0D6A  00CB               	movwf	??_scale+2
  2816  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  2817  0D70  00CC               	movwf	??_scale+3
  2818  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  2819  0D76  00CD               	movwf	??_scale+4
  2820  0D77  084D               	movf	??_scale+4,w
  2821  0D78  00AE               	movwf	___flmul@b+3
  2822  0D79  084C               	movf	??_scale+3,w
  2823  0D7A  00AD               	movwf	___flmul@b+2
  2824  0D7B  084B               	movf	??_scale+2,w
  2825  0D7C  00AC               	movwf	___flmul@b+1
  2826  0D7D  084A               	movf	??_scale+1,w
  2827  0D7E  00AB               	movwf	___flmul@b
  2828  0D7F  0856               	movf	_scale$1266+3,w
  2829  0D80  00B2               	movwf	___flmul@a+3
  2830  0D81  0855               	movf	_scale$1266+2,w
  2831  0D82  00B1               	movwf	___flmul@a+2
  2832  0D83  0854               	movf	_scale$1266+1,w
  2833  0D84  00B0               	movwf	___flmul@a+1
  2834  0D85  0853               	movf	_scale$1266,w
  2835  0D86  00AF               	movwf	___flmul@a
  2836  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2837  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0D8E  082E               	movf	?___flmul+3,w
  2840  0D8F  00C8               	movwf	?_scale+3
  2841  0D90  082D               	movf	?___flmul+2,w
  2842  0D91  00C7               	movwf	?_scale+2
  2843  0D92  082C               	movf	?___flmul+1,w
  2844  0D93  00C6               	movwf	?_scale+1
  2845  0D94  082B               	movf	?___flmul,w
  2846  0D95  00C5               	movwf	?_scale
  2847  0D96  2FFF               	goto	l323
  2848  0D97                     l3785:
  2849  0D97  0857               	movf	scale@scl,w
  2850  0D98  3A80               	xorlw	128
  2851  0D99  3E75               	addlw	-139
  2852  0D9A  1C03               	skipc
  2853  0D9B  2D9D               	goto	u6091
  2854  0D9C  2D9E               	goto	u6090
  2855  0D9D                     u6091:
  2856  0D9D  2E26               	goto	l3791
  2857  0D9E                     u6090:
  2858  0D9E                     l3787:
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2861  0D9E  300A               	movlw	10
  2862  0D9F  00F3               	movwf	___awmod@divisor
  2863  0DA0  3000               	movlw	0
  2864  0DA1  00F4               	movwf	___awmod@divisor+1
  2865  0DA2  0857               	movf	scale@scl,w
  2866  0DA3  00F5               	movwf	___awmod@dividend
  2867  0DA4  01F6               	clrf	___awmod@dividend+1
  2868  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2869  0DA6  03F6               	decf	___awmod@dividend+1,f
  2870  0DA7  160A  158A  25D4  120A  158A  	fcall	___awmod
  2871  0DAC  0873               	movf	?___awmod,w
  2872  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0DAF  00C9               	movwf	??_scale
  2875  0DB0  3001               	movlw	1
  2876  0DB1                     u6105:
  2877  0DB1  1003               	clrc
  2878  0DB2  0DC9               	rlf	??_scale,f
  2879  0DB3  3EFF               	addlw	-1
  2880  0DB4  1D03               	skipz
  2881  0DB5  2DB1               	goto	u6105
  2882  0DB6  1003               	clrc
  2883  0DB7  0D49               	rlf	??_scale,w
  2884  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2885  0DB9  0084               	movwf	4
  2886  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  2887  0DBF  00CA               	movwf	??_scale+1
  2888  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  2889  0DC5  00CB               	movwf	??_scale+2
  2890  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  2891  0DCB  00CC               	movwf	??_scale+3
  2892  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  2893  0DD1  00CD               	movwf	??_scale+4
  2894  0DD2  084D               	movf	??_scale+4,w
  2895  0DD3  00AE               	movwf	___flmul@b+3
  2896  0DD4  084C               	movf	??_scale+3,w
  2897  0DD5  00AD               	movwf	___flmul@b+2
  2898  0DD6  084B               	movf	??_scale+2,w
  2899  0DD7  00AC               	movwf	___flmul@b+1
  2900  0DD8  084A               	movf	??_scale+1,w
  2901  0DD9  00AB               	movwf	___flmul@b
  2902  0DDA  300A               	movlw	10
  2903  0DDB  00A2               	movwf	___awdiv@divisor
  2904  0DDC  3000               	movlw	0
  2905  0DDD  00A3               	movwf	___awdiv@divisor+1
  2906  0DDE  0857               	movf	scale@scl,w
  2907  0DDF  00A4               	movwf	___awdiv@dividend
  2908  0DE0  01A5               	clrf	___awdiv@dividend+1
  2909  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  2910  0DE2  03A5               	decf	___awdiv@dividend+1,f
  2911  0DE3  160A  158A  26F3  120A  158A  	fcall	___awdiv
  2912  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0DEA  0822               	movf	?___awdiv,w
  2915  0DEB  00CE               	movwf	??_scale+5
  2916  0DEC  3001               	movlw	1
  2917  0DED                     u6115:
  2918  0DED  1003               	clrc
  2919  0DEE  0DCE               	rlf	??_scale+5,f
  2920  0DEF  3EFF               	addlw	-1
  2921  0DF0  1D03               	skipz
  2922  0DF1  2DED               	goto	u6115
  2923  0DF2  1003               	clrc
  2924  0DF3  0D4E               	rlf	??_scale+5,w
  2925  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2926  0DF5  0084               	movwf	4
  2927  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  2928  0DFB  00CF               	movwf	??_scale+6
  2929  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  2930  0E01  00D0               	movwf	??_scale+7
  2931  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  2932  0E07  00D1               	movwf	??_scale+8
  2933  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  2934  0E0D  00D2               	movwf	??_scale+9
  2935  0E0E  0852               	movf	??_scale+9,w
  2936  0E0F  00B2               	movwf	___flmul@a+3
  2937  0E10  0851               	movf	??_scale+8,w
  2938  0E11  00B1               	movwf	___flmul@a+2
  2939  0E12  0850               	movf	??_scale+7,w
  2940  0E13  00B0               	movwf	___flmul@a+1
  2941  0E14  084F               	movf	??_scale+6,w
  2942  0E15  00AF               	movwf	___flmul@a
  2943  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2944  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0E1D  082E               	movf	?___flmul+3,w
  2947  0E1E  00C8               	movwf	?_scale+3
  2948  0E1F  082D               	movf	?___flmul+2,w
  2949  0E20  00C7               	movwf	?_scale+2
  2950  0E21  082C               	movf	?___flmul+1,w
  2951  0E22  00C6               	movwf	?_scale+1
  2952  0E23  082B               	movf	?___flmul,w
  2953  0E24  00C5               	movwf	?_scale
  2954  0E25  2FFF               	goto	l323
  2955  0E26                     l3791:
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2958  0E26  0857               	movf	scale@scl,w
  2959  0E27  00C9               	movwf	??_scale
  2960  0E28  3001               	movlw	1
  2961  0E29                     u6125:
  2962  0E29  1003               	clrc
  2963  0E2A  0DC9               	rlf	??_scale,f
  2964  0E2B  3EFF               	addlw	-1
  2965  0E2C  1D03               	skipz
  2966  0E2D  2E29               	goto	u6125
  2967  0E2E  1003               	clrc
  2968  0E2F  0D49               	rlf	??_scale,w
  2969  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2970  0E31  0084               	movwf	4
  2971  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  2972  0E37  00CA               	movwf	??_scale+1
  2973  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  2974  0E3D  00CB               	movwf	??_scale+2
  2975  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  2976  0E43  00CC               	movwf	??_scale+3
  2977  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  2978  0E49  00CD               	movwf	??_scale+4
  2979  0E4A  084D               	movf	??_scale+4,w
  2980  0E4B  00C8               	movwf	?_scale+3
  2981  0E4C  084C               	movf	??_scale+3,w
  2982  0E4D  00C7               	movwf	?_scale+2
  2983  0E4E  084B               	movf	??_scale+2,w
  2984  0E4F  00C6               	movwf	?_scale+1
  2985  0E50  084A               	movf	??_scale+1,w
  2986  0E51  00C5               	movwf	?_scale
  2987  0E52  2FFF               	goto	l323
  2988  0E53                     l3795:
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2991  0E53  0857               	movf	scale@scl,w
  2992  0E54  3A80               	xorlw	128
  2993  0E55  3E12               	addlw	-238
  2994  0E56  1C03               	skipc
  2995  0E57  2E59               	goto	u6131
  2996  0E58  2E5A               	goto	u6130
  2997  0E59                     u6131:
  2998  0E59  2F44               	goto	l3803
  2999  0E5A                     u6130:
  3000  0E5A                     l3797:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3003  0E5A  300A               	movlw	10
  3004  0E5B  00A2               	movwf	___awdiv@divisor
  3005  0E5C  3000               	movlw	0
  3006  0E5D  00A3               	movwf	___awdiv@divisor+1
  3007  0E5E  0857               	movf	scale@scl,w
  3008  0E5F  00F5               	movwf	___awmod@dividend
  3009  0E60  01F6               	clrf	___awmod@dividend+1
  3010  0E61  1BF5               	btfsc	___awmod@dividend,7
  3011  0E62  03F6               	decf	___awmod@dividend+1,f
  3012  0E63  3064               	movlw	100
  3013  0E64  00F3               	movwf	___awmod@divisor
  3014  0E65  3000               	movlw	0
  3015  0E66  00F4               	movwf	___awmod@divisor+1
  3016  0E67  160A  158A  25D4  120A  158A  	fcall	___awmod
  3017  0E6C  0874               	movf	?___awmod+1,w
  3018  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0E6F  00A5               	movwf	___awdiv@dividend+1
  3021  0E70  0873               	movf	?___awmod,w
  3022  0E71  00A4               	movwf	___awdiv@dividend
  3023  0E72  160A  158A  26F3  120A  158A  	fcall	___awdiv
  3024  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0E79  0822               	movf	?___awdiv,w
  3027  0E7A  00C9               	movwf	??_scale
  3028  0E7B  3001               	movlw	1
  3029  0E7C                     u6145:
  3030  0E7C  1003               	clrc
  3031  0E7D  0DC9               	rlf	??_scale,f
  3032  0E7E  3EFF               	addlw	-1
  3033  0E7F  1D03               	skipz
  3034  0E80  2E7C               	goto	u6145
  3035  0E81  1003               	clrc
  3036  0E82  0D49               	rlf	??_scale,w
  3037  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3038  0E84  0084               	movwf	4
  3039  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  3040  0E8A  00CA               	movwf	??_scale+1
  3041  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  3042  0E90  00CB               	movwf	??_scale+2
  3043  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  3044  0E96  00CC               	movwf	??_scale+3
  3045  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  3046  0E9C  00CD               	movwf	??_scale+4
  3047  0E9D  084D               	movf	??_scale+4,w
  3048  0E9E  00AE               	movwf	___flmul@b+3
  3049  0E9F  084C               	movf	??_scale+3,w
  3050  0EA0  00AD               	movwf	___flmul@b+2
  3051  0EA1  084B               	movf	??_scale+2,w
  3052  0EA2  00AC               	movwf	___flmul@b+1
  3053  0EA3  084A               	movf	??_scale+1,w
  3054  0EA4  00AB               	movwf	___flmul@b
  3055  0EA5  3064               	movlw	100
  3056  0EA6  00A2               	movwf	___awdiv@divisor
  3057  0EA7  3000               	movlw	0
  3058  0EA8  00A3               	movwf	___awdiv@divisor+1
  3059  0EA9  0857               	movf	scale@scl,w
  3060  0EAA  00A4               	movwf	___awdiv@dividend
  3061  0EAB  01A5               	clrf	___awdiv@dividend+1
  3062  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  3063  0EAD  03A5               	decf	___awdiv@dividend+1,f
  3064  0EAE  160A  158A  26F3  120A  158A  	fcall	___awdiv
  3065  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3067  0EB5  0822               	movf	?___awdiv,w
  3068  0EB6  00CE               	movwf	??_scale+5
  3069  0EB7  3001               	movlw	1
  3070  0EB8                     u6155:
  3071  0EB8  1003               	clrc
  3072  0EB9  0DCE               	rlf	??_scale+5,f
  3073  0EBA  3EFF               	addlw	-1
  3074  0EBB  1D03               	skipz
  3075  0EBC  2EB8               	goto	u6155
  3076  0EBD  1003               	clrc
  3077  0EBE  0D4E               	rlf	??_scale+5,w
  3078  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3079  0EC0  0084               	movwf	4
  3080  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  3081  0EC6  00CF               	movwf	??_scale+6
  3082  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  3083  0ECC  00D0               	movwf	??_scale+7
  3084  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  3085  0ED2  00D1               	movwf	??_scale+8
  3086  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  3087  0ED8  00D2               	movwf	??_scale+9
  3088  0ED9  0852               	movf	??_scale+9,w
  3089  0EDA  00B2               	movwf	___flmul@a+3
  3090  0EDB  0851               	movf	??_scale+8,w
  3091  0EDC  00B1               	movwf	___flmul@a+2
  3092  0EDD  0850               	movf	??_scale+7,w
  3093  0EDE  00B0               	movwf	___flmul@a+1
  3094  0EDF  084F               	movf	??_scale+6,w
  3095  0EE0  00AF               	movwf	___flmul@a
  3096  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3097  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0EE8  082E               	movf	?___flmul+3,w
  3100  0EE9  00D6               	movwf	_scale$1266+3
  3101  0EEA  082D               	movf	?___flmul+2,w
  3102  0EEB  00D5               	movwf	_scale$1266+2
  3103  0EEC  082C               	movf	?___flmul+1,w
  3104  0EED  00D4               	movwf	_scale$1266+1
  3105  0EEE  082B               	movf	?___flmul,w
  3106  0EEF  00D3               	movwf	_scale$1266
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3109  0EF0  300A               	movlw	10
  3110  0EF1  00F3               	movwf	___awmod@divisor
  3111  0EF2  3000               	movlw	0
  3112  0EF3  00F4               	movwf	___awmod@divisor+1
  3113  0EF4  0857               	movf	scale@scl,w
  3114  0EF5  00F5               	movwf	___awmod@dividend
  3115  0EF6  01F6               	clrf	___awmod@dividend+1
  3116  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3117  0EF8  03F6               	decf	___awmod@dividend+1,f
  3118  0EF9  160A  158A  25D4  120A  158A  	fcall	___awmod
  3119  0EFE  0873               	movf	?___awmod,w
  3120  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0F01  00C9               	movwf	??_scale
  3123  0F02  3001               	movlw	1
  3124  0F03                     u6165:
  3125  0F03  1003               	clrc
  3126  0F04  0DC9               	rlf	??_scale,f
  3127  0F05  3EFF               	addlw	-1
  3128  0F06  1D03               	skipz
  3129  0F07  2F03               	goto	u6165
  3130  0F08  1003               	clrc
  3131  0F09  0D49               	rlf	??_scale,w
  3132  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3133  0F0B  0084               	movwf	4
  3134  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3135  0F11  00CA               	movwf	??_scale+1
  3136  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3137  0F17  00CB               	movwf	??_scale+2
  3138  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3139  0F1D  00CC               	movwf	??_scale+3
  3140  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3141  0F23  00CD               	movwf	??_scale+4
  3142  0F24  084D               	movf	??_scale+4,w
  3143  0F25  00AE               	movwf	___flmul@b+3
  3144  0F26  084C               	movf	??_scale+3,w
  3145  0F27  00AD               	movwf	___flmul@b+2
  3146  0F28  084B               	movf	??_scale+2,w
  3147  0F29  00AC               	movwf	___flmul@b+1
  3148  0F2A  084A               	movf	??_scale+1,w
  3149  0F2B  00AB               	movwf	___flmul@b
  3150  0F2C  0856               	movf	_scale$1266+3,w
  3151  0F2D  00B2               	movwf	___flmul@a+3
  3152  0F2E  0855               	movf	_scale$1266+2,w
  3153  0F2F  00B1               	movwf	___flmul@a+2
  3154  0F30  0854               	movf	_scale$1266+1,w
  3155  0F31  00B0               	movwf	___flmul@a+1
  3156  0F32  0853               	movf	_scale$1266,w
  3157  0F33  00AF               	movwf	___flmul@a
  3158  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3159  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0F3B  082E               	movf	?___flmul+3,w
  3162  0F3C  00C8               	movwf	?_scale+3
  3163  0F3D  082D               	movf	?___flmul+2,w
  3164  0F3E  00C7               	movwf	?_scale+2
  3165  0F3F  082C               	movf	?___flmul+1,w
  3166  0F40  00C6               	movwf	?_scale+1
  3167  0F41  082B               	movf	?___flmul,w
  3168  0F42  00C5               	movwf	?_scale
  3169  0F43  2FFF               	goto	l323
  3170  0F44                     l3803:
  3171  0F44  0857               	movf	scale@scl,w
  3172  0F45  3A80               	xorlw	128
  3173  0F46  3E75               	addlw	-139
  3174  0F47  1C03               	skipc
  3175  0F48  2F4A               	goto	u6171
  3176  0F49  2F4B               	goto	u6170
  3177  0F4A                     u6171:
  3178  0F4A  2FD3               	goto	l3809
  3179  0F4B                     u6170:
  3180  0F4B                     l3805:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3183  0F4B  300A               	movlw	10
  3184  0F4C  00F3               	movwf	___awmod@divisor
  3185  0F4D  3000               	movlw	0
  3186  0F4E  00F4               	movwf	___awmod@divisor+1
  3187  0F4F  0857               	movf	scale@scl,w
  3188  0F50  00F5               	movwf	___awmod@dividend
  3189  0F51  01F6               	clrf	___awmod@dividend+1
  3190  0F52  1BF5               	btfsc	___awmod@dividend,7
  3191  0F53  03F6               	decf	___awmod@dividend+1,f
  3192  0F54  160A  158A  25D4  120A  158A  	fcall	___awmod
  3193  0F59  0873               	movf	?___awmod,w
  3194  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3195  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3196  0F5C  00C9               	movwf	??_scale
  3197  0F5D  3001               	movlw	1
  3198  0F5E                     u6185:
  3199  0F5E  1003               	clrc
  3200  0F5F  0DC9               	rlf	??_scale,f
  3201  0F60  3EFF               	addlw	-1
  3202  0F61  1D03               	skipz
  3203  0F62  2F5E               	goto	u6185
  3204  0F63  1003               	clrc
  3205  0F64  0D49               	rlf	??_scale,w
  3206  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3207  0F66  0084               	movwf	4
  3208  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  3209  0F6C  00CA               	movwf	??_scale+1
  3210  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3211  0F72  00CB               	movwf	??_scale+2
  3212  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  3213  0F78  00CC               	movwf	??_scale+3
  3214  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  3215  0F7E  00CD               	movwf	??_scale+4
  3216  0F7F  084D               	movf	??_scale+4,w
  3217  0F80  00AE               	movwf	___flmul@b+3
  3218  0F81  084C               	movf	??_scale+3,w
  3219  0F82  00AD               	movwf	___flmul@b+2
  3220  0F83  084B               	movf	??_scale+2,w
  3221  0F84  00AC               	movwf	___flmul@b+1
  3222  0F85  084A               	movf	??_scale+1,w
  3223  0F86  00AB               	movwf	___flmul@b
  3224  0F87  300A               	movlw	10
  3225  0F88  00A2               	movwf	___awdiv@divisor
  3226  0F89  3000               	movlw	0
  3227  0F8A  00A3               	movwf	___awdiv@divisor+1
  3228  0F8B  0857               	movf	scale@scl,w
  3229  0F8C  00A4               	movwf	___awdiv@dividend
  3230  0F8D  01A5               	clrf	___awdiv@dividend+1
  3231  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  3232  0F8F  03A5               	decf	___awdiv@dividend+1,f
  3233  0F90  160A  158A  26F3  120A  158A  	fcall	___awdiv
  3234  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0F97  0822               	movf	?___awdiv,w
  3237  0F98  00CE               	movwf	??_scale+5
  3238  0F99  3001               	movlw	1
  3239  0F9A                     u6195:
  3240  0F9A  1003               	clrc
  3241  0F9B  0DCE               	rlf	??_scale+5,f
  3242  0F9C  3EFF               	addlw	-1
  3243  0F9D  1D03               	skipz
  3244  0F9E  2F9A               	goto	u6195
  3245  0F9F  1003               	clrc
  3246  0FA0  0D4E               	rlf	??_scale+5,w
  3247  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3248  0FA2  0084               	movwf	4
  3249  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3250  0FA8  00CF               	movwf	??_scale+6
  3251  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3252  0FAE  00D0               	movwf	??_scale+7
  3253  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  3254  0FB4  00D1               	movwf	??_scale+8
  3255  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  3256  0FBA  00D2               	movwf	??_scale+9
  3257  0FBB  0852               	movf	??_scale+9,w
  3258  0FBC  00B2               	movwf	___flmul@a+3
  3259  0FBD  0851               	movf	??_scale+8,w
  3260  0FBE  00B1               	movwf	___flmul@a+2
  3261  0FBF  0850               	movf	??_scale+7,w
  3262  0FC0  00B0               	movwf	___flmul@a+1
  3263  0FC1  084F               	movf	??_scale+6,w
  3264  0FC2  00AF               	movwf	___flmul@a
  3265  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3266  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3268  0FCA  082E               	movf	?___flmul+3,w
  3269  0FCB  00C8               	movwf	?_scale+3
  3270  0FCC  082D               	movf	?___flmul+2,w
  3271  0FCD  00C7               	movwf	?_scale+2
  3272  0FCE  082C               	movf	?___flmul+1,w
  3273  0FCF  00C6               	movwf	?_scale+1
  3274  0FD0  082B               	movf	?___flmul,w
  3275  0FD1  00C5               	movwf	?_scale
  3276  0FD2  2FFF               	goto	l323
  3277  0FD3                     l3809:
  3278                           
  3279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3280  0FD3  0857               	movf	scale@scl,w
  3281  0FD4  00C9               	movwf	??_scale
  3282  0FD5  3001               	movlw	1
  3283  0FD6                     u6205:
  3284  0FD6  1003               	clrc
  3285  0FD7  0DC9               	rlf	??_scale,f
  3286  0FD8  3EFF               	addlw	-1
  3287  0FD9  1D03               	skipz
  3288  0FDA  2FD6               	goto	u6205
  3289  0FDB  1003               	clrc
  3290  0FDC  0D49               	rlf	??_scale,w
  3291  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3292  0FDE  0084               	movwf	4
  3293  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  3294  0FE4  00CA               	movwf	??_scale+1
  3295  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  3296  0FEA  00CB               	movwf	??_scale+2
  3297  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  3298  0FF0  00CC               	movwf	??_scale+3
  3299  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  3300  0FF6  00CD               	movwf	??_scale+4
  3301  0FF7  084D               	movf	??_scale+4,w
  3302  0FF8  00C8               	movwf	?_scale+3
  3303  0FF9  084C               	movf	??_scale+3,w
  3304  0FFA  00C7               	movwf	?_scale+2
  3305  0FFB  084B               	movf	??_scale+2,w
  3306  0FFC  00C6               	movwf	?_scale+1
  3307  0FFD  084A               	movf	??_scale+1,w
  3308  0FFE  00C5               	movwf	?_scale
  3309  0FFF                     l323:
  3310  0FFF  0008               	return
  3311  1000                     __end_of_scale:
  3312                           
  3313                           	psect	text3
  3314  1DD4                     __ptext3:	
  3315 ;; *************** function ___awmod *****************
  3316 ;; Defined at:
  3317 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  divisor         2    3[COMMON] int 
  3320 ;;  dividend        2    5[COMMON] int 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  sign            1    1[BANK0 ] unsigned char 
  3323 ;;  counter         1    0[BANK0 ] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  2    3[COMMON] int 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3333 ;;      Params:         4       0       0       0       0
  3334 ;;      Locals:         0       2       0       0       0
  3335 ;;      Temps:          1       0       0       0       0
  3336 ;;      Totals:         5       2       0       0       0
  3337 ;;Total ram usage:        7 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_scale
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function ___awmod
  3349  1DD4                     ___awmod:
  3350  1DD4                     l3647:	
  3351                           ;incstack = 0
  3352                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3353                           
  3354  1DD4  1283               	bcf	3,5	;RP0=0, select bank0
  3355  1DD5  1303               	bcf	3,6	;RP1=0, select bank0
  3356  1DD6  01A1               	clrf	___awmod@sign
  3357  1DD7                     l3649:
  3358  1DD7  1FF6               	btfss	___awmod@dividend+1,7
  3359  1DD8  2DDA               	goto	u5741
  3360  1DD9  2DDB               	goto	u5740
  3361  1DDA                     u5741:
  3362  1DDA  2DE2               	goto	l3655
  3363  1DDB                     u5740:
  3364  1DDB                     l3651:
  3365  1DDB  09F5               	comf	___awmod@dividend,f
  3366  1DDC  09F6               	comf	___awmod@dividend+1,f
  3367  1DDD  0AF5               	incf	___awmod@dividend,f
  3368  1DDE  1903               	skipnz
  3369  1DDF  0AF6               	incf	___awmod@dividend+1,f
  3370  1DE0                     l3653:
  3371  1DE0  01A1               	clrf	___awmod@sign
  3372  1DE1  0AA1               	incf	___awmod@sign,f
  3373  1DE2                     l3655:
  3374  1DE2  1FF4               	btfss	___awmod@divisor+1,7
  3375  1DE3  2DE5               	goto	u5751
  3376  1DE4  2DE6               	goto	u5750
  3377  1DE5                     u5751:
  3378  1DE5  2DEB               	goto	l3659
  3379  1DE6                     u5750:
  3380  1DE6                     l3657:
  3381  1DE6  09F3               	comf	___awmod@divisor,f
  3382  1DE7  09F4               	comf	___awmod@divisor+1,f
  3383  1DE8  0AF3               	incf	___awmod@divisor,f
  3384  1DE9  1903               	skipnz
  3385  1DEA  0AF4               	incf	___awmod@divisor+1,f
  3386  1DEB                     l3659:
  3387  1DEB  0873               	movf	___awmod@divisor,w
  3388  1DEC  0474               	iorwf	___awmod@divisor+1,w
  3389  1DED  1903               	btfsc	3,2
  3390  1DEE  2DF0               	goto	u5761
  3391  1DEF  2DF1               	goto	u5760
  3392  1DF0                     u5761:
  3393  1DF0  2E20               	goto	l3677
  3394  1DF1                     u5760:
  3395  1DF1                     l3661:
  3396  1DF1  01A0               	clrf	___awmod@counter
  3397  1DF2  0AA0               	incf	___awmod@counter,f
  3398  1DF3  2DFF               	goto	l3667
  3399  1DF4                     l3663:
  3400  1DF4  3001               	movlw	1
  3401  1DF5                     u5775:
  3402  1DF5  1003               	clrc
  3403  1DF6  0DF3               	rlf	___awmod@divisor,f
  3404  1DF7  0DF4               	rlf	___awmod@divisor+1,f
  3405  1DF8  3EFF               	addlw	-1
  3406  1DF9  1D03               	skipz
  3407  1DFA  2DF5               	goto	u5775
  3408  1DFB                     l3665:
  3409  1DFB  3001               	movlw	1
  3410  1DFC  00F7               	movwf	??___awmod
  3411  1DFD  0877               	movf	??___awmod,w
  3412  1DFE  07A0               	addwf	___awmod@counter,f
  3413  1DFF                     l3667:
  3414  1DFF  1FF4               	btfss	___awmod@divisor+1,7
  3415  1E00  2E02               	goto	u5781
  3416  1E01  2E03               	goto	u5780
  3417  1E02                     u5781:
  3418  1E02  2DF4               	goto	l3663
  3419  1E03                     u5780:
  3420  1E03                     l3669:
  3421  1E03  0874               	movf	___awmod@divisor+1,w
  3422  1E04  0276               	subwf	___awmod@dividend+1,w
  3423  1E05  1D03               	skipz
  3424  1E06  2E09               	goto	u5795
  3425  1E07  0873               	movf	___awmod@divisor,w
  3426  1E08  0275               	subwf	___awmod@dividend,w
  3427  1E09                     u5795:
  3428  1E09  1C03               	skipc
  3429  1E0A  2E0C               	goto	u5791
  3430  1E0B  2E0D               	goto	u5790
  3431  1E0C                     u5791:
  3432  1E0C  2E13               	goto	l3673
  3433  1E0D                     u5790:
  3434  1E0D                     l3671:
  3435  1E0D  0873               	movf	___awmod@divisor,w
  3436  1E0E  02F5               	subwf	___awmod@dividend,f
  3437  1E0F  0874               	movf	___awmod@divisor+1,w
  3438  1E10  1C03               	skipc
  3439  1E11  03F6               	decf	___awmod@dividend+1,f
  3440  1E12  02F6               	subwf	___awmod@dividend+1,f
  3441  1E13                     l3673:
  3442  1E13  3001               	movlw	1
  3443  1E14                     u5805:
  3444  1E14  1003               	clrc
  3445  1E15  0CF4               	rrf	___awmod@divisor+1,f
  3446  1E16  0CF3               	rrf	___awmod@divisor,f
  3447  1E17  3EFF               	addlw	-1
  3448  1E18  1D03               	skipz
  3449  1E19  2E14               	goto	u5805
  3450  1E1A                     l3675:
  3451  1E1A  3001               	movlw	1
  3452  1E1B  02A0               	subwf	___awmod@counter,f
  3453  1E1C  1D03               	btfss	3,2
  3454  1E1D  2E1F               	goto	u5811
  3455  1E1E  2E20               	goto	u5810
  3456  1E1F                     u5811:
  3457  1E1F  2E03               	goto	l3669
  3458  1E20                     u5810:
  3459  1E20                     l3677:
  3460  1E20  0821               	movf	___awmod@sign,w
  3461  1E21  1903               	btfsc	3,2
  3462  1E22  2E24               	goto	u5821
  3463  1E23  2E25               	goto	u5820
  3464  1E24                     u5821:
  3465  1E24  2E2A               	goto	l3681
  3466  1E25                     u5820:
  3467  1E25                     l3679:
  3468  1E25  09F5               	comf	___awmod@dividend,f
  3469  1E26  09F6               	comf	___awmod@dividend+1,f
  3470  1E27  0AF5               	incf	___awmod@dividend,f
  3471  1E28  1903               	skipnz
  3472  1E29  0AF6               	incf	___awmod@dividend+1,f
  3473  1E2A                     l3681:
  3474  1E2A  0876               	movf	___awmod@dividend+1,w
  3475  1E2B  00F4               	movwf	?___awmod+1
  3476  1E2C  0875               	movf	___awmod@dividend,w
  3477  1E2D  00F3               	movwf	?___awmod
  3478  1E2E                     l576:
  3479  1E2E  0008               	return
  3480  1E2F                     __end_of___awmod:
  3481                           
  3482                           	psect	text4
  3483  1EF3                     __ptext4:	
  3484 ;; *************** function ___awdiv *****************
  3485 ;; Defined at:
  3486 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  divisor         2    2[BANK0 ] int 
  3489 ;;  dividend        2    4[BANK0 ] int 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  quotient        2    9[BANK0 ] int 
  3492 ;;  sign            1    8[BANK0 ] unsigned char 
  3493 ;;  counter         1    7[BANK0 ] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  2    2[BANK0 ] int 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       4       0       0       0
  3504 ;;      Locals:         0       4       0       0       0
  3505 ;;      Temps:          0       1       0       0       0
  3506 ;;      Totals:         0       9       0       0       0
  3507 ;;Total ram usage:        9 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    1
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_scale
  3514 ;;		_sprintf
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function ___awdiv
  3520  1EF3                     ___awdiv:
  3521  1EF3                     l3603:	
  3522                           ;incstack = 0
  3523                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3524                           
  3525  1EF3  1283               	bcf	3,5	;RP0=0, select bank0
  3526  1EF4  1303               	bcf	3,6	;RP1=0, select bank0
  3527  1EF5  01A8               	clrf	___awdiv@sign
  3528  1EF6                     l3605:
  3529  1EF6  1FA3               	btfss	___awdiv@divisor+1,7
  3530  1EF7  2EF9               	goto	u5641
  3531  1EF8  2EFA               	goto	u5640
  3532  1EF9                     u5641:
  3533  1EF9  2F01               	goto	l3611
  3534  1EFA                     u5640:
  3535  1EFA                     l3607:
  3536  1EFA  09A2               	comf	___awdiv@divisor,f
  3537  1EFB  09A3               	comf	___awdiv@divisor+1,f
  3538  1EFC  0AA2               	incf	___awdiv@divisor,f
  3539  1EFD  1903               	skipnz
  3540  1EFE  0AA3               	incf	___awdiv@divisor+1,f
  3541  1EFF                     l3609:
  3542  1EFF  01A8               	clrf	___awdiv@sign
  3543  1F00  0AA8               	incf	___awdiv@sign,f
  3544  1F01                     l3611:
  3545  1F01  1FA5               	btfss	___awdiv@dividend+1,7
  3546  1F02  2F04               	goto	u5651
  3547  1F03  2F05               	goto	u5650
  3548  1F04                     u5651:
  3549  1F04  2F0E               	goto	l3617
  3550  1F05                     u5650:
  3551  1F05                     l3613:
  3552  1F05  09A4               	comf	___awdiv@dividend,f
  3553  1F06  09A5               	comf	___awdiv@dividend+1,f
  3554  1F07  0AA4               	incf	___awdiv@dividend,f
  3555  1F08  1903               	skipnz
  3556  1F09  0AA5               	incf	___awdiv@dividend+1,f
  3557  1F0A                     l3615:
  3558  1F0A  3001               	movlw	1
  3559  1F0B  00A6               	movwf	??___awdiv
  3560  1F0C  0826               	movf	??___awdiv,w
  3561  1F0D  06A8               	xorwf	___awdiv@sign,f
  3562  1F0E                     l3617:
  3563  1F0E  01A9               	clrf	___awdiv@quotient
  3564  1F0F  01AA               	clrf	___awdiv@quotient+1
  3565  1F10                     l3619:
  3566  1F10  0822               	movf	___awdiv@divisor,w
  3567  1F11  0423               	iorwf	___awdiv@divisor+1,w
  3568  1F12  1903               	btfsc	3,2
  3569  1F13  2F15               	goto	u5661
  3570  1F14  2F16               	goto	u5660
  3571  1F15                     u5661:
  3572  1F15  2F4D               	goto	l3639
  3573  1F16                     u5660:
  3574  1F16                     l3621:
  3575  1F16  01A7               	clrf	___awdiv@counter
  3576  1F17  0AA7               	incf	___awdiv@counter,f
  3577  1F18  2F24               	goto	l3627
  3578  1F19                     l3623:
  3579  1F19  3001               	movlw	1
  3580  1F1A                     u5675:
  3581  1F1A  1003               	clrc
  3582  1F1B  0DA2               	rlf	___awdiv@divisor,f
  3583  1F1C  0DA3               	rlf	___awdiv@divisor+1,f
  3584  1F1D  3EFF               	addlw	-1
  3585  1F1E  1D03               	skipz
  3586  1F1F  2F1A               	goto	u5675
  3587  1F20                     l3625:
  3588  1F20  3001               	movlw	1
  3589  1F21  00A6               	movwf	??___awdiv
  3590  1F22  0826               	movf	??___awdiv,w
  3591  1F23  07A7               	addwf	___awdiv@counter,f
  3592  1F24                     l3627:
  3593  1F24  1FA3               	btfss	___awdiv@divisor+1,7
  3594  1F25  2F27               	goto	u5681
  3595  1F26  2F28               	goto	u5680
  3596  1F27                     u5681:
  3597  1F27  2F19               	goto	l3623
  3598  1F28                     u5680:
  3599  1F28                     l3629:
  3600  1F28  3001               	movlw	1
  3601  1F29                     u5695:
  3602  1F29  1003               	clrc
  3603  1F2A  0DA9               	rlf	___awdiv@quotient,f
  3604  1F2B  0DAA               	rlf	___awdiv@quotient+1,f
  3605  1F2C  3EFF               	addlw	-1
  3606  1F2D  1D03               	skipz
  3607  1F2E  2F29               	goto	u5695
  3608  1F2F  0823               	movf	___awdiv@divisor+1,w
  3609  1F30  0225               	subwf	___awdiv@dividend+1,w
  3610  1F31  1D03               	skipz
  3611  1F32  2F35               	goto	u5705
  3612  1F33  0822               	movf	___awdiv@divisor,w
  3613  1F34  0224               	subwf	___awdiv@dividend,w
  3614  1F35                     u5705:
  3615  1F35  1C03               	skipc
  3616  1F36  2F38               	goto	u5701
  3617  1F37  2F39               	goto	u5700
  3618  1F38                     u5701:
  3619  1F38  2F40               	goto	l3635
  3620  1F39                     u5700:
  3621  1F39                     l3631:
  3622  1F39  0822               	movf	___awdiv@divisor,w
  3623  1F3A  02A4               	subwf	___awdiv@dividend,f
  3624  1F3B  0823               	movf	___awdiv@divisor+1,w
  3625  1F3C  1C03               	skipc
  3626  1F3D  03A5               	decf	___awdiv@dividend+1,f
  3627  1F3E  02A5               	subwf	___awdiv@dividend+1,f
  3628  1F3F                     l3633:
  3629  1F3F  1429               	bsf	___awdiv@quotient,0
  3630  1F40                     l3635:
  3631  1F40  3001               	movlw	1
  3632  1F41                     u5715:
  3633  1F41  1003               	clrc
  3634  1F42  0CA3               	rrf	___awdiv@divisor+1,f
  3635  1F43  0CA2               	rrf	___awdiv@divisor,f
  3636  1F44  3EFF               	addlw	-1
  3637  1F45  1D03               	skipz
  3638  1F46  2F41               	goto	u5715
  3639  1F47                     l3637:
  3640  1F47  3001               	movlw	1
  3641  1F48  02A7               	subwf	___awdiv@counter,f
  3642  1F49  1D03               	btfss	3,2
  3643  1F4A  2F4C               	goto	u5721
  3644  1F4B  2F4D               	goto	u5720
  3645  1F4C                     u5721:
  3646  1F4C  2F28               	goto	l3629
  3647  1F4D                     u5720:
  3648  1F4D                     l3639:
  3649  1F4D  0828               	movf	___awdiv@sign,w
  3650  1F4E  1903               	btfsc	3,2
  3651  1F4F  2F51               	goto	u5731
  3652  1F50  2F52               	goto	u5730
  3653  1F51                     u5731:
  3654  1F51  2F57               	goto	l3643
  3655  1F52                     u5730:
  3656  1F52                     l3641:
  3657  1F52  09A9               	comf	___awdiv@quotient,f
  3658  1F53  09AA               	comf	___awdiv@quotient+1,f
  3659  1F54  0AA9               	incf	___awdiv@quotient,f
  3660  1F55  1903               	skipnz
  3661  1F56  0AAA               	incf	___awdiv@quotient+1,f
  3662  1F57                     l3643:
  3663  1F57  082A               	movf	___awdiv@quotient+1,w
  3664  1F58  00A3               	movwf	?___awdiv+1
  3665  1F59  0829               	movf	___awdiv@quotient,w
  3666  1F5A  00A2               	movwf	?___awdiv
  3667  1F5B                     l563:
  3668  1F5B  0008               	return
  3669  1F5C                     __end_of___awdiv:
  3670                           
  3671                           	psect	text5
  3672  1B20                     __ptext5:	
  3673 ;; *************** function _isdigit *****************
  3674 ;; Defined at:
  3675 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  c               1    wreg     unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  c               1    4[COMMON] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;		None               void
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3689 ;;      Params:         0       0       0       0       0
  3690 ;;      Locals:         2       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0
  3692 ;;      Totals:         2       0       0       0       0
  3693 ;;Total ram usage:        2 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    1
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_sprintf
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           
  3704                           ;psect for function _isdigit
  3705  1B20                     _isdigit:
  3706                           
  3707                           ;incstack = 0
  3708                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3709                           ;isdigit@c stored from wreg
  3710  1B20  00F4               	movwf	isdigit@c
  3711  1B21                     l2863:
  3712  1B21  01F3               	clrf	_isdigit$1075
  3713  1B22                     l2865:
  3714  1B22  303A               	movlw	58
  3715  1B23  0274               	subwf	isdigit@c,w
  3716  1B24  1803               	skipnc
  3717  1B25  2B27               	goto	u4291
  3718  1B26  2B28               	goto	u4290
  3719  1B27                     u4291:
  3720  1B27  2B30               	goto	l2871
  3721  1B28                     u4290:
  3722  1B28                     l2867:
  3723  1B28  3030               	movlw	48
  3724  1B29  0274               	subwf	isdigit@c,w
  3725  1B2A  1C03               	skipc
  3726  1B2B  2B2D               	goto	u4301
  3727  1B2C  2B2E               	goto	u4300
  3728  1B2D                     u4301:
  3729  1B2D  2B30               	goto	l2871
  3730  1B2E                     u4300:
  3731  1B2E                     l2869:
  3732  1B2E  01F3               	clrf	_isdigit$1075
  3733  1B2F  0AF3               	incf	_isdigit$1075,f
  3734  1B30                     l2871:
  3735  1B30  0C73               	rrf	_isdigit$1075,w
  3736  1B31                     l897:
  3737  1B31  0008               	return
  3738  1B32                     __end_of_isdigit:
  3739                           
  3740                           	psect	text6
  3741  05CB                     __ptext6:	
  3742 ;; *************** function _fround *****************
  3743 ;; Defined at:
  3744 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  prec            1    wreg     unsigned char 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  prec            1   56[BANK0 ] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  4   37[BANK0 ] unsigned char 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       4       0       0       0
  3759 ;;      Locals:         0       9       0       0       0
  3760 ;;      Temps:          0       7       0       0       0
  3761 ;;      Totals:         0      20       0       0       0
  3762 ;;Total ram usage:       20 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    3
  3765 ;; This function calls:
  3766 ;;		___flmul
  3767 ;;		___lwdiv
  3768 ;;		___lwmod
  3769 ;; This function is called by:
  3770 ;;		_sprintf
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _fround
  3776  05CB                     _fround:
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3780                           ;fround@prec stored from wreg
  3781  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  3782  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  3783  05CD  00D8               	movwf	fround@prec
  3784  05CE                     l3755:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3787  05CE  306E               	movlw	110
  3788  05CF  0258               	subwf	fround@prec,w
  3789  05D0  1C03               	skipc
  3790  05D1  2DD3               	goto	u5961
  3791  05D2  2DD4               	goto	u5960
  3792  05D3                     u5961:
  3793  05D3  2EE3               	goto	l3763
  3794  05D4                     u5960:
  3795  05D4                     l3757:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3798  05D4  303F               	movlw	63
  3799  05D5  00AE               	movwf	___flmul@b+3
  3800  05D6  3000               	movlw	0
  3801  05D7  00AD               	movwf	___flmul@b+2
  3802  05D8  3000               	movlw	0
  3803  05D9  00AC               	movwf	___flmul@b+1
  3804  05DA  3000               	movlw	0
  3805  05DB  00AB               	movwf	___flmul@b
  3806  05DC  3064               	movlw	100
  3807  05DD  00A1               	movwf	___lwdiv@divisor
  3808  05DE  3000               	movlw	0
  3809  05DF  00A2               	movwf	___lwdiv@divisor+1
  3810  05E0  0858               	movf	fround@prec,w
  3811  05E1  00C9               	movwf	??_fround
  3812  05E2  01CA               	clrf	??_fround+1
  3813  05E3  0849               	movf	??_fround,w
  3814  05E4  00A3               	movwf	___lwdiv@dividend
  3815  05E5  084A               	movf	??_fround+1,w
  3816  05E6  00A4               	movwf	___lwdiv@dividend+1
  3817  05E7  160A  158A  2451  120A  118A  	fcall	___lwdiv
  3818  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3819  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  3820  05EE  0821               	movf	?___lwdiv,w
  3821  05EF  00CB               	movwf	??_fround+2
  3822  05F0  3001               	movlw	1
  3823  05F1                     u5975:
  3824  05F1  1003               	clrc
  3825  05F2  0DCB               	rlf	??_fround+2,f
  3826  05F3  3EFF               	addlw	-1
  3827  05F4  1D03               	skipz
  3828  05F5  2DF1               	goto	u5975
  3829  05F6  1003               	clrc
  3830  05F7  0D4B               	rlf	??_fround+2,w
  3831  05F8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3832  05F9  0084               	movwf	4
  3833  05FA  160A  158A  200A  120A  118A  	fcall	stringdir
  3834  05FF  00CC               	movwf	??_fround+3
  3835  0600  160A  158A  200A  120A  118A  	fcall	stringdir
  3836  0605  00CD               	movwf	??_fround+4
  3837  0606  160A  158A  200A  120A  118A  	fcall	stringdir
  3838  060B  00CE               	movwf	??_fround+5
  3839  060C  160A  158A  200A  120A  118A  	fcall	stringdir
  3840  0611  00CF               	movwf	??_fround+6
  3841  0612  084F               	movf	??_fround+6,w
  3842  0613  00B2               	movwf	___flmul@a+3
  3843  0614  084E               	movf	??_fround+5,w
  3844  0615  00B1               	movwf	___flmul@a+2
  3845  0616  084D               	movf	??_fround+4,w
  3846  0617  00B0               	movwf	___flmul@a+1
  3847  0618  084C               	movf	??_fround+3,w
  3848  0619  00AF               	movwf	___flmul@a
  3849  061A  120A  158A  213C  120A  118A  	fcall	___flmul
  3850  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3851  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3852  0621  082E               	movf	?___flmul+3,w
  3853  0622  00D7               	movwf	_fround$1264+3
  3854  0623  082D               	movf	?___flmul+2,w
  3855  0624  00D6               	movwf	_fround$1264+2
  3856  0625  082C               	movf	?___flmul+1,w
  3857  0626  00D5               	movwf	_fround$1264+1
  3858  0627  082B               	movf	?___flmul,w
  3859  0628  00D4               	movwf	_fround$1264
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3862  0629  300A               	movlw	10
  3863  062A  00A1               	movwf	___lwdiv@divisor
  3864  062B  3000               	movlw	0
  3865  062C  00A2               	movwf	___lwdiv@divisor+1
  3866  062D  0858               	movf	fround@prec,w
  3867  062E  00C9               	movwf	??_fround
  3868  062F  01CA               	clrf	??_fround+1
  3869  0630  0849               	movf	??_fround,w
  3870  0631  00F5               	movwf	___lwmod@dividend
  3871  0632  084A               	movf	??_fround+1,w
  3872  0633  00F6               	movwf	___lwmod@dividend+1
  3873  0634  3064               	movlw	100
  3874  0635  00F3               	movwf	___lwmod@divisor
  3875  0636  3000               	movlw	0
  3876  0637  00F4               	movwf	___lwmod@divisor+1
  3877  0638  160A  118A  2001  120A  118A  	fcall	___lwmod
  3878  063D  0874               	movf	?___lwmod+1,w
  3879  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3880  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3881  0640  00A4               	movwf	___lwdiv@dividend+1
  3882  0641  0873               	movf	?___lwmod,w
  3883  0642  00A3               	movwf	___lwdiv@dividend
  3884  0643  160A  158A  2451  120A  118A  	fcall	___lwdiv
  3885  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3887  064A  0821               	movf	?___lwdiv,w
  3888  064B  00CB               	movwf	??_fround+2
  3889  064C  3001               	movlw	1
  3890  064D                     u5985:
  3891  064D  1003               	clrc
  3892  064E  0DCB               	rlf	??_fround+2,f
  3893  064F  3EFF               	addlw	-1
  3894  0650  1D03               	skipz
  3895  0651  2E4D               	goto	u5985
  3896  0652  1003               	clrc
  3897  0653  0D4B               	rlf	??_fround+2,w
  3898  0654  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3899  0655  0084               	movwf	4
  3900  0656  160A  158A  200A  120A  118A  	fcall	stringdir
  3901  065B  00CC               	movwf	??_fround+3
  3902  065C  160A  158A  200A  120A  118A  	fcall	stringdir
  3903  0661  00CD               	movwf	??_fround+4
  3904  0662  160A  158A  200A  120A  118A  	fcall	stringdir
  3905  0667  00CE               	movwf	??_fround+5
  3906  0668  160A  158A  200A  120A  118A  	fcall	stringdir
  3907  066D  00CF               	movwf	??_fround+6
  3908  066E  084F               	movf	??_fround+6,w
  3909  066F  00AE               	movwf	___flmul@b+3
  3910  0670  084E               	movf	??_fround+5,w
  3911  0671  00AD               	movwf	___flmul@b+2
  3912  0672  084D               	movf	??_fround+4,w
  3913  0673  00AC               	movwf	___flmul@b+1
  3914  0674  084C               	movf	??_fround+3,w
  3915  0675  00AB               	movwf	___flmul@b
  3916  0676  0857               	movf	_fround$1264+3,w
  3917  0677  00B2               	movwf	___flmul@a+3
  3918  0678  0856               	movf	_fround$1264+2,w
  3919  0679  00B1               	movwf	___flmul@a+2
  3920  067A  0855               	movf	_fround$1264+1,w
  3921  067B  00B0               	movwf	___flmul@a+1
  3922  067C  0854               	movf	_fround$1264,w
  3923  067D  00AF               	movwf	___flmul@a
  3924  067E  120A  158A  213C  120A  118A  	fcall	___flmul
  3925  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3926  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3927  0685  082E               	movf	?___flmul+3,w
  3928  0686  00D3               	movwf	_fround$1265+3
  3929  0687  082D               	movf	?___flmul+2,w
  3930  0688  00D2               	movwf	_fround$1265+2
  3931  0689  082C               	movf	?___flmul+1,w
  3932  068A  00D1               	movwf	_fround$1265+1
  3933  068B  082B               	movf	?___flmul,w
  3934  068C  00D0               	movwf	_fround$1265
  3935                           
  3936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3937  068D  300A               	movlw	10
  3938  068E  00F3               	movwf	___lwmod@divisor
  3939  068F  3000               	movlw	0
  3940  0690  00F4               	movwf	___lwmod@divisor+1
  3941  0691  0858               	movf	fround@prec,w
  3942  0692  00C9               	movwf	??_fround
  3943  0693  01CA               	clrf	??_fround+1
  3944  0694  0849               	movf	??_fround,w
  3945  0695  00F5               	movwf	___lwmod@dividend
  3946  0696  084A               	movf	??_fround+1,w
  3947  0697  00F6               	movwf	___lwmod@dividend+1
  3948  0698  160A  118A  2001  120A  118A  	fcall	___lwmod
  3949  069D  0873               	movf	?___lwmod,w
  3950  069E  1283               	bcf	3,5	;RP0=0, select bank0
  3951  069F  1303               	bcf	3,6	;RP1=0, select bank0
  3952  06A0  00CB               	movwf	??_fround+2
  3953  06A1  3001               	movlw	1
  3954  06A2                     u5995:
  3955  06A2  1003               	clrc
  3956  06A3  0DCB               	rlf	??_fround+2,f
  3957  06A4  3EFF               	addlw	-1
  3958  06A5  1D03               	skipz
  3959  06A6  2EA2               	goto	u5995
  3960  06A7  1003               	clrc
  3961  06A8  0D4B               	rlf	??_fround+2,w
  3962  06A9  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3963  06AA  0084               	movwf	4
  3964  06AB  160A  158A  200A  120A  118A  	fcall	stringdir
  3965  06B0  00CC               	movwf	??_fround+3
  3966  06B1  160A  158A  200A  120A  118A  	fcall	stringdir
  3967  06B6  00CD               	movwf	??_fround+4
  3968  06B7  160A  158A  200A  120A  118A  	fcall	stringdir
  3969  06BC  00CE               	movwf	??_fround+5
  3970  06BD  160A  158A  200A  120A  118A  	fcall	stringdir
  3971  06C2  00CF               	movwf	??_fround+6
  3972  06C3  084F               	movf	??_fround+6,w
  3973  06C4  00AE               	movwf	___flmul@b+3
  3974  06C5  084E               	movf	??_fround+5,w
  3975  06C6  00AD               	movwf	___flmul@b+2
  3976  06C7  084D               	movf	??_fround+4,w
  3977  06C8  00AC               	movwf	___flmul@b+1
  3978  06C9  084C               	movf	??_fround+3,w
  3979  06CA  00AB               	movwf	___flmul@b
  3980  06CB  0853               	movf	_fround$1265+3,w
  3981  06CC  00B2               	movwf	___flmul@a+3
  3982  06CD  0852               	movf	_fround$1265+2,w
  3983  06CE  00B1               	movwf	___flmul@a+2
  3984  06CF  0851               	movf	_fround$1265+1,w
  3985  06D0  00B0               	movwf	___flmul@a+1
  3986  06D1  0850               	movf	_fround$1265,w
  3987  06D2  00AF               	movwf	___flmul@a
  3988  06D3  120A  158A  213C  120A  118A  	fcall	___flmul
  3989  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3990  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3991  06DA  082E               	movf	?___flmul+3,w
  3992  06DB  00C8               	movwf	?_fround+3
  3993  06DC  082D               	movf	?___flmul+2,w
  3994  06DD  00C7               	movwf	?_fround+2
  3995  06DE  082C               	movf	?___flmul+1,w
  3996  06DF  00C6               	movwf	?_fround+1
  3997  06E0  082B               	movf	?___flmul,w
  3998  06E1  00C5               	movwf	?_fround
  3999  06E2  2FD7               	goto	l316
  4000  06E3                     l3763:
  4001  06E3  300B               	movlw	11
  4002  06E4  0258               	subwf	fround@prec,w
  4003  06E5  1C03               	skipc
  4004  06E6  2EE8               	goto	u6001
  4005  06E7  2EE9               	goto	u6000
  4006  06E8                     u6001:
  4007  06E8  2F94               	goto	l3769
  4008  06E9                     u6000:
  4009  06E9                     l3765:
  4010                           
  4011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4012  06E9  303F               	movlw	63
  4013  06EA  00AE               	movwf	___flmul@b+3
  4014  06EB  3000               	movlw	0
  4015  06EC  00AD               	movwf	___flmul@b+2
  4016  06ED  3000               	movlw	0
  4017  06EE  00AC               	movwf	___flmul@b+1
  4018  06EF  3000               	movlw	0
  4019  06F0  00AB               	movwf	___flmul@b
  4020  06F1  300A               	movlw	10
  4021  06F2  00A1               	movwf	___lwdiv@divisor
  4022  06F3  3000               	movlw	0
  4023  06F4  00A2               	movwf	___lwdiv@divisor+1
  4024  06F5  0858               	movf	fround@prec,w
  4025  06F6  00C9               	movwf	??_fround
  4026  06F7  01CA               	clrf	??_fround+1
  4027  06F8  0849               	movf	??_fround,w
  4028  06F9  00A3               	movwf	___lwdiv@dividend
  4029  06FA  084A               	movf	??_fround+1,w
  4030  06FB  00A4               	movwf	___lwdiv@dividend+1
  4031  06FC  160A  158A  2451  120A  118A  	fcall	___lwdiv
  4032  0701  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0702  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0703  0821               	movf	?___lwdiv,w
  4035  0704  00CB               	movwf	??_fround+2
  4036  0705  3001               	movlw	1
  4037  0706                     u6015:
  4038  0706  1003               	clrc
  4039  0707  0DCB               	rlf	??_fround+2,f
  4040  0708  3EFF               	addlw	-1
  4041  0709  1D03               	skipz
  4042  070A  2F06               	goto	u6015
  4043  070B  1003               	clrc
  4044  070C  0D4B               	rlf	??_fround+2,w
  4045  070D  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4046  070E  0084               	movwf	4
  4047  070F  160A  158A  200A  120A  118A  	fcall	stringdir
  4048  0714  00CC               	movwf	??_fround+3
  4049  0715  160A  158A  200A  120A  118A  	fcall	stringdir
  4050  071A  00CD               	movwf	??_fround+4
  4051  071B  160A  158A  200A  120A  118A  	fcall	stringdir
  4052  0720  00CE               	movwf	??_fround+5
  4053  0721  160A  158A  200A  120A  118A  	fcall	stringdir
  4054  0726  00CF               	movwf	??_fround+6
  4055  0727  084F               	movf	??_fround+6,w
  4056  0728  00B2               	movwf	___flmul@a+3
  4057  0729  084E               	movf	??_fround+5,w
  4058  072A  00B1               	movwf	___flmul@a+2
  4059  072B  084D               	movf	??_fround+4,w
  4060  072C  00B0               	movwf	___flmul@a+1
  4061  072D  084C               	movf	??_fround+3,w
  4062  072E  00AF               	movwf	___flmul@a
  4063  072F  120A  158A  213C  120A  118A  	fcall	___flmul
  4064  0734  1283               	bcf	3,5	;RP0=0, select bank0
  4065  0735  1303               	bcf	3,6	;RP1=0, select bank0
  4066  0736  082E               	movf	?___flmul+3,w
  4067  0737  00D7               	movwf	_fround$1264+3
  4068  0738  082D               	movf	?___flmul+2,w
  4069  0739  00D6               	movwf	_fround$1264+2
  4070  073A  082C               	movf	?___flmul+1,w
  4071  073B  00D5               	movwf	_fround$1264+1
  4072  073C  082B               	movf	?___flmul,w
  4073  073D  00D4               	movwf	_fround$1264
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4076  073E  300A               	movlw	10
  4077  073F  00F3               	movwf	___lwmod@divisor
  4078  0740  3000               	movlw	0
  4079  0741  00F4               	movwf	___lwmod@divisor+1
  4080  0742  0858               	movf	fround@prec,w
  4081  0743  00C9               	movwf	??_fround
  4082  0744  01CA               	clrf	??_fround+1
  4083  0745  0849               	movf	??_fround,w
  4084  0746  00F5               	movwf	___lwmod@dividend
  4085  0747  084A               	movf	??_fround+1,w
  4086  0748  00F6               	movwf	___lwmod@dividend+1
  4087  0749  160A  118A  2001  120A  118A  	fcall	___lwmod
  4088  074E  0873               	movf	?___lwmod,w
  4089  074F  1283               	bcf	3,5	;RP0=0, select bank0
  4090  0750  1303               	bcf	3,6	;RP1=0, select bank0
  4091  0751  00CB               	movwf	??_fround+2
  4092  0752  3001               	movlw	1
  4093  0753                     u6025:
  4094  0753  1003               	clrc
  4095  0754  0DCB               	rlf	??_fround+2,f
  4096  0755  3EFF               	addlw	-1
  4097  0756  1D03               	skipz
  4098  0757  2F53               	goto	u6025
  4099  0758  1003               	clrc
  4100  0759  0D4B               	rlf	??_fround+2,w
  4101  075A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4102  075B  0084               	movwf	4
  4103  075C  160A  158A  200A  120A  118A  	fcall	stringdir
  4104  0761  00CC               	movwf	??_fround+3
  4105  0762  160A  158A  200A  120A  118A  	fcall	stringdir
  4106  0767  00CD               	movwf	??_fround+4
  4107  0768  160A  158A  200A  120A  118A  	fcall	stringdir
  4108  076D  00CE               	movwf	??_fround+5
  4109  076E  160A  158A  200A  120A  118A  	fcall	stringdir
  4110  0773  00CF               	movwf	??_fround+6
  4111  0774  084F               	movf	??_fround+6,w
  4112  0775  00AE               	movwf	___flmul@b+3
  4113  0776  084E               	movf	??_fround+5,w
  4114  0777  00AD               	movwf	___flmul@b+2
  4115  0778  084D               	movf	??_fround+4,w
  4116  0779  00AC               	movwf	___flmul@b+1
  4117  077A  084C               	movf	??_fround+3,w
  4118  077B  00AB               	movwf	___flmul@b
  4119  077C  0857               	movf	_fround$1264+3,w
  4120  077D  00B2               	movwf	___flmul@a+3
  4121  077E  0856               	movf	_fround$1264+2,w
  4122  077F  00B1               	movwf	___flmul@a+2
  4123  0780  0855               	movf	_fround$1264+1,w
  4124  0781  00B0               	movwf	___flmul@a+1
  4125  0782  0854               	movf	_fround$1264,w
  4126  0783  00AF               	movwf	___flmul@a
  4127  0784  120A  158A  213C  120A  118A  	fcall	___flmul
  4128  0789  1283               	bcf	3,5	;RP0=0, select bank0
  4129  078A  1303               	bcf	3,6	;RP1=0, select bank0
  4130  078B  082E               	movf	?___flmul+3,w
  4131  078C  00C8               	movwf	?_fround+3
  4132  078D  082D               	movf	?___flmul+2,w
  4133  078E  00C7               	movwf	?_fround+2
  4134  078F  082C               	movf	?___flmul+1,w
  4135  0790  00C6               	movwf	?_fround+1
  4136  0791  082B               	movf	?___flmul,w
  4137  0792  00C5               	movwf	?_fround
  4138  0793  2FD7               	goto	l316
  4139  0794                     l3769:
  4140                           
  4141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4142  0794  303F               	movlw	63
  4143  0795  00AE               	movwf	___flmul@b+3
  4144  0796  3000               	movlw	0
  4145  0797  00AD               	movwf	___flmul@b+2
  4146  0798  3000               	movlw	0
  4147  0799  00AC               	movwf	___flmul@b+1
  4148  079A  3000               	movlw	0
  4149  079B  00AB               	movwf	___flmul@b
  4150  079C  0858               	movf	fround@prec,w
  4151  079D  00C9               	movwf	??_fround
  4152  079E  3001               	movlw	1
  4153  079F                     u6035:
  4154  079F  1003               	clrc
  4155  07A0  0DC9               	rlf	??_fround,f
  4156  07A1  3EFF               	addlw	-1
  4157  07A2  1D03               	skipz
  4158  07A3  2F9F               	goto	u6035
  4159  07A4  1003               	clrc
  4160  07A5  0D49               	rlf	??_fround,w
  4161  07A6  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4162  07A7  0084               	movwf	4
  4163  07A8  160A  158A  200A  120A  118A  	fcall	stringdir
  4164  07AD  00CA               	movwf	??_fround+1
  4165  07AE  160A  158A  200A  120A  118A  	fcall	stringdir
  4166  07B3  00CB               	movwf	??_fround+2
  4167  07B4  160A  158A  200A  120A  118A  	fcall	stringdir
  4168  07B9  00CC               	movwf	??_fround+3
  4169  07BA  160A  158A  200A  120A  118A  	fcall	stringdir
  4170  07BF  00CD               	movwf	??_fround+4
  4171  07C0  084D               	movf	??_fround+4,w
  4172  07C1  00B2               	movwf	___flmul@a+3
  4173  07C2  084C               	movf	??_fround+3,w
  4174  07C3  00B1               	movwf	___flmul@a+2
  4175  07C4  084B               	movf	??_fround+2,w
  4176  07C5  00B0               	movwf	___flmul@a+1
  4177  07C6  084A               	movf	??_fround+1,w
  4178  07C7  00AF               	movwf	___flmul@a
  4179  07C8  120A  158A  213C  120A  118A  	fcall	___flmul
  4180  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  4181  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  4182  07CF  082E               	movf	?___flmul+3,w
  4183  07D0  00C8               	movwf	?_fround+3
  4184  07D1  082D               	movf	?___flmul+2,w
  4185  07D2  00C7               	movwf	?_fround+2
  4186  07D3  082C               	movf	?___flmul+1,w
  4187  07D4  00C6               	movwf	?_fround+1
  4188  07D5  082B               	movf	?___flmul,w
  4189  07D6  00C5               	movwf	?_fround
  4190  07D7                     l316:
  4191  07D7  0008               	return
  4192  07D8                     __end_of_fround:
  4193                           
  4194                           	psect	text7
  4195  1001                     __ptext7:	
  4196 ;; *************** function ___lwmod *****************
  4197 ;; Defined at:
  4198 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  divisor         2    3[COMMON] unsigned int 
  4201 ;;  dividend        2    5[COMMON] unsigned int 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  counter         1    0[BANK0 ] unsigned char 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  2    3[COMMON] unsigned int 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2, status,0
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4213 ;;      Params:         4       0       0       0       0
  4214 ;;      Locals:         0       1       0       0       0
  4215 ;;      Temps:          1       0       0       0       0
  4216 ;;      Totals:         5       1       0       0       0
  4217 ;;Total ram usage:        6 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    1
  4220 ;; This function calls:
  4221 ;;		Nothing
  4222 ;; This function is called by:
  4223 ;;		_fround
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           
  4228                           ;psect for function ___lwmod
  4229  1001                     ___lwmod:
  4230  1001                     l3711:	
  4231                           ;incstack = 0
  4232                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4233                           
  4234  1001  0873               	movf	___lwmod@divisor,w
  4235  1002  0474               	iorwf	___lwmod@divisor+1,w
  4236  1003  1903               	btfsc	3,2
  4237  1004  2806               	goto	u5901
  4238  1005  2807               	goto	u5900
  4239  1006                     u5901:
  4240  1006  2838               	goto	l3729
  4241  1007                     u5900:
  4242  1007                     l3713:
  4243  1007  1283               	bcf	3,5	;RP0=0, select bank0
  4244  1008  1303               	bcf	3,6	;RP1=0, select bank0
  4245  1009  01A0               	clrf	___lwmod@counter
  4246  100A  0AA0               	incf	___lwmod@counter,f
  4247  100B  2817               	goto	l3719
  4248  100C                     l3715:
  4249  100C  3001               	movlw	1
  4250  100D                     u5915:
  4251  100D  1003               	clrc
  4252  100E  0DF3               	rlf	___lwmod@divisor,f
  4253  100F  0DF4               	rlf	___lwmod@divisor+1,f
  4254  1010  3EFF               	addlw	-1
  4255  1011  1D03               	skipz
  4256  1012  280D               	goto	u5915
  4257  1013                     l3717:
  4258  1013  3001               	movlw	1
  4259  1014  00F7               	movwf	??___lwmod
  4260  1015  0877               	movf	??___lwmod,w
  4261  1016  07A0               	addwf	___lwmod@counter,f
  4262  1017                     l3719:
  4263  1017  1FF4               	btfss	___lwmod@divisor+1,7
  4264  1018  281A               	goto	u5921
  4265  1019  281B               	goto	u5920
  4266  101A                     u5921:
  4267  101A  280C               	goto	l3715
  4268  101B                     u5920:
  4269  101B                     l3721:
  4270  101B  0874               	movf	___lwmod@divisor+1,w
  4271  101C  0276               	subwf	___lwmod@dividend+1,w
  4272  101D  1D03               	skipz
  4273  101E  2821               	goto	u5935
  4274  101F  0873               	movf	___lwmod@divisor,w
  4275  1020  0275               	subwf	___lwmod@dividend,w
  4276  1021                     u5935:
  4277  1021  1C03               	skipc
  4278  1022  2824               	goto	u5931
  4279  1023  2825               	goto	u5930
  4280  1024                     u5931:
  4281  1024  282B               	goto	l3725
  4282  1025                     u5930:
  4283  1025                     l3723:
  4284  1025  0873               	movf	___lwmod@divisor,w
  4285  1026  02F5               	subwf	___lwmod@dividend,f
  4286  1027  0874               	movf	___lwmod@divisor+1,w
  4287  1028  1C03               	skipc
  4288  1029  03F6               	decf	___lwmod@dividend+1,f
  4289  102A  02F6               	subwf	___lwmod@dividend+1,f
  4290  102B                     l3725:
  4291  102B  3001               	movlw	1
  4292  102C                     u5945:
  4293  102C  1003               	clrc
  4294  102D  0CF4               	rrf	___lwmod@divisor+1,f
  4295  102E  0CF3               	rrf	___lwmod@divisor,f
  4296  102F  3EFF               	addlw	-1
  4297  1030  1D03               	skipz
  4298  1031  282C               	goto	u5945
  4299  1032                     l3727:
  4300  1032  3001               	movlw	1
  4301  1033  02A0               	subwf	___lwmod@counter,f
  4302  1034  1D03               	btfss	3,2
  4303  1035  2837               	goto	u5951
  4304  1036  2838               	goto	u5950
  4305  1037                     u5951:
  4306  1037  281B               	goto	l3721
  4307  1038                     u5950:
  4308  1038                     l3729:
  4309  1038  0876               	movf	___lwmod@dividend+1,w
  4310  1039  00F4               	movwf	?___lwmod+1
  4311  103A  0875               	movf	___lwmod@dividend,w
  4312  103B  00F3               	movwf	?___lwmod
  4313  103C                     l726:
  4314  103C  0008               	return
  4315  103D                     __end_of___lwmod:
  4316                           
  4317                           	psect	text8
  4318  1C51                     __ptext8:	
  4319 ;; *************** function ___lwdiv *****************
  4320 ;; Defined at:
  4321 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  divisor         2    1[BANK0 ] unsigned int 
  4324 ;;  dividend        2    3[BANK0 ] unsigned int 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  quotient        2    7[BANK0 ] unsigned int 
  4327 ;;  counter         1    6[BANK0 ] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  2    1[BANK0 ] unsigned int 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4337 ;;      Params:         0       4       0       0       0
  4338 ;;      Locals:         0       3       0       0       0
  4339 ;;      Temps:          0       1       0       0       0
  4340 ;;      Totals:         0       8       0       0       0
  4341 ;;Total ram usage:        8 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    1
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_fround
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           
  4352                           ;psect for function ___lwdiv
  4353  1C51                     ___lwdiv:
  4354  1C51                     l3685:	
  4355                           ;incstack = 0
  4356                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4357                           
  4358  1C51  1283               	bcf	3,5	;RP0=0, select bank0
  4359  1C52  1303               	bcf	3,6	;RP1=0, select bank0
  4360  1C53  01A7               	clrf	___lwdiv@quotient
  4361  1C54  01A8               	clrf	___lwdiv@quotient+1
  4362  1C55                     l3687:
  4363  1C55  0821               	movf	___lwdiv@divisor,w
  4364  1C56  0422               	iorwf	___lwdiv@divisor+1,w
  4365  1C57  1903               	btfsc	3,2
  4366  1C58  2C5A               	goto	u5831
  4367  1C59  2C5B               	goto	u5830
  4368  1C5A                     u5831:
  4369  1C5A  2C92               	goto	l3707
  4370  1C5B                     u5830:
  4371  1C5B                     l3689:
  4372  1C5B  01A6               	clrf	___lwdiv@counter
  4373  1C5C  0AA6               	incf	___lwdiv@counter,f
  4374  1C5D  2C69               	goto	l3695
  4375  1C5E                     l3691:
  4376  1C5E  3001               	movlw	1
  4377  1C5F                     u5845:
  4378  1C5F  1003               	clrc
  4379  1C60  0DA1               	rlf	___lwdiv@divisor,f
  4380  1C61  0DA2               	rlf	___lwdiv@divisor+1,f
  4381  1C62  3EFF               	addlw	-1
  4382  1C63  1D03               	skipz
  4383  1C64  2C5F               	goto	u5845
  4384  1C65                     l3693:
  4385  1C65  3001               	movlw	1
  4386  1C66  00A5               	movwf	??___lwdiv
  4387  1C67  0825               	movf	??___lwdiv,w
  4388  1C68  07A6               	addwf	___lwdiv@counter,f
  4389  1C69                     l3695:
  4390  1C69  1FA2               	btfss	___lwdiv@divisor+1,7
  4391  1C6A  2C6C               	goto	u5851
  4392  1C6B  2C6D               	goto	u5850
  4393  1C6C                     u5851:
  4394  1C6C  2C5E               	goto	l3691
  4395  1C6D                     u5850:
  4396  1C6D                     l3697:
  4397  1C6D  3001               	movlw	1
  4398  1C6E                     u5865:
  4399  1C6E  1003               	clrc
  4400  1C6F  0DA7               	rlf	___lwdiv@quotient,f
  4401  1C70  0DA8               	rlf	___lwdiv@quotient+1,f
  4402  1C71  3EFF               	addlw	-1
  4403  1C72  1D03               	skipz
  4404  1C73  2C6E               	goto	u5865
  4405  1C74  0822               	movf	___lwdiv@divisor+1,w
  4406  1C75  0224               	subwf	___lwdiv@dividend+1,w
  4407  1C76  1D03               	skipz
  4408  1C77  2C7A               	goto	u5875
  4409  1C78  0821               	movf	___lwdiv@divisor,w
  4410  1C79  0223               	subwf	___lwdiv@dividend,w
  4411  1C7A                     u5875:
  4412  1C7A  1C03               	skipc
  4413  1C7B  2C7D               	goto	u5871
  4414  1C7C  2C7E               	goto	u5870
  4415  1C7D                     u5871:
  4416  1C7D  2C85               	goto	l3703
  4417  1C7E                     u5870:
  4418  1C7E                     l3699:
  4419  1C7E  0821               	movf	___lwdiv@divisor,w
  4420  1C7F  02A3               	subwf	___lwdiv@dividend,f
  4421  1C80  0822               	movf	___lwdiv@divisor+1,w
  4422  1C81  1C03               	skipc
  4423  1C82  03A4               	decf	___lwdiv@dividend+1,f
  4424  1C83  02A4               	subwf	___lwdiv@dividend+1,f
  4425  1C84                     l3701:
  4426  1C84  1427               	bsf	___lwdiv@quotient,0
  4427  1C85                     l3703:
  4428  1C85  3001               	movlw	1
  4429  1C86                     u5885:
  4430  1C86  1003               	clrc
  4431  1C87  0CA2               	rrf	___lwdiv@divisor+1,f
  4432  1C88  0CA1               	rrf	___lwdiv@divisor,f
  4433  1C89  3EFF               	addlw	-1
  4434  1C8A  1D03               	skipz
  4435  1C8B  2C86               	goto	u5885
  4436  1C8C                     l3705:
  4437  1C8C  3001               	movlw	1
  4438  1C8D  02A6               	subwf	___lwdiv@counter,f
  4439  1C8E  1D03               	btfss	3,2
  4440  1C8F  2C91               	goto	u5891
  4441  1C90  2C92               	goto	u5890
  4442  1C91                     u5891:
  4443  1C91  2C6D               	goto	l3697
  4444  1C92                     u5890:
  4445  1C92                     l3707:
  4446  1C92  0828               	movf	___lwdiv@quotient+1,w
  4447  1C93  00A2               	movwf	?___lwdiv+1
  4448  1C94  0827               	movf	___lwdiv@quotient,w
  4449  1C95  00A1               	movwf	?___lwdiv
  4450  1C96                     l716:
  4451  1C96  0008               	return
  4452  1C97                     __end_of___lwdiv:
  4453                           
  4454                           	psect	text9
  4455  10F9                     __ptext9:	
  4456 ;; *************** function __tdiv_to_l_ *****************
  4457 ;; Defined at:
  4458 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  f1              4    0[BANK0 ] float 
  4461 ;;  f2              4    4[BANK0 ] float 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  quot            4    8[BANK0 ] unsigned long 
  4464 ;;  exp1            1   13[BANK0 ] unsigned char 
  4465 ;;  cntr            1   12[BANK0 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  4    0[BANK0 ] unsigned long 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4475 ;;      Params:         0       8       0       0       0
  4476 ;;      Locals:         0       6       0       0       0
  4477 ;;      Temps:          4       0       0       0       0
  4478 ;;      Totals:         4      14       0       0       0
  4479 ;;Total ram usage:       18 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    1
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_sprintf
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           
  4490                           ;psect for function __tdiv_to_l_
  4491  10F9                     __tdiv_to_l_:
  4492  10F9                     l3813:	
  4493                           ;incstack = 0
  4494                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4495                           
  4496  10F9  1283               	bcf	3,5	;RP0=0, select bank0
  4497  10FA  1303               	bcf	3,6	;RP1=0, select bank0
  4498  10FB  0820               	movf	__tdiv_to_l_@f1,w
  4499  10FC  00F3               	movwf	??__tdiv_to_l_
  4500  10FD  0821               	movf	__tdiv_to_l_@f1+1,w
  4501  10FE  00F4               	movwf	??__tdiv_to_l_+1
  4502  10FF  0822               	movf	__tdiv_to_l_@f1+2,w
  4503  1100  00F5               	movwf	??__tdiv_to_l_+2
  4504  1101  1003               	clrc
  4505  1102  0D74               	rlf	??__tdiv_to_l_+1,w
  4506  1103  0D75               	rlf	??__tdiv_to_l_+2,w
  4507  1104  00F6               	movwf	??__tdiv_to_l_+3
  4508  1105  0876               	movf	??__tdiv_to_l_+3,w
  4509  1106  00AD               	movwf	__tdiv_to_l_@exp1
  4510  1107  082D               	movf	__tdiv_to_l_@exp1,w
  4511  1108  1D03               	btfss	3,2
  4512  1109  290B               	goto	u6211
  4513  110A  290C               	goto	u6210
  4514  110B                     u6211:
  4515  110B  2915               	goto	l3819
  4516  110C                     u6210:
  4517  110C                     l3815:
  4518  110C  3000               	movlw	0
  4519  110D  00A3               	movwf	?__tdiv_to_l_+3
  4520  110E  3000               	movlw	0
  4521  110F  00A2               	movwf	?__tdiv_to_l_+2
  4522  1110  3000               	movlw	0
  4523  1111  00A1               	movwf	?__tdiv_to_l_+1
  4524  1112  3000               	movlw	0
  4525  1113  00A0               	movwf	?__tdiv_to_l_
  4526  1114  29B5               	goto	l627
  4527  1115                     l3819:
  4528  1115  0824               	movf	__tdiv_to_l_@f2,w
  4529  1116  00F3               	movwf	??__tdiv_to_l_
  4530  1117  0825               	movf	__tdiv_to_l_@f2+1,w
  4531  1118  00F4               	movwf	??__tdiv_to_l_+1
  4532  1119  0826               	movf	__tdiv_to_l_@f2+2,w
  4533  111A  00F5               	movwf	??__tdiv_to_l_+2
  4534  111B  1003               	clrc
  4535  111C  0D74               	rlf	??__tdiv_to_l_+1,w
  4536  111D  0D75               	rlf	??__tdiv_to_l_+2,w
  4537  111E  00F6               	movwf	??__tdiv_to_l_+3
  4538  111F  0876               	movf	??__tdiv_to_l_+3,w
  4539  1120  00AC               	movwf	__tdiv_to_l_@cntr
  4540  1121  082C               	movf	__tdiv_to_l_@cntr,w
  4541  1122  1D03               	btfss	3,2
  4542  1123  2925               	goto	u6221
  4543  1124  2926               	goto	u6220
  4544  1125                     u6221:
  4545  1125  2927               	goto	l628
  4546  1126                     u6220:
  4547  1126  290C               	goto	l3815
  4548  1127                     l628:
  4549  1127  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4550  1128                     l3825:
  4551  1128  30FF               	movlw	255
  4552  1129  05A0               	andwf	__tdiv_to_l_@f1,f
  4553  112A  30FF               	movlw	255
  4554  112B  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4555  112C  3000               	movlw	0
  4556  112D  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4557  112E                     l3827:
  4558  112E  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4559  112F  30FF               	movlw	255
  4560  1130  05A4               	andwf	__tdiv_to_l_@f2,f
  4561  1131  30FF               	movlw	255
  4562  1132  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4563  1133  3000               	movlw	0
  4564  1134  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4565  1135  3000               	movlw	0
  4566  1136  00AB               	movwf	__tdiv_to_l_@quot+3
  4567  1137  3000               	movlw	0
  4568  1138  00AA               	movwf	__tdiv_to_l_@quot+2
  4569  1139  3000               	movlw	0
  4570  113A  00A9               	movwf	__tdiv_to_l_@quot+1
  4571  113B  3000               	movlw	0
  4572  113C  00A8               	movwf	__tdiv_to_l_@quot
  4573  113D                     l3829:
  4574  113D  307F               	movlw	127
  4575  113E  02AD               	subwf	__tdiv_to_l_@exp1,f
  4576  113F                     l3831:
  4577  113F  3098               	movlw	152
  4578  1140  072C               	addwf	__tdiv_to_l_@cntr,w
  4579  1141  00F3               	movwf	??__tdiv_to_l_
  4580  1142  0873               	movf	??__tdiv_to_l_,w
  4581  1143  02AD               	subwf	__tdiv_to_l_@exp1,f
  4582  1144  3018               	movlw	24
  4583  1145  00F3               	movwf	??__tdiv_to_l_
  4584  1146  0873               	movf	??__tdiv_to_l_,w
  4585  1147  00AC               	movwf	__tdiv_to_l_@cntr
  4586  1148                     l3833:
  4587  1148  3001               	movlw	1
  4588  1149  00F3               	movwf	??__tdiv_to_l_
  4589  114A                     u6235:
  4590  114A  1003               	clrc
  4591  114B  0DA8               	rlf	__tdiv_to_l_@quot,f
  4592  114C  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4593  114D  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4594  114E  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4595  114F  0BF3               	decfsz	??__tdiv_to_l_,f
  4596  1150  294A               	goto	u6235
  4597  1151                     l3835:
  4598  1151  0826               	movf	__tdiv_to_l_@f2+2,w
  4599  1152  0222               	subwf	__tdiv_to_l_@f1+2,w
  4600  1153  1D03               	skipz
  4601  1154  295B               	goto	u6245
  4602  1155  0825               	movf	__tdiv_to_l_@f2+1,w
  4603  1156  0221               	subwf	__tdiv_to_l_@f1+1,w
  4604  1157  1D03               	skipz
  4605  1158  295B               	goto	u6245
  4606  1159  0824               	movf	__tdiv_to_l_@f2,w
  4607  115A  0220               	subwf	__tdiv_to_l_@f1,w
  4608  115B                     u6245:
  4609  115B  1C03               	skipc
  4610  115C  295E               	goto	u6241
  4611  115D  295F               	goto	u6240
  4612  115E                     u6241:
  4613  115E  296A               	goto	l3841
  4614  115F                     u6240:
  4615  115F                     l3837:
  4616  115F  0824               	movf	__tdiv_to_l_@f2,w
  4617  1160  02A0               	subwf	__tdiv_to_l_@f1,f
  4618  1161  0825               	movf	__tdiv_to_l_@f2+1,w
  4619  1162  1C03               	skipc
  4620  1163  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4621  1164  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4622  1165  0826               	movf	__tdiv_to_l_@f2+2,w
  4623  1166  1C03               	skipc
  4624  1167  0A26               	incf	__tdiv_to_l_@f2+2,w
  4625  1168  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4626  1169                     l3839:
  4627  1169  1428               	bsf	__tdiv_to_l_@quot,0
  4628  116A                     l3841:
  4629  116A  3001               	movlw	1
  4630  116B                     u6255:
  4631  116B  1003               	clrc
  4632  116C  0DA0               	rlf	__tdiv_to_l_@f1,f
  4633  116D  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4634  116E  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4635  116F  3EFF               	addlw	-1
  4636  1170  1D03               	skipz
  4637  1171  296B               	goto	u6255
  4638  1172                     l3843:
  4639  1172  3001               	movlw	1
  4640  1173  02AC               	subwf	__tdiv_to_l_@cntr,f
  4641  1174  1D03               	btfss	3,2
  4642  1175  2977               	goto	u6261
  4643  1176  2978               	goto	u6260
  4644  1177                     u6261:
  4645  1177  2948               	goto	l3833
  4646  1178                     u6260:
  4647  1178                     l631:
  4648  1178  1FAD               	btfss	__tdiv_to_l_@exp1,7
  4649  1179  297B               	goto	u6271
  4650  117A  297C               	goto	u6270
  4651  117B                     u6271:
  4652  117B  2996               	goto	l3853
  4653  117C                     u6270:
  4654  117C                     l3845:
  4655  117C  082D               	movf	__tdiv_to_l_@exp1,w
  4656  117D  3A80               	xorlw	128
  4657  117E  3E97               	addlw	151
  4658  117F  1803               	skipnc
  4659  1180  2982               	goto	u6281
  4660  1181  2983               	goto	u6280
  4661  1182                     u6281:
  4662  1182  2984               	goto	l3851
  4663  1183                     u6280:
  4664  1183  290C               	goto	l3815
  4665  1184                     l3851:
  4666  1184  3001               	movlw	1
  4667  1185                     u6295:
  4668  1185  1003               	clrc
  4669  1186  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  4670  1187  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  4671  1188  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  4672  1189  0CA8               	rrf	__tdiv_to_l_@quot,f
  4673  118A  3EFF               	addlw	-1
  4674  118B  1D03               	skipz
  4675  118C  2985               	goto	u6295
  4676  118D  3001               	movlw	1
  4677  118E  00F3               	movwf	??__tdiv_to_l_
  4678  118F  0873               	movf	??__tdiv_to_l_,w
  4679  1190  07AD               	addwf	__tdiv_to_l_@exp1,f
  4680  1191  1D03               	btfss	3,2
  4681  1192  2994               	goto	u6301
  4682  1193  2995               	goto	u6300
  4683  1194                     u6301:
  4684  1194  2984               	goto	l3851
  4685  1195                     u6300:
  4686  1195  29AD               	goto	l3861
  4687  1196                     l3853:
  4688  1196  3018               	movlw	24
  4689  1197  022D               	subwf	__tdiv_to_l_@exp1,w
  4690  1198  1C03               	skipc
  4691  1199  299B               	goto	u6311
  4692  119A  299C               	goto	u6310
  4693  119B                     u6311:
  4694  119B  29A8               	goto	l638
  4695  119C                     u6310:
  4696  119C  290C               	goto	l3815
  4697  119D                     l3859:
  4698  119D  3001               	movlw	1
  4699  119E  00F3               	movwf	??__tdiv_to_l_
  4700  119F                     u6325:
  4701  119F  1003               	clrc
  4702  11A0  0DA8               	rlf	__tdiv_to_l_@quot,f
  4703  11A1  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4704  11A2  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4705  11A3  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4706  11A4  0BF3               	decfsz	??__tdiv_to_l_,f
  4707  11A5  299F               	goto	u6325
  4708  11A6  3001               	movlw	1
  4709  11A7  02AD               	subwf	__tdiv_to_l_@exp1,f
  4710  11A8                     l638:
  4711  11A8  082D               	movf	__tdiv_to_l_@exp1,w
  4712  11A9  1D03               	btfss	3,2
  4713  11AA  29AC               	goto	u6331
  4714  11AB  29AD               	goto	u6330
  4715  11AC                     u6331:
  4716  11AC  299D               	goto	l3859
  4717  11AD                     u6330:
  4718  11AD                     l3861:
  4719  11AD  082B               	movf	__tdiv_to_l_@quot+3,w
  4720  11AE  00A3               	movwf	?__tdiv_to_l_+3
  4721  11AF  082A               	movf	__tdiv_to_l_@quot+2,w
  4722  11B0  00A2               	movwf	?__tdiv_to_l_+2
  4723  11B1  0829               	movf	__tdiv_to_l_@quot+1,w
  4724  11B2  00A1               	movwf	?__tdiv_to_l_+1
  4725  11B3  0828               	movf	__tdiv_to_l_@quot,w
  4726  11B4  00A0               	movwf	?__tdiv_to_l_
  4727  11B5                     l627:
  4728  11B5  0008               	return
  4729  11B6                     __end_of__tdiv_to_l_:
  4730                           
  4731                           	psect	text10
  4732  11B6                     __ptext10:	
  4733 ;; *************** function __div_to_l_ *****************
  4734 ;; Defined at:
  4735 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  f1              4    0[BANK0 ] unsigned long 
  4738 ;;  f2              4    4[BANK0 ] unsigned long 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  quot            4    8[BANK0 ] unsigned long 
  4741 ;;  exp1            1   13[BANK0 ] unsigned char 
  4742 ;;  cntr            1   12[BANK0 ] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  4    0[BANK0 ] unsigned long 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4752 ;;      Params:         0       8       0       0       0
  4753 ;;      Locals:         0       6       0       0       0
  4754 ;;      Temps:          1       0       0       0       0
  4755 ;;      Totals:         1      14       0       0       0
  4756 ;;Total ram usage:       15 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_sprintf
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function __div_to_l_
  4768  11B6                     __div_to_l_:
  4769  11B6                     l3865:	
  4770                           ;incstack = 0
  4771                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4772                           
  4773  11B6  1003               	clrc
  4774  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  4775  11B8  1303               	bcf	3,6	;RP1=0, select bank0
  4776  11B9  0D22               	rlf	__div_to_l_@f1+2,w
  4777  11BA  0D23               	rlf	__div_to_l_@f1+3,w
  4778  11BB  00F3               	movwf	??__div_to_l_
  4779  11BC  0873               	movf	??__div_to_l_,w
  4780  11BD  00AD               	movwf	__div_to_l_@exp1
  4781  11BE  082D               	movf	__div_to_l_@exp1,w
  4782  11BF  1D03               	btfss	3,2
  4783  11C0  29C2               	goto	u6341
  4784  11C1  29C3               	goto	u6340
  4785  11C2                     u6341:
  4786  11C2  29CC               	goto	l3871
  4787  11C3                     u6340:
  4788  11C3                     l3867:
  4789  11C3  3000               	movlw	0
  4790  11C4  00A3               	movwf	?__div_to_l_+3
  4791  11C5  3000               	movlw	0
  4792  11C6  00A2               	movwf	?__div_to_l_+2
  4793  11C7  3000               	movlw	0
  4794  11C8  00A1               	movwf	?__div_to_l_+1
  4795  11C9  3000               	movlw	0
  4796  11CA  00A0               	movwf	?__div_to_l_
  4797  11CB  2A73               	goto	l580
  4798  11CC                     l3871:
  4799  11CC  1003               	clrc
  4800  11CD  0D26               	rlf	__div_to_l_@f2+2,w
  4801  11CE  0D27               	rlf	__div_to_l_@f2+3,w
  4802  11CF  00F3               	movwf	??__div_to_l_
  4803  11D0  0873               	movf	??__div_to_l_,w
  4804  11D1  00AC               	movwf	__div_to_l_@cntr
  4805  11D2  082C               	movf	__div_to_l_@cntr,w
  4806  11D3  1D03               	btfss	3,2
  4807  11D4  29D6               	goto	u6351
  4808  11D5  29D7               	goto	u6350
  4809  11D6                     u6351:
  4810  11D6  29D8               	goto	l581
  4811  11D7                     u6350:
  4812  11D7  29C3               	goto	l3867
  4813  11D8                     l581:
  4814  11D8  17A2               	bsf	__div_to_l_@f1+2,7
  4815  11D9                     l3877:
  4816  11D9  30FF               	movlw	255
  4817  11DA  05A0               	andwf	__div_to_l_@f1,f
  4818  11DB  30FF               	movlw	255
  4819  11DC  05A1               	andwf	__div_to_l_@f1+1,f
  4820  11DD  30FF               	movlw	255
  4821  11DE  05A2               	andwf	__div_to_l_@f1+2,f
  4822  11DF  3000               	movlw	0
  4823  11E0  05A3               	andwf	__div_to_l_@f1+3,f
  4824  11E1                     l3879:
  4825  11E1  17A6               	bsf	__div_to_l_@f2+2,7
  4826  11E2  30FF               	movlw	255
  4827  11E3  05A4               	andwf	__div_to_l_@f2,f
  4828  11E4  30FF               	movlw	255
  4829  11E5  05A5               	andwf	__div_to_l_@f2+1,f
  4830  11E6  30FF               	movlw	255
  4831  11E7  05A6               	andwf	__div_to_l_@f2+2,f
  4832  11E8  3000               	movlw	0
  4833  11E9  05A7               	andwf	__div_to_l_@f2+3,f
  4834  11EA  3000               	movlw	0
  4835  11EB  00AB               	movwf	__div_to_l_@quot+3
  4836  11EC  3000               	movlw	0
  4837  11ED  00AA               	movwf	__div_to_l_@quot+2
  4838  11EE  3000               	movlw	0
  4839  11EF  00A9               	movwf	__div_to_l_@quot+1
  4840  11F0  3000               	movlw	0
  4841  11F1  00A8               	movwf	__div_to_l_@quot
  4842  11F2                     l3881:
  4843  11F2  307F               	movlw	127
  4844  11F3  02AD               	subwf	__div_to_l_@exp1,f
  4845  11F4                     l3883:
  4846  11F4  30A0               	movlw	160
  4847  11F5  072C               	addwf	__div_to_l_@cntr,w
  4848  11F6  00F3               	movwf	??__div_to_l_
  4849  11F7  0873               	movf	??__div_to_l_,w
  4850  11F8  02AD               	subwf	__div_to_l_@exp1,f
  4851  11F9  3020               	movlw	32
  4852  11FA  00F3               	movwf	??__div_to_l_
  4853  11FB  0873               	movf	??__div_to_l_,w
  4854  11FC  00AC               	movwf	__div_to_l_@cntr
  4855  11FD                     l3885:
  4856  11FD  3001               	movlw	1
  4857  11FE  00F3               	movwf	??__div_to_l_
  4858  11FF                     u6365:
  4859  11FF  1003               	clrc
  4860  1200  0DA8               	rlf	__div_to_l_@quot,f
  4861  1201  0DA9               	rlf	__div_to_l_@quot+1,f
  4862  1202  0DAA               	rlf	__div_to_l_@quot+2,f
  4863  1203  0DAB               	rlf	__div_to_l_@quot+3,f
  4864  1204  0BF3               	decfsz	??__div_to_l_,f
  4865  1205  29FF               	goto	u6365
  4866  1206                     l3887:
  4867  1206  0827               	movf	__div_to_l_@f2+3,w
  4868  1207  0223               	subwf	__div_to_l_@f1+3,w
  4869  1208  1D03               	skipz
  4870  1209  2A14               	goto	u6375
  4871  120A  0826               	movf	__div_to_l_@f2+2,w
  4872  120B  0222               	subwf	__div_to_l_@f1+2,w
  4873  120C  1D03               	skipz
  4874  120D  2A14               	goto	u6375
  4875  120E  0825               	movf	__div_to_l_@f2+1,w
  4876  120F  0221               	subwf	__div_to_l_@f1+1,w
  4877  1210  1D03               	skipz
  4878  1211  2A14               	goto	u6375
  4879  1212  0824               	movf	__div_to_l_@f2,w
  4880  1213  0220               	subwf	__div_to_l_@f1,w
  4881  1214                     u6375:
  4882  1214  1C03               	skipc
  4883  1215  2A17               	goto	u6371
  4884  1216  2A18               	goto	u6370
  4885  1217                     u6371:
  4886  1217  2A27               	goto	l3893
  4887  1218                     u6370:
  4888  1218                     l3889:
  4889  1218  0824               	movf	__div_to_l_@f2,w
  4890  1219  02A0               	subwf	__div_to_l_@f1,f
  4891  121A  0825               	movf	__div_to_l_@f2+1,w
  4892  121B  1C03               	skipc
  4893  121C  0F25               	incfsz	__div_to_l_@f2+1,w
  4894  121D  02A1               	subwf	__div_to_l_@f1+1,f
  4895  121E  0826               	movf	__div_to_l_@f2+2,w
  4896  121F  1C03               	skipc
  4897  1220  0F26               	incfsz	__div_to_l_@f2+2,w
  4898  1221  02A2               	subwf	__div_to_l_@f1+2,f
  4899  1222  0827               	movf	__div_to_l_@f2+3,w
  4900  1223  1C03               	skipc
  4901  1224  0F27               	incfsz	__div_to_l_@f2+3,w
  4902  1225  02A3               	subwf	__div_to_l_@f1+3,f
  4903  1226                     l3891:
  4904  1226  1428               	bsf	__div_to_l_@quot,0
  4905  1227                     l3893:
  4906  1227  3001               	movlw	1
  4907  1228  00F3               	movwf	??__div_to_l_
  4908  1229                     u6385:
  4909  1229  1003               	clrc
  4910  122A  0DA0               	rlf	__div_to_l_@f1,f
  4911  122B  0DA1               	rlf	__div_to_l_@f1+1,f
  4912  122C  0DA2               	rlf	__div_to_l_@f1+2,f
  4913  122D  0DA3               	rlf	__div_to_l_@f1+3,f
  4914  122E  0BF3               	decfsz	??__div_to_l_,f
  4915  122F  2A29               	goto	u6385
  4916  1230                     l3895:
  4917  1230  3001               	movlw	1
  4918  1231  02AC               	subwf	__div_to_l_@cntr,f
  4919  1232  1D03               	btfss	3,2
  4920  1233  2A35               	goto	u6391
  4921  1234  2A36               	goto	u6390
  4922  1235                     u6391:
  4923  1235  29FD               	goto	l3885
  4924  1236                     u6390:
  4925  1236                     l584:
  4926  1236  1FAD               	btfss	__div_to_l_@exp1,7
  4927  1237  2A39               	goto	u6401
  4928  1238  2A3A               	goto	u6400
  4929  1239                     u6401:
  4930  1239  2A54               	goto	l3905
  4931  123A                     u6400:
  4932  123A                     l3897:
  4933  123A  082D               	movf	__div_to_l_@exp1,w
  4934  123B  3A80               	xorlw	128
  4935  123C  3E9F               	addlw	159
  4936  123D  1803               	skipnc
  4937  123E  2A40               	goto	u6411
  4938  123F  2A41               	goto	u6410
  4939  1240                     u6411:
  4940  1240  2A42               	goto	l3903
  4941  1241                     u6410:
  4942  1241  29C3               	goto	l3867
  4943  1242                     l3903:
  4944  1242  3001               	movlw	1
  4945  1243                     u6425:
  4946  1243  1003               	clrc
  4947  1244  0CAB               	rrf	__div_to_l_@quot+3,f
  4948  1245  0CAA               	rrf	__div_to_l_@quot+2,f
  4949  1246  0CA9               	rrf	__div_to_l_@quot+1,f
  4950  1247  0CA8               	rrf	__div_to_l_@quot,f
  4951  1248  3EFF               	addlw	-1
  4952  1249  1D03               	skipz
  4953  124A  2A43               	goto	u6425
  4954  124B  3001               	movlw	1
  4955  124C  00F3               	movwf	??__div_to_l_
  4956  124D  0873               	movf	??__div_to_l_,w
  4957  124E  07AD               	addwf	__div_to_l_@exp1,f
  4958  124F  1D03               	btfss	3,2
  4959  1250  2A52               	goto	u6431
  4960  1251  2A53               	goto	u6430
  4961  1252                     u6431:
  4962  1252  2A42               	goto	l3903
  4963  1253                     u6430:
  4964  1253  2A6B               	goto	l3913
  4965  1254                     l3905:
  4966  1254  3020               	movlw	32
  4967  1255  022D               	subwf	__div_to_l_@exp1,w
  4968  1256  1C03               	skipc
  4969  1257  2A59               	goto	u6441
  4970  1258  2A5A               	goto	u6440
  4971  1259                     u6441:
  4972  1259  2A66               	goto	l591
  4973  125A                     u6440:
  4974  125A  29C3               	goto	l3867
  4975  125B                     l3911:
  4976  125B  3001               	movlw	1
  4977  125C  00F3               	movwf	??__div_to_l_
  4978  125D                     u6455:
  4979  125D  1003               	clrc
  4980  125E  0DA8               	rlf	__div_to_l_@quot,f
  4981  125F  0DA9               	rlf	__div_to_l_@quot+1,f
  4982  1260  0DAA               	rlf	__div_to_l_@quot+2,f
  4983  1261  0DAB               	rlf	__div_to_l_@quot+3,f
  4984  1262  0BF3               	decfsz	??__div_to_l_,f
  4985  1263  2A5D               	goto	u6455
  4986  1264  3001               	movlw	1
  4987  1265  02AD               	subwf	__div_to_l_@exp1,f
  4988  1266                     l591:
  4989  1266  082D               	movf	__div_to_l_@exp1,w
  4990  1267  1D03               	btfss	3,2
  4991  1268  2A6A               	goto	u6461
  4992  1269  2A6B               	goto	u6460
  4993  126A                     u6461:
  4994  126A  2A5B               	goto	l3911
  4995  126B                     u6460:
  4996  126B                     l3913:
  4997  126B  082B               	movf	__div_to_l_@quot+3,w
  4998  126C  00A3               	movwf	?__div_to_l_+3
  4999  126D  082A               	movf	__div_to_l_@quot+2,w
  5000  126E  00A2               	movwf	?__div_to_l_+2
  5001  126F  0829               	movf	__div_to_l_@quot+1,w
  5002  1270  00A1               	movwf	?__div_to_l_+1
  5003  1271  0828               	movf	__div_to_l_@quot,w
  5004  1272  00A0               	movwf	?__div_to_l_
  5005  1273                     l580:
  5006  1273  0008               	return
  5007  1274                     __end_of__div_to_l_:
  5008                           
  5009                           	psect	text11
  5010  1BE0                     __ptext11:	
  5011 ;; *************** function ___wmul *****************
  5012 ;; Defined at:
  5013 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  multiplier      2    3[COMMON] unsigned int 
  5016 ;;  multiplicand    2    5[COMMON] unsigned int 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  product         2    0[BANK0 ] unsigned int 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  2    3[COMMON] unsigned int 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, status,0
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5028 ;;      Params:         4       0       0       0       0
  5029 ;;      Locals:         0       2       0       0       0
  5030 ;;      Temps:          0       0       0       0       0
  5031 ;;      Totals:         4       2       0       0       0
  5032 ;;Total ram usage:        6 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    1
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		_sprintf
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           
  5043                           ;psect for function ___wmul
  5044  1BE0                     ___wmul:
  5045  1BE0                     l3917:	
  5046                           ;incstack = 0
  5047                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5048                           
  5049  1BE0  1283               	bcf	3,5	;RP0=0, select bank0
  5050  1BE1  1303               	bcf	3,6	;RP1=0, select bank0
  5051  1BE2  01A0               	clrf	___wmul@product
  5052  1BE3  01A1               	clrf	___wmul@product+1
  5053  1BE4                     l3919:
  5054  1BE4  1C73               	btfss	___wmul@multiplier,0
  5055  1BE5  2BE7               	goto	u6471
  5056  1BE6  2BE8               	goto	u6470
  5057  1BE7                     u6471:
  5058  1BE7  2BF0               	goto	l410
  5059  1BE8                     u6470:
  5060  1BE8                     l3921:
  5061  1BE8  0875               	movf	___wmul@multiplicand,w
  5062  1BE9  1283               	bcf	3,5	;RP0=0, select bank0
  5063  1BEA  1303               	bcf	3,6	;RP1=0, select bank0
  5064  1BEB  07A0               	addwf	___wmul@product,f
  5065  1BEC  1803               	skipnc
  5066  1BED  0AA1               	incf	___wmul@product+1,f
  5067  1BEE  0876               	movf	___wmul@multiplicand+1,w
  5068  1BEF  07A1               	addwf	___wmul@product+1,f
  5069  1BF0                     l410:
  5070  1BF0  3001               	movlw	1
  5071  1BF1                     u6485:
  5072  1BF1  1003               	clrc
  5073  1BF2  0DF5               	rlf	___wmul@multiplicand,f
  5074  1BF3  0DF6               	rlf	___wmul@multiplicand+1,f
  5075  1BF4  3EFF               	addlw	-1
  5076  1BF5  1D03               	skipz
  5077  1BF6  2BF1               	goto	u6485
  5078  1BF7                     l3923:
  5079  1BF7  3001               	movlw	1
  5080  1BF8                     u6495:
  5081  1BF8  1003               	clrc
  5082  1BF9  0CF4               	rrf	___wmul@multiplier+1,f
  5083  1BFA  0CF3               	rrf	___wmul@multiplier,f
  5084  1BFB  3EFF               	addlw	-1
  5085  1BFC  1D03               	skipz
  5086  1BFD  2BF8               	goto	u6495
  5087  1BFE                     l3925:
  5088  1BFE  0873               	movf	___wmul@multiplier,w
  5089  1BFF  0474               	iorwf	___wmul@multiplier+1,w
  5090  1C00  1D03               	btfss	3,2
  5091  1C01  2C03               	goto	u6501
  5092  1C02  2C04               	goto	u6500
  5093  1C03                     u6501:
  5094  1C03  2BE4               	goto	l3919
  5095  1C04                     u6500:
  5096  1C04                     l3927:
  5097  1C04  1283               	bcf	3,5	;RP0=0, select bank0
  5098  1C05  1303               	bcf	3,6	;RP1=0, select bank0
  5099  1C06  0821               	movf	___wmul@product+1,w
  5100  1C07  00F4               	movwf	?___wmul+1
  5101  1C08  0820               	movf	___wmul@product,w
  5102  1C09  00F3               	movwf	?___wmul
  5103  1C0A                     l412:
  5104  1C0A  0008               	return
  5105  1C0B                     __end_of___wmul:
  5106                           
  5107                           	psect	text12
  5108  1D7E                     __ptext12:	
  5109 ;; *************** function ___llmod *****************
  5110 ;; Defined at:
  5111 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  divisor         4    0[BANK0 ] unsigned long 
  5114 ;;  dividend        4    4[BANK0 ] unsigned long 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  counter         1    4[COMMON] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  4    0[BANK0 ] unsigned long 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5126 ;;      Params:         0       8       0       0       0
  5127 ;;      Locals:         1       0       0       0       0
  5128 ;;      Temps:          1       0       0       0       0
  5129 ;;      Totals:         2       8       0       0       0
  5130 ;;Total ram usage:       10 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    1
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_sprintf
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           
  5141                           ;psect for function ___llmod
  5142  1D7E                     ___llmod:
  5143  1D7E                     l3987:	
  5144                           ;incstack = 0
  5145                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5146                           
  5147  1D7E  1283               	bcf	3,5	;RP0=0, select bank0
  5148  1D7F  1303               	bcf	3,6	;RP1=0, select bank0
  5149  1D80  0823               	movf	___llmod@divisor+3,w
  5150  1D81  0422               	iorwf	___llmod@divisor+2,w
  5151  1D82  0421               	iorwf	___llmod@divisor+1,w
  5152  1D83  0420               	iorwf	___llmod@divisor,w
  5153  1D84  1903               	skipnz
  5154  1D85  2D87               	goto	u6681
  5155  1D86  2D88               	goto	u6680
  5156  1D87                     u6681:
  5157  1D87  2DCB               	goto	l4003
  5158  1D88                     u6680:
  5159  1D88                     l3989:
  5160  1D88  01F4               	clrf	___llmod@counter
  5161  1D89  0AF4               	incf	___llmod@counter,f
  5162  1D8A  2D98               	goto	l3993
  5163  1D8B                     l3991:
  5164  1D8B  3001               	movlw	1
  5165  1D8C  00F3               	movwf	??___llmod
  5166  1D8D                     u6695:
  5167  1D8D  1003               	clrc
  5168  1D8E  0DA0               	rlf	___llmod@divisor,f
  5169  1D8F  0DA1               	rlf	___llmod@divisor+1,f
  5170  1D90  0DA2               	rlf	___llmod@divisor+2,f
  5171  1D91  0DA3               	rlf	___llmod@divisor+3,f
  5172  1D92  0BF3               	decfsz	??___llmod,f
  5173  1D93  2D8D               	goto	u6695
  5174  1D94  3001               	movlw	1
  5175  1D95  00F3               	movwf	??___llmod
  5176  1D96  0873               	movf	??___llmod,w
  5177  1D97  07F4               	addwf	___llmod@counter,f
  5178  1D98                     l3993:
  5179  1D98  1FA3               	btfss	___llmod@divisor+3,7
  5180  1D99  2D9B               	goto	u6701
  5181  1D9A  2D9C               	goto	u6700
  5182  1D9B                     u6701:
  5183  1D9B  2D8B               	goto	l3991
  5184  1D9C                     u6700:
  5185  1D9C                     l3995:
  5186  1D9C  0823               	movf	___llmod@divisor+3,w
  5187  1D9D  0227               	subwf	___llmod@dividend+3,w
  5188  1D9E  1D03               	skipz
  5189  1D9F  2DAA               	goto	u6715
  5190  1DA0  0822               	movf	___llmod@divisor+2,w
  5191  1DA1  0226               	subwf	___llmod@dividend+2,w
  5192  1DA2  1D03               	skipz
  5193  1DA3  2DAA               	goto	u6715
  5194  1DA4  0821               	movf	___llmod@divisor+1,w
  5195  1DA5  0225               	subwf	___llmod@dividend+1,w
  5196  1DA6  1D03               	skipz
  5197  1DA7  2DAA               	goto	u6715
  5198  1DA8  0820               	movf	___llmod@divisor,w
  5199  1DA9  0224               	subwf	___llmod@dividend,w
  5200  1DAA                     u6715:
  5201  1DAA  1C03               	skipc
  5202  1DAB  2DAD               	goto	u6711
  5203  1DAC  2DAE               	goto	u6710
  5204  1DAD                     u6711:
  5205  1DAD  2DBC               	goto	l3999
  5206  1DAE                     u6710:
  5207  1DAE                     l3997:
  5208  1DAE  0820               	movf	___llmod@divisor,w
  5209  1DAF  02A4               	subwf	___llmod@dividend,f
  5210  1DB0  0821               	movf	___llmod@divisor+1,w
  5211  1DB1  1C03               	skipc
  5212  1DB2  0F21               	incfsz	___llmod@divisor+1,w
  5213  1DB3  02A5               	subwf	___llmod@dividend+1,f
  5214  1DB4  0822               	movf	___llmod@divisor+2,w
  5215  1DB5  1C03               	skipc
  5216  1DB6  0F22               	incfsz	___llmod@divisor+2,w
  5217  1DB7  02A6               	subwf	___llmod@dividend+2,f
  5218  1DB8  0823               	movf	___llmod@divisor+3,w
  5219  1DB9  1C03               	skipc
  5220  1DBA  0F23               	incfsz	___llmod@divisor+3,w
  5221  1DBB  02A7               	subwf	___llmod@dividend+3,f
  5222  1DBC                     l3999:
  5223  1DBC  3001               	movlw	1
  5224  1DBD                     u6725:
  5225  1DBD  1003               	clrc
  5226  1DBE  0CA3               	rrf	___llmod@divisor+3,f
  5227  1DBF  0CA2               	rrf	___llmod@divisor+2,f
  5228  1DC0  0CA1               	rrf	___llmod@divisor+1,f
  5229  1DC1  0CA0               	rrf	___llmod@divisor,f
  5230  1DC2  3EFF               	addlw	-1
  5231  1DC3  1D03               	skipz
  5232  1DC4  2DBD               	goto	u6725
  5233  1DC5                     l4001:
  5234  1DC5  3001               	movlw	1
  5235  1DC6  02F4               	subwf	___llmod@counter,f
  5236  1DC7  1D03               	btfss	3,2
  5237  1DC8  2DCA               	goto	u6731
  5238  1DC9  2DCB               	goto	u6730
  5239  1DCA                     u6731:
  5240  1DCA  2D9C               	goto	l3995
  5241  1DCB                     u6730:
  5242  1DCB                     l4003:
  5243  1DCB  0827               	movf	___llmod@dividend+3,w
  5244  1DCC  00A3               	movwf	?___llmod+3
  5245  1DCD  0826               	movf	___llmod@dividend+2,w
  5246  1DCE  00A2               	movwf	?___llmod+2
  5247  1DCF  0825               	movf	___llmod@dividend+1,w
  5248  1DD0  00A1               	movwf	?___llmod+1
  5249  1DD1  0824               	movf	___llmod@dividend,w
  5250  1DD2  00A0               	movwf	?___llmod
  5251  1DD3                     l666:
  5252  1DD3  0008               	return
  5253  1DD4                     __end_of___llmod:
  5254                           
  5255                           	psect	text13
  5256  1E8B                     __ptext13:	
  5257 ;; *************** function ___lldiv *****************
  5258 ;; Defined at:
  5259 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;  divisor         4    0[BANK0 ] unsigned long 
  5262 ;;  dividend        4    4[BANK0 ] unsigned long 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  quotient        4    8[BANK0 ] unsigned long 
  5265 ;;  counter         1   12[BANK0 ] unsigned char 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  4    0[BANK0 ] unsigned long 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5275 ;;      Params:         0       8       0       0       0
  5276 ;;      Locals:         0       5       0       0       0
  5277 ;;      Temps:          1       0       0       0       0
  5278 ;;      Totals:         1      13       0       0       0
  5279 ;;Total ram usage:       14 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    1
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_sprintf
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           
  5290                           ;psect for function ___lldiv
  5291  1E8B                     ___lldiv:
  5292  1E8B                     l3931:	
  5293                           ;incstack = 0
  5294                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5295                           
  5296  1E8B  3000               	movlw	0
  5297  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
  5298  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
  5299  1E8E  00AB               	movwf	___lldiv@quotient+3
  5300  1E8F  3000               	movlw	0
  5301  1E90  00AA               	movwf	___lldiv@quotient+2
  5302  1E91  3000               	movlw	0
  5303  1E92  00A9               	movwf	___lldiv@quotient+1
  5304  1E93  3000               	movlw	0
  5305  1E94  00A8               	movwf	___lldiv@quotient
  5306  1E95  0823               	movf	___lldiv@divisor+3,w
  5307  1E96  0422               	iorwf	___lldiv@divisor+2,w
  5308  1E97  0421               	iorwf	___lldiv@divisor+1,w
  5309  1E98  0420               	iorwf	___lldiv@divisor,w
  5310  1E99  1903               	skipnz
  5311  1E9A  2E9C               	goto	u6511
  5312  1E9B  2E9D               	goto	u6510
  5313  1E9C                     u6511:
  5314  1E9C  2EEA               	goto	l3951
  5315  1E9D                     u6510:
  5316  1E9D                     l3933:
  5317  1E9D  01AC               	clrf	___lldiv@counter
  5318  1E9E  0AAC               	incf	___lldiv@counter,f
  5319  1E9F  2EAD               	goto	l3937
  5320  1EA0                     l3935:
  5321  1EA0  3001               	movlw	1
  5322  1EA1  00F3               	movwf	??___lldiv
  5323  1EA2                     u6525:
  5324  1EA2  1003               	clrc
  5325  1EA3  0DA0               	rlf	___lldiv@divisor,f
  5326  1EA4  0DA1               	rlf	___lldiv@divisor+1,f
  5327  1EA5  0DA2               	rlf	___lldiv@divisor+2,f
  5328  1EA6  0DA3               	rlf	___lldiv@divisor+3,f
  5329  1EA7  0BF3               	decfsz	??___lldiv,f
  5330  1EA8  2EA2               	goto	u6525
  5331  1EA9  3001               	movlw	1
  5332  1EAA  00F3               	movwf	??___lldiv
  5333  1EAB  0873               	movf	??___lldiv,w
  5334  1EAC  07AC               	addwf	___lldiv@counter,f
  5335  1EAD                     l3937:
  5336  1EAD  1FA3               	btfss	___lldiv@divisor+3,7
  5337  1EAE  2EB0               	goto	u6531
  5338  1EAF  2EB1               	goto	u6530
  5339  1EB0                     u6531:
  5340  1EB0  2EA0               	goto	l3935
  5341  1EB1                     u6530:
  5342  1EB1                     l3939:
  5343  1EB1  3001               	movlw	1
  5344  1EB2  00F3               	movwf	??___lldiv
  5345  1EB3                     u6545:
  5346  1EB3  1003               	clrc
  5347  1EB4  0DA8               	rlf	___lldiv@quotient,f
  5348  1EB5  0DA9               	rlf	___lldiv@quotient+1,f
  5349  1EB6  0DAA               	rlf	___lldiv@quotient+2,f
  5350  1EB7  0DAB               	rlf	___lldiv@quotient+3,f
  5351  1EB8  0BF3               	decfsz	??___lldiv,f
  5352  1EB9  2EB3               	goto	u6545
  5353  1EBA                     l3941:
  5354  1EBA  0823               	movf	___lldiv@divisor+3,w
  5355  1EBB  0227               	subwf	___lldiv@dividend+3,w
  5356  1EBC  1D03               	skipz
  5357  1EBD  2EC8               	goto	u6555
  5358  1EBE  0822               	movf	___lldiv@divisor+2,w
  5359  1EBF  0226               	subwf	___lldiv@dividend+2,w
  5360  1EC0  1D03               	skipz
  5361  1EC1  2EC8               	goto	u6555
  5362  1EC2  0821               	movf	___lldiv@divisor+1,w
  5363  1EC3  0225               	subwf	___lldiv@dividend+1,w
  5364  1EC4  1D03               	skipz
  5365  1EC5  2EC8               	goto	u6555
  5366  1EC6  0820               	movf	___lldiv@divisor,w
  5367  1EC7  0224               	subwf	___lldiv@dividend,w
  5368  1EC8                     u6555:
  5369  1EC8  1C03               	skipc
  5370  1EC9  2ECB               	goto	u6551
  5371  1ECA  2ECC               	goto	u6550
  5372  1ECB                     u6551:
  5373  1ECB  2EDB               	goto	l3947
  5374  1ECC                     u6550:
  5375  1ECC                     l3943:
  5376  1ECC  0820               	movf	___lldiv@divisor,w
  5377  1ECD  02A4               	subwf	___lldiv@dividend,f
  5378  1ECE  0821               	movf	___lldiv@divisor+1,w
  5379  1ECF  1C03               	skipc
  5380  1ED0  0F21               	incfsz	___lldiv@divisor+1,w
  5381  1ED1  02A5               	subwf	___lldiv@dividend+1,f
  5382  1ED2  0822               	movf	___lldiv@divisor+2,w
  5383  1ED3  1C03               	skipc
  5384  1ED4  0F22               	incfsz	___lldiv@divisor+2,w
  5385  1ED5  02A6               	subwf	___lldiv@dividend+2,f
  5386  1ED6  0823               	movf	___lldiv@divisor+3,w
  5387  1ED7  1C03               	skipc
  5388  1ED8  0F23               	incfsz	___lldiv@divisor+3,w
  5389  1ED9  02A7               	subwf	___lldiv@dividend+3,f
  5390  1EDA                     l3945:
  5391  1EDA  1428               	bsf	___lldiv@quotient,0
  5392  1EDB                     l3947:
  5393  1EDB  3001               	movlw	1
  5394  1EDC                     u6565:
  5395  1EDC  1003               	clrc
  5396  1EDD  0CA3               	rrf	___lldiv@divisor+3,f
  5397  1EDE  0CA2               	rrf	___lldiv@divisor+2,f
  5398  1EDF  0CA1               	rrf	___lldiv@divisor+1,f
  5399  1EE0  0CA0               	rrf	___lldiv@divisor,f
  5400  1EE1  3EFF               	addlw	-1
  5401  1EE2  1D03               	skipz
  5402  1EE3  2EDC               	goto	u6565
  5403  1EE4                     l3949:
  5404  1EE4  3001               	movlw	1
  5405  1EE5  02AC               	subwf	___lldiv@counter,f
  5406  1EE6  1D03               	btfss	3,2
  5407  1EE7  2EE9               	goto	u6571
  5408  1EE8  2EEA               	goto	u6570
  5409  1EE9                     u6571:
  5410  1EE9  2EB1               	goto	l3939
  5411  1EEA                     u6570:
  5412  1EEA                     l3951:
  5413  1EEA  082B               	movf	___lldiv@quotient+3,w
  5414  1EEB  00A3               	movwf	?___lldiv+3
  5415  1EEC  082A               	movf	___lldiv@quotient+2,w
  5416  1EED  00A2               	movwf	?___lldiv+2
  5417  1EEE  0829               	movf	___lldiv@quotient+1,w
  5418  1EEF  00A1               	movwf	?___lldiv+1
  5419  1EF0  0828               	movf	___lldiv@quotient,w
  5420  1EF1  00A0               	movwf	?___lldiv
  5421  1EF2                     l446:
  5422  1EF2  0008               	return
  5423  1EF3                     __end_of___lldiv:
  5424                           
  5425                           	psect	text14
  5426  0800                     __ptext14:	
  5427 ;; *************** function ___fltol *****************
  5428 ;; Defined at:
  5429 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  f1              4   56[BANK0 ] unsigned long 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  exp1            1   66[BANK0 ] unsigned char 
  5434 ;;  sign1           1   65[BANK0 ] unsigned char 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  4   56[BANK0 ] long 
  5437 ;; Registers used:
  5438 ;;		wreg, status,2, status,0
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5444 ;;      Params:         0       4       0       0       0
  5445 ;;      Locals:         0       2       0       0       0
  5446 ;;      Temps:          0       5       0       0       0
  5447 ;;      Totals:         0      11       0       0       0
  5448 ;;Total ram usage:       11 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_sprintf
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           
  5459                           ;psect for function ___fltol
  5460  0800                     ___fltol:
  5461  0800                     l3057:	
  5462                           ;incstack = 0
  5463                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5464                           
  5465  0800  1003               	clrc
  5466  0801  1283               	bcf	3,5	;RP0=0, select bank0
  5467  0802  1303               	bcf	3,6	;RP1=0, select bank0
  5468  0803  0D5A               	rlf	___fltol@f1+2,w
  5469  0804  0D5B               	rlf	___fltol@f1+3,w
  5470  0805  00DC               	movwf	??___fltol
  5471  0806  085C               	movf	??___fltol,w
  5472  0807  00E2               	movwf	___fltol@exp1
  5473  0808  0862               	movf	___fltol@exp1,w
  5474  0809  1D03               	btfss	3,2
  5475  080A  280C               	goto	u4791
  5476  080B  280D               	goto	u4790
  5477  080C                     u4791:
  5478  080C  2816               	goto	l3063
  5479  080D                     u4790:
  5480  080D                     l3059:
  5481  080D  3000               	movlw	0
  5482  080E  00DB               	movwf	?___fltol+3
  5483  080F  3000               	movlw	0
  5484  0810  00DA               	movwf	?___fltol+2
  5485  0811  3000               	movlw	0
  5486  0812  00D9               	movwf	?___fltol+1
  5487  0813  3000               	movlw	0
  5488  0814  00D8               	movwf	?___fltol
  5489  0815  287B               	goto	l613
  5490  0816                     l3063:
  5491  0816  0858               	movf	___fltol@f1,w
  5492  0817  00DC               	movwf	??___fltol
  5493  0818  0859               	movf	___fltol@f1+1,w
  5494  0819  00DD               	movwf	??___fltol+1
  5495  081A  085A               	movf	___fltol@f1+2,w
  5496  081B  00DE               	movwf	??___fltol+2
  5497  081C  085B               	movf	___fltol@f1+3,w
  5498  081D  00DF               	movwf	??___fltol+3
  5499  081E  301F               	movlw	31
  5500  081F                     u4805:
  5501  081F  1003               	clrc
  5502  0820  0CDF               	rrf	??___fltol+3,f
  5503  0821  0CDE               	rrf	??___fltol+2,f
  5504  0822  0CDD               	rrf	??___fltol+1,f
  5505  0823  0CDC               	rrf	??___fltol,f
  5506  0824                     u4800:
  5507  0824  3EFF               	addlw	-1
  5508  0825  1D03               	skipz
  5509  0826  281F               	goto	u4805
  5510  0827  085C               	movf	??___fltol,w
  5511  0828  00E0               	movwf	??___fltol+4
  5512  0829  0860               	movf	??___fltol+4,w
  5513  082A  00E1               	movwf	___fltol@sign1
  5514  082B                     l3065:
  5515  082B  17DA               	bsf	___fltol@f1+2,7
  5516  082C                     l3067:
  5517  082C  30FF               	movlw	255
  5518  082D  05D8               	andwf	___fltol@f1,f
  5519  082E  30FF               	movlw	255
  5520  082F  05D9               	andwf	___fltol@f1+1,f
  5521  0830  30FF               	movlw	255
  5522  0831  05DA               	andwf	___fltol@f1+2,f
  5523  0832  3000               	movlw	0
  5524  0833  05DB               	andwf	___fltol@f1+3,f
  5525  0834                     l3069:
  5526  0834  3096               	movlw	150
  5527  0835  02E2               	subwf	___fltol@exp1,f
  5528  0836                     l3071:
  5529  0836  1FE2               	btfss	___fltol@exp1,7
  5530  0837  2839               	goto	u4811
  5531  0838  283A               	goto	u4810
  5532  0839                     u4811:
  5533  0839  2854               	goto	l3081
  5534  083A                     u4810:
  5535  083A                     l3073:
  5536  083A  0862               	movf	___fltol@exp1,w
  5537  083B  3A80               	xorlw	128
  5538  083C  3E97               	addlw	151
  5539  083D  1803               	skipnc
  5540  083E  2840               	goto	u4821
  5541  083F  2841               	goto	u4820
  5542  0840                     u4821:
  5543  0840  2842               	goto	l3079
  5544  0841                     u4820:
  5545  0841  280D               	goto	l3059
  5546  0842                     l3079:
  5547  0842  3001               	movlw	1
  5548  0843                     u4835:
  5549  0843  1003               	clrc
  5550  0844  0CDB               	rrf	___fltol@f1+3,f
  5551  0845  0CDA               	rrf	___fltol@f1+2,f
  5552  0846  0CD9               	rrf	___fltol@f1+1,f
  5553  0847  0CD8               	rrf	___fltol@f1,f
  5554  0848  3EFF               	addlw	-1
  5555  0849  1D03               	skipz
  5556  084A  2843               	goto	u4835
  5557  084B  3001               	movlw	1
  5558  084C  00DC               	movwf	??___fltol
  5559  084D  085C               	movf	??___fltol,w
  5560  084E  07E2               	addwf	___fltol@exp1,f
  5561  084F  1D03               	btfss	3,2
  5562  0850  2852               	goto	u4841
  5563  0851  2853               	goto	u4840
  5564  0852                     u4841:
  5565  0852  2842               	goto	l3079
  5566  0853                     u4840:
  5567  0853  286B               	goto	l3089
  5568  0854                     l3081:
  5569  0854  3020               	movlw	32
  5570  0855  0262               	subwf	___fltol@exp1,w
  5571  0856  1C03               	skipc
  5572  0857  2859               	goto	u4851
  5573  0858  285A               	goto	u4850
  5574  0859                     u4851:
  5575  0859  2866               	goto	l620
  5576  085A                     u4850:
  5577  085A  280D               	goto	l3059
  5578  085B                     l3087:
  5579  085B  3001               	movlw	1
  5580  085C  00DC               	movwf	??___fltol
  5581  085D                     u4865:
  5582  085D  1003               	clrc
  5583  085E  0DD8               	rlf	___fltol@f1,f
  5584  085F  0DD9               	rlf	___fltol@f1+1,f
  5585  0860  0DDA               	rlf	___fltol@f1+2,f
  5586  0861  0DDB               	rlf	___fltol@f1+3,f
  5587  0862  0BDC               	decfsz	??___fltol,f
  5588  0863  285D               	goto	u4865
  5589  0864  3001               	movlw	1
  5590  0865  02E2               	subwf	___fltol@exp1,f
  5591  0866                     l620:
  5592  0866  0862               	movf	___fltol@exp1,w
  5593  0867  1D03               	btfss	3,2
  5594  0868  286A               	goto	u4871
  5595  0869  286B               	goto	u4870
  5596  086A                     u4871:
  5597  086A  285B               	goto	l3087
  5598  086B                     u4870:
  5599  086B                     l3089:
  5600  086B  0861               	movf	___fltol@sign1,w
  5601  086C  1903               	btfsc	3,2
  5602  086D  286F               	goto	u4881
  5603  086E  2870               	goto	u4880
  5604  086F                     u4881:
  5605  086F  287B               	goto	l623
  5606  0870                     u4880:
  5607  0870                     l3091:
  5608  0870  09D8               	comf	___fltol@f1,f
  5609  0871  09D9               	comf	___fltol@f1+1,f
  5610  0872  09DA               	comf	___fltol@f1+2,f
  5611  0873  09DB               	comf	___fltol@f1+3,f
  5612  0874  0AD8               	incf	___fltol@f1,f
  5613  0875  1903               	skipnz
  5614  0876  0AD9               	incf	___fltol@f1+1,f
  5615  0877  1903               	skipnz
  5616  0878  0ADA               	incf	___fltol@f1+2,f
  5617  0879  1903               	skipnz
  5618  087A  0ADB               	incf	___fltol@f1+3,f
  5619  087B                     l623:
  5620  087B                     l613:
  5621  087B  0008               	return
  5622  087C                     __end_of___fltol:
  5623                           
  5624                           	psect	text15
  5625  1D2E                     __ptext15:	
  5626 ;; *************** function ___flsub *****************
  5627 ;; Defined at:
  5628 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  a               4    0[BANK1 ] long 
  5631 ;;  b               4    4[BANK1 ] long 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  4    0[BANK1 ] long 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5643 ;;      Params:         0       0       8       0       0
  5644 ;;      Locals:         0       0       0       0       0
  5645 ;;      Temps:          0       0       0       0       0
  5646 ;;      Totals:         0       0       8       0       0
  5647 ;;Total ram usage:        8 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    2
  5650 ;; This function calls:
  5651 ;;		___fladd
  5652 ;; This function is called by:
  5653 ;;		_sprintf
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           
  5658                           ;psect for function ___flsub
  5659  1D2E                     ___flsub:
  5660  1D2E                     l3113:	
  5661                           ;incstack = 0
  5662                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5663                           
  5664  1D2E  3080               	movlw	128
  5665  1D2F  1683               	bsf	3,5	;RP0=1, select bank1
  5666  1D30  1303               	bcf	3,6	;RP1=0, select bank1
  5667  1D31  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5668  1D32                     l3115:
  5669  1D32  0827               	movf	(___flsub@b+3)^(0+128),w
  5670  1D33  1283               	bcf	3,5	;RP0=0, select bank0
  5671  1D34  1303               	bcf	3,6	;RP1=0, select bank0
  5672  1D35  00DC               	movwf	___fladd@b+3
  5673  1D36  1683               	bsf	3,5	;RP0=1, select bank1
  5674  1D37  1303               	bcf	3,6	;RP1=0, select bank1
  5675  1D38  0826               	movf	(___flsub@b+2)^(0+128),w
  5676  1D39  1283               	bcf	3,5	;RP0=0, select bank0
  5677  1D3A  1303               	bcf	3,6	;RP1=0, select bank0
  5678  1D3B  00DB               	movwf	___fladd@b+2
  5679  1D3C  1683               	bsf	3,5	;RP0=1, select bank1
  5680  1D3D  1303               	bcf	3,6	;RP1=0, select bank1
  5681  1D3E  0825               	movf	(___flsub@b+1)^(0+128),w
  5682  1D3F  1283               	bcf	3,5	;RP0=0, select bank0
  5683  1D40  1303               	bcf	3,6	;RP1=0, select bank0
  5684  1D41  00DA               	movwf	___fladd@b+1
  5685  1D42  1683               	bsf	3,5	;RP0=1, select bank1
  5686  1D43  1303               	bcf	3,6	;RP1=0, select bank1
  5687  1D44  0824               	movf	___flsub@b^(0+128),w
  5688  1D45  1283               	bcf	3,5	;RP0=0, select bank0
  5689  1D46  1303               	bcf	3,6	;RP1=0, select bank0
  5690  1D47  00D9               	movwf	___fladd@b
  5691  1D48  1683               	bsf	3,5	;RP0=1, select bank1
  5692  1D49  1303               	bcf	3,6	;RP1=0, select bank1
  5693  1D4A  0823               	movf	(___flsub@a+3)^(0+128),w
  5694  1D4B  1283               	bcf	3,5	;RP0=0, select bank0
  5695  1D4C  1303               	bcf	3,6	;RP1=0, select bank0
  5696  1D4D  00E0               	movwf	___fladd@a+3
  5697  1D4E  1683               	bsf	3,5	;RP0=1, select bank1
  5698  1D4F  1303               	bcf	3,6	;RP1=0, select bank1
  5699  1D50  0822               	movf	(___flsub@a+2)^(0+128),w
  5700  1D51  1283               	bcf	3,5	;RP0=0, select bank0
  5701  1D52  1303               	bcf	3,6	;RP1=0, select bank0
  5702  1D53  00DF               	movwf	___fladd@a+2
  5703  1D54  1683               	bsf	3,5	;RP0=1, select bank1
  5704  1D55  1303               	bcf	3,6	;RP1=0, select bank1
  5705  1D56  0821               	movf	(___flsub@a+1)^(0+128),w
  5706  1D57  1283               	bcf	3,5	;RP0=0, select bank0
  5707  1D58  1303               	bcf	3,6	;RP1=0, select bank0
  5708  1D59  00DE               	movwf	___fladd@a+1
  5709  1D5A  1683               	bsf	3,5	;RP0=1, select bank1
  5710  1D5B  1303               	bcf	3,6	;RP1=0, select bank1
  5711  1D5C  0820               	movf	___flsub@a^(0+128),w
  5712  1D5D  1283               	bcf	3,5	;RP0=0, select bank0
  5713  1D5E  1303               	bcf	3,6	;RP1=0, select bank0
  5714  1D5F  00DD               	movwf	___fladd@a
  5715  1D60  160A  118A  2274  160A  158A  	fcall	___fladd
  5716  1D65  1283               	bcf	3,5	;RP0=0, select bank0
  5717  1D66  1303               	bcf	3,6	;RP1=0, select bank0
  5718  1D67  085C               	movf	?___fladd+3,w
  5719  1D68  1683               	bsf	3,5	;RP0=1, select bank1
  5720  1D69  1303               	bcf	3,6	;RP1=0, select bank1
  5721  1D6A  00A3               	movwf	(?___flsub+3)^(0+128)
  5722  1D6B  1283               	bcf	3,5	;RP0=0, select bank0
  5723  1D6C  1303               	bcf	3,6	;RP1=0, select bank0
  5724  1D6D  085B               	movf	?___fladd+2,w
  5725  1D6E  1683               	bsf	3,5	;RP0=1, select bank1
  5726  1D6F  1303               	bcf	3,6	;RP1=0, select bank1
  5727  1D70  00A2               	movwf	(?___flsub+2)^(0+128)
  5728  1D71  1283               	bcf	3,5	;RP0=0, select bank0
  5729  1D72  1303               	bcf	3,6	;RP1=0, select bank0
  5730  1D73  085A               	movf	?___fladd+1,w
  5731  1D74  1683               	bsf	3,5	;RP0=1, select bank1
  5732  1D75  1303               	bcf	3,6	;RP1=0, select bank1
  5733  1D76  00A1               	movwf	(?___flsub+1)^(0+128)
  5734  1D77  1283               	bcf	3,5	;RP0=0, select bank0
  5735  1D78  1303               	bcf	3,6	;RP1=0, select bank0
  5736  1D79  0859               	movf	?___fladd,w
  5737  1D7A  1683               	bsf	3,5	;RP0=1, select bank1
  5738  1D7B  1303               	bcf	3,6	;RP1=0, select bank1
  5739  1D7C  00A0               	movwf	?___flsub^(0+128)
  5740  1D7D                     l783:
  5741  1D7D  0008               	return
  5742  1D7E                     __end_of___flsub:
  5743                           
  5744                           	psect	text16
  5745  1274                     __ptext16:	
  5746 ;; *************** function ___fladd *****************
  5747 ;; Defined at:
  5748 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  b               4   57[BANK0 ] long 
  5751 ;;  a               4   61[BANK0 ] long 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  grs             1   76[BANK0 ] unsigned char 
  5754 ;;  bexp            1   75[BANK0 ] unsigned char 
  5755 ;;  aexp            1   74[BANK0 ] unsigned char 
  5756 ;;  signs           1   73[BANK0 ] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  4   57[BANK0 ] unsigned char 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0, btemp+1
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5766 ;;      Params:         0       8       0       0       0
  5767 ;;      Locals:         0       4       0       0       0
  5768 ;;      Temps:          0       8       0       0       0
  5769 ;;      Totals:         0      20       0       0       0
  5770 ;;Total ram usage:       20 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    1
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_sprintf
  5777 ;;		___flsub
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function ___fladd
  5783  1274                     ___fladd:
  5784  1274                     l2447:	
  5785                           ;incstack = 0
  5786                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5787                           
  5788  1274  1283               	bcf	3,5	;RP0=0, select bank0
  5789  1275  1303               	bcf	3,6	;RP1=0, select bank0
  5790  1276  085C               	movf	___fladd@b+3,w
  5791  1277  3980               	andlw	128
  5792  1278  00E1               	movwf	??___fladd
  5793  1279  0861               	movf	??___fladd,w
  5794  127A  00E9               	movwf	___fladd@signs
  5795  127B                     l2449:
  5796  127B  085C               	movf	___fladd@b+3,w
  5797  127C  00E1               	movwf	??___fladd
  5798  127D  0761               	addwf	??___fladd,w
  5799  127E  00E2               	movwf	??___fladd+1
  5800  127F  0862               	movf	??___fladd+1,w
  5801  1280  00EB               	movwf	___fladd@bexp
  5802  1281                     l2451:
  5803  1281  1FDB               	btfss	___fladd@b+2,7
  5804  1282  2A84               	goto	u3201
  5805  1283  2A85               	goto	u3200
  5806  1284                     u3201:
  5807  1284  2A86               	goto	l2455
  5808  1285                     u3200:
  5809  1285                     l2453:
  5810  1285  146B               	bsf	___fladd@bexp,0
  5811  1286                     l2455:
  5812  1286  086B               	movf	___fladd@bexp,w
  5813  1287  1903               	btfsc	3,2
  5814  1288  2A8A               	goto	u3211
  5815  1289  2A8B               	goto	u3210
  5816  128A                     u3211:
  5817  128A  2A9B               	goto	l2465
  5818  128B                     u3210:
  5819  128B                     l2457:
  5820  128B  0A6B               	incf	___fladd@bexp,w
  5821  128C  1D03               	btfss	3,2
  5822  128D  2A8F               	goto	u3221
  5823  128E  2A90               	goto	u3220
  5824  128F                     u3221:
  5825  128F  2A98               	goto	l2461
  5826  1290                     u3220:
  5827  1290                     l2459:
  5828  1290  3000               	movlw	0
  5829  1291  00DC               	movwf	___fladd@b+3
  5830  1292  3000               	movlw	0
  5831  1293  00DB               	movwf	___fladd@b+2
  5832  1294  3000               	movlw	0
  5833  1295  00DA               	movwf	___fladd@b+1
  5834  1296  3000               	movlw	0
  5835  1297  00D9               	movwf	___fladd@b
  5836  1298                     l2461:
  5837  1298  17DB               	bsf	___fladd@b+2,7
  5838  1299                     l2463:
  5839  1299  01DC               	clrf	___fladd@b+3
  5840  129A  2AA3               	goto	l2467
  5841  129B                     l2465:
  5842  129B  3000               	movlw	0
  5843  129C  00DC               	movwf	___fladd@b+3
  5844  129D  3000               	movlw	0
  5845  129E  00DB               	movwf	___fladd@b+2
  5846  129F  3000               	movlw	0
  5847  12A0  00DA               	movwf	___fladd@b+1
  5848  12A1  3000               	movlw	0
  5849  12A2  00D9               	movwf	___fladd@b
  5850  12A3                     l2467:
  5851  12A3  0860               	movf	___fladd@a+3,w
  5852  12A4  3980               	andlw	128
  5853  12A5  00E1               	movwf	??___fladd
  5854  12A6  0861               	movf	??___fladd,w
  5855  12A7  00EA               	movwf	___fladd@aexp
  5856  12A8                     l2469:
  5857  12A8  086A               	movf	___fladd@aexp,w
  5858  12A9  0669               	xorwf	___fladd@signs,w
  5859  12AA  1903               	skipnz
  5860  12AB  2AAD               	goto	u3231
  5861  12AC  2AAE               	goto	u3230
  5862  12AD                     u3231:
  5863  12AD  2AAF               	goto	l2473
  5864  12AE                     u3230:
  5865  12AE                     l2471:
  5866  12AE  1769               	bsf	___fladd@signs,6
  5867  12AF                     l2473:
  5868  12AF  0860               	movf	___fladd@a+3,w
  5869  12B0  00E1               	movwf	??___fladd
  5870  12B1  0761               	addwf	??___fladd,w
  5871  12B2  00E2               	movwf	??___fladd+1
  5872  12B3  0862               	movf	??___fladd+1,w
  5873  12B4  00EA               	movwf	___fladd@aexp
  5874  12B5                     l2475:
  5875  12B5  1FDF               	btfss	___fladd@a+2,7
  5876  12B6  2AB8               	goto	u3241
  5877  12B7  2AB9               	goto	u3240
  5878  12B8                     u3241:
  5879  12B8  2ABA               	goto	l2479
  5880  12B9                     u3240:
  5881  12B9                     l2477:
  5882  12B9  146A               	bsf	___fladd@aexp,0
  5883  12BA                     l2479:
  5884  12BA  086A               	movf	___fladd@aexp,w
  5885  12BB  1903               	btfsc	3,2
  5886  12BC  2ABE               	goto	u3251
  5887  12BD  2ABF               	goto	u3250
  5888  12BE                     u3251:
  5889  12BE  2ACF               	goto	l2489
  5890  12BF                     u3250:
  5891  12BF                     l2481:
  5892  12BF  0A6A               	incf	___fladd@aexp,w
  5893  12C0  1D03               	btfss	3,2
  5894  12C1  2AC3               	goto	u3261
  5895  12C2  2AC4               	goto	u3260
  5896  12C3                     u3261:
  5897  12C3  2ACC               	goto	l2485
  5898  12C4                     u3260:
  5899  12C4                     l2483:
  5900  12C4  3000               	movlw	0
  5901  12C5  00E0               	movwf	___fladd@a+3
  5902  12C6  3000               	movlw	0
  5903  12C7  00DF               	movwf	___fladd@a+2
  5904  12C8  3000               	movlw	0
  5905  12C9  00DE               	movwf	___fladd@a+1
  5906  12CA  3000               	movlw	0
  5907  12CB  00DD               	movwf	___fladd@a
  5908  12CC                     l2485:
  5909  12CC  17DF               	bsf	___fladd@a+2,7
  5910  12CD                     l2487:
  5911  12CD  01E0               	clrf	___fladd@a+3
  5912  12CE  2AD7               	goto	l737
  5913  12CF                     l2489:
  5914  12CF  3000               	movlw	0
  5915  12D0  00E0               	movwf	___fladd@a+3
  5916  12D1  3000               	movlw	0
  5917  12D2  00DF               	movwf	___fladd@a+2
  5918  12D3  3000               	movlw	0
  5919  12D4  00DE               	movwf	___fladd@a+1
  5920  12D5  3000               	movlw	0
  5921  12D6  00DD               	movwf	___fladd@a
  5922  12D7                     l737:
  5923  12D7  086B               	movf	___fladd@bexp,w
  5924  12D8  026A               	subwf	___fladd@aexp,w
  5925  12D9  1803               	skipnc
  5926  12DA  2ADC               	goto	u3271
  5927  12DB  2ADD               	goto	u3270
  5928  12DC                     u3271:
  5929  12DC  2B21               	goto	l2525
  5930  12DD                     u3270:
  5931  12DD                     l2491:
  5932  12DD  1F69               	btfss	___fladd@signs,6
  5933  12DE  2AE0               	goto	u3281
  5934  12DF  2AE1               	goto	u3280
  5935  12E0                     u3281:
  5936  12E0  2AE5               	goto	l2495
  5937  12E1                     u3280:
  5938  12E1                     l2493:
  5939  12E1  3080               	movlw	128
  5940  12E2  00E1               	movwf	??___fladd
  5941  12E3  0861               	movf	??___fladd,w
  5942  12E4  06E9               	xorwf	___fladd@signs,f
  5943  12E5                     l2495:
  5944  12E5  086B               	movf	___fladd@bexp,w
  5945  12E6  00E1               	movwf	??___fladd
  5946  12E7  0861               	movf	??___fladd,w
  5947  12E8  00EC               	movwf	___fladd@grs
  5948  12E9                     l2497:
  5949  12E9  086A               	movf	___fladd@aexp,w
  5950  12EA  00E1               	movwf	??___fladd
  5951  12EB  0861               	movf	??___fladd,w
  5952  12EC  00EB               	movwf	___fladd@bexp
  5953  12ED                     l2499:
  5954  12ED  086C               	movf	___fladd@grs,w
  5955  12EE  00E1               	movwf	??___fladd
  5956  12EF  0861               	movf	??___fladd,w
  5957  12F0  00EA               	movwf	___fladd@aexp
  5958  12F1                     l2501:
  5959  12F1  0859               	movf	___fladd@b,w
  5960  12F2  00E1               	movwf	??___fladd
  5961  12F3  0861               	movf	??___fladd,w
  5962  12F4  00EC               	movwf	___fladd@grs
  5963  12F5                     l2503:
  5964  12F5  085D               	movf	___fladd@a,w
  5965  12F6  00E1               	movwf	??___fladd
  5966  12F7  0861               	movf	??___fladd,w
  5967  12F8  00D9               	movwf	___fladd@b
  5968  12F9                     l2505:
  5969  12F9  086C               	movf	___fladd@grs,w
  5970  12FA  00E1               	movwf	??___fladd
  5971  12FB  0861               	movf	??___fladd,w
  5972  12FC  00DD               	movwf	___fladd@a
  5973  12FD                     l2507:
  5974  12FD  085A               	movf	___fladd@b+1,w
  5975  12FE  00E1               	movwf	??___fladd
  5976  12FF  0861               	movf	??___fladd,w
  5977  1300  00EC               	movwf	___fladd@grs
  5978  1301                     l2509:
  5979  1301  085E               	movf	___fladd@a+1,w
  5980  1302  00E1               	movwf	??___fladd
  5981  1303  0861               	movf	??___fladd,w
  5982  1304  00DA               	movwf	___fladd@b+1
  5983  1305                     l2511:
  5984  1305  086C               	movf	___fladd@grs,w
  5985  1306  00E1               	movwf	??___fladd
  5986  1307  0861               	movf	??___fladd,w
  5987  1308  00DE               	movwf	___fladd@a+1
  5988  1309                     l2513:
  5989  1309  085B               	movf	___fladd@b+2,w
  5990  130A  00E1               	movwf	??___fladd
  5991  130B  0861               	movf	??___fladd,w
  5992  130C  00EC               	movwf	___fladd@grs
  5993  130D                     l2515:
  5994  130D  085F               	movf	___fladd@a+2,w
  5995  130E  00E1               	movwf	??___fladd
  5996  130F  0861               	movf	??___fladd,w
  5997  1310  00DB               	movwf	___fladd@b+2
  5998  1311                     l2517:
  5999  1311  086C               	movf	___fladd@grs,w
  6000  1312  00E1               	movwf	??___fladd
  6001  1313  0861               	movf	??___fladd,w
  6002  1314  00DF               	movwf	___fladd@a+2
  6003  1315                     l2519:
  6004  1315  085C               	movf	___fladd@b+3,w
  6005  1316  00E1               	movwf	??___fladd
  6006  1317  0861               	movf	??___fladd,w
  6007  1318  00EC               	movwf	___fladd@grs
  6008  1319                     l2521:
  6009  1319  0860               	movf	___fladd@a+3,w
  6010  131A  00E1               	movwf	??___fladd
  6011  131B  0861               	movf	??___fladd,w
  6012  131C  00DC               	movwf	___fladd@b+3
  6013  131D                     l2523:
  6014  131D  086C               	movf	___fladd@grs,w
  6015  131E  00E1               	movwf	??___fladd
  6016  131F  0861               	movf	??___fladd,w
  6017  1320  00E0               	movwf	___fladd@a+3
  6018  1321                     l2525:
  6019  1321  01EC               	clrf	___fladd@grs
  6020  1322                     l2527:
  6021  1322  086A               	movf	___fladd@aexp,w
  6022  1323  00E1               	movwf	??___fladd
  6023  1324  01E2               	clrf	??___fladd+1
  6024  1325  0862               	movf	??___fladd+1,w
  6025  1326  00E4               	movwf	??___fladd+3
  6026  1327  086B               	movf	___fladd@bexp,w
  6027  1328  0261               	subwf	??___fladd,w
  6028  1329  00E3               	movwf	??___fladd+2
  6029  132A  1C03               	skipc
  6030  132B  03E4               	decf	??___fladd+3,f
  6031  132C  0864               	movf	??___fladd+3,w
  6032  132D  3A80               	xorlw	128
  6033  132E  00FF               	movwf	btemp+1
  6034  132F  3080               	movlw	128
  6035  1330  027F               	subwf	btemp+1,w
  6036  1331  1D03               	skipz
  6037  1332  2B35               	goto	u3295
  6038  1333  301A               	movlw	26
  6039  1334  0263               	subwf	??___fladd+2,w
  6040  1335                     u3295:
  6041  1335  1C03               	skipc
  6042  1336  2B38               	goto	u3291
  6043  1337  2B39               	goto	u3290
  6044  1338                     u3291:
  6045  1338  2B76               	goto	l2543
  6046  1339                     u3290:
  6047  1339                     l2529:
  6048  1339  1283               	bcf	3,5	;RP0=0, select bank0
  6049  133A  1303               	bcf	3,6	;RP1=0, select bank0
  6050  133B  085C               	movf	___fladd@b+3,w
  6051  133C  045B               	iorwf	___fladd@b+2,w
  6052  133D  045A               	iorwf	___fladd@b+1,w
  6053  133E  0459               	iorwf	___fladd@b,w
  6054  133F  1D03               	skipz
  6055  1340  2B42               	goto	u3301
  6056  1341  2B44               	goto	u3300
  6057  1342                     u3301:
  6058  1342  3001               	movlw	1
  6059  1343  2B45               	goto	u3310
  6060  1344                     u3300:
  6061  1344  3000               	movlw	0
  6062  1345                     u3310:
  6063  1345  00E1               	movwf	??___fladd
  6064  1346  0861               	movf	??___fladd,w
  6065  1347  00EC               	movwf	___fladd@grs
  6066  1348  3000               	movlw	0
  6067  1349  00DC               	movwf	___fladd@b+3
  6068  134A  3000               	movlw	0
  6069  134B  00DB               	movwf	___fladd@b+2
  6070  134C  3000               	movlw	0
  6071  134D  00DA               	movwf	___fladd@b+1
  6072  134E  3000               	movlw	0
  6073  134F  00D9               	movwf	___fladd@b
  6074  1350  086A               	movf	___fladd@aexp,w
  6075  1351  00E1               	movwf	??___fladd
  6076  1352  0861               	movf	??___fladd,w
  6077  1353  00EB               	movwf	___fladd@bexp
  6078  1354  2B7E               	goto	l741
  6079  1355                     l743:
  6080  1355  1C6C               	btfss	___fladd@grs,0
  6081  1356  2B58               	goto	u3321
  6082  1357  2B59               	goto	u3320
  6083  1358                     u3321:
  6084  1358  2B62               	goto	l2533
  6085  1359                     u3320:
  6086  1359                     l2531:
  6087  1359  086C               	movf	___fladd@grs,w
  6088  135A  00E1               	movwf	??___fladd
  6089  135B  1003               	clrc
  6090  135C  0C61               	rrf	??___fladd,w
  6091  135D  3801               	iorlw	1
  6092  135E  00E2               	movwf	??___fladd+1
  6093  135F  0862               	movf	??___fladd+1,w
  6094  1360  00EC               	movwf	___fladd@grs
  6095  1361  2B64               	goto	l2535
  6096  1362                     l2533:
  6097  1362  1003               	clrc
  6098  1363  0CEC               	rrf	___fladd@grs,f
  6099  1364                     l2535:
  6100  1364  1C59               	btfss	___fladd@b,0
  6101  1365  2B67               	goto	u3331
  6102  1366  2B68               	goto	u3330
  6103  1367                     u3331:
  6104  1367  2B69               	goto	l2539
  6105  1368                     u3330:
  6106  1368                     l2537:
  6107  1368  17EC               	bsf	___fladd@grs,7
  6108  1369                     l2539:
  6109  1369  3001               	movlw	1
  6110  136A  00E1               	movwf	??___fladd
  6111  136B                     u3345:
  6112  136B  0D5C               	rlf	___fladd@b+3,w
  6113  136C  0CDC               	rrf	___fladd@b+3,f
  6114  136D  0CDB               	rrf	___fladd@b+2,f
  6115  136E  0CDA               	rrf	___fladd@b+1,f
  6116  136F  0CD9               	rrf	___fladd@b,f
  6117  1370  0BE1               	decfsz	??___fladd& (0+127),f
  6118  1371  2B6B               	goto	u3345
  6119  1372                     l2541:
  6120  1372  3001               	movlw	1
  6121  1373  00E1               	movwf	??___fladd
  6122  1374  0861               	movf	??___fladd,w
  6123  1375  07EB               	addwf	___fladd@bexp,f
  6124  1376                     l2543:
  6125  1376  1283               	bcf	3,5	;RP0=0, select bank0
  6126  1377  1303               	bcf	3,6	;RP1=0, select bank0
  6127  1378  086A               	movf	___fladd@aexp,w
  6128  1379  026B               	subwf	___fladd@bexp,w
  6129  137A  1C03               	skipc
  6130  137B  2B7D               	goto	u3351
  6131  137C  2B7E               	goto	u3350
  6132  137D                     u3351:
  6133  137D  2B55               	goto	l743
  6134  137E                     u3350:
  6135  137E                     l741:
  6136  137E  1B69               	btfsc	___fladd@signs,6
  6137  137F  2B81               	goto	u3361
  6138  1380  2B82               	goto	u3360
  6139  1381                     u3361:
  6140  1381  2BCD               	goto	l2569
  6141  1382                     u3360:
  6142  1382                     l2545:
  6143  1382  086B               	movf	___fladd@bexp,w
  6144  1383  1D03               	btfss	3,2
  6145  1384  2B86               	goto	u3371
  6146  1385  2B87               	goto	u3370
  6147  1386                     u3371:
  6148  1386  2B90               	goto	l2551
  6149  1387                     u3370:
  6150  1387                     l2547:
  6151  1387  3000               	movlw	0
  6152  1388  00DC               	movwf	?___fladd+3
  6153  1389  3000               	movlw	0
  6154  138A  00DB               	movwf	?___fladd+2
  6155  138B  3000               	movlw	0
  6156  138C  00DA               	movwf	?___fladd+1
  6157  138D  3000               	movlw	0
  6158  138E  00D9               	movwf	?___fladd
  6159  138F  2CFB               	goto	l750
  6160  1390                     l2551:
  6161  1390  085D               	movf	___fladd@a,w
  6162  1391  07D9               	addwf	___fladd@b,f
  6163  1392  085E               	movf	___fladd@a+1,w
  6164  1393  1103               	clrz
  6165  1394  1803               	skipnc
  6166  1395  3E01               	addlw	1
  6167  1396  1903               	skipnz
  6168  1397  2B99               	goto	u3381
  6169  1398  07DA               	addwf	___fladd@b+1,f
  6170  1399                     u3381:
  6171  1399  085F               	movf	___fladd@a+2,w
  6172  139A  1103               	clrz
  6173  139B  1803               	skipnc
  6174  139C  3E01               	addlw	1
  6175  139D  1903               	skipnz
  6176  139E  2BA0               	goto	u3382
  6177  139F  07DB               	addwf	___fladd@b+2,f
  6178  13A0                     u3382:
  6179  13A0  0860               	movf	___fladd@a+3,w
  6180  13A1  1103               	clrz
  6181  13A2  1803               	skipnc
  6182  13A3  3E01               	addlw	1
  6183  13A4  1903               	skipnz
  6184  13A5  2BA7               	goto	u3383
  6185  13A6  07DC               	addwf	___fladd@b+3,f
  6186  13A7                     u3383:
  6187  13A7                     l2553:
  6188  13A7  1C5C               	btfss	___fladd@b+3,0
  6189  13A8  2BAA               	goto	u3391
  6190  13A9  2BAB               	goto	u3390
  6191  13AA                     u3391:
  6192  13AA  2C81               	goto	l2603
  6193  13AB                     u3390:
  6194  13AB                     l2555:
  6195  13AB  1C6C               	btfss	___fladd@grs,0
  6196  13AC  2BAE               	goto	u3401
  6197  13AD  2BAF               	goto	u3400
  6198  13AE                     u3401:
  6199  13AE  2BB8               	goto	l2559
  6200  13AF                     u3400:
  6201  13AF                     l2557:
  6202  13AF  086C               	movf	___fladd@grs,w
  6203  13B0  00E1               	movwf	??___fladd
  6204  13B1  1003               	clrc
  6205  13B2  0C61               	rrf	??___fladd,w
  6206  13B3  3801               	iorlw	1
  6207  13B4  00E2               	movwf	??___fladd+1
  6208  13B5  0862               	movf	??___fladd+1,w
  6209  13B6  00EC               	movwf	___fladd@grs
  6210  13B7  2BBA               	goto	l2561
  6211  13B8                     l2559:
  6212  13B8  1003               	clrc
  6213  13B9  0CEC               	rrf	___fladd@grs,f
  6214  13BA                     l2561:
  6215  13BA  1C59               	btfss	___fladd@b,0
  6216  13BB  2BBD               	goto	u3411
  6217  13BC  2BBE               	goto	u3410
  6218  13BD                     u3411:
  6219  13BD  2BBF               	goto	l2565
  6220  13BE                     u3410:
  6221  13BE                     l2563:
  6222  13BE  17EC               	bsf	___fladd@grs,7
  6223  13BF                     l2565:
  6224  13BF  3001               	movlw	1
  6225  13C0  00E1               	movwf	??___fladd
  6226  13C1                     u3425:
  6227  13C1  0D5C               	rlf	___fladd@b+3,w
  6228  13C2  0CDC               	rrf	___fladd@b+3,f
  6229  13C3  0CDB               	rrf	___fladd@b+2,f
  6230  13C4  0CDA               	rrf	___fladd@b+1,f
  6231  13C5  0CD9               	rrf	___fladd@b,f
  6232  13C6  0BE1               	decfsz	??___fladd& (0+127),f
  6233  13C7  2BC1               	goto	u3425
  6234  13C8                     l2567:
  6235  13C8  3001               	movlw	1
  6236  13C9  00E1               	movwf	??___fladd
  6237  13CA  0861               	movf	??___fladd,w
  6238  13CB  07EB               	addwf	___fladd@bexp,f
  6239  13CC  2C81               	goto	l2603
  6240  13CD                     l2569:
  6241  13CD  085C               	movf	___fladd@b+3,w
  6242  13CE  3A80               	xorlw	128
  6243  13CF  00FF               	movwf	btemp+1
  6244  13D0  0860               	movf	___fladd@a+3,w
  6245  13D1  3A80               	xorlw	128
  6246  13D2  027F               	subwf	btemp+1,w
  6247  13D3  1D03               	skipz
  6248  13D4  2BDF               	goto	u3433
  6249  13D5  085F               	movf	___fladd@a+2,w
  6250  13D6  025B               	subwf	___fladd@b+2,w
  6251  13D7  1D03               	skipz
  6252  13D8  2BDF               	goto	u3433
  6253  13D9  085E               	movf	___fladd@a+1,w
  6254  13DA  025A               	subwf	___fladd@b+1,w
  6255  13DB  1D03               	skipz
  6256  13DC  2BDF               	goto	u3433
  6257  13DD  085D               	movf	___fladd@a,w
  6258  13DE  0259               	subwf	___fladd@b,w
  6259  13DF                     u3433:
  6260  13DF  1803               	skipnc
  6261  13E0  2BE2               	goto	u3431
  6262  13E1  2BE3               	goto	u3430
  6263  13E2                     u3431:
  6264  13E2  2C3B               	goto	l2579
  6265  13E3                     u3430:
  6266  13E3                     l2571:
  6267  13E3  30FF               	movlw	255
  6268  13E4  00E1               	movwf	??___fladd
  6269  13E5  30FF               	movlw	255
  6270  13E6  00E2               	movwf	??___fladd+1
  6271  13E7  30FF               	movlw	255
  6272  13E8  00E3               	movwf	??___fladd+2
  6273  13E9  30FF               	movlw	255
  6274  13EA  00E4               	movwf	??___fladd+3
  6275  13EB  085D               	movf	___fladd@a,w
  6276  13EC  00E5               	movwf	??___fladd+4
  6277  13ED  085E               	movf	___fladd@a+1,w
  6278  13EE  00E6               	movwf	??___fladd+5
  6279  13EF  085F               	movf	___fladd@a+2,w
  6280  13F0  00E7               	movwf	??___fladd+6
  6281  13F1  0860               	movf	___fladd@a+3,w
  6282  13F2  00E8               	movwf	??___fladd+7
  6283  13F3  0859               	movf	___fladd@b,w
  6284  13F4  02E5               	subwf	??___fladd+4,f
  6285  13F5  085A               	movf	___fladd@b+1,w
  6286  13F6  1C03               	skipc
  6287  13F7  0F5A               	incfsz	___fladd@b+1,w
  6288  13F8  2BFA               	goto	u3441
  6289  13F9  2BFB               	goto	u3442
  6290  13FA                     u3441:
  6291  13FA  02E6               	subwf	??___fladd+5,f
  6292  13FB                     u3442:
  6293  13FB  085B               	movf	___fladd@b+2,w
  6294  13FC  1C03               	skipc
  6295  13FD  0F5B               	incfsz	___fladd@b+2,w
  6296  13FE  2C00               	goto	u3443
  6297  13FF  2C01               	goto	u3444
  6298  1400                     u3443:
  6299  1400  02E7               	subwf	??___fladd+6,f
  6300  1401                     u3444:
  6301  1401  085C               	movf	___fladd@b+3,w
  6302  1402  1C03               	skipc
  6303  1403  0F5C               	incfsz	___fladd@b+3,w
  6304  1404  2C06               	goto	u3445
  6305  1405  2C07               	goto	u3446
  6306  1406                     u3445:
  6307  1406  02E8               	subwf	??___fladd+7,f
  6308  1407                     u3446:
  6309  1407  0865               	movf	??___fladd+4,w
  6310  1408  07E1               	addwf	??___fladd,f
  6311  1409  0866               	movf	??___fladd+5,w
  6312  140A  1803               	skipnc
  6313  140B  0F66               	incfsz	??___fladd+5,w
  6314  140C  2C0E               	goto	u3450
  6315  140D  2C0F               	goto	u3451
  6316  140E                     u3450:
  6317  140E  07E2               	addwf	??___fladd+1,f
  6318  140F                     u3451:
  6319  140F  0867               	movf	??___fladd+6,w
  6320  1410  1803               	skipnc
  6321  1411  0F67               	incfsz	??___fladd+6,w
  6322  1412  2C14               	goto	u3452
  6323  1413  2C15               	goto	u3453
  6324  1414                     u3452:
  6325  1414  07E3               	addwf	??___fladd+2,f
  6326  1415                     u3453:
  6327  1415  0868               	movf	??___fladd+7,w
  6328  1416  1803               	skipnc
  6329  1417  0A68               	incf	??___fladd+7,w
  6330  1418  07E4               	addwf	??___fladd+3,f
  6331  1419  0864               	movf	??___fladd+3,w
  6332  141A  00DC               	movwf	___fladd@b+3
  6333  141B  0863               	movf	??___fladd+2,w
  6334  141C  00DB               	movwf	___fladd@b+2
  6335  141D  0862               	movf	??___fladd+1,w
  6336  141E  00DA               	movwf	___fladd@b+1
  6337  141F  0861               	movf	??___fladd,w
  6338  1420  00D9               	movwf	___fladd@b
  6339  1421                     l2573:
  6340  1421  3080               	movlw	128
  6341  1422  00E1               	movwf	??___fladd
  6342  1423  0861               	movf	??___fladd,w
  6343  1424  06E9               	xorwf	___fladd@signs,f
  6344  1425  09EC               	comf	___fladd@grs,f
  6345  1426  0AEC               	incf	___fladd@grs,f
  6346  1427                     l2575:
  6347  1427  086C               	movf	___fladd@grs,w
  6348  1428  1D03               	btfss	3,2
  6349  1429  2C2B               	goto	u3461
  6350  142A  2C2C               	goto	u3460
  6351  142B                     u3461:
  6352  142B  2C49               	goto	l758
  6353  142C                     u3460:
  6354  142C                     l2577:
  6355  142C  3001               	movlw	1
  6356  142D  07D9               	addwf	___fladd@b,f
  6357  142E  3000               	movlw	0
  6358  142F  1803               	skipnc
  6359  1430  3001               	movlw	1
  6360  1431  07DA               	addwf	___fladd@b+1,f
  6361  1432  3000               	movlw	0
  6362  1433  1803               	skipnc
  6363  1434  3001               	movlw	1
  6364  1435  07DB               	addwf	___fladd@b+2,f
  6365  1436  3000               	movlw	0
  6366  1437  1803               	skipnc
  6367  1438  3001               	movlw	1
  6368  1439  07DC               	addwf	___fladd@b+3,f
  6369  143A  2C49               	goto	l758
  6370  143B                     l2579:
  6371  143B  085D               	movf	___fladd@a,w
  6372  143C  02D9               	subwf	___fladd@b,f
  6373  143D  085E               	movf	___fladd@a+1,w
  6374  143E  1C03               	skipc
  6375  143F  0F5E               	incfsz	___fladd@a+1,w
  6376  1440  02DA               	subwf	___fladd@b+1,f
  6377  1441  085F               	movf	___fladd@a+2,w
  6378  1442  1C03               	skipc
  6379  1443  0F5F               	incfsz	___fladd@a+2,w
  6380  1444  02DB               	subwf	___fladd@b+2,f
  6381  1445  0860               	movf	___fladd@a+3,w
  6382  1446  1C03               	skipc
  6383  1447  0F60               	incfsz	___fladd@a+3,w
  6384  1448  02DC               	subwf	___fladd@b+3,f
  6385  1449                     l758:
  6386  1449  085C               	movf	___fladd@b+3,w
  6387  144A  045B               	iorwf	___fladd@b+2,w
  6388  144B  045A               	iorwf	___fladd@b+1,w
  6389  144C  0459               	iorwf	___fladd@b,w
  6390  144D  1D03               	skipz
  6391  144E  2C50               	goto	u3471
  6392  144F  2C51               	goto	u3470
  6393  1450                     u3471:
  6394  1450  2C7D               	goto	l2601
  6395  1451                     u3470:
  6396  1451                     l2581:
  6397  1451  086C               	movf	___fladd@grs,w
  6398  1452  1D03               	btfss	3,2
  6399  1453  2C55               	goto	u3481
  6400  1454  2C56               	goto	u3480
  6401  1455                     u3481:
  6402  1455  2C7D               	goto	l2601
  6403  1456                     u3480:
  6404  1456                     l2583:
  6405  1456  3000               	movlw	0
  6406  1457  00DC               	movwf	?___fladd+3
  6407  1458  3000               	movlw	0
  6408  1459  00DB               	movwf	?___fladd+2
  6409  145A  3000               	movlw	0
  6410  145B  00DA               	movwf	?___fladd+1
  6411  145C  3000               	movlw	0
  6412  145D  00D9               	movwf	?___fladd
  6413  145E  2CFB               	goto	l750
  6414  145F                     l2587:
  6415  145F  3001               	movlw	1
  6416  1460  00E1               	movwf	??___fladd
  6417  1461                     u3495:
  6418  1461  1003               	clrc
  6419  1462  0DD9               	rlf	___fladd@b,f
  6420  1463  0DDA               	rlf	___fladd@b+1,f
  6421  1464  0DDB               	rlf	___fladd@b+2,f
  6422  1465  0DDC               	rlf	___fladd@b+3,f
  6423  1466  0BE1               	decfsz	??___fladd,f
  6424  1467  2C61               	goto	u3495
  6425  1468                     l2589:
  6426  1468  1FEC               	btfss	___fladd@grs,7
  6427  1469  2C6B               	goto	u3501
  6428  146A  2C6C               	goto	u3500
  6429  146B                     u3501:
  6430  146B  2C6D               	goto	l762
  6431  146C                     u3500:
  6432  146C                     l2591:
  6433  146C  1459               	bsf	___fladd@b,0
  6434  146D                     l762:
  6435  146D  1C6C               	btfss	___fladd@grs,0
  6436  146E  2C70               	goto	u3511
  6437  146F  2C71               	goto	u3510
  6438  1470                     u3511:
  6439  1470  2C74               	goto	l2595
  6440  1471                     u3510:
  6441  1471                     l2593:
  6442  1471  1403               	setc
  6443  1472  0DEC               	rlf	___fladd@grs,f
  6444  1473  2C76               	goto	l2597
  6445  1474                     l2595:
  6446  1474  1003               	clrc
  6447  1475  0DEC               	rlf	___fladd@grs,f
  6448  1476                     l2597:
  6449  1476  086B               	movf	___fladd@bexp,w
  6450  1477  1903               	btfsc	3,2
  6451  1478  2C7A               	goto	u3521
  6452  1479  2C7B               	goto	u3520
  6453  147A                     u3521:
  6454  147A  2C7D               	goto	l2601
  6455  147B                     u3520:
  6456  147B                     l2599:
  6457  147B  3001               	movlw	1
  6458  147C  02EB               	subwf	___fladd@bexp,f
  6459  147D                     l2601:
  6460  147D  1FDB               	btfss	___fladd@b+2,7
  6461  147E  2C80               	goto	u3531
  6462  147F  2C81               	goto	u3530
  6463  1480                     u3531:
  6464  1480  2C5F               	goto	l2587
  6465  1481                     u3530:
  6466  1481                     l2603:
  6467  1481  01EA               	clrf	___fladd@aexp
  6468  1482                     l2605:
  6469  1482  1FEC               	btfss	___fladd@grs,7
  6470  1483  2C85               	goto	u3541
  6471  1484  2C86               	goto	u3540
  6472  1485                     u3541:
  6473  1485  2C94               	goto	l2613
  6474  1486                     u3540:
  6475  1486                     l2607:
  6476  1486  086C               	movf	___fladd@grs,w
  6477  1487  397F               	andlw	127
  6478  1488  1903               	btfsc	3,2
  6479  1489  2C8B               	goto	u3551
  6480  148A  2C8C               	goto	u3550
  6481  148B                     u3551:
  6482  148B  2C8F               	goto	l768
  6483  148C                     u3550:
  6484  148C                     l2609:
  6485  148C  01EA               	clrf	___fladd@aexp
  6486  148D  0AEA               	incf	___fladd@aexp,f
  6487  148E  2C94               	goto	l2613
  6488  148F                     l768:
  6489  148F  1C59               	btfss	___fladd@b,0
  6490  1490  2C92               	goto	u3561
  6491  1491  2C93               	goto	u3560
  6492  1492                     u3561:
  6493  1492  2C94               	goto	l2613
  6494  1493                     u3560:
  6495  1493  2C8C               	goto	l2609
  6496  1494                     l2613:
  6497  1494  086A               	movf	___fladd@aexp,w
  6498  1495  1903               	btfsc	3,2
  6499  1496  2C98               	goto	u3571
  6500  1497  2C99               	goto	u3570
  6501  1498                     u3571:
  6502  1498  2CCD               	goto	l771
  6503  1499                     u3570:
  6504  1499                     l2615:
  6505  1499  3001               	movlw	1
  6506  149A  07D9               	addwf	___fladd@b,f
  6507  149B  3000               	movlw	0
  6508  149C  1803               	skipnc
  6509  149D  3001               	movlw	1
  6510  149E  07DA               	addwf	___fladd@b+1,f
  6511  149F  3000               	movlw	0
  6512  14A0  1803               	skipnc
  6513  14A1  3001               	movlw	1
  6514  14A2  07DB               	addwf	___fladd@b+2,f
  6515  14A3  3000               	movlw	0
  6516  14A4  1803               	skipnc
  6517  14A5  3001               	movlw	1
  6518  14A6  07DC               	addwf	___fladd@b+3,f
  6519  14A7                     l2617:
  6520  14A7  1C5C               	btfss	___fladd@b+3,0
  6521  14A8  2CAA               	goto	u3581
  6522  14A9  2CAB               	goto	u3580
  6523  14AA                     u3581:
  6524  14AA  2CCD               	goto	l771
  6525  14AB                     u3580:
  6526  14AB                     l2619:
  6527  14AB  0859               	movf	___fladd@b,w
  6528  14AC  00E1               	movwf	??___fladd
  6529  14AD  085A               	movf	___fladd@b+1,w
  6530  14AE  00E2               	movwf	??___fladd+1
  6531  14AF  085B               	movf	___fladd@b+2,w
  6532  14B0  00E3               	movwf	??___fladd+2
  6533  14B1  085C               	movf	___fladd@b+3,w
  6534  14B2  00E4               	movwf	??___fladd+3
  6535  14B3  3001               	movlw	1
  6536  14B4  00E5               	movwf	??___fladd+4
  6537  14B5                     u3595:
  6538  14B5  0D64               	rlf	??___fladd+3,w
  6539  14B6  0CE4               	rrf	??___fladd+3,f
  6540  14B7  0CE3               	rrf	??___fladd+2,f
  6541  14B8  0CE2               	rrf	??___fladd+1,f
  6542  14B9  0CE1               	rrf	??___fladd,f
  6543  14BA                     u3590:
  6544  14BA  0BE5               	decfsz	??___fladd+4,f
  6545  14BB  2CB5               	goto	u3595
  6546  14BC  0864               	movf	??___fladd+3,w
  6547  14BD  00DC               	movwf	___fladd@b+3
  6548  14BE  0863               	movf	??___fladd+2,w
  6549  14BF  00DB               	movwf	___fladd@b+2
  6550  14C0  0862               	movf	??___fladd+1,w
  6551  14C1  00DA               	movwf	___fladd@b+1
  6552  14C2  0861               	movf	??___fladd,w
  6553  14C3  00D9               	movwf	___fladd@b
  6554  14C4  0A6B               	incf	___fladd@bexp,w
  6555  14C5  1903               	btfsc	3,2
  6556  14C6  2CC8               	goto	u3601
  6557  14C7  2CC9               	goto	u3600
  6558  14C8                     u3601:
  6559  14C8  2CCD               	goto	l771
  6560  14C9                     u3600:
  6561  14C9                     l2621:
  6562  14C9  3001               	movlw	1
  6563  14CA  00E1               	movwf	??___fladd
  6564  14CB  0861               	movf	??___fladd,w
  6565  14CC  07EB               	addwf	___fladd@bexp,f
  6566  14CD                     l771:
  6567  14CD  0A6B               	incf	___fladd@bexp,w
  6568  14CE  1903               	btfsc	3,2
  6569  14CF  2CD1               	goto	u3611
  6570  14D0  2CD2               	goto	u3610
  6571  14D1                     u3611:
  6572  14D1  2CD7               	goto	l2625
  6573  14D2                     u3610:
  6574  14D2                     l2623:
  6575  14D2  086B               	movf	___fladd@bexp,w
  6576  14D3  1D03               	btfss	3,2
  6577  14D4  2CD6               	goto	u3621
  6578  14D5  2CD7               	goto	u3620
  6579  14D6                     u3621:
  6580  14D6  2CE5               	goto	l2631
  6581  14D7                     u3620:
  6582  14D7                     l2625:
  6583  14D7  3000               	movlw	0
  6584  14D8  00DC               	movwf	___fladd@b+3
  6585  14D9  3000               	movlw	0
  6586  14DA  00DB               	movwf	___fladd@b+2
  6587  14DB  3000               	movlw	0
  6588  14DC  00DA               	movwf	___fladd@b+1
  6589  14DD  3000               	movlw	0
  6590  14DE  00D9               	movwf	___fladd@b
  6591  14DF                     l2627:
  6592  14DF  086B               	movf	___fladd@bexp,w
  6593  14E0  1D03               	btfss	3,2
  6594  14E1  2CE3               	goto	u3631
  6595  14E2  2CE4               	goto	u3630
  6596  14E3                     u3631:
  6597  14E3  2CE5               	goto	l2631
  6598  14E4                     u3630:
  6599  14E4                     l2629:
  6600  14E4  01E9               	clrf	___fladd@signs
  6601  14E5                     l2631:
  6602  14E5  1C6B               	btfss	___fladd@bexp,0
  6603  14E6  2CE8               	goto	u3641
  6604  14E7  2CE9               	goto	u3640
  6605  14E8                     u3641:
  6606  14E8  2CEB               	goto	l2635
  6607  14E9                     u3640:
  6608  14E9                     l2633:
  6609  14E9  17DB               	bsf	___fladd@b+2,7
  6610  14EA  2CEF               	goto	l779
  6611  14EB                     l2635:
  6612  14EB  307F               	movlw	127
  6613  14EC  00E1               	movwf	??___fladd
  6614  14ED  0861               	movf	??___fladd,w
  6615  14EE  05DB               	andwf	___fladd@b+2,f
  6616  14EF                     l779:
  6617  14EF  086B               	movf	___fladd@bexp,w
  6618  14F0  00E1               	movwf	??___fladd
  6619  14F1  1003               	clrc
  6620  14F2  0C61               	rrf	??___fladd,w
  6621  14F3  00E2               	movwf	??___fladd+1
  6622  14F4  0862               	movf	??___fladd+1,w
  6623  14F5  00DC               	movwf	___fladd@b+3
  6624  14F6                     l2637:
  6625  14F6  1FE9               	btfss	___fladd@signs,7
  6626  14F7  2CF9               	goto	u3651
  6627  14F8  2CFA               	goto	u3650
  6628  14F9                     u3651:
  6629  14F9  2CFB               	goto	l780
  6630  14FA                     u3650:
  6631  14FA                     l2639:
  6632  14FA  17DC               	bsf	___fladd@b+3,7
  6633  14FB                     l780:
  6634  14FB                     l750:
  6635  14FB  0008               	return
  6636  14FC                     __end_of___fladd:
  6637                           
  6638                           	psect	text17
  6639  1AF7                     __ptext17:	
  6640 ;; *************** function ___flneg *****************
  6641 ;; Defined at:
  6642 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  f1              4    3[COMMON] unsigned char 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;		None
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  4    3[COMMON] unsigned char 
  6649 ;; Registers used:
  6650 ;;		wreg
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6656 ;;      Params:         4       0       0       0       0
  6657 ;;      Locals:         0       0       0       0       0
  6658 ;;      Temps:          0       0       0       0       0
  6659 ;;      Totals:         4       0       0       0       0
  6660 ;;Total ram usage:        4 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    1
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_sprintf
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           
  6671                           ;psect for function ___flneg
  6672  1AF7                     ___flneg:
  6673  1AF7                     l3049:	
  6674                           ;incstack = 0
  6675                           ; Regs used in ___flneg: [wreg]
  6676                           
  6677  1AF7  0876               	movf	___flneg@f1+3,w
  6678  1AF8  0475               	iorwf	___flneg@f1+2,w
  6679  1AF9  0474               	iorwf	___flneg@f1+1,w
  6680  1AFA  0473               	iorwf	___flneg@f1,w
  6681  1AFB  1903               	skipnz
  6682  1AFC  2AFE               	goto	u4781
  6683  1AFD  2AFF               	goto	u4780
  6684  1AFE                     u4781:
  6685  1AFE  2B01               	goto	l3053
  6686  1AFF                     u4780:
  6687  1AFF                     l3051:
  6688  1AFF  3080               	movlw	128
  6689  1B00  06F6               	xorwf	___flneg@f1+3,f
  6690  1B01                     l3053:
  6691  1B01                     l609:
  6692  1B01  0008               	return
  6693  1B02                     __end_of___flneg:
  6694                           
  6695                           	psect	text18
  6696  1F5C                     __ptext18:	
  6697 ;; *************** function ___flge *****************
  6698 ;; Defined at:
  6699 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  ff1             4    0[BANK0 ] unsigned char 
  6702 ;;  ff2             4    4[BANK0 ] unsigned char 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;		None
  6705 ;; Return value:  Size  Location     Type
  6706 ;;		None               void
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6714 ;;      Params:         0       8       0       0       0
  6715 ;;      Locals:         0       0       0       0       0
  6716 ;;      Temps:          4       0       0       0       0
  6717 ;;      Totals:         4       8       0       0       0
  6718 ;;Total ram usage:       12 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; Hardware stack levels required when called:    1
  6721 ;; This function calls:
  6722 ;;		Nothing
  6723 ;; This function is called by:
  6724 ;;		_sprintf
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           
  6729                           ;psect for function ___flge
  6730  1F5C                     ___flge:
  6731  1F5C                     l3967:	
  6732                           ;incstack = 0
  6733                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6734                           
  6735  1F5C  3000               	movlw	0
  6736  1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  6737  1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  6738  1F5F  0520               	andwf	___flge@ff1,w
  6739  1F60  00F3               	movwf	??___flge
  6740  1F61  3000               	movlw	0
  6741  1F62  0521               	andwf	___flge@ff1+1,w
  6742  1F63  00F4               	movwf	??___flge+1
  6743  1F64  3080               	movlw	128
  6744  1F65  0522               	andwf	___flge@ff1+2,w
  6745  1F66  00F5               	movwf	??___flge+2
  6746  1F67  307F               	movlw	127
  6747  1F68  0523               	andwf	___flge@ff1+3,w
  6748  1F69  00F6               	movwf	??___flge+3
  6749  1F6A  0876               	movf	??___flge+3,w
  6750  1F6B  0475               	iorwf	??___flge+2,w
  6751  1F6C  0474               	iorwf	??___flge+1,w
  6752  1F6D  0473               	iorwf	??___flge,w
  6753  1F6E  1D03               	skipz
  6754  1F6F  2F71               	goto	u6611
  6755  1F70  2F72               	goto	u6610
  6756  1F71                     u6611:
  6757  1F71  2F7A               	goto	l601
  6758  1F72                     u6610:
  6759  1F72                     l3969:
  6760  1F72  3000               	movlw	0
  6761  1F73  00A3               	movwf	___flge@ff1+3
  6762  1F74  3000               	movlw	0
  6763  1F75  00A2               	movwf	___flge@ff1+2
  6764  1F76  3000               	movlw	0
  6765  1F77  00A1               	movwf	___flge@ff1+1
  6766  1F78  3000               	movlw	0
  6767  1F79  00A0               	movwf	___flge@ff1
  6768  1F7A                     l601:
  6769  1F7A  3000               	movlw	0
  6770  1F7B  0524               	andwf	___flge@ff2,w
  6771  1F7C  00F3               	movwf	??___flge
  6772  1F7D  3000               	movlw	0
  6773  1F7E  0525               	andwf	___flge@ff2+1,w
  6774  1F7F  00F4               	movwf	??___flge+1
  6775  1F80  3080               	movlw	128
  6776  1F81  0526               	andwf	___flge@ff2+2,w
  6777  1F82  00F5               	movwf	??___flge+2
  6778  1F83  307F               	movlw	127
  6779  1F84  0527               	andwf	___flge@ff2+3,w
  6780  1F85  00F6               	movwf	??___flge+3
  6781  1F86  0876               	movf	??___flge+3,w
  6782  1F87  0475               	iorwf	??___flge+2,w
  6783  1F88  0474               	iorwf	??___flge+1,w
  6784  1F89  0473               	iorwf	??___flge,w
  6785  1F8A  1D03               	skipz
  6786  1F8B  2F8D               	goto	u6621
  6787  1F8C  2F8E               	goto	u6620
  6788  1F8D                     u6621:
  6789  1F8D  2F96               	goto	l3973
  6790  1F8E                     u6620:
  6791  1F8E                     l3971:
  6792  1F8E  3000               	movlw	0
  6793  1F8F  00A7               	movwf	___flge@ff2+3
  6794  1F90  3000               	movlw	0
  6795  1F91  00A6               	movwf	___flge@ff2+2
  6796  1F92  3000               	movlw	0
  6797  1F93  00A5               	movwf	___flge@ff2+1
  6798  1F94  3000               	movlw	0
  6799  1F95  00A4               	movwf	___flge@ff2
  6800  1F96                     l3973:
  6801  1F96  1FA3               	btfss	___flge@ff1+3,7
  6802  1F97  2F99               	goto	u6631
  6803  1F98  2F9A               	goto	u6630
  6804  1F99                     u6631:
  6805  1F99  2FBE               	goto	l3977
  6806  1F9A                     u6630:
  6807  1F9A                     l3975:
  6808  1F9A  3000               	movlw	0
  6809  1F9B  00F3               	movwf	??___flge
  6810  1F9C  3000               	movlw	0
  6811  1F9D  00F4               	movwf	??___flge+1
  6812  1F9E  3000               	movlw	0
  6813  1F9F  00F5               	movwf	??___flge+2
  6814  1FA0  3080               	movlw	128
  6815  1FA1  00F6               	movwf	??___flge+3
  6816  1FA2  0820               	movf	___flge@ff1,w
  6817  1FA3  02F3               	subwf	??___flge,f
  6818  1FA4  0821               	movf	___flge@ff1+1,w
  6819  1FA5  1C03               	skipc
  6820  1FA6  0F21               	incfsz	___flge@ff1+1,w
  6821  1FA7  2FA9               	goto	u6641
  6822  1FA8  2FAA               	goto	u6642
  6823  1FA9                     u6641:
  6824  1FA9  02F4               	subwf	??___flge+1,f
  6825  1FAA                     u6642:
  6826  1FAA  0822               	movf	___flge@ff1+2,w
  6827  1FAB  1C03               	skipc
  6828  1FAC  0F22               	incfsz	___flge@ff1+2,w
  6829  1FAD  2FAF               	goto	u6643
  6830  1FAE  2FB0               	goto	u6644
  6831  1FAF                     u6643:
  6832  1FAF  02F5               	subwf	??___flge+2,f
  6833  1FB0                     u6644:
  6834  1FB0  0823               	movf	___flge@ff1+3,w
  6835  1FB1  1C03               	skipc
  6836  1FB2  0F23               	incfsz	___flge@ff1+3,w
  6837  1FB3  2FB5               	goto	u6645
  6838  1FB4  2FB6               	goto	u6646
  6839  1FB5                     u6645:
  6840  1FB5  02F6               	subwf	??___flge+3,f
  6841  1FB6                     u6646:
  6842  1FB6  0876               	movf	??___flge+3,w
  6843  1FB7  00A3               	movwf	___flge@ff1+3
  6844  1FB8  0875               	movf	??___flge+2,w
  6845  1FB9  00A2               	movwf	___flge@ff1+2
  6846  1FBA  0874               	movf	??___flge+1,w
  6847  1FBB  00A1               	movwf	___flge@ff1+1
  6848  1FBC  0873               	movf	??___flge,w
  6849  1FBD  00A0               	movwf	___flge@ff1
  6850  1FBE                     l3977:
  6851  1FBE  1FA7               	btfss	___flge@ff2+3,7
  6852  1FBF  2FC1               	goto	u6651
  6853  1FC0  2FC2               	goto	u6650
  6854  1FC1                     u6651:
  6855  1FC1  2FE6               	goto	l604
  6856  1FC2                     u6650:
  6857  1FC2                     l3979:
  6858  1FC2  3000               	movlw	0
  6859  1FC3  00F3               	movwf	??___flge
  6860  1FC4  3000               	movlw	0
  6861  1FC5  00F4               	movwf	??___flge+1
  6862  1FC6  3000               	movlw	0
  6863  1FC7  00F5               	movwf	??___flge+2
  6864  1FC8  3080               	movlw	128
  6865  1FC9  00F6               	movwf	??___flge+3
  6866  1FCA  0824               	movf	___flge@ff2,w
  6867  1FCB  02F3               	subwf	??___flge,f
  6868  1FCC  0825               	movf	___flge@ff2+1,w
  6869  1FCD  1C03               	skipc
  6870  1FCE  0F25               	incfsz	___flge@ff2+1,w
  6871  1FCF  2FD1               	goto	u6661
  6872  1FD0  2FD2               	goto	u6662
  6873  1FD1                     u6661:
  6874  1FD1  02F4               	subwf	??___flge+1,f
  6875  1FD2                     u6662:
  6876  1FD2  0826               	movf	___flge@ff2+2,w
  6877  1FD3  1C03               	skipc
  6878  1FD4  0F26               	incfsz	___flge@ff2+2,w
  6879  1FD5  2FD7               	goto	u6663
  6880  1FD6  2FD8               	goto	u6664
  6881  1FD7                     u6663:
  6882  1FD7  02F5               	subwf	??___flge+2,f
  6883  1FD8                     u6664:
  6884  1FD8  0827               	movf	___flge@ff2+3,w
  6885  1FD9  1C03               	skipc
  6886  1FDA  0F27               	incfsz	___flge@ff2+3,w
  6887  1FDB  2FDD               	goto	u6665
  6888  1FDC  2FDE               	goto	u6666
  6889  1FDD                     u6665:
  6890  1FDD  02F6               	subwf	??___flge+3,f
  6891  1FDE                     u6666:
  6892  1FDE  0876               	movf	??___flge+3,w
  6893  1FDF  00A7               	movwf	___flge@ff2+3
  6894  1FE0  0875               	movf	??___flge+2,w
  6895  1FE1  00A6               	movwf	___flge@ff2+2
  6896  1FE2  0874               	movf	??___flge+1,w
  6897  1FE3  00A5               	movwf	___flge@ff2+1
  6898  1FE4  0873               	movf	??___flge,w
  6899  1FE5  00A4               	movwf	___flge@ff2
  6900  1FE6                     l604:
  6901  1FE6  3080               	movlw	128
  6902  1FE7  06A3               	xorwf	___flge@ff1+3,f
  6903  1FE8  3080               	movlw	128
  6904  1FE9  06A7               	xorwf	___flge@ff2+3,f
  6905  1FEA  0827               	movf	___flge@ff2+3,w
  6906  1FEB  0223               	subwf	___flge@ff1+3,w
  6907  1FEC  1D03               	skipz
  6908  1FED  2FF8               	goto	u6675
  6909  1FEE  0826               	movf	___flge@ff2+2,w
  6910  1FEF  0222               	subwf	___flge@ff1+2,w
  6911  1FF0  1D03               	skipz
  6912  1FF1  2FF8               	goto	u6675
  6913  1FF2  0825               	movf	___flge@ff2+1,w
  6914  1FF3  0221               	subwf	___flge@ff1+1,w
  6915  1FF4  1D03               	skipz
  6916  1FF5  2FF8               	goto	u6675
  6917  1FF6  0824               	movf	___flge@ff2,w
  6918  1FF7  0220               	subwf	___flge@ff1,w
  6919  1FF8                     u6675:
  6920  1FF8  1803               	skipnc
  6921  1FF9  2FFB               	goto	u6671
  6922  1FFA  2FFC               	goto	u6670
  6923  1FFB                     u6671:
  6924  1FFB  2FFE               	goto	l3983
  6925  1FFC                     u6670:
  6926  1FFC                     l3981:
  6927  1FFC  1003               	clrc
  6928  1FFD  2FFF               	goto	l605
  6929  1FFE                     l3983:
  6930  1FFE  1403               	setc
  6931  1FFF                     l605:
  6932  1FFF  0008               	return
  6933  2000                     __end_of___flge:
  6934                           
  6935                           	psect	text19
  6936  1CDE                     __ptext19:	
  6937 ;; *************** function ___fleq *****************
  6938 ;; Defined at:
  6939 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  ff1             4    0[BANK0 ] unsigned char 
  6942 ;;  ff2             4    4[BANK0 ] unsigned char 
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;		None
  6945 ;; Return value:  Size  Location     Type
  6946 ;;		None               void
  6947 ;; Registers used:
  6948 ;;		wreg, status,2, status,0
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6954 ;;      Params:         0       8       0       0       0
  6955 ;;      Locals:         0       0       0       0       0
  6956 ;;      Temps:          4       0       0       0       0
  6957 ;;      Totals:         4       8       0       0       0
  6958 ;;Total ram usage:       12 bytes
  6959 ;; Hardware stack levels used:    1
  6960 ;; Hardware stack levels required when called:    1
  6961 ;; This function calls:
  6962 ;;		Nothing
  6963 ;; This function is called by:
  6964 ;;		_sprintf
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           
  6969                           ;psect for function ___fleq
  6970  1CDE                     ___fleq:
  6971  1CDE                     l3955:	
  6972                           ;incstack = 0
  6973                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6974                           
  6975  1CDE  3000               	movlw	0
  6976  1CDF  1283               	bcf	3,5	;RP0=0, select bank0
  6977  1CE0  1303               	bcf	3,6	;RP1=0, select bank0
  6978  1CE1  0520               	andwf	___fleq@ff1,w
  6979  1CE2  00F3               	movwf	??___fleq
  6980  1CE3  3000               	movlw	0
  6981  1CE4  0521               	andwf	___fleq@ff1+1,w
  6982  1CE5  00F4               	movwf	??___fleq+1
  6983  1CE6  3080               	movlw	128
  6984  1CE7  0522               	andwf	___fleq@ff1+2,w
  6985  1CE8  00F5               	movwf	??___fleq+2
  6986  1CE9  307F               	movlw	127
  6987  1CEA  0523               	andwf	___fleq@ff1+3,w
  6988  1CEB  00F6               	movwf	??___fleq+3
  6989  1CEC  0876               	movf	??___fleq+3,w
  6990  1CED  0475               	iorwf	??___fleq+2,w
  6991  1CEE  0474               	iorwf	??___fleq+1,w
  6992  1CEF  0473               	iorwf	??___fleq,w
  6993  1CF0  1D03               	skipz
  6994  1CF1  2CF3               	goto	u6581
  6995  1CF2  2CF4               	goto	u6580
  6996  1CF3                     u6581:
  6997  1CF3  2CFC               	goto	l596
  6998  1CF4                     u6580:
  6999  1CF4                     l3957:
  7000  1CF4  3000               	movlw	0
  7001  1CF5  00A3               	movwf	___fleq@ff1+3
  7002  1CF6  3000               	movlw	0
  7003  1CF7  00A2               	movwf	___fleq@ff1+2
  7004  1CF8  3000               	movlw	0
  7005  1CF9  00A1               	movwf	___fleq@ff1+1
  7006  1CFA  3000               	movlw	0
  7007  1CFB  00A0               	movwf	___fleq@ff1
  7008  1CFC                     l596:
  7009  1CFC  3000               	movlw	0
  7010  1CFD  0524               	andwf	___fleq@ff2,w
  7011  1CFE  00F3               	movwf	??___fleq
  7012  1CFF  3000               	movlw	0
  7013  1D00  0525               	andwf	___fleq@ff2+1,w
  7014  1D01  00F4               	movwf	??___fleq+1
  7015  1D02  3080               	movlw	128
  7016  1D03  0526               	andwf	___fleq@ff2+2,w
  7017  1D04  00F5               	movwf	??___fleq+2
  7018  1D05  307F               	movlw	127
  7019  1D06  0527               	andwf	___fleq@ff2+3,w
  7020  1D07  00F6               	movwf	??___fleq+3
  7021  1D08  0876               	movf	??___fleq+3,w
  7022  1D09  0475               	iorwf	??___fleq+2,w
  7023  1D0A  0474               	iorwf	??___fleq+1,w
  7024  1D0B  0473               	iorwf	??___fleq,w
  7025  1D0C  1D03               	skipz
  7026  1D0D  2D0F               	goto	u6591
  7027  1D0E  2D10               	goto	u6590
  7028  1D0F                     u6591:
  7029  1D0F  2D18               	goto	l597
  7030  1D10                     u6590:
  7031  1D10                     l3959:
  7032  1D10  3000               	movlw	0
  7033  1D11  00A7               	movwf	___fleq@ff2+3
  7034  1D12  3000               	movlw	0
  7035  1D13  00A6               	movwf	___fleq@ff2+2
  7036  1D14  3000               	movlw	0
  7037  1D15  00A5               	movwf	___fleq@ff2+1
  7038  1D16  3000               	movlw	0
  7039  1D17  00A4               	movwf	___fleq@ff2
  7040  1D18                     l597:
  7041  1D18  0827               	movf	___fleq@ff2+3,w
  7042  1D19  0623               	xorwf	___fleq@ff1+3,w
  7043  1D1A  1D03               	skipz
  7044  1D1B  2D26               	goto	u6605
  7045  1D1C  0826               	movf	___fleq@ff2+2,w
  7046  1D1D  0622               	xorwf	___fleq@ff1+2,w
  7047  1D1E  1D03               	skipz
  7048  1D1F  2D26               	goto	u6605
  7049  1D20  0825               	movf	___fleq@ff2+1,w
  7050  1D21  0621               	xorwf	___fleq@ff1+1,w
  7051  1D22  1D03               	skipz
  7052  1D23  2D26               	goto	u6605
  7053  1D24  0824               	movf	___fleq@ff2,w
  7054  1D25  0620               	xorwf	___fleq@ff1,w
  7055  1D26                     u6605:
  7056  1D26  1903               	skipnz
  7057  1D27  2D29               	goto	u6601
  7058  1D28  2D2A               	goto	u6600
  7059  1D29                     u6601:
  7060  1D29  2D2C               	goto	l3963
  7061  1D2A                     u6600:
  7062  1D2A                     l3961:
  7063  1D2A  1003               	clrc
  7064  1D2B  2D2D               	goto	l598
  7065  1D2C                     l3963:
  7066  1D2C  1403               	setc
  7067  1D2D                     l598:
  7068  1D2D  0008               	return
  7069  1D2E                     __end_of___fleq:
  7070                           
  7071                           	psect	text20
  7072  1AE3                     __ptext20:	
  7073 ;; *************** function _spiRead *****************
  7074 ;; Defined at:
  7075 ;;		line 48 in file "SPI.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;		None
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;		None
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  1    wreg      unsigned char 
  7082 ;; Registers used:
  7083 ;;		wreg, status,2, status,0, pclath, cstack
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7089 ;;      Params:         0       0       0       0       0
  7090 ;;      Locals:         0       0       0       0       0
  7091 ;;      Temps:          0       0       0       0       0
  7092 ;;      Totals:         0       0       0       0       0
  7093 ;;Total ram usage:        0 bytes
  7094 ;; Hardware stack levels used:    1
  7095 ;; Hardware stack levels required when called:    2
  7096 ;; This function calls:
  7097 ;;		_spiReceiveWait
  7098 ;; This function is called by:
  7099 ;;		_main
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           
  7104                           ;psect for function _spiRead
  7105  1AE3                     _spiRead:
  7106  1AE3                     l3505:	
  7107                           ;incstack = 0
  7108                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  7109                           
  7110                           
  7111                           ;SPI.c: 50:     spiReceiveWait();
  7112  1AE3  160A  158A  22D4  160A  158A  	fcall	_spiReceiveWait
  7113  1AE8                     l3507:
  7114                           
  7115                           ;SPI.c: 51:     return(SSPBUF);
  7116  1AE8  1283               	bcf	3,5	;RP0=0, select bank0
  7117  1AE9  1303               	bcf	3,6	;RP1=0, select bank0
  7118  1AEA  0813               	movf	19,w	;volatile
  7119  1AEB                     l214:
  7120  1AEB  0008               	return
  7121  1AEC                     __end_of_spiRead:
  7122                           
  7123                           	psect	text21
  7124  1AD4                     __ptext21:	
  7125 ;; *************** function _spiReceiveWait *****************
  7126 ;; Defined at:
  7127 ;;		line 30 in file "SPI.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;		None
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		None
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7141 ;;      Params:         0       0       0       0       0
  7142 ;;      Locals:         0       0       0       0       0
  7143 ;;      Temps:          0       0       0       0       0
  7144 ;;      Totals:         0       0       0       0       0
  7145 ;;Total ram usage:        0 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    1
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_spiRead
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           
  7156                           ;psect for function _spiReceiveWait
  7157  1AD4                     _spiReceiveWait:
  7158  1AD4                     l2803:	
  7159                           ;incstack = 0
  7160                           ; Regs used in _spiReceiveWait: []
  7161                           
  7162  1AD4                     l200:	
  7163                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  7164                           
  7165  1AD4  1683               	bsf	3,5	;RP0=1, select bank1
  7166  1AD5  1303               	bcf	3,6	;RP1=0, select bank1
  7167  1AD6  1C14               	btfss	20,0	;volatile
  7168  1AD7  2AD9               	goto	u4031
  7169  1AD8  2ADA               	goto	u4030
  7170  1AD9                     u4031:
  7171  1AD9  2AD4               	goto	l200
  7172  1ADA                     u4030:
  7173  1ADA                     l203:
  7174  1ADA  0008               	return
  7175  1ADB                     __end_of_spiReceiveWait:
  7176                           
  7177                           	psect	text22
  7178  1B32                     __ptext22:	
  7179 ;; *************** function _spiInit *****************
  7180 ;; Defined at:
  7181 ;;		line 13 in file "SPI.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  sType           1    wreg     enum E1264
  7184 ;;  sDataSample     1    3[COMMON] enum E1272
  7185 ;;  sClockIdle      1    4[COMMON] enum E1276
  7186 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  sType           1    6[COMMON] enum E1264
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      void 
  7191 ;; Registers used:
  7192 ;;		wreg, status,2, status,0
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7198 ;;      Params:         3       0       0       0       0
  7199 ;;      Locals:         1       0       0       0       0
  7200 ;;      Temps:          0       0       0       0       0
  7201 ;;      Totals:         4       0       0       0       0
  7202 ;;Total ram usage:        4 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; Hardware stack levels required when called:    1
  7205 ;; This function calls:
  7206 ;;		Nothing
  7207 ;; This function is called by:
  7208 ;;		_main
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212                           
  7213                           ;psect for function _spiInit
  7214  1B32                     _spiInit:
  7215                           
  7216                           ;incstack = 0
  7217                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  7218                           ;spiInit@sType stored from wreg
  7219  1B32  00F6               	movwf	spiInit@sType
  7220  1B33                     l3207:
  7221                           
  7222                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
  7223  1B33  1683               	bsf	3,5	;RP0=1, select bank1
  7224  1B34  1303               	bcf	3,6	;RP1=0, select bank1
  7225  1B35  1287               	bcf	7,5	;volatile
  7226                           
  7227                           ;SPI.c: 16:     if(sType & 0b00000100)
  7228  1B36  1D76               	btfss	spiInit@sType,2
  7229  1B37  2B39               	goto	u5091
  7230  1B38  2B3A               	goto	u5090
  7231  1B39                     u5091:
  7232  1B39  2B3E               	goto	l3213
  7233  1B3A                     u5090:
  7234  1B3A                     l3209:
  7235                           
  7236                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
  7237  1B3A  0875               	movf	spiInit@sTransmitEdge,w
  7238  1B3B  0094               	movwf	20	;volatile
  7239  1B3C                     l3211:
  7240                           
  7241                           ;SPI.c: 19:         TRISC3 = 1;
  7242  1B3C  1587               	bsf	7,3	;volatile
  7243                           
  7244                           ;SPI.c: 20:     }
  7245  1B3D  2B42               	goto	l196
  7246  1B3E                     l3213:
  7247                           
  7248                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  7249  1B3E  0873               	movf	spiInit@sDataSample,w
  7250  1B3F  0475               	iorwf	spiInit@sTransmitEdge,w
  7251  1B40  0094               	movwf	20	;volatile
  7252  1B41                     l3215:
  7253                           
  7254                           ;SPI.c: 24:         TRISC3 = 0;
  7255  1B41  1187               	bcf	7,3	;volatile
  7256  1B42                     l196:	
  7257                           ;SPI.c: 25:     }
  7258                           
  7259                           
  7260                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
  7261  1B42  0876               	movf	spiInit@sType,w
  7262  1B43  0474               	iorwf	spiInit@sClockIdle,w
  7263  1B44  1283               	bcf	3,5	;RP0=0, select bank0
  7264  1B45  1303               	bcf	3,6	;RP1=0, select bank0
  7265  1B46  0094               	movwf	20	;volatile
  7266  1B47                     l197:
  7267  1B47  0008               	return
  7268  1B48                     __end_of_spiInit:
  7269                           
  7270                           	psect	text23
  7271  1B7D                     __ptext23:	
  7272 ;; *************** function _setup *****************
  7273 ;; Defined at:
  7274 ;;		line 172 in file "main.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7288 ;;      Params:         0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0
  7291 ;;      Totals:         0       0       0       0       0
  7292 ;;Total ram usage:        0 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    1
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_main
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           
  7303                           ;psect for function _setup
  7304  1B7D                     _setup:
  7305  1B7D                     l3163:	
  7306                           ;incstack = 0
  7307                           ; Regs used in _setup: [wreg+status,2]
  7308                           
  7309                           
  7310                           ;main.c: 173:     TRISD = 0b00000000;
  7311  1B7D  1683               	bsf	3,5	;RP0=1, select bank1
  7312  1B7E  1303               	bcf	3,6	;RP1=0, select bank1
  7313  1B7F  0188               	clrf	8	;volatile
  7314  1B80                     l3165:
  7315                           
  7316                           ;main.c: 174:     TRISC = 0b10010000;
  7317  1B80  3090               	movlw	144
  7318  1B81  0087               	movwf	7	;volatile
  7319  1B82                     l3167:
  7320                           
  7321                           ;main.c: 175:     PORTCbits.RC0 = 1;
  7322  1B82  1283               	bcf	3,5	;RP0=0, select bank0
  7323  1B83  1303               	bcf	3,6	;RP1=0, select bank0
  7324  1B84  1407               	bsf	7,0	;volatile
  7325  1B85                     l3169:
  7326                           
  7327                           ;main.c: 176:     PORTCbits.RC1 = 1;
  7328  1B85  1487               	bsf	7,1	;volatile
  7329  1B86                     l3171:
  7330                           
  7331                           ;main.c: 177:     PORTCbits.RC2 = 1;
  7332  1B86  1507               	bsf	7,2	;volatile
  7333  1B87                     l3173:
  7334                           
  7335                           ;main.c: 178:     TRISE = 0b00000000;
  7336  1B87  1683               	bsf	3,5	;RP0=1, select bank1
  7337  1B88  1303               	bcf	3,6	;RP1=0, select bank1
  7338  1B89  0189               	clrf	9	;volatile
  7339  1B8A                     l3175:
  7340                           
  7341                           ;main.c: 179:     TRISB = 0b00000000;
  7342  1B8A  0186               	clrf	6	;volatile
  7343  1B8B                     l3177:
  7344                           
  7345                           ;main.c: 180:     ANSEL = 0b00000011;
  7346  1B8B  3003               	movlw	3
  7347  1B8C  1683               	bsf	3,5	;RP0=1, select bank3
  7348  1B8D  1703               	bsf	3,6	;RP1=1, select bank3
  7349  1B8E  0088               	movwf	8	;volatile
  7350                           
  7351                           ;main.c: 181:     PORTC = 0;
  7352  1B8F  1283               	bcf	3,5	;RP0=0, select bank0
  7353  1B90  1303               	bcf	3,6	;RP1=0, select bank0
  7354  1B91  0187               	clrf	7	;volatile
  7355                           
  7356                           ;main.c: 182:     PORTD = 0;
  7357  1B92  0188               	clrf	8	;volatile
  7358                           
  7359                           ;main.c: 183:     PORTE = 0;
  7360  1B93  0189               	clrf	9	;volatile
  7361  1B94                     l3179:
  7362                           
  7363                           ;main.c: 184:     PORTB = 0b11111111;
  7364  1B94  30FF               	movlw	255
  7365  1B95  0086               	movwf	6	;volatile
  7366  1B96                     l3181:
  7367                           
  7368                           ;main.c: 185:     INTCON = 0b11101000;
  7369  1B96  30E8               	movlw	232
  7370  1B97  008B               	movwf	11	;volatile
  7371  1B98                     l93:
  7372  1B98  0008               	return
  7373  1B99                     __end_of_setup:
  7374                           
  7375                           	psect	text24
  7376  1AEC                     __ptext24:	
  7377 ;; *************** function _recibir *****************
  7378 ;; Defined at:
  7379 ;;		line 40 in file "USART.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;		None
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;		None
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      void 
  7386 ;; Registers used:
  7387 ;;		None
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7393 ;;      Params:         0       0       0       0       0
  7394 ;;      Locals:         0       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0
  7396 ;;      Totals:         0       0       0       0       0
  7397 ;;Total ram usage:        0 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; Hardware stack levels required when called:    1
  7400 ;; This function calls:
  7401 ;;		Nothing
  7402 ;; This function is called by:
  7403 ;;		_main
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           
  7408                           ;psect for function _recibir
  7409  1AEC                     _recibir:
  7410  1AEC                     l3193:	
  7411                           ;incstack = 0
  7412                           ; Regs used in _recibir: []
  7413                           
  7414                           
  7415                           ;USART.c: 41:     RCSTAbits.CREN = 1;
  7416  1AEC  1283               	bcf	3,5	;RP0=0, select bank0
  7417  1AED  1303               	bcf	3,6	;RP1=0, select bank0
  7418  1AEE  1618               	bsf	24,4	;volatile
  7419                           
  7420                           ;USART.c: 42:     RCSTAbits.FERR = 0;
  7421  1AEF  1118               	bcf	24,2	;volatile
  7422                           
  7423                           ;USART.c: 43:     PIE1bits.RCIE = 1;
  7424  1AF0  1683               	bsf	3,5	;RP0=1, select bank1
  7425  1AF1  1303               	bcf	3,6	;RP1=0, select bank1
  7426  1AF2  168C               	bsf	12,5	;volatile
  7427                           
  7428                           ;USART.c: 44:     RCSTAbits.OERR = 0;
  7429  1AF3  1283               	bcf	3,5	;RP0=0, select bank0
  7430  1AF4  1303               	bcf	3,6	;RP1=0, select bank0
  7431  1AF5  1098               	bcf	24,1	;volatile
  7432  1AF6                     l180:
  7433  1AF6  0008               	return
  7434  1AF7                     __end_of_recibir:
  7435                           
  7436                           	psect	text25
  7437  1E2F                     __ptext25:	
  7438 ;; *************** function _conversor2 *****************
  7439 ;; Defined at:
  7440 ;;		line 199 in file "main.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  val             1    wreg     unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  val             1   45[BANK0 ] unsigned char 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  4   37[BANK0 ] float 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7454 ;;      Params:         0       4       0       0       0
  7455 ;;      Locals:         0       1       0       0       0
  7456 ;;      Temps:          0       4       0       0       0
  7457 ;;      Totals:         0       9       0       0       0
  7458 ;;Total ram usage:        9 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    3
  7461 ;; This function calls:
  7462 ;;		___flmul
  7463 ;;		___xxtofl
  7464 ;; This function is called by:
  7465 ;;		_main
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           
  7470                           ;psect for function _conversor2
  7471  1E2F                     _conversor2:
  7472                           
  7473                           ;incstack = 0
  7474                           ; Regs used in _conversor2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7475                           ;conversor2@val stored from wreg
  7476  1E2F  1283               	bcf	3,5	;RP0=0, select bank0
  7477  1E30  1303               	bcf	3,6	;RP1=0, select bank0
  7478  1E31  00CD               	movwf	conversor2@val
  7479  1E32                     l4083:
  7480                           
  7481                           ;main.c: 200:     vv = 1.95 * val;
  7482  1E32  303F               	movlw	63
  7483  1E33  00AE               	movwf	___flmul@b+3
  7484  1E34  30F9               	movlw	249
  7485  1E35  00AD               	movwf	___flmul@b+2
  7486  1E36  3099               	movlw	153
  7487  1E37  00AC               	movwf	___flmul@b+1
  7488  1E38  309A               	movlw	154
  7489  1E39  00AB               	movwf	___flmul@b
  7490  1E3A  084D               	movf	conversor2@val,w
  7491  1E3B  00C9               	movwf	??_conversor2
  7492  1E3C  01CA               	clrf	??_conversor2+1
  7493  1E3D  01CB               	clrf	??_conversor2+2
  7494  1E3E  01CC               	clrf	??_conversor2+3
  7495  1E3F  084C               	movf	??_conversor2+3,w
  7496  1E40  00F6               	movwf	___xxtofl@val+3
  7497  1E41  084B               	movf	??_conversor2+2,w
  7498  1E42  00F5               	movwf	___xxtofl@val+2
  7499  1E43  084A               	movf	??_conversor2+1,w
  7500  1E44  00F4               	movwf	___xxtofl@val+1
  7501  1E45  0849               	movf	??_conversor2,w
  7502  1E46  00F3               	movwf	___xxtofl@val
  7503  1E47  3001               	movlw	1
  7504  1E48  160A  118A  203D  160A  158A  	fcall	___xxtofl
  7505  1E4D  0876               	movf	?___xxtofl+3,w
  7506  1E4E  1283               	bcf	3,5	;RP0=0, select bank0
  7507  1E4F  1303               	bcf	3,6	;RP1=0, select bank0
  7508  1E50  00B2               	movwf	___flmul@a+3
  7509  1E51  0875               	movf	?___xxtofl+2,w
  7510  1E52  00B1               	movwf	___flmul@a+2
  7511  1E53  0874               	movf	?___xxtofl+1,w
  7512  1E54  00B0               	movwf	___flmul@a+1
  7513  1E55  0873               	movf	?___xxtofl,w
  7514  1E56  00AF               	movwf	___flmul@a
  7515  1E57  120A  158A  213C  160A  158A  	fcall	___flmul
  7516  1E5C  1283               	bcf	3,5	;RP0=0, select bank0
  7517  1E5D  1303               	bcf	3,6	;RP1=0, select bank0
  7518  1E5E  082E               	movf	?___flmul+3,w
  7519  1E5F  1683               	bsf	3,5	;RP0=1, select bank1
  7520  1E60  1303               	bcf	3,6	;RP1=0, select bank1
  7521  1E61  00DB               	movwf	(_vv+3)^(0+128)
  7522  1E62  1283               	bcf	3,5	;RP0=0, select bank0
  7523  1E63  1303               	bcf	3,6	;RP1=0, select bank0
  7524  1E64  082D               	movf	?___flmul+2,w
  7525  1E65  1683               	bsf	3,5	;RP0=1, select bank1
  7526  1E66  1303               	bcf	3,6	;RP1=0, select bank1
  7527  1E67  00DA               	movwf	(_vv+2)^(0+128)
  7528  1E68  1283               	bcf	3,5	;RP0=0, select bank0
  7529  1E69  1303               	bcf	3,6	;RP1=0, select bank0
  7530  1E6A  082C               	movf	?___flmul+1,w
  7531  1E6B  1683               	bsf	3,5	;RP0=1, select bank1
  7532  1E6C  1303               	bcf	3,6	;RP1=0, select bank1
  7533  1E6D  00D9               	movwf	(_vv+1)^(0+128)
  7534  1E6E  1283               	bcf	3,5	;RP0=0, select bank0
  7535  1E6F  1303               	bcf	3,6	;RP1=0, select bank0
  7536  1E70  082B               	movf	?___flmul,w
  7537  1E71  1683               	bsf	3,5	;RP0=1, select bank1
  7538  1E72  1303               	bcf	3,6	;RP1=0, select bank1
  7539  1E73  00D8               	movwf	_vv^(0+128)
  7540  1E74                     l4085:
  7541                           
  7542                           ;main.c: 201:     return (vv);
  7543  1E74  085B               	movf	(_vv+3)^(0+128),w
  7544  1E75  1283               	bcf	3,5	;RP0=0, select bank0
  7545  1E76  1303               	bcf	3,6	;RP1=0, select bank0
  7546  1E77  00C8               	movwf	?_conversor2+3
  7547  1E78  1683               	bsf	3,5	;RP0=1, select bank1
  7548  1E79  1303               	bcf	3,6	;RP1=0, select bank1
  7549  1E7A  085A               	movf	(_vv+2)^(0+128),w
  7550  1E7B  1283               	bcf	3,5	;RP0=0, select bank0
  7551  1E7C  1303               	bcf	3,6	;RP1=0, select bank0
  7552  1E7D  00C7               	movwf	?_conversor2+2
  7553  1E7E  1683               	bsf	3,5	;RP0=1, select bank1
  7554  1E7F  1303               	bcf	3,6	;RP1=0, select bank1
  7555  1E80  0859               	movf	(_vv+1)^(0+128),w
  7556  1E81  1283               	bcf	3,5	;RP0=0, select bank0
  7557  1E82  1303               	bcf	3,6	;RP1=0, select bank0
  7558  1E83  00C6               	movwf	?_conversor2+1
  7559  1E84  1683               	bsf	3,5	;RP0=1, select bank1
  7560  1E85  1303               	bcf	3,6	;RP1=0, select bank1
  7561  1E86  0858               	movf	_vv^(0+128),w
  7562  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  7563  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  7564  1E89  00C5               	movwf	?_conversor2
  7565  1E8A                     l99:
  7566  1E8A  0008               	return
  7567  1E8B                     __end_of_conversor2:
  7568                           
  7569                           	psect	text26
  7570  103D                     __ptext26:	
  7571 ;; *************** function ___xxtofl *****************
  7572 ;; Defined at:
  7573 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  sign            1    wreg     unsigned char 
  7576 ;;  val             4    3[COMMON] long 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  sign            1    4[BANK0 ] unsigned char 
  7579 ;;  arg             4    6[BANK0 ] unsigned long 
  7580 ;;  exp             1    5[BANK0 ] unsigned char 
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  4    3[COMMON] unsigned char 
  7583 ;; Registers used:
  7584 ;;		wreg, status,2, status,0
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7590 ;;      Params:         4       0       0       0       0
  7591 ;;      Locals:         0       6       0       0       0
  7592 ;;      Temps:          0       4       0       0       0
  7593 ;;      Totals:         4      10       0       0       0
  7594 ;;Total ram usage:       14 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; Hardware stack levels required when called:    1
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_conversor2
  7601 ;;		_sprintf
  7602 ;;		_conversor
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           
  7607                           ;psect for function ___xxtofl
  7608  103D                     ___xxtofl:
  7609                           
  7610                           ;incstack = 0
  7611                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7612                           ;___xxtofl@sign stored from wreg
  7613  103D  1283               	bcf	3,5	;RP0=0, select bank0
  7614  103E  1303               	bcf	3,6	;RP1=0, select bank0
  7615  103F  00A4               	movwf	___xxtofl@sign
  7616  1040                     l4007:
  7617  1040  0824               	movf	___xxtofl@sign,w
  7618  1041  1903               	btfsc	3,2
  7619  1042  2844               	goto	u6741
  7620  1043  2845               	goto	u6740
  7621  1044                     u6741:
  7622  1044  2859               	goto	l4013
  7623  1045                     u6740:
  7624  1045                     l4009:
  7625  1045  1FF6               	btfss	___xxtofl@val+3,7
  7626  1046  2848               	goto	u6751
  7627  1047  2849               	goto	u6750
  7628  1048                     u6751:
  7629  1048  2859               	goto	l4013
  7630  1049                     u6750:
  7631  1049                     l4011:
  7632  1049  0973               	comf	___xxtofl@val,w
  7633  104A  00A6               	movwf	___xxtofl@arg
  7634  104B  0974               	comf	___xxtofl@val+1,w
  7635  104C  00A7               	movwf	___xxtofl@arg+1
  7636  104D  0975               	comf	___xxtofl@val+2,w
  7637  104E  00A8               	movwf	___xxtofl@arg+2
  7638  104F  0976               	comf	___xxtofl@val+3,w
  7639  1050  00A9               	movwf	___xxtofl@arg+3
  7640  1051  0AA6               	incf	___xxtofl@arg,f
  7641  1052  1903               	skipnz
  7642  1053  0AA7               	incf	___xxtofl@arg+1,f
  7643  1054  1903               	skipnz
  7644  1055  0AA8               	incf	___xxtofl@arg+2,f
  7645  1056  1903               	skipnz
  7646  1057  0AA9               	incf	___xxtofl@arg+3,f
  7647  1058  2861               	goto	l877
  7648  1059                     l4013:
  7649  1059  0876               	movf	___xxtofl@val+3,w
  7650  105A  00A9               	movwf	___xxtofl@arg+3
  7651  105B  0875               	movf	___xxtofl@val+2,w
  7652  105C  00A8               	movwf	___xxtofl@arg+2
  7653  105D  0874               	movf	___xxtofl@val+1,w
  7654  105E  00A7               	movwf	___xxtofl@arg+1
  7655  105F  0873               	movf	___xxtofl@val,w
  7656  1060  00A6               	movwf	___xxtofl@arg
  7657  1061                     l877:
  7658  1061  0876               	movf	___xxtofl@val+3,w
  7659  1062  0475               	iorwf	___xxtofl@val+2,w
  7660  1063  0474               	iorwf	___xxtofl@val+1,w
  7661  1064  0473               	iorwf	___xxtofl@val,w
  7662  1065  1D03               	skipz
  7663  1066  2868               	goto	u6761
  7664  1067  2869               	goto	u6760
  7665  1068                     u6761:
  7666  1068  2872               	goto	l4019
  7667  1069                     u6760:
  7668  1069                     l4015:
  7669  1069  3000               	movlw	0
  7670  106A  00F6               	movwf	?___xxtofl+3
  7671  106B  3000               	movlw	0
  7672  106C  00F5               	movwf	?___xxtofl+2
  7673  106D  3000               	movlw	0
  7674  106E  00F4               	movwf	?___xxtofl+1
  7675  106F  3000               	movlw	0
  7676  1070  00F3               	movwf	?___xxtofl
  7677  1071  28F8               	goto	l879
  7678  1072                     l4019:
  7679  1072  3096               	movlw	150
  7680  1073  00A0               	movwf	??___xxtofl
  7681  1074  0820               	movf	??___xxtofl,w
  7682  1075  00A5               	movwf	___xxtofl@exp
  7683  1076  2884               	goto	l4023
  7684  1077                     l4021:
  7685  1077  3001               	movlw	1
  7686  1078  00A0               	movwf	??___xxtofl
  7687  1079  0820               	movf	??___xxtofl,w
  7688  107A  07A5               	addwf	___xxtofl@exp,f
  7689  107B  3001               	movlw	1
  7690  107C                     u6775:
  7691  107C  1003               	clrc
  7692  107D  0CA9               	rrf	___xxtofl@arg+3,f
  7693  107E  0CA8               	rrf	___xxtofl@arg+2,f
  7694  107F  0CA7               	rrf	___xxtofl@arg+1,f
  7695  1080  0CA6               	rrf	___xxtofl@arg,f
  7696  1081  3EFF               	addlw	-1
  7697  1082  1D03               	skipz
  7698  1083  287C               	goto	u6775
  7699  1084                     l4023:
  7700  1084  30FE               	movlw	254
  7701  1085  0529               	andwf	___xxtofl@arg+3,w
  7702  1086  1D03               	btfss	3,2
  7703  1087  2889               	goto	u6781
  7704  1088  288A               	goto	u6780
  7705  1089                     u6781:
  7706  1089  2877               	goto	l4021
  7707  108A                     u6780:
  7708  108A  28A6               	goto	l883
  7709  108B                     l4025:
  7710  108B  3001               	movlw	1
  7711  108C  00A0               	movwf	??___xxtofl
  7712  108D  0820               	movf	??___xxtofl,w
  7713  108E  07A5               	addwf	___xxtofl@exp,f
  7714  108F                     l4027:
  7715  108F  3001               	movlw	1
  7716  1090  07A6               	addwf	___xxtofl@arg,f
  7717  1091  3000               	movlw	0
  7718  1092  1803               	skipnc
  7719  1093  3001               	movlw	1
  7720  1094  07A7               	addwf	___xxtofl@arg+1,f
  7721  1095  3000               	movlw	0
  7722  1096  1803               	skipnc
  7723  1097  3001               	movlw	1
  7724  1098  07A8               	addwf	___xxtofl@arg+2,f
  7725  1099  3000               	movlw	0
  7726  109A  1803               	skipnc
  7727  109B  3001               	movlw	1
  7728  109C  07A9               	addwf	___xxtofl@arg+3,f
  7729  109D                     l4029:
  7730  109D  3001               	movlw	1
  7731  109E                     u6795:
  7732  109E  1003               	clrc
  7733  109F  0CA9               	rrf	___xxtofl@arg+3,f
  7734  10A0  0CA8               	rrf	___xxtofl@arg+2,f
  7735  10A1  0CA7               	rrf	___xxtofl@arg+1,f
  7736  10A2  0CA6               	rrf	___xxtofl@arg,f
  7737  10A3  3EFF               	addlw	-1
  7738  10A4  1D03               	skipz
  7739  10A5  289E               	goto	u6795
  7740  10A6                     l883:
  7741  10A6  30FF               	movlw	255
  7742  10A7  0529               	andwf	___xxtofl@arg+3,w
  7743  10A8  1D03               	btfss	3,2
  7744  10A9  28AB               	goto	u6801
  7745  10AA  28AC               	goto	u6800
  7746  10AB                     u6801:
  7747  10AB  288B               	goto	l4025
  7748  10AC                     u6800:
  7749  10AC  28B8               	goto	l4033
  7750  10AD                     l4031:
  7751  10AD  3001               	movlw	1
  7752  10AE  02A5               	subwf	___xxtofl@exp,f
  7753  10AF  3001               	movlw	1
  7754  10B0  00A0               	movwf	??___xxtofl
  7755  10B1                     u6815:
  7756  10B1  1003               	clrc
  7757  10B2  0DA6               	rlf	___xxtofl@arg,f
  7758  10B3  0DA7               	rlf	___xxtofl@arg+1,f
  7759  10B4  0DA8               	rlf	___xxtofl@arg+2,f
  7760  10B5  0DA9               	rlf	___xxtofl@arg+3,f
  7761  10B6  0BA0               	decfsz	??___xxtofl,f
  7762  10B7  28B1               	goto	u6815
  7763  10B8                     l4033:
  7764  10B8  1BA8               	btfsc	___xxtofl@arg+2,7
  7765  10B9  28BB               	goto	u6821
  7766  10BA  28BC               	goto	u6820
  7767  10BB                     u6821:
  7768  10BB  28C2               	goto	l890
  7769  10BC                     u6820:
  7770  10BC                     l4035:
  7771  10BC  3002               	movlw	2
  7772  10BD  0225               	subwf	___xxtofl@exp,w
  7773  10BE  1803               	skipnc
  7774  10BF  28C1               	goto	u6831
  7775  10C0  28C2               	goto	u6830
  7776  10C1                     u6831:
  7777  10C1  28AD               	goto	l4031
  7778  10C2                     u6830:
  7779  10C2                     l890:
  7780  10C2  1825               	btfsc	___xxtofl@exp,0
  7781  10C3  28C5               	goto	u6841
  7782  10C4  28C6               	goto	u6840
  7783  10C5                     u6841:
  7784  10C5  28CE               	goto	l891
  7785  10C6                     u6840:
  7786  10C6                     l4037:
  7787  10C6  30FF               	movlw	255
  7788  10C7  05A6               	andwf	___xxtofl@arg,f
  7789  10C8  30FF               	movlw	255
  7790  10C9  05A7               	andwf	___xxtofl@arg+1,f
  7791  10CA  307F               	movlw	127
  7792  10CB  05A8               	andwf	___xxtofl@arg+2,f
  7793  10CC  30FF               	movlw	255
  7794  10CD  05A9               	andwf	___xxtofl@arg+3,f
  7795  10CE                     l891:
  7796  10CE  1003               	clrc
  7797  10CF  0CA5               	rrf	___xxtofl@exp,f
  7798  10D0                     l4039:
  7799  10D0  0825               	movf	___xxtofl@exp,w
  7800  10D1  00A0               	movwf	??___xxtofl
  7801  10D2  01A1               	clrf	??___xxtofl+1
  7802  10D3  01A2               	clrf	??___xxtofl+2
  7803  10D4  01A3               	clrf	??___xxtofl+3
  7804  10D5  3018               	movlw	24
  7805  10D6                     u6855:
  7806  10D6  1003               	clrc
  7807  10D7  0DA0               	rlf	??___xxtofl,f
  7808  10D8  0DA1               	rlf	??___xxtofl+1,f
  7809  10D9  0DA2               	rlf	??___xxtofl+2,f
  7810  10DA  0DA3               	rlf	??___xxtofl+3,f
  7811  10DB                     u6850:
  7812  10DB  3EFF               	addlw	-1
  7813  10DC  1D03               	skipz
  7814  10DD  28D6               	goto	u6855
  7815  10DE  0820               	movf	??___xxtofl,w
  7816  10DF  04A6               	iorwf	___xxtofl@arg,f
  7817  10E0  0821               	movf	??___xxtofl+1,w
  7818  10E1  04A7               	iorwf	___xxtofl@arg+1,f
  7819  10E2  0822               	movf	??___xxtofl+2,w
  7820  10E3  04A8               	iorwf	___xxtofl@arg+2,f
  7821  10E4  0823               	movf	??___xxtofl+3,w
  7822  10E5  04A9               	iorwf	___xxtofl@arg+3,f
  7823  10E6                     l4041:
  7824  10E6  0824               	movf	___xxtofl@sign,w
  7825  10E7  1903               	btfsc	3,2
  7826  10E8  28EA               	goto	u6861
  7827  10E9  28EB               	goto	u6860
  7828  10EA                     u6861:
  7829  10EA  28F0               	goto	l4047
  7830  10EB                     u6860:
  7831  10EB                     l4043:
  7832  10EB  1FF6               	btfss	___xxtofl@val+3,7
  7833  10EC  28EE               	goto	u6871
  7834  10ED  28EF               	goto	u6870
  7835  10EE                     u6871:
  7836  10EE  28F0               	goto	l4047
  7837  10EF                     u6870:
  7838  10EF                     l4045:
  7839  10EF  17A9               	bsf	___xxtofl@arg+3,7
  7840  10F0                     l4047:
  7841  10F0  0829               	movf	___xxtofl@arg+3,w
  7842  10F1  00F6               	movwf	?___xxtofl+3
  7843  10F2  0828               	movf	___xxtofl@arg+2,w
  7844  10F3  00F5               	movwf	?___xxtofl+2
  7845  10F4  0827               	movf	___xxtofl@arg+1,w
  7846  10F5  00F4               	movwf	?___xxtofl+1
  7847  10F6  0826               	movf	___xxtofl@arg,w
  7848  10F7  00F3               	movwf	?___xxtofl
  7849  10F8                     l879:
  7850  10F8  0008               	return
  7851  10F9                     __end_of___xxtofl:
  7852                           
  7853                           	psect	text27
  7854  093C                     __ptext27:	
  7855 ;; *************** function ___flmul *****************
  7856 ;; Defined at:
  7857 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  b               4   11[BANK0 ] unsigned char 
  7860 ;;  a               4   15[BANK0 ] unsigned char 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  prod            4   31[BANK0 ] struct .
  7863 ;;  grs             4   25[BANK0 ] unsigned long 
  7864 ;;  temp            2   35[BANK0 ] struct .
  7865 ;;  bexp            1   30[BANK0 ] unsigned char 
  7866 ;;  aexp            1   29[BANK0 ] unsigned char 
  7867 ;;  sign            1   24[BANK0 ] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  4   11[BANK0 ] unsigned char 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7877 ;;      Params:         0       8       0       0       0
  7878 ;;      Locals:         0      13       0       0       0
  7879 ;;      Temps:          0       5       0       0       0
  7880 ;;      Totals:         0      26       0       0       0
  7881 ;;Total ram usage:       26 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    2
  7884 ;; This function calls:
  7885 ;;		__Umul8_16
  7886 ;; This function is called by:
  7887 ;;		_conversor2
  7888 ;;		_fround
  7889 ;;		_scale
  7890 ;;		_sprintf
  7891 ;;		_conversor
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           
  7896                           ;psect for function ___flmul
  7897  093C                     ___flmul:
  7898  093C                     l2641:	
  7899                           ;incstack = 0
  7900                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7901                           
  7902  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7903  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7904  093E  082E               	movf	___flmul@b+3,w
  7905  093F  3980               	andlw	128
  7906  0940  00B3               	movwf	??___flmul
  7907  0941  0833               	movf	??___flmul,w
  7908  0942  00B8               	movwf	___flmul@sign
  7909  0943                     l2643:
  7910  0943  082E               	movf	___flmul@b+3,w
  7911  0944  00B3               	movwf	??___flmul
  7912  0945  0733               	addwf	??___flmul,w
  7913  0946  00B4               	movwf	??___flmul+1
  7914  0947  0834               	movf	??___flmul+1,w
  7915  0948  00BE               	movwf	___flmul@bexp
  7916  0949                     l2645:
  7917  0949  1FAD               	btfss	___flmul@b+2,7
  7918  094A  294C               	goto	u3661
  7919  094B  294D               	goto	u3660
  7920  094C                     u3661:
  7921  094C  294E               	goto	l2649
  7922  094D                     u3660:
  7923  094D                     l2647:
  7924  094D  143E               	bsf	___flmul@bexp,0
  7925  094E                     l2649:
  7926  094E  083E               	movf	___flmul@bexp,w
  7927  094F  1903               	btfsc	3,2
  7928  0950  2952               	goto	u3671
  7929  0951  2953               	goto	u3670
  7930  0952                     u3671:
  7931  0952  2962               	goto	l2657
  7932  0953                     u3670:
  7933  0953                     l2651:
  7934  0953  0A3E               	incf	___flmul@bexp,w
  7935  0954  1D03               	btfss	3,2
  7936  0955  2957               	goto	u3681
  7937  0956  2958               	goto	u3680
  7938  0957                     u3681:
  7939  0957  2960               	goto	l2655
  7940  0958                     u3680:
  7941  0958                     l2653:
  7942  0958  3000               	movlw	0
  7943  0959  00AE               	movwf	___flmul@b+3
  7944  095A  3000               	movlw	0
  7945  095B  00AD               	movwf	___flmul@b+2
  7946  095C  3000               	movlw	0
  7947  095D  00AC               	movwf	___flmul@b+1
  7948  095E  3000               	movlw	0
  7949  095F  00AB               	movwf	___flmul@b
  7950  0960                     l2655:
  7951  0960  17AD               	bsf	___flmul@b+2,7
  7952  0961  296A               	goto	l2659
  7953  0962                     l2657:
  7954  0962  3000               	movlw	0
  7955  0963  00AE               	movwf	___flmul@b+3
  7956  0964  3000               	movlw	0
  7957  0965  00AD               	movwf	___flmul@b+2
  7958  0966  3000               	movlw	0
  7959  0967  00AC               	movwf	___flmul@b+1
  7960  0968  3000               	movlw	0
  7961  0969  00AB               	movwf	___flmul@b
  7962  096A                     l2659:
  7963  096A  0832               	movf	___flmul@a+3,w
  7964  096B  3980               	andlw	128
  7965  096C  00B3               	movwf	??___flmul
  7966  096D  0833               	movf	??___flmul,w
  7967  096E  06B8               	xorwf	___flmul@sign,f
  7968  096F                     l2661:
  7969  096F  0832               	movf	___flmul@a+3,w
  7970  0970  00B3               	movwf	??___flmul
  7971  0971  0733               	addwf	??___flmul,w
  7972  0972  00B4               	movwf	??___flmul+1
  7973  0973  0834               	movf	??___flmul+1,w
  7974  0974  00BD               	movwf	___flmul@aexp
  7975  0975                     l2663:
  7976  0975  1FB1               	btfss	___flmul@a+2,7
  7977  0976  2978               	goto	u3691
  7978  0977  2979               	goto	u3690
  7979  0978                     u3691:
  7980  0978  297A               	goto	l2667
  7981  0979                     u3690:
  7982  0979                     l2665:
  7983  0979  143D               	bsf	___flmul@aexp,0
  7984  097A                     l2667:
  7985  097A  083D               	movf	___flmul@aexp,w
  7986  097B  1903               	btfsc	3,2
  7987  097C  297E               	goto	u3701
  7988  097D  297F               	goto	u3700
  7989  097E                     u3701:
  7990  097E  298E               	goto	l2675
  7991  097F                     u3700:
  7992  097F                     l2669:
  7993  097F  0A3D               	incf	___flmul@aexp,w
  7994  0980  1D03               	btfss	3,2
  7995  0981  2983               	goto	u3711
  7996  0982  2984               	goto	u3710
  7997  0983                     u3711:
  7998  0983  298C               	goto	l2673
  7999  0984                     u3710:
  8000  0984                     l2671:
  8001  0984  3000               	movlw	0
  8002  0985  00B2               	movwf	___flmul@a+3
  8003  0986  3000               	movlw	0
  8004  0987  00B1               	movwf	___flmul@a+2
  8005  0988  3000               	movlw	0
  8006  0989  00B0               	movwf	___flmul@a+1
  8007  098A  3000               	movlw	0
  8008  098B  00AF               	movwf	___flmul@a
  8009  098C                     l2673:
  8010  098C  17B1               	bsf	___flmul@a+2,7
  8011  098D  2996               	goto	l2677
  8012  098E                     l2675:
  8013  098E  3000               	movlw	0
  8014  098F  00B2               	movwf	___flmul@a+3
  8015  0990  3000               	movlw	0
  8016  0991  00B1               	movwf	___flmul@a+2
  8017  0992  3000               	movlw	0
  8018  0993  00B0               	movwf	___flmul@a+1
  8019  0994  3000               	movlw	0
  8020  0995  00AF               	movwf	___flmul@a
  8021  0996                     l2677:
  8022  0996  083D               	movf	___flmul@aexp,w
  8023  0997  1903               	btfsc	3,2
  8024  0998  299A               	goto	u3721
  8025  0999  299B               	goto	u3720
  8026  099A                     u3721:
  8027  099A  29A0               	goto	l2681
  8028  099B                     u3720:
  8029  099B                     l2679:
  8030  099B  083E               	movf	___flmul@bexp,w
  8031  099C  1D03               	btfss	3,2
  8032  099D  299F               	goto	u3731
  8033  099E  29A0               	goto	u3730
  8034  099F                     u3731:
  8035  099F  29A9               	goto	l2685
  8036  09A0                     u3730:
  8037  09A0                     l2681:
  8038  09A0  3000               	movlw	0
  8039  09A1  00AE               	movwf	?___flmul+3
  8040  09A2  3000               	movlw	0
  8041  09A3  00AD               	movwf	?___flmul+2
  8042  09A4  3000               	movlw	0
  8043  09A5  00AC               	movwf	?___flmul+1
  8044  09A6  3000               	movlw	0
  8045  09A7  00AB               	movwf	?___flmul
  8046  09A8  2C9C               	goto	l833
  8047  09A9                     l2685:
  8048  09A9  082B               	movf	___flmul@b,w
  8049  09AA  00B3               	movwf	??___flmul
  8050  09AB  0833               	movf	??___flmul,w
  8051  09AC  00F3               	movwf	__Umul8_16@multiplicand
  8052  09AD  0831               	movf	___flmul@a+2,w
  8053  09AE  160A  158A  23B7  120A  158A  	fcall	__Umul8_16
  8054  09B3  0874               	movf	?__Umul8_16+1,w
  8055  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  8056  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  8057  09B6  00C4               	movwf	___flmul@temp+1
  8058  09B7  0873               	movf	?__Umul8_16,w
  8059  09B8  00C3               	movwf	___flmul@temp
  8060  09B9                     l2687:
  8061  09B9  0843               	movf	___flmul@temp,w
  8062  09BA  00B3               	movwf	??___flmul
  8063  09BB  01B4               	clrf	??___flmul+1
  8064  09BC  01B5               	clrf	??___flmul+2
  8065  09BD  01B6               	clrf	??___flmul+3
  8066  09BE  0836               	movf	??___flmul+3,w
  8067  09BF  00BC               	movwf	___flmul@grs+3
  8068  09C0  0835               	movf	??___flmul+2,w
  8069  09C1  00BB               	movwf	___flmul@grs+2
  8070  09C2  0834               	movf	??___flmul+1,w
  8071  09C3  00BA               	movwf	___flmul@grs+1
  8072  09C4  0833               	movf	??___flmul,w
  8073  09C5  00B9               	movwf	___flmul@grs
  8074  09C6                     l2689:
  8075  09C6  0844               	movf	___flmul@temp+1,w
  8076  09C7  00B3               	movwf	??___flmul
  8077  09C8  01B4               	clrf	??___flmul+1
  8078  09C9  01B5               	clrf	??___flmul+2
  8079  09CA  01B6               	clrf	??___flmul+3
  8080  09CB  0836               	movf	??___flmul+3,w
  8081  09CC  00C2               	movwf	___flmul@prod+3
  8082  09CD  0835               	movf	??___flmul+2,w
  8083  09CE  00C1               	movwf	___flmul@prod+2
  8084  09CF  0834               	movf	??___flmul+1,w
  8085  09D0  00C0               	movwf	___flmul@prod+1
  8086  09D1  0833               	movf	??___flmul,w
  8087  09D2  00BF               	movwf	___flmul@prod
  8088  09D3  082C               	movf	___flmul@b+1,w
  8089  09D4  00B3               	movwf	??___flmul
  8090  09D5  0833               	movf	??___flmul,w
  8091  09D6  00F3               	movwf	__Umul8_16@multiplicand
  8092  09D7  0830               	movf	___flmul@a+1,w
  8093  09D8  160A  158A  23B7  120A  158A  	fcall	__Umul8_16
  8094  09DD  0874               	movf	?__Umul8_16+1,w
  8095  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  8096  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  8097  09E0  00C4               	movwf	___flmul@temp+1
  8098  09E1  0873               	movf	?__Umul8_16,w
  8099  09E2  00C3               	movwf	___flmul@temp
  8100  09E3                     l2691:
  8101  09E3  0843               	movf	___flmul@temp,w
  8102  09E4  00B3               	movwf	??___flmul
  8103  09E5  01B4               	clrf	??___flmul+1
  8104  09E6  01B5               	clrf	??___flmul+2
  8105  09E7  01B6               	clrf	??___flmul+3
  8106  09E8  0833               	movf	??___flmul,w
  8107  09E9  07B9               	addwf	___flmul@grs,f
  8108  09EA  0834               	movf	??___flmul+1,w
  8109  09EB  1103               	clrz
  8110  09EC  1803               	skipnc
  8111  09ED  3E01               	addlw	1
  8112  09EE  1903               	skipnz
  8113  09EF  29F1               	goto	u3741
  8114  09F0  07BA               	addwf	___flmul@grs+1,f
  8115  09F1                     u3741:
  8116  09F1  0835               	movf	??___flmul+2,w
  8117  09F2  1103               	clrz
  8118  09F3  1803               	skipnc
  8119  09F4  3E01               	addlw	1
  8120  09F5  1903               	skipnz
  8121  09F6  29F8               	goto	u3742
  8122  09F7  07BB               	addwf	___flmul@grs+2,f
  8123  09F8                     u3742:
  8124  09F8  0836               	movf	??___flmul+3,w
  8125  09F9  1103               	clrz
  8126  09FA  1803               	skipnc
  8127  09FB  3E01               	addlw	1
  8128  09FC  1903               	skipnz
  8129  09FD  29FF               	goto	u3743
  8130  09FE  07BC               	addwf	___flmul@grs+3,f
  8131  09FF                     u3743:
  8132  09FF                     l2693:
  8133  09FF  0844               	movf	___flmul@temp+1,w
  8134  0A00  00B3               	movwf	??___flmul
  8135  0A01  01B4               	clrf	??___flmul+1
  8136  0A02  01B5               	clrf	??___flmul+2
  8137  0A03  01B6               	clrf	??___flmul+3
  8138  0A04  0833               	movf	??___flmul,w
  8139  0A05  07BF               	addwf	___flmul@prod,f
  8140  0A06  0834               	movf	??___flmul+1,w
  8141  0A07  1103               	clrz
  8142  0A08  1803               	skipnc
  8143  0A09  3E01               	addlw	1
  8144  0A0A  1903               	skipnz
  8145  0A0B  2A0D               	goto	u3751
  8146  0A0C  07C0               	addwf	___flmul@prod+1,f
  8147  0A0D                     u3751:
  8148  0A0D  0835               	movf	??___flmul+2,w
  8149  0A0E  1103               	clrz
  8150  0A0F  1803               	skipnc
  8151  0A10  3E01               	addlw	1
  8152  0A11  1903               	skipnz
  8153  0A12  2A14               	goto	u3752
  8154  0A13  07C1               	addwf	___flmul@prod+2,f
  8155  0A14                     u3752:
  8156  0A14  0836               	movf	??___flmul+3,w
  8157  0A15  1103               	clrz
  8158  0A16  1803               	skipnc
  8159  0A17  3E01               	addlw	1
  8160  0A18  1903               	skipnz
  8161  0A19  2A1B               	goto	u3753
  8162  0A1A  07C2               	addwf	___flmul@prod+3,f
  8163  0A1B                     u3753:
  8164  0A1B  082D               	movf	___flmul@b+2,w
  8165  0A1C  00B3               	movwf	??___flmul
  8166  0A1D  0833               	movf	??___flmul,w
  8167  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  8168  0A1F  082F               	movf	___flmul@a,w
  8169  0A20  160A  158A  23B7  120A  158A  	fcall	__Umul8_16
  8170  0A25  0874               	movf	?__Umul8_16+1,w
  8171  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8172  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8173  0A28  00C4               	movwf	___flmul@temp+1
  8174  0A29  0873               	movf	?__Umul8_16,w
  8175  0A2A  00C3               	movwf	___flmul@temp
  8176  0A2B                     l2695:
  8177  0A2B  0843               	movf	___flmul@temp,w
  8178  0A2C  00B3               	movwf	??___flmul
  8179  0A2D  01B4               	clrf	??___flmul+1
  8180  0A2E  01B5               	clrf	??___flmul+2
  8181  0A2F  01B6               	clrf	??___flmul+3
  8182  0A30  0833               	movf	??___flmul,w
  8183  0A31  07B9               	addwf	___flmul@grs,f
  8184  0A32  0834               	movf	??___flmul+1,w
  8185  0A33  1103               	clrz
  8186  0A34  1803               	skipnc
  8187  0A35  3E01               	addlw	1
  8188  0A36  1903               	skipnz
  8189  0A37  2A39               	goto	u3761
  8190  0A38  07BA               	addwf	___flmul@grs+1,f
  8191  0A39                     u3761:
  8192  0A39  0835               	movf	??___flmul+2,w
  8193  0A3A  1103               	clrz
  8194  0A3B  1803               	skipnc
  8195  0A3C  3E01               	addlw	1
  8196  0A3D  1903               	skipnz
  8197  0A3E  2A40               	goto	u3762
  8198  0A3F  07BB               	addwf	___flmul@grs+2,f
  8199  0A40                     u3762:
  8200  0A40  0836               	movf	??___flmul+3,w
  8201  0A41  1103               	clrz
  8202  0A42  1803               	skipnc
  8203  0A43  3E01               	addlw	1
  8204  0A44  1903               	skipnz
  8205  0A45  2A47               	goto	u3763
  8206  0A46  07BC               	addwf	___flmul@grs+3,f
  8207  0A47                     u3763:
  8208  0A47                     l2697:
  8209  0A47  0844               	movf	___flmul@temp+1,w
  8210  0A48  00B3               	movwf	??___flmul
  8211  0A49  01B4               	clrf	??___flmul+1
  8212  0A4A  01B5               	clrf	??___flmul+2
  8213  0A4B  01B6               	clrf	??___flmul+3
  8214  0A4C  0833               	movf	??___flmul,w
  8215  0A4D  07BF               	addwf	___flmul@prod,f
  8216  0A4E  0834               	movf	??___flmul+1,w
  8217  0A4F  1103               	clrz
  8218  0A50  1803               	skipnc
  8219  0A51  3E01               	addlw	1
  8220  0A52  1903               	skipnz
  8221  0A53  2A55               	goto	u3771
  8222  0A54  07C0               	addwf	___flmul@prod+1,f
  8223  0A55                     u3771:
  8224  0A55  0835               	movf	??___flmul+2,w
  8225  0A56  1103               	clrz
  8226  0A57  1803               	skipnc
  8227  0A58  3E01               	addlw	1
  8228  0A59  1903               	skipnz
  8229  0A5A  2A5C               	goto	u3772
  8230  0A5B  07C1               	addwf	___flmul@prod+2,f
  8231  0A5C                     u3772:
  8232  0A5C  0836               	movf	??___flmul+3,w
  8233  0A5D  1103               	clrz
  8234  0A5E  1803               	skipnc
  8235  0A5F  3E01               	addlw	1
  8236  0A60  1903               	skipnz
  8237  0A61  2A63               	goto	u3773
  8238  0A62  07C2               	addwf	___flmul@prod+3,f
  8239  0A63                     u3773:
  8240  0A63                     l2699:
  8241  0A63  3008               	movlw	8
  8242  0A64  00B3               	movwf	??___flmul
  8243  0A65                     u3785:
  8244  0A65  1003               	clrc
  8245  0A66  0DB9               	rlf	___flmul@grs,f
  8246  0A67  0DBA               	rlf	___flmul@grs+1,f
  8247  0A68  0DBB               	rlf	___flmul@grs+2,f
  8248  0A69  0DBC               	rlf	___flmul@grs+3,f
  8249  0A6A  0BB3               	decfsz	??___flmul,f
  8250  0A6B  2A65               	goto	u3785
  8251  0A6C                     l2701:
  8252  0A6C  082C               	movf	___flmul@b+1,w
  8253  0A6D  00B3               	movwf	??___flmul
  8254  0A6E  0833               	movf	??___flmul,w
  8255  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  8256  0A70  082F               	movf	___flmul@a,w
  8257  0A71  160A  158A  23B7  120A  158A  	fcall	__Umul8_16
  8258  0A76  0874               	movf	?__Umul8_16+1,w
  8259  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8260  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8261  0A79  00C4               	movwf	___flmul@temp+1
  8262  0A7A  0873               	movf	?__Umul8_16,w
  8263  0A7B  00C3               	movwf	___flmul@temp
  8264  0A7C                     l2703:
  8265  0A7C  0843               	movf	___flmul@temp,w
  8266  0A7D  00B3               	movwf	??___flmul
  8267  0A7E  0844               	movf	___flmul@temp+1,w
  8268  0A7F  00B4               	movwf	??___flmul+1
  8269  0A80  01B5               	clrf	??___flmul+2
  8270  0A81  01B6               	clrf	??___flmul+3
  8271  0A82  0833               	movf	??___flmul,w
  8272  0A83  07B9               	addwf	___flmul@grs,f
  8273  0A84  0834               	movf	??___flmul+1,w
  8274  0A85  1103               	clrz
  8275  0A86  1803               	skipnc
  8276  0A87  3E01               	addlw	1
  8277  0A88  1903               	skipnz
  8278  0A89  2A8B               	goto	u3791
  8279  0A8A  07BA               	addwf	___flmul@grs+1,f
  8280  0A8B                     u3791:
  8281  0A8B  0835               	movf	??___flmul+2,w
  8282  0A8C  1103               	clrz
  8283  0A8D  1803               	skipnc
  8284  0A8E  3E01               	addlw	1
  8285  0A8F  1903               	skipnz
  8286  0A90  2A92               	goto	u3792
  8287  0A91  07BB               	addwf	___flmul@grs+2,f
  8288  0A92                     u3792:
  8289  0A92  0836               	movf	??___flmul+3,w
  8290  0A93  1103               	clrz
  8291  0A94  1803               	skipnc
  8292  0A95  3E01               	addlw	1
  8293  0A96  1903               	skipnz
  8294  0A97  2A99               	goto	u3793
  8295  0A98  07BC               	addwf	___flmul@grs+3,f
  8296  0A99                     u3793:
  8297  0A99                     l2705:
  8298  0A99  082B               	movf	___flmul@b,w
  8299  0A9A  00B3               	movwf	??___flmul
  8300  0A9B  0833               	movf	??___flmul,w
  8301  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  8302  0A9D  0830               	movf	___flmul@a+1,w
  8303  0A9E  160A  158A  23B7  120A  158A  	fcall	__Umul8_16
  8304  0AA3  0874               	movf	?__Umul8_16+1,w
  8305  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8306  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8307  0AA6  00C4               	movwf	___flmul@temp+1
  8308  0AA7  0873               	movf	?__Umul8_16,w
  8309  0AA8  00C3               	movwf	___flmul@temp
  8310  0AA9                     l2707:
  8311  0AA9  0843               	movf	___flmul@temp,w
  8312  0AAA  00B3               	movwf	??___flmul
  8313  0AAB  0844               	movf	___flmul@temp+1,w
  8314  0AAC  00B4               	movwf	??___flmul+1
  8315  0AAD  01B5               	clrf	??___flmul+2
  8316  0AAE  01B6               	clrf	??___flmul+3
  8317  0AAF  0833               	movf	??___flmul,w
  8318  0AB0  07B9               	addwf	___flmul@grs,f
  8319  0AB1  0834               	movf	??___flmul+1,w
  8320  0AB2  1103               	clrz
  8321  0AB3  1803               	skipnc
  8322  0AB4  3E01               	addlw	1
  8323  0AB5  1903               	skipnz
  8324  0AB6  2AB8               	goto	u3801
  8325  0AB7  07BA               	addwf	___flmul@grs+1,f
  8326  0AB8                     u3801:
  8327  0AB8  0835               	movf	??___flmul+2,w
  8328  0AB9  1103               	clrz
  8329  0ABA  1803               	skipnc
  8330  0ABB  3E01               	addlw	1
  8331  0ABC  1903               	skipnz
  8332  0ABD  2ABF               	goto	u3802
  8333  0ABE  07BB               	addwf	___flmul@grs+2,f
  8334  0ABF                     u3802:
  8335  0ABF  0836               	movf	??___flmul+3,w
  8336  0AC0  1103               	clrz
  8337  0AC1  1803               	skipnc
  8338  0AC2  3E01               	addlw	1
  8339  0AC3  1903               	skipnz
  8340  0AC4  2AC6               	goto	u3803
  8341  0AC5  07BC               	addwf	___flmul@grs+3,f
  8342  0AC6                     u3803:
  8343  0AC6                     l2709:
  8344  0AC6  3008               	movlw	8
  8345  0AC7  00B3               	movwf	??___flmul
  8346  0AC8                     u3815:
  8347  0AC8  1003               	clrc
  8348  0AC9  0DB9               	rlf	___flmul@grs,f
  8349  0ACA  0DBA               	rlf	___flmul@grs+1,f
  8350  0ACB  0DBB               	rlf	___flmul@grs+2,f
  8351  0ACC  0DBC               	rlf	___flmul@grs+3,f
  8352  0ACD  0BB3               	decfsz	??___flmul,f
  8353  0ACE  2AC8               	goto	u3815
  8354  0ACF  082B               	movf	___flmul@b,w
  8355  0AD0  00B3               	movwf	??___flmul
  8356  0AD1  0833               	movf	??___flmul,w
  8357  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8358  0AD3  082F               	movf	___flmul@a,w
  8359  0AD4  160A  158A  23B7  120A  158A  	fcall	__Umul8_16
  8360  0AD9  0874               	movf	?__Umul8_16+1,w
  8361  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8362  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8363  0ADC  00C4               	movwf	___flmul@temp+1
  8364  0ADD  0873               	movf	?__Umul8_16,w
  8365  0ADE  00C3               	movwf	___flmul@temp
  8366  0ADF                     l2711:
  8367  0ADF  0843               	movf	___flmul@temp,w
  8368  0AE0  00B3               	movwf	??___flmul
  8369  0AE1  0844               	movf	___flmul@temp+1,w
  8370  0AE2  00B4               	movwf	??___flmul+1
  8371  0AE3  01B5               	clrf	??___flmul+2
  8372  0AE4  01B6               	clrf	??___flmul+3
  8373  0AE5  0833               	movf	??___flmul,w
  8374  0AE6  07B9               	addwf	___flmul@grs,f
  8375  0AE7  0834               	movf	??___flmul+1,w
  8376  0AE8  1103               	clrz
  8377  0AE9  1803               	skipnc
  8378  0AEA  3E01               	addlw	1
  8379  0AEB  1903               	skipnz
  8380  0AEC  2AEE               	goto	u3821
  8381  0AED  07BA               	addwf	___flmul@grs+1,f
  8382  0AEE                     u3821:
  8383  0AEE  0835               	movf	??___flmul+2,w
  8384  0AEF  1103               	clrz
  8385  0AF0  1803               	skipnc
  8386  0AF1  3E01               	addlw	1
  8387  0AF2  1903               	skipnz
  8388  0AF3  2AF5               	goto	u3822
  8389  0AF4  07BB               	addwf	___flmul@grs+2,f
  8390  0AF5                     u3822:
  8391  0AF5  0836               	movf	??___flmul+3,w
  8392  0AF6  1103               	clrz
  8393  0AF7  1803               	skipnc
  8394  0AF8  3E01               	addlw	1
  8395  0AF9  1903               	skipnz
  8396  0AFA  2AFC               	goto	u3823
  8397  0AFB  07BC               	addwf	___flmul@grs+3,f
  8398  0AFC                     u3823:
  8399  0AFC                     l2713:
  8400  0AFC  082C               	movf	___flmul@b+1,w
  8401  0AFD  00B3               	movwf	??___flmul
  8402  0AFE  0833               	movf	??___flmul,w
  8403  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  8404  0B00  0831               	movf	___flmul@a+2,w
  8405  0B01  160A  158A  23B7  120A  158A  	fcall	__Umul8_16
  8406  0B06  0874               	movf	?__Umul8_16+1,w
  8407  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8408  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8409  0B09  00C4               	movwf	___flmul@temp+1
  8410  0B0A  0873               	movf	?__Umul8_16,w
  8411  0B0B  00C3               	movwf	___flmul@temp
  8412  0B0C  0843               	movf	___flmul@temp,w
  8413  0B0D  00B3               	movwf	??___flmul
  8414  0B0E  0844               	movf	___flmul@temp+1,w
  8415  0B0F  00B4               	movwf	??___flmul+1
  8416  0B10  01B5               	clrf	??___flmul+2
  8417  0B11  01B6               	clrf	??___flmul+3
  8418  0B12  0833               	movf	??___flmul,w
  8419  0B13  07BF               	addwf	___flmul@prod,f
  8420  0B14  0834               	movf	??___flmul+1,w
  8421  0B15  1103               	clrz
  8422  0B16  1803               	skipnc
  8423  0B17  3E01               	addlw	1
  8424  0B18  1903               	skipnz
  8425  0B19  2B1B               	goto	u3831
  8426  0B1A  07C0               	addwf	___flmul@prod+1,f
  8427  0B1B                     u3831:
  8428  0B1B  0835               	movf	??___flmul+2,w
  8429  0B1C  1103               	clrz
  8430  0B1D  1803               	skipnc
  8431  0B1E  3E01               	addlw	1
  8432  0B1F  1903               	skipnz
  8433  0B20  2B22               	goto	u3832
  8434  0B21  07C1               	addwf	___flmul@prod+2,f
  8435  0B22                     u3832:
  8436  0B22  0836               	movf	??___flmul+3,w
  8437  0B23  1103               	clrz
  8438  0B24  1803               	skipnc
  8439  0B25  3E01               	addlw	1
  8440  0B26  1903               	skipnz
  8441  0B27  2B29               	goto	u3833
  8442  0B28  07C2               	addwf	___flmul@prod+3,f
  8443  0B29                     u3833:
  8444  0B29                     l2715:
  8445  0B29  082D               	movf	___flmul@b+2,w
  8446  0B2A  00B3               	movwf	??___flmul
  8447  0B2B  0833               	movf	??___flmul,w
  8448  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  8449  0B2D  0830               	movf	___flmul@a+1,w
  8450  0B2E  160A  158A  23B7  120A  158A  	fcall	__Umul8_16
  8451  0B33  0874               	movf	?__Umul8_16+1,w
  8452  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8453  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8454  0B36  00C4               	movwf	___flmul@temp+1
  8455  0B37  0873               	movf	?__Umul8_16,w
  8456  0B38  00C3               	movwf	___flmul@temp
  8457  0B39                     l2717:
  8458  0B39  0843               	movf	___flmul@temp,w
  8459  0B3A  00B3               	movwf	??___flmul
  8460  0B3B  0844               	movf	___flmul@temp+1,w
  8461  0B3C  00B4               	movwf	??___flmul+1
  8462  0B3D  01B5               	clrf	??___flmul+2
  8463  0B3E  01B6               	clrf	??___flmul+3
  8464  0B3F  0833               	movf	??___flmul,w
  8465  0B40  07BF               	addwf	___flmul@prod,f
  8466  0B41  0834               	movf	??___flmul+1,w
  8467  0B42  1103               	clrz
  8468  0B43  1803               	skipnc
  8469  0B44  3E01               	addlw	1
  8470  0B45  1903               	skipnz
  8471  0B46  2B48               	goto	u3841
  8472  0B47  07C0               	addwf	___flmul@prod+1,f
  8473  0B48                     u3841:
  8474  0B48  0835               	movf	??___flmul+2,w
  8475  0B49  1103               	clrz
  8476  0B4A  1803               	skipnc
  8477  0B4B  3E01               	addlw	1
  8478  0B4C  1903               	skipnz
  8479  0B4D  2B4F               	goto	u3842
  8480  0B4E  07C1               	addwf	___flmul@prod+2,f
  8481  0B4F                     u3842:
  8482  0B4F  0836               	movf	??___flmul+3,w
  8483  0B50  1103               	clrz
  8484  0B51  1803               	skipnc
  8485  0B52  3E01               	addlw	1
  8486  0B53  1903               	skipnz
  8487  0B54  2B56               	goto	u3843
  8488  0B55  07C2               	addwf	___flmul@prod+3,f
  8489  0B56                     u3843:
  8490  0B56  082D               	movf	___flmul@b+2,w
  8491  0B57  00B3               	movwf	??___flmul
  8492  0B58  0833               	movf	??___flmul,w
  8493  0B59  00F3               	movwf	__Umul8_16@multiplicand
  8494  0B5A  0831               	movf	___flmul@a+2,w
  8495  0B5B  160A  158A  23B7  120A  158A  	fcall	__Umul8_16
  8496  0B60  0874               	movf	?__Umul8_16+1,w
  8497  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8498  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8499  0B63  00C4               	movwf	___flmul@temp+1
  8500  0B64  0873               	movf	?__Umul8_16,w
  8501  0B65  00C3               	movwf	___flmul@temp
  8502  0B66                     l2719:
  8503  0B66  0843               	movf	___flmul@temp,w
  8504  0B67  00B3               	movwf	??___flmul
  8505  0B68  0844               	movf	___flmul@temp+1,w
  8506  0B69  00B4               	movwf	??___flmul+1
  8507  0B6A  01B5               	clrf	??___flmul+2
  8508  0B6B  01B6               	clrf	??___flmul+3
  8509  0B6C  3008               	movlw	8
  8510  0B6D                     u3855:
  8511  0B6D  1003               	clrc
  8512  0B6E  0DB3               	rlf	??___flmul,f
  8513  0B6F  0DB4               	rlf	??___flmul+1,f
  8514  0B70  0DB5               	rlf	??___flmul+2,f
  8515  0B71  0DB6               	rlf	??___flmul+3,f
  8516  0B72                     u3850:
  8517  0B72  3EFF               	addlw	-1
  8518  0B73  1D03               	skipz
  8519  0B74  2B6D               	goto	u3855
  8520  0B75  0833               	movf	??___flmul,w
  8521  0B76  07BF               	addwf	___flmul@prod,f
  8522  0B77  0834               	movf	??___flmul+1,w
  8523  0B78  1103               	clrz
  8524  0B79  1803               	skipnc
  8525  0B7A  3E01               	addlw	1
  8526  0B7B  1903               	skipnz
  8527  0B7C  2B7E               	goto	u3861
  8528  0B7D  07C0               	addwf	___flmul@prod+1,f
  8529  0B7E                     u3861:
  8530  0B7E  0835               	movf	??___flmul+2,w
  8531  0B7F  1103               	clrz
  8532  0B80  1803               	skipnc
  8533  0B81  3E01               	addlw	1
  8534  0B82  1903               	skipnz
  8535  0B83  2B85               	goto	u3862
  8536  0B84  07C1               	addwf	___flmul@prod+2,f
  8537  0B85                     u3862:
  8538  0B85  0836               	movf	??___flmul+3,w
  8539  0B86  1103               	clrz
  8540  0B87  1803               	skipnc
  8541  0B88  3E01               	addlw	1
  8542  0B89  1903               	skipnz
  8543  0B8A  2B8C               	goto	u3863
  8544  0B8B  07C2               	addwf	___flmul@prod+3,f
  8545  0B8C                     u3863:
  8546  0B8C                     l2721:
  8547  0B8C  0839               	movf	___flmul@grs,w
  8548  0B8D  00B3               	movwf	??___flmul
  8549  0B8E  083A               	movf	___flmul@grs+1,w
  8550  0B8F  00B4               	movwf	??___flmul+1
  8551  0B90  083B               	movf	___flmul@grs+2,w
  8552  0B91  00B5               	movwf	??___flmul+2
  8553  0B92  083C               	movf	___flmul@grs+3,w
  8554  0B93  00B6               	movwf	??___flmul+3
  8555  0B94  3018               	movlw	24
  8556  0B95                     u3875:
  8557  0B95  1003               	clrc
  8558  0B96  0CB6               	rrf	??___flmul+3,f
  8559  0B97  0CB5               	rrf	??___flmul+2,f
  8560  0B98  0CB4               	rrf	??___flmul+1,f
  8561  0B99  0CB3               	rrf	??___flmul,f
  8562  0B9A                     u3870:
  8563  0B9A  3EFF               	addlw	-1
  8564  0B9B  1D03               	skipz
  8565  0B9C  2B95               	goto	u3875
  8566  0B9D  0833               	movf	??___flmul,w
  8567  0B9E  07BF               	addwf	___flmul@prod,f
  8568  0B9F  0834               	movf	??___flmul+1,w
  8569  0BA0  1103               	clrz
  8570  0BA1  1803               	skipnc
  8571  0BA2  3E01               	addlw	1
  8572  0BA3  1903               	skipnz
  8573  0BA4  2BA6               	goto	u3881
  8574  0BA5  07C0               	addwf	___flmul@prod+1,f
  8575  0BA6                     u3881:
  8576  0BA6  0835               	movf	??___flmul+2,w
  8577  0BA7  1103               	clrz
  8578  0BA8  1803               	skipnc
  8579  0BA9  3E01               	addlw	1
  8580  0BAA  1903               	skipnz
  8581  0BAB  2BAD               	goto	u3882
  8582  0BAC  07C1               	addwf	___flmul@prod+2,f
  8583  0BAD                     u3882:
  8584  0BAD  0836               	movf	??___flmul+3,w
  8585  0BAE  1103               	clrz
  8586  0BAF  1803               	skipnc
  8587  0BB0  3E01               	addlw	1
  8588  0BB1  1903               	skipnz
  8589  0BB2  2BB4               	goto	u3883
  8590  0BB3  07C2               	addwf	___flmul@prod+3,f
  8591  0BB4                     u3883:
  8592  0BB4                     l2723:
  8593  0BB4  3008               	movlw	8
  8594  0BB5  00B3               	movwf	??___flmul
  8595  0BB6                     u3895:
  8596  0BB6  1003               	clrc
  8597  0BB7  0DB9               	rlf	___flmul@grs,f
  8598  0BB8  0DBA               	rlf	___flmul@grs+1,f
  8599  0BB9  0DBB               	rlf	___flmul@grs+2,f
  8600  0BBA  0DBC               	rlf	___flmul@grs+3,f
  8601  0BBB  0BB3               	decfsz	??___flmul,f
  8602  0BBC  2BB6               	goto	u3895
  8603  0BBD                     l2725:
  8604  0BBD  083E               	movf	___flmul@bexp,w
  8605  0BBE  073D               	addwf	___flmul@aexp,w
  8606  0BBF  00B3               	movwf	??___flmul
  8607  0BC0  01B4               	clrf	??___flmul+1
  8608  0BC1  0DB4               	rlf	??___flmul+1,f
  8609  0BC2  0833               	movf	??___flmul,w
  8610  0BC3  3E82               	addlw	130
  8611  0BC4  00C3               	movwf	___flmul@temp
  8612  0BC5  0834               	movf	??___flmul+1,w
  8613  0BC6  1803               	skipnc
  8614  0BC7  3E01               	addlw	1
  8615  0BC8  3EFF               	addlw	255
  8616  0BC9  00C4               	movwf	___flmul@temp+1
  8617  0BCA  2BE8               	goto	l2737
  8618  0BCB                     l2727:
  8619  0BCB  3001               	movlw	1
  8620  0BCC  00B3               	movwf	??___flmul
  8621  0BCD                     u3905:
  8622  0BCD  1003               	clrc
  8623  0BCE  0DBF               	rlf	___flmul@prod,f
  8624  0BCF  0DC0               	rlf	___flmul@prod+1,f
  8625  0BD0  0DC1               	rlf	___flmul@prod+2,f
  8626  0BD1  0DC2               	rlf	___flmul@prod+3,f
  8627  0BD2  0BB3               	decfsz	??___flmul,f
  8628  0BD3  2BCD               	goto	u3905
  8629  0BD4                     l2729:
  8630  0BD4  1FBC               	btfss	___flmul@grs+3,7
  8631  0BD5  2BD7               	goto	u3911
  8632  0BD6  2BD8               	goto	u3910
  8633  0BD7                     u3911:
  8634  0BD7  2BD9               	goto	l2733
  8635  0BD8                     u3910:
  8636  0BD8                     l2731:
  8637  0BD8  143F               	bsf	___flmul@prod,0
  8638  0BD9                     l2733:
  8639  0BD9  3001               	movlw	1
  8640  0BDA  00B3               	movwf	??___flmul
  8641  0BDB                     u3925:
  8642  0BDB  1003               	clrc
  8643  0BDC  0DB9               	rlf	___flmul@grs,f
  8644  0BDD  0DBA               	rlf	___flmul@grs+1,f
  8645  0BDE  0DBB               	rlf	___flmul@grs+2,f
  8646  0BDF  0DBC               	rlf	___flmul@grs+3,f
  8647  0BE0  0BB3               	decfsz	??___flmul,f
  8648  0BE1  2BDB               	goto	u3925
  8649  0BE2                     l2735:
  8650  0BE2  30FF               	movlw	255
  8651  0BE3  07C3               	addwf	___flmul@temp,f
  8652  0BE4  1803               	skipnc
  8653  0BE5  0AC4               	incf	___flmul@temp+1,f
  8654  0BE6  30FF               	movlw	255
  8655  0BE7  07C4               	addwf	___flmul@temp+1,f
  8656  0BE8                     l2737:
  8657  0BE8  1FC1               	btfss	___flmul@prod+2,7
  8658  0BE9  2BEB               	goto	u3931
  8659  0BEA  2BEC               	goto	u3930
  8660  0BEB                     u3931:
  8661  0BEB  2BCB               	goto	l2727
  8662  0BEC                     u3930:
  8663  0BEC                     l2739:
  8664  0BEC  01BD               	clrf	___flmul@aexp
  8665  0BED                     l2741:
  8666  0BED  1FBC               	btfss	___flmul@grs+3,7
  8667  0BEE  2BF0               	goto	u3941
  8668  0BEF  2BF1               	goto	u3940
  8669  0BF0                     u3941:
  8670  0BF0  2C0D               	goto	l2749
  8671  0BF1                     u3940:
  8672  0BF1                     l2743:
  8673  0BF1  30FF               	movlw	255
  8674  0BF2  0539               	andwf	___flmul@grs,w
  8675  0BF3  00B3               	movwf	??___flmul
  8676  0BF4  30FF               	movlw	255
  8677  0BF5  053A               	andwf	___flmul@grs+1,w
  8678  0BF6  00B4               	movwf	??___flmul+1
  8679  0BF7  30FF               	movlw	255
  8680  0BF8  053B               	andwf	___flmul@grs+2,w
  8681  0BF9  00B5               	movwf	??___flmul+2
  8682  0BFA  307F               	movlw	127
  8683  0BFB  053C               	andwf	___flmul@grs+3,w
  8684  0BFC  00B6               	movwf	??___flmul+3
  8685  0BFD  0836               	movf	??___flmul+3,w
  8686  0BFE  0435               	iorwf	??___flmul+2,w
  8687  0BFF  0434               	iorwf	??___flmul+1,w
  8688  0C00  0433               	iorwf	??___flmul,w
  8689  0C01  1903               	skipnz
  8690  0C02  2C04               	goto	u3951
  8691  0C03  2C05               	goto	u3950
  8692  0C04                     u3951:
  8693  0C04  2C08               	goto	l839
  8694  0C05                     u3950:
  8695  0C05                     l2745:
  8696  0C05  01BD               	clrf	___flmul@aexp
  8697  0C06  0ABD               	incf	___flmul@aexp,f
  8698  0C07  2C0D               	goto	l2749
  8699  0C08                     l839:
  8700  0C08  1C3F               	btfss	___flmul@prod,0
  8701  0C09  2C0B               	goto	u3961
  8702  0C0A  2C0C               	goto	u3960
  8703  0C0B                     u3961:
  8704  0C0B  2C0D               	goto	l2749
  8705  0C0C                     u3960:
  8706  0C0C  2C05               	goto	l2745
  8707  0C0D                     l2749:
  8708  0C0D  083D               	movf	___flmul@aexp,w
  8709  0C0E  1903               	btfsc	3,2
  8710  0C0F  2C11               	goto	u3971
  8711  0C10  2C12               	goto	u3970
  8712  0C11                     u3971:
  8713  0C11  2C43               	goto	l2759
  8714  0C12                     u3970:
  8715  0C12                     l2751:
  8716  0C12  3001               	movlw	1
  8717  0C13  07BF               	addwf	___flmul@prod,f
  8718  0C14  3000               	movlw	0
  8719  0C15  1803               	skipnc
  8720  0C16  3001               	movlw	1
  8721  0C17  07C0               	addwf	___flmul@prod+1,f
  8722  0C18  3000               	movlw	0
  8723  0C19  1803               	skipnc
  8724  0C1A  3001               	movlw	1
  8725  0C1B  07C1               	addwf	___flmul@prod+2,f
  8726  0C1C  3000               	movlw	0
  8727  0C1D  1803               	skipnc
  8728  0C1E  3001               	movlw	1
  8729  0C1F  07C2               	addwf	___flmul@prod+3,f
  8730  0C20                     l2753:
  8731  0C20  1C42               	btfss	___flmul@prod+3,0
  8732  0C21  2C23               	goto	u3981
  8733  0C22  2C24               	goto	u3980
  8734  0C23                     u3981:
  8735  0C23  2C43               	goto	l2759
  8736  0C24                     u3980:
  8737  0C24                     l2755:
  8738  0C24  083F               	movf	___flmul@prod,w
  8739  0C25  00B3               	movwf	??___flmul
  8740  0C26  0840               	movf	___flmul@prod+1,w
  8741  0C27  00B4               	movwf	??___flmul+1
  8742  0C28  0841               	movf	___flmul@prod+2,w
  8743  0C29  00B5               	movwf	??___flmul+2
  8744  0C2A  0842               	movf	___flmul@prod+3,w
  8745  0C2B  00B6               	movwf	??___flmul+3
  8746  0C2C  3001               	movlw	1
  8747  0C2D  00B7               	movwf	??___flmul+4
  8748  0C2E                     u3995:
  8749  0C2E  0D36               	rlf	??___flmul+3,w
  8750  0C2F  0CB6               	rrf	??___flmul+3,f
  8751  0C30  0CB5               	rrf	??___flmul+2,f
  8752  0C31  0CB4               	rrf	??___flmul+1,f
  8753  0C32  0CB3               	rrf	??___flmul,f
  8754  0C33                     u3990:
  8755  0C33  0BB7               	decfsz	??___flmul+4,f
  8756  0C34  2C2E               	goto	u3995
  8757  0C35  0836               	movf	??___flmul+3,w
  8758  0C36  00C2               	movwf	___flmul@prod+3
  8759  0C37  0835               	movf	??___flmul+2,w
  8760  0C38  00C1               	movwf	___flmul@prod+2
  8761  0C39  0834               	movf	??___flmul+1,w
  8762  0C3A  00C0               	movwf	___flmul@prod+1
  8763  0C3B  0833               	movf	??___flmul,w
  8764  0C3C  00BF               	movwf	___flmul@prod
  8765  0C3D                     l2757:
  8766  0C3D  3001               	movlw	1
  8767  0C3E  07C3               	addwf	___flmul@temp,f
  8768  0C3F  1803               	skipnc
  8769  0C40  0AC4               	incf	___flmul@temp+1,f
  8770  0C41  3000               	movlw	0
  8771  0C42  07C4               	addwf	___flmul@temp+1,f
  8772  0C43                     l2759:
  8773  0C43  0844               	movf	___flmul@temp+1,w
  8774  0C44  3A80               	xorlw	128
  8775  0C45  00FF               	movwf	btemp+1
  8776  0C46  3080               	movlw	128
  8777  0C47  027F               	subwf	btemp+1,w
  8778  0C48  1D03               	skipz
  8779  0C49  2C4C               	goto	u4005
  8780  0C4A  30FF               	movlw	255
  8781  0C4B  0243               	subwf	___flmul@temp,w
  8782  0C4C                     u4005:
  8783  0C4C  1C03               	skipc
  8784  0C4D  2C4F               	goto	u4001
  8785  0C4E  2C50               	goto	u4000
  8786  0C4F                     u4001:
  8787  0C4F  2C5B               	goto	l2763
  8788  0C50                     u4000:
  8789  0C50                     l2761:
  8790  0C50  307F               	movlw	127
  8791  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8792  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8793  0C53  00C2               	movwf	___flmul@prod+3
  8794  0C54  3080               	movlw	128
  8795  0C55  00C1               	movwf	___flmul@prod+2
  8796  0C56  3000               	movlw	0
  8797  0C57  00C0               	movwf	___flmul@prod+1
  8798  0C58  3000               	movlw	0
  8799  0C59  00BF               	movwf	___flmul@prod
  8800  0C5A  2C90               	goto	l845
  8801  0C5B                     l2763:
  8802  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8803  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8804  0C5D  0844               	movf	___flmul@temp+1,w
  8805  0C5E  3A80               	xorlw	128
  8806  0C5F  00FF               	movwf	btemp+1
  8807  0C60  3080               	movlw	128
  8808  0C61  027F               	subwf	btemp+1,w
  8809  0C62  1D03               	skipz
  8810  0C63  2C66               	goto	u4015
  8811  0C64  3001               	movlw	1
  8812  0C65  0243               	subwf	___flmul@temp,w
  8813  0C66                     u4015:
  8814  0C66  1803               	skipnc
  8815  0C67  2C69               	goto	u4011
  8816  0C68  2C6A               	goto	u4010
  8817  0C69                     u4011:
  8818  0C69  2C76               	goto	l2769
  8819  0C6A                     u4010:
  8820  0C6A                     l2765:
  8821  0C6A  3000               	movlw	0
  8822  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8823  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8824  0C6D  00C2               	movwf	___flmul@prod+3
  8825  0C6E  3000               	movlw	0
  8826  0C6F  00C1               	movwf	___flmul@prod+2
  8827  0C70  3000               	movlw	0
  8828  0C71  00C0               	movwf	___flmul@prod+1
  8829  0C72  3000               	movlw	0
  8830  0C73  00BF               	movwf	___flmul@prod
  8831  0C74                     l2767:
  8832  0C74  01B8               	clrf	___flmul@sign
  8833  0C75  2C90               	goto	l845
  8834  0C76                     l2769:
  8835  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8836  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8837  0C78  0843               	movf	___flmul@temp,w
  8838  0C79  00B3               	movwf	??___flmul
  8839  0C7A  0833               	movf	??___flmul,w
  8840  0C7B  00BE               	movwf	___flmul@bexp
  8841  0C7C  30FF               	movlw	255
  8842  0C7D  05BF               	andwf	___flmul@prod,f
  8843  0C7E  30FF               	movlw	255
  8844  0C7F  05C0               	andwf	___flmul@prod+1,f
  8845  0C80  307F               	movlw	127
  8846  0C81  05C1               	andwf	___flmul@prod+2,f
  8847  0C82  3000               	movlw	0
  8848  0C83  05C2               	andwf	___flmul@prod+3,f
  8849  0C84                     l2771:
  8850  0C84  1C3E               	btfss	___flmul@bexp,0
  8851  0C85  2C87               	goto	u4021
  8852  0C86  2C88               	goto	u4020
  8853  0C87                     u4021:
  8854  0C87  2C89               	goto	l2775
  8855  0C88                     u4020:
  8856  0C88                     l2773:
  8857  0C88  17C1               	bsf	___flmul@prod+2,7
  8858  0C89                     l2775:
  8859  0C89  083E               	movf	___flmul@bexp,w
  8860  0C8A  00B3               	movwf	??___flmul
  8861  0C8B  1003               	clrc
  8862  0C8C  0C33               	rrf	??___flmul,w
  8863  0C8D  00B4               	movwf	??___flmul+1
  8864  0C8E  0834               	movf	??___flmul+1,w
  8865  0C8F  00C2               	movwf	___flmul@prod+3
  8866  0C90                     l845:
  8867  0C90  0838               	movf	___flmul@sign,w
  8868  0C91  00B3               	movwf	??___flmul
  8869  0C92  0833               	movf	??___flmul,w
  8870  0C93  04C2               	iorwf	___flmul@prod+3,f
  8871  0C94                     l2777:
  8872  0C94  0842               	movf	___flmul@prod+3,w
  8873  0C95  00AE               	movwf	?___flmul+3
  8874  0C96  0841               	movf	___flmul@prod+2,w
  8875  0C97  00AD               	movwf	?___flmul+2
  8876  0C98  0840               	movf	___flmul@prod+1,w
  8877  0C99  00AC               	movwf	?___flmul+1
  8878  0C9A  083F               	movf	___flmul@prod,w
  8879  0C9B  00AB               	movwf	?___flmul
  8880  0C9C                     l833:
  8881  0C9C  0008               	return
  8882  0C9D                     __end_of___flmul:
  8883                           
  8884                           	psect	text28
  8885  1BB7                     __ptext28:	
  8886 ;; *************** function __Umul8_16 *****************
  8887 ;; Defined at:
  8888 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  multiplier      1    wreg     unsigned char 
  8891 ;;  multiplicand    1    3[COMMON] unsigned char 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8894 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8895 ;;  product         2    0[BANK0 ] unsigned int 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  2    3[COMMON] unsigned int 
  8898 ;; Registers used:
  8899 ;;		wreg, status,2, status,0
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8905 ;;      Params:         2       0       0       0       0
  8906 ;;      Locals:         0       5       0       0       0
  8907 ;;      Temps:          2       0       0       0       0
  8908 ;;      Totals:         4       5       0       0       0
  8909 ;;Total ram usage:        9 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; Hardware stack levels required when called:    1
  8912 ;; This function calls:
  8913 ;;		Nothing
  8914 ;; This function is called by:
  8915 ;;		___flmul
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           
  8920                           ;psect for function __Umul8_16
  8921  1BB7                     __Umul8_16:
  8922                           
  8923                           ;incstack = 0
  8924                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8925                           ;__Umul8_16@multiplier stored from wreg
  8926  1BB7  1283               	bcf	3,5	;RP0=0, select bank0
  8927  1BB8  1303               	bcf	3,6	;RP1=0, select bank0
  8928  1BB9  00A4               	movwf	__Umul8_16@multiplier
  8929  1BBA                     l2301:
  8930  1BBA  01A0               	clrf	__Umul8_16@product
  8931  1BBB  01A1               	clrf	__Umul8_16@product+1
  8932  1BBC                     l2303:
  8933  1BBC  0873               	movf	__Umul8_16@multiplicand,w
  8934  1BBD  00F5               	movwf	??__Umul8_16
  8935  1BBE  01F6               	clrf	??__Umul8_16+1
  8936  1BBF  0875               	movf	??__Umul8_16,w
  8937  1BC0  00A2               	movwf	__Umul8_16@word_mpld
  8938  1BC1  0876               	movf	??__Umul8_16+1,w
  8939  1BC2  00A3               	movwf	__Umul8_16@word_mpld+1
  8940  1BC3                     l2305:
  8941  1BC3  1C24               	btfss	__Umul8_16@multiplier,0
  8942  1BC4  2BC6               	goto	u2851
  8943  1BC5  2BC7               	goto	u2850
  8944  1BC6                     u2851:
  8945  1BC6  2BCD               	goto	l852
  8946  1BC7                     u2850:
  8947  1BC7                     l2307:
  8948  1BC7  0822               	movf	__Umul8_16@word_mpld,w
  8949  1BC8  07A0               	addwf	__Umul8_16@product,f
  8950  1BC9  1803               	skipnc
  8951  1BCA  0AA1               	incf	__Umul8_16@product+1,f
  8952  1BCB  0823               	movf	__Umul8_16@word_mpld+1,w
  8953  1BCC  07A1               	addwf	__Umul8_16@product+1,f
  8954  1BCD                     l852:
  8955  1BCD  3001               	movlw	1
  8956  1BCE                     u2865:
  8957  1BCE  1003               	clrc
  8958  1BCF  0DA2               	rlf	__Umul8_16@word_mpld,f
  8959  1BD0  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  8960  1BD1  3EFF               	addlw	-1
  8961  1BD2  1D03               	skipz
  8962  1BD3  2BCE               	goto	u2865
  8963  1BD4  1003               	clrc
  8964  1BD5  0CA4               	rrf	__Umul8_16@multiplier,f
  8965  1BD6                     l2309:
  8966  1BD6  0824               	movf	__Umul8_16@multiplier,w
  8967  1BD7  1D03               	btfss	3,2
  8968  1BD8  2BDA               	goto	u2871
  8969  1BD9  2BDB               	goto	u2870
  8970  1BDA                     u2871:
  8971  1BDA  2BC3               	goto	l2305
  8972  1BDB                     u2870:
  8973  1BDB                     l2311:
  8974  1BDB  0821               	movf	__Umul8_16@product+1,w
  8975  1BDC  00F4               	movwf	?__Umul8_16+1
  8976  1BDD  0820               	movf	__Umul8_16@product,w
  8977  1BDE  00F3               	movwf	?__Umul8_16
  8978  1BDF                     l854:
  8979  1BDF  0008               	return
  8980  1BE0                     __end_of__Umul8_16:
  8981                           
  8982                           	psect	text29
  8983  1C0B                     __ptext29:	
  8984 ;; *************** function _Lcd_Write_String *****************
  8985 ;; Defined at:
  8986 ;;		line 67 in file "LCD.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  a               2    6[COMMON] PTR unsigned char 
  8989 ;;		 -> s(20), STR_1(17), 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  i               2    3[BANK0 ] int 
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      void 
  8994 ;; Registers used:
  8995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9001 ;;      Params:         2       0       0       0       0
  9002 ;;      Locals:         0       2       0       0       0
  9003 ;;      Temps:          0       3       0       0       0
  9004 ;;      Totals:         2       5       0       0       0
  9005 ;;Total ram usage:        7 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:    3
  9008 ;; This function calls:
  9009 ;;		_Lcd_Write_Char
  9010 ;; This function is called by:
  9011 ;;		_main
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           
  9016                           ;psect for function _Lcd_Write_String
  9017  1C0B                     _Lcd_Write_String:
  9018  1C0B                     l4075:	
  9019                           ;incstack = 0
  9020                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9021                           
  9022                           
  9023                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  9024  1C0B  1283               	bcf	3,5	;RP0=0, select bank0
  9025  1C0C  1303               	bcf	3,6	;RP1=0, select bank0
  9026  1C0D  01A3               	clrf	Lcd_Write_String@i
  9027  1C0E  01A4               	clrf	Lcd_Write_String@i+1
  9028  1C0F  2C34               	goto	l4081
  9029  1C10                     l4077:
  9030                           
  9031                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  9032  1C10  0823               	movf	Lcd_Write_String@i,w
  9033  1C11  0776               	addwf	Lcd_Write_String@a,w
  9034  1C12  00A1               	movwf	??_Lcd_Write_String+1
  9035  1C13  0877               	movf	Lcd_Write_String@a+1,w
  9036  1C14  00A0               	movwf	??_Lcd_Write_String
  9037  1C15  1803               	skipnc
  9038  1C16  0AA0               	incf	??_Lcd_Write_String,f
  9039  1C17  1FA3               	btfss	Lcd_Write_String@i,7
  9040  1C18  2C1A               	goto	u6900
  9041  1C19  03A0               	decf	??_Lcd_Write_String,f
  9042  1C1A                     u6900:
  9043  1C1A  1283               	bcf	3,5	;RP0=0, select bank0
  9044  1C1B  1303               	bcf	3,6	;RP1=0, select bank0
  9045  1C1C  0820               	movf	??_Lcd_Write_String,w
  9046  1C1D  00A2               	movwf	??_Lcd_Write_String+2
  9047  1C1E  0822               	movf	??_Lcd_Write_String+2,w
  9048  1C1F  00FF               	movwf	btemp+1
  9049  1C20  0821               	movf	??_Lcd_Write_String+1,w
  9050  1C21  0084               	movwf	4
  9051  1C22  160A  158A  2000  160A  158A  	fcall	stringtab
  9052  1C27  160A  158A  2362  160A  158A  	fcall	_Lcd_Write_Char
  9053  1C2C                     l4079:
  9054  1C2C  3001               	movlw	1
  9055  1C2D  1283               	bcf	3,5	;RP0=0, select bank0
  9056  1C2E  1303               	bcf	3,6	;RP1=0, select bank0
  9057  1C2F  07A3               	addwf	Lcd_Write_String@i,f
  9058  1C30  1803               	skipnc
  9059  1C31  0AA4               	incf	Lcd_Write_String@i+1,f
  9060  1C32  3000               	movlw	0
  9061  1C33  07A4               	addwf	Lcd_Write_String@i+1,f
  9062  1C34                     l4081:
  9063  1C34  0823               	movf	Lcd_Write_String@i,w
  9064  1C35  0776               	addwf	Lcd_Write_String@a,w
  9065  1C36  00A1               	movwf	??_Lcd_Write_String+1
  9066  1C37  0877               	movf	Lcd_Write_String@a+1,w
  9067  1C38  00A0               	movwf	??_Lcd_Write_String
  9068  1C39  1803               	skipnc
  9069  1C3A  0AA0               	incf	??_Lcd_Write_String,f
  9070  1C3B  1FA3               	btfss	Lcd_Write_String@i,7
  9071  1C3C  2C3E               	goto	u6910
  9072  1C3D  03A0               	decf	??_Lcd_Write_String,f
  9073  1C3E                     u6910:
  9074  1C3E  1283               	bcf	3,5	;RP0=0, select bank0
  9075  1C3F  1303               	bcf	3,6	;RP1=0, select bank0
  9076  1C40  0820               	movf	??_Lcd_Write_String,w
  9077  1C41  00A2               	movwf	??_Lcd_Write_String+2
  9078  1C42  0822               	movf	??_Lcd_Write_String+2,w
  9079  1C43  00FF               	movwf	btemp+1
  9080  1C44  0821               	movf	??_Lcd_Write_String+1,w
  9081  1C45  0084               	movwf	4
  9082  1C46  160A  158A  2000  160A  158A  	fcall	stringtab
  9083  1C4B  3A00               	xorlw	0
  9084  1C4C  1D03               	skipz
  9085  1C4D  2C4F               	goto	u6921
  9086  1C4E  2C50               	goto	u6920
  9087  1C4F                     u6921:
  9088  1C4F  2C10               	goto	l4077
  9089  1C50                     u6920:
  9090  1C50                     l140:
  9091  1C50  0008               	return
  9092  1C51                     __end_of_Lcd_Write_String:
  9093                           
  9094                           	psect	text30
  9095  1B62                     __ptext30:	
  9096 ;; *************** function _Lcd_Write_Char *****************
  9097 ;; Defined at:
  9098 ;;		line 58 in file "LCD.c"
  9099 ;; Parameters:    Size  Location     Type
  9100 ;;  a               1    wreg     unsigned char 
  9101 ;; Auto vars:     Size  Location     Type
  9102 ;;  a               1    5[COMMON] unsigned char 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  1    wreg      void 
  9105 ;; Registers used:
  9106 ;;		wreg, status,2, status,0, pclath, cstack
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9112 ;;      Params:         0       0       0       0       0
  9113 ;;      Locals:         1       0       0       0       0
  9114 ;;      Temps:          1       0       0       0       0
  9115 ;;      Totals:         2       0       0       0       0
  9116 ;;Total ram usage:        2 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; Hardware stack levels required when called:    2
  9119 ;; This function calls:
  9120 ;;		_Lcd_Port
  9121 ;; This function is called by:
  9122 ;;		_Lcd_Write_String
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           
  9127                           ;psect for function _Lcd_Write_Char
  9128  1B62                     _Lcd_Write_Char:
  9129                           
  9130                           ;incstack = 0
  9131                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9132                           ;Lcd_Write_Char@a stored from wreg
  9133  1B62  00F5               	movwf	Lcd_Write_Char@a
  9134  1B63                     l3743:
  9135                           
  9136                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  9137  1B63  1283               	bcf	3,5	;RP0=0, select bank0
  9138  1B64  1303               	bcf	3,6	;RP1=0, select bank0
  9139  1B65  1409               	bsf	9,0	;volatile
  9140  1B66                     l3745:
  9141                           
  9142                           ;LCD.c: 60:     Lcd_Port(a);
  9143  1B66  0875               	movf	Lcd_Write_Char@a,w
  9144  1B67  160A  158A  22CE  160A  158A  	fcall	_Lcd_Port
  9145  1B6C                     l3747:
  9146                           
  9147                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
  9148  1B6C  1283               	bcf	3,5	;RP0=0, select bank0
  9149  1B6D  1303               	bcf	3,6	;RP1=0, select bank0
  9150  1B6E  1489               	bsf	9,1	;volatile
  9151  1B6F                     l3749:
  9152                           
  9153                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9154  1B6F  301A               	movlw	26
  9155  1B70  00F4               	movwf	??_Lcd_Write_Char
  9156  1B71                     u7447:
  9157  1B71  0BF4               	decfsz	??_Lcd_Write_Char,f
  9158  1B72  2B71               	goto	u7447
  9159  1B73  0000               	nop
  9160  1B74                     l3751:
  9161                           
  9162                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
  9163  1B74  1283               	bcf	3,5	;RP0=0, select bank0
  9164  1B75  1303               	bcf	3,6	;RP1=0, select bank0
  9165  1B76  1089               	bcf	9,1	;volatile
  9166  1B77                     l3753:
  9167                           
  9168                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9169  1B77  301A               	movlw	26
  9170  1B78  00F4               	movwf	??_Lcd_Write_Char
  9171  1B79                     u7457:
  9172  1B79  0BF4               	decfsz	??_Lcd_Write_Char,f
  9173  1B7A  2B79               	goto	u7457
  9174  1B7B  0000               	nop
  9175  1B7C                     l134:
  9176  1B7C  0008               	return
  9177  1B7D                     __end_of_Lcd_Write_Char:
  9178                           
  9179                           	psect	text31
  9180  07D8                     __ptext31:	
  9181 ;; *************** function _Lcd_Set_Cursor *****************
  9182 ;; Defined at:
  9183 ;;		line 33 in file "LCD.c"
  9184 ;; Parameters:    Size  Location     Type
  9185 ;;  a               1    wreg     unsigned char 
  9186 ;;  b               1    7[COMMON] unsigned char 
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;  a               1    1[BANK0 ] unsigned char 
  9189 ;;  temp            1    2[BANK0 ] unsigned char 
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		wreg, status,2, status,0, pclath, cstack
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9199 ;;      Params:         1       0       0       0       0
  9200 ;;      Locals:         0       2       0       0       0
  9201 ;;      Temps:          0       1       0       0       0
  9202 ;;      Totals:         1       3       0       0       0
  9203 ;;Total ram usage:        4 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; Hardware stack levels required when called:    3
  9206 ;; This function calls:
  9207 ;;		_Lcd_Cmd
  9208 ;; This function is called by:
  9209 ;;		_main
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           
  9214                           ;psect for function _Lcd_Set_Cursor
  9215  07D8                     _Lcd_Set_Cursor:
  9216                           
  9217                           ;incstack = 0
  9218                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9219                           ;Lcd_Set_Cursor@a stored from wreg
  9220  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  9221  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  9222  07DA  00A1               	movwf	Lcd_Set_Cursor@a
  9223  07DB                     l4063:
  9224                           
  9225                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
  9226  07DB  0321               	decf	Lcd_Set_Cursor@a,w
  9227  07DC  1D03               	btfss	3,2
  9228  07DD  2FDF               	goto	u6881
  9229  07DE  2FE0               	goto	u6880
  9230  07DF                     u6881:
  9231  07DF  2FEC               	goto	l4069
  9232  07E0                     u6880:
  9233  07E0                     l4065:
  9234                           
  9235                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  9236  07E0  0877               	movf	Lcd_Set_Cursor@b,w
  9237  07E1  3E7F               	addlw	127
  9238  07E2  00A0               	movwf	??_Lcd_Set_Cursor
  9239  07E3  0820               	movf	??_Lcd_Set_Cursor,w
  9240  07E4  00A2               	movwf	Lcd_Set_Cursor@temp
  9241  07E5                     l4067:
  9242                           
  9243                           ;LCD.c: 37:         Lcd_Cmd(temp);
  9244  07E5  0822               	movf	Lcd_Set_Cursor@temp,w
  9245  07E6  160A  158A  2348  120A  118A  	fcall	_Lcd_Cmd
  9246                           
  9247                           ;LCD.c: 38:     } else if (a == 2) {
  9248  07EB  2FFD               	goto	l128
  9249  07EC                     l4069:
  9250  07EC  3002               	movlw	2
  9251  07ED  0621               	xorwf	Lcd_Set_Cursor@a,w
  9252  07EE  1D03               	btfss	3,2
  9253  07EF  2FF1               	goto	u6891
  9254  07F0  2FF2               	goto	u6890
  9255  07F1                     u6891:
  9256  07F1  2FFD               	goto	l128
  9257  07F2                     u6890:
  9258  07F2                     l4071:
  9259                           
  9260                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  9261  07F2  0877               	movf	Lcd_Set_Cursor@b,w
  9262  07F3  3EBF               	addlw	191
  9263  07F4  00A0               	movwf	??_Lcd_Set_Cursor
  9264  07F5  0820               	movf	??_Lcd_Set_Cursor,w
  9265  07F6  00A2               	movwf	Lcd_Set_Cursor@temp
  9266  07F7                     l4073:
  9267                           
  9268                           ;LCD.c: 40:         Lcd_Cmd(temp);
  9269  07F7  0822               	movf	Lcd_Set_Cursor@temp,w
  9270  07F8  160A  158A  2348  120A  118A  	fcall	_Lcd_Cmd
  9271  07FD                     l128:
  9272  07FD  0008               	return
  9273  07FE                     __end_of_Lcd_Set_Cursor:
  9274                           
  9275                           	psect	text32
  9276  1C97                     __ptext32:	
  9277 ;; *************** function _Lcd_Init *****************
  9278 ;; Defined at:
  9279 ;;		line 44 in file "LCD.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;		None
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;		None
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  1    wreg      void 
  9286 ;; Registers used:
  9287 ;;		wreg, status,2, status,0, pclath, cstack
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9293 ;;      Params:         0       0       0       0       0
  9294 ;;      Locals:         0       0       0       0       0
  9295 ;;      Temps:          0       2       0       0       0
  9296 ;;      Totals:         0       2       0       0       0
  9297 ;;Total ram usage:        2 bytes
  9298 ;; Hardware stack levels used:    1
  9299 ;; Hardware stack levels required when called:    3
  9300 ;; This function calls:
  9301 ;;		_Lcd_Cmd
  9302 ;;		_Lcd_Port
  9303 ;; This function is called by:
  9304 ;;		_main
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308                           
  9309                           ;psect for function _Lcd_Init
  9310  1C97                     _Lcd_Init:
  9311  1C97                     l4051:	
  9312                           ;incstack = 0
  9313                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9314                           
  9315                           
  9316                           ;LCD.c: 45:     Lcd_Port(0x00);
  9317  1C97  3000               	movlw	0
  9318  1C98  160A  158A  22CE  160A  158A  	fcall	_Lcd_Port
  9319  1C9D                     l4053:
  9320                           
  9321                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9322  1C9D  3034               	movlw	52
  9323  1C9E  1283               	bcf	3,5	;RP0=0, select bank0
  9324  1C9F  1303               	bcf	3,6	;RP1=0, select bank0
  9325  1CA0  00A1               	movwf	??_Lcd_Init+1
  9326  1CA1  30F1               	movlw	241
  9327  1CA2  00A0               	movwf	??_Lcd_Init
  9328  1CA3                     u7467:
  9329  1CA3  0BA0               	decfsz	??_Lcd_Init,f
  9330  1CA4  2CA3               	goto	u7467
  9331  1CA5  0BA1               	decfsz	??_Lcd_Init+1,f
  9332  1CA6  2CA3               	goto	u7467
  9333  1CA7                     l4055:
  9334                           
  9335                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
  9336  1CA7  303F               	movlw	63
  9337  1CA8  160A  158A  2348  160A  158A  	fcall	_Lcd_Cmd
  9338                           
  9339                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9340  1CAD  301A               	movlw	26
  9341  1CAE  1283               	bcf	3,5	;RP0=0, select bank0
  9342  1CAF  1303               	bcf	3,6	;RP1=0, select bank0
  9343  1CB0  00A1               	movwf	??_Lcd_Init+1
  9344  1CB1  30F7               	movlw	247
  9345  1CB2  00A0               	movwf	??_Lcd_Init
  9346  1CB3                     u7477:
  9347  1CB3  0BA0               	decfsz	??_Lcd_Init,f
  9348  1CB4  2CB3               	goto	u7477
  9349  1CB5  0BA1               	decfsz	??_Lcd_Init+1,f
  9350  1CB6  2CB3               	goto	u7477
  9351  1CB7  2CB8               	nop2
  9352  1CB8                     l4057:
  9353                           
  9354                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  9355  1CB8  303F               	movlw	63
  9356  1CB9  160A  158A  2348  160A  158A  	fcall	_Lcd_Cmd
  9357  1CBE                     l4059:
  9358                           
  9359                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9360  1CBE  3084               	movlw	132
  9361  1CBF  1283               	bcf	3,5	;RP0=0, select bank0
  9362  1CC0  1303               	bcf	3,6	;RP1=0, select bank0
  9363  1CC1  00A0               	movwf	??_Lcd_Init
  9364  1CC2                     u7487:
  9365  1CC2  0BA0               	decfsz	??_Lcd_Init,f
  9366  1CC3  2CC2               	goto	u7487
  9367  1CC4  0000               	nop
  9368                           
  9369                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  9370  1CC5  303F               	movlw	63
  9371  1CC6  160A  158A  2348  160A  158A  	fcall	_Lcd_Cmd
  9372                           
  9373                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  9374  1CCB  3038               	movlw	56
  9375  1CCC  160A  158A  2348  160A  158A  	fcall	_Lcd_Cmd
  9376                           
  9377                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  9378  1CD1  300C               	movlw	12
  9379  1CD2  160A  158A  2348  160A  158A  	fcall	_Lcd_Cmd
  9380                           
  9381                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  9382  1CD7  3006               	movlw	6
  9383  1CD8  160A  158A  2348  160A  158A  	fcall	_Lcd_Cmd
  9384  1CDD                     l131:
  9385  1CDD  0008               	return
  9386  1CDE                     __end_of_Lcd_Init:
  9387                           
  9388                           	psect	text33
  9389  1B02                     __ptext33:	
  9390 ;; *************** function _Lcd_Clear *****************
  9391 ;; Defined at:
  9392 ;;		line 28 in file "LCD.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;		None
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		wreg, status,2, status,0, pclath, cstack
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9406 ;;      Params:         0       0       0       0       0
  9407 ;;      Locals:         0       0       0       0       0
  9408 ;;      Temps:          0       0       0       0       0
  9409 ;;      Totals:         0       0       0       0       0
  9410 ;;Total ram usage:        0 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; Hardware stack levels required when called:    3
  9413 ;; This function calls:
  9414 ;;		_Lcd_Cmd
  9415 ;; This function is called by:
  9416 ;;		_main
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420                           
  9421                           ;psect for function _Lcd_Clear
  9422  1B02                     _Lcd_Clear:
  9423  1B02                     l4061:	
  9424                           ;incstack = 0
  9425                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9426                           
  9427                           
  9428                           ;LCD.c: 29:     Lcd_Cmd(0);
  9429  1B02  3000               	movlw	0
  9430  1B03  160A  158A  2348  160A  158A  	fcall	_Lcd_Cmd
  9431                           
  9432                           ;LCD.c: 30:     Lcd_Cmd(1);
  9433  1B08  3001               	movlw	1
  9434  1B09  160A  158A  2348  160A  158A  	fcall	_Lcd_Cmd
  9435  1B0E                     l122:
  9436  1B0E  0008               	return
  9437  1B0F                     __end_of_Lcd_Clear:
  9438                           
  9439                           	psect	text34
  9440  1B48                     __ptext34:	
  9441 ;; *************** function _Lcd_Cmd *****************
  9442 ;; Defined at:
  9443 ;;		line 20 in file "LCD.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;  a               1    wreg     unsigned char 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  a               1    6[COMMON] unsigned char 
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  1    wreg      void 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0, pclath, cstack
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9457 ;;      Params:         0       0       0       0       0
  9458 ;;      Locals:         1       0       0       0       0
  9459 ;;      Temps:          2       0       0       0       0
  9460 ;;      Totals:         3       0       0       0       0
  9461 ;;Total ram usage:        3 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:    2
  9464 ;; This function calls:
  9465 ;;		_Lcd_Port
  9466 ;; This function is called by:
  9467 ;;		_Lcd_Clear
  9468 ;;		_Lcd_Set_Cursor
  9469 ;;		_Lcd_Init
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           
  9474                           ;psect for function _Lcd_Cmd
  9475  1B48                     _Lcd_Cmd:
  9476                           
  9477                           ;incstack = 0
  9478                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9479                           ;Lcd_Cmd@a stored from wreg
  9480  1B48  00F6               	movwf	Lcd_Cmd@a
  9481  1B49                     l3733:
  9482                           
  9483                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
  9484  1B49  1283               	bcf	3,5	;RP0=0, select bank0
  9485  1B4A  1303               	bcf	3,6	;RP1=0, select bank0
  9486  1B4B  1009               	bcf	9,0	;volatile
  9487  1B4C                     l3735:
  9488                           
  9489                           ;LCD.c: 22:     Lcd_Port(a);
  9490  1B4C  0876               	movf	Lcd_Cmd@a,w
  9491  1B4D  160A  158A  22CE  160A  158A  	fcall	_Lcd_Port
  9492  1B52                     l3737:
  9493                           
  9494                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
  9495  1B52  1283               	bcf	3,5	;RP0=0, select bank0
  9496  1B53  1303               	bcf	3,6	;RP1=0, select bank0
  9497  1B54  1489               	bsf	9,1	;volatile
  9498  1B55                     l3739:
  9499                           
  9500                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9501  1B55  300B               	movlw	11
  9502  1B56  00F5               	movwf	??_Lcd_Cmd+1
  9503  1B57  3062               	movlw	98
  9504  1B58  00F4               	movwf	??_Lcd_Cmd
  9505  1B59                     u7497:
  9506  1B59  0BF4               	decfsz	??_Lcd_Cmd,f
  9507  1B5A  2B59               	goto	u7497
  9508  1B5B  0BF5               	decfsz	??_Lcd_Cmd+1,f
  9509  1B5C  2B59               	goto	u7497
  9510  1B5D  0000               	nop
  9511  1B5E                     l3741:
  9512                           
  9513                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
  9514  1B5E  1283               	bcf	3,5	;RP0=0, select bank0
  9515  1B5F  1303               	bcf	3,6	;RP1=0, select bank0
  9516  1B60  1089               	bcf	9,1	;volatile
  9517  1B61                     l119:
  9518  1B61  0008               	return
  9519  1B62                     __end_of_Lcd_Cmd:
  9520                           
  9521                           	psect	text35
  9522  1ACE                     __ptext35:	
  9523 ;; *************** function _Lcd_Port *****************
  9524 ;; Defined at:
  9525 ;;		line 16 in file "LCD.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;  a               1    wreg     unsigned char 
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;  a               1    3[COMMON] unsigned char 
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      void 
  9532 ;; Registers used:
  9533 ;;		wreg
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9539 ;;      Params:         0       0       0       0       0
  9540 ;;      Locals:         1       0       0       0       0
  9541 ;;      Temps:          0       0       0       0       0
  9542 ;;      Totals:         1       0       0       0       0
  9543 ;;Total ram usage:        1 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; Hardware stack levels required when called:    1
  9546 ;; This function calls:
  9547 ;;		Nothing
  9548 ;; This function is called by:
  9549 ;;		_Lcd_Cmd
  9550 ;;		_Lcd_Init
  9551 ;;		_Lcd_Write_Char
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           
  9556                           ;psect for function _Lcd_Port
  9557  1ACE                     _Lcd_Port:
  9558                           
  9559                           ;incstack = 0
  9560                           ; Regs used in _Lcd_Port: [wreg]
  9561                           ;Lcd_Port@a stored from wreg
  9562  1ACE  00F3               	movwf	Lcd_Port@a
  9563  1ACF                     l3601:
  9564                           
  9565                           ;LCD.c: 17:     PORTD = a;
  9566  1ACF  0873               	movf	Lcd_Port@a,w
  9567  1AD0  1283               	bcf	3,5	;RP0=0, select bank0
  9568  1AD1  1303               	bcf	3,6	;RP1=0, select bank0
  9569  1AD2  0088               	movwf	8	;volatile
  9570  1AD3                     l116:
  9571  1AD3  0008               	return
  9572  1AD4                     __end_of_Lcd_Port:
  9573                           
  9574                           	psect	text36
  9575  1B0F                     __ptext36:	
  9576 ;; *************** function _Config_USARTT *****************
  9577 ;; Defined at:
  9578 ;;		line 11 in file "USART.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;		None
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;		None
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      void 
  9585 ;; Registers used:
  9586 ;;		wreg
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9592 ;;      Params:         0       0       0       0       0
  9593 ;;      Locals:         0       0       0       0       0
  9594 ;;      Temps:          0       0       0       0       0
  9595 ;;      Totals:         0       0       0       0       0
  9596 ;;Total ram usage:        0 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:    1
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_main
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           
  9607                           ;psect for function _Config_USARTT
  9608  1B0F                     _Config_USARTT:
  9609  1B0F                     l3183:	
  9610                           ;incstack = 0
  9611                           ; Regs used in _Config_USARTT: [wreg]
  9612                           
  9613                           
  9614                           ;USART.c: 12:     TXSTAbits.SYNC = 0;
  9615  1B0F  1683               	bsf	3,5	;RP0=1, select bank1
  9616  1B10  1303               	bcf	3,6	;RP1=0, select bank1
  9617  1B11  1218               	bcf	24,4	;volatile
  9618                           
  9619                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  9620  1B12  1698               	bsf	24,5	;volatile
  9621                           
  9622                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  9623  1B13  1118               	bcf	24,2	;volatile
  9624                           
  9625                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  9626  1B14  1683               	bsf	3,5	;RP0=1, select bank3
  9627  1B15  1703               	bsf	3,6	;RP1=1, select bank3
  9628  1B16  1587               	bsf	7,3	;volatile
  9629  1B17                     l3185:
  9630                           
  9631                           ;USART.c: 16:     SPBRG = 25;
  9632  1B17  3019               	movlw	25
  9633  1B18  1683               	bsf	3,5	;RP0=1, select bank1
  9634  1B19  1303               	bcf	3,6	;RP1=0, select bank1
  9635  1B1A  0099               	movwf	25	;volatile
  9636  1B1B                     l3187:
  9637                           
  9638                           ;USART.c: 17:     RCSTAbits.SPEN = 1;
  9639  1B1B  1283               	bcf	3,5	;RP0=0, select bank0
  9640  1B1C  1303               	bcf	3,6	;RP1=0, select bank0
  9641  1B1D  1798               	bsf	24,7	;volatile
  9642  1B1E                     l3189:
  9643                           
  9644                           ;USART.c: 18:     INTCONbits.GIE = 1;
  9645  1B1E  178B               	bsf	11,7	;volatile
  9646  1B1F                     l159:
  9647  1B1F  0008               	return
  9648  1B20                     __end_of_Config_USARTT:
  9649                           
  9650                           	psect	text37
  9651  1B99                     __ptext37:	
  9652 ;; *************** function _ISR *****************
  9653 ;; Defined at:
  9654 ;;		line 208 in file "main.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;		None
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;		None
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  1    wreg      void 
  9661 ;; Registers used:
  9662 ;;		wreg
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9668 ;;      Params:         0       0       0       0       0
  9669 ;;      Locals:         0       0       0       0       0
  9670 ;;      Temps:          3       0       0       0       0
  9671 ;;      Totals:         3       0       0       0       0
  9672 ;;Total ram usage:        3 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; This function calls:
  9675 ;;		Nothing
  9676 ;; This function is called by:
  9677 ;;		Interrupt level 1
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           
  9682                           ;psect for function _ISR
  9683  1B99                     _ISR:
  9684  1B99                     i1l3553:
  9685                           
  9686                           ;main.c: 209:     if (PIR1bits.RCIF == 1) {
  9687  1B99  1283               	bcf	3,5	;RP0=0, select bank0
  9688  1B9A  1303               	bcf	3,6	;RP1=0, select bank0
  9689  1B9B  1E8C               	btfss	12,5	;volatile
  9690  1B9C  2B9E               	goto	u562_21
  9691  1B9D  2B9F               	goto	u562_20
  9692  1B9E                     u562_21:
  9693  1B9E  2BB0               	goto	i1l107
  9694  1B9F                     u562_20:
  9695  1B9F                     i1l3555:
  9696                           
  9697                           ;main.c: 210:         if (RCSTAbits.OERR == 1) {
  9698  1B9F  1C98               	btfss	24,1	;volatile
  9699  1BA0  2BA2               	goto	u563_21
  9700  1BA1  2BA3               	goto	u563_20
  9701  1BA2                     u563_21:
  9702  1BA2  2BAA               	goto	i1l3561
  9703  1BA3                     u563_20:
  9704  1BA3                     i1l3557:
  9705                           
  9706                           ;main.c: 211:             RCSTAbits.CREN = 0;
  9707  1BA3  1218               	bcf	24,4	;volatile
  9708  1BA4                     i1l3559:
  9709                           
  9710                           ;main.c: 212:             _delay((unsigned long)((300)*(8000000/4000000.0)));
  9711  1BA4  30C7               	movlw	199
  9712  1BA5  00F0               	movwf	??_ISR
  9713  1BA6                     u750_27:
  9714  1BA6  0BF0               	decfsz	??_ISR,f
  9715  1BA7  2BA6               	goto	u750_27
  9716  1BA8  2BA9               	nop2
  9717                           
  9718                           ;main.c: 213:         } else {
  9719  1BA9  2BB0               	goto	i1l107
  9720  1BAA                     i1l3561:
  9721                           
  9722                           ;main.c: 214:             recibido = RCREG;
  9723  1BAA  081A               	movf	26,w	;volatile
  9724  1BAB  00F0               	movwf	??_ISR
  9725  1BAC  0870               	movf	??_ISR,w
  9726  1BAD  1683               	bsf	3,5	;RP0=1, select bank1
  9727  1BAE  1303               	bcf	3,6	;RP1=0, select bank1
  9728  1BAF  00E1               	movwf	_recibido^(0+128)
  9729  1BB0                     i1l107:
  9730  1BB0  0872               	movf	??_ISR+2,w
  9731  1BB1  008A               	movwf	10
  9732  1BB2  0E71               	swapf	??_ISR+1,w
  9733  1BB3  0083               	movwf	3
  9734  1BB4  0EFE               	swapf	btemp,f
  9735  1BB5  0E7E               	swapf	btemp,w
  9736  1BB6  0009               	retfie
  9737  1BB7                     __end_of_ISR:
  9738  007E                     btemp	set	126	;btemp
  9739  007E                     wtemp0	set	126
  9740                           
  9741                           	psect	intentry
  9742  0004                     __pintentry:	
  9743                           ;incstack = 0
  9744                           ; Regs used in _ISR: [wreg]
  9745                           
  9746  0004                     interrupt_function:
  9747  007E                     saved_w	set	btemp
  9748  0004  00FE               	movwf	btemp
  9749  0005  0E03               	swapf	3,w
  9750  0006  00F1               	movwf	??_ISR+1
  9751  0007  080A               	movf	10,w
  9752  0008  00F2               	movwf	??_ISR+2
  9753  0009  160A  158A  2B99   	ljmp	_ISR
  9754                           
  9755                           	psect	config
  9756                           
  9757                           ;Config register CONFIG1 @ 0x2007
  9758                           ;	Oscillator Selection bits
  9759                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9760                           ;	Watchdog Timer Enable bit
  9761                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9762                           ;	Power-up Timer Enable bit
  9763                           ;	PWRTE = OFF, PWRT disabled
  9764                           ;	RE3/MCLR pin function select bit
  9765                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9766                           ;	Code Protection bit
  9767                           ;	CP = OFF, Program memory code protection is disabled
  9768                           ;	Data Code Protection bit
  9769                           ;	CPD = OFF, Data memory code protection is disabled
  9770                           ;	Brown Out Reset Selection bits
  9771                           ;	BOREN = OFF, BOR disabled
  9772                           ;	Internal External Switchover bit
  9773                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9774                           ;	Fail-Safe Clock Monitor Enabled bit
  9775                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9776                           ;	Low Voltage Programming Enable bit
  9777                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9778                           ;	In-Circuit Debugger Mode bit
  9779                           ;	DEBUG = 0x1, unprogrammed default
  9780  2007                     	org	8199
  9781  2007  20D5               	dw	8405
  9782                           
  9783                           ;Config register CONFIG2 @ 0x2008
  9784                           ;	Brown-out Reset Selection bit
  9785                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9786                           ;	Flash Program Memory Self Write Enable bits
  9787                           ;	WRT = OFF, Write protection off
  9788  2008                     	org	8200
  9789  2008  3FFF               	dw	16383
  9790                           
  9791                           	psect	text1_split_1
  9792  0033                     u7060:
  9793  0033                     l4185:
  9794  0033  1683               	bsf	3,5	;RP0=1, select bank1
  9795  0034  1303               	bcf	3,6	;RP1=0, select bank1
  9796  0035  0848               	movf	(sprintf@fval+3)^(0+128),w
  9797  0036  1283               	bcf	3,5	;RP0=0, select bank0
  9798  0037  1303               	bcf	3,6	;RP1=0, select bank0
  9799  0038  00A3               	movwf	___fleq@ff1+3
  9800  0039  1683               	bsf	3,5	;RP0=1, select bank1
  9801  003A  1303               	bcf	3,6	;RP1=0, select bank1
  9802  003B  0847               	movf	(sprintf@fval+2)^(0+128),w
  9803  003C  1283               	bcf	3,5	;RP0=0, select bank0
  9804  003D  1303               	bcf	3,6	;RP1=0, select bank0
  9805  003E  00A2               	movwf	___fleq@ff1+2
  9806  003F  1683               	bsf	3,5	;RP0=1, select bank1
  9807  0040  1303               	bcf	3,6	;RP1=0, select bank1
  9808  0041  0846               	movf	(sprintf@fval+1)^(0+128),w
  9809  0042  1283               	bcf	3,5	;RP0=0, select bank0
  9810  0043  1303               	bcf	3,6	;RP1=0, select bank0
  9811  0044  00A1               	movwf	___fleq@ff1+1
  9812  0045  1683               	bsf	3,5	;RP0=1, select bank1
  9813  0046  1303               	bcf	3,6	;RP1=0, select bank1
  9814  0047  0845               	movf	sprintf@fval^(0+128),w
  9815  0048  1283               	bcf	3,5	;RP0=0, select bank0
  9816  0049  1303               	bcf	3,6	;RP1=0, select bank0
  9817  004A  00A0               	movwf	___fleq@ff1
  9818  004B  3000               	movlw	0
  9819  004C  00A7               	movwf	___fleq@ff2+3
  9820  004D  3000               	movlw	0
  9821  004E  00A6               	movwf	___fleq@ff2+2
  9822  004F  3000               	movlw	0
  9823  0050  00A5               	movwf	___fleq@ff2+1
  9824  0051  3000               	movlw	0
  9825  0052  00A4               	movwf	___fleq@ff2
  9826  0053  160A  158A  24DE  120A  118A  	fcall	___fleq
  9827  0058  1803               	btfsc	3,0
  9828  0059  285B               	goto	u7071
  9829  005A  285C               	goto	u7070
  9830  005B                     u7071:
  9831  005B  293E               	goto	l4205
  9832  005C                     u7070:
  9833  005C                     l4187:
  9834  005C  1683               	bsf	3,5	;RP0=1, select bank1
  9835  005D  1303               	bcf	3,6	;RP1=0, select bank1
  9836  005E  0848               	movf	(sprintf@fval+3)^(0+128),w
  9837  005F  1283               	bcf	3,5	;RP0=0, select bank0
  9838  0060  1303               	bcf	3,6	;RP1=0, select bank0
  9839  0061  00DB               	movwf	___fltol@f1+3
  9840  0062  1683               	bsf	3,5	;RP0=1, select bank1
  9841  0063  1303               	bcf	3,6	;RP1=0, select bank1
  9842  0064  0847               	movf	(sprintf@fval+2)^(0+128),w
  9843  0065  1283               	bcf	3,5	;RP0=0, select bank0
  9844  0066  1303               	bcf	3,6	;RP1=0, select bank0
  9845  0067  00DA               	movwf	___fltol@f1+2
  9846  0068  1683               	bsf	3,5	;RP0=1, select bank1
  9847  0069  1303               	bcf	3,6	;RP1=0, select bank1
  9848  006A  0846               	movf	(sprintf@fval+1)^(0+128),w
  9849  006B  1283               	bcf	3,5	;RP0=0, select bank0
  9850  006C  1303               	bcf	3,6	;RP1=0, select bank0
  9851  006D  00D9               	movwf	___fltol@f1+1
  9852  006E  1683               	bsf	3,5	;RP0=1, select bank1
  9853  006F  1303               	bcf	3,6	;RP1=0, select bank1
  9854  0070  0845               	movf	sprintf@fval^(0+128),w
  9855  0071  1283               	bcf	3,5	;RP0=0, select bank0
  9856  0072  1303               	bcf	3,6	;RP1=0, select bank0
  9857  0073  00D8               	movwf	___fltol@f1
  9858  0074  120A  158A  2000  120A  118A  	fcall	___fltol
  9859  0079  1283               	bcf	3,5	;RP0=0, select bank0
  9860  007A  1303               	bcf	3,6	;RP1=0, select bank0
  9861  007B  085B               	movf	?___fltol+3,w
  9862  007C  045A               	iorwf	?___fltol+2,w
  9863  007D  0459               	iorwf	?___fltol+1,w
  9864  007E  0458               	iorwf	?___fltol,w
  9865  007F  1D03               	skipz
  9866  0080  2882               	goto	u7081
  9867  0081  2883               	goto	u7080
  9868  0082                     u7081:
  9869  0082  293E               	goto	l4205
  9870  0083                     u7080:
  9871  0083                     l4189:
  9872  0083  1683               	bsf	3,5	;RP0=1, select bank1
  9873  0084  1303               	bcf	3,6	;RP1=0, select bank1
  9874  0085  0844               	movf	(sprintf@eexp+1)^(0+128),w
  9875  0086  3A80               	xorlw	128
  9876  0087  00FF               	movwf	btemp+1
  9877  0088  3080               	movlw	128
  9878  0089  027F               	subwf	btemp+1,w
  9879  008A  1D03               	skipz
  9880  008B  288E               	goto	u7095
  9881  008C  3002               	movlw	2
  9882  008D  0243               	subwf	sprintf@eexp^(0+128),w
  9883  008E                     u7095:
  9884  008E  1C03               	skipc
  9885  008F  2891               	goto	u7091
  9886  0090  2892               	goto	u7090
  9887  0091                     u7091:
  9888  0091  293E               	goto	l4205
  9889  0092                     u7090:
  9890  0092                     l4191:
  9891                           
  9892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9893  0092  1683               	bsf	3,5	;RP0=1, select bank1
  9894  0093  1303               	bcf	3,6	;RP1=0, select bank1
  9895  0094  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  9896  0095  1283               	bcf	3,5	;RP0=0, select bank0
  9897  0096  1303               	bcf	3,6	;RP1=0, select bank0
  9898  0097  00A3               	movwf	___flge@ff1+3
  9899  0098  1683               	bsf	3,5	;RP0=1, select bank1
  9900  0099  1303               	bcf	3,6	;RP1=0, select bank1
  9901  009A  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  9902  009B  1283               	bcf	3,5	;RP0=0, select bank0
  9903  009C  1303               	bcf	3,6	;RP1=0, select bank0
  9904  009D  00A2               	movwf	___flge@ff1+2
  9905  009E  1683               	bsf	3,5	;RP0=1, select bank1
  9906  009F  1303               	bcf	3,6	;RP1=0, select bank1
  9907  00A0  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  9908  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  9909  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  9910  00A3  00A1               	movwf	___flge@ff1+1
  9911  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  9912  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  9913  00A6  083F               	movf	sprintf@tmpval^(0+128),w
  9914  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  9915  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  9916  00A9  00A0               	movwf	___flge@ff1
  9917  00AA  3040               	movlw	64
  9918  00AB  00A7               	movwf	___flge@ff2+3
  9919  00AC  3089               	movlw	137
  9920  00AD  00A6               	movwf	___flge@ff2+2
  9921  00AE  3070               	movlw	112
  9922  00AF  00A5               	movwf	___flge@ff2+1
  9923  00B0  305F               	movlw	95
  9924  00B1  00A4               	movwf	___flge@ff2
  9925  00B2  160A  158A  275C  120A  118A  	fcall	___flge
  9926  00B7  1803               	btfsc	3,0
  9927  00B8  28BA               	goto	u7101
  9928  00B9  28BB               	goto	u7100
  9929  00BA                     u7101:
  9930  00BA  28C4               	goto	l4195
  9931  00BB                     u7100:
  9932  00BB                     l4193:
  9933                           
  9934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9935  00BB  30F7               	movlw	247
  9936  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  9937  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  9938  00BE  07C3               	addwf	sprintf@eexp^(0+128),f
  9939  00BF  1803               	skipnc
  9940  00C0  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  9941  00C1  30FF               	movlw	255
  9942  00C2  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  9943                           
  9944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9945  00C3  28CC               	goto	l4197
  9946  00C4                     l4195:
  9947                           
  9948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9949  00C4  30F8               	movlw	248
  9950  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  9951  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  9952  00C7  07C3               	addwf	sprintf@eexp^(0+128),f
  9953  00C8  1803               	skipnc
  9954  00C9  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  9955  00CA  30FF               	movlw	255
  9956  00CB  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  9957  00CC                     l4197:
  9958                           
  9959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9960  00CC  0843               	movf	sprintf@eexp^(0+128),w
  9961  00CD  120A  158A  249D  120A  118A  	fcall	_scale
  9962  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  9963  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  9964  00D4  0848               	movf	?_scale+3,w
  9965  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  9966  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  9967  00D7  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  9968  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  9969  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  9970  00DA  0847               	movf	?_scale+2,w
  9971  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  9972  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  9973  00DD  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  9974  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  9975  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  9976  00E0  0846               	movf	?_scale+1,w
  9977  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  9978  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  9979  00E3  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  9980  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  9981  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  9982  00E6  0845               	movf	?_scale,w
  9983  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  9984  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  9985  00E9  00BF               	movwf	sprintf@tmpval^(0+128)
  9986  00EA                     l4199:
  9987  00EA  0848               	movf	(sprintf@fval+3)^(0+128),w
  9988  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  9989  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  9990  00ED  00A3               	movwf	__div_to_l_@f1+3
  9991  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  9992  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  9993  00F0  0847               	movf	(sprintf@fval+2)^(0+128),w
  9994  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  9995  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  9996  00F3  00A2               	movwf	__div_to_l_@f1+2
  9997  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  9998  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  9999  00F6  0846               	movf	(sprintf@fval+1)^(0+128),w
 10000  00F7  1283               	bcf	3,5	;RP0=0, select bank0
 10001  00F8  1303               	bcf	3,6	;RP1=0, select bank0
 10002  00F9  00A1               	movwf	__div_to_l_@f1+1
 10003  00FA  1683               	bsf	3,5	;RP0=1, select bank1
 10004  00FB  1303               	bcf	3,6	;RP1=0, select bank1
 10005  00FC  0845               	movf	sprintf@fval^(0+128),w
 10006  00FD  1283               	bcf	3,5	;RP0=0, select bank0
 10007  00FE  1303               	bcf	3,6	;RP1=0, select bank0
 10008  00FF  00A0               	movwf	__div_to_l_@f1
 10009  0100  1683               	bsf	3,5	;RP0=1, select bank1
 10010  0101  1303               	bcf	3,6	;RP1=0, select bank1
 10011  0102  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10012  0103  1283               	bcf	3,5	;RP0=0, select bank0
 10013  0104  1303               	bcf	3,6	;RP1=0, select bank0
 10014  0105  00A7               	movwf	__div_to_l_@f2+3
 10015  0106  1683               	bsf	3,5	;RP0=1, select bank1
 10016  0107  1303               	bcf	3,6	;RP1=0, select bank1
 10017  0108  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10018  0109  1283               	bcf	3,5	;RP0=0, select bank0
 10019  010A  1303               	bcf	3,6	;RP1=0, select bank0
 10020  010B  00A6               	movwf	__div_to_l_@f2+2
 10021  010C  1683               	bsf	3,5	;RP0=1, select bank1
 10022  010D  1303               	bcf	3,6	;RP1=0, select bank1
 10023  010E  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10024  010F  1283               	bcf	3,5	;RP0=0, select bank0
 10025  0110  1303               	bcf	3,6	;RP1=0, select bank0
 10026  0111  00A5               	movwf	__div_to_l_@f2+1
 10027  0112  1683               	bsf	3,5	;RP0=1, select bank1
 10028  0113  1303               	bcf	3,6	;RP1=0, select bank1
 10029  0114  083F               	movf	sprintf@tmpval^(0+128),w
 10030  0115  1283               	bcf	3,5	;RP0=0, select bank0
 10031  0116  1303               	bcf	3,6	;RP1=0, select bank0
 10032  0117  00A4               	movwf	__div_to_l_@f2
 10033  0118  160A  118A  21B6  120A  118A  	fcall	__div_to_l_
 10034  011D  1283               	bcf	3,5	;RP0=0, select bank0
 10035  011E  1303               	bcf	3,6	;RP1=0, select bank0
 10036  011F  0823               	movf	?__div_to_l_+3,w
 10037  0120  1683               	bsf	3,5	;RP0=1, select bank1
 10038  0121  1303               	bcf	3,6	;RP1=0, select bank1
 10039  0122  00BA               	movwf	(sprintf@val+3)^(0+128)
 10040  0123  1283               	bcf	3,5	;RP0=0, select bank0
 10041  0124  1303               	bcf	3,6	;RP1=0, select bank0
 10042  0125  0822               	movf	?__div_to_l_+2,w
 10043  0126  1683               	bsf	3,5	;RP0=1, select bank1
 10044  0127  1303               	bcf	3,6	;RP1=0, select bank1
 10045  0128  00B9               	movwf	(sprintf@val+2)^(0+128)
 10046  0129  1283               	bcf	3,5	;RP0=0, select bank0
 10047  012A  1303               	bcf	3,6	;RP1=0, select bank0
 10048  012B  0821               	movf	?__div_to_l_+1,w
 10049  012C  1683               	bsf	3,5	;RP0=1, select bank1
 10050  012D  1303               	bcf	3,6	;RP1=0, select bank1
 10051  012E  00B8               	movwf	(sprintf@val+1)^(0+128)
 10052  012F  1283               	bcf	3,5	;RP0=0, select bank0
 10053  0130  1303               	bcf	3,6	;RP1=0, select bank0
 10054  0131  0820               	movf	?__div_to_l_,w
 10055  0132  1683               	bsf	3,5	;RP0=1, select bank1
 10056  0133  1303               	bcf	3,6	;RP1=0, select bank1
 10057  0134  00B7               	movwf	sprintf@val^(0+128)
 10058  0135                     l4203:
 10059                           
 10060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10061  0135  3000               	movlw	0
 10062  0136  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10063  0137  3000               	movlw	0
 10064  0138  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10065  0139  3000               	movlw	0
 10066  013A  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10067  013B  3000               	movlw	0
 10068  013C  00C5               	movwf	sprintf@fval^(0+128)
 10069                           
 10070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10071  013D  29A4               	goto	l4211
 10072  013E                     l4205:
 10073                           
 10074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10075  013E  1683               	bsf	3,5	;RP0=1, select bank1
 10076  013F  1303               	bcf	3,6	;RP1=0, select bank1
 10077  0140  0848               	movf	(sprintf@fval+3)^(0+128),w
 10078  0141  1283               	bcf	3,5	;RP0=0, select bank0
 10079  0142  1303               	bcf	3,6	;RP1=0, select bank0
 10080  0143  00DB               	movwf	___fltol@f1+3
 10081  0144  1683               	bsf	3,5	;RP0=1, select bank1
 10082  0145  1303               	bcf	3,6	;RP1=0, select bank1
 10083  0146  0847               	movf	(sprintf@fval+2)^(0+128),w
 10084  0147  1283               	bcf	3,5	;RP0=0, select bank0
 10085  0148  1303               	bcf	3,6	;RP1=0, select bank0
 10086  0149  00DA               	movwf	___fltol@f1+2
 10087  014A  1683               	bsf	3,5	;RP0=1, select bank1
 10088  014B  1303               	bcf	3,6	;RP1=0, select bank1
 10089  014C  0846               	movf	(sprintf@fval+1)^(0+128),w
 10090  014D  1283               	bcf	3,5	;RP0=0, select bank0
 10091  014E  1303               	bcf	3,6	;RP1=0, select bank0
 10092  014F  00D9               	movwf	___fltol@f1+1
 10093  0150  1683               	bsf	3,5	;RP0=1, select bank1
 10094  0151  1303               	bcf	3,6	;RP1=0, select bank1
 10095  0152  0845               	movf	sprintf@fval^(0+128),w
 10096  0153  1283               	bcf	3,5	;RP0=0, select bank0
 10097  0154  1303               	bcf	3,6	;RP1=0, select bank0
 10098  0155  00D8               	movwf	___fltol@f1
 10099  0156  120A  158A  2000  120A  118A  	fcall	___fltol
 10100  015B  1283               	bcf	3,5	;RP0=0, select bank0
 10101  015C  1303               	bcf	3,6	;RP1=0, select bank0
 10102  015D  085B               	movf	?___fltol+3,w
 10103  015E  1683               	bsf	3,5	;RP0=1, select bank1
 10104  015F  1303               	bcf	3,6	;RP1=0, select bank1
 10105  0160  00BA               	movwf	(sprintf@val+3)^(0+128)
 10106  0161  1283               	bcf	3,5	;RP0=0, select bank0
 10107  0162  1303               	bcf	3,6	;RP1=0, select bank0
 10108  0163  085A               	movf	?___fltol+2,w
 10109  0164  1683               	bsf	3,5	;RP0=1, select bank1
 10110  0165  1303               	bcf	3,6	;RP1=0, select bank1
 10111  0166  00B9               	movwf	(sprintf@val+2)^(0+128)
 10112  0167  1283               	bcf	3,5	;RP0=0, select bank0
 10113  0168  1303               	bcf	3,6	;RP1=0, select bank0
 10114  0169  0859               	movf	?___fltol+1,w
 10115  016A  1683               	bsf	3,5	;RP0=1, select bank1
 10116  016B  1303               	bcf	3,6	;RP1=0, select bank1
 10117  016C  00B8               	movwf	(sprintf@val+1)^(0+128)
 10118  016D  1283               	bcf	3,5	;RP0=0, select bank0
 10119  016E  1303               	bcf	3,6	;RP1=0, select bank0
 10120  016F  0858               	movf	?___fltol,w
 10121  0170  1683               	bsf	3,5	;RP0=1, select bank1
 10122  0171  1303               	bcf	3,6	;RP1=0, select bank1
 10123  0172  00B7               	movwf	sprintf@val^(0+128)
 10124  0173                     l4207:
 10125                           
 10126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10127  0173  083A               	movf	(sprintf@val+3)^(0+128),w
 10128  0174  00F6               	movwf	___xxtofl@val+3
 10129  0175  0839               	movf	(sprintf@val+2)^(0+128),w
 10130  0176  00F5               	movwf	___xxtofl@val+2
 10131  0177  0838               	movf	(sprintf@val+1)^(0+128),w
 10132  0178  00F4               	movwf	___xxtofl@val+1
 10133  0179  0837               	movf	sprintf@val^(0+128),w
 10134  017A  00F3               	movwf	___xxtofl@val
 10135  017B  3000               	movlw	0
 10136  017C  160A  118A  203D  120A  118A  	fcall	___xxtofl
 10137  0181  0876               	movf	?___xxtofl+3,w
 10138  0182  1683               	bsf	3,5	;RP0=1, select bank1
 10139  0183  1303               	bcf	3,6	;RP1=0, select bank1
 10140  0184  00A3               	movwf	(___flsub@a+3)^(0+128)
 10141  0185  0875               	movf	?___xxtofl+2,w
 10142  0186  00A2               	movwf	(___flsub@a+2)^(0+128)
 10143  0187  0874               	movf	?___xxtofl+1,w
 10144  0188  00A1               	movwf	(___flsub@a+1)^(0+128)
 10145  0189  0873               	movf	?___xxtofl,w
 10146  018A  00A0               	movwf	___flsub@a^(0+128)
 10147  018B  0848               	movf	(sprintf@fval+3)^(0+128),w
 10148  018C  00A7               	movwf	(___flsub@b+3)^(0+128)
 10149  018D  0847               	movf	(sprintf@fval+2)^(0+128),w
 10150  018E  00A6               	movwf	(___flsub@b+2)^(0+128)
 10151  018F  0846               	movf	(sprintf@fval+1)^(0+128),w
 10152  0190  00A5               	movwf	(___flsub@b+1)^(0+128)
 10153  0191  0845               	movf	sprintf@fval^(0+128),w
 10154  0192  00A4               	movwf	___flsub@b^(0+128)
 10155  0193  160A  158A  252E  120A  118A  	fcall	___flsub
 10156  0198  1683               	bsf	3,5	;RP0=1, select bank1
 10157  0199  1303               	bcf	3,6	;RP1=0, select bank1
 10158  019A  0823               	movf	(?___flsub+3)^(0+128),w
 10159  019B  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10160  019C  0822               	movf	(?___flsub+2)^(0+128),w
 10161  019D  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10162  019E  0821               	movf	(?___flsub+1)^(0+128),w
 10163  019F  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10164  01A0  0820               	movf	?___flsub^(0+128),w
 10165  01A1  00C5               	movwf	sprintf@fval^(0+128)
 10166  01A2                     l4209:
 10167                           
 10168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10169  01A2  01C3               	clrf	sprintf@eexp^(0+128)
 10170  01A3  01C4               	clrf	(sprintf@eexp+1)^(0+128)
 10171  01A4                     l4211:
 10172                           
 10173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10174  01A4  01CC               	clrf	sprintf@c^(0+128)
 10175  01A5  0ACC               	incf	sprintf@c^(0+128),f
 10176  01A6                     l4217:
 10177                           
 10178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10179  01A6  084C               	movf	sprintf@c^(0+128),w
 10180  01A7  00AD               	movwf	??_sprintf^(0+128)
 10181  01A8  3001               	movlw	1
 10182  01A9                     u7115:
 10183  01A9  1003               	clrc
 10184  01AA  0DAD               	rlf	??_sprintf^(0+128),f
 10185  01AB  3EFF               	addlw	-1
 10186  01AC  1D03               	skipz
 10187  01AD  29A9               	goto	u7115
 10188  01AE  1003               	clrc
 10189  01AF  0D2D               	rlf	??_sprintf^(0+128),w
 10190  01B0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10191  01B1  0084               	movwf	4
 10192  01B2  160A  158A  200A  120A  118A  	fcall	stringdir
 10193  01B7  00AE               	movwf	(??_sprintf+1)^(0+128)
 10194  01B8  160A  158A  200A  120A  118A  	fcall	stringdir
 10195  01BD  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 10196  01BE  160A  158A  200A  120A  118A  	fcall	stringdir
 10197  01C3  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 10198  01C4  160A  158A  200A  120A  118A  	fcall	stringdir
 10199  01C9  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 10200  01CA  0831               	movf	(??_sprintf+4)^(0+128),w
 10201  01CB  023A               	subwf	(sprintf@val+3)^(0+128),w
 10202  01CC  1D03               	skipz
 10203  01CD  29D8               	goto	u7125
 10204  01CE  0830               	movf	(??_sprintf+3)^(0+128),w
 10205  01CF  0239               	subwf	(sprintf@val+2)^(0+128),w
 10206  01D0  1D03               	skipz
 10207  01D1  29D8               	goto	u7125
 10208  01D2  082F               	movf	(??_sprintf+2)^(0+128),w
 10209  01D3  0238               	subwf	(sprintf@val+1)^(0+128),w
 10210  01D4  1D03               	skipz
 10211  01D5  29D8               	goto	u7125
 10212  01D6  082E               	movf	(??_sprintf+1)^(0+128),w
 10213  01D7  0237               	subwf	sprintf@val^(0+128),w
 10214  01D8                     u7125:
 10215  01D8  1803               	skipnc
 10216  01D9  29DB               	goto	u7121
 10217  01DA  29DC               	goto	u7120
 10218  01DB                     u7121:
 10219  01DB  29DD               	goto	l4221
 10220  01DC                     u7120:
 10221  01DC  29E7               	goto	l4223
 10222  01DD                     l4221:
 10223  01DD  3001               	movlw	1
 10224  01DE  00AD               	movwf	??_sprintf^(0+128)
 10225  01DF  082D               	movf	??_sprintf^(0+128),w
 10226  01E0  07CC               	addwf	sprintf@c^(0+128),f
 10227  01E1  300A               	movlw	10
 10228  01E2  064C               	xorwf	sprintf@c^(0+128),w
 10229  01E3  1D03               	btfss	3,2
 10230  01E4  29E6               	goto	u7131
 10231  01E5  29E7               	goto	u7130
 10232  01E6                     u7131:
 10233  01E6  29A6               	goto	l4217
 10234  01E7                     u7130:
 10235  01E7                     l4223:
 10236                           
 10237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10238  01E7  084C               	movf	sprintf@c^(0+128),w
 10239  01E8  074A               	addwf	sprintf@prec^(0+128),w
 10240  01E9  00AD               	movwf	??_sprintf^(0+128)
 10241  01EA  084B               	movf	(sprintf@prec+1)^(0+128),w
 10242  01EB  1803               	skipnc
 10243  01EC  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 10244  01ED  00AE               	movwf	(??_sprintf^(0+128)+1)
 10245  01EE  0843               	movf	sprintf@eexp^(0+128),w
 10246  01EF  072D               	addwf	??_sprintf^(0+128),w
 10247  01F0  00AF               	movwf	(??_sprintf+2)^(0+128)
 10248  01F1  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10249  01F2  1803               	skipnc
 10250  01F3  0A44               	incf	(sprintf@eexp+1)^(0+128),w
 10251  01F4  072E               	addwf	(??_sprintf+1)^(0+128),w
 10252  01F5  00B0               	movwf	(??_sprintf+3)^(0+128)
 10253  01F6  082F               	movf	(??_sprintf+2)^(0+128),w
 10254  01F7  02BD               	subwf	sprintf@width^(0+128),f
 10255  01F8  0830               	movf	(??_sprintf+3)^(0+128),w
 10256  01F9  1C03               	skipc
 10257  01FA  03BE               	decf	(sprintf@width+1)^(0+128),f
 10258  01FB  02BE               	subwf	(sprintf@width+1)^(0+128),f
 10259                           
 10260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10261  01FC  084A               	movf	sprintf@prec^(0+128),w
 10262  01FD  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10263  01FE  1903               	btfsc	3,2
 10264  01FF  2A01               	goto	u7141
 10265  0200  2A02               	goto	u7140
 10266  0201                     u7141:
 10267  0201  2A08               	goto	l4227
 10268  0202                     u7140:
 10269  0202                     l4225:
 10270                           
 10271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10272  0202  30FF               	movlw	255
 10273  0203  07BD               	addwf	sprintf@width^(0+128),f
 10274  0204  1803               	skipnc
 10275  0205  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10276  0206  30FF               	movlw	255
 10277  0207  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10278  0208                     l4227:
 10279                           
 10280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10281  0208  3003               	movlw	3
 10282  0209  053B               	andwf	sprintf@flag^(0+128),w
 10283  020A  00AD               	movwf	??_sprintf^(0+128)
 10284  020B  3000               	movlw	0
 10285  020C  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10286  020D  00AE               	movwf	(??_sprintf+1)^(0+128)
 10287  020E  082D               	movf	??_sprintf^(0+128),w
 10288  020F  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10289  0210  1903               	btfsc	3,2
 10290  0211  2A13               	goto	u7151
 10291  0212  2A14               	goto	u7150
 10292  0213                     u7151:
 10293  0213  2A29               	goto	l4237
 10294  0214                     u7150:
 10295  0214                     l4229:
 10296                           
 10297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10298  0214  30FF               	movlw	255
 10299  0215  07BD               	addwf	sprintf@width^(0+128),f
 10300  0216  1803               	skipnc
 10301  0217  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10302  0218  30FF               	movlw	255
 10303  0219  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10304  021A  2A29               	goto	l4237
 10305  021B                     l4231:
 10306                           
 10307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10308  021B  3020               	movlw	32
 10309  021C  1683               	bsf	3,5	;RP0=1, select bank1
 10310  021D  1303               	bcf	3,6	;RP1=0, select bank1
 10311  021E  00AD               	movwf	??_sprintf^(0+128)
 10312  021F  0849               	movf	sprintf@sp^(0+128),w
 10313  0220  0084               	movwf	4
 10314  0221  082D               	movf	??_sprintf^(0+128),w
 10315  0222  1783               	bsf	3,7	;select IRP bank2
 10316  0223  0080               	movwf	0
 10317  0224                     l4233:
 10318  0224  3001               	movlw	1
 10319  0225  00AD               	movwf	??_sprintf^(0+128)
 10320  0226  082D               	movf	??_sprintf^(0+128),w
 10321  0227  07C9               	addwf	sprintf@sp^(0+128),f
 10322  0228  2A14               	goto	l4229
 10323  0229                     l4237:
 10324                           
 10325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10326  0229  083E               	movf	(sprintf@width+1)^(0+128),w
 10327  022A  3A80               	xorlw	128
 10328  022B  00FF               	movwf	btemp+1
 10329  022C  3080               	movlw	128
 10330  022D  027F               	subwf	btemp+1,w
 10331  022E  1D03               	skipz
 10332  022F  2A32               	goto	u7165
 10333  0230  3001               	movlw	1
 10334  0231  023D               	subwf	sprintf@width^(0+128),w
 10335  0232                     u7165:
 10336  0232  1803               	skipnc
 10337  0233  2A35               	goto	u7161
 10338  0234  2A36               	goto	u7160
 10339  0235                     u7161:
 10340  0235  2A1B               	goto	l4231
 10341  0236                     u7160:
 10342  0236                     l4239:
 10343                           
 10344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10345  0236  3003               	movlw	3
 10346  0237  1683               	bsf	3,5	;RP0=1, select bank1
 10347  0238  1303               	bcf	3,6	;RP1=0, select bank1
 10348  0239  053B               	andwf	sprintf@flag^(0+128),w
 10349  023A  00AD               	movwf	??_sprintf^(0+128)
 10350  023B  3000               	movlw	0
 10351  023C  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10352  023D  00AE               	movwf	(??_sprintf+1)^(0+128)
 10353  023E  082D               	movf	??_sprintf^(0+128),w
 10354  023F  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10355  0240  1903               	btfsc	3,2
 10356  0241  2A43               	goto	u7171
 10357  0242  2A44               	goto	u7170
 10358  0243                     u7171:
 10359  0243  2AF6               	goto	l376
 10360  0244                     u7170:
 10361  0244                     l4241:
 10362                           
 10363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10364  0244  302D               	movlw	45
 10365  0245  00AD               	movwf	??_sprintf^(0+128)
 10366  0246  0849               	movf	sprintf@sp^(0+128),w
 10367  0247  0084               	movwf	4
 10368  0248  082D               	movf	??_sprintf^(0+128),w
 10369  0249  1783               	bsf	3,7	;select IRP bank2
 10370  024A  0080               	movwf	0
 10371  024B                     l4243:
 10372  024B  3001               	movlw	1
 10373  024C  00AD               	movwf	??_sprintf^(0+128)
 10374  024D  082D               	movf	??_sprintf^(0+128),w
 10375  024E  07C9               	addwf	sprintf@sp^(0+128),f
 10376  024F  2AF6               	goto	l376
 10377  0250                     l4245:
 10378                           
 10379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10380  0250  084C               	movf	sprintf@c^(0+128),w
 10381  0251  00AD               	movwf	??_sprintf^(0+128)
 10382  0252  3001               	movlw	1
 10383  0253                     u7185:
 10384  0253  1003               	clrc
 10385  0254  0DAD               	rlf	??_sprintf^(0+128),f
 10386  0255  3EFF               	addlw	-1
 10387  0256  1D03               	skipz
 10388  0257  2A53               	goto	u7185
 10389  0258  1003               	clrc
 10390  0259  0D2D               	rlf	??_sprintf^(0+128),w
 10391  025A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10392  025B  0084               	movwf	4
 10393  025C  160A  158A  200A  120A  118A  	fcall	stringdir
 10394  0261  1283               	bcf	3,5	;RP0=0, select bank0
 10395  0262  1303               	bcf	3,6	;RP1=0, select bank0
 10396  0263  00A0               	movwf	___lldiv@divisor
 10397  0264  160A  158A  200A  120A  118A  	fcall	stringdir
 10398  0269  00A1               	movwf	___lldiv@divisor+1
 10399  026A  160A  158A  200A  120A  118A  	fcall	stringdir
 10400  026F  00A2               	movwf	___lldiv@divisor+2
 10401  0270  160A  158A  200A  120A  118A  	fcall	stringdir
 10402  0275  00A3               	movwf	___lldiv@divisor+3
 10403  0276  1683               	bsf	3,5	;RP0=1, select bank1
 10404  0277  1303               	bcf	3,6	;RP1=0, select bank1
 10405  0278  083A               	movf	(sprintf@val+3)^(0+128),w
 10406  0279  1283               	bcf	3,5	;RP0=0, select bank0
 10407  027A  1303               	bcf	3,6	;RP1=0, select bank0
 10408  027B  00A7               	movwf	___lldiv@dividend+3
 10409  027C  1683               	bsf	3,5	;RP0=1, select bank1
 10410  027D  1303               	bcf	3,6	;RP1=0, select bank1
 10411  027E  0839               	movf	(sprintf@val+2)^(0+128),w
 10412  027F  1283               	bcf	3,5	;RP0=0, select bank0
 10413  0280  1303               	bcf	3,6	;RP1=0, select bank0
 10414  0281  00A6               	movwf	___lldiv@dividend+2
 10415  0282  1683               	bsf	3,5	;RP0=1, select bank1
 10416  0283  1303               	bcf	3,6	;RP1=0, select bank1
 10417  0284  0838               	movf	(sprintf@val+1)^(0+128),w
 10418  0285  1283               	bcf	3,5	;RP0=0, select bank0
 10419  0286  1303               	bcf	3,6	;RP1=0, select bank0
 10420  0287  00A5               	movwf	___lldiv@dividend+1
 10421  0288  1683               	bsf	3,5	;RP0=1, select bank1
 10422  0289  1303               	bcf	3,6	;RP1=0, select bank1
 10423  028A  0837               	movf	sprintf@val^(0+128),w
 10424  028B  1283               	bcf	3,5	;RP0=0, select bank0
 10425  028C  1303               	bcf	3,6	;RP1=0, select bank0
 10426  028D  00A4               	movwf	___lldiv@dividend
 10427  028E  160A  158A  268B  120A  118A  	fcall	___lldiv
 10428  0293  1283               	bcf	3,5	;RP0=0, select bank0
 10429  0294  1303               	bcf	3,6	;RP1=0, select bank0
 10430  0295  0823               	movf	?___lldiv+3,w
 10431  0296  1683               	bsf	3,5	;RP0=1, select bank1
 10432  0297  1303               	bcf	3,6	;RP1=0, select bank1
 10433  0298  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10434  0299  1283               	bcf	3,5	;RP0=0, select bank0
 10435  029A  1303               	bcf	3,6	;RP1=0, select bank0
 10436  029B  0822               	movf	?___lldiv+2,w
 10437  029C  1683               	bsf	3,5	;RP0=1, select bank1
 10438  029D  1303               	bcf	3,6	;RP1=0, select bank1
 10439  029E  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10440  029F  1283               	bcf	3,5	;RP0=0, select bank0
 10441  02A0  1303               	bcf	3,6	;RP1=0, select bank0
 10442  02A1  0821               	movf	?___lldiv+1,w
 10443  02A2  1683               	bsf	3,5	;RP0=1, select bank1
 10444  02A3  1303               	bcf	3,6	;RP1=0, select bank1
 10445  02A4  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10446  02A5  1283               	bcf	3,5	;RP0=0, select bank0
 10447  02A6  1303               	bcf	3,6	;RP1=0, select bank0
 10448  02A7  0820               	movf	?___lldiv,w
 10449  02A8  1683               	bsf	3,5	;RP0=1, select bank1
 10450  02A9  1303               	bcf	3,6	;RP1=0, select bank1
 10451  02AA  00BF               	movwf	sprintf@tmpval^(0+128)
 10452  02AB                     l4247:
 10453                           
 10454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10455  02AB  3000               	movlw	0
 10456  02AC  1283               	bcf	3,5	;RP0=0, select bank0
 10457  02AD  1303               	bcf	3,6	;RP1=0, select bank0
 10458  02AE  00A3               	movwf	___llmod@divisor+3
 10459  02AF  3000               	movlw	0
 10460  02B0  00A2               	movwf	___llmod@divisor+2
 10461  02B1  3000               	movlw	0
 10462  02B2  00A1               	movwf	___llmod@divisor+1
 10463  02B3  300A               	movlw	10
 10464  02B4  00A0               	movwf	___llmod@divisor
 10465  02B5  1683               	bsf	3,5	;RP0=1, select bank1
 10466  02B6  1303               	bcf	3,6	;RP1=0, select bank1
 10467  02B7  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10468  02B8  1283               	bcf	3,5	;RP0=0, select bank0
 10469  02B9  1303               	bcf	3,6	;RP1=0, select bank0
 10470  02BA  00A7               	movwf	___llmod@dividend+3
 10471  02BB  1683               	bsf	3,5	;RP0=1, select bank1
 10472  02BC  1303               	bcf	3,6	;RP1=0, select bank1
 10473  02BD  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10474  02BE  1283               	bcf	3,5	;RP0=0, select bank0
 10475  02BF  1303               	bcf	3,6	;RP1=0, select bank0
 10476  02C0  00A6               	movwf	___llmod@dividend+2
 10477  02C1  1683               	bsf	3,5	;RP0=1, select bank1
 10478  02C2  1303               	bcf	3,6	;RP1=0, select bank1
 10479  02C3  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10480  02C4  1283               	bcf	3,5	;RP0=0, select bank0
 10481  02C5  1303               	bcf	3,6	;RP1=0, select bank0
 10482  02C6  00A5               	movwf	___llmod@dividend+1
 10483  02C7  1683               	bsf	3,5	;RP0=1, select bank1
 10484  02C8  1303               	bcf	3,6	;RP1=0, select bank1
 10485  02C9  083F               	movf	sprintf@tmpval^(0+128),w
 10486  02CA  1283               	bcf	3,5	;RP0=0, select bank0
 10487  02CB  1303               	bcf	3,6	;RP1=0, select bank0
 10488  02CC  00A4               	movwf	___llmod@dividend
 10489  02CD  160A  158A  257E  120A  118A  	fcall	___llmod
 10490  02D2  1283               	bcf	3,5	;RP0=0, select bank0
 10491  02D3  1303               	bcf	3,6	;RP1=0, select bank0
 10492  02D4  0823               	movf	?___llmod+3,w
 10493  02D5  1683               	bsf	3,5	;RP0=1, select bank1
 10494  02D6  1303               	bcf	3,6	;RP1=0, select bank1
 10495  02D7  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10496  02D8  1283               	bcf	3,5	;RP0=0, select bank0
 10497  02D9  1303               	bcf	3,6	;RP1=0, select bank0
 10498  02DA  0822               	movf	?___llmod+2,w
 10499  02DB  1683               	bsf	3,5	;RP0=1, select bank1
 10500  02DC  1303               	bcf	3,6	;RP1=0, select bank1
 10501  02DD  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10502  02DE  1283               	bcf	3,5	;RP0=0, select bank0
 10503  02DF  1303               	bcf	3,6	;RP1=0, select bank0
 10504  02E0  0821               	movf	?___llmod+1,w
 10505  02E1  1683               	bsf	3,5	;RP0=1, select bank1
 10506  02E2  1303               	bcf	3,6	;RP1=0, select bank1
 10507  02E3  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10508  02E4  1283               	bcf	3,5	;RP0=0, select bank0
 10509  02E5  1303               	bcf	3,6	;RP1=0, select bank0
 10510  02E6  0820               	movf	?___llmod,w
 10511  02E7  1683               	bsf	3,5	;RP0=1, select bank1
 10512  02E8  1303               	bcf	3,6	;RP1=0, select bank1
 10513  02E9  00BF               	movwf	sprintf@tmpval^(0+128)
 10514  02EA                     l4249:
 10515                           
 10516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10517  02EA  083F               	movf	sprintf@tmpval^(0+128),w
 10518  02EB  3E30               	addlw	48
 10519  02EC  00AD               	movwf	??_sprintf^(0+128)
 10520  02ED  0849               	movf	sprintf@sp^(0+128),w
 10521  02EE  0084               	movwf	4
 10522  02EF  082D               	movf	??_sprintf^(0+128),w
 10523  02F0  1783               	bsf	3,7	;select IRP bank2
 10524  02F1  0080               	movwf	0
 10525  02F2  3001               	movlw	1
 10526  02F3  00AD               	movwf	??_sprintf^(0+128)
 10527  02F4  082D               	movf	??_sprintf^(0+128),w
 10528  02F5  07C9               	addwf	sprintf@sp^(0+128),f
 10529  02F6                     l376:	
 10530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10531                           
 10532                           
 10533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10534  02F6  3001               	movlw	1
 10535  02F7  02CC               	subwf	sprintf@c^(0+128),f
 10536  02F8  0A4C               	incf	sprintf@c^(0+128),w
 10537  02F9  1D03               	btfss	3,2
 10538  02FA  2AFC               	goto	u7191
 10539  02FB  2AFD               	goto	u7190
 10540  02FC                     u7191:
 10541  02FC  2A50               	goto	l4245
 10542  02FD                     u7190:
 10543  02FD  2B11               	goto	l4257
 10544  02FE                     l4251:
 10545                           
 10546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10547  02FE  3030               	movlw	48
 10548  02FF  1683               	bsf	3,5	;RP0=1, select bank1
 10549  0300  1303               	bcf	3,6	;RP1=0, select bank1
 10550  0301  00AD               	movwf	??_sprintf^(0+128)
 10551  0302  0849               	movf	sprintf@sp^(0+128),w
 10552  0303  0084               	movwf	4
 10553  0304  082D               	movf	??_sprintf^(0+128),w
 10554  0305  1783               	bsf	3,7	;select IRP bank2
 10555  0306  0080               	movwf	0
 10556  0307                     l4253:
 10557  0307  3001               	movlw	1
 10558  0308  00AD               	movwf	??_sprintf^(0+128)
 10559  0309  082D               	movf	??_sprintf^(0+128),w
 10560  030A  07C9               	addwf	sprintf@sp^(0+128),f
 10561  030B                     l4255:
 10562                           
 10563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10564  030B  30FF               	movlw	255
 10565  030C  07C3               	addwf	sprintf@eexp^(0+128),f
 10566  030D  1803               	skipnc
 10567  030E  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10568  030F  30FF               	movlw	255
 10569  0310  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10570  0311                     l4257:
 10571                           
 10572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10573  0311  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10574  0312  3A80               	xorlw	128
 10575  0313  00FF               	movwf	btemp+1
 10576  0314  3080               	movlw	128
 10577  0315  027F               	subwf	btemp+1,w
 10578  0316  1D03               	skipz
 10579  0317  2B1A               	goto	u7205
 10580  0318  3001               	movlw	1
 10581  0319  0243               	subwf	sprintf@eexp^(0+128),w
 10582  031A                     u7205:
 10583  031A  1803               	skipnc
 10584  031B  2B1D               	goto	u7201
 10585  031C  2B1E               	goto	u7200
 10586  031D                     u7201:
 10587  031D  2AFE               	goto	l4251
 10588  031E                     u7200:
 10589  031E                     l4259:
 10590                           
 10591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10592  031E  1683               	bsf	3,5	;RP0=1, select bank1
 10593  031F  1303               	bcf	3,6	;RP1=0, select bank1
 10594  0320  084B               	movf	(sprintf@prec+1)^(0+128),w
 10595  0321  3A80               	xorlw	128
 10596  0322  00FF               	movwf	btemp+1
 10597  0323  3080               	movlw	128
 10598  0324  027F               	subwf	btemp+1,w
 10599  0325  1D03               	skipz
 10600  0326  2B29               	goto	u7215
 10601  0327  3009               	movlw	9
 10602  0328  024A               	subwf	sprintf@prec^(0+128),w
 10603  0329                     u7215:
 10604  0329  1C03               	skipc
 10605  032A  2B2C               	goto	u7211
 10606  032B  2B2D               	goto	u7210
 10607  032C                     u7211:
 10608  032C  2B34               	goto	l4263
 10609  032D                     u7210:
 10610  032D                     l4261:
 10611                           
 10612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10613  032D  3008               	movlw	8
 10614  032E  1683               	bsf	3,5	;RP0=1, select bank1
 10615  032F  1303               	bcf	3,6	;RP1=0, select bank1
 10616  0330  00AD               	movwf	??_sprintf^(0+128)
 10617  0331  082D               	movf	??_sprintf^(0+128),w
 10618  0332  00CC               	movwf	sprintf@c^(0+128)
 10619  0333  2B3A               	goto	l383
 10620  0334                     l4263:
 10621                           
 10622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10623  0334  1683               	bsf	3,5	;RP0=1, select bank1
 10624  0335  1303               	bcf	3,6	;RP1=0, select bank1
 10625  0336  084A               	movf	sprintf@prec^(0+128),w
 10626  0337  00AD               	movwf	??_sprintf^(0+128)
 10627  0338  082D               	movf	??_sprintf^(0+128),w
 10628  0339  00CC               	movwf	sprintf@c^(0+128)
 10629  033A                     l383:
 10630                           
 10631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10632  033A  084C               	movf	sprintf@c^(0+128),w
 10633  033B  00AD               	movwf	??_sprintf^(0+128)
 10634  033C  01AE               	clrf	(??_sprintf^(0+128)+1)
 10635  033D  082D               	movf	??_sprintf^(0+128),w
 10636  033E  02CA               	subwf	sprintf@prec^(0+128),f
 10637  033F  082E               	movf	(??_sprintf+1)^(0+128),w
 10638  0340  1C03               	skipc
 10639  0341  03CB               	decf	(sprintf@prec+1)^(0+128),f
 10640  0342  02CB               	subwf	(sprintf@prec+1)^(0+128),f
 10641  0343                     l4265:
 10642                           
 10643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10644  0343  084C               	movf	sprintf@c^(0+128),w
 10645  0344  1903               	btfsc	3,2
 10646  0345  2B47               	goto	u7221
 10647  0346  2B48               	goto	u7220
 10648  0347                     u7221:
 10649  0347  2B53               	goto	l4271
 10650  0348                     u7220:
 10651  0348                     l4267:
 10652                           
 10653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10654  0348  302E               	movlw	46
 10655  0349  00AD               	movwf	??_sprintf^(0+128)
 10656  034A  0849               	movf	sprintf@sp^(0+128),w
 10657  034B  0084               	movwf	4
 10658  034C  082D               	movf	??_sprintf^(0+128),w
 10659  034D  1783               	bsf	3,7	;select IRP bank2
 10660  034E  0080               	movwf	0
 10661  034F                     l4269:
 10662  034F  3001               	movlw	1
 10663  0350  00AD               	movwf	??_sprintf^(0+128)
 10664  0351  082D               	movf	??_sprintf^(0+128),w
 10665  0352  07C9               	addwf	sprintf@sp^(0+128),f
 10666  0353                     l4271:
 10667                           
 10668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10669  0353  084C               	movf	sprintf@c^(0+128),w
 10670  0354  120A  158A  249D  120A  118A  	fcall	_scale
 10671  0359  1283               	bcf	3,5	;RP0=0, select bank0
 10672  035A  1303               	bcf	3,6	;RP1=0, select bank0
 10673  035B  0848               	movf	?_scale+3,w
 10674  035C  1683               	bsf	3,5	;RP0=1, select bank1
 10675  035D  1303               	bcf	3,6	;RP1=0, select bank1
 10676  035E  00B5               	movwf	(_sprintf$1267+3)^(0+128)
 10677  035F  1283               	bcf	3,5	;RP0=0, select bank0
 10678  0360  1303               	bcf	3,6	;RP1=0, select bank0
 10679  0361  0847               	movf	?_scale+2,w
 10680  0362  1683               	bsf	3,5	;RP0=1, select bank1
 10681  0363  1303               	bcf	3,6	;RP1=0, select bank1
 10682  0364  00B4               	movwf	(_sprintf$1267+2)^(0+128)
 10683  0365  1283               	bcf	3,5	;RP0=0, select bank0
 10684  0366  1303               	bcf	3,6	;RP1=0, select bank0
 10685  0367  0846               	movf	?_scale+1,w
 10686  0368  1683               	bsf	3,5	;RP0=1, select bank1
 10687  0369  1303               	bcf	3,6	;RP1=0, select bank1
 10688  036A  00B3               	movwf	(_sprintf$1267+1)^(0+128)
 10689  036B  1283               	bcf	3,5	;RP0=0, select bank0
 10690  036C  1303               	bcf	3,6	;RP1=0, select bank0
 10691  036D  0845               	movf	?_scale,w
 10692  036E  1683               	bsf	3,5	;RP0=1, select bank1
 10693  036F  1303               	bcf	3,6	;RP1=0, select bank1
 10694  0370  00B2               	movwf	_sprintf$1267^(0+128)
 10695  0371                     l4273:
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10698  0371  0835               	movf	(_sprintf$1267+3)^(0+128),w
 10699  0372  1283               	bcf	3,5	;RP0=0, select bank0
 10700  0373  1303               	bcf	3,6	;RP1=0, select bank0
 10701  0374  00B2               	movwf	___flmul@a+3
 10702  0375  1683               	bsf	3,5	;RP0=1, select bank1
 10703  0376  1303               	bcf	3,6	;RP1=0, select bank1
 10704  0377  0834               	movf	(_sprintf$1267+2)^(0+128),w
 10705  0378  1283               	bcf	3,5	;RP0=0, select bank0
 10706  0379  1303               	bcf	3,6	;RP1=0, select bank0
 10707  037A  00B1               	movwf	___flmul@a+2
 10708  037B  1683               	bsf	3,5	;RP0=1, select bank1
 10709  037C  1303               	bcf	3,6	;RP1=0, select bank1
 10710  037D  0833               	movf	(_sprintf$1267+1)^(0+128),w
 10711  037E  1283               	bcf	3,5	;RP0=0, select bank0
 10712  037F  1303               	bcf	3,6	;RP1=0, select bank0
 10713  0380  00B0               	movwf	___flmul@a+1
 10714  0381  1683               	bsf	3,5	;RP0=1, select bank1
 10715  0382  1303               	bcf	3,6	;RP1=0, select bank1
 10716  0383  0832               	movf	_sprintf$1267^(0+128),w
 10717  0384  1283               	bcf	3,5	;RP0=0, select bank0
 10718  0385  1303               	bcf	3,6	;RP1=0, select bank0
 10719  0386  00AF               	movwf	___flmul@a
 10720  0387  1683               	bsf	3,5	;RP0=1, select bank1
 10721  0388  1303               	bcf	3,6	;RP1=0, select bank1
 10722  0389  0848               	movf	(sprintf@fval+3)^(0+128),w
 10723  038A  1283               	bcf	3,5	;RP0=0, select bank0
 10724  038B  1303               	bcf	3,6	;RP1=0, select bank0
 10725  038C  00AE               	movwf	___flmul@b+3
 10726  038D  1683               	bsf	3,5	;RP0=1, select bank1
 10727  038E  1303               	bcf	3,6	;RP1=0, select bank1
 10728  038F  0847               	movf	(sprintf@fval+2)^(0+128),w
 10729  0390  1283               	bcf	3,5	;RP0=0, select bank0
 10730  0391  1303               	bcf	3,6	;RP1=0, select bank0
 10731  0392  00AD               	movwf	___flmul@b+2
 10732  0393  1683               	bsf	3,5	;RP0=1, select bank1
 10733  0394  1303               	bcf	3,6	;RP1=0, select bank1
 10734  0395  0846               	movf	(sprintf@fval+1)^(0+128),w
 10735  0396  1283               	bcf	3,5	;RP0=0, select bank0
 10736  0397  1303               	bcf	3,6	;RP1=0, select bank0
 10737  0398  00AC               	movwf	___flmul@b+1
 10738  0399  1683               	bsf	3,5	;RP0=1, select bank1
 10739  039A  1303               	bcf	3,6	;RP1=0, select bank1
 10740  039B  0845               	movf	sprintf@fval^(0+128),w
 10741  039C  1283               	bcf	3,5	;RP0=0, select bank0
 10742  039D  1303               	bcf	3,6	;RP1=0, select bank0
 10743  039E  00AB               	movwf	___flmul@b
 10744  039F  120A  158A  213C  120A  118A  	fcall	___flmul
 10745  03A4  1283               	bcf	3,5	;RP0=0, select bank0
 10746  03A5  1303               	bcf	3,6	;RP1=0, select bank0
 10747  03A6  082E               	movf	?___flmul+3,w
 10748  03A7  00DB               	movwf	___fltol@f1+3
 10749  03A8  082D               	movf	?___flmul+2,w
 10750  03A9  00DA               	movwf	___fltol@f1+2
 10751  03AA  082C               	movf	?___flmul+1,w
 10752  03AB  00D9               	movwf	___fltol@f1+1
 10753  03AC  082B               	movf	?___flmul,w
 10754  03AD  00D8               	movwf	___fltol@f1
 10755  03AE  120A  158A  2000  120A  118A  	fcall	___fltol
 10756  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 10757  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 10758  03B5  085B               	movf	?___fltol+3,w
 10759  03B6  1683               	bsf	3,5	;RP0=1, select bank1
 10760  03B7  1303               	bcf	3,6	;RP1=0, select bank1
 10761  03B8  00BA               	movwf	(sprintf@val+3)^(0+128)
 10762  03B9  1283               	bcf	3,5	;RP0=0, select bank0
 10763  03BA  1303               	bcf	3,6	;RP1=0, select bank0
 10764  03BB  085A               	movf	?___fltol+2,w
 10765  03BC  1683               	bsf	3,5	;RP0=1, select bank1
 10766  03BD  1303               	bcf	3,6	;RP1=0, select bank1
 10767  03BE  00B9               	movwf	(sprintf@val+2)^(0+128)
 10768  03BF  1283               	bcf	3,5	;RP0=0, select bank0
 10769  03C0  1303               	bcf	3,6	;RP1=0, select bank0
 10770  03C1  0859               	movf	?___fltol+1,w
 10771  03C2  1683               	bsf	3,5	;RP0=1, select bank1
 10772  03C3  1303               	bcf	3,6	;RP1=0, select bank1
 10773  03C4  00B8               	movwf	(sprintf@val+1)^(0+128)
 10774  03C5  1283               	bcf	3,5	;RP0=0, select bank0
 10775  03C6  1303               	bcf	3,6	;RP1=0, select bank0
 10776  03C7  0858               	movf	?___fltol,w
 10777  03C8  1683               	bsf	3,5	;RP0=1, select bank1
 10778  03C9  1303               	bcf	3,6	;RP1=0, select bank1
 10779  03CA  00B7               	movwf	sprintf@val^(0+128)
 10780                           
 10781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10782  03CB  2CCD               	goto	l4283
 10783  03CC                     l4275:
 10784                           
 10785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10786  03CC  084C               	movf	sprintf@c^(0+128),w
 10787  03CD  00AD               	movwf	??_sprintf^(0+128)
 10788  03CE  3001               	movlw	1
 10789  03CF                     u7235:
 10790  03CF  1003               	clrc
 10791  03D0  0DAD               	rlf	??_sprintf^(0+128),f
 10792  03D1  3EFF               	addlw	-1
 10793  03D2  1D03               	skipz
 10794  03D3  2BCF               	goto	u7235
 10795  03D4  1003               	clrc
 10796  03D5  0D2D               	rlf	??_sprintf^(0+128),w
 10797  03D6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10798  03D7  0084               	movwf	4
 10799  03D8  160A  158A  200A  120A  118A  	fcall	stringdir
 10800  03DD  1283               	bcf	3,5	;RP0=0, select bank0
 10801  03DE  1303               	bcf	3,6	;RP1=0, select bank0
 10802  03DF  00A0               	movwf	___lldiv@divisor
 10803  03E0  160A  158A  200A  120A  118A  	fcall	stringdir
 10804  03E5  00A1               	movwf	___lldiv@divisor+1
 10805  03E6  160A  158A  200A  120A  118A  	fcall	stringdir
 10806  03EB  00A2               	movwf	___lldiv@divisor+2
 10807  03EC  160A  158A  200A  120A  118A  	fcall	stringdir
 10808  03F1  00A3               	movwf	___lldiv@divisor+3
 10809  03F2  1683               	bsf	3,5	;RP0=1, select bank1
 10810  03F3  1303               	bcf	3,6	;RP1=0, select bank1
 10811  03F4  083A               	movf	(sprintf@val+3)^(0+128),w
 10812  03F5  1283               	bcf	3,5	;RP0=0, select bank0
 10813  03F6  1303               	bcf	3,6	;RP1=0, select bank0
 10814  03F7  00A7               	movwf	___lldiv@dividend+3
 10815  03F8  1683               	bsf	3,5	;RP0=1, select bank1
 10816  03F9  1303               	bcf	3,6	;RP1=0, select bank1
 10817  03FA  0839               	movf	(sprintf@val+2)^(0+128),w
 10818  03FB  1283               	bcf	3,5	;RP0=0, select bank0
 10819  03FC  1303               	bcf	3,6	;RP1=0, select bank0
 10820  03FD  00A6               	movwf	___lldiv@dividend+2
 10821  03FE  1683               	bsf	3,5	;RP0=1, select bank1
 10822  03FF  1303               	bcf	3,6	;RP1=0, select bank1
 10823  0400  0838               	movf	(sprintf@val+1)^(0+128),w
 10824  0401  1283               	bcf	3,5	;RP0=0, select bank0
 10825  0402  1303               	bcf	3,6	;RP1=0, select bank0
 10826  0403  00A5               	movwf	___lldiv@dividend+1
 10827  0404  1683               	bsf	3,5	;RP0=1, select bank1
 10828  0405  1303               	bcf	3,6	;RP1=0, select bank1
 10829  0406  0837               	movf	sprintf@val^(0+128),w
 10830  0407  1283               	bcf	3,5	;RP0=0, select bank0
 10831  0408  1303               	bcf	3,6	;RP1=0, select bank0
 10832  0409  00A4               	movwf	___lldiv@dividend
 10833  040A  160A  158A  268B  120A  118A  	fcall	___lldiv
 10834  040F  1283               	bcf	3,5	;RP0=0, select bank0
 10835  0410  1303               	bcf	3,6	;RP1=0, select bank0
 10836  0411  0823               	movf	?___lldiv+3,w
 10837  0412  1683               	bsf	3,5	;RP0=1, select bank1
 10838  0413  1303               	bcf	3,6	;RP1=0, select bank1
 10839  0414  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10840  0415  1283               	bcf	3,5	;RP0=0, select bank0
 10841  0416  1303               	bcf	3,6	;RP1=0, select bank0
 10842  0417  0822               	movf	?___lldiv+2,w
 10843  0418  1683               	bsf	3,5	;RP0=1, select bank1
 10844  0419  1303               	bcf	3,6	;RP1=0, select bank1
 10845  041A  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10846  041B  1283               	bcf	3,5	;RP0=0, select bank0
 10847  041C  1303               	bcf	3,6	;RP1=0, select bank0
 10848  041D  0821               	movf	?___lldiv+1,w
 10849  041E  1683               	bsf	3,5	;RP0=1, select bank1
 10850  041F  1303               	bcf	3,6	;RP1=0, select bank1
 10851  0420  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10852  0421  1283               	bcf	3,5	;RP0=0, select bank0
 10853  0422  1303               	bcf	3,6	;RP1=0, select bank0
 10854  0423  0820               	movf	?___lldiv,w
 10855  0424  1683               	bsf	3,5	;RP0=1, select bank1
 10856  0425  1303               	bcf	3,6	;RP1=0, select bank1
 10857  0426  00BF               	movwf	sprintf@tmpval^(0+128)
 10858  0427                     l4277:
 10859                           
 10860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10861  0427  3000               	movlw	0
 10862  0428  1283               	bcf	3,5	;RP0=0, select bank0
 10863  0429  1303               	bcf	3,6	;RP1=0, select bank0
 10864  042A  00A3               	movwf	___llmod@divisor+3
 10865  042B  3000               	movlw	0
 10866  042C  00A2               	movwf	___llmod@divisor+2
 10867  042D  3000               	movlw	0
 10868  042E  00A1               	movwf	___llmod@divisor+1
 10869  042F  300A               	movlw	10
 10870  0430  00A0               	movwf	___llmod@divisor
 10871  0431  1683               	bsf	3,5	;RP0=1, select bank1
 10872  0432  1303               	bcf	3,6	;RP1=0, select bank1
 10873  0433  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10874  0434  1283               	bcf	3,5	;RP0=0, select bank0
 10875  0435  1303               	bcf	3,6	;RP1=0, select bank0
 10876  0436  00A7               	movwf	___llmod@dividend+3
 10877  0437  1683               	bsf	3,5	;RP0=1, select bank1
 10878  0438  1303               	bcf	3,6	;RP1=0, select bank1
 10879  0439  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10880  043A  1283               	bcf	3,5	;RP0=0, select bank0
 10881  043B  1303               	bcf	3,6	;RP1=0, select bank0
 10882  043C  00A6               	movwf	___llmod@dividend+2
 10883  043D  1683               	bsf	3,5	;RP0=1, select bank1
 10884  043E  1303               	bcf	3,6	;RP1=0, select bank1
 10885  043F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10886  0440  1283               	bcf	3,5	;RP0=0, select bank0
 10887  0441  1303               	bcf	3,6	;RP1=0, select bank0
 10888  0442  00A5               	movwf	___llmod@dividend+1
 10889  0443  1683               	bsf	3,5	;RP0=1, select bank1
 10890  0444  1303               	bcf	3,6	;RP1=0, select bank1
 10891  0445  083F               	movf	sprintf@tmpval^(0+128),w
 10892  0446  1283               	bcf	3,5	;RP0=0, select bank0
 10893  0447  1303               	bcf	3,6	;RP1=0, select bank0
 10894  0448  00A4               	movwf	___llmod@dividend
 10895  0449  160A  158A  257E  120A  118A  	fcall	___llmod
 10896  044E  1283               	bcf	3,5	;RP0=0, select bank0
 10897  044F  1303               	bcf	3,6	;RP1=0, select bank0
 10898  0450  0823               	movf	?___llmod+3,w
 10899  0451  1683               	bsf	3,5	;RP0=1, select bank1
 10900  0452  1303               	bcf	3,6	;RP1=0, select bank1
 10901  0453  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10902  0454  1283               	bcf	3,5	;RP0=0, select bank0
 10903  0455  1303               	bcf	3,6	;RP1=0, select bank0
 10904  0456  0822               	movf	?___llmod+2,w
 10905  0457  1683               	bsf	3,5	;RP0=1, select bank1
 10906  0458  1303               	bcf	3,6	;RP1=0, select bank1
 10907  0459  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10908  045A  1283               	bcf	3,5	;RP0=0, select bank0
 10909  045B  1303               	bcf	3,6	;RP1=0, select bank0
 10910  045C  0821               	movf	?___llmod+1,w
 10911  045D  1683               	bsf	3,5	;RP0=1, select bank1
 10912  045E  1303               	bcf	3,6	;RP1=0, select bank1
 10913  045F  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10914  0460  1283               	bcf	3,5	;RP0=0, select bank0
 10915  0461  1303               	bcf	3,6	;RP1=0, select bank0
 10916  0462  0820               	movf	?___llmod,w
 10917  0463  1683               	bsf	3,5	;RP0=1, select bank1
 10918  0464  1303               	bcf	3,6	;RP1=0, select bank1
 10919  0465  00BF               	movwf	sprintf@tmpval^(0+128)
 10920  0466                     l4279:
 10921                           
 10922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10923  0466  083F               	movf	sprintf@tmpval^(0+128),w
 10924  0467  3E30               	addlw	48
 10925  0468  00AD               	movwf	??_sprintf^(0+128)
 10926  0469  0849               	movf	sprintf@sp^(0+128),w
 10927  046A  0084               	movwf	4
 10928  046B  082D               	movf	??_sprintf^(0+128),w
 10929  046C  1783               	bsf	3,7	;select IRP bank2
 10930  046D  0080               	movwf	0
 10931  046E  3001               	movlw	1
 10932  046F  00AD               	movwf	??_sprintf^(0+128)
 10933  0470  082D               	movf	??_sprintf^(0+128),w
 10934  0471  07C9               	addwf	sprintf@sp^(0+128),f
 10935  0472                     l4281:
 10936                           
 10937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10938  0472  084C               	movf	sprintf@c^(0+128),w
 10939  0473  00AD               	movwf	??_sprintf^(0+128)
 10940  0474  3001               	movlw	1
 10941  0475                     u7245:
 10942  0475  1003               	clrc
 10943  0476  0DAD               	rlf	??_sprintf^(0+128),f
 10944  0477  3EFF               	addlw	-1
 10945  0478  1D03               	skipz
 10946  0479  2C75               	goto	u7245
 10947  047A  1003               	clrc
 10948  047B  0D2D               	rlf	??_sprintf^(0+128),w
 10949  047C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10950  047D  0084               	movwf	4
 10951  047E  160A  158A  200A  120A  118A  	fcall	stringdir
 10952  0483  1283               	bcf	3,5	;RP0=0, select bank0
 10953  0484  1303               	bcf	3,6	;RP1=0, select bank0
 10954  0485  00A0               	movwf	___llmod@divisor
 10955  0486  160A  158A  200A  120A  118A  	fcall	stringdir
 10956  048B  00A1               	movwf	___llmod@divisor+1
 10957  048C  160A  158A  200A  120A  118A  	fcall	stringdir
 10958  0491  00A2               	movwf	___llmod@divisor+2
 10959  0492  160A  158A  200A  120A  118A  	fcall	stringdir
 10960  0497  00A3               	movwf	___llmod@divisor+3
 10961  0498  1683               	bsf	3,5	;RP0=1, select bank1
 10962  0499  1303               	bcf	3,6	;RP1=0, select bank1
 10963  049A  083A               	movf	(sprintf@val+3)^(0+128),w
 10964  049B  1283               	bcf	3,5	;RP0=0, select bank0
 10965  049C  1303               	bcf	3,6	;RP1=0, select bank0
 10966  049D  00A7               	movwf	___llmod@dividend+3
 10967  049E  1683               	bsf	3,5	;RP0=1, select bank1
 10968  049F  1303               	bcf	3,6	;RP1=0, select bank1
 10969  04A0  0839               	movf	(sprintf@val+2)^(0+128),w
 10970  04A1  1283               	bcf	3,5	;RP0=0, select bank0
 10971  04A2  1303               	bcf	3,6	;RP1=0, select bank0
 10972  04A3  00A6               	movwf	___llmod@dividend+2
 10973  04A4  1683               	bsf	3,5	;RP0=1, select bank1
 10974  04A5  1303               	bcf	3,6	;RP1=0, select bank1
 10975  04A6  0838               	movf	(sprintf@val+1)^(0+128),w
 10976  04A7  1283               	bcf	3,5	;RP0=0, select bank0
 10977  04A8  1303               	bcf	3,6	;RP1=0, select bank0
 10978  04A9  00A5               	movwf	___llmod@dividend+1
 10979  04AA  1683               	bsf	3,5	;RP0=1, select bank1
 10980  04AB  1303               	bcf	3,6	;RP1=0, select bank1
 10981  04AC  0837               	movf	sprintf@val^(0+128),w
 10982  04AD  1283               	bcf	3,5	;RP0=0, select bank0
 10983  04AE  1303               	bcf	3,6	;RP1=0, select bank0
 10984  04AF  00A4               	movwf	___llmod@dividend
 10985  04B0  160A  158A  257E  120A  118A  	fcall	___llmod
 10986  04B5  1283               	bcf	3,5	;RP0=0, select bank0
 10987  04B6  1303               	bcf	3,6	;RP1=0, select bank0
 10988  04B7  0823               	movf	?___llmod+3,w
 10989  04B8  1683               	bsf	3,5	;RP0=1, select bank1
 10990  04B9  1303               	bcf	3,6	;RP1=0, select bank1
 10991  04BA  00BA               	movwf	(sprintf@val+3)^(0+128)
 10992  04BB  1283               	bcf	3,5	;RP0=0, select bank0
 10993  04BC  1303               	bcf	3,6	;RP1=0, select bank0
 10994  04BD  0822               	movf	?___llmod+2,w
 10995  04BE  1683               	bsf	3,5	;RP0=1, select bank1
 10996  04BF  1303               	bcf	3,6	;RP1=0, select bank1
 10997  04C0  00B9               	movwf	(sprintf@val+2)^(0+128)
 10998  04C1  1283               	bcf	3,5	;RP0=0, select bank0
 10999  04C2  1303               	bcf	3,6	;RP1=0, select bank0
 11000  04C3  0821               	movf	?___llmod+1,w
 11001  04C4  1683               	bsf	3,5	;RP0=1, select bank1
 11002  04C5  1303               	bcf	3,6	;RP1=0, select bank1
 11003  04C6  00B8               	movwf	(sprintf@val+1)^(0+128)
 11004  04C7  1283               	bcf	3,5	;RP0=0, select bank0
 11005  04C8  1303               	bcf	3,6	;RP1=0, select bank0
 11006  04C9  0820               	movf	?___llmod,w
 11007  04CA  1683               	bsf	3,5	;RP0=1, select bank1
 11008  04CB  1303               	bcf	3,6	;RP1=0, select bank1
 11009  04CC  00B7               	movwf	sprintf@val^(0+128)
 11010  04CD                     l4283:
 11011                           
 11012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11013  04CD  3001               	movlw	1
 11014  04CE  02CC               	subwf	sprintf@c^(0+128),f
 11015  04CF  0A4C               	incf	sprintf@c^(0+128),w
 11016  04D0  1D03               	btfss	3,2
 11017  04D1  2CD3               	goto	u7251
 11018  04D2  2CD4               	goto	u7250
 11019  04D3                     u7251:
 11020  04D3  2BCC               	goto	l4275
 11021  04D4                     u7250:
 11022  04D4  2CE6               	goto	l4291
 11023  04D5                     l4285:
 11024                           
 11025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11026  04D5  3030               	movlw	48
 11027  04D6  00AD               	movwf	??_sprintf^(0+128)
 11028  04D7  0849               	movf	sprintf@sp^(0+128),w
 11029  04D8  0084               	movwf	4
 11030  04D9  082D               	movf	??_sprintf^(0+128),w
 11031  04DA  1783               	bsf	3,7	;select IRP bank2
 11032  04DB  0080               	movwf	0
 11033  04DC                     l4287:
 11034  04DC  3001               	movlw	1
 11035  04DD  00AD               	movwf	??_sprintf^(0+128)
 11036  04DE  082D               	movf	??_sprintf^(0+128),w
 11037  04DF  07C9               	addwf	sprintf@sp^(0+128),f
 11038  04E0                     l4289:
 11039                           
 11040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11041  04E0  30FF               	movlw	255
 11042  04E1  07CA               	addwf	sprintf@prec^(0+128),f
 11043  04E2  1803               	skipnc
 11044  04E3  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11045  04E4  30FF               	movlw	255
 11046  04E5  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11047  04E6                     l4291:
 11048                           
 11049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11050  04E6  084A               	movf	sprintf@prec^(0+128),w
 11051  04E7  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11052  04E8  1D03               	btfss	3,2
 11053  04E9  2CEB               	goto	u7261
 11054  04EA  2CEC               	goto	u7260
 11055  04EB                     u7261:
 11056  04EB  2CD5               	goto	l4285
 11057  04EC                     u7260:
 11058  04EC  2DB2               	goto	l4339
 11059  04ED                     l4293:
 11060                           
 11061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11062  04ED  084A               	movf	sprintf@prec^(0+128),w
 11063  04EE  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11064  04EF  1D03               	btfss	3,2
 11065  04F0  2CF2               	goto	u7271
 11066  04F1  2CF3               	goto	u7270
 11067  04F2                     u7271:
 11068  04F2  2D01               	goto	l391
 11069  04F3                     u7270:
 11070  04F3                     l4295:
 11071  04F3  083A               	movf	(sprintf@val+3)^(0+128),w
 11072  04F4  0439               	iorwf	(sprintf@val+2)^(0+128),w
 11073  04F5  0438               	iorwf	(sprintf@val+1)^(0+128),w
 11074  04F6  0437               	iorwf	sprintf@val^(0+128),w
 11075  04F7  1D03               	skipz
 11076  04F8  2CFA               	goto	u7281
 11077  04F9  2CFB               	goto	u7280
 11078  04FA                     u7281:
 11079  04FA  2D01               	goto	l391
 11080  04FB                     u7280:
 11081  04FB                     l4297:
 11082                           
 11083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11084  04FB  3001               	movlw	1
 11085  04FC  07CA               	addwf	sprintf@prec^(0+128),f
 11086  04FD  1803               	skipnc
 11087  04FE  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11088  04FF  3000               	movlw	0
 11089  0500  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11090  0501                     l391:
 11091                           
 11092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11093  0501  084B               	movf	(sprintf@prec+1)^(0+128),w
 11094  0502  3A80               	xorlw	128
 11095  0503  3C80               	sublw	128
 11096  0504  1D03               	skipz
 11097  0505  2D08               	goto	u7295
 11098  0506  084A               	movf	sprintf@prec^(0+128),w
 11099  0507  024C               	subwf	sprintf@c^(0+128),w
 11100  0508                     u7295:
 11101  0508  1803               	skipnc
 11102  0509  2D0B               	goto	u7291
 11103  050A  2D0C               	goto	u7290
 11104  050B                     u7291:
 11105  050B  2D13               	goto	l4301
 11106  050C                     u7290:
 11107  050C                     l4299:
 11108                           
 11109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11110  050C  1683               	bsf	3,5	;RP0=1, select bank1
 11111  050D  1303               	bcf	3,6	;RP1=0, select bank1
 11112  050E  084A               	movf	sprintf@prec^(0+128),w
 11113  050F  00AD               	movwf	??_sprintf^(0+128)
 11114  0510  082D               	movf	??_sprintf^(0+128),w
 11115  0511  00CC               	movwf	sprintf@c^(0+128)
 11116  0512  2D2B               	goto	l4305
 11117  0513                     l4301:
 11118  0513  1683               	bsf	3,5	;RP0=1, select bank1
 11119  0514  1303               	bcf	3,6	;RP1=0, select bank1
 11120  0515  084B               	movf	(sprintf@prec+1)^(0+128),w
 11121  0516  3A80               	xorlw	128
 11122  0517  00AD               	movwf	??_sprintf^(0+128)
 11123  0518  3080               	movlw	128
 11124  0519  022D               	subwf	??_sprintf^(0+128),w
 11125  051A  1D03               	skipz
 11126  051B  2D1E               	goto	u7305
 11127  051C  084C               	movf	sprintf@c^(0+128),w
 11128  051D  024A               	subwf	sprintf@prec^(0+128),w
 11129  051E                     u7305:
 11130  051E  1803               	skipnc
 11131  051F  2D21               	goto	u7301
 11132  0520  2D22               	goto	u7300
 11133  0521                     u7301:
 11134  0521  2D2B               	goto	l4305
 11135  0522                     u7300:
 11136  0522                     l4303:
 11137                           
 11138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11139  0522  1683               	bsf	3,5	;RP0=1, select bank1
 11140  0523  1303               	bcf	3,6	;RP1=0, select bank1
 11141  0524  084C               	movf	sprintf@c^(0+128),w
 11142  0525  00AD               	movwf	??_sprintf^(0+128)
 11143  0526  01AE               	clrf	(??_sprintf^(0+128)+1)
 11144  0527  082D               	movf	??_sprintf^(0+128),w
 11145  0528  00CA               	movwf	sprintf@prec^(0+128)
 11146  0529  082E               	movf	(??_sprintf+1)^(0+128),w
 11147  052A  00CB               	movwf	(sprintf@prec+1)^(0+128)
 11148  052B                     l4305:
 11149                           
 11150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11151  052B  1683               	bsf	3,5	;RP0=1, select bank1
 11152  052C  1303               	bcf	3,6	;RP1=0, select bank1
 11153  052D  083D               	movf	sprintf@width^(0+128),w
 11154  052E  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11155  052F  1903               	btfsc	3,2
 11156  0530  2D32               	goto	u7311
 11157  0531  2D33               	goto	u7310
 11158  0532                     u7311:
 11159  0532  2D45               	goto	l4311
 11160  0533                     u7310:
 11161  0533                     l4307:
 11162  0533  3003               	movlw	3
 11163  0534  053B               	andwf	sprintf@flag^(0+128),w
 11164  0535  00AD               	movwf	??_sprintf^(0+128)
 11165  0536  3000               	movlw	0
 11166  0537  053C               	andwf	(sprintf@flag+1)^(0+128),w
 11167  0538  00AE               	movwf	(??_sprintf+1)^(0+128)
 11168  0539  082D               	movf	??_sprintf^(0+128),w
 11169  053A  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11170  053B  1903               	btfsc	3,2
 11171  053C  2D3E               	goto	u7321
 11172  053D  2D3F               	goto	u7320
 11173  053E                     u7321:
 11174  053E  2D45               	goto	l4311
 11175  053F                     u7320:
 11176  053F                     l4309:
 11177                           
 11178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11179  053F  30FF               	movlw	255
 11180  0540  07BD               	addwf	sprintf@width^(0+128),f
 11181  0541  1803               	skipnc
 11182  0542  0ABE               	incf	(sprintf@width+1)^(0+128),f
 11183  0543  30FF               	movlw	255
 11184  0544  07BE               	addwf	(sprintf@width+1)^(0+128),f
 11185  0545                     l4311:
 11186                           
 11187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11188  0545  1F3C               	btfss	(sprintf@flag+1)^(0+128),6
 11189  0546  2D48               	goto	u7331
 11190  0547  2D49               	goto	u7330
 11191  0548                     u7331:
 11192  0548  2D64               	goto	l4319
 11193  0549                     u7330:
 11194  0549                     l4313:
 11195                           
 11196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11197  0549  084B               	movf	(sprintf@prec+1)^(0+128),w
 11198  054A  3A80               	xorlw	128
 11199  054B  00AD               	movwf	??_sprintf^(0+128)
 11200  054C  083E               	movf	(sprintf@width+1)^(0+128),w
 11201  054D  3A80               	xorlw	128
 11202  054E  022D               	subwf	??_sprintf^(0+128),w
 11203  054F  1D03               	skipz
 11204  0550  2D53               	goto	u7345
 11205  0551  083D               	movf	sprintf@width^(0+128),w
 11206  0552  024A               	subwf	sprintf@prec^(0+128),w
 11207  0553                     u7345:
 11208  0553  1803               	skipnc
 11209  0554  2D56               	goto	u7341
 11210  0555  2D57               	goto	u7340
 11211  0556                     u7341:
 11212  0556  2D60               	goto	l4317
 11213  0557                     u7340:
 11214  0557                     l4315:
 11215                           
 11216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11217  0557  1683               	bsf	3,5	;RP0=1, select bank1
 11218  0558  1303               	bcf	3,6	;RP1=0, select bank1
 11219  0559  084A               	movf	sprintf@prec^(0+128),w
 11220  055A  02BD               	subwf	sprintf@width^(0+128),f
 11221  055B  084B               	movf	(sprintf@prec+1)^(0+128),w
 11222  055C  1C03               	skipc
 11223  055D  03BE               	decf	(sprintf@width+1)^(0+128),f
 11224  055E  02BE               	subwf	(sprintf@width+1)^(0+128),f
 11225  055F  2D64               	goto	l4319
 11226  0560                     l4317:
 11227                           
 11228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11229  0560  1683               	bsf	3,5	;RP0=1, select bank1
 11230  0561  1303               	bcf	3,6	;RP1=0, select bank1
 11231  0562  01BD               	clrf	sprintf@width^(0+128)
 11232  0563  01BE               	clrf	(sprintf@width+1)^(0+128)
 11233  0564                     l4319:
 11234                           
 11235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11236  0564  083E               	movf	(sprintf@width+1)^(0+128),w
 11237  0565  3A80               	xorlw	128
 11238  0566  3C80               	sublw	128
 11239  0567  1D03               	skipz
 11240  0568  2D6B               	goto	u7355
 11241  0569  083D               	movf	sprintf@width^(0+128),w
 11242  056A  024C               	subwf	sprintf@c^(0+128),w
 11243  056B                     u7355:
 11244  056B  1803               	skipnc
 11245  056C  2D6E               	goto	u7351
 11246  056D  2D6F               	goto	u7350
 11247  056E                     u7351:
 11248  056E  2D7B               	goto	l4323
 11249  056F                     u7350:
 11250  056F                     l4321:
 11251                           
 11252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11253  056F  1683               	bsf	3,5	;RP0=1, select bank1
 11254  0570  1303               	bcf	3,6	;RP1=0, select bank1
 11255  0571  084C               	movf	sprintf@c^(0+128),w
 11256  0572  00AD               	movwf	??_sprintf^(0+128)
 11257  0573  01AE               	clrf	(??_sprintf^(0+128)+1)
 11258  0574  082D               	movf	??_sprintf^(0+128),w
 11259  0575  02BD               	subwf	sprintf@width^(0+128),f
 11260  0576  082E               	movf	(??_sprintf+1)^(0+128),w
 11261  0577  1C03               	skipc
 11262  0578  03BE               	decf	(sprintf@width+1)^(0+128),f
 11263  0579  02BE               	subwf	(sprintf@width+1)^(0+128),f
 11264  057A  2D7F               	goto	l4325
 11265  057B                     l4323:
 11266                           
 11267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11268  057B  1683               	bsf	3,5	;RP0=1, select bank1
 11269  057C  1303               	bcf	3,6	;RP1=0, select bank1
 11270  057D  01BD               	clrf	sprintf@width^(0+128)
 11271  057E  01BE               	clrf	(sprintf@width+1)^(0+128)
 11272  057F                     l4325:
 11273                           
 11274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11275  057F  083D               	movf	sprintf@width^(0+128),w
 11276  0580  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11277  0581  1903               	btfsc	3,2
 11278  0582  2D84               	goto	u7361
 11279  0583  2D85               	goto	u7360
 11280  0584                     u7361:
 11281  0584  2D9C               	goto	l4333
 11282  0585                     u7360:
 11283  0585                     l4327:
 11284                           
 11285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11286  0585  3020               	movlw	32
 11287  0586  00AD               	movwf	??_sprintf^(0+128)
 11288  0587  0849               	movf	sprintf@sp^(0+128),w
 11289  0588  0084               	movwf	4
 11290  0589  082D               	movf	??_sprintf^(0+128),w
 11291  058A  1783               	bsf	3,7	;select IRP bank2
 11292  058B  0080               	movwf	0
 11293  058C                     l4329:
 11294  058C  3001               	movlw	1
 11295  058D  00AD               	movwf	??_sprintf^(0+128)
 11296  058E  082D               	movf	??_sprintf^(0+128),w
 11297  058F  07C9               	addwf	sprintf@sp^(0+128),f
 11298  0590                     l4331:
 11299  0590  30FF               	movlw	255
 11300  0591  07BD               	addwf	sprintf@width^(0+128),f
 11301  0592  1803               	skipnc
 11302  0593  0ABE               	incf	(sprintf@width+1)^(0+128),f
 11303  0594  30FF               	movlw	255
 11304  0595  07BE               	addwf	(sprintf@width+1)^(0+128),f
 11305  0596  083D               	movf	sprintf@width^(0+128),w
 11306  0597  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11307  0598  1D03               	btfss	3,2
 11308  0599  2D9B               	goto	u7371
 11309  059A  2D9C               	goto	u7370
 11310  059B                     u7371:
 11311  059B  2D85               	goto	l4327
 11312  059C                     u7370:
 11313  059C                     l4333:
 11314                           
 11315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11316  059C  3003               	movlw	3
 11317  059D  053B               	andwf	sprintf@flag^(0+128),w
 11318  059E  00AD               	movwf	??_sprintf^(0+128)
 11319  059F  3000               	movlw	0
 11320  05A0  053C               	andwf	(sprintf@flag+1)^(0+128),w
 11321  05A1  00AE               	movwf	(??_sprintf+1)^(0+128)
 11322  05A2  082D               	movf	??_sprintf^(0+128),w
 11323  05A3  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11324  05A4  1903               	btfsc	3,2
 11325  05A5  2DA7               	goto	u7381
 11326  05A6  2DA8               	goto	u7380
 11327  05A7                     u7381:
 11328  05A7  2DB2               	goto	l4339
 11329  05A8                     u7380:
 11330  05A8                     l4335:
 11331                           
 11332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11333  05A8  302D               	movlw	45
 11334  05A9  00AD               	movwf	??_sprintf^(0+128)
 11335  05AA  0849               	movf	sprintf@sp^(0+128),w
 11336  05AB  0084               	movwf	4
 11337  05AC  082D               	movf	??_sprintf^(0+128),w
 11338  05AD  1783               	bsf	3,7	;select IRP bank2
 11339  05AE  0080               	movwf	0
 11340  05AF  160A  118A  2D13   	goto	l4095
 11341  05B2                     l4339:
 11342                           
 11343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11344  05B2  3001               	movlw	1
 11345  05B3  07A8               	addwf	sprintf@f^(0+128),f
 11346  05B4  30FF               	movlw	-1
 11347  05B5  0728               	addwf	sprintf@f^(0+128),w
 11348  05B6  0084               	movwf	4
 11349  05B7  160A  158A  200A  120A  118A  	fcall	stringdir
 11350  05BC  00AD               	movwf	??_sprintf^(0+128)
 11351  05BD  082D               	movf	??_sprintf^(0+128),w
 11352  05BE  00CC               	movwf	sprintf@c^(0+128)
 11353  05BF  084C               	movf	sprintf@c^(0+128),w
 11354  05C0  1D03               	btfss	3,2
 11355  05C1  2DC3               	goto	u7391
 11356  05C2  2DC6               	goto	u7390
 11357  05C3                     u7391:
 11358  05C3  160A  118A  2D06   	goto	l4091
 11359  05C6                     u7390:
 11360  05C6                     l4341:
 11361                           
 11362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11363  05C6  0849               	movf	sprintf@sp^(0+128),w
 11364  05C7  0084               	movwf	4
 11365  05C8  1783               	bsf	3,7	;select IRP bank2
 11366  05C9  0180               	clrf	0
 11367  05CA                     l406:
 11368  05CA  0008               	return
 11369  05CB                     __end_of_sprintf:

Data Sizes:
    Strings     24
    Constant    144
    Data        2
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      78
    BANK1            80     48      69
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> s(BANK3[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversor2->___flmul
    ___flmul->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   42948
                                             45 BANK1      3     3      0
                      _Config_USARTT
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _conversor2
                            _recibir
                              _setup
                            _spiInit
                            _spiRead
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   36153
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8544
                                             37 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6600
                                             37 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             56 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             57 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversor2                                           9     5      4    5474
                                             37 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     372
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     434
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_USARTT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_USARTT
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conversor2
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _recibir
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      14       9       20.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     30      45       7       86.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B2      12        0.0%
ABS                  0      0      B2       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 23:38:25 2021

                        _p 00D0                          _s 0190                          _v 00DC  
                        _x 00D4                          pc 0002                _SSPSTATbits 0094  
                       l93 1B98                         l99 1E8A               ___awdiv@sign 0028  
                       _vv 00D8                         fsr 0004        ___wmul@multiplicand 0075  
      __Umul8_16@word_mpld 0022                        l200 1AD4                        l122 1B0E  
                      l131 1CDD                        l203 1ADA                        l116 1AD3  
                      l140 1C50                        l134 1B7C                        l214 1AEB  
                      l119 1B61                        l128 07FD                        l410 1BF0  
                      l323 0FFF                        l180 1AF6                        l412 1C0A  
                      l316 07D7                        l406 05CA                        l159 1B1F  
                      l601 1F7A                        l345 15C3                        l196 1B42  
                      l604 1FE6                        l620 0866                        l197 1B47  
                      l605 1FFF                        l613 087B                        l446 1EF2  
                      l623 087B                        l631 1178                        l391 0501  
                      l383 033A                        l376 02F6                        l609 1B01  
                      l627 11B5                        l563 1F5B                        l580 1273  
                      l628 1127                        l716 1C96                        l741 137E  
                      l581 11D8                        l750 14FB                        l638 11A8  
                      l726 103C                        l743 1355                        l591 1266  
                      l584 1236                        l576 1E2E                        l833 0C9C  
                      l737 12D7                        l762 146D                        l666 1DD3  
                      l771 14CD                        l852 1BCD                        l596 1CFC  
                      l780 14FB                        l845 0C90                        l597 1D18  
                      l854 1BDF                        l598 1D2D                        l758 1449  
                      l839 0C08                        l783 1D7D                        l768 148F  
                      l890 10C2                        l891 10CE                        l883 10A6  
                      l779 14EF                        l877 1061                        l879 10F8  
                      l897 1B31                        _ISR 1B99                        fsr0 0004  
                      indf 0000               ___awmod@sign 0021               ___flmul@aexp 003D  
             ___flmul@bexp 003E               ___flmul@sign 0038               ___flmul@temp 0043  
             ___flmul@prod 003F                       ?_ISR 0070               ___fltol@exp1 0062  
                     l2301 1BBA                       l2311 1BDB                       l2303 1BBC  
                     l2305 1BC3                       l3113 1D2E                       l4001 1DC5  
                     l2307 1BC7                       l4011 1049                       l3211 1B3C  
                     l3051 1AFF                       l3115 1D32                       l4003 1DCB  
                     l2309 1BD6                       l4021 1077                       l4013 1059  
                     l3213 1B3E                       l3053 1B01                       l2501 12F1  
                     l4101 152C                       l4031 10AD                       l4023 1084  
                     l4015 1069                       l4007 1040                       l3215 1B41  
                     l3207 1B33                       l2511 1305                       l2503 12F5  
                     l3071 0836                       l3063 0816                       l4103 1530  
                     l4111 156C                       l4041 10E6                       l4033 10B8  
                     l4025 108B                       l4009 1045                       l3209 1B3A  
                     l3049 1AF7                       l2601 147D                       l2521 1319  
                     l2513 1309                       l2505 12F9                       l3073 083A  
                     l3081 0854                       l3065 082B                       l3057 0800  
                     l4121 1597                       l4113 157A                       l4105 1545  
                     l4051 1C97                       l4043 10EB                       l4035 10BC  
                     l4027 108F                       l4019 1072                       l3171 1B86  
                     l3163 1B7D                       l2603 1481                       l2531 1359  
                     l2523 131D                       l2515 130D                       l2507 12FD  
                     l2451 1281                       l3091 0870                       l3067 082C  
                     l3059 080D                       l4211 01A4                       l4203 0135  
                     l4123 15AA                       l4115 157B                       l4107 1558  
                     l4061 1B02                       l4053 1C9D                       l2701 0A6C  
                     l4045 10EF                       l4037 10C6                       l4029 109D  
                     l3181 1B96                       l3173 1B87                       l3165 1B80  
                     l2621 14C9                       l2613 1494                       l2605 1482  
                     l2541 1372                       l2533 1362                       l2517 1311  
                     l2509 1301                       l2525 1321                       l2461 1298  
                     l2453 1285                       l3069 0834                       l4301 0513  
                     l4221 01DD                       l4205 013E                       l4141 15F7  
                     l4133 15C5                       l4125 15AE                       l4117 157F  
                     l4109 155C                       l3183 1B0F                       l4055 1CA7  
                     l4071 07F2                       l4063 07DB                       l2711 0ADF  
                     l2703 0A7C                       l4047 10F0                       l4039 10D0  
                     l3175 1B8A                       l3167 1B82                       l2631 14E5  
                     l2623 14D2                       l2615 1499                       l2607 1486  
                     l2551 1390                       l2535 1364                       l2543 1376  
                     l2527 1322                       l2519 1315                       l2471 12AE  
                     l2463 1299                       l2455 1286                       l2447 1274  
                     l3087 085B                       l3079 0842                       l4311 0545  
                     l4303 0522                       l4231 021B                       l4223 01E7  
                     l4207 0173                       l4151 164D                       l4143 1605  
                     l4135 15E1                       l4119 1582                       l4127 15BF  
                     l3185 1B17                       l3601 1ACF                       l4057 1CB8  
                     l4073 07F7                       l4065 07E0                       l4081 1C34  
                     l2721 0B8C                       l2713 0AFC                       l2705 0A99  
                     l2641 093C                       l3193 1AEC                       l3177 1B8B  
                     l3169 1B85                       l3505 1AE3                       l2633 14E9  
                     l2625 14D7                       l2617 14A7                       l2609 148C  
                     l2561 13BA                       l2553 13A7                       l2545 1382  
                     l2537 1368                       l2529 1339                       l2481 12BF  
                     l2473 12AF                       l2457 128B                       l2465 129B  
                     l2449 127B                       l3089 086B                       l4321 056F  
                     l4313 0549                       l4305 052B                       l4241 0244  
                     l4233 0224                       l4225 0202                       l4217 01A6  
                     l4209 01A2                       l4161 169C                       l4153 1651  
                     l4145 1609                       l4137 15EF                       l4129 15C1  
                     l3187 1B1B                       l4059 1CBE                       l4067 07E5  
                     l4075 1C0B                       l2731 0BD8                       l2723 0BB4  
                     l2715 0B29                       l2707 0AA9                       l2651 0953  
                     l2643 0943                       l4083 1E32                       l3179 1B94  
                     l2803 1AD4                       l3507 1AE8                       l2635 14EB  
                     l2627 14DF                       l2619 14AB                       l2571 13E3  
                     l2563 13BE                       l2555 13AB                       l2547 1387  
                     l2539 1369                       l2491 12DD                       l2483 12C4  
                     l2475 12B5                       l2467 12A3                       l2459 1290  
                     l3611 1F01                       l3603 1EF3                       l4331 0590  
                     l4323 057B                       l4315 0557                       l4307 0533  
                     l4251 02FE                       l4243 024B                       l4227 0208  
                     l4171 1733                       l4163 16BF                       l4155 1678  
                     l4147 1630                       l4139 15F3                       l4091 1506  
                     l3189 1B1E                       l4069 07EC                       l4077 1C10  
                     l2741 0BED                       l2733 0BD9                       l2725 0BBD  
                     l2717 0B39                       l2709 0AC6                       l2661 096F  
                     l2653 0958                       l2645 0949                       l4085 1E74  
                     l2637 14F6                       l2629 14E4                       l2581 1451  
                     l2573 1421                       l2565 13BF                       l2557 13AF  
                     l2493 12E1                       l2485 12CC                       l2477 12B9  
                     l2469 12A8                       l3701 1C84                       l3621 1F16  
                     l3613 1F05                       l3605 1EF6                       l4333 059C  
                     l4325 057F                       l4317 0560                       l4309 053F  
                     l4261 032D                       l4253 0307                       l4245 0250  
                     l4229 0214                       l4237 0229                       l4181 17A3  
                     l4173 175A                       l4165 16C3                       l4157 1683  
                     l4149 1649                       l4341 05C6                       l4093 150C  
                     l4079 1C2C                       l2751 0C12                       l2743 0BF1  
                     l2735 0BE2                       l2727 0BCB                       l2719 0B66  
                     l2671 0984                       l2663 0975                       l2655 0960  
                     l2647 094D                       l2639 14FA                       l2591 146C  
                     l2583 1456                       l2575 1427                       l2567 13C8  
                     l2559 13B8                       l2495 12E5                       l2487 12CD  
                     l2479 12BA                       l3703 1C85                       l3711 1001  
                     l3631 1F39                       l3623 1F19                       l3615 1F0A  
                     l3607 1EFA                       l4335 05A8                       l4327 0585  
                     l4319 0564                       l4271 0353                       l4263 0334  
                     l4255 030B                       l4247 02AB                       l4239 0236  
                     l4191 0092                       l4183 17EA                       l4175 1763  
                     l4167 16C9                       l4159 1689                       l4423 15D9  
                     l4095 1513                       l4351 087C                       l2761 0C50  
                     l2753 0C20                       l2745 0C05                       l2729 0BD4  
                     l2737 0BE8                       l2681 09A0                       l2673 098C  
                     l2665 0979                       l2657 0962                       l2649 094E  
                     l2593 1471                       l2577 142C                       l2569 13CD  
                     l2497 12E9                       l2489 12CF                       l3705 1C8C  
                     l3721 101B                       l3713 1007                       l3641 1F52  
                     l3633 1F3F                       l3625 1F20                       l3617 1F0E  
                     l3609 1EFF                       l4329 058C                       l4281 0472  
                     l4273 0371                       l4265 0343                       l4257 0311  
                     l4249 02EA                       l4193 00BB                       l4185 0033  
                     l4177 178C                       l4169 16E8                       l4097 1518  
                     l4089 14FF                       l4361 089E                       l4353 0886  
                     l2771 0C84                       l2763 0C5B                       l2755 0C24  
                     l2739 0BEC                       l2691 09E3                       l2675 098E  
                     l2667 097A                       l2659 096A                       l2595 1474  
                     l2587 145F                       l2579 143B                       l2499 12ED  
                     l3707 1C92                       l3723 1025                       l3715 100C  
                     l3643 1F57                       l3635 1F40                       l3627 1F24  
                     l3619 1F10                       l3651 1DDB                       l3803 0F44  
                     l4291 04E6                       l4275 03CC                       l4283 04CD  
                     l4267 0348                       l4259 031E                       l4195 00C4  
                     l4187 005C                       l4179 1794                       l4099 151C  
                     l4339 05B2                       l4371 08ED                       l4363 08A6  
                     l4355 088B                       l3741 1B5E                       l3733 1B49  
                     l2773 0C88                       l2765 0C6A                       l2757 0C3D  
                     l2749 0C0D                       l2693 09FF                       l2685 09A9  
                     l2677 0996                       l2669 097F                       l2597 1476  
                     l2589 1468                       l3813 10F9                       l3725 102B  
                     l3717 1013                       l3637 1F47                       l3629 1F28  
                     l3661 1DF1                       l3653 1DE0                       l3805 0F4B  
                     l4285 04D5                       l4277 0427                       l4269 034F  
                     l4197 00CC                       l4189 0083                       l4293 04ED  
                     l4381 0910                       l4373 08F6                       l4365 08AF  
                     l4357 0890                       l3735 1B4C                       l3751 1B74  
                     l3743 1B63                       l2775 0C89                       l2767 0C74  
                     l2759 0C43                       l2695 0A2B                       l2687 09B9  
                     l2679 099B                       l2599 147B                       l3911 125B  
                     l3903 1242                       l3831 113F                       l3815 110C  
                     l3727 1032                       l3719 1017                       l2871 1B30  
                     l2863 1B21                       l3639 1F4D                       l3671 1E0D  
                     l3663 1DF4                       l3655 1DE2                       l3647 1DD4  
                     l4295 04F3                       l4287 04DC                       l4279 0466  
                     l4199 00EA                       l4383 091C                       l4375 0900  
                     l4367 08BB                       l4359 0895                       l3737 1B52  
                     l3753 1B77                       l3745 1B66                       l2777 0C94  
                     l2769 0C76                       l2697 0A47                       l2689 09C6  
                     l3921 1BE8                       l3913 126B                       l3905 1254  
                     l3841 116A                       l3833 1148                       l3825 1128  
                     l3729 1038                       l2865 1B22                       l3681 1E2A  
                     l3673 1E13                       l3665 1DFB                       l3657 1DE6  
                     l3649 1DD7                       l3809 0FD3                       l4297 04FB  
                     l4289 04E0                       l4385 0926                       l4377 0903  
                     l4369 08DB                       l3739 1B55                       l3747 1B6C  
                     l2699 0A63                       l3931 1E8B                       l3923 1BF7  
                     l3851 1184                       l3843 1172                       l3835 1151  
                     l3827 112E                       l3819 1115                       l3691 1C5E  
                     l3763 06E3                       l3755 05CE                       l2867 1B28  
                     l3675 1E1A                       l3667 1DFF                       l3659 1DEB  
                     l4299 050C                       l4387 0929                       l4379 090D  
                     l3749 1B6F                       l3941 1EBA                       l3933 1E9D  
                     l3925 1BFE                       l3917 1BE0                       l3861 11AD  
                     l3845 117C                       l3853 1196                       l3837 115F  
                     l3829 113D                       l3693 1C65                       l3685 1C51  
                     l3765 06E9                       l3757 05D4                       l2869 1B2E  
                     l3669 1E03                       l3677 1E20                       l3773 0CA0  
                     l3943 1ECC                       l3935 1EA0                       l3951 1EEA  
                     l3927 1C04                       l3919 1BE4                       l3871 11CC  
                     l3839 1169                       l3695 1C69                       l3687 1C55  
                     l3679 1E25                       l3791 0E26                       l3775 0CA4  
                     l3961 1D2A                       l3945 1EDA                       l3937 1EAD  
                     l3881 11F2                       l3865 11B6                       l3697 1C6D  
                     l3689 1C5B                       l3769 0794                       l3785 0D97  
                     l3777 0CA6                       l3963 1D2C                       l3955 1CDE  
                     l3971 1F8E                       l3947 1EDB                       l3939 1EB1  
                     l3891 1226                       l3883 11F4                       l3867 11C3  
                     l3859 119D                       l3699 1C7E                       l3787 0D9E  
                     l3779 0CAD                       l3795 0E53                       l3957 1CF4  
                     l3981 1FFC                       l3973 1F96                       l3949 1EE4  
                     l3893 1227                       l3885 11FD                       l3877 11D9  
                     l3797 0E5A                       l3959 1D10                       l3983 1FFE  
                     l3975 1F9A                       l3967 1F5C                       l3991 1D8B  
                     l3895 1230                       l3887 1206                       l3879 11E1  
                     l3977 1FBE                       l3969 1F72                       l3993 1D98  
                     l3897 123A                       l3889 1218                       l3979 1FC2  
                     l3995 1D9C                       l3987 1D7E                       l3997 1DAE  
                     l3989 1D88                       l3999 1DBC                       STR_1 18A0  
                     STR_2 18B1                       u4000 0C50                       u3200 1285  
                     u4001 0C4F                       u3201 1284                       u4010 0C6A  
                     u3210 128B                       u4011 0C69                       u3211 128A  
                     u4020 0C88                       u3300 1344                       u3220 1290  
                     u4021 0C87                       u4005 0C4C                       u3301 1342  
                     u3221 128F                       u4030 1ADA                       u3310 1345  
                     u3230 12AE                       u4015 0C66                       u4031 1AD9  
                     u3231 12AD                       u3400 13AF                       u3320 1359  
                     u3240 12B9                       u3401 13AE                       u3321 1358  
                     u3241 12B8                       u3410 13BE                       u3330 1368  
                     u3250 12BF                       u3411 13BD                       u3331 1367  
                     u3251 12BE                       u3500 146C                       u3260 12C4  
                     u4300 1B2E                       u3501 146B                       u3261 12C3  
                     u4301 1B2D                       u3510 1471                       u3430 13E3  
                     u3350 137E                       u3270 12DD                       u3511 1470  
                     u3431 13E2                       u3351 137D                       u3271 12DC  
                     u3600 14C9                       u3520 147B                       u3360 1382  
                     u3280 12E1                       u6000 06E9                       u3601 14C8  
                     u3521 147A                       u3441 13FA                       u3433 13DF  
                     u3425 13C1                       u3361 1381                       u3345 136B  
                     u3281 12E0                       u6001 06E8                       u3610 14D2  
                     u3530 1481                       u3450 140E                       u3442 13FB  
                     u3370 1387                       u3290 1339                       u3611 14D1  
                     u3531 1480                       u3451 140F                       u3443 1400  
                     u3371 1386                       u3291 1338                       u3700 097F  
                     u3620 14D7                       u3540 1486                       u3460 142C  
                     u3452 1414                       u3444 1401                       u3701 097E  
                     u3621 14D6                       u3541 1485                       u3461 142B  
                     u3453 1415                       u3445 1406                       u3381 1399  
                     u3710 0984                       u3630 14E4                       u3550 148C  
                     u3470 1451                       u3446 1407                       u3390 13AB  
                     u3382 13A0                       u3711 0983                       u3631 14E3  
                     u3551 148B                       u3471 1450                       u3391 13AA  
                     u3383 13A7                       u3295 1335                       u6015 0706  
                     u3720 099B                       u3640 14E9                       u3560 1493  
                     u3480 1456                       u6040 0CA4                       u7000 1630  
                     u3801 0AB8                       u3721 099A                       u3641 14E8  
                     u3561 1492                       u3481 1455                       u6025 0753  
                     u6105 0DB1                       u6041 0CA3                       u7001 162F  
                     u2850 1BC7                       u3802 0ABF                       u3730 09A0  
                     u5090 1B3A                       u3650 14FA                       u3570 1499  
                     u6210 110C                       u4290 1B28                       u6130 0E5A  
                     u6050 0CAD                       u7010 1678                       u2851 1BC6  
                     u3803 0AC6                       u3731 099F                       u5091 1B39  
                     u3651 14F9                       u3571 1498                       u6211 110B  
                     u6035 079F                       u4291 1B27                       u6131 0E59  
                     u6115 0DED                       u6051 0CAC                       u7011 1677  
                     u3660 094D                       u3580 14AB                       u6300 1195  
                     u6220 1126                       u7100 00BB                       u7020 16C3  
                     u3821 0AEE                       u3741 09F1                       u3661 094C  
                     u3581 14AA                       u6301 1194                       u6221 1125  
                     u6205 0FD6                       u6125 0E29                       u7101 00BA  
                     u7021 16C2                       u2870 1BDB                       u3910 0BD8  
                     u3822 0AF5                       u3742 09F8                       u3670 0953  
                     u3590 14BA                       u6310 119C                       u7030 175A  
                     u2871 1BDA                       u3911 0BD7                       u3831 0B1B  
                     u3823 0AFC                       u3815 0AC8                       u3751 0A0D  
                     u3743 09FF                       u3671 0952                       u3495 1461  
                     u6311 119B                       u7031 1759                       u3832 0B22  
                     u3752 0A14                       u3680 0958                       u4800 0824  
                     u6400 123A                       u6240 115F                       u7200 031E  
                     u7120 01DC                       u7040 178C                       u2865 1BCE  
                     u3905 0BCD                       u3841 0B48                       u3833 0B29  
                     u3761 0A39                       u3753 0A1B                       u3681 0957  
                     u6401 1239                       u6241 115E                       u6145 0E7C  
                     u6065 0CCF                       u7201 031D                       u7121 01DB  
                     u7041 178B                       u3930 0BEC                       u3850 0B72  
                     u3842 0B4F                       u3762 0A40                       u3690 0979  
                     u4810 083A                       u6410 1241                       u6330 11AD  
                     u6170 0F4B                       u6090 0D9E                       u7210 032D  
                     u7130 01E7                       u7050 17A3                       u3931 0BEB  
                     u3843 0B56                       u3771 0A55                       u3763 0A47  
                     u3691 0978                       u3595 14B5                       u4811 0839  
                     u6411 1240                       u6331 11AC                       u6235 114A  
                     u6171 0F4A                       u6155 0EB8                       u6091 0D9D  
                     u6075 0D0B                       u7211 032C                       u7131 01E6  
                     u7115 01A9                       u7051 17A2                       u3940 0BF1  
                     u3772 0A5C                       u4820 0841                       u6500 1C04  
                     u6340 11C3                       u6260 1178                       u5700 1F39  
                     u7300 0522                       u7220 0348                       u7140 0202  
                     u7060 0033                       u3941 0BF0                       u3925 0BDB  
                     u3861 0B7E                       u3773 0A63                       u4821 0840  
                     u4805 081F                       u6501 1C03                       u6341 11C2  
                     u6325 119F                       u6261 1177                       u6245 115B  
                     u5701 1F38                       u6165 0F03                       u6085 0D56  
                     u7301 0521                       u7221 0347                       u7205 031A  
                     u7141 0201                       u7125 01D8                       u7061 17FA  
                     u3950 0C05                       u3870 0B9A                       u3862 0B85  
                     u6510 1E9D                       u6430 1253                       u6350 11D7  
                     u6270 117C                       u7310 0533                       u7150 0214  
                     u7070 005C                       u3951 0C04                       u3863 0B8C  
                     u3855 0B6D                       u3791 0A8B                       u6511 1E9C  
                     u6431 1252                       u6351 11D6                       u6271 117B  
                     u6255 116B                       u7311 0532                       u7215 0329  
                     u7151 0213                       u7071 005B                       u7055 179F  
                     u3960 0C0C                       u3792 0A92                       u6600 1D2A  
                     u4840 0853                       u6440 125A                       u6280 1183  
                     u5720 1F4D                       u5640 1EFA                       u7320 053F  
                     u7160 0236                       u7080 0083                       u3961 0C0B  
                     u3881 0BA6                       u3793 0A99                       u3785 0A65  
                     u6601 1D29                       u4841 0852                       u6441 1259  
                     u6425 1243                       u6281 1182                       u5721 1F4C  
                     u5705 1F35                       u5641 1EF9                       u6185 0F5E  
                     u7321 053E                       u7305 051E                       u7161 0235  
                     u7081 0082                       u7065 17F5                       u3970 0C12  
                     u3882 0BAD                       u6610 1F72                       u4850 085A  
                     u6530 1EB1                       u6370 1218                       u5730 1F52  
                     u5650 1F05                       u5810 1E20                       u7330 0549  
                     u7250 04D4                       u7170 0244                       u7090 0092  
                     u3971 0C11                       u3883 0BB4                       u3875 0B95  
                     u6611 1F71                       u4851 0859                       u4835 0843  
                     u6531 1EB0                       u6371 1217                       u5731 1F51  
                     u5715 1F41                       u5651 1F04                       u5811 1E1F  
                     u6195 0F9A                       u7331 0548                       u7251 04D3  
                     u7235 03CF                       u7171 0243                       u7091 0091  
                     u3980 0C24                       u6620 1F8E                       u4780 1AFF  
                     u6700 1D9C                       u6460 126B                       u5900 1007  
                     u5660 1F16                       u5820 1E25                       u5740 1DDB  
                     u7340 0557                       u7260 04EC                       u3981 0C23  
                     u6605 1D26                       u6621 1F8D                       u4781 1AFE  
                     u6525 1EA2                       u6701 1D9B                       u6461 126A  
                     u6365 11FF                       u5901 1006                       u5661 1F15  
                     u5821 1E24                       u5805 1E14                       u5741 1DDA  
                     u7341 0556                       u7261 04EB                       u7245 0475  
                     u7165 0232                       u3990 0C33                       u6630 1F9A  
                     u4870 086B                       u4790 080D                       u6550 1ECC  
                     u6710 1DAE                       u6470 1BE8                       u6390 1236  
                     u5830 1C5B                       u5750 1DE6                       u7350 056F  
                     u7270 04F3                       u7190 02FD                       u3895 0BB6  
                     u6631 1F99                       u4871 086A                       u4791 080C  
                     u6551 1ECB                       u6711 1DAD                       u6471 1BE7  
                     u6455 125D                       u6391 1235                       u6375 1214  
                     u6295 1185                       u5831 1C5A                       u5751 1DE5  
                     u7351 056E                       u7271 04F2                       u7191 02FC  
                     u7095 008E                       u7407 08FC                       u6800 10AC  
                     u4880 0870                       u5920 101B                       u5680 1F28  
                     u5760 1DF1                       u7360 0585                       u7280 04FB  
                     u6801 10AB                       u6641 1FA9                       u4881 086F  
                     u4865 085D                       u6545 1EB3                       u6385 1229  
                     u5921 101A                       u5681 1F27                       u5761 1DF0  
                     u7361 0584                       u7345 0553                       u7281 04FA  
                     u7185 0253                       u7417 0909                       u6650 1FC2  
                     u6642 1FAA                       u6570 1EEA                       u6730 1DCB  
                     u5850 1C6D                       u5930 1025                       u7370 059C  
                     u7290 050C                       u3995 0C2E                       u6651 1FC1  
                     u6643 1FAF                       u6571 1EE9                       u6555 1EC8  
                     u6731 1DCA                       u6715 1DAA                       u5851 1C6C  
                     u5931 1024                       u5915 100D                       u5675 1F1A  
                     u7371 059B                       u7355 056B                       u7291 050B  
                     u7427 0922                       u6900 1C1A                       u6820 10BC  
                     u6740 1045                       u6580 1CF4                       u6644 1FB0  
                     u5780 1E03                       u7380 05A8                       u6821 10BB  
                     u6741 1044                       u6581 1CF3                       u6661 1FD1  
                     u6645 1FB5                       u6565 1EDC                       u6725 1DBD  
                     u6485 1BF1                       u5845 1C5F                       u5781 1E02  
                     u7381 05A7                       u7437 0931                       u6910 1C3E  
                     u6830 10C2                       u6750 1049                       u6590 1D10  
                     u6670 1FFC                       u6662 1FD2                       u6646 1FB6  
                     u5870 1C7E                       u5950 1038                       u5790 1E0D  
                     u7390 05C6                       u7447 1B71                       u6831 10C1  
                     u6815 10B1                       u6751 1048                       u6591 1D0F  
                     u6671 1FFB                       u6663 1FD7                       u6495 1BF8  
                     u5871 1C7D                       u5951 1037                       u5935 1021  
                     u5695 1F29                       u5791 1E0C                       u5775 1DF5  
                     u7391 05C3                       u7295 0508                       u6920 1C50  
                     u6840 10C6                       u6760 1069                       u6664 1FD8  
                     u6680 1D88                       u5960 05D4                       u7457 1B79  
                     u6921 1C4F                       u6841 10C5                       u6761 1068  
                     u6665 1FDD                       u6681 1D87                       u5865 1C6E  
                     u5945 102C                       u5961 05D3                       u6850 10DB  
                     u6666 1FDE                       u5890 1C92                       u6930 150C  
                     u7467 1CA3                       u6675 1FF8                       u5891 1C91  
                     u5875 1C7A                       u5795 1E09                       u6931 150B  
                     u6860 10EB                       u6780 108A                       u6940 152C  
                     u7477 1CB3                       u6861 10EA                       u6781 1089  
                     u5885 1C86                       u6941 152B                       u6870 10EF  
                     u6950 156C                       u7487 1CC2                       u6871 10EE  
                     u6855 10D6                       u6775 107C                       u6695 1D8D  
                     u5975 05F1                       u6951 156B                       u6880 07E0  
                     u6960 157A                       u7497 1B59                       u6881 07DF  
                     u5985 064D                       u6961 1579                       u6890 07F2  
                     u6970 15BE                       u6891 07F1                       u6795 109E  
                     u5995 06A2                       u6971 15BD                       u6980 15EF  
                     u6981 15EC                       u6990 15F3                       u6991 15F2  
                     _TRMT 04C1          ?_Lcd_Write_String 0076                       _flag 0079  
                     _main 087C                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0020               _sprintf$1267 00B2            __end_of_Lcd_Cmd 1B62  
                    ??_ISR 0070              ___fltol@sign1 0061            __end_of___fladd 14FC  
                    ?_main 0070            __end_of___awdiv 1F5C            __end_of___flneg 1B02  
          __end_of___awmod 1E2F            __end_of___flmul 0C9D            __end_of___flsub 1D7E  
          __end_of___fltol 087C                      _ANSEL 0188            __end_of___lldiv 1EF3  
          ___awdiv@divisor 0022            __end_of___llmod 1DD4            __end_of___lwdiv 1C97  
                    i1l107 1BB0            __end_of___lwmod 103D            ___awdiv@counter 0027  
                    _RCREG 001A                      _SPBRG 0099                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0026                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
          __end_of_dpowers 18A0                      _count 00E2                      _scale 0C9D  
          __end_of_isdigit 1B32            __end_of_recibir 1AF7                      _setup 1B7D  
                    _turno 0078                      pclath 000A            __end_of_spiInit 1B48  
          __end_of_spiRead 1AEC                      status 0003                      wtemp0 007E  
          __end_of_sprintf 05CB           __end_of_Lcd_Init 1CDE           __end_of_Lcd_Port 1AD4  
          __initialization 000F               __end_of_main 093C                     ??_main 00CD  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0024  
                   ?_scale 0045           ___awdiv@dividend 0024                     ?_setup 0070  
                   i1l3561 1BAA                     i1l3553 1B99                     i1l3555 1B9F  
                   i1l3557 1BA3                     i1l3559 1BA4                     _INTCON 000B  
                   u562_20 1B9F                     u562_21 1B9E                     u563_20 1BA3  
                   u563_21 1BA2                     u750_27 1BA6                  ??_Lcd_Cmd 0074  
  __size_of_Lcd_Write_Char 001B                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPBUF 0013                     _SSPCON 0014           __end_of___xxtofl 10F9  
         __end_of__powers_ 1844                     ___flge 1F5C                     ___fleq 1CDE  
                ??___fladd 0061                     ___wmul 1BE0                  ??___awdiv 0026  
                ??___flneg 0077                  ??___awmod 0077                  ??___flmul 0033  
                ??___flsub 0078                  ??___fltol 005C                  ??___lldiv 0073  
                ??___llmod 0073                  ??___lwdiv 0025                  ??___lwmod 0077  
                   _fround 05CB           ___awdiv@quotient 0029            ___awmod@divisor 0073  
                   _valorA 00E3                     _valorC 00E4                     _valorT 006D  
          ___awmod@counter 0020               __pdataCOMMON 0078                  ??_isdigit 0073  
       __size_of__Umul8_16 0029                  ??_recibir 0073                     saved_w 007E  
                ??_spiInit 0076                  ??_spiRead 0073                  ??_sprintf 00AD  
          Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0077                 ___flge@ff1 0020  
               ___flge@ff2 0024               ___xxtofl@arg 0026               ___xxtofl@exp 0025  
             ___xxtofl@val 0073                 ___fleq@ff1 0020                 ___fleq@ff2 0024  
  __end_of__initialization 002F                 ___flneg@f1 0073          __end_of_Lcd_Clear 1B0F  
               ___fltol@f1 0058      __end_of_Config_USARTT 1B20             __pcstackCOMMON 0070  
            __end_of_scale 1000              __end_of_setup 1B99             _Lcd_Set_Cursor 07D8  
               __div_to_l_ 11B6                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 002D            __div_to_l_@cntr 002C                    ??_scale 0049  
          __div_to_l_@quot 0028               sprintf@width 00BD                    ??_setup 0073  
               __pbssBANK0 006D                 __pbssBANK1 00D0                 __pbssBANK3 0190  
            __div_to_l_@f1 0020              __div_to_l_@f2 0024          __end_of__Umul8_16 1BE0  
               __pmaintext 087C                    ?___flge 0020                    ?___fleq 0020  
                  ?___wmul 0073                 __pintentry 0004    __size_of_spiReceiveWait 0007  
                  ?_fround 0045  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 07FE  
                ?___xxtofl 0073                 ??_Lcd_Init 0020                 ??_Lcd_Port 0073  
                  _SSPSTAT 0094                 __stringtab 1800             _Lcd_Write_Char 1B62  
                  _Lcd_Cmd 1B48                 _conversor2 1E2F          __end_of__npowers_ 1878  
               _scale$1266 0053            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 1274                    ___awdiv 1EF3                    ___flneg 1AF7  
                  ___awmod 1DD4                    ___flmul 093C                    ___flsub 1D2E  
                  ___fltol 0800                    ___lldiv 1E8B            __size_of___wmul 002B  
                  ___llmod 1D7E                    ___lwdiv 1C51                    ___lwmod 1001  
          __size_of_fround 020D            ?_Lcd_Set_Cursor 0077                    __ptext1 14FC  
                  __ptext2 0C9D                    __ptext3 1DD4                    __ptext4 1EF3  
                  __ptext5 1B20                    __ptext6 05CB                    __ptext7 1001  
                  __ptext8 1C51                    __ptext9 10F9               __size_of_ISR 001E  
              ?__div_to_l_ 0020                    _enviado 00E0                    _dpowers 1878  
                  _isdigit 1B20                 ??___xxtofl 0020                    _recibir 1AEC  
         ___awmod@dividend 0075                    _spiInit 1B32                    _spiRead 1AE3  
                  _retorno 007A              conversor2@val 004D                    _sprintf 14FC  
                  clrloop0 1ADC     __end_of_Lcd_Write_Char 1B7D       end_of_initialization 002F  
          ___lldiv@divisor 0020            ___lldiv@counter 002C                  _RCSTAbits 0018  
                  psplit$0 F0036                  Lcd_Port@a 0073             __tdiv_to_l_@f1 0020  
           __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0073                  _PORTCbits 0007  
                _PORTEbits 0009                ___fladd@grs 006C              ___xxtofl@sign 0024  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0023  
              ___flmul@grs 0039                ?_conversor2 0045                  _TXSTAbits 0098  
      __size_of__div_to_l_ 00BE                  _Lcd_Clear 1B02             _spiReceiveWait 1AD4  
           __end_of___flge 2000             __end_of___fleq 1D2E             __end_of___wmul 1C0B  
         _Lcd_Write_String 1C0B              __pidataCOMMON 07FE          pnum$text1_split_1 0036  
              _BAUDCTLbits 0187             __end_of_fround 07D8        start_initialization 000F  
              __end_of_ISR 1BB7        __end_of__tdiv_to_l_ 11B6          __size_of_Lcd_Init 0047  
        __size_of_Lcd_Port 0006            ___llmod@divisor 0020            ___llmod@counter 0074  
   __end_of_spiReceiveWait 1ADB                 ?_Lcd_Clear 0070                   ??___flge 0073  
                 ??___fleq 0073                   ??___wmul 0077                  __Umul8_16 1BB7  
          Lcd_Write_Char@a 0075                   ??_fround 0049              sprintf@tmpval 00BF  
                ___fladd@a 005D                  ___fladd@b 0059        __size_of_conversor2 005C  
               fround@prec 0058                  ___flmul@a 002F                  ___flmul@b 002B  
              __pbssCOMMON 007A                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
   __size_of_Config_USARTT 0011          __size_of___xxtofl 00BC               _isdigit$1075 0073  
                 ?_Lcd_Cmd 0070                sprintf@flag 00BB                sprintf@eexp 00C3  
              sprintf@fval 00C5                sprintf@prec 00CA           ___lwdiv@dividend 0023  
          ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0020                   ?___fladd 0059  
                 ?___awdiv 0022                   ?___flneg 0073                   ?___awmod 0073  
                 ?___flmul 002B                   ?___flsub 00A0                   ?___fltol 0058  
                 ?___lldiv 0020                   ?___llmod 0020                  __npowers_ 1844  
               ?__Umul8_16 0073                   ?___lwdiv 0021                   ?___lwmod 0073  
                __pstrings 1800                __tdiv_to_l_ 10F9               ??__div_to_l_ 0073  
                 ?_isdigit 0070                   ?_recibir 0070                   ?_spiInit 0073  
                 ?_spiRead 0070           ___lwdiv@quotient 0027                   ?_sprintf 00A8  
           __size_of_scale 0363             __size_of_setup 001C       spiInit@sTransmitEdge 0075  
        interrupt_function 0004             ___wmul@product 0020                  clear_ram0 1ADB  
                 _PIE1bits 008C         spiInit@sDataSample 0073                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C         __end_of__div_to_l_ 1274              _Config_USARTT 1B0F  
              ??_Lcd_Clear 0077                __stringbase 180F          ___wmul@multiplier 0073  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 1C97                   _Lcd_Port 1ACE  
 __end_of_Lcd_Write_String 1C51               ??_conversor2 0049           __size_of_Lcd_Cmd 001A  
           ?_Config_USARTT 0070                ??__Umul8_16 0075           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 005B  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003C                _fround$1264 0054                _fround$1265 0050  
       __end_of__stringtab 1810                 sprintf@val 00B7         __end_of_conversor2 1E8B  
                 ___xxtofl 103D           __size_of_isdigit 0012           __size_of_recibir 000B  
          ___lwdiv@divisor 0021            ___lwdiv@counter 0026                   __ptext10 11B6  
                 __ptext11 1BE0                   __ptext20 1AE3                   __ptext12 1D7E  
                 __ptext21 1AD4                   __ptext13 1E8B                   __ptext30 1B62  
                 __ptext22 1B32                   __ptext14 0800                   __ptext31 07D8  
                 __ptext23 1B7D                   __ptext15 1D2E                   __ptext32 1C97  
                 __ptext24 1AEC                   __ptext16 1274                   __ptext33 1B02  
                 __ptext25 1E2F                   __ptext17 1AF7                   __ptext34 1B48  
                 __ptext26 103D                   __ptext18 1F5C                   __ptext35 1ACE  
                 __ptext27 093C                   __ptext19 1CDE                   __ptext36 1B0F  
                 __ptext28 1BB7                   __ptext37 1B99                   __ptext29 1C0B  
         __size_of_spiInit 0016           __size_of_spiRead 0009                   __powers_ 1810  
         __size_of_sprintf F0CF              __size_of_main 00C0                  pnum$text1 000F  
                 _recibido 00E1               spiInit@sType 0076          spiInit@sClockIdle 0074  
               _INTCONbits 000B                   isdigit@c 0074                   scale@scl 0057  
                 intlevel1 0000                  sprintf@ap 00B6           __tdiv_to_l_@exp1 002D  
         __tdiv_to_l_@cntr 002C                  sprintf@sp 00C9           __tdiv_to_l_@quot 0028  
         ___lwmod@dividend 0075           ___lldiv@dividend 0024           ??_spiReceiveWait 0073  
          ??_Config_USARTT 0073                  stringcode 180A         Lcd_Set_Cursor@temp 0022  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0073                   sprintf@c 00CC  
                 sprintf@f 00A8           ___lldiv@quotient 0028            ___lwmod@divisor 0073  
          ___lwmod@counter 0020                   stringdir 180A                   stringtab 1800  
            ___fladd@signs 0069               ___fladd@aexp 006A               ___fladd@bexp 006B  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
