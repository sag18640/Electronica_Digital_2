

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 21:44:26 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	idataCOMMON
   485  07FE                     __pidataCOMMON:
   486                           
   487                           ;initializer for _turno
   488  07FE  3401               	retlw	1
   489                           
   490                           ;initializer for _flag
   491  07FF  3401               	retlw	1
   492                           
   493                           	psect	strings
   494  1800                     __pstrings:
   495  1800                     stringtab:
   496  1800                     __stringtab:
   497                           
   498                           ;	String table - string pointers are 1 byte each
   499  1800  1BFF               	btfsc	btemp+1,7
   500  1801  280A               	ljmp	stringcode
   501  1802  1383               	bcf	3,7
   502  1803  187F               	btfsc	btemp+1,0
   503  1804  1783               	bsf	3,7
   504  1805  0800               	movf	0,w
   505  1806  0A84               	incf	4,f
   506  1807  1903               	skipnz
   507  1808  0AFF               	incf	btemp+1,f
   508  1809  0008               	return
   509  180A                     stringcode:
   510  180A                     stringdir:
   511  180A  3018               	movlw	high stringdir
   512  180B  008A               	movwf	10
   513  180C  0804               	movf	4,w
   514  180D  0A84               	incf	4,f
   515  180E  0782               	addwf	2,f
   516  180F                     __stringbase:
   517  180F  3400               	retlw	0
   518  1810                     __end_of__stringtab:
   519  1810                     __powers_:
   520  1810  3400               	retlw	0
   521  1811  3400               	retlw	0
   522  1812  3480               	retlw	128
   523  1813  343F               	retlw	63
   524  1814  3400               	retlw	0
   525  1815  3400               	retlw	0
   526  1816  3420               	retlw	32
   527  1817  3441               	retlw	65
   528  1818  3400               	retlw	0
   529  1819  3400               	retlw	0
   530  181A  34C8               	retlw	200
   531  181B  3442               	retlw	66
   532  181C  3400               	retlw	0
   533  181D  3400               	retlw	0
   534  181E  347A               	retlw	122
   535  181F  3444               	retlw	68
   536  1820  3400               	retlw	0
   537  1821  3440               	retlw	64
   538  1822  341C               	retlw	28
   539  1823  3446               	retlw	70
   540  1824  3400               	retlw	0
   541  1825  3450               	retlw	80
   542  1826  34C3               	retlw	195
   543  1827  3447               	retlw	71
   544  1828  3400               	retlw	0
   545  1829  3424               	retlw	36
   546  182A  3474               	retlw	116
   547  182B  3449               	retlw	73
   548  182C  3480               	retlw	128
   549  182D  3496               	retlw	150
   550  182E  3418               	retlw	24
   551  182F  344B               	retlw	75
   552  1830  3420               	retlw	32
   553  1831  34BC               	retlw	188
   554  1832  34BE               	retlw	190
   555  1833  344C               	retlw	76
   556  1834  3428               	retlw	40
   557  1835  346B               	retlw	107
   558  1836  346E               	retlw	110
   559  1837  344E               	retlw	78
   560  1838  34F9               	retlw	249
   561  1839  3402               	retlw	2
   562  183A  3415               	retlw	21
   563  183B  3450               	retlw	80
   564  183C  34EC               	retlw	236
   565  183D  3478               	retlw	120
   566  183E  34AD               	retlw	173
   567  183F  3460               	retlw	96
   568  1840  34CA               	retlw	202
   569  1841  34F2               	retlw	242
   570  1842  3449               	retlw	73
   571  1843  3471               	retlw	113
   572  1844                     __end_of__powers_:
   573  1844                     __npowers_:
   574  1844  3400               	retlw	0
   575  1845  3400               	retlw	0
   576  1846  3480               	retlw	128
   577  1847  343F               	retlw	63
   578  1848  34CD               	retlw	205
   579  1849  34CC               	retlw	204
   580  184A  34CC               	retlw	204
   581  184B  343D               	retlw	61
   582  184C  340A               	retlw	10
   583  184D  34D7               	retlw	215
   584  184E  3423               	retlw	35
   585  184F  343C               	retlw	60
   586  1850  346F               	retlw	111
   587  1851  3412               	retlw	18
   588  1852  3483               	retlw	131
   589  1853  343A               	retlw	58
   590  1854  3417               	retlw	23
   591  1855  34B7               	retlw	183
   592  1856  34D1               	retlw	209
   593  1857  3438               	retlw	56
   594  1858  34AC               	retlw	172
   595  1859  34C5               	retlw	197
   596  185A  3427               	retlw	39
   597  185B  3437               	retlw	55
   598  185C  34BD               	retlw	189
   599  185D  3437               	retlw	55
   600  185E  3486               	retlw	134
   601  185F  3435               	retlw	53
   602  1860  3495               	retlw	149
   603  1861  34BF               	retlw	191
   604  1862  34D6               	retlw	214
   605  1863  3433               	retlw	51
   606  1864  3477               	retlw	119
   607  1865  34CC               	retlw	204
   608  1866  342B               	retlw	43
   609  1867  3432               	retlw	50
   610  1868  345F               	retlw	95
   611  1869  3470               	retlw	112
   612  186A  3489               	retlw	137
   613  186B  3430               	retlw	48
   614  186C  34FF               	retlw	255
   615  186D  34E6               	retlw	230
   616  186E  34DB               	retlw	219
   617  186F  342E               	retlw	46
   618  1870  3408               	retlw	8
   619  1871  34E5               	retlw	229
   620  1872  343C               	retlw	60
   621  1873  341E               	retlw	30
   622  1874  3460               	retlw	96
   623  1875  3442               	retlw	66
   624  1876  34A2               	retlw	162
   625  1877  340D               	retlw	13
   626  1878                     __end_of__npowers_:
   627  1878                     _dpowers:
   628  1878  3401               	retlw	1
   629  1879  3400               	retlw	0
   630  187A  3400               	retlw	0
   631  187B  3400               	retlw	0
   632  187C  340A               	retlw	10
   633  187D  3400               	retlw	0
   634  187E  3400               	retlw	0
   635  187F  3400               	retlw	0
   636  1880  3464               	retlw	100
   637  1881  3400               	retlw	0
   638  1882  3400               	retlw	0
   639  1883  3400               	retlw	0
   640  1884  34E8               	retlw	232
   641  1885  3403               	retlw	3
   642  1886  3400               	retlw	0
   643  1887  3400               	retlw	0
   644  1888  3410               	retlw	16
   645  1889  3427               	retlw	39
   646  188A  3400               	retlw	0
   647  188B  3400               	retlw	0
   648  188C  34A0               	retlw	160
   649  188D  3486               	retlw	134
   650  188E  3401               	retlw	1
   651  188F  3400               	retlw	0
   652  1890  3440               	retlw	64
   653  1891  3442               	retlw	66
   654  1892  340F               	retlw	15
   655  1893  3400               	retlw	0
   656  1894  3480               	retlw	128
   657  1895  3496               	retlw	150
   658  1896  3498               	retlw	152
   659  1897  3400               	retlw	0
   660  1898  3400               	retlw	0
   661  1899  34E1               	retlw	225
   662  189A  34F5               	retlw	245
   663  189B  3405               	retlw	5
   664  189C  3400               	retlw	0
   665  189D  34CA               	retlw	202
   666  189E  349A               	retlw	154
   667  189F  343B               	retlw	59
   668  18A0                     __end_of_dpowers:
   669  0014                     _SSPCON	set	20
   670  0019                     _TXREG	set	25
   671  000B                     _INTCONbits	set	11
   672  0009                     _PORTEbits	set	9
   673  001A                     _RCREG	set	26
   674  0018                     _RCSTAbits	set	24
   675  000C                     _PIR1bits	set	12
   676  0006                     _PORTB	set	6
   677  0009                     _PORTE	set	9
   678  0008                     _PORTD	set	8
   679  0007                     _PORTC	set	7
   680  0013                     _SSPBUF	set	19
   681  0007                     _PORTCbits	set	7
   682  0094                     _SSPSTATbits	set	148
   683  0094                     _SSPSTAT	set	148
   684  008C                     _PIE1bits	set	140
   685  0099                     _SPBRG	set	153
   686  0098                     _TXSTAbits	set	152
   687  0086                     _TRISB	set	134
   688  0089                     _TRISE	set	137
   689  0087                     _TRISC	set	135
   690  0088                     _TRISD	set	136
   691  043B                     _TRISC3	set	1083
   692  043D                     _TRISC5	set	1085
   693  04C1                     _TRMT	set	1217
   694  0187                     _BAUDCTLbits	set	391
   695  0188                     _ANSEL	set	392
   696  18A0                     STR_1:
   697  18A0  3453               	retlw	83	;'S'
   698  18A1  3431               	retlw	49	;'1'
   699  18A2  343A               	retlw	58	;':'
   700  18A3  3420               	retlw	32	;' '
   701  18A4  3420               	retlw	32	;' '
   702  18A5  3420               	retlw	32	;' '
   703  18A6  3453               	retlw	83	;'S'
   704  18A7  3432               	retlw	50	;'2'
   705  18A8  343A               	retlw	58	;':'
   706  18A9  3420               	retlw	32	;' '
   707  18AA  3420               	retlw	32	;' '
   708  18AB  3420               	retlw	32	;' '
   709  18AC  3420               	retlw	32	;' '
   710  18AD  3453               	retlw	83	;'S'
   711  18AE  3433               	retlw	51	;'3'
   712  18AF  343A               	retlw	58	;':'
   713  18B0  3400               	retlw	0
   714  18B1                     STR_2:
   715  18B1  3425               	retlw	37	;'%'
   716  18B2  3433               	retlw	51	;'3'
   717  18B3  342E               	retlw	46	;'.'
   718  18B4  3432               	retlw	50	;'2'
   719  18B5  3466               	retlw	102	;'f'
   720  18B6  3443               	retlw	67	;'C'
   721  18B7  3400               	retlw	0
   722  18B8                     STR_3:
   723  18B8  3425               	retlw	37	;'%'
   724  18B9  3464               	retlw	100	;'d'
   725  18BA  3400               	retlw	0
   726                           
   727                           	psect	cinit
   728  000F                     start_initialization:	
   729                           ; #config settings
   730                           
   731  000F                     __initialization:
   732                           
   733                           ; Initialize objects allocated to COMMON
   734  000F  120A  118A  27FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   735  0014  00F8               	movwf	__pdataCOMMON& (0+127)
   736  0015  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   737  001A  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   738                           
   739                           ; Clear objects allocated to BANK3
   740  001B  1783               	bsf	3,7	;select IRP bank2
   741  001C  3090               	movlw	low __pbssBANK3
   742  001D  0084               	movwf	4
   743  001E  30A4               	movlw	low (__pbssBANK3+20)
   744  001F  160A  158A  2181  120A  118A  	fcall	clear_ram0
   745                           
   746                           ; Clear objects allocated to BANK1
   747  0024  1383               	bcf	3,7	;select IRP bank0
   748  0025  30D0               	movlw	low __pbssBANK1
   749  0026  0084               	movwf	4
   750  0027  30E5               	movlw	low (__pbssBANK1+21)
   751  0028  160A  158A  2181  120A  118A  	fcall	clear_ram0
   752                           
   753                           ; Clear objects allocated to BANK0
   754  002D  01ED               	clrf	__pbssBANK0& (0+127)
   755                           
   756                           ; Clear objects allocated to COMMON
   757  002E  01FA               	clrf	__pbssCOMMON& (0+127)
   758  002F                     end_of_initialization:	
   759                           ;End of C runtime variable initialization code
   760                           
   761  002F                     __end_of__initialization:
   762  002F  0183               	clrf	3
   763  0030  120A  118A  2EB5   	ljmp	_main	;jump to C main() function
   764                           
   765                           	psect	bssCOMMON
   766  007A                     __pbssCOMMON:
   767  007A                     _retorno:
   768  007A                     	ds	1
   769                           
   770                           	psect	dataCOMMON
   771  0078                     __pdataCOMMON:
   772  0078                     _turno:
   773  0078                     	ds	1
   774  0079                     _flag:
   775  0079                     	ds	1
   776                           
   777                           	psect	bssBANK0
   778  006D                     __pbssBANK0:
   779  006D                     _valorT:
   780  006D                     	ds	1
   781                           
   782                           	psect	bssBANK1
   783  00D0                     __pbssBANK1:
   784  00D0                     _p:
   785  00D0                     	ds	4
   786  00D4                     _x:
   787  00D4                     	ds	4
   788  00D8                     _vv:
   789  00D8                     	ds	4
   790  00DC                     _v:
   791  00DC                     	ds	4
   792  00E0                     _enviado:
   793  00E0                     	ds	1
   794  00E1                     _recibido:
   795  00E1                     	ds	1
   796  00E2                     _count:
   797  00E2                     	ds	1
   798  00E3                     _valorA:
   799  00E3                     	ds	1
   800  00E4                     _valorC:
   801  00E4                     	ds	1
   802                           
   803                           	psect	bssBANK3
   804  0190                     __pbssBANK3:
   805  0190                     _s:
   806  0190                     	ds	20
   807                           
   808                           	psect	clrtext
   809  1981                     clear_ram0:	
   810                           ;	Called with FSR containing the base address, and
   811                           ;	W with the last address+1
   812                           
   813  1981  0064               	clrwdt	;clear the watchdog before getting into this loop
   814  1982                     clrloop0:
   815  1982  0180               	clrf	0	;clear RAM location pointed to by FSR
   816  1983  0A84               	incf	4,f	;increment pointer
   817  1984  0604               	xorwf	4,w	;XOR with final address
   818  1985  1903               	btfsc	3,2	;have we reached the end yet?
   819  1986  3400               	retlw	0	;all done for this memory range, return
   820  1987  0604               	xorwf	4,w	;XOR again to restore value
   821  1988  2982               	goto	clrloop0	;do the next byte
   822                           
   823                           	psect	cstackBANK1
   824  00A0                     __pcstackBANK1:
   825  00A0                     ?___flsub:
   826  00A0                     ___flsub@a:	
   827                           ; 4 bytes @ 0x0
   828                           
   829                           
   830                           ; 4 bytes @ 0x0
   831  00A0                     	ds	4
   832  00A4                     ___flsub@b:
   833                           
   834                           ; 4 bytes @ 0x4
   835  00A4                     	ds	4
   836  00A8                     ?_sprintf:
   837  00A8                     sprintf@f:	
   838                           ; 2 bytes @ 0x8
   839                           
   840                           
   841                           ; 1 bytes @ 0x8
   842  00A8                     	ds	5
   843  00AD                     ??_sprintf:
   844                           
   845                           ; 1 bytes @ 0xD
   846  00AD                     	ds	5
   847  00B2                     _sprintf$1267:
   848                           
   849                           ; 4 bytes @ 0x12
   850  00B2                     	ds	4
   851  00B6                     sprintf@ap:
   852                           
   853                           ; 1 bytes @ 0x16
   854  00B6                     	ds	1
   855  00B7                     sprintf@flag:
   856                           
   857                           ; 2 bytes @ 0x17
   858  00B7                     	ds	2
   859  00B9                     sprintf@width:
   860                           
   861                           ; 2 bytes @ 0x19
   862  00B9                     	ds	2
   863  00BB                     sprintf@tmpval:
   864                           
   865                           ; 4 bytes @ 0x1B
   866  00BB                     	ds	4
   867  00BF                     sprintf@val:
   868                           
   869                           ; 4 bytes @ 0x1F
   870  00BF                     	ds	4
   871  00C3                     sprintf@eexp:
   872                           
   873                           ; 2 bytes @ 0x23
   874  00C3                     	ds	2
   875  00C5                     sprintf@fval:
   876                           
   877                           ; 4 bytes @ 0x25
   878  00C5                     	ds	4
   879  00C9                     sprintf@sp:
   880                           
   881                           ; 1 bytes @ 0x29
   882  00C9                     	ds	1
   883  00CA                     sprintf@prec:
   884                           
   885                           ; 2 bytes @ 0x2A
   886  00CA                     	ds	2
   887  00CC                     sprintf@c:
   888                           
   889                           ; 1 bytes @ 0x2C
   890  00CC                     	ds	1
   891  00CD                     ??_main:
   892                           
   893                           ; 1 bytes @ 0x2D
   894  00CD                     	ds	3
   895                           
   896                           	psect	cstackCOMMON
   897  0070                     __pcstackCOMMON:
   898  0070                     ?_isdigit:
   899  0070                     ?_setup:	
   900                           ; 1 bit 
   901                           
   902  0070                     ?_Config_USARTT:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_recibir:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_Lcd_Init:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_Lcd_Clear:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_spiRead:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_main:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_ISR:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ??_ISR:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_Lcd_Port:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_Lcd_Cmd:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_Lcd_Write_Char:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_spiReceiveWait:	
   936                           ; 1 bytes @ 0x0
   937                           
   938                           
   939                           ; 1 bytes @ 0x0
   940  0070                     	ds	3
   941  0073                     ??_setup:
   942  0073                     ??_Config_USARTT:	
   943                           ; 1 bytes @ 0x3
   944                           
   945  0073                     ??_recibir:	
   946                           ; 1 bytes @ 0x3
   947                           
   948  0073                     ?_spiInit:	
   949                           ; 1 bytes @ 0x3
   950                           
   951  0073                     ??_spiRead:	
   952                           ; 1 bytes @ 0x3
   953                           
   954  0073                     ??_isdigit:	
   955                           ; 1 bytes @ 0x3
   956                           
   957  0073                     ??__tdiv_to_l_:	
   958                           ; 1 bytes @ 0x3
   959                           
   960  0073                     ??__div_to_l_:	
   961                           ; 1 bytes @ 0x3
   962                           
   963  0073                     ??_Lcd_Port:	
   964                           ; 1 bytes @ 0x3
   965                           
   966  0073                     ??_spiReceiveWait:	
   967                           ; 1 bytes @ 0x3
   968                           
   969  0073                     ??___lldiv:	
   970                           ; 1 bytes @ 0x3
   971                           
   972  0073                     ??___fleq:	
   973                           ; 1 bytes @ 0x3
   974                           
   975  0073                     ??___flge:	
   976                           ; 1 bytes @ 0x3
   977                           
   978  0073                     ?__Umul8_16:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  0073                     ?___wmul:	
   982                           ; 2 bytes @ 0x3
   983                           
   984  0073                     ?___awmod:	
   985                           ; 2 bytes @ 0x3
   986                           
   987  0073                     ?___lwmod:	
   988                           ; 2 bytes @ 0x3
   989                           
   990  0073                     ?___flneg:	
   991                           ; 2 bytes @ 0x3
   992                           
   993  0073                     ?___xxtofl:	
   994                           ; 4 bytes @ 0x3
   995                           
   996  0073                     Lcd_Port@a:	
   997                           ; 4 bytes @ 0x3
   998                           
   999  0073                     spiInit@sDataSample:	
  1000                           ; 1 bytes @ 0x3
  1001                           
  1002  0073                     __Umul8_16@multiplicand:	
  1003                           ; 1 bytes @ 0x3
  1004                           
  1005  0073                     _isdigit$1075:	
  1006                           ; 1 bytes @ 0x3
  1007                           
  1008  0073                     ___wmul@multiplier:	
  1009                           ; 1 bytes @ 0x3
  1010                           
  1011  0073                     ___awmod@divisor:	
  1012                           ; 2 bytes @ 0x3
  1013                           
  1014  0073                     ___lwmod@divisor:	
  1015                           ; 2 bytes @ 0x3
  1016                           
  1017  0073                     ___flneg@f1:	
  1018                           ; 2 bytes @ 0x3
  1019                           
  1020  0073                     ___xxtofl@val:	
  1021                           ; 4 bytes @ 0x3
  1022                           
  1023                           
  1024                           ; 4 bytes @ 0x3
  1025  0073                     	ds	1
  1026  0074                     ??_Lcd_Cmd:
  1027  0074                     ??_Lcd_Write_Char:	
  1028                           ; 1 bytes @ 0x4
  1029                           
  1030  0074                     ??___llmod:	
  1031                           ; 1 bytes @ 0x4
  1032                           
  1033  0074                     spiInit@sClockIdle:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036  0074                     isdigit@c:	
  1037                           ; 1 bytes @ 0x4
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x4
  1041  0074                     	ds	1
  1042  0075                     ??__Umul8_16:
  1043  0075                     Lcd_Write_Char@a:	
  1044                           ; 1 bytes @ 0x5
  1045                           
  1046  0075                     spiInit@sTransmitEdge:	
  1047                           ; 1 bytes @ 0x5
  1048                           
  1049  0075                     ___llmod@counter:	
  1050                           ; 1 bytes @ 0x5
  1051                           
  1052  0075                     ___wmul@multiplicand:	
  1053                           ; 1 bytes @ 0x5
  1054                           
  1055  0075                     ___awmod@dividend:	
  1056                           ; 2 bytes @ 0x5
  1057                           
  1058  0075                     ___lwmod@dividend:	
  1059                           ; 2 bytes @ 0x5
  1060                           
  1061                           
  1062                           ; 2 bytes @ 0x5
  1063  0075                     	ds	1
  1064  0076                     ??_spiInit:
  1065  0076                     ?_Lcd_Write_String:	
  1066                           ; 1 bytes @ 0x6
  1067                           
  1068  0076                     Lcd_Cmd@a:	
  1069                           ; 1 bytes @ 0x6
  1070                           
  1071  0076                     spiInit@sType:	
  1072                           ; 1 bytes @ 0x6
  1073                           
  1074  0076                     Lcd_Write_String@a:	
  1075                           ; 1 bytes @ 0x6
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x6
  1079  0076                     	ds	1
  1080  0077                     ??_Lcd_Clear:
  1081  0077                     ?_Lcd_Set_Cursor:	
  1082                           ; 1 bytes @ 0x7
  1083                           
  1084  0077                     ??___wmul:	
  1085                           ; 1 bytes @ 0x7
  1086                           
  1087  0077                     ??___awmod:	
  1088                           ; 1 bytes @ 0x7
  1089                           
  1090  0077                     ??___flneg:	
  1091                           ; 1 bytes @ 0x7
  1092                           
  1093  0077                     ??___lwmod:	
  1094                           ; 1 bytes @ 0x7
  1095                           
  1096  0077                     Lcd_Set_Cursor@b:	
  1097                           ; 1 bytes @ 0x7
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0x7
  1101  0077                     	ds	1
  1102  0078                     ??___flsub:
  1103                           
  1104                           	psect	cstackBANK0
  1105  0020                     __pcstackBANK0:	
  1106                           ; 1 bytes @ 0x8
  1107                           
  1108  0020                     ?___fleq:
  1109  0020                     ?___flge:	
  1110                           ; 1 bit 
  1111                           
  1112  0020                     ??_Lcd_Init:	
  1113                           ; 1 bit 
  1114                           
  1115  0020                     ??_Lcd_Set_Cursor:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0020                     ??_Lcd_Write_String:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0020                     ??___xxtofl:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0020                     ?__tdiv_to_l_:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0020                     ?__div_to_l_:	
  1128                           ; 4 bytes @ 0x0
  1129                           
  1130  0020                     ?___lldiv:	
  1131                           ; 4 bytes @ 0x0
  1132                           
  1133  0020                     ___awmod@counter:	
  1134                           ; 4 bytes @ 0x0
  1135                           
  1136  0020                     ___lwmod@counter:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0020                     ___wmul@product:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0020                     __Umul8_16@product:	
  1143                           ; 2 bytes @ 0x0
  1144                           
  1145  0020                     ___lldiv@divisor:	
  1146                           ; 2 bytes @ 0x0
  1147                           
  1148  0020                     __div_to_l_@f1:	
  1149                           ; 4 bytes @ 0x0
  1150                           
  1151  0020                     ___fleq@ff1:	
  1152                           ; 4 bytes @ 0x0
  1153                           
  1154  0020                     ___flge@ff1:	
  1155                           ; 4 bytes @ 0x0
  1156                           
  1157  0020                     __tdiv_to_l_@f1:	
  1158                           ; 4 bytes @ 0x0
  1159                           
  1160                           
  1161                           ; 4 bytes @ 0x0
  1162  0020                     	ds	1
  1163  0021                     ?___lwdiv:
  1164  0021                     Lcd_Set_Cursor@a:	
  1165                           ; 2 bytes @ 0x1
  1166                           
  1167  0021                     ___awmod@sign:	
  1168                           ; 1 bytes @ 0x1
  1169                           
  1170  0021                     ___lwdiv@divisor:	
  1171                           ; 1 bytes @ 0x1
  1172                           
  1173                           
  1174                           ; 2 bytes @ 0x1
  1175  0021                     	ds	1
  1176  0022                     ?___awdiv:
  1177  0022                     Lcd_Set_Cursor@temp:	
  1178                           ; 2 bytes @ 0x2
  1179                           
  1180  0022                     ___awdiv@divisor:	
  1181                           ; 1 bytes @ 0x2
  1182                           
  1183  0022                     __Umul8_16@word_mpld:	
  1184                           ; 2 bytes @ 0x2
  1185                           
  1186                           
  1187                           ; 2 bytes @ 0x2
  1188  0022                     	ds	1
  1189  0023                     Lcd_Write_String@i:
  1190  0023                     ___lwdiv@dividend:	
  1191                           ; 2 bytes @ 0x3
  1192                           
  1193                           
  1194                           ; 2 bytes @ 0x3
  1195  0023                     	ds	1
  1196  0024                     __Umul8_16@multiplier:
  1197  0024                     ___xxtofl@sign:	
  1198                           ; 1 bytes @ 0x4
  1199                           
  1200  0024                     ___awdiv@dividend:	
  1201                           ; 1 bytes @ 0x4
  1202                           
  1203  0024                     ___lldiv@dividend:	
  1204                           ; 2 bytes @ 0x4
  1205                           
  1206  0024                     __div_to_l_@f2:	
  1207                           ; 4 bytes @ 0x4
  1208                           
  1209  0024                     ___fleq@ff2:	
  1210                           ; 4 bytes @ 0x4
  1211                           
  1212  0024                     ___flge@ff2:	
  1213                           ; 4 bytes @ 0x4
  1214                           
  1215  0024                     __tdiv_to_l_@f2:	
  1216                           ; 4 bytes @ 0x4
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0x4
  1220  0024                     	ds	1
  1221  0025                     ??___lwdiv:
  1222  0025                     ___xxtofl@exp:	
  1223                           ; 1 bytes @ 0x5
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0x5
  1227  0025                     	ds	1
  1228  0026                     ??___awdiv:
  1229  0026                     ___lwdiv@counter:	
  1230                           ; 1 bytes @ 0x6
  1231                           
  1232  0026                     ___xxtofl@arg:	
  1233                           ; 1 bytes @ 0x6
  1234                           
  1235                           
  1236                           ; 4 bytes @ 0x6
  1237  0026                     	ds	1
  1238  0027                     ___awdiv@counter:
  1239  0027                     ___lwdiv@quotient:	
  1240                           ; 1 bytes @ 0x7
  1241                           
  1242                           
  1243                           ; 2 bytes @ 0x7
  1244  0027                     	ds	1
  1245  0028                     ___awdiv@sign:
  1246  0028                     ___lldiv@quotient:	
  1247                           ; 1 bytes @ 0x8
  1248                           
  1249  0028                     __div_to_l_@quot:	
  1250                           ; 4 bytes @ 0x8
  1251                           
  1252  0028                     __tdiv_to_l_@quot:	
  1253                           ; 4 bytes @ 0x8
  1254                           
  1255                           
  1256                           ; 4 bytes @ 0x8
  1257  0028                     	ds	1
  1258  0029                     ___awdiv@quotient:
  1259                           
  1260                           ; 2 bytes @ 0x9
  1261  0029                     	ds	2
  1262  002B                     ?___flmul:
  1263  002B                     ___flmul@b:	
  1264                           ; 4 bytes @ 0xB
  1265                           
  1266                           
  1267                           ; 4 bytes @ 0xB
  1268  002B                     	ds	1
  1269  002C                     ___lldiv@counter:
  1270  002C                     __div_to_l_@cntr:	
  1271                           ; 1 bytes @ 0xC
  1272                           
  1273  002C                     __tdiv_to_l_@cntr:	
  1274                           ; 1 bytes @ 0xC
  1275                           
  1276                           
  1277                           ; 1 bytes @ 0xC
  1278  002C                     	ds	1
  1279  002D                     ?___llmod:
  1280  002D                     __div_to_l_@exp1:	
  1281                           ; 4 bytes @ 0xD
  1282                           
  1283  002D                     __tdiv_to_l_@exp1:	
  1284                           ; 1 bytes @ 0xD
  1285                           
  1286  002D                     ___llmod@divisor:	
  1287                           ; 1 bytes @ 0xD
  1288                           
  1289                           
  1290                           ; 4 bytes @ 0xD
  1291  002D                     	ds	2
  1292  002F                     ___flmul@a:
  1293                           
  1294                           ; 4 bytes @ 0xF
  1295  002F                     	ds	2
  1296  0031                     ___llmod@dividend:
  1297                           
  1298                           ; 4 bytes @ 0x11
  1299  0031                     	ds	2
  1300  0033                     ??___flmul:
  1301                           
  1302                           ; 1 bytes @ 0x13
  1303  0033                     	ds	5
  1304  0038                     ___flmul@sign:
  1305                           
  1306                           ; 1 bytes @ 0x18
  1307  0038                     	ds	1
  1308  0039                     ___flmul@grs:
  1309                           
  1310                           ; 4 bytes @ 0x19
  1311  0039                     	ds	4
  1312  003D                     ___flmul@aexp:
  1313                           
  1314                           ; 1 bytes @ 0x1D
  1315  003D                     	ds	1
  1316  003E                     ___flmul@bexp:
  1317                           
  1318                           ; 1 bytes @ 0x1E
  1319  003E                     	ds	1
  1320  003F                     ___flmul@prod:
  1321                           
  1322                           ; 4 bytes @ 0x1F
  1323  003F                     	ds	4
  1324  0043                     ___flmul@temp:
  1325                           
  1326                           ; 2 bytes @ 0x23
  1327  0043                     	ds	2
  1328  0045                     ?_conversor2:
  1329  0045                     ?_fround:	
  1330                           ; 4 bytes @ 0x25
  1331                           
  1332  0045                     ?_scale:	
  1333                           ; 4 bytes @ 0x25
  1334                           
  1335                           
  1336                           ; 4 bytes @ 0x25
  1337  0045                     	ds	4
  1338  0049                     ??_conversor2:
  1339  0049                     ??_fround:	
  1340                           ; 1 bytes @ 0x29
  1341                           
  1342  0049                     ??_scale:	
  1343                           ; 1 bytes @ 0x29
  1344                           
  1345                           
  1346                           ; 1 bytes @ 0x29
  1347  0049                     	ds	4
  1348  004D                     conversor2@val:
  1349                           
  1350                           ; 1 bytes @ 0x2D
  1351  004D                     	ds	3
  1352  0050                     _fround$1265:
  1353                           
  1354                           ; 4 bytes @ 0x30
  1355  0050                     	ds	3
  1356  0053                     _scale$1266:
  1357                           
  1358                           ; 4 bytes @ 0x33
  1359  0053                     	ds	1
  1360  0054                     _fround$1264:
  1361                           
  1362                           ; 4 bytes @ 0x34
  1363  0054                     	ds	3
  1364  0057                     scale@scl:
  1365                           
  1366                           ; 1 bytes @ 0x37
  1367  0057                     	ds	1
  1368  0058                     ?___fltol:
  1369  0058                     fround@prec:	
  1370                           ; 4 bytes @ 0x38
  1371                           
  1372  0058                     ___fltol@f1:	
  1373                           ; 1 bytes @ 0x38
  1374                           
  1375                           
  1376                           ; 4 bytes @ 0x38
  1377  0058                     	ds	1
  1378  0059                     ?___fladd:
  1379  0059                     ___fladd@b:	
  1380                           ; 4 bytes @ 0x39
  1381                           
  1382                           
  1383                           ; 4 bytes @ 0x39
  1384  0059                     	ds	3
  1385  005C                     ??___fltol:
  1386                           
  1387                           ; 1 bytes @ 0x3C
  1388  005C                     	ds	1
  1389  005D                     ___fladd@a:
  1390                           
  1391                           ; 4 bytes @ 0x3D
  1392  005D                     	ds	4
  1393  0061                     ??___fladd:
  1394  0061                     ___fltol@sign1:	
  1395                           ; 1 bytes @ 0x41
  1396                           
  1397                           
  1398                           ; 1 bytes @ 0x41
  1399  0061                     	ds	1
  1400  0062                     ___fltol@exp1:
  1401                           
  1402                           ; 1 bytes @ 0x42
  1403  0062                     	ds	7
  1404  0069                     ___fladd@signs:
  1405                           
  1406                           ; 1 bytes @ 0x49
  1407  0069                     	ds	1
  1408  006A                     ___fladd@aexp:
  1409                           
  1410                           ; 1 bytes @ 0x4A
  1411  006A                     	ds	1
  1412  006B                     ___fladd@bexp:
  1413                           
  1414                           ; 1 bytes @ 0x4B
  1415  006B                     	ds	1
  1416  006C                     ___fladd@grs:
  1417                           
  1418                           ; 1 bytes @ 0x4C
  1419  006C                     	ds	1
  1420                           
  1421                           	psect	maintext
  1422  06B5                     __pmaintext:	
  1423 ;;
  1424 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1425 ;;
  1426 ;; *************** function _main *****************
  1427 ;; Defined at:
  1428 ;;		line 67 in file "main.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : B00/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0
  1444 ;;      Temps:          0       0       3       0       0
  1445 ;;      Totals:         0       0       3       0       0
  1446 ;;Total ram usage:        3 bytes
  1447 ;; Hardware stack levels required when called:    5
  1448 ;; This function calls:
  1449 ;;		_Config_USARTT
  1450 ;;		_Lcd_Clear
  1451 ;;		_Lcd_Init
  1452 ;;		_Lcd_Set_Cursor
  1453 ;;		_Lcd_Write_String
  1454 ;;		_conversor2
  1455 ;;		_recibir
  1456 ;;		_setup
  1457 ;;		_spiInit
  1458 ;;		_spiRead
  1459 ;;		_sprintf
  1460 ;; This function is called by:
  1461 ;;		Startup code after reset
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _main
  1467  06B5                     _main:
  1468  06B5                     l4478:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1471                           
  1472                           
  1473                           ;main.c: 68:     setup();
  1474  06B5  160A  158A  21C6  120A  118A  	fcall	_setup
  1475                           
  1476                           ;main.c: 69:     Config_USARTT();
  1477  06BA  160A  158A  21B5  120A  118A  	fcall	_Config_USARTT
  1478  06BF                     l4480:
  1479                           
  1480                           ;main.c: 70:     recibir();
  1481  06BF  160A  158A  2192  120A  118A  	fcall	_recibir
  1482  06C4                     l4482:
  1483                           
  1484                           ;main.c: 71:     Lcd_Init();
  1485  06C4  160A  158A  237A  120A  118A  	fcall	_Lcd_Init
  1486  06C9                     l4484:
  1487                           
  1488                           ;main.c: 72:     Lcd_Clear();
  1489  06C9  160A  158A  21A8  120A  118A  	fcall	_Lcd_Clear
  1490  06CE                     l4486:
  1491                           
  1492                           ;main.c: 73:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1493  06CE  01F3               	clrf	spiInit@sDataSample
  1494  06CF  01F4               	clrf	spiInit@sClockIdle
  1495  06D0  01F5               	clrf	spiInit@sTransmitEdge
  1496  06D1  3020               	movlw	32
  1497  06D2  160A  158A  21EA  120A  118A  	fcall	_spiInit
  1498  06D7                     l4488:
  1499                           
  1500                           ;main.c: 77:         Lcd_Set_Cursor(1, 1);
  1501  06D7  01F7               	clrf	Lcd_Set_Cursor@b
  1502  06D8  0AF7               	incf	Lcd_Set_Cursor@b,f
  1503  06D9  3001               	movlw	1
  1504  06DA  160A  158A  2238  120A  118A  	fcall	_Lcd_Set_Cursor
  1505  06DF                     l4490:
  1506                           
  1507                           ;main.c: 78:         Lcd_Write_String("S1:   S2:    S3:");
  1508  06DF  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1509  06E0  00F6               	movwf	Lcd_Write_String@a
  1510  06E1  3080               	movlw	128
  1511  06E2  00F7               	movwf	Lcd_Write_String@a+1
  1512  06E3  160A  158A  22EE  120A  118A  	fcall	_Lcd_Write_String
  1513  06E8                     l4492:
  1514                           
  1515                           ;main.c: 89:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1516  06E8  3003               	movlw	3
  1517  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  1518  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  1519  06EB  00CE               	movwf	(??_main^(0+128)+1)
  1520  06EC  3097               	movlw	151
  1521  06ED  00CD               	movwf	??_main^(0+128)
  1522  06EE                     u7587:
  1523  06EE  0BCD               	decfsz	??_main^(0+128),f
  1524  06EF  2EEE               	goto	u7587
  1525  06F0  0BCE               	decfsz	(??_main^(0+128)+1),f
  1526  06F1  2EEE               	goto	u7587
  1527  06F2                     l4494:
  1528                           
  1529                           ;main.c: 90:         PORTCbits.RC0 = 0;
  1530  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1531  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1532  06F4  1007               	bcf	7,0	;volatile
  1533  06F5                     l4496:
  1534                           
  1535                           ;main.c: 91:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1536  06F5  3003               	movlw	3
  1537  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  1538  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  1539  06F8  00CE               	movwf	(??_main^(0+128)+1)
  1540  06F9  3097               	movlw	151
  1541  06FA  00CD               	movwf	??_main^(0+128)
  1542  06FB                     u7597:
  1543  06FB  0BCD               	decfsz	??_main^(0+128),f
  1544  06FC  2EFB               	goto	u7597
  1545  06FD  0BCE               	decfsz	(??_main^(0+128)+1),f
  1546  06FE  2EFB               	goto	u7597
  1547  06FF                     l4498:
  1548                           
  1549                           ;main.c: 92:         SSPBUF = 0;
  1550  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0700  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0701  0193               	clrf	19	;volatile
  1553  0702                     l4500:
  1554                           
  1555                           ;main.c: 93:         valorT = spiRead();
  1556  0702  160A  158A  2189  120A  118A  	fcall	_spiRead
  1557  0707  1683               	bsf	3,5	;RP0=1, select bank1
  1558  0708  1303               	bcf	3,6	;RP1=0, select bank1
  1559  0709  00CD               	movwf	??_main^(0+128)
  1560  070A  084D               	movf	??_main^(0+128),w
  1561  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1562  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1563  070D  00ED               	movwf	_valorT
  1564  070E                     l4502:
  1565                           
  1566                           ;main.c: 94:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1567  070E  3003               	movlw	3
  1568  070F  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0710  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0711  00CE               	movwf	(??_main^(0+128)+1)
  1571  0712  3097               	movlw	151
  1572  0713  00CD               	movwf	??_main^(0+128)
  1573  0714                     u7607:
  1574  0714  0BCD               	decfsz	??_main^(0+128),f
  1575  0715  2F14               	goto	u7607
  1576  0716  0BCE               	decfsz	(??_main^(0+128)+1),f
  1577  0717  2F14               	goto	u7607
  1578  0718                     l4504:
  1579                           
  1580                           ;main.c: 95:         PORTCbits.RC0 = 1;
  1581  0718  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0719  1303               	bcf	3,6	;RP1=0, select bank0
  1583  071A  1407               	bsf	7,0	;volatile
  1584  071B                     l4506:
  1585                           
  1586                           ;main.c: 96:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1587  071B  3003               	movlw	3
  1588  071C  1683               	bsf	3,5	;RP0=1, select bank1
  1589  071D  1303               	bcf	3,6	;RP1=0, select bank1
  1590  071E  00CF               	movwf	(??_main^(0+128)+2)
  1591  071F  3008               	movlw	8
  1592  0720  00CE               	movwf	(??_main^(0+128)+1)
  1593  0721  3076               	movlw	118
  1594  0722  00CD               	movwf	??_main^(0+128)
  1595  0723                     u7617:
  1596  0723  0BCD               	decfsz	??_main^(0+128),f
  1597  0724  2F23               	goto	u7617
  1598  0725  0BCE               	decfsz	(??_main^(0+128)+1),f
  1599  0726  2F23               	goto	u7617
  1600  0727  0BCF               	decfsz	(??_main^(0+128)+2),f
  1601  0728  2F23               	goto	u7617
  1602  0729  0000               	nop
  1603  072A                     l4508:
  1604                           
  1605                           ;main.c: 97:         Lcd_Set_Cursor(2, 11);
  1606  072A  300B               	movlw	11
  1607  072B  1683               	bsf	3,5	;RP0=1, select bank1
  1608  072C  1303               	bcf	3,6	;RP1=0, select bank1
  1609  072D  00CD               	movwf	??_main^(0+128)
  1610  072E  084D               	movf	??_main^(0+128),w
  1611  072F  00F7               	movwf	Lcd_Set_Cursor@b
  1612  0730  3002               	movlw	2
  1613  0731  160A  158A  2238  120A  118A  	fcall	_Lcd_Set_Cursor
  1614  0736                     l4510:
  1615                           
  1616                           ;main.c: 98:         p = conversor2(valorT);
  1617  0736  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0737  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0738  086D               	movf	_valorT,w
  1620  0739  160A  118A  2005  120A  118A  	fcall	_conversor2
  1621  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1622  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0740  0848               	movf	?_conversor2+3,w
  1624  0741  1683               	bsf	3,5	;RP0=1, select bank1
  1625  0742  1303               	bcf	3,6	;RP1=0, select bank1
  1626  0743  00D3               	movwf	(_p+3)^(0+128)
  1627  0744  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0745  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0746  0847               	movf	?_conversor2+2,w
  1630  0747  1683               	bsf	3,5	;RP0=1, select bank1
  1631  0748  1303               	bcf	3,6	;RP1=0, select bank1
  1632  0749  00D2               	movwf	(_p+2)^(0+128)
  1633  074A  1283               	bcf	3,5	;RP0=0, select bank0
  1634  074B  1303               	bcf	3,6	;RP1=0, select bank0
  1635  074C  0846               	movf	?_conversor2+1,w
  1636  074D  1683               	bsf	3,5	;RP0=1, select bank1
  1637  074E  1303               	bcf	3,6	;RP1=0, select bank1
  1638  074F  00D1               	movwf	(_p+1)^(0+128)
  1639  0750  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0751  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0752  0845               	movf	?_conversor2,w
  1642  0753  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0754  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0755  00D0               	movwf	_p^(0+128)
  1645  0756                     l4512:
  1646                           
  1647                           ;main.c: 99:         sprintf(s, "%3.2fC", p);
  1648  0756  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1649  0757  00CD               	movwf	??_main^(0+128)
  1650  0758  084D               	movf	??_main^(0+128),w
  1651  0759  00A8               	movwf	sprintf@f^(0+128)
  1652  075A  0853               	movf	(_p+3)^(0+128),w
  1653  075B  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1654  075C  0852               	movf	(_p+2)^(0+128),w
  1655  075D  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1656  075E  0851               	movf	(_p+1)^(0+128),w
  1657  075F  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1658  0760  0850               	movf	_p^(0+128),w
  1659  0761  00A9               	movwf	(?_sprintf^(0+128)+1)
  1660  0762  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1661  0763  160A  118A  24F6  120A  118A  	fcall	_sprintf
  1662  0768                     l4514:
  1663                           
  1664                           ;main.c: 100:         Lcd_Write_String(s);
  1665  0768  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1666  0769  00F6               	movwf	Lcd_Write_String@a
  1667  076A  3001               	movlw	1
  1668  076B  00F7               	movwf	Lcd_Write_String@a+1
  1669  076C  160A  158A  22EE  120A  118A  	fcall	_Lcd_Write_String
  1670  0771                     l4516:
  1671                           
  1672                           ;main.c: 111:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1673  0771  3003               	movlw	3
  1674  0772  1683               	bsf	3,5	;RP0=1, select bank1
  1675  0773  1303               	bcf	3,6	;RP1=0, select bank1
  1676  0774  00CF               	movwf	(??_main^(0+128)+2)
  1677  0775  3008               	movlw	8
  1678  0776  00CE               	movwf	(??_main^(0+128)+1)
  1679  0777  3076               	movlw	118
  1680  0778  00CD               	movwf	??_main^(0+128)
  1681  0779                     u7627:
  1682  0779  0BCD               	decfsz	??_main^(0+128),f
  1683  077A  2F79               	goto	u7627
  1684  077B  0BCE               	decfsz	(??_main^(0+128)+1),f
  1685  077C  2F79               	goto	u7627
  1686  077D  0BCF               	decfsz	(??_main^(0+128)+2),f
  1687  077E  2F79               	goto	u7627
  1688  077F  0000               	nop
  1689  0780                     l4518:
  1690                           
  1691                           ;main.c: 112:         PORTCbits.RC2 = 0;
  1692  0780  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0781  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0782  1107               	bcf	7,2	;volatile
  1695  0783                     l4520:
  1696                           
  1697                           ;main.c: 113:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1698  0783  3003               	movlw	3
  1699  0784  1683               	bsf	3,5	;RP0=1, select bank1
  1700  0785  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0786  00CE               	movwf	(??_main^(0+128)+1)
  1702  0787  3097               	movlw	151
  1703  0788  00CD               	movwf	??_main^(0+128)
  1704  0789                     u7637:
  1705  0789  0BCD               	decfsz	??_main^(0+128),f
  1706  078A  2F89               	goto	u7637
  1707  078B  0BCE               	decfsz	(??_main^(0+128)+1),f
  1708  078C  2F89               	goto	u7637
  1709  078D                     l4522:
  1710                           
  1711                           ;main.c: 114:         SSPBUF = 2;
  1712  078D  3002               	movlw	2
  1713  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1714  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1715  0790  0093               	movwf	19	;volatile
  1716  0791                     l4524:
  1717                           
  1718                           ;main.c: 115:         valorC = spiRead();
  1719  0791  160A  158A  2189  120A  118A  	fcall	_spiRead
  1720  0796  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0797  1303               	bcf	3,6	;RP1=0, select bank1
  1722  0798  00CD               	movwf	??_main^(0+128)
  1723  0799  084D               	movf	??_main^(0+128),w
  1724  079A  00E4               	movwf	_valorC^(0+128)
  1725  079B                     l4526:
  1726                           
  1727                           ;main.c: 116:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1728  079B  3003               	movlw	3
  1729  079C  1683               	bsf	3,5	;RP0=1, select bank1
  1730  079D  1303               	bcf	3,6	;RP1=0, select bank1
  1731  079E  00CE               	movwf	(??_main^(0+128)+1)
  1732  079F  3097               	movlw	151
  1733  07A0  00CD               	movwf	??_main^(0+128)
  1734  07A1                     u7647:
  1735  07A1  0BCD               	decfsz	??_main^(0+128),f
  1736  07A2  2FA1               	goto	u7647
  1737  07A3  0BCE               	decfsz	(??_main^(0+128)+1),f
  1738  07A4  2FA1               	goto	u7647
  1739  07A5                     l4528:
  1740                           
  1741                           ;main.c: 117:         PORTCbits.RC2 = 1;
  1742  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1743  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1744  07A7  1507               	bsf	7,2	;volatile
  1745  07A8                     l4530:
  1746                           
  1747                           ;main.c: 118:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1748  07A8  3003               	movlw	3
  1749  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  1750  07AA  1303               	bcf	3,6	;RP1=0, select bank1
  1751  07AB  00CF               	movwf	(??_main^(0+128)+2)
  1752  07AC  3008               	movlw	8
  1753  07AD  00CE               	movwf	(??_main^(0+128)+1)
  1754  07AE  3076               	movlw	118
  1755  07AF  00CD               	movwf	??_main^(0+128)
  1756  07B0                     u7657:
  1757  07B0  0BCD               	decfsz	??_main^(0+128),f
  1758  07B1  2FB0               	goto	u7657
  1759  07B2  0BCE               	decfsz	(??_main^(0+128)+1),f
  1760  07B3  2FB0               	goto	u7657
  1761  07B4  0BCF               	decfsz	(??_main^(0+128)+2),f
  1762  07B5  2FB0               	goto	u7657
  1763  07B6  0000               	nop
  1764  07B7                     l4532:
  1765                           
  1766                           ;main.c: 119:         Lcd_Set_Cursor(2, 7);
  1767  07B7  3007               	movlw	7
  1768  07B8  1683               	bsf	3,5	;RP0=1, select bank1
  1769  07B9  1303               	bcf	3,6	;RP1=0, select bank1
  1770  07BA  00CD               	movwf	??_main^(0+128)
  1771  07BB  084D               	movf	??_main^(0+128),w
  1772  07BC  00F7               	movwf	Lcd_Set_Cursor@b
  1773  07BD  3002               	movlw	2
  1774  07BE  160A  158A  2238  120A  118A  	fcall	_Lcd_Set_Cursor
  1775  07C3                     l4534:
  1776                           
  1777                           ;main.c: 120:         sprintf(s, "%d", valorC);
  1778  07C3  30A9               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1779  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  1780  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  1781  07C6  00CD               	movwf	??_main^(0+128)
  1782  07C7  084D               	movf	??_main^(0+128),w
  1783  07C8  00A8               	movwf	sprintf@f^(0+128)
  1784  07C9  0864               	movf	_valorC^(0+128),w
  1785  07CA  00CE               	movwf	(??_main+1)^(0+128)
  1786  07CB  01CF               	clrf	((??_main+1)^(0+128)+1)
  1787  07CC  084E               	movf	(??_main+1)^(0+128),w
  1788  07CD  00A9               	movwf	(?_sprintf^(0+128)+1)
  1789  07CE  084F               	movf	(??_main+2)^(0+128),w
  1790  07CF  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1791  07D0  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1792  07D1  160A  118A  24F6  120A  118A  	fcall	_sprintf
  1793  07D6                     l4536:
  1794                           
  1795                           ;main.c: 121:         Lcd_Write_String(s);
  1796  07D6  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1797  07D7  00F6               	movwf	Lcd_Write_String@a
  1798  07D8  3001               	movlw	1
  1799  07D9  00F7               	movwf	Lcd_Write_String@a+1
  1800  07DA  160A  158A  22EE  120A  118A  	fcall	_Lcd_Write_String
  1801  07DF  2ED7               	goto	l4488
  1802  07E0  120A  118A  280C   	ljmp	start
  1803  07E3                     __end_of_main:
  1804                           
  1805                           	psect	text1
  1806  14F6                     __ptext1:	
  1807 ;; *************** function _sprintf *****************
  1808 ;; Defined at:
  1809 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  sp              1    wreg     PTR unsigned char 
  1812 ;;		 -> s(20), 
  1813 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1814 ;;		 -> STR_3(3), STR_2(7), 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1817 ;;		 -> s(20), 
  1818 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1819 ;;  val             4   31[BANK1 ] unsigned long 
  1820 ;;  tmpval          4   27[BANK1 ] struct .
  1821 ;;  prec            2   42[BANK1 ] int 
  1822 ;;  eexp            2   35[BANK1 ] int 
  1823 ;;  width           2   25[BANK1 ] int 
  1824 ;;  flag            2   23[BANK1 ] unsigned short 
  1825 ;;  cp              2    0        PTR const unsigned char 
  1826 ;;  len             2    0        unsigned int 
  1827 ;;  c               1   44[BANK1 ] unsigned char 
  1828 ;;  ap              1   22[BANK1 ] PTR void [1]
  1829 ;;		 -> ?_sprintf(2), 
  1830 ;;  d               1    0        unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  2    8[BANK1 ] int 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         0       0       5       0       0
  1841 ;;      Locals:         0       0      27       0       0
  1842 ;;      Temps:          0       0       5       0       0
  1843 ;;      Totals:         0       0      37       0       0
  1844 ;;Total ram usage:       37 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    4
  1847 ;; This function calls:
  1848 ;;		___awdiv
  1849 ;;		___fladd
  1850 ;;		___fleq
  1851 ;;		___flge
  1852 ;;		___flmul
  1853 ;;		___flneg
  1854 ;;		___flsub
  1855 ;;		___fltol
  1856 ;;		___lldiv
  1857 ;;		___llmod
  1858 ;;		___wmul
  1859 ;;		___xxtofl
  1860 ;;		__div_to_l_
  1861 ;;		__tdiv_to_l_
  1862 ;;		_fround
  1863 ;;		_isdigit
  1864 ;;		_scale
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function _sprintf
  1872  14F6                     _sprintf:
  1873                           
  1874                           ;incstack = 0
  1875                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1876                           ;sprintf@sp stored from wreg
  1877  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  1878  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  1879  14F8  00C9               	movwf	sprintf@sp^(0+128)
  1880  14F9                     l4184:
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1883  14F9  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1884  14FA  00AD               	movwf	??_sprintf^(0+128)
  1885  14FB  082D               	movf	??_sprintf^(0+128),w
  1886  14FC  00B6               	movwf	sprintf@ap^(0+128)
  1887  14FD                     L1:
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1890  14FD  120A  118A  2E9C   	goto	l4466
  1891  1500                     l4186:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1894  1500  3025               	movlw	37
  1895  1501  064C               	xorwf	sprintf@c^(0+128),w
  1896  1502  1903               	btfsc	3,2
  1897  1503  2D05               	goto	u7051
  1898  1504  2D06               	goto	u7050
  1899  1505                     u7051:
  1900  1505  2D12               	goto	l4192
  1901  1506                     u7050:
  1902  1506                     l4188:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1905  1506  084C               	movf	sprintf@c^(0+128),w
  1906  1507  00AD               	movwf	??_sprintf^(0+128)
  1907  1508  0849               	movf	sprintf@sp^(0+128),w
  1908  1509  0084               	movwf	4
  1909  150A  082D               	movf	??_sprintf^(0+128),w
  1910  150B  1783               	bsf	3,7	;select IRP bank2
  1911  150C  0080               	movwf	0
  1912  150D                     l4190:
  1913  150D  3001               	movlw	1
  1914  150E  00AD               	movwf	??_sprintf^(0+128)
  1915  150F  082D               	movf	??_sprintf^(0+128),w
  1916  1510  07C9               	addwf	sprintf@sp^(0+128),f
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1919  1511  2CFD               	goto	L1
  1920  1512                     l4192:
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1923  1512  01B9               	clrf	sprintf@width^(0+128)
  1924  1513  01BA               	clrf	(sprintf@width+1)^(0+128)
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1927  1514  01B7               	clrf	sprintf@flag^(0+128)
  1928  1515  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1929  1516                     l4194:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1932  1516  0828               	movf	sprintf@f^(0+128),w
  1933  1517  0084               	movwf	4
  1934  1518  160A  158A  200A  160A  118A  	fcall	stringdir
  1935  151D  160A  158A  21D8  160A  118A  	fcall	_isdigit
  1936  1522  1C03               	btfss	3,0
  1937  1523  2D25               	goto	u7061
  1938  1524  2D26               	goto	u7060
  1939  1525                     u7061:
  1940  1525  2D66               	goto	l4206
  1941  1526                     u7060:
  1942  1526                     l4196:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1945  1526  1683               	bsf	3,5	;RP0=1, select bank1
  1946  1527  1303               	bcf	3,6	;RP1=0, select bank1
  1947  1528  01B9               	clrf	sprintf@width^(0+128)
  1948  1529  01BA               	clrf	(sprintf@width+1)^(0+128)
  1949  152A                     l4198:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1952  152A  300A               	movlw	10
  1953  152B  00F3               	movwf	___wmul@multiplier
  1954  152C  3000               	movlw	0
  1955  152D  00F4               	movwf	___wmul@multiplier+1
  1956  152E  1683               	bsf	3,5	;RP0=1, select bank1
  1957  152F  1303               	bcf	3,6	;RP1=0, select bank1
  1958  1530  083A               	movf	(sprintf@width+1)^(0+128),w
  1959  1531  00F6               	movwf	___wmul@multiplicand+1
  1960  1532  0839               	movf	sprintf@width^(0+128),w
  1961  1533  00F5               	movwf	___wmul@multiplicand
  1962  1534  160A  158A  2287  160A  118A  	fcall	___wmul
  1963  1539  0874               	movf	?___wmul+1,w
  1964  153A  1683               	bsf	3,5	;RP0=1, select bank1
  1965  153B  1303               	bcf	3,6	;RP1=0, select bank1
  1966  153C  00BA               	movwf	(sprintf@width+1)^(0+128)
  1967  153D  0873               	movf	?___wmul,w
  1968  153E  00B9               	movwf	sprintf@width^(0+128)
  1969  153F                     l4200:
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1972  153F  0828               	movf	sprintf@f^(0+128),w
  1973  1540  0084               	movwf	4
  1974  1541  160A  158A  200A  160A  118A  	fcall	stringdir
  1975  1546  3ED0               	addlw	208
  1976  1547  00AD               	movwf	??_sprintf^(0+128)
  1977  1548  30FF               	movlw	255
  1978  1549  1803               	skipnc
  1979  154A  3000               	movlw	0
  1980  154B  00AE               	movwf	(??_sprintf^(0+128)+1)
  1981  154C  082D               	movf	??_sprintf^(0+128),w
  1982  154D  07B9               	addwf	sprintf@width^(0+128),f
  1983  154E  1803               	skipnc
  1984  154F  0ABA               	incf	(sprintf@width+1)^(0+128),f
  1985  1550  082E               	movf	(??_sprintf+1)^(0+128),w
  1986  1551  07BA               	addwf	(sprintf@width+1)^(0+128),f
  1987  1552                     l4202:
  1988  1552  3001               	movlw	1
  1989  1553  00AD               	movwf	??_sprintf^(0+128)
  1990  1554  082D               	movf	??_sprintf^(0+128),w
  1991  1555  07A8               	addwf	sprintf@f^(0+128),f
  1992  1556                     l4204:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1995  1556  0828               	movf	sprintf@f^(0+128),w
  1996  1557  0084               	movwf	4
  1997  1558  160A  158A  200A  160A  118A  	fcall	stringdir
  1998  155D  160A  158A  21D8  160A  118A  	fcall	_isdigit
  1999  1562  1803               	btfsc	3,0
  2000  1563  2D65               	goto	u7071
  2001  1564  2D66               	goto	u7070
  2002  1565                     u7071:
  2003  1565  2D2A               	goto	l4198
  2004  1566                     u7070:
  2005  1566                     l4206:
  2006                           
  2007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2008  1566  1683               	bsf	3,5	;RP0=1, select bank1
  2009  1567  1303               	bcf	3,6	;RP1=0, select bank1
  2010  1568  0828               	movf	sprintf@f^(0+128),w
  2011  1569  0084               	movwf	4
  2012  156A  160A  158A  200A  160A  118A  	fcall	stringdir
  2013  156F  3A2E               	xorlw	46
  2014  1570  1D03               	skipz
  2015  1571  2D73               	goto	u7081
  2016  1572  2D74               	goto	u7080
  2017  1573                     u7081:
  2018  1573  2DB9               	goto	l4222
  2019  1574                     u7080:
  2020  1574                     l4208:
  2021                           
  2022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2023  1574  1738               	bsf	(sprintf@flag^(0+128)+1),6
  2024  1575                     l4210:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2027  1575  3001               	movlw	1
  2028  1576  00AD               	movwf	??_sprintf^(0+128)
  2029  1577  082D               	movf	??_sprintf^(0+128),w
  2030  1578  07A8               	addwf	sprintf@f^(0+128),f
  2031  1579                     l4212:
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2034  1579  01CA               	clrf	sprintf@prec^(0+128)
  2035  157A  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2038  157B  2DA8               	goto	l4220
  2039  157C                     l4214:
  2040                           
  2041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2042  157C  300A               	movlw	10
  2043  157D  00F3               	movwf	___wmul@multiplier
  2044  157E  3000               	movlw	0
  2045  157F  00F4               	movwf	___wmul@multiplier+1
  2046  1580  1683               	bsf	3,5	;RP0=1, select bank1
  2047  1581  1303               	bcf	3,6	;RP1=0, select bank1
  2048  1582  084B               	movf	(sprintf@prec+1)^(0+128),w
  2049  1583  00F6               	movwf	___wmul@multiplicand+1
  2050  1584  084A               	movf	sprintf@prec^(0+128),w
  2051  1585  00F5               	movwf	___wmul@multiplicand
  2052  1586  160A  158A  2287  160A  118A  	fcall	___wmul
  2053  158B  0874               	movf	?___wmul+1,w
  2054  158C  1683               	bsf	3,5	;RP0=1, select bank1
  2055  158D  1303               	bcf	3,6	;RP1=0, select bank1
  2056  158E  00CB               	movwf	(sprintf@prec+1)^(0+128)
  2057  158F  0873               	movf	?___wmul,w
  2058  1590  00CA               	movwf	sprintf@prec^(0+128)
  2059  1591                     l4216:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2062  1591  0828               	movf	sprintf@f^(0+128),w
  2063  1592  0084               	movwf	4
  2064  1593  160A  158A  200A  160A  118A  	fcall	stringdir
  2065  1598  3ED0               	addlw	208
  2066  1599  00AD               	movwf	??_sprintf^(0+128)
  2067  159A  30FF               	movlw	255
  2068  159B  1803               	skipnc
  2069  159C  3000               	movlw	0
  2070  159D  00AE               	movwf	(??_sprintf^(0+128)+1)
  2071  159E  082D               	movf	??_sprintf^(0+128),w
  2072  159F  07CA               	addwf	sprintf@prec^(0+128),f
  2073  15A0  1803               	skipnc
  2074  15A1  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  2075  15A2  082E               	movf	(??_sprintf+1)^(0+128),w
  2076  15A3  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  2077  15A4                     l4218:
  2078  15A4  3001               	movlw	1
  2079  15A5  00AD               	movwf	??_sprintf^(0+128)
  2080  15A6  082D               	movf	??_sprintf^(0+128),w
  2081  15A7  07A8               	addwf	sprintf@f^(0+128),f
  2082  15A8                     l4220:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2085  15A8  0828               	movf	sprintf@f^(0+128),w
  2086  15A9  0084               	movwf	4
  2087  15AA  160A  158A  200A  160A  118A  	fcall	stringdir
  2088  15AF  160A  158A  21D8  160A  118A  	fcall	_isdigit
  2089  15B4  1803               	btfsc	3,0
  2090  15B5  2DB7               	goto	u7091
  2091  15B6  2DB8               	goto	u7090
  2092  15B7                     u7091:
  2093  15B7  2D7C               	goto	l4214
  2094  15B8                     u7090:
  2095  15B8  2DBF               	goto	l4228
  2096  15B9                     l4222:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2099  15B9  01CA               	clrf	sprintf@prec^(0+128)
  2100  15BA  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2101  15BB                     l4224:
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2104  15BB  1638               	bsf	(sprintf@flag^(0+128)+1),4
  2105  15BC  2DBF               	goto	l4228
  2106  15BD                     l343:	
  2107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2108                           
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2111  15BD  1538               	bsf	(sprintf@flag^(0+128)+1),2
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2114  15BE  2DE1               	goto	l4230
  2115  15BF                     l4228:
  2116  15BF  3001               	movlw	1
  2117  15C0  1683               	bsf	3,5	;RP0=1, select bank1
  2118  15C1  1303               	bcf	3,6	;RP1=0, select bank1
  2119  15C2  07A8               	addwf	sprintf@f^(0+128),f
  2120  15C3  30FF               	movlw	-1
  2121  15C4  0728               	addwf	sprintf@f^(0+128),w
  2122  15C5  0084               	movwf	4
  2123  15C6  160A  158A  200A  160A  118A  	fcall	stringdir
  2124  15CB  00CC               	movwf	sprintf@c^(0+128)
  2125  15CC  00AD               	movwf	??_sprintf^(0+128)
  2126  15CD  01AE               	clrf	(??_sprintf^(0+128)+1)
  2127                           
  2128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2129                           ; Switch size 1, requested type "simple"
  2130                           ; Number of cases is 1, Range of values is 0 to 0
  2131                           ; switch strategies available:
  2132                           ; Name         Instructions Cycles
  2133                           ; simple_byte            4     3 (average)
  2134                           ; direct_byte           11     8 (fixed)
  2135                           ; jumptable            260     6 (fixed)
  2136                           ;	Chosen strategy is simple_byte
  2137  15CE  082E               	movf	(??_sprintf+1)^(0+128),w
  2138  15CF  3A00               	xorlw	0	; case 0
  2139  15D0  1903               	skipnz
  2140  15D1  2DD3               	goto	l4572
  2141  15D2  2CFD               	goto	L1
  2142  15D3                     l4572:
  2143                           
  2144                           ; Switch size 1, requested type "simple"
  2145                           ; Number of cases is 4, Range of values is 0 to 105
  2146                           ; switch strategies available:
  2147                           ; Name         Instructions Cycles
  2148                           ; simple_byte           13     7 (average)
  2149                           ; jumptable            260     6 (fixed)
  2150                           ;	Chosen strategy is simple_byte
  2151  15D3  082D               	movf	??_sprintf^(0+128),w
  2152  15D4  3A00               	xorlw	0	; case 0
  2153  15D5  1903               	skipnz
  2154  15D6  2FFD               	goto	L3
  2155  15D7  3A64               	xorlw	100	; case 100
  2156  15D8  1903               	skipnz
  2157  15D9  2DE1               	goto	l4230
  2158  15DA  3A02               	xorlw	2	; case 102
  2159  15DB  1903               	skipnz
  2160  15DC  2DBD               	goto	l343
  2161  15DD  3A0F               	xorlw	15	; case 105
  2162  15DE  1903               	skipnz
  2163  15DF  2DE1               	goto	l4230
  2164  15E0  2CFD               	goto	L1
  2165  15E1                     l4230:
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2168  15E1  3000               	movlw	0
  2169  15E2  0537               	andwf	sprintf@flag^(0+128),w
  2170  15E3  00AD               	movwf	??_sprintf^(0+128)
  2171  15E4  3007               	movlw	7
  2172  15E5  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2173  15E6  00AE               	movwf	(??_sprintf+1)^(0+128)
  2174  15E7  082D               	movf	??_sprintf^(0+128),w
  2175  15E8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2176  15E9  1903               	btfsc	3,2
  2177  15EA  2DEC               	goto	u7101
  2178  15EB  2DEF               	goto	u7100
  2179  15EC                     u7101:
  2180  15EC  120A  118A  2CED   	goto	l4388
  2181  15EF                     u7100:
  2182  15EF                     l4232:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2185  15EF  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  2186  15F0  2DF2               	goto	u7111
  2187  15F1  2DF3               	goto	u7110
  2188  15F2                     u7111:
  2189  15F2  2DF7               	goto	l4236
  2190  15F3                     u7110:
  2191  15F3                     l4234:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2194  15F3  3006               	movlw	6
  2195  15F4  00CA               	movwf	sprintf@prec^(0+128)
  2196  15F5  3000               	movlw	0
  2197  15F6  00CB               	movwf	(sprintf@prec^(0+128)+1)
  2198  15F7                     l4236:
  2199                           
  2200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2201  15F7  0836               	movf	sprintf@ap^(0+128),w
  2202  15F8  0084               	movwf	4
  2203  15F9  1383               	bcf	3,7	;select IRP bank0
  2204  15FA  0800               	movf	0,w
  2205  15FB  00C5               	movwf	sprintf@fval^(0+128)
  2206  15FC  0A84               	incf	4,f
  2207  15FD  0800               	movf	0,w
  2208  15FE  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2209  15FF  0A84               	incf	4,f
  2210  1600  0800               	movf	0,w
  2211  1601  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2212  1602  0A84               	incf	4,f
  2213  1603  0800               	movf	0,w
  2214  1604  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2215  1605                     l4238:
  2216  1605  3004               	movlw	4
  2217  1606  00AD               	movwf	??_sprintf^(0+128)
  2218  1607  082D               	movf	??_sprintf^(0+128),w
  2219  1608  07B6               	addwf	sprintf@ap^(0+128),f
  2220  1609                     l4240:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2223  1609  0848               	movf	(sprintf@fval+3)^(0+128),w
  2224  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2225  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2226  160C  00A3               	movwf	___flge@ff1+3
  2227  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2228  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2229  160F  0847               	movf	(sprintf@fval+2)^(0+128),w
  2230  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2231  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2232  1612  00A2               	movwf	___flge@ff1+2
  2233  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2234  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2235  1615  0846               	movf	(sprintf@fval+1)^(0+128),w
  2236  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2237  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2238  1618  00A1               	movwf	___flge@ff1+1
  2239  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2240  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2241  161B  0845               	movf	sprintf@fval^(0+128),w
  2242  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2243  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2244  161E  00A0               	movwf	___flge@ff1
  2245  161F  3000               	movlw	0
  2246  1620  00A7               	movwf	___flge@ff2+3
  2247  1621  3000               	movlw	0
  2248  1622  00A6               	movwf	___flge@ff2+2
  2249  1623  3000               	movlw	0
  2250  1624  00A5               	movwf	___flge@ff2+1
  2251  1625  3000               	movlw	0
  2252  1626  00A4               	movwf	___flge@ff2
  2253  1627  160A  158A  25E3  160A  118A  	fcall	___flge
  2254  162C  1803               	btfsc	3,0
  2255  162D  2E2F               	goto	u7121
  2256  162E  2E30               	goto	u7120
  2257  162F                     u7121:
  2258  162F  2E4D               	goto	l4246
  2259  1630                     u7120:
  2260  1630                     l4242:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2263  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2264  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2265  1632  0848               	movf	(sprintf@fval+3)^(0+128),w
  2266  1633  00F6               	movwf	___flneg@f1+3
  2267  1634  0847               	movf	(sprintf@fval+2)^(0+128),w
  2268  1635  00F5               	movwf	___flneg@f1+2
  2269  1636  0846               	movf	(sprintf@fval+1)^(0+128),w
  2270  1637  00F4               	movwf	___flneg@f1+1
  2271  1638  0845               	movf	sprintf@fval^(0+128),w
  2272  1639  00F3               	movwf	___flneg@f1
  2273  163A  160A  158A  219D  160A  118A  	fcall	___flneg
  2274  163F  0876               	movf	?___flneg+3,w
  2275  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2276  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2277  1642  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2278  1643  0875               	movf	?___flneg+2,w
  2279  1644  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2280  1645  0874               	movf	?___flneg+1,w
  2281  1646  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2282  1647  0873               	movf	?___flneg,w
  2283  1648  00C5               	movwf	sprintf@fval^(0+128)
  2284  1649                     l4244:
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2287  1649  3003               	movlw	3
  2288  164A  04B7               	iorwf	sprintf@flag^(0+128),f
  2289  164B  3000               	movlw	0
  2290  164C  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  2291  164D                     l4246:
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2294  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2295  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2296  164F  01C3               	clrf	sprintf@eexp^(0+128)
  2297  1650  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2298  1651                     l4248:
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2301  1651  0848               	movf	(sprintf@fval+3)^(0+128),w
  2302  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2303  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2304  1654  00A3               	movwf	___fleq@ff1+3
  2305  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2306  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2307  1657  0847               	movf	(sprintf@fval+2)^(0+128),w
  2308  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2309  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2310  165A  00A2               	movwf	___fleq@ff1+2
  2311  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2312  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2313  165D  0846               	movf	(sprintf@fval+1)^(0+128),w
  2314  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2315  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2316  1660  00A1               	movwf	___fleq@ff1+1
  2317  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2318  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2319  1663  0845               	movf	sprintf@fval^(0+128),w
  2320  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2321  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2322  1666  00A0               	movwf	___fleq@ff1
  2323  1667  3000               	movlw	0
  2324  1668  00A7               	movwf	___fleq@ff2+3
  2325  1669  3000               	movlw	0
  2326  166A  00A6               	movwf	___fleq@ff2+2
  2327  166B  3000               	movlw	0
  2328  166C  00A5               	movwf	___fleq@ff2+1
  2329  166D  3000               	movlw	0
  2330  166E  00A4               	movwf	___fleq@ff2
  2331  166F  160A  158A  23C1  160A  118A  	fcall	___fleq
  2332  1674  1803               	btfsc	3,0
  2333  1675  2E77               	goto	u7131
  2334  1676  2E78               	goto	u7130
  2335  1677                     u7131:
  2336  1677  2F94               	goto	l4274
  2337  1678                     u7130:
  2338  1678                     l4250:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2341  1678  1003               	clrc
  2342  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2343  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2344  167B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2345  167C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2346  167D  3E82               	addlw	130
  2347  167E  00C3               	movwf	sprintf@eexp^(0+128)
  2348  167F  30FF               	movlw	255
  2349  1680  1803               	skipnc
  2350  1681  3000               	movlw	0
  2351  1682  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2352  1683                     l4252:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2355  1683  30FF               	movlw	255
  2356  1684  07C3               	addwf	sprintf@eexp^(0+128),f
  2357  1685  1803               	skipnc
  2358  1686  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2359  1687  30FF               	movlw	255
  2360  1688  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2361  1689                     l4254:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2364  1689  3003               	movlw	3
  2365  168A  00F3               	movwf	___wmul@multiplier
  2366  168B  3000               	movlw	0
  2367  168C  00F4               	movwf	___wmul@multiplier+1
  2368  168D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2369  168E  00F6               	movwf	___wmul@multiplicand+1
  2370  168F  0843               	movf	sprintf@eexp^(0+128),w
  2371  1690  00F5               	movwf	___wmul@multiplicand
  2372  1691  160A  158A  2287  160A  118A  	fcall	___wmul
  2373  1696  0874               	movf	?___wmul+1,w
  2374  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2375  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2376  1699  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2377  169A  0873               	movf	?___wmul,w
  2378  169B  00C3               	movwf	sprintf@eexp^(0+128)
  2379  169C                     l4256:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2382  169C  300A               	movlw	10
  2383  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2384  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2385  169F  00A2               	movwf	___awdiv@divisor
  2386  16A0  3000               	movlw	0
  2387  16A1  00A3               	movwf	___awdiv@divisor+1
  2388  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2389  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2390  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2391  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2392  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2393  16A7  00A5               	movwf	___awdiv@dividend+1
  2394  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2395  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2396  16AA  0843               	movf	sprintf@eexp^(0+128),w
  2397  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2398  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2399  16AD  00A4               	movwf	___awdiv@dividend
  2400  16AE  160A  158A  257A  160A  118A  	fcall	___awdiv
  2401  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2402  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2403  16B5  0823               	movf	?___awdiv+1,w
  2404  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2405  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2406  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2407  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2408  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2409  16BB  0822               	movf	?___awdiv,w
  2410  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2411  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2412  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  2413  16BF                     l4258:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2416  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2417  16C0  2EC2               	goto	u7141
  2418  16C1  2EC3               	goto	u7140
  2419  16C2                     u7141:
  2420  16C2  2EC9               	goto	l4262
  2421  16C3                     u7140:
  2422  16C3                     l4260:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2425  16C3  30FF               	movlw	255
  2426  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  2427  16C5  1803               	skipnc
  2428  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2429  16C7  30FF               	movlw	255
  2430  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2431  16C9                     l4262:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2434  16C9  0343               	decf	sprintf@eexp^(0+128),w
  2435  16CA  3AFF               	xorlw	255
  2436  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2437  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2438  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2439  16D2  0848               	movf	?_scale+3,w
  2440  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2441  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2442  16D5  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2443  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2444  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2445  16D8  0847               	movf	?_scale+2,w
  2446  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2447  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2448  16DB  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2449  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2450  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2451  16DE  0846               	movf	?_scale+1,w
  2452  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2453  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2454  16E1  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2455  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2456  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2457  16E4  0845               	movf	?_scale,w
  2458  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2459  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2460  16E7  00BB               	movwf	sprintf@tmpval^(0+128)
  2461  16E8                     l4264:
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2464  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2465  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2466  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2467  16EB  00AE               	movwf	___flmul@b+3
  2468  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2469  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2470  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  2471  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2472  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2473  16F1  00AD               	movwf	___flmul@b+2
  2474  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2475  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2476  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  2477  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2478  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2479  16F7  00AC               	movwf	___flmul@b+1
  2480  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2481  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2482  16FA  0845               	movf	sprintf@fval^(0+128),w
  2483  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2484  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2485  16FD  00AB               	movwf	___flmul@b
  2486  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2487  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2488  1700  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2489  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2490  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2491  1703  00B2               	movwf	___flmul@a+3
  2492  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2493  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2494  1706  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2495  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2496  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2497  1709  00B1               	movwf	___flmul@a+2
  2498  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2499  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2500  170C  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2501  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2502  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2503  170F  00B0               	movwf	___flmul@a+1
  2504  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2505  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2506  1712  083B               	movf	sprintf@tmpval^(0+128),w
  2507  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2508  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2509  1715  00AF               	movwf	___flmul@a
  2510  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2511  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2512  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2513  171D  082E               	movf	?___flmul+3,w
  2514  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2515  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2516  1720  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2517  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2518  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2519  1723  082D               	movf	?___flmul+2,w
  2520  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2521  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2522  1726  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2523  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2524  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2525  1729  082C               	movf	?___flmul+1,w
  2526  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2527  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2528  172C  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2529  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2530  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2531  172F  082B               	movf	?___flmul,w
  2532  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2533  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2534  1732  00BB               	movwf	sprintf@tmpval^(0+128)
  2535  1733                     l4266:
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2538  1733  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2539  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2540  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2541  1736  00A3               	movwf	___flge@ff1+3
  2542  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2543  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2544  1739  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2545  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2546  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2547  173C  00A2               	movwf	___flge@ff1+2
  2548  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2549  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2550  173F  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2551  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2552  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2553  1742  00A1               	movwf	___flge@ff1+1
  2554  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2555  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2556  1745  083B               	movf	sprintf@tmpval^(0+128),w
  2557  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2558  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2559  1748  00A0               	movwf	___flge@ff1
  2560  1749  303F               	movlw	63
  2561  174A  00A7               	movwf	___flge@ff2+3
  2562  174B  3080               	movlw	128
  2563  174C  00A6               	movwf	___flge@ff2+2
  2564  174D  3000               	movlw	0
  2565  174E  00A5               	movwf	___flge@ff2+1
  2566  174F  3000               	movlw	0
  2567  1750  00A4               	movwf	___flge@ff2
  2568  1751  160A  158A  25E3  160A  118A  	fcall	___flge
  2569  1756  1803               	btfsc	3,0
  2570  1757  2F59               	goto	u7151
  2571  1758  2F5A               	goto	u7150
  2572  1759                     u7151:
  2573  1759  2F63               	goto	l4270
  2574  175A                     u7150:
  2575  175A                     l4268:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2578  175A  30FF               	movlw	255
  2579  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2580  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2581  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2582  175E  1803               	skipnc
  2583  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2584  1760  30FF               	movlw	255
  2585  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2586  1762  2F94               	goto	l4274
  2587  1763                     l4270:
  2588  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2589  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2590  1765  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2591  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2592  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2593  1768  00A3               	movwf	___flge@ff1+3
  2594  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2595  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2596  176B  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2597  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2598  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2599  176E  00A2               	movwf	___flge@ff1+2
  2600  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2601  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2602  1771  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2603  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2604  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2605  1774  00A1               	movwf	___flge@ff1+1
  2606  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2607  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2608  1777  083B               	movf	sprintf@tmpval^(0+128),w
  2609  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2610  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2611  177A  00A0               	movwf	___flge@ff1
  2612  177B  3041               	movlw	65
  2613  177C  00A7               	movwf	___flge@ff2+3
  2614  177D  3020               	movlw	32
  2615  177E  00A6               	movwf	___flge@ff2+2
  2616  177F  3000               	movlw	0
  2617  1780  00A5               	movwf	___flge@ff2+1
  2618  1781  3000               	movlw	0
  2619  1782  00A4               	movwf	___flge@ff2
  2620  1783  160A  158A  25E3  160A  118A  	fcall	___flge
  2621  1788  1C03               	btfss	3,0
  2622  1789  2F8B               	goto	u7161
  2623  178A  2F8C               	goto	u7160
  2624  178B                     u7161:
  2625  178B  2F94               	goto	l4274
  2626  178C                     u7160:
  2627  178C                     l4272:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2630  178C  3001               	movlw	1
  2631  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2632  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2633  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2634  1790  1803               	skipnc
  2635  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2636  1792  3000               	movlw	0
  2637  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2638  1794                     l4274:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2641  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2642  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2643  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2644  1797  3A80               	xorlw	128
  2645  1798  00FF               	movwf	btemp+1
  2646  1799  3080               	movlw	128
  2647  179A  027F               	subwf	btemp+1,w
  2648  179B  1D03               	skipz
  2649  179C  2F9F               	goto	u7175
  2650  179D  300D               	movlw	13
  2651  179E  024A               	subwf	sprintf@prec^(0+128),w
  2652  179F                     u7175:
  2653  179F  1803               	skipnc
  2654  17A0  2FA2               	goto	u7171
  2655  17A1  2FA3               	goto	u7170
  2656  17A2                     u7171:
  2657  17A2  2FEA               	goto	l4278
  2658  17A3                     u7170:
  2659  17A3                     l4276:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2662  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2663  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2664  17A5  084A               	movf	sprintf@prec^(0+128),w
  2665  17A6  160A  118A  2061  160A  118A  	fcall	_fround
  2666  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2667  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2668  17AD  0848               	movf	?_fround+3,w
  2669  17AE  00DC               	movwf	___fladd@b+3
  2670  17AF  0847               	movf	?_fround+2,w
  2671  17B0  00DB               	movwf	___fladd@b+2
  2672  17B1  0846               	movf	?_fround+1,w
  2673  17B2  00DA               	movwf	___fladd@b+1
  2674  17B3  0845               	movf	?_fround,w
  2675  17B4  00D9               	movwf	___fladd@b
  2676  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2677  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2678  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2679  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2680  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2681  17BA  00E0               	movwf	___fladd@a+3
  2682  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2683  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2684  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2685  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2686  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2687  17C0  00DF               	movwf	___fladd@a+2
  2688  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2689  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2690  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2691  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2692  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2693  17C6  00DE               	movwf	___fladd@a+1
  2694  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2695  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2696  17C9  0845               	movf	sprintf@fval^(0+128),w
  2697  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2698  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2699  17CC  00DD               	movwf	___fladd@a
  2700  17CD  160A  118A  226E  160A  118A  	fcall	___fladd
  2701  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2702  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2703  17D4  085C               	movf	?___fladd+3,w
  2704  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2705  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2706  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2707  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2708  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2709  17DA  085B               	movf	?___fladd+2,w
  2710  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2711  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2712  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2713  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2714  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2715  17E0  085A               	movf	?___fladd+1,w
  2716  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2717  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2718  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2719  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2720  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2721  17E6  0859               	movf	?___fladd,w
  2722  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2723  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2724  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2725  17EA                     l4278:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2728  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2729  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2730  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2731  17ED  3A80               	xorlw	128
  2732  17EE  00FF               	movwf	btemp+1
  2733  17EF  3080               	movlw	128
  2734  17F0  027F               	subwf	btemp+1,w
  2735  17F1  1D03               	skipz
  2736  17F2  2FF5               	goto	u7185
  2737  17F3  300A               	movlw	10
  2738  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2739  17F5                     u7185:
  2740  17F5  1803               	skipnc
  2741  17F6  2FFA               	goto	u7181
  2742  17F7  120A  118A  2833   	goto	u7180
  2743  17FA                     u7181:
  2744  17FA  120A  118A  2892   	goto	l4286
  2745  17FD                     L3:
  2746  17FD                     L2:
  2747  17FD  120A  118A  2EB0   	ljmp	l4468
  2748                           
  2749                           	psect	text2
  2750  0C9D                     __ptext2:	
  2751 ;; *************** function _scale *****************
  2752 ;; Defined at:
  2753 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  scl             1    wreg     char 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  scl             1   55[BANK0 ] char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  4   37[BANK0 ] char 
  2760 ;; Registers used:
  2761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         0       4       0       0       0
  2768 ;;      Locals:         0       5       0       0       0
  2769 ;;      Temps:          0      10       0       0       0
  2770 ;;      Totals:         0      19       0       0       0
  2771 ;;Total ram usage:       19 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    3
  2774 ;; This function calls:
  2775 ;;		___awdiv
  2776 ;;		___awmod
  2777 ;;		___flmul
  2778 ;; This function is called by:
  2779 ;;		_sprintf
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _scale
  2785  0C9D                     _scale:
  2786                           
  2787                           ;incstack = 0
  2788                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2789                           ;scale@scl stored from wreg
  2790  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0C9F  00D7               	movwf	scale@scl
  2793  0CA0                     l3868:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2796  0CA0  1FD7               	btfss	scale@scl,7
  2797  0CA1  2CA3               	goto	u6161
  2798  0CA2  2CA4               	goto	u6160
  2799  0CA3                     u6161:
  2800  0CA3  2E53               	goto	l3890
  2801  0CA4                     u6160:
  2802  0CA4                     l3870:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2805  0CA4  09D7               	comf	scale@scl,f
  2806  0CA5  0AD7               	incf	scale@scl,f
  2807  0CA6                     l3872:
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2810  0CA6  0857               	movf	scale@scl,w
  2811  0CA7  3A80               	xorlw	128
  2812  0CA8  3E12               	addlw	-238
  2813  0CA9  1C03               	skipc
  2814  0CAA  2CAC               	goto	u6171
  2815  0CAB  2CAD               	goto	u6170
  2816  0CAC                     u6171:
  2817  0CAC  2D97               	goto	l3880
  2818  0CAD                     u6170:
  2819  0CAD                     l3874:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2822  0CAD  300A               	movlw	10
  2823  0CAE  00A2               	movwf	___awdiv@divisor
  2824  0CAF  3000               	movlw	0
  2825  0CB0  00A3               	movwf	___awdiv@divisor+1
  2826  0CB1  0857               	movf	scale@scl,w
  2827  0CB2  00F5               	movwf	___awmod@dividend
  2828  0CB3  01F6               	clrf	___awmod@dividend+1
  2829  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2830  0CB5  03F6               	decf	___awmod@dividend+1,f
  2831  0CB6  3064               	movlw	100
  2832  0CB7  00F3               	movwf	___awmod@divisor
  2833  0CB8  3000               	movlw	0
  2834  0CB9  00F4               	movwf	___awmod@divisor+1
  2835  0CBA  160A  158A  24B7  120A  158A  	fcall	___awmod
  2836  0CBF  0874               	movf	?___awmod+1,w
  2837  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0CC2  00A5               	movwf	___awdiv@dividend+1
  2840  0CC3  0873               	movf	?___awmod,w
  2841  0CC4  00A4               	movwf	___awdiv@dividend
  2842  0CC5  160A  158A  257A  120A  158A  	fcall	___awdiv
  2843  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2844  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2845  0CCC  0822               	movf	?___awdiv,w
  2846  0CCD  00C9               	movwf	??_scale
  2847  0CCE  3001               	movlw	1
  2848  0CCF                     u6185:
  2849  0CCF  1003               	clrc
  2850  0CD0  0DC9               	rlf	??_scale,f
  2851  0CD1  3EFF               	addlw	-1
  2852  0CD2  1D03               	skipz
  2853  0CD3  2CCF               	goto	u6185
  2854  0CD4  1003               	clrc
  2855  0CD5  0D49               	rlf	??_scale,w
  2856  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2857  0CD7  0084               	movwf	4
  2858  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  2859  0CDD  00CA               	movwf	??_scale+1
  2860  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  2861  0CE3  00CB               	movwf	??_scale+2
  2862  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  2863  0CE9  00CC               	movwf	??_scale+3
  2864  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  2865  0CEF  00CD               	movwf	??_scale+4
  2866  0CF0  084D               	movf	??_scale+4,w
  2867  0CF1  00AE               	movwf	___flmul@b+3
  2868  0CF2  084C               	movf	??_scale+3,w
  2869  0CF3  00AD               	movwf	___flmul@b+2
  2870  0CF4  084B               	movf	??_scale+2,w
  2871  0CF5  00AC               	movwf	___flmul@b+1
  2872  0CF6  084A               	movf	??_scale+1,w
  2873  0CF7  00AB               	movwf	___flmul@b
  2874  0CF8  3064               	movlw	100
  2875  0CF9  00A2               	movwf	___awdiv@divisor
  2876  0CFA  3000               	movlw	0
  2877  0CFB  00A3               	movwf	___awdiv@divisor+1
  2878  0CFC  0857               	movf	scale@scl,w
  2879  0CFD  00A4               	movwf	___awdiv@dividend
  2880  0CFE  01A5               	clrf	___awdiv@dividend+1
  2881  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  2882  0D00  03A5               	decf	___awdiv@dividend+1,f
  2883  0D01  160A  158A  257A  120A  158A  	fcall	___awdiv
  2884  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0D08  0822               	movf	?___awdiv,w
  2887  0D09  00CE               	movwf	??_scale+5
  2888  0D0A  3001               	movlw	1
  2889  0D0B                     u6195:
  2890  0D0B  1003               	clrc
  2891  0D0C  0DCE               	rlf	??_scale+5,f
  2892  0D0D  3EFF               	addlw	-1
  2893  0D0E  1D03               	skipz
  2894  0D0F  2D0B               	goto	u6195
  2895  0D10  1003               	clrc
  2896  0D11  0D4E               	rlf	??_scale+5,w
  2897  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2898  0D13  0084               	movwf	4
  2899  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  2900  0D19  00CF               	movwf	??_scale+6
  2901  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  2902  0D1F  00D0               	movwf	??_scale+7
  2903  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  2904  0D25  00D1               	movwf	??_scale+8
  2905  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  2906  0D2B  00D2               	movwf	??_scale+9
  2907  0D2C  0852               	movf	??_scale+9,w
  2908  0D2D  00B2               	movwf	___flmul@a+3
  2909  0D2E  0851               	movf	??_scale+8,w
  2910  0D2F  00B1               	movwf	___flmul@a+2
  2911  0D30  0850               	movf	??_scale+7,w
  2912  0D31  00B0               	movwf	___flmul@a+1
  2913  0D32  084F               	movf	??_scale+6,w
  2914  0D33  00AF               	movwf	___flmul@a
  2915  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2916  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0D3B  082E               	movf	?___flmul+3,w
  2919  0D3C  00D6               	movwf	_scale$1266+3
  2920  0D3D  082D               	movf	?___flmul+2,w
  2921  0D3E  00D5               	movwf	_scale$1266+2
  2922  0D3F  082C               	movf	?___flmul+1,w
  2923  0D40  00D4               	movwf	_scale$1266+1
  2924  0D41  082B               	movf	?___flmul,w
  2925  0D42  00D3               	movwf	_scale$1266
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2928  0D43  300A               	movlw	10
  2929  0D44  00F3               	movwf	___awmod@divisor
  2930  0D45  3000               	movlw	0
  2931  0D46  00F4               	movwf	___awmod@divisor+1
  2932  0D47  0857               	movf	scale@scl,w
  2933  0D48  00F5               	movwf	___awmod@dividend
  2934  0D49  01F6               	clrf	___awmod@dividend+1
  2935  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2936  0D4B  03F6               	decf	___awmod@dividend+1,f
  2937  0D4C  160A  158A  24B7  120A  158A  	fcall	___awmod
  2938  0D51  0873               	movf	?___awmod,w
  2939  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0D54  00C9               	movwf	??_scale
  2942  0D55  3001               	movlw	1
  2943  0D56                     u6205:
  2944  0D56  1003               	clrc
  2945  0D57  0DC9               	rlf	??_scale,f
  2946  0D58  3EFF               	addlw	-1
  2947  0D59  1D03               	skipz
  2948  0D5A  2D56               	goto	u6205
  2949  0D5B  1003               	clrc
  2950  0D5C  0D49               	rlf	??_scale,w
  2951  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2952  0D5E  0084               	movwf	4
  2953  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  2954  0D64  00CA               	movwf	??_scale+1
  2955  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  2956  0D6A  00CB               	movwf	??_scale+2
  2957  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  2958  0D70  00CC               	movwf	??_scale+3
  2959  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  2960  0D76  00CD               	movwf	??_scale+4
  2961  0D77  084D               	movf	??_scale+4,w
  2962  0D78  00AE               	movwf	___flmul@b+3
  2963  0D79  084C               	movf	??_scale+3,w
  2964  0D7A  00AD               	movwf	___flmul@b+2
  2965  0D7B  084B               	movf	??_scale+2,w
  2966  0D7C  00AC               	movwf	___flmul@b+1
  2967  0D7D  084A               	movf	??_scale+1,w
  2968  0D7E  00AB               	movwf	___flmul@b
  2969  0D7F  0856               	movf	_scale$1266+3,w
  2970  0D80  00B2               	movwf	___flmul@a+3
  2971  0D81  0855               	movf	_scale$1266+2,w
  2972  0D82  00B1               	movwf	___flmul@a+2
  2973  0D83  0854               	movf	_scale$1266+1,w
  2974  0D84  00B0               	movwf	___flmul@a+1
  2975  0D85  0853               	movf	_scale$1266,w
  2976  0D86  00AF               	movwf	___flmul@a
  2977  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2978  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2979  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2980  0D8E  082E               	movf	?___flmul+3,w
  2981  0D8F  00C8               	movwf	?_scale+3
  2982  0D90  082D               	movf	?___flmul+2,w
  2983  0D91  00C7               	movwf	?_scale+2
  2984  0D92  082C               	movf	?___flmul+1,w
  2985  0D93  00C6               	movwf	?_scale+1
  2986  0D94  082B               	movf	?___flmul,w
  2987  0D95  00C5               	movwf	?_scale
  2988  0D96  2FFF               	goto	l321
  2989  0D97                     l3880:
  2990  0D97  0857               	movf	scale@scl,w
  2991  0D98  3A80               	xorlw	128
  2992  0D99  3E75               	addlw	-139
  2993  0D9A  1C03               	skipc
  2994  0D9B  2D9D               	goto	u6211
  2995  0D9C  2D9E               	goto	u6210
  2996  0D9D                     u6211:
  2997  0D9D  2E26               	goto	l3886
  2998  0D9E                     u6210:
  2999  0D9E                     l3882:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3002  0D9E  300A               	movlw	10
  3003  0D9F  00F3               	movwf	___awmod@divisor
  3004  0DA0  3000               	movlw	0
  3005  0DA1  00F4               	movwf	___awmod@divisor+1
  3006  0DA2  0857               	movf	scale@scl,w
  3007  0DA3  00F5               	movwf	___awmod@dividend
  3008  0DA4  01F6               	clrf	___awmod@dividend+1
  3009  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3010  0DA6  03F6               	decf	___awmod@dividend+1,f
  3011  0DA7  160A  158A  24B7  120A  158A  	fcall	___awmod
  3012  0DAC  0873               	movf	?___awmod,w
  3013  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3015  0DAF  00C9               	movwf	??_scale
  3016  0DB0  3001               	movlw	1
  3017  0DB1                     u6225:
  3018  0DB1  1003               	clrc
  3019  0DB2  0DC9               	rlf	??_scale,f
  3020  0DB3  3EFF               	addlw	-1
  3021  0DB4  1D03               	skipz
  3022  0DB5  2DB1               	goto	u6225
  3023  0DB6  1003               	clrc
  3024  0DB7  0D49               	rlf	??_scale,w
  3025  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3026  0DB9  0084               	movwf	4
  3027  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  3028  0DBF  00CA               	movwf	??_scale+1
  3029  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  3030  0DC5  00CB               	movwf	??_scale+2
  3031  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  3032  0DCB  00CC               	movwf	??_scale+3
  3033  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  3034  0DD1  00CD               	movwf	??_scale+4
  3035  0DD2  084D               	movf	??_scale+4,w
  3036  0DD3  00AE               	movwf	___flmul@b+3
  3037  0DD4  084C               	movf	??_scale+3,w
  3038  0DD5  00AD               	movwf	___flmul@b+2
  3039  0DD6  084B               	movf	??_scale+2,w
  3040  0DD7  00AC               	movwf	___flmul@b+1
  3041  0DD8  084A               	movf	??_scale+1,w
  3042  0DD9  00AB               	movwf	___flmul@b
  3043  0DDA  300A               	movlw	10
  3044  0DDB  00A2               	movwf	___awdiv@divisor
  3045  0DDC  3000               	movlw	0
  3046  0DDD  00A3               	movwf	___awdiv@divisor+1
  3047  0DDE  0857               	movf	scale@scl,w
  3048  0DDF  00A4               	movwf	___awdiv@dividend
  3049  0DE0  01A5               	clrf	___awdiv@dividend+1
  3050  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  3051  0DE2  03A5               	decf	___awdiv@dividend+1,f
  3052  0DE3  160A  158A  257A  120A  158A  	fcall	___awdiv
  3053  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0DEA  0822               	movf	?___awdiv,w
  3056  0DEB  00CE               	movwf	??_scale+5
  3057  0DEC  3001               	movlw	1
  3058  0DED                     u6235:
  3059  0DED  1003               	clrc
  3060  0DEE  0DCE               	rlf	??_scale+5,f
  3061  0DEF  3EFF               	addlw	-1
  3062  0DF0  1D03               	skipz
  3063  0DF1  2DED               	goto	u6235
  3064  0DF2  1003               	clrc
  3065  0DF3  0D4E               	rlf	??_scale+5,w
  3066  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3067  0DF5  0084               	movwf	4
  3068  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  3069  0DFB  00CF               	movwf	??_scale+6
  3070  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  3071  0E01  00D0               	movwf	??_scale+7
  3072  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  3073  0E07  00D1               	movwf	??_scale+8
  3074  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  3075  0E0D  00D2               	movwf	??_scale+9
  3076  0E0E  0852               	movf	??_scale+9,w
  3077  0E0F  00B2               	movwf	___flmul@a+3
  3078  0E10  0851               	movf	??_scale+8,w
  3079  0E11  00B1               	movwf	___flmul@a+2
  3080  0E12  0850               	movf	??_scale+7,w
  3081  0E13  00B0               	movwf	___flmul@a+1
  3082  0E14  084F               	movf	??_scale+6,w
  3083  0E15  00AF               	movwf	___flmul@a
  3084  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3085  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0E1D  082E               	movf	?___flmul+3,w
  3088  0E1E  00C8               	movwf	?_scale+3
  3089  0E1F  082D               	movf	?___flmul+2,w
  3090  0E20  00C7               	movwf	?_scale+2
  3091  0E21  082C               	movf	?___flmul+1,w
  3092  0E22  00C6               	movwf	?_scale+1
  3093  0E23  082B               	movf	?___flmul,w
  3094  0E24  00C5               	movwf	?_scale
  3095  0E25  2FFF               	goto	l321
  3096  0E26                     l3886:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3099  0E26  0857               	movf	scale@scl,w
  3100  0E27  00C9               	movwf	??_scale
  3101  0E28  3001               	movlw	1
  3102  0E29                     u6245:
  3103  0E29  1003               	clrc
  3104  0E2A  0DC9               	rlf	??_scale,f
  3105  0E2B  3EFF               	addlw	-1
  3106  0E2C  1D03               	skipz
  3107  0E2D  2E29               	goto	u6245
  3108  0E2E  1003               	clrc
  3109  0E2F  0D49               	rlf	??_scale,w
  3110  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3111  0E31  0084               	movwf	4
  3112  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  3113  0E37  00CA               	movwf	??_scale+1
  3114  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  3115  0E3D  00CB               	movwf	??_scale+2
  3116  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  3117  0E43  00CC               	movwf	??_scale+3
  3118  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  3119  0E49  00CD               	movwf	??_scale+4
  3120  0E4A  084D               	movf	??_scale+4,w
  3121  0E4B  00C8               	movwf	?_scale+3
  3122  0E4C  084C               	movf	??_scale+3,w
  3123  0E4D  00C7               	movwf	?_scale+2
  3124  0E4E  084B               	movf	??_scale+2,w
  3125  0E4F  00C6               	movwf	?_scale+1
  3126  0E50  084A               	movf	??_scale+1,w
  3127  0E51  00C5               	movwf	?_scale
  3128  0E52  2FFF               	goto	l321
  3129  0E53                     l3890:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3132  0E53  0857               	movf	scale@scl,w
  3133  0E54  3A80               	xorlw	128
  3134  0E55  3E12               	addlw	-238
  3135  0E56  1C03               	skipc
  3136  0E57  2E59               	goto	u6251
  3137  0E58  2E5A               	goto	u6250
  3138  0E59                     u6251:
  3139  0E59  2F44               	goto	l3898
  3140  0E5A                     u6250:
  3141  0E5A                     l3892:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3144  0E5A  300A               	movlw	10
  3145  0E5B  00A2               	movwf	___awdiv@divisor
  3146  0E5C  3000               	movlw	0
  3147  0E5D  00A3               	movwf	___awdiv@divisor+1
  3148  0E5E  0857               	movf	scale@scl,w
  3149  0E5F  00F5               	movwf	___awmod@dividend
  3150  0E60  01F6               	clrf	___awmod@dividend+1
  3151  0E61  1BF5               	btfsc	___awmod@dividend,7
  3152  0E62  03F6               	decf	___awmod@dividend+1,f
  3153  0E63  3064               	movlw	100
  3154  0E64  00F3               	movwf	___awmod@divisor
  3155  0E65  3000               	movlw	0
  3156  0E66  00F4               	movwf	___awmod@divisor+1
  3157  0E67  160A  158A  24B7  120A  158A  	fcall	___awmod
  3158  0E6C  0874               	movf	?___awmod+1,w
  3159  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0E6F  00A5               	movwf	___awdiv@dividend+1
  3162  0E70  0873               	movf	?___awmod,w
  3163  0E71  00A4               	movwf	___awdiv@dividend
  3164  0E72  160A  158A  257A  120A  158A  	fcall	___awdiv
  3165  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0E79  0822               	movf	?___awdiv,w
  3168  0E7A  00C9               	movwf	??_scale
  3169  0E7B  3001               	movlw	1
  3170  0E7C                     u6265:
  3171  0E7C  1003               	clrc
  3172  0E7D  0DC9               	rlf	??_scale,f
  3173  0E7E  3EFF               	addlw	-1
  3174  0E7F  1D03               	skipz
  3175  0E80  2E7C               	goto	u6265
  3176  0E81  1003               	clrc
  3177  0E82  0D49               	rlf	??_scale,w
  3178  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3179  0E84  0084               	movwf	4
  3180  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  3181  0E8A  00CA               	movwf	??_scale+1
  3182  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  3183  0E90  00CB               	movwf	??_scale+2
  3184  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  3185  0E96  00CC               	movwf	??_scale+3
  3186  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  3187  0E9C  00CD               	movwf	??_scale+4
  3188  0E9D  084D               	movf	??_scale+4,w
  3189  0E9E  00AE               	movwf	___flmul@b+3
  3190  0E9F  084C               	movf	??_scale+3,w
  3191  0EA0  00AD               	movwf	___flmul@b+2
  3192  0EA1  084B               	movf	??_scale+2,w
  3193  0EA2  00AC               	movwf	___flmul@b+1
  3194  0EA3  084A               	movf	??_scale+1,w
  3195  0EA4  00AB               	movwf	___flmul@b
  3196  0EA5  3064               	movlw	100
  3197  0EA6  00A2               	movwf	___awdiv@divisor
  3198  0EA7  3000               	movlw	0
  3199  0EA8  00A3               	movwf	___awdiv@divisor+1
  3200  0EA9  0857               	movf	scale@scl,w
  3201  0EAA  00A4               	movwf	___awdiv@dividend
  3202  0EAB  01A5               	clrf	___awdiv@dividend+1
  3203  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  3204  0EAD  03A5               	decf	___awdiv@dividend+1,f
  3205  0EAE  160A  158A  257A  120A  158A  	fcall	___awdiv
  3206  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0EB5  0822               	movf	?___awdiv,w
  3209  0EB6  00CE               	movwf	??_scale+5
  3210  0EB7  3001               	movlw	1
  3211  0EB8                     u6275:
  3212  0EB8  1003               	clrc
  3213  0EB9  0DCE               	rlf	??_scale+5,f
  3214  0EBA  3EFF               	addlw	-1
  3215  0EBB  1D03               	skipz
  3216  0EBC  2EB8               	goto	u6275
  3217  0EBD  1003               	clrc
  3218  0EBE  0D4E               	rlf	??_scale+5,w
  3219  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3220  0EC0  0084               	movwf	4
  3221  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  3222  0EC6  00CF               	movwf	??_scale+6
  3223  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  3224  0ECC  00D0               	movwf	??_scale+7
  3225  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  3226  0ED2  00D1               	movwf	??_scale+8
  3227  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  3228  0ED8  00D2               	movwf	??_scale+9
  3229  0ED9  0852               	movf	??_scale+9,w
  3230  0EDA  00B2               	movwf	___flmul@a+3
  3231  0EDB  0851               	movf	??_scale+8,w
  3232  0EDC  00B1               	movwf	___flmul@a+2
  3233  0EDD  0850               	movf	??_scale+7,w
  3234  0EDE  00B0               	movwf	___flmul@a+1
  3235  0EDF  084F               	movf	??_scale+6,w
  3236  0EE0  00AF               	movwf	___flmul@a
  3237  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3238  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3240  0EE8  082E               	movf	?___flmul+3,w
  3241  0EE9  00D6               	movwf	_scale$1266+3
  3242  0EEA  082D               	movf	?___flmul+2,w
  3243  0EEB  00D5               	movwf	_scale$1266+2
  3244  0EEC  082C               	movf	?___flmul+1,w
  3245  0EED  00D4               	movwf	_scale$1266+1
  3246  0EEE  082B               	movf	?___flmul,w
  3247  0EEF  00D3               	movwf	_scale$1266
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3250  0EF0  300A               	movlw	10
  3251  0EF1  00F3               	movwf	___awmod@divisor
  3252  0EF2  3000               	movlw	0
  3253  0EF3  00F4               	movwf	___awmod@divisor+1
  3254  0EF4  0857               	movf	scale@scl,w
  3255  0EF5  00F5               	movwf	___awmod@dividend
  3256  0EF6  01F6               	clrf	___awmod@dividend+1
  3257  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3258  0EF8  03F6               	decf	___awmod@dividend+1,f
  3259  0EF9  160A  158A  24B7  120A  158A  	fcall	___awmod
  3260  0EFE  0873               	movf	?___awmod,w
  3261  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3263  0F01  00C9               	movwf	??_scale
  3264  0F02  3001               	movlw	1
  3265  0F03                     u6285:
  3266  0F03  1003               	clrc
  3267  0F04  0DC9               	rlf	??_scale,f
  3268  0F05  3EFF               	addlw	-1
  3269  0F06  1D03               	skipz
  3270  0F07  2F03               	goto	u6285
  3271  0F08  1003               	clrc
  3272  0F09  0D49               	rlf	??_scale,w
  3273  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3274  0F0B  0084               	movwf	4
  3275  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3276  0F11  00CA               	movwf	??_scale+1
  3277  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3278  0F17  00CB               	movwf	??_scale+2
  3279  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3280  0F1D  00CC               	movwf	??_scale+3
  3281  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3282  0F23  00CD               	movwf	??_scale+4
  3283  0F24  084D               	movf	??_scale+4,w
  3284  0F25  00AE               	movwf	___flmul@b+3
  3285  0F26  084C               	movf	??_scale+3,w
  3286  0F27  00AD               	movwf	___flmul@b+2
  3287  0F28  084B               	movf	??_scale+2,w
  3288  0F29  00AC               	movwf	___flmul@b+1
  3289  0F2A  084A               	movf	??_scale+1,w
  3290  0F2B  00AB               	movwf	___flmul@b
  3291  0F2C  0856               	movf	_scale$1266+3,w
  3292  0F2D  00B2               	movwf	___flmul@a+3
  3293  0F2E  0855               	movf	_scale$1266+2,w
  3294  0F2F  00B1               	movwf	___flmul@a+2
  3295  0F30  0854               	movf	_scale$1266+1,w
  3296  0F31  00B0               	movwf	___flmul@a+1
  3297  0F32  0853               	movf	_scale$1266,w
  3298  0F33  00AF               	movwf	___flmul@a
  3299  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3300  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3302  0F3B  082E               	movf	?___flmul+3,w
  3303  0F3C  00C8               	movwf	?_scale+3
  3304  0F3D  082D               	movf	?___flmul+2,w
  3305  0F3E  00C7               	movwf	?_scale+2
  3306  0F3F  082C               	movf	?___flmul+1,w
  3307  0F40  00C6               	movwf	?_scale+1
  3308  0F41  082B               	movf	?___flmul,w
  3309  0F42  00C5               	movwf	?_scale
  3310  0F43  2FFF               	goto	l321
  3311  0F44                     l3898:
  3312  0F44  0857               	movf	scale@scl,w
  3313  0F45  3A80               	xorlw	128
  3314  0F46  3E75               	addlw	-139
  3315  0F47  1C03               	skipc
  3316  0F48  2F4A               	goto	u6291
  3317  0F49  2F4B               	goto	u6290
  3318  0F4A                     u6291:
  3319  0F4A  2FD3               	goto	l3904
  3320  0F4B                     u6290:
  3321  0F4B                     l3900:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3324  0F4B  300A               	movlw	10
  3325  0F4C  00F3               	movwf	___awmod@divisor
  3326  0F4D  3000               	movlw	0
  3327  0F4E  00F4               	movwf	___awmod@divisor+1
  3328  0F4F  0857               	movf	scale@scl,w
  3329  0F50  00F5               	movwf	___awmod@dividend
  3330  0F51  01F6               	clrf	___awmod@dividend+1
  3331  0F52  1BF5               	btfsc	___awmod@dividend,7
  3332  0F53  03F6               	decf	___awmod@dividend+1,f
  3333  0F54  160A  158A  24B7  120A  158A  	fcall	___awmod
  3334  0F59  0873               	movf	?___awmod,w
  3335  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0F5C  00C9               	movwf	??_scale
  3338  0F5D  3001               	movlw	1
  3339  0F5E                     u6305:
  3340  0F5E  1003               	clrc
  3341  0F5F  0DC9               	rlf	??_scale,f
  3342  0F60  3EFF               	addlw	-1
  3343  0F61  1D03               	skipz
  3344  0F62  2F5E               	goto	u6305
  3345  0F63  1003               	clrc
  3346  0F64  0D49               	rlf	??_scale,w
  3347  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3348  0F66  0084               	movwf	4
  3349  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  3350  0F6C  00CA               	movwf	??_scale+1
  3351  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3352  0F72  00CB               	movwf	??_scale+2
  3353  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  3354  0F78  00CC               	movwf	??_scale+3
  3355  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  3356  0F7E  00CD               	movwf	??_scale+4
  3357  0F7F  084D               	movf	??_scale+4,w
  3358  0F80  00AE               	movwf	___flmul@b+3
  3359  0F81  084C               	movf	??_scale+3,w
  3360  0F82  00AD               	movwf	___flmul@b+2
  3361  0F83  084B               	movf	??_scale+2,w
  3362  0F84  00AC               	movwf	___flmul@b+1
  3363  0F85  084A               	movf	??_scale+1,w
  3364  0F86  00AB               	movwf	___flmul@b
  3365  0F87  300A               	movlw	10
  3366  0F88  00A2               	movwf	___awdiv@divisor
  3367  0F89  3000               	movlw	0
  3368  0F8A  00A3               	movwf	___awdiv@divisor+1
  3369  0F8B  0857               	movf	scale@scl,w
  3370  0F8C  00A4               	movwf	___awdiv@dividend
  3371  0F8D  01A5               	clrf	___awdiv@dividend+1
  3372  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  3373  0F8F  03A5               	decf	___awdiv@dividend+1,f
  3374  0F90  160A  158A  257A  120A  158A  	fcall	___awdiv
  3375  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3377  0F97  0822               	movf	?___awdiv,w
  3378  0F98  00CE               	movwf	??_scale+5
  3379  0F99  3001               	movlw	1
  3380  0F9A                     u6315:
  3381  0F9A  1003               	clrc
  3382  0F9B  0DCE               	rlf	??_scale+5,f
  3383  0F9C  3EFF               	addlw	-1
  3384  0F9D  1D03               	skipz
  3385  0F9E  2F9A               	goto	u6315
  3386  0F9F  1003               	clrc
  3387  0FA0  0D4E               	rlf	??_scale+5,w
  3388  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3389  0FA2  0084               	movwf	4
  3390  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3391  0FA8  00CF               	movwf	??_scale+6
  3392  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3393  0FAE  00D0               	movwf	??_scale+7
  3394  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  3395  0FB4  00D1               	movwf	??_scale+8
  3396  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  3397  0FBA  00D2               	movwf	??_scale+9
  3398  0FBB  0852               	movf	??_scale+9,w
  3399  0FBC  00B2               	movwf	___flmul@a+3
  3400  0FBD  0851               	movf	??_scale+8,w
  3401  0FBE  00B1               	movwf	___flmul@a+2
  3402  0FBF  0850               	movf	??_scale+7,w
  3403  0FC0  00B0               	movwf	___flmul@a+1
  3404  0FC1  084F               	movf	??_scale+6,w
  3405  0FC2  00AF               	movwf	___flmul@a
  3406  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3407  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3409  0FCA  082E               	movf	?___flmul+3,w
  3410  0FCB  00C8               	movwf	?_scale+3
  3411  0FCC  082D               	movf	?___flmul+2,w
  3412  0FCD  00C7               	movwf	?_scale+2
  3413  0FCE  082C               	movf	?___flmul+1,w
  3414  0FCF  00C6               	movwf	?_scale+1
  3415  0FD0  082B               	movf	?___flmul,w
  3416  0FD1  00C5               	movwf	?_scale
  3417  0FD2  2FFF               	goto	l321
  3418  0FD3                     l3904:
  3419                           
  3420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3421  0FD3  0857               	movf	scale@scl,w
  3422  0FD4  00C9               	movwf	??_scale
  3423  0FD5  3001               	movlw	1
  3424  0FD6                     u6325:
  3425  0FD6  1003               	clrc
  3426  0FD7  0DC9               	rlf	??_scale,f
  3427  0FD8  3EFF               	addlw	-1
  3428  0FD9  1D03               	skipz
  3429  0FDA  2FD6               	goto	u6325
  3430  0FDB  1003               	clrc
  3431  0FDC  0D49               	rlf	??_scale,w
  3432  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3433  0FDE  0084               	movwf	4
  3434  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  3435  0FE4  00CA               	movwf	??_scale+1
  3436  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  3437  0FEA  00CB               	movwf	??_scale+2
  3438  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  3439  0FF0  00CC               	movwf	??_scale+3
  3440  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  3441  0FF6  00CD               	movwf	??_scale+4
  3442  0FF7  084D               	movf	??_scale+4,w
  3443  0FF8  00C8               	movwf	?_scale+3
  3444  0FF9  084C               	movf	??_scale+3,w
  3445  0FFA  00C7               	movwf	?_scale+2
  3446  0FFB  084B               	movf	??_scale+2,w
  3447  0FFC  00C6               	movwf	?_scale+1
  3448  0FFD  084A               	movf	??_scale+1,w
  3449  0FFE  00C5               	movwf	?_scale
  3450  0FFF                     l321:
  3451  0FFF  0008               	return
  3452  1000                     __end_of_scale:
  3453                           
  3454                           	psect	text3
  3455  1CB7                     __ptext3:	
  3456 ;; *************** function ___awmod *****************
  3457 ;; Defined at:
  3458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  divisor         2    3[COMMON] int 
  3461 ;;  dividend        2    5[COMMON] int 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  sign            1    1[BANK0 ] unsigned char 
  3464 ;;  counter         1    0[BANK0 ] unsigned char 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  2    3[COMMON] int 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3474 ;;      Params:         4       0       0       0       0
  3475 ;;      Locals:         0       2       0       0       0
  3476 ;;      Temps:          1       0       0       0       0
  3477 ;;      Totals:         5       2       0       0       0
  3478 ;;Total ram usage:        7 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    1
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_scale
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function ___awmod
  3490  1CB7                     ___awmod:
  3491  1CB7                     l3742:	
  3492                           ;incstack = 0
  3493                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3494                           
  3495  1CB7  1283               	bcf	3,5	;RP0=0, select bank0
  3496  1CB8  1303               	bcf	3,6	;RP1=0, select bank0
  3497  1CB9  01A1               	clrf	___awmod@sign
  3498  1CBA                     l3744:
  3499  1CBA  1FF6               	btfss	___awmod@dividend+1,7
  3500  1CBB  2CBD               	goto	u5861
  3501  1CBC  2CBE               	goto	u5860
  3502  1CBD                     u5861:
  3503  1CBD  2CC5               	goto	l3750
  3504  1CBE                     u5860:
  3505  1CBE                     l3746:
  3506  1CBE  09F5               	comf	___awmod@dividend,f
  3507  1CBF  09F6               	comf	___awmod@dividend+1,f
  3508  1CC0  0AF5               	incf	___awmod@dividend,f
  3509  1CC1  1903               	skipnz
  3510  1CC2  0AF6               	incf	___awmod@dividend+1,f
  3511  1CC3                     l3748:
  3512  1CC3  01A1               	clrf	___awmod@sign
  3513  1CC4  0AA1               	incf	___awmod@sign,f
  3514  1CC5                     l3750:
  3515  1CC5  1FF4               	btfss	___awmod@divisor+1,7
  3516  1CC6  2CC8               	goto	u5871
  3517  1CC7  2CC9               	goto	u5870
  3518  1CC8                     u5871:
  3519  1CC8  2CCE               	goto	l3754
  3520  1CC9                     u5870:
  3521  1CC9                     l3752:
  3522  1CC9  09F3               	comf	___awmod@divisor,f
  3523  1CCA  09F4               	comf	___awmod@divisor+1,f
  3524  1CCB  0AF3               	incf	___awmod@divisor,f
  3525  1CCC  1903               	skipnz
  3526  1CCD  0AF4               	incf	___awmod@divisor+1,f
  3527  1CCE                     l3754:
  3528  1CCE  0873               	movf	___awmod@divisor,w
  3529  1CCF  0474               	iorwf	___awmod@divisor+1,w
  3530  1CD0  1903               	btfsc	3,2
  3531  1CD1  2CD3               	goto	u5881
  3532  1CD2  2CD4               	goto	u5880
  3533  1CD3                     u5881:
  3534  1CD3  2D03               	goto	l3772
  3535  1CD4                     u5880:
  3536  1CD4                     l3756:
  3537  1CD4  01A0               	clrf	___awmod@counter
  3538  1CD5  0AA0               	incf	___awmod@counter,f
  3539  1CD6  2CE2               	goto	l3762
  3540  1CD7                     l3758:
  3541  1CD7  3001               	movlw	1
  3542  1CD8                     u5895:
  3543  1CD8  1003               	clrc
  3544  1CD9  0DF3               	rlf	___awmod@divisor,f
  3545  1CDA  0DF4               	rlf	___awmod@divisor+1,f
  3546  1CDB  3EFF               	addlw	-1
  3547  1CDC  1D03               	skipz
  3548  1CDD  2CD8               	goto	u5895
  3549  1CDE                     l3760:
  3550  1CDE  3001               	movlw	1
  3551  1CDF  00F7               	movwf	??___awmod
  3552  1CE0  0877               	movf	??___awmod,w
  3553  1CE1  07A0               	addwf	___awmod@counter,f
  3554  1CE2                     l3762:
  3555  1CE2  1FF4               	btfss	___awmod@divisor+1,7
  3556  1CE3  2CE5               	goto	u5901
  3557  1CE4  2CE6               	goto	u5900
  3558  1CE5                     u5901:
  3559  1CE5  2CD7               	goto	l3758
  3560  1CE6                     u5900:
  3561  1CE6                     l3764:
  3562  1CE6  0874               	movf	___awmod@divisor+1,w
  3563  1CE7  0276               	subwf	___awmod@dividend+1,w
  3564  1CE8  1D03               	skipz
  3565  1CE9  2CEC               	goto	u5915
  3566  1CEA  0873               	movf	___awmod@divisor,w
  3567  1CEB  0275               	subwf	___awmod@dividend,w
  3568  1CEC                     u5915:
  3569  1CEC  1C03               	skipc
  3570  1CED  2CEF               	goto	u5911
  3571  1CEE  2CF0               	goto	u5910
  3572  1CEF                     u5911:
  3573  1CEF  2CF6               	goto	l3768
  3574  1CF0                     u5910:
  3575  1CF0                     l3766:
  3576  1CF0  0873               	movf	___awmod@divisor,w
  3577  1CF1  02F5               	subwf	___awmod@dividend,f
  3578  1CF2  0874               	movf	___awmod@divisor+1,w
  3579  1CF3  1C03               	skipc
  3580  1CF4  03F6               	decf	___awmod@dividend+1,f
  3581  1CF5  02F6               	subwf	___awmod@dividend+1,f
  3582  1CF6                     l3768:
  3583  1CF6  3001               	movlw	1
  3584  1CF7                     u5925:
  3585  1CF7  1003               	clrc
  3586  1CF8  0CF4               	rrf	___awmod@divisor+1,f
  3587  1CF9  0CF3               	rrf	___awmod@divisor,f
  3588  1CFA  3EFF               	addlw	-1
  3589  1CFB  1D03               	skipz
  3590  1CFC  2CF7               	goto	u5925
  3591  1CFD                     l3770:
  3592  1CFD  3001               	movlw	1
  3593  1CFE  02A0               	subwf	___awmod@counter,f
  3594  1CFF  1D03               	btfss	3,2
  3595  1D00  2D02               	goto	u5931
  3596  1D01  2D03               	goto	u5930
  3597  1D02                     u5931:
  3598  1D02  2CE6               	goto	l3764
  3599  1D03                     u5930:
  3600  1D03                     l3772:
  3601  1D03  0821               	movf	___awmod@sign,w
  3602  1D04  1903               	btfsc	3,2
  3603  1D05  2D07               	goto	u5941
  3604  1D06  2D08               	goto	u5940
  3605  1D07                     u5941:
  3606  1D07  2D0D               	goto	l3776
  3607  1D08                     u5940:
  3608  1D08                     l3774:
  3609  1D08  09F5               	comf	___awmod@dividend,f
  3610  1D09  09F6               	comf	___awmod@dividend+1,f
  3611  1D0A  0AF5               	incf	___awmod@dividend,f
  3612  1D0B  1903               	skipnz
  3613  1D0C  0AF6               	incf	___awmod@dividend+1,f
  3614  1D0D                     l3776:
  3615  1D0D  0876               	movf	___awmod@dividend+1,w
  3616  1D0E  00F4               	movwf	?___awmod+1
  3617  1D0F  0875               	movf	___awmod@dividend,w
  3618  1D10  00F3               	movwf	?___awmod
  3619  1D11                     l583:
  3620  1D11  0008               	return
  3621  1D12                     __end_of___awmod:
  3622                           
  3623                           	psect	text4
  3624  1D7A                     __ptext4:	
  3625 ;; *************** function ___awdiv *****************
  3626 ;; Defined at:
  3627 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  divisor         2    2[BANK0 ] int 
  3630 ;;  dividend        2    4[BANK0 ] int 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  quotient        2    9[BANK0 ] int 
  3633 ;;  sign            1    8[BANK0 ] unsigned char 
  3634 ;;  counter         1    7[BANK0 ] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  2    2[BANK0 ] int 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3644 ;;      Params:         0       4       0       0       0
  3645 ;;      Locals:         0       4       0       0       0
  3646 ;;      Temps:          0       1       0       0       0
  3647 ;;      Totals:         0       9       0       0       0
  3648 ;;Total ram usage:        9 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    1
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_scale
  3655 ;;		_sprintf
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function ___awdiv
  3661  1D7A                     ___awdiv:
  3662  1D7A                     l3698:	
  3663                           ;incstack = 0
  3664                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3665                           
  3666  1D7A  1283               	bcf	3,5	;RP0=0, select bank0
  3667  1D7B  1303               	bcf	3,6	;RP1=0, select bank0
  3668  1D7C  01A8               	clrf	___awdiv@sign
  3669  1D7D                     l3700:
  3670  1D7D  1FA3               	btfss	___awdiv@divisor+1,7
  3671  1D7E  2D80               	goto	u5761
  3672  1D7F  2D81               	goto	u5760
  3673  1D80                     u5761:
  3674  1D80  2D88               	goto	l3706
  3675  1D81                     u5760:
  3676  1D81                     l3702:
  3677  1D81  09A2               	comf	___awdiv@divisor,f
  3678  1D82  09A3               	comf	___awdiv@divisor+1,f
  3679  1D83  0AA2               	incf	___awdiv@divisor,f
  3680  1D84  1903               	skipnz
  3681  1D85  0AA3               	incf	___awdiv@divisor+1,f
  3682  1D86                     l3704:
  3683  1D86  01A8               	clrf	___awdiv@sign
  3684  1D87  0AA8               	incf	___awdiv@sign,f
  3685  1D88                     l3706:
  3686  1D88  1FA5               	btfss	___awdiv@dividend+1,7
  3687  1D89  2D8B               	goto	u5771
  3688  1D8A  2D8C               	goto	u5770
  3689  1D8B                     u5771:
  3690  1D8B  2D95               	goto	l3712
  3691  1D8C                     u5770:
  3692  1D8C                     l3708:
  3693  1D8C  09A4               	comf	___awdiv@dividend,f
  3694  1D8D  09A5               	comf	___awdiv@dividend+1,f
  3695  1D8E  0AA4               	incf	___awdiv@dividend,f
  3696  1D8F  1903               	skipnz
  3697  1D90  0AA5               	incf	___awdiv@dividend+1,f
  3698  1D91                     l3710:
  3699  1D91  3001               	movlw	1
  3700  1D92  00A6               	movwf	??___awdiv
  3701  1D93  0826               	movf	??___awdiv,w
  3702  1D94  06A8               	xorwf	___awdiv@sign,f
  3703  1D95                     l3712:
  3704  1D95  01A9               	clrf	___awdiv@quotient
  3705  1D96  01AA               	clrf	___awdiv@quotient+1
  3706  1D97                     l3714:
  3707  1D97  0822               	movf	___awdiv@divisor,w
  3708  1D98  0423               	iorwf	___awdiv@divisor+1,w
  3709  1D99  1903               	btfsc	3,2
  3710  1D9A  2D9C               	goto	u5781
  3711  1D9B  2D9D               	goto	u5780
  3712  1D9C                     u5781:
  3713  1D9C  2DD4               	goto	l3734
  3714  1D9D                     u5780:
  3715  1D9D                     l3716:
  3716  1D9D  01A7               	clrf	___awdiv@counter
  3717  1D9E  0AA7               	incf	___awdiv@counter,f
  3718  1D9F  2DAB               	goto	l3722
  3719  1DA0                     l3718:
  3720  1DA0  3001               	movlw	1
  3721  1DA1                     u5795:
  3722  1DA1  1003               	clrc
  3723  1DA2  0DA2               	rlf	___awdiv@divisor,f
  3724  1DA3  0DA3               	rlf	___awdiv@divisor+1,f
  3725  1DA4  3EFF               	addlw	-1
  3726  1DA5  1D03               	skipz
  3727  1DA6  2DA1               	goto	u5795
  3728  1DA7                     l3720:
  3729  1DA7  3001               	movlw	1
  3730  1DA8  00A6               	movwf	??___awdiv
  3731  1DA9  0826               	movf	??___awdiv,w
  3732  1DAA  07A7               	addwf	___awdiv@counter,f
  3733  1DAB                     l3722:
  3734  1DAB  1FA3               	btfss	___awdiv@divisor+1,7
  3735  1DAC  2DAE               	goto	u5801
  3736  1DAD  2DAF               	goto	u5800
  3737  1DAE                     u5801:
  3738  1DAE  2DA0               	goto	l3718
  3739  1DAF                     u5800:
  3740  1DAF                     l3724:
  3741  1DAF  3001               	movlw	1
  3742  1DB0                     u5815:
  3743  1DB0  1003               	clrc
  3744  1DB1  0DA9               	rlf	___awdiv@quotient,f
  3745  1DB2  0DAA               	rlf	___awdiv@quotient+1,f
  3746  1DB3  3EFF               	addlw	-1
  3747  1DB4  1D03               	skipz
  3748  1DB5  2DB0               	goto	u5815
  3749  1DB6  0823               	movf	___awdiv@divisor+1,w
  3750  1DB7  0225               	subwf	___awdiv@dividend+1,w
  3751  1DB8  1D03               	skipz
  3752  1DB9  2DBC               	goto	u5825
  3753  1DBA  0822               	movf	___awdiv@divisor,w
  3754  1DBB  0224               	subwf	___awdiv@dividend,w
  3755  1DBC                     u5825:
  3756  1DBC  1C03               	skipc
  3757  1DBD  2DBF               	goto	u5821
  3758  1DBE  2DC0               	goto	u5820
  3759  1DBF                     u5821:
  3760  1DBF  2DC7               	goto	l3730
  3761  1DC0                     u5820:
  3762  1DC0                     l3726:
  3763  1DC0  0822               	movf	___awdiv@divisor,w
  3764  1DC1  02A4               	subwf	___awdiv@dividend,f
  3765  1DC2  0823               	movf	___awdiv@divisor+1,w
  3766  1DC3  1C03               	skipc
  3767  1DC4  03A5               	decf	___awdiv@dividend+1,f
  3768  1DC5  02A5               	subwf	___awdiv@dividend+1,f
  3769  1DC6                     l3728:
  3770  1DC6  1429               	bsf	___awdiv@quotient,0
  3771  1DC7                     l3730:
  3772  1DC7  3001               	movlw	1
  3773  1DC8                     u5835:
  3774  1DC8  1003               	clrc
  3775  1DC9  0CA3               	rrf	___awdiv@divisor+1,f
  3776  1DCA  0CA2               	rrf	___awdiv@divisor,f
  3777  1DCB  3EFF               	addlw	-1
  3778  1DCC  1D03               	skipz
  3779  1DCD  2DC8               	goto	u5835
  3780  1DCE                     l3732:
  3781  1DCE  3001               	movlw	1
  3782  1DCF  02A7               	subwf	___awdiv@counter,f
  3783  1DD0  1D03               	btfss	3,2
  3784  1DD1  2DD3               	goto	u5841
  3785  1DD2  2DD4               	goto	u5840
  3786  1DD3                     u5841:
  3787  1DD3  2DAF               	goto	l3724
  3788  1DD4                     u5840:
  3789  1DD4                     l3734:
  3790  1DD4  0828               	movf	___awdiv@sign,w
  3791  1DD5  1903               	btfsc	3,2
  3792  1DD6  2DD8               	goto	u5851
  3793  1DD7  2DD9               	goto	u5850
  3794  1DD8                     u5851:
  3795  1DD8  2DDE               	goto	l3738
  3796  1DD9                     u5850:
  3797  1DD9                     l3736:
  3798  1DD9  09A9               	comf	___awdiv@quotient,f
  3799  1DDA  09AA               	comf	___awdiv@quotient+1,f
  3800  1DDB  0AA9               	incf	___awdiv@quotient,f
  3801  1DDC  1903               	skipnz
  3802  1DDD  0AAA               	incf	___awdiv@quotient+1,f
  3803  1DDE                     l3738:
  3804  1DDE  082A               	movf	___awdiv@quotient+1,w
  3805  1DDF  00A3               	movwf	?___awdiv+1
  3806  1DE0  0829               	movf	___awdiv@quotient,w
  3807  1DE1  00A2               	movwf	?___awdiv
  3808  1DE2                     l570:
  3809  1DE2  0008               	return
  3810  1DE3                     __end_of___awdiv:
  3811                           
  3812                           	psect	text5
  3813  19D8                     __ptext5:	
  3814 ;; *************** function _isdigit *****************
  3815 ;; Defined at:
  3816 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  c               1    wreg     unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  c               1    4[COMMON] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;		None               void
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3830 ;;      Params:         0       0       0       0       0
  3831 ;;      Locals:         2       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0
  3833 ;;      Totals:         2       0       0       0       0
  3834 ;;Total ram usage:        2 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_sprintf
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           
  3845                           ;psect for function _isdigit
  3846  19D8                     _isdigit:
  3847                           
  3848                           ;incstack = 0
  3849                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3850                           ;isdigit@c stored from wreg
  3851  19D8  00F4               	movwf	isdigit@c
  3852  19D9                     l2914:
  3853  19D9  01F3               	clrf	_isdigit$1075
  3854  19DA                     l2916:
  3855  19DA  303A               	movlw	58
  3856  19DB  0274               	subwf	isdigit@c,w
  3857  19DC  1803               	skipnc
  3858  19DD  29DF               	goto	u4351
  3859  19DE  29E0               	goto	u4350
  3860  19DF                     u4351:
  3861  19DF  29E8               	goto	l2922
  3862  19E0                     u4350:
  3863  19E0                     l2918:
  3864  19E0  3030               	movlw	48
  3865  19E1  0274               	subwf	isdigit@c,w
  3866  19E2  1C03               	skipc
  3867  19E3  29E5               	goto	u4361
  3868  19E4  29E6               	goto	u4360
  3869  19E5                     u4361:
  3870  19E5  29E8               	goto	l2922
  3871  19E6                     u4360:
  3872  19E6                     l2920:
  3873  19E6  01F3               	clrf	_isdigit$1075
  3874  19E7  0AF3               	incf	_isdigit$1075,f
  3875  19E8                     l2922:
  3876  19E8  0C73               	rrf	_isdigit$1075,w
  3877  19E9                     l904:
  3878  19E9  0008               	return
  3879  19EA                     __end_of_isdigit:
  3880                           
  3881                           	psect	text6
  3882  1061                     __ptext6:	
  3883 ;; *************** function _fround *****************
  3884 ;; Defined at:
  3885 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  prec            1    wreg     unsigned char 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  prec            1   56[BANK0 ] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  4   37[BANK0 ] unsigned char 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3899 ;;      Params:         0       4       0       0       0
  3900 ;;      Locals:         0       9       0       0       0
  3901 ;;      Temps:          0       7       0       0       0
  3902 ;;      Totals:         0      20       0       0       0
  3903 ;;Total ram usage:       20 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    3
  3906 ;; This function calls:
  3907 ;;		___flmul
  3908 ;;		___lwdiv
  3909 ;;		___lwmod
  3910 ;; This function is called by:
  3911 ;;		_sprintf
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           
  3916                           ;psect for function _fround
  3917  1061                     _fround:
  3918                           
  3919                           ;incstack = 0
  3920                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3921                           ;fround@prec stored from wreg
  3922  1061  1283               	bcf	3,5	;RP0=0, select bank0
  3923  1062  1303               	bcf	3,6	;RP1=0, select bank0
  3924  1063  00D8               	movwf	fround@prec
  3925  1064                     l3850:
  3926                           
  3927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3928  1064  306E               	movlw	110
  3929  1065  0258               	subwf	fround@prec,w
  3930  1066  1C03               	skipc
  3931  1067  2869               	goto	u6081
  3932  1068  286A               	goto	u6080
  3933  1069                     u6081:
  3934  1069  2979               	goto	l3858
  3935  106A                     u6080:
  3936  106A                     l3852:
  3937                           
  3938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3939  106A  303F               	movlw	63
  3940  106B  00AE               	movwf	___flmul@b+3
  3941  106C  3000               	movlw	0
  3942  106D  00AD               	movwf	___flmul@b+2
  3943  106E  3000               	movlw	0
  3944  106F  00AC               	movwf	___flmul@b+1
  3945  1070  3000               	movlw	0
  3946  1071  00AB               	movwf	___flmul@b
  3947  1072  3064               	movlw	100
  3948  1073  00A1               	movwf	___lwdiv@divisor
  3949  1074  3000               	movlw	0
  3950  1075  00A2               	movwf	___lwdiv@divisor+1
  3951  1076  0858               	movf	fround@prec,w
  3952  1077  00C9               	movwf	??_fround
  3953  1078  01CA               	clrf	??_fround+1
  3954  1079  0849               	movf	??_fround,w
  3955  107A  00A3               	movwf	___lwdiv@dividend
  3956  107B  084A               	movf	??_fround+1,w
  3957  107C  00A4               	movwf	___lwdiv@dividend+1
  3958  107D  160A  158A  2334  160A  118A  	fcall	___lwdiv
  3959  1082  1283               	bcf	3,5	;RP0=0, select bank0
  3960  1083  1303               	bcf	3,6	;RP1=0, select bank0
  3961  1084  0821               	movf	?___lwdiv,w
  3962  1085  00CB               	movwf	??_fround+2
  3963  1086  3001               	movlw	1
  3964  1087                     u6095:
  3965  1087  1003               	clrc
  3966  1088  0DCB               	rlf	??_fround+2,f
  3967  1089  3EFF               	addlw	-1
  3968  108A  1D03               	skipz
  3969  108B  2887               	goto	u6095
  3970  108C  1003               	clrc
  3971  108D  0D4B               	rlf	??_fround+2,w
  3972  108E  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3973  108F  0084               	movwf	4
  3974  1090  160A  158A  200A  160A  118A  	fcall	stringdir
  3975  1095  00CC               	movwf	??_fround+3
  3976  1096  160A  158A  200A  160A  118A  	fcall	stringdir
  3977  109B  00CD               	movwf	??_fround+4
  3978  109C  160A  158A  200A  160A  118A  	fcall	stringdir
  3979  10A1  00CE               	movwf	??_fround+5
  3980  10A2  160A  158A  200A  160A  118A  	fcall	stringdir
  3981  10A7  00CF               	movwf	??_fround+6
  3982  10A8  084F               	movf	??_fround+6,w
  3983  10A9  00B2               	movwf	___flmul@a+3
  3984  10AA  084E               	movf	??_fround+5,w
  3985  10AB  00B1               	movwf	___flmul@a+2
  3986  10AC  084D               	movf	??_fround+4,w
  3987  10AD  00B0               	movwf	___flmul@a+1
  3988  10AE  084C               	movf	??_fround+3,w
  3989  10AF  00AF               	movwf	___flmul@a
  3990  10B0  120A  158A  213C  160A  118A  	fcall	___flmul
  3991  10B5  1283               	bcf	3,5	;RP0=0, select bank0
  3992  10B6  1303               	bcf	3,6	;RP1=0, select bank0
  3993  10B7  082E               	movf	?___flmul+3,w
  3994  10B8  00D7               	movwf	_fround$1264+3
  3995  10B9  082D               	movf	?___flmul+2,w
  3996  10BA  00D6               	movwf	_fround$1264+2
  3997  10BB  082C               	movf	?___flmul+1,w
  3998  10BC  00D5               	movwf	_fround$1264+1
  3999  10BD  082B               	movf	?___flmul,w
  4000  10BE  00D4               	movwf	_fround$1264
  4001                           
  4002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4003  10BF  300A               	movlw	10
  4004  10C0  00A1               	movwf	___lwdiv@divisor
  4005  10C1  3000               	movlw	0
  4006  10C2  00A2               	movwf	___lwdiv@divisor+1
  4007  10C3  0858               	movf	fround@prec,w
  4008  10C4  00C9               	movwf	??_fround
  4009  10C5  01CA               	clrf	??_fround+1
  4010  10C6  0849               	movf	??_fround,w
  4011  10C7  00F5               	movwf	___lwmod@dividend
  4012  10C8  084A               	movf	??_fround+1,w
  4013  10C9  00F6               	movwf	___lwmod@dividend+1
  4014  10CA  3064               	movlw	100
  4015  10CB  00F3               	movwf	___lwmod@divisor
  4016  10CC  3000               	movlw	0
  4017  10CD  00F4               	movwf	___lwmod@divisor+1
  4018  10CE  160A  158A  22B2  160A  118A  	fcall	___lwmod
  4019  10D3  0874               	movf	?___lwmod+1,w
  4020  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  4021  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  4022  10D6  00A4               	movwf	___lwdiv@dividend+1
  4023  10D7  0873               	movf	?___lwmod,w
  4024  10D8  00A3               	movwf	___lwdiv@dividend
  4025  10D9  160A  158A  2334  160A  118A  	fcall	___lwdiv
  4026  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  4027  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  4028  10E0  0821               	movf	?___lwdiv,w
  4029  10E1  00CB               	movwf	??_fround+2
  4030  10E2  3001               	movlw	1
  4031  10E3                     u6105:
  4032  10E3  1003               	clrc
  4033  10E4  0DCB               	rlf	??_fround+2,f
  4034  10E5  3EFF               	addlw	-1
  4035  10E6  1D03               	skipz
  4036  10E7  28E3               	goto	u6105
  4037  10E8  1003               	clrc
  4038  10E9  0D4B               	rlf	??_fround+2,w
  4039  10EA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4040  10EB  0084               	movwf	4
  4041  10EC  160A  158A  200A  160A  118A  	fcall	stringdir
  4042  10F1  00CC               	movwf	??_fround+3
  4043  10F2  160A  158A  200A  160A  118A  	fcall	stringdir
  4044  10F7  00CD               	movwf	??_fround+4
  4045  10F8  160A  158A  200A  160A  118A  	fcall	stringdir
  4046  10FD  00CE               	movwf	??_fround+5
  4047  10FE  160A  158A  200A  160A  118A  	fcall	stringdir
  4048  1103  00CF               	movwf	??_fround+6
  4049  1104  084F               	movf	??_fround+6,w
  4050  1105  00AE               	movwf	___flmul@b+3
  4051  1106  084E               	movf	??_fround+5,w
  4052  1107  00AD               	movwf	___flmul@b+2
  4053  1108  084D               	movf	??_fround+4,w
  4054  1109  00AC               	movwf	___flmul@b+1
  4055  110A  084C               	movf	??_fround+3,w
  4056  110B  00AB               	movwf	___flmul@b
  4057  110C  0857               	movf	_fround$1264+3,w
  4058  110D  00B2               	movwf	___flmul@a+3
  4059  110E  0856               	movf	_fround$1264+2,w
  4060  110F  00B1               	movwf	___flmul@a+2
  4061  1110  0855               	movf	_fround$1264+1,w
  4062  1111  00B0               	movwf	___flmul@a+1
  4063  1112  0854               	movf	_fround$1264,w
  4064  1113  00AF               	movwf	___flmul@a
  4065  1114  120A  158A  213C  160A  118A  	fcall	___flmul
  4066  1119  1283               	bcf	3,5	;RP0=0, select bank0
  4067  111A  1303               	bcf	3,6	;RP1=0, select bank0
  4068  111B  082E               	movf	?___flmul+3,w
  4069  111C  00D3               	movwf	_fround$1265+3
  4070  111D  082D               	movf	?___flmul+2,w
  4071  111E  00D2               	movwf	_fround$1265+2
  4072  111F  082C               	movf	?___flmul+1,w
  4073  1120  00D1               	movwf	_fround$1265+1
  4074  1121  082B               	movf	?___flmul,w
  4075  1122  00D0               	movwf	_fround$1265
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4078  1123  300A               	movlw	10
  4079  1124  00F3               	movwf	___lwmod@divisor
  4080  1125  3000               	movlw	0
  4081  1126  00F4               	movwf	___lwmod@divisor+1
  4082  1127  0858               	movf	fround@prec,w
  4083  1128  00C9               	movwf	??_fround
  4084  1129  01CA               	clrf	??_fround+1
  4085  112A  0849               	movf	??_fround,w
  4086  112B  00F5               	movwf	___lwmod@dividend
  4087  112C  084A               	movf	??_fround+1,w
  4088  112D  00F6               	movwf	___lwmod@dividend+1
  4089  112E  160A  158A  22B2  160A  118A  	fcall	___lwmod
  4090  1133  0873               	movf	?___lwmod,w
  4091  1134  1283               	bcf	3,5	;RP0=0, select bank0
  4092  1135  1303               	bcf	3,6	;RP1=0, select bank0
  4093  1136  00CB               	movwf	??_fround+2
  4094  1137  3001               	movlw	1
  4095  1138                     u6115:
  4096  1138  1003               	clrc
  4097  1139  0DCB               	rlf	??_fround+2,f
  4098  113A  3EFF               	addlw	-1
  4099  113B  1D03               	skipz
  4100  113C  2938               	goto	u6115
  4101  113D  1003               	clrc
  4102  113E  0D4B               	rlf	??_fround+2,w
  4103  113F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4104  1140  0084               	movwf	4
  4105  1141  160A  158A  200A  160A  118A  	fcall	stringdir
  4106  1146  00CC               	movwf	??_fround+3
  4107  1147  160A  158A  200A  160A  118A  	fcall	stringdir
  4108  114C  00CD               	movwf	??_fround+4
  4109  114D  160A  158A  200A  160A  118A  	fcall	stringdir
  4110  1152  00CE               	movwf	??_fround+5
  4111  1153  160A  158A  200A  160A  118A  	fcall	stringdir
  4112  1158  00CF               	movwf	??_fround+6
  4113  1159  084F               	movf	??_fround+6,w
  4114  115A  00AE               	movwf	___flmul@b+3
  4115  115B  084E               	movf	??_fround+5,w
  4116  115C  00AD               	movwf	___flmul@b+2
  4117  115D  084D               	movf	??_fround+4,w
  4118  115E  00AC               	movwf	___flmul@b+1
  4119  115F  084C               	movf	??_fround+3,w
  4120  1160  00AB               	movwf	___flmul@b
  4121  1161  0853               	movf	_fround$1265+3,w
  4122  1162  00B2               	movwf	___flmul@a+3
  4123  1163  0852               	movf	_fround$1265+2,w
  4124  1164  00B1               	movwf	___flmul@a+2
  4125  1165  0851               	movf	_fround$1265+1,w
  4126  1166  00B0               	movwf	___flmul@a+1
  4127  1167  0850               	movf	_fround$1265,w
  4128  1168  00AF               	movwf	___flmul@a
  4129  1169  120A  158A  213C  160A  118A  	fcall	___flmul
  4130  116E  1283               	bcf	3,5	;RP0=0, select bank0
  4131  116F  1303               	bcf	3,6	;RP1=0, select bank0
  4132  1170  082E               	movf	?___flmul+3,w
  4133  1171  00C8               	movwf	?_fround+3
  4134  1172  082D               	movf	?___flmul+2,w
  4135  1173  00C7               	movwf	?_fround+2
  4136  1174  082C               	movf	?___flmul+1,w
  4137  1175  00C6               	movwf	?_fround+1
  4138  1176  082B               	movf	?___flmul,w
  4139  1177  00C5               	movwf	?_fround
  4140  1178  2A6D               	goto	l314
  4141  1179                     l3858:
  4142  1179  300B               	movlw	11
  4143  117A  0258               	subwf	fround@prec,w
  4144  117B  1C03               	skipc
  4145  117C  297E               	goto	u6121
  4146  117D  297F               	goto	u6120
  4147  117E                     u6121:
  4148  117E  2A2A               	goto	l3864
  4149  117F                     u6120:
  4150  117F                     l3860:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4153  117F  303F               	movlw	63
  4154  1180  00AE               	movwf	___flmul@b+3
  4155  1181  3000               	movlw	0
  4156  1182  00AD               	movwf	___flmul@b+2
  4157  1183  3000               	movlw	0
  4158  1184  00AC               	movwf	___flmul@b+1
  4159  1185  3000               	movlw	0
  4160  1186  00AB               	movwf	___flmul@b
  4161  1187  300A               	movlw	10
  4162  1188  00A1               	movwf	___lwdiv@divisor
  4163  1189  3000               	movlw	0
  4164  118A  00A2               	movwf	___lwdiv@divisor+1
  4165  118B  0858               	movf	fround@prec,w
  4166  118C  00C9               	movwf	??_fround
  4167  118D  01CA               	clrf	??_fround+1
  4168  118E  0849               	movf	??_fround,w
  4169  118F  00A3               	movwf	___lwdiv@dividend
  4170  1190  084A               	movf	??_fround+1,w
  4171  1191  00A4               	movwf	___lwdiv@dividend+1
  4172  1192  160A  158A  2334  160A  118A  	fcall	___lwdiv
  4173  1197  1283               	bcf	3,5	;RP0=0, select bank0
  4174  1198  1303               	bcf	3,6	;RP1=0, select bank0
  4175  1199  0821               	movf	?___lwdiv,w
  4176  119A  00CB               	movwf	??_fround+2
  4177  119B  3001               	movlw	1
  4178  119C                     u6135:
  4179  119C  1003               	clrc
  4180  119D  0DCB               	rlf	??_fround+2,f
  4181  119E  3EFF               	addlw	-1
  4182  119F  1D03               	skipz
  4183  11A0  299C               	goto	u6135
  4184  11A1  1003               	clrc
  4185  11A2  0D4B               	rlf	??_fround+2,w
  4186  11A3  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4187  11A4  0084               	movwf	4
  4188  11A5  160A  158A  200A  160A  118A  	fcall	stringdir
  4189  11AA  00CC               	movwf	??_fround+3
  4190  11AB  160A  158A  200A  160A  118A  	fcall	stringdir
  4191  11B0  00CD               	movwf	??_fround+4
  4192  11B1  160A  158A  200A  160A  118A  	fcall	stringdir
  4193  11B6  00CE               	movwf	??_fround+5
  4194  11B7  160A  158A  200A  160A  118A  	fcall	stringdir
  4195  11BC  00CF               	movwf	??_fround+6
  4196  11BD  084F               	movf	??_fround+6,w
  4197  11BE  00B2               	movwf	___flmul@a+3
  4198  11BF  084E               	movf	??_fround+5,w
  4199  11C0  00B1               	movwf	___flmul@a+2
  4200  11C1  084D               	movf	??_fround+4,w
  4201  11C2  00B0               	movwf	___flmul@a+1
  4202  11C3  084C               	movf	??_fround+3,w
  4203  11C4  00AF               	movwf	___flmul@a
  4204  11C5  120A  158A  213C  160A  118A  	fcall	___flmul
  4205  11CA  1283               	bcf	3,5	;RP0=0, select bank0
  4206  11CB  1303               	bcf	3,6	;RP1=0, select bank0
  4207  11CC  082E               	movf	?___flmul+3,w
  4208  11CD  00D7               	movwf	_fround$1264+3
  4209  11CE  082D               	movf	?___flmul+2,w
  4210  11CF  00D6               	movwf	_fround$1264+2
  4211  11D0  082C               	movf	?___flmul+1,w
  4212  11D1  00D5               	movwf	_fround$1264+1
  4213  11D2  082B               	movf	?___flmul,w
  4214  11D3  00D4               	movwf	_fround$1264
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4217  11D4  300A               	movlw	10
  4218  11D5  00F3               	movwf	___lwmod@divisor
  4219  11D6  3000               	movlw	0
  4220  11D7  00F4               	movwf	___lwmod@divisor+1
  4221  11D8  0858               	movf	fround@prec,w
  4222  11D9  00C9               	movwf	??_fround
  4223  11DA  01CA               	clrf	??_fround+1
  4224  11DB  0849               	movf	??_fround,w
  4225  11DC  00F5               	movwf	___lwmod@dividend
  4226  11DD  084A               	movf	??_fround+1,w
  4227  11DE  00F6               	movwf	___lwmod@dividend+1
  4228  11DF  160A  158A  22B2  160A  118A  	fcall	___lwmod
  4229  11E4  0873               	movf	?___lwmod,w
  4230  11E5  1283               	bcf	3,5	;RP0=0, select bank0
  4231  11E6  1303               	bcf	3,6	;RP1=0, select bank0
  4232  11E7  00CB               	movwf	??_fround+2
  4233  11E8  3001               	movlw	1
  4234  11E9                     u6145:
  4235  11E9  1003               	clrc
  4236  11EA  0DCB               	rlf	??_fround+2,f
  4237  11EB  3EFF               	addlw	-1
  4238  11EC  1D03               	skipz
  4239  11ED  29E9               	goto	u6145
  4240  11EE  1003               	clrc
  4241  11EF  0D4B               	rlf	??_fround+2,w
  4242  11F0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4243  11F1  0084               	movwf	4
  4244  11F2  160A  158A  200A  160A  118A  	fcall	stringdir
  4245  11F7  00CC               	movwf	??_fround+3
  4246  11F8  160A  158A  200A  160A  118A  	fcall	stringdir
  4247  11FD  00CD               	movwf	??_fround+4
  4248  11FE  160A  158A  200A  160A  118A  	fcall	stringdir
  4249  1203  00CE               	movwf	??_fround+5
  4250  1204  160A  158A  200A  160A  118A  	fcall	stringdir
  4251  1209  00CF               	movwf	??_fround+6
  4252  120A  084F               	movf	??_fround+6,w
  4253  120B  00AE               	movwf	___flmul@b+3
  4254  120C  084E               	movf	??_fround+5,w
  4255  120D  00AD               	movwf	___flmul@b+2
  4256  120E  084D               	movf	??_fround+4,w
  4257  120F  00AC               	movwf	___flmul@b+1
  4258  1210  084C               	movf	??_fround+3,w
  4259  1211  00AB               	movwf	___flmul@b
  4260  1212  0857               	movf	_fround$1264+3,w
  4261  1213  00B2               	movwf	___flmul@a+3
  4262  1214  0856               	movf	_fround$1264+2,w
  4263  1215  00B1               	movwf	___flmul@a+2
  4264  1216  0855               	movf	_fround$1264+1,w
  4265  1217  00B0               	movwf	___flmul@a+1
  4266  1218  0854               	movf	_fround$1264,w
  4267  1219  00AF               	movwf	___flmul@a
  4268  121A  120A  158A  213C  160A  118A  	fcall	___flmul
  4269  121F  1283               	bcf	3,5	;RP0=0, select bank0
  4270  1220  1303               	bcf	3,6	;RP1=0, select bank0
  4271  1221  082E               	movf	?___flmul+3,w
  4272  1222  00C8               	movwf	?_fround+3
  4273  1223  082D               	movf	?___flmul+2,w
  4274  1224  00C7               	movwf	?_fround+2
  4275  1225  082C               	movf	?___flmul+1,w
  4276  1226  00C6               	movwf	?_fround+1
  4277  1227  082B               	movf	?___flmul,w
  4278  1228  00C5               	movwf	?_fround
  4279  1229  2A6D               	goto	l314
  4280  122A                     l3864:
  4281                           
  4282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4283  122A  303F               	movlw	63
  4284  122B  00AE               	movwf	___flmul@b+3
  4285  122C  3000               	movlw	0
  4286  122D  00AD               	movwf	___flmul@b+2
  4287  122E  3000               	movlw	0
  4288  122F  00AC               	movwf	___flmul@b+1
  4289  1230  3000               	movlw	0
  4290  1231  00AB               	movwf	___flmul@b
  4291  1232  0858               	movf	fround@prec,w
  4292  1233  00C9               	movwf	??_fround
  4293  1234  3001               	movlw	1
  4294  1235                     u6155:
  4295  1235  1003               	clrc
  4296  1236  0DC9               	rlf	??_fround,f
  4297  1237  3EFF               	addlw	-1
  4298  1238  1D03               	skipz
  4299  1239  2A35               	goto	u6155
  4300  123A  1003               	clrc
  4301  123B  0D49               	rlf	??_fround,w
  4302  123C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4303  123D  0084               	movwf	4
  4304  123E  160A  158A  200A  160A  118A  	fcall	stringdir
  4305  1243  00CA               	movwf	??_fround+1
  4306  1244  160A  158A  200A  160A  118A  	fcall	stringdir
  4307  1249  00CB               	movwf	??_fround+2
  4308  124A  160A  158A  200A  160A  118A  	fcall	stringdir
  4309  124F  00CC               	movwf	??_fround+3
  4310  1250  160A  158A  200A  160A  118A  	fcall	stringdir
  4311  1255  00CD               	movwf	??_fround+4
  4312  1256  084D               	movf	??_fround+4,w
  4313  1257  00B2               	movwf	___flmul@a+3
  4314  1258  084C               	movf	??_fround+3,w
  4315  1259  00B1               	movwf	___flmul@a+2
  4316  125A  084B               	movf	??_fround+2,w
  4317  125B  00B0               	movwf	___flmul@a+1
  4318  125C  084A               	movf	??_fround+1,w
  4319  125D  00AF               	movwf	___flmul@a
  4320  125E  120A  158A  213C  160A  118A  	fcall	___flmul
  4321  1263  1283               	bcf	3,5	;RP0=0, select bank0
  4322  1264  1303               	bcf	3,6	;RP1=0, select bank0
  4323  1265  082E               	movf	?___flmul+3,w
  4324  1266  00C8               	movwf	?_fround+3
  4325  1267  082D               	movf	?___flmul+2,w
  4326  1268  00C7               	movwf	?_fround+2
  4327  1269  082C               	movf	?___flmul+1,w
  4328  126A  00C6               	movwf	?_fround+1
  4329  126B  082B               	movf	?___flmul,w
  4330  126C  00C5               	movwf	?_fround
  4331  126D                     l314:
  4332  126D  0008               	return
  4333  126E                     __end_of_fround:
  4334                           
  4335                           	psect	text7
  4336  1AB2                     __ptext7:	
  4337 ;; *************** function ___lwmod *****************
  4338 ;; Defined at:
  4339 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  divisor         2    3[COMMON] unsigned int 
  4342 ;;  dividend        2    5[COMMON] unsigned int 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  counter         1    0[BANK0 ] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  2    3[COMMON] unsigned int 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4354 ;;      Params:         4       0       0       0       0
  4355 ;;      Locals:         0       1       0       0       0
  4356 ;;      Temps:          1       0       0       0       0
  4357 ;;      Totals:         5       1       0       0       0
  4358 ;;Total ram usage:        6 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    1
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_fround
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function ___lwmod
  4370  1AB2                     ___lwmod:
  4371  1AB2                     l3806:	
  4372                           ;incstack = 0
  4373                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4374                           
  4375  1AB2  0873               	movf	___lwmod@divisor,w
  4376  1AB3  0474               	iorwf	___lwmod@divisor+1,w
  4377  1AB4  1903               	btfsc	3,2
  4378  1AB5  2AB7               	goto	u6021
  4379  1AB6  2AB8               	goto	u6020
  4380  1AB7                     u6021:
  4381  1AB7  2AE9               	goto	l3824
  4382  1AB8                     u6020:
  4383  1AB8                     l3808:
  4384  1AB8  1283               	bcf	3,5	;RP0=0, select bank0
  4385  1AB9  1303               	bcf	3,6	;RP1=0, select bank0
  4386  1ABA  01A0               	clrf	___lwmod@counter
  4387  1ABB  0AA0               	incf	___lwmod@counter,f
  4388  1ABC  2AC8               	goto	l3814
  4389  1ABD                     l3810:
  4390  1ABD  3001               	movlw	1
  4391  1ABE                     u6035:
  4392  1ABE  1003               	clrc
  4393  1ABF  0DF3               	rlf	___lwmod@divisor,f
  4394  1AC0  0DF4               	rlf	___lwmod@divisor+1,f
  4395  1AC1  3EFF               	addlw	-1
  4396  1AC2  1D03               	skipz
  4397  1AC3  2ABE               	goto	u6035
  4398  1AC4                     l3812:
  4399  1AC4  3001               	movlw	1
  4400  1AC5  00F7               	movwf	??___lwmod
  4401  1AC6  0877               	movf	??___lwmod,w
  4402  1AC7  07A0               	addwf	___lwmod@counter,f
  4403  1AC8                     l3814:
  4404  1AC8  1FF4               	btfss	___lwmod@divisor+1,7
  4405  1AC9  2ACB               	goto	u6041
  4406  1ACA  2ACC               	goto	u6040
  4407  1ACB                     u6041:
  4408  1ACB  2ABD               	goto	l3810
  4409  1ACC                     u6040:
  4410  1ACC                     l3816:
  4411  1ACC  0874               	movf	___lwmod@divisor+1,w
  4412  1ACD  0276               	subwf	___lwmod@dividend+1,w
  4413  1ACE  1D03               	skipz
  4414  1ACF  2AD2               	goto	u6055
  4415  1AD0  0873               	movf	___lwmod@divisor,w
  4416  1AD1  0275               	subwf	___lwmod@dividend,w
  4417  1AD2                     u6055:
  4418  1AD2  1C03               	skipc
  4419  1AD3  2AD5               	goto	u6051
  4420  1AD4  2AD6               	goto	u6050
  4421  1AD5                     u6051:
  4422  1AD5  2ADC               	goto	l3820
  4423  1AD6                     u6050:
  4424  1AD6                     l3818:
  4425  1AD6  0873               	movf	___lwmod@divisor,w
  4426  1AD7  02F5               	subwf	___lwmod@dividend,f
  4427  1AD8  0874               	movf	___lwmod@divisor+1,w
  4428  1AD9  1C03               	skipc
  4429  1ADA  03F6               	decf	___lwmod@dividend+1,f
  4430  1ADB  02F6               	subwf	___lwmod@dividend+1,f
  4431  1ADC                     l3820:
  4432  1ADC  3001               	movlw	1
  4433  1ADD                     u6065:
  4434  1ADD  1003               	clrc
  4435  1ADE  0CF4               	rrf	___lwmod@divisor+1,f
  4436  1ADF  0CF3               	rrf	___lwmod@divisor,f
  4437  1AE0  3EFF               	addlw	-1
  4438  1AE1  1D03               	skipz
  4439  1AE2  2ADD               	goto	u6065
  4440  1AE3                     l3822:
  4441  1AE3  3001               	movlw	1
  4442  1AE4  02A0               	subwf	___lwmod@counter,f
  4443  1AE5  1D03               	btfss	3,2
  4444  1AE6  2AE8               	goto	u6071
  4445  1AE7  2AE9               	goto	u6070
  4446  1AE8                     u6071:
  4447  1AE8  2ACC               	goto	l3816
  4448  1AE9                     u6070:
  4449  1AE9                     l3824:
  4450  1AE9  0876               	movf	___lwmod@dividend+1,w
  4451  1AEA  00F4               	movwf	?___lwmod+1
  4452  1AEB  0875               	movf	___lwmod@dividend,w
  4453  1AEC  00F3               	movwf	?___lwmod
  4454  1AED                     l733:
  4455  1AED  0008               	return
  4456  1AEE                     __end_of___lwmod:
  4457                           
  4458                           	psect	text8
  4459  1B34                     __ptext8:	
  4460 ;; *************** function ___lwdiv *****************
  4461 ;; Defined at:
  4462 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  divisor         2    1[BANK0 ] unsigned int 
  4465 ;;  dividend        2    3[BANK0 ] unsigned int 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  quotient        2    7[BANK0 ] unsigned int 
  4468 ;;  counter         1    6[BANK0 ] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  2    1[BANK0 ] unsigned int 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4478 ;;      Params:         0       4       0       0       0
  4479 ;;      Locals:         0       3       0       0       0
  4480 ;;      Temps:          0       1       0       0       0
  4481 ;;      Totals:         0       8       0       0       0
  4482 ;;Total ram usage:        8 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    1
  4485 ;; This function calls:
  4486 ;;		Nothing
  4487 ;; This function is called by:
  4488 ;;		_fround
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           
  4493                           ;psect for function ___lwdiv
  4494  1B34                     ___lwdiv:
  4495  1B34                     l3780:	
  4496                           ;incstack = 0
  4497                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4498                           
  4499  1B34  1283               	bcf	3,5	;RP0=0, select bank0
  4500  1B35  1303               	bcf	3,6	;RP1=0, select bank0
  4501  1B36  01A7               	clrf	___lwdiv@quotient
  4502  1B37  01A8               	clrf	___lwdiv@quotient+1
  4503  1B38                     l3782:
  4504  1B38  0821               	movf	___lwdiv@divisor,w
  4505  1B39  0422               	iorwf	___lwdiv@divisor+1,w
  4506  1B3A  1903               	btfsc	3,2
  4507  1B3B  2B3D               	goto	u5951
  4508  1B3C  2B3E               	goto	u5950
  4509  1B3D                     u5951:
  4510  1B3D  2B75               	goto	l3802
  4511  1B3E                     u5950:
  4512  1B3E                     l3784:
  4513  1B3E  01A6               	clrf	___lwdiv@counter
  4514  1B3F  0AA6               	incf	___lwdiv@counter,f
  4515  1B40  2B4C               	goto	l3790
  4516  1B41                     l3786:
  4517  1B41  3001               	movlw	1
  4518  1B42                     u5965:
  4519  1B42  1003               	clrc
  4520  1B43  0DA1               	rlf	___lwdiv@divisor,f
  4521  1B44  0DA2               	rlf	___lwdiv@divisor+1,f
  4522  1B45  3EFF               	addlw	-1
  4523  1B46  1D03               	skipz
  4524  1B47  2B42               	goto	u5965
  4525  1B48                     l3788:
  4526  1B48  3001               	movlw	1
  4527  1B49  00A5               	movwf	??___lwdiv
  4528  1B4A  0825               	movf	??___lwdiv,w
  4529  1B4B  07A6               	addwf	___lwdiv@counter,f
  4530  1B4C                     l3790:
  4531  1B4C  1FA2               	btfss	___lwdiv@divisor+1,7
  4532  1B4D  2B4F               	goto	u5971
  4533  1B4E  2B50               	goto	u5970
  4534  1B4F                     u5971:
  4535  1B4F  2B41               	goto	l3786
  4536  1B50                     u5970:
  4537  1B50                     l3792:
  4538  1B50  3001               	movlw	1
  4539  1B51                     u5985:
  4540  1B51  1003               	clrc
  4541  1B52  0DA7               	rlf	___lwdiv@quotient,f
  4542  1B53  0DA8               	rlf	___lwdiv@quotient+1,f
  4543  1B54  3EFF               	addlw	-1
  4544  1B55  1D03               	skipz
  4545  1B56  2B51               	goto	u5985
  4546  1B57  0822               	movf	___lwdiv@divisor+1,w
  4547  1B58  0224               	subwf	___lwdiv@dividend+1,w
  4548  1B59  1D03               	skipz
  4549  1B5A  2B5D               	goto	u5995
  4550  1B5B  0821               	movf	___lwdiv@divisor,w
  4551  1B5C  0223               	subwf	___lwdiv@dividend,w
  4552  1B5D                     u5995:
  4553  1B5D  1C03               	skipc
  4554  1B5E  2B60               	goto	u5991
  4555  1B5F  2B61               	goto	u5990
  4556  1B60                     u5991:
  4557  1B60  2B68               	goto	l3798
  4558  1B61                     u5990:
  4559  1B61                     l3794:
  4560  1B61  0821               	movf	___lwdiv@divisor,w
  4561  1B62  02A3               	subwf	___lwdiv@dividend,f
  4562  1B63  0822               	movf	___lwdiv@divisor+1,w
  4563  1B64  1C03               	skipc
  4564  1B65  03A4               	decf	___lwdiv@dividend+1,f
  4565  1B66  02A4               	subwf	___lwdiv@dividend+1,f
  4566  1B67                     l3796:
  4567  1B67  1427               	bsf	___lwdiv@quotient,0
  4568  1B68                     l3798:
  4569  1B68  3001               	movlw	1
  4570  1B69                     u6005:
  4571  1B69  1003               	clrc
  4572  1B6A  0CA2               	rrf	___lwdiv@divisor+1,f
  4573  1B6B  0CA1               	rrf	___lwdiv@divisor,f
  4574  1B6C  3EFF               	addlw	-1
  4575  1B6D  1D03               	skipz
  4576  1B6E  2B69               	goto	u6005
  4577  1B6F                     l3800:
  4578  1B6F  3001               	movlw	1
  4579  1B70  02A6               	subwf	___lwdiv@counter,f
  4580  1B71  1D03               	btfss	3,2
  4581  1B72  2B74               	goto	u6011
  4582  1B73  2B75               	goto	u6010
  4583  1B74                     u6011:
  4584  1B74  2B50               	goto	l3792
  4585  1B75                     u6010:
  4586  1B75                     l3802:
  4587  1B75  0828               	movf	___lwdiv@quotient+1,w
  4588  1B76  00A2               	movwf	?___lwdiv+1
  4589  1B77  0827               	movf	___lwdiv@quotient,w
  4590  1B78  00A1               	movwf	?___lwdiv
  4591  1B79                     l723:
  4592  1B79  0008               	return
  4593  1B7A                     __end_of___lwdiv:
  4594                           
  4595                           	psect	text9
  4596  1F43                     __ptext9:	
  4597 ;; *************** function __tdiv_to_l_ *****************
  4598 ;; Defined at:
  4599 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  f1              4    0[BANK0 ] float 
  4602 ;;  f2              4    4[BANK0 ] float 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  quot            4    8[BANK0 ] unsigned long 
  4605 ;;  exp1            1   13[BANK0 ] unsigned char 
  4606 ;;  cntr            1   12[BANK0 ] unsigned char 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  4    0[BANK0 ] unsigned long 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4616 ;;      Params:         0       8       0       0       0
  4617 ;;      Locals:         0       6       0       0       0
  4618 ;;      Temps:          4       0       0       0       0
  4619 ;;      Totals:         4      14       0       0       0
  4620 ;;Total ram usage:       18 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    1
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_sprintf
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           
  4631                           ;psect for function __tdiv_to_l_
  4632  1F43                     __tdiv_to_l_:
  4633  1F43                     l3908:	
  4634                           ;incstack = 0
  4635                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4636                           
  4637  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  4638  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  4639  1F45  0820               	movf	__tdiv_to_l_@f1,w
  4640  1F46  00F3               	movwf	??__tdiv_to_l_
  4641  1F47  0821               	movf	__tdiv_to_l_@f1+1,w
  4642  1F48  00F4               	movwf	??__tdiv_to_l_+1
  4643  1F49  0822               	movf	__tdiv_to_l_@f1+2,w
  4644  1F4A  00F5               	movwf	??__tdiv_to_l_+2
  4645  1F4B  1003               	clrc
  4646  1F4C  0D74               	rlf	??__tdiv_to_l_+1,w
  4647  1F4D  0D75               	rlf	??__tdiv_to_l_+2,w
  4648  1F4E  00F6               	movwf	??__tdiv_to_l_+3
  4649  1F4F  0876               	movf	??__tdiv_to_l_+3,w
  4650  1F50  00AD               	movwf	__tdiv_to_l_@exp1
  4651  1F51  082D               	movf	__tdiv_to_l_@exp1,w
  4652  1F52  1D03               	btfss	3,2
  4653  1F53  2F55               	goto	u6331
  4654  1F54  2F56               	goto	u6330
  4655  1F55                     u6331:
  4656  1F55  2F5F               	goto	l3914
  4657  1F56                     u6330:
  4658  1F56                     l3910:
  4659  1F56  3000               	movlw	0
  4660  1F57  00A3               	movwf	?__tdiv_to_l_+3
  4661  1F58  3000               	movlw	0
  4662  1F59  00A2               	movwf	?__tdiv_to_l_+2
  4663  1F5A  3000               	movlw	0
  4664  1F5B  00A1               	movwf	?__tdiv_to_l_+1
  4665  1F5C  3000               	movlw	0
  4666  1F5D  00A0               	movwf	?__tdiv_to_l_
  4667  1F5E  2FFF               	goto	l634
  4668  1F5F                     l3914:
  4669  1F5F  0824               	movf	__tdiv_to_l_@f2,w
  4670  1F60  00F3               	movwf	??__tdiv_to_l_
  4671  1F61  0825               	movf	__tdiv_to_l_@f2+1,w
  4672  1F62  00F4               	movwf	??__tdiv_to_l_+1
  4673  1F63  0826               	movf	__tdiv_to_l_@f2+2,w
  4674  1F64  00F5               	movwf	??__tdiv_to_l_+2
  4675  1F65  1003               	clrc
  4676  1F66  0D74               	rlf	??__tdiv_to_l_+1,w
  4677  1F67  0D75               	rlf	??__tdiv_to_l_+2,w
  4678  1F68  00F6               	movwf	??__tdiv_to_l_+3
  4679  1F69  0876               	movf	??__tdiv_to_l_+3,w
  4680  1F6A  00AC               	movwf	__tdiv_to_l_@cntr
  4681  1F6B  082C               	movf	__tdiv_to_l_@cntr,w
  4682  1F6C  1D03               	btfss	3,2
  4683  1F6D  2F6F               	goto	u6341
  4684  1F6E  2F70               	goto	u6340
  4685  1F6F                     u6341:
  4686  1F6F  2F71               	goto	l635
  4687  1F70                     u6340:
  4688  1F70  2F56               	goto	l3910
  4689  1F71                     l635:
  4690  1F71  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4691  1F72                     l3920:
  4692  1F72  30FF               	movlw	255
  4693  1F73  05A0               	andwf	__tdiv_to_l_@f1,f
  4694  1F74  30FF               	movlw	255
  4695  1F75  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4696  1F76  3000               	movlw	0
  4697  1F77  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4698  1F78                     l3922:
  4699  1F78  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4700  1F79  30FF               	movlw	255
  4701  1F7A  05A4               	andwf	__tdiv_to_l_@f2,f
  4702  1F7B  30FF               	movlw	255
  4703  1F7C  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4704  1F7D  3000               	movlw	0
  4705  1F7E  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4706  1F7F  3000               	movlw	0
  4707  1F80  00AB               	movwf	__tdiv_to_l_@quot+3
  4708  1F81  3000               	movlw	0
  4709  1F82  00AA               	movwf	__tdiv_to_l_@quot+2
  4710  1F83  3000               	movlw	0
  4711  1F84  00A9               	movwf	__tdiv_to_l_@quot+1
  4712  1F85  3000               	movlw	0
  4713  1F86  00A8               	movwf	__tdiv_to_l_@quot
  4714  1F87                     l3924:
  4715  1F87  307F               	movlw	127
  4716  1F88  02AD               	subwf	__tdiv_to_l_@exp1,f
  4717  1F89                     l3926:
  4718  1F89  3098               	movlw	152
  4719  1F8A  072C               	addwf	__tdiv_to_l_@cntr,w
  4720  1F8B  00F3               	movwf	??__tdiv_to_l_
  4721  1F8C  0873               	movf	??__tdiv_to_l_,w
  4722  1F8D  02AD               	subwf	__tdiv_to_l_@exp1,f
  4723  1F8E  3018               	movlw	24
  4724  1F8F  00F3               	movwf	??__tdiv_to_l_
  4725  1F90  0873               	movf	??__tdiv_to_l_,w
  4726  1F91  00AC               	movwf	__tdiv_to_l_@cntr
  4727  1F92                     l3928:
  4728  1F92  3001               	movlw	1
  4729  1F93  00F3               	movwf	??__tdiv_to_l_
  4730  1F94                     u6355:
  4731  1F94  1003               	clrc
  4732  1F95  0DA8               	rlf	__tdiv_to_l_@quot,f
  4733  1F96  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4734  1F97  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4735  1F98  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4736  1F99  0BF3               	decfsz	??__tdiv_to_l_,f
  4737  1F9A  2F94               	goto	u6355
  4738  1F9B                     l3930:
  4739  1F9B  0826               	movf	__tdiv_to_l_@f2+2,w
  4740  1F9C  0222               	subwf	__tdiv_to_l_@f1+2,w
  4741  1F9D  1D03               	skipz
  4742  1F9E  2FA5               	goto	u6365
  4743  1F9F  0825               	movf	__tdiv_to_l_@f2+1,w
  4744  1FA0  0221               	subwf	__tdiv_to_l_@f1+1,w
  4745  1FA1  1D03               	skipz
  4746  1FA2  2FA5               	goto	u6365
  4747  1FA3  0824               	movf	__tdiv_to_l_@f2,w
  4748  1FA4  0220               	subwf	__tdiv_to_l_@f1,w
  4749  1FA5                     u6365:
  4750  1FA5  1C03               	skipc
  4751  1FA6  2FA8               	goto	u6361
  4752  1FA7  2FA9               	goto	u6360
  4753  1FA8                     u6361:
  4754  1FA8  2FB4               	goto	l3936
  4755  1FA9                     u6360:
  4756  1FA9                     l3932:
  4757  1FA9  0824               	movf	__tdiv_to_l_@f2,w
  4758  1FAA  02A0               	subwf	__tdiv_to_l_@f1,f
  4759  1FAB  0825               	movf	__tdiv_to_l_@f2+1,w
  4760  1FAC  1C03               	skipc
  4761  1FAD  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4762  1FAE  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4763  1FAF  0826               	movf	__tdiv_to_l_@f2+2,w
  4764  1FB0  1C03               	skipc
  4765  1FB1  0A26               	incf	__tdiv_to_l_@f2+2,w
  4766  1FB2  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4767  1FB3                     l3934:
  4768  1FB3  1428               	bsf	__tdiv_to_l_@quot,0
  4769  1FB4                     l3936:
  4770  1FB4  3001               	movlw	1
  4771  1FB5                     u6375:
  4772  1FB5  1003               	clrc
  4773  1FB6  0DA0               	rlf	__tdiv_to_l_@f1,f
  4774  1FB7  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4775  1FB8  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4776  1FB9  3EFF               	addlw	-1
  4777  1FBA  1D03               	skipz
  4778  1FBB  2FB5               	goto	u6375
  4779  1FBC                     l3938:
  4780  1FBC  3001               	movlw	1
  4781  1FBD  02AC               	subwf	__tdiv_to_l_@cntr,f
  4782  1FBE  1D03               	btfss	3,2
  4783  1FBF  2FC1               	goto	u6381
  4784  1FC0  2FC2               	goto	u6380
  4785  1FC1                     u6381:
  4786  1FC1  2F92               	goto	l3928
  4787  1FC2                     u6380:
  4788  1FC2                     l638:
  4789  1FC2  1FAD               	btfss	__tdiv_to_l_@exp1,7
  4790  1FC3  2FC5               	goto	u6391
  4791  1FC4  2FC6               	goto	u6390
  4792  1FC5                     u6391:
  4793  1FC5  2FE0               	goto	l3948
  4794  1FC6                     u6390:
  4795  1FC6                     l3940:
  4796  1FC6  082D               	movf	__tdiv_to_l_@exp1,w
  4797  1FC7  3A80               	xorlw	128
  4798  1FC8  3E97               	addlw	151
  4799  1FC9  1803               	skipnc
  4800  1FCA  2FCC               	goto	u6401
  4801  1FCB  2FCD               	goto	u6400
  4802  1FCC                     u6401:
  4803  1FCC  2FCE               	goto	l3946
  4804  1FCD                     u6400:
  4805  1FCD  2F56               	goto	l3910
  4806  1FCE                     l3946:
  4807  1FCE  3001               	movlw	1
  4808  1FCF                     u6415:
  4809  1FCF  1003               	clrc
  4810  1FD0  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  4811  1FD1  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  4812  1FD2  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  4813  1FD3  0CA8               	rrf	__tdiv_to_l_@quot,f
  4814  1FD4  3EFF               	addlw	-1
  4815  1FD5  1D03               	skipz
  4816  1FD6  2FCF               	goto	u6415
  4817  1FD7  3001               	movlw	1
  4818  1FD8  00F3               	movwf	??__tdiv_to_l_
  4819  1FD9  0873               	movf	??__tdiv_to_l_,w
  4820  1FDA  07AD               	addwf	__tdiv_to_l_@exp1,f
  4821  1FDB  1D03               	btfss	3,2
  4822  1FDC  2FDE               	goto	u6421
  4823  1FDD  2FDF               	goto	u6420
  4824  1FDE                     u6421:
  4825  1FDE  2FCE               	goto	l3946
  4826  1FDF                     u6420:
  4827  1FDF  2FF7               	goto	l3956
  4828  1FE0                     l3948:
  4829  1FE0  3018               	movlw	24
  4830  1FE1  022D               	subwf	__tdiv_to_l_@exp1,w
  4831  1FE2  1C03               	skipc
  4832  1FE3  2FE5               	goto	u6431
  4833  1FE4  2FE6               	goto	u6430
  4834  1FE5                     u6431:
  4835  1FE5  2FF2               	goto	l645
  4836  1FE6                     u6430:
  4837  1FE6  2F56               	goto	l3910
  4838  1FE7                     l3954:
  4839  1FE7  3001               	movlw	1
  4840  1FE8  00F3               	movwf	??__tdiv_to_l_
  4841  1FE9                     u6445:
  4842  1FE9  1003               	clrc
  4843  1FEA  0DA8               	rlf	__tdiv_to_l_@quot,f
  4844  1FEB  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4845  1FEC  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4846  1FED  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4847  1FEE  0BF3               	decfsz	??__tdiv_to_l_,f
  4848  1FEF  2FE9               	goto	u6445
  4849  1FF0  3001               	movlw	1
  4850  1FF1  02AD               	subwf	__tdiv_to_l_@exp1,f
  4851  1FF2                     l645:
  4852  1FF2  082D               	movf	__tdiv_to_l_@exp1,w
  4853  1FF3  1D03               	btfss	3,2
  4854  1FF4  2FF6               	goto	u6451
  4855  1FF5  2FF7               	goto	u6450
  4856  1FF6                     u6451:
  4857  1FF6  2FE7               	goto	l3954
  4858  1FF7                     u6450:
  4859  1FF7                     l3956:
  4860  1FF7  082B               	movf	__tdiv_to_l_@quot+3,w
  4861  1FF8  00A3               	movwf	?__tdiv_to_l_+3
  4862  1FF9  082A               	movf	__tdiv_to_l_@quot+2,w
  4863  1FFA  00A2               	movwf	?__tdiv_to_l_+2
  4864  1FFB  0829               	movf	__tdiv_to_l_@quot+1,w
  4865  1FFC  00A1               	movwf	?__tdiv_to_l_+1
  4866  1FFD  0828               	movf	__tdiv_to_l_@quot,w
  4867  1FFE  00A0               	movwf	?__tdiv_to_l_
  4868  1FFF                     l634:
  4869  1FFF  0008               	return
  4870  2000                     __end_of__tdiv_to_l_:
  4871                           
  4872                           	psect	text10
  4873  087E                     __ptext10:	
  4874 ;; *************** function __div_to_l_ *****************
  4875 ;; Defined at:
  4876 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  f1              4    0[BANK0 ] unsigned long 
  4879 ;;  f2              4    4[BANK0 ] unsigned long 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  quot            4    8[BANK0 ] unsigned long 
  4882 ;;  exp1            1   13[BANK0 ] unsigned char 
  4883 ;;  cntr            1   12[BANK0 ] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  4    0[BANK0 ] unsigned long 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4893 ;;      Params:         0       8       0       0       0
  4894 ;;      Locals:         0       6       0       0       0
  4895 ;;      Temps:          1       0       0       0       0
  4896 ;;      Totals:         1      14       0       0       0
  4897 ;;Total ram usage:       15 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    1
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_sprintf
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           
  4908                           ;psect for function __div_to_l_
  4909  087E                     __div_to_l_:
  4910  087E                     l3960:	
  4911                           ;incstack = 0
  4912                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4913                           
  4914  087E  1003               	clrc
  4915  087F  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0880  1303               	bcf	3,6	;RP1=0, select bank0
  4917  0881  0D22               	rlf	__div_to_l_@f1+2,w
  4918  0882  0D23               	rlf	__div_to_l_@f1+3,w
  4919  0883  00F3               	movwf	??__div_to_l_
  4920  0884  0873               	movf	??__div_to_l_,w
  4921  0885  00AD               	movwf	__div_to_l_@exp1
  4922  0886  082D               	movf	__div_to_l_@exp1,w
  4923  0887  1D03               	btfss	3,2
  4924  0888  288A               	goto	u6461
  4925  0889  288B               	goto	u6460
  4926  088A                     u6461:
  4927  088A  2894               	goto	l3966
  4928  088B                     u6460:
  4929  088B                     l3962:
  4930  088B  3000               	movlw	0
  4931  088C  00A3               	movwf	?__div_to_l_+3
  4932  088D  3000               	movlw	0
  4933  088E  00A2               	movwf	?__div_to_l_+2
  4934  088F  3000               	movlw	0
  4935  0890  00A1               	movwf	?__div_to_l_+1
  4936  0891  3000               	movlw	0
  4937  0892  00A0               	movwf	?__div_to_l_
  4938  0893  293B               	goto	l587
  4939  0894                     l3966:
  4940  0894  1003               	clrc
  4941  0895  0D26               	rlf	__div_to_l_@f2+2,w
  4942  0896  0D27               	rlf	__div_to_l_@f2+3,w
  4943  0897  00F3               	movwf	??__div_to_l_
  4944  0898  0873               	movf	??__div_to_l_,w
  4945  0899  00AC               	movwf	__div_to_l_@cntr
  4946  089A  082C               	movf	__div_to_l_@cntr,w
  4947  089B  1D03               	btfss	3,2
  4948  089C  289E               	goto	u6471
  4949  089D  289F               	goto	u6470
  4950  089E                     u6471:
  4951  089E  28A0               	goto	l588
  4952  089F                     u6470:
  4953  089F  288B               	goto	l3962
  4954  08A0                     l588:
  4955  08A0  17A2               	bsf	__div_to_l_@f1+2,7
  4956  08A1                     l3972:
  4957  08A1  30FF               	movlw	255
  4958  08A2  05A0               	andwf	__div_to_l_@f1,f
  4959  08A3  30FF               	movlw	255
  4960  08A4  05A1               	andwf	__div_to_l_@f1+1,f
  4961  08A5  30FF               	movlw	255
  4962  08A6  05A2               	andwf	__div_to_l_@f1+2,f
  4963  08A7  3000               	movlw	0
  4964  08A8  05A3               	andwf	__div_to_l_@f1+3,f
  4965  08A9                     l3974:
  4966  08A9  17A6               	bsf	__div_to_l_@f2+2,7
  4967  08AA  30FF               	movlw	255
  4968  08AB  05A4               	andwf	__div_to_l_@f2,f
  4969  08AC  30FF               	movlw	255
  4970  08AD  05A5               	andwf	__div_to_l_@f2+1,f
  4971  08AE  30FF               	movlw	255
  4972  08AF  05A6               	andwf	__div_to_l_@f2+2,f
  4973  08B0  3000               	movlw	0
  4974  08B1  05A7               	andwf	__div_to_l_@f2+3,f
  4975  08B2  3000               	movlw	0
  4976  08B3  00AB               	movwf	__div_to_l_@quot+3
  4977  08B4  3000               	movlw	0
  4978  08B5  00AA               	movwf	__div_to_l_@quot+2
  4979  08B6  3000               	movlw	0
  4980  08B7  00A9               	movwf	__div_to_l_@quot+1
  4981  08B8  3000               	movlw	0
  4982  08B9  00A8               	movwf	__div_to_l_@quot
  4983  08BA                     l3976:
  4984  08BA  307F               	movlw	127
  4985  08BB  02AD               	subwf	__div_to_l_@exp1,f
  4986  08BC                     l3978:
  4987  08BC  30A0               	movlw	160
  4988  08BD  072C               	addwf	__div_to_l_@cntr,w
  4989  08BE  00F3               	movwf	??__div_to_l_
  4990  08BF  0873               	movf	??__div_to_l_,w
  4991  08C0  02AD               	subwf	__div_to_l_@exp1,f
  4992  08C1  3020               	movlw	32
  4993  08C2  00F3               	movwf	??__div_to_l_
  4994  08C3  0873               	movf	??__div_to_l_,w
  4995  08C4  00AC               	movwf	__div_to_l_@cntr
  4996  08C5                     l3980:
  4997  08C5  3001               	movlw	1
  4998  08C6  00F3               	movwf	??__div_to_l_
  4999  08C7                     u6485:
  5000  08C7  1003               	clrc
  5001  08C8  0DA8               	rlf	__div_to_l_@quot,f
  5002  08C9  0DA9               	rlf	__div_to_l_@quot+1,f
  5003  08CA  0DAA               	rlf	__div_to_l_@quot+2,f
  5004  08CB  0DAB               	rlf	__div_to_l_@quot+3,f
  5005  08CC  0BF3               	decfsz	??__div_to_l_,f
  5006  08CD  28C7               	goto	u6485
  5007  08CE                     l3982:
  5008  08CE  0827               	movf	__div_to_l_@f2+3,w
  5009  08CF  0223               	subwf	__div_to_l_@f1+3,w
  5010  08D0  1D03               	skipz
  5011  08D1  28DC               	goto	u6495
  5012  08D2  0826               	movf	__div_to_l_@f2+2,w
  5013  08D3  0222               	subwf	__div_to_l_@f1+2,w
  5014  08D4  1D03               	skipz
  5015  08D5  28DC               	goto	u6495
  5016  08D6  0825               	movf	__div_to_l_@f2+1,w
  5017  08D7  0221               	subwf	__div_to_l_@f1+1,w
  5018  08D8  1D03               	skipz
  5019  08D9  28DC               	goto	u6495
  5020  08DA  0824               	movf	__div_to_l_@f2,w
  5021  08DB  0220               	subwf	__div_to_l_@f1,w
  5022  08DC                     u6495:
  5023  08DC  1C03               	skipc
  5024  08DD  28DF               	goto	u6491
  5025  08DE  28E0               	goto	u6490
  5026  08DF                     u6491:
  5027  08DF  28EF               	goto	l3988
  5028  08E0                     u6490:
  5029  08E0                     l3984:
  5030  08E0  0824               	movf	__div_to_l_@f2,w
  5031  08E1  02A0               	subwf	__div_to_l_@f1,f
  5032  08E2  0825               	movf	__div_to_l_@f2+1,w
  5033  08E3  1C03               	skipc
  5034  08E4  0F25               	incfsz	__div_to_l_@f2+1,w
  5035  08E5  02A1               	subwf	__div_to_l_@f1+1,f
  5036  08E6  0826               	movf	__div_to_l_@f2+2,w
  5037  08E7  1C03               	skipc
  5038  08E8  0F26               	incfsz	__div_to_l_@f2+2,w
  5039  08E9  02A2               	subwf	__div_to_l_@f1+2,f
  5040  08EA  0827               	movf	__div_to_l_@f2+3,w
  5041  08EB  1C03               	skipc
  5042  08EC  0F27               	incfsz	__div_to_l_@f2+3,w
  5043  08ED  02A3               	subwf	__div_to_l_@f1+3,f
  5044  08EE                     l3986:
  5045  08EE  1428               	bsf	__div_to_l_@quot,0
  5046  08EF                     l3988:
  5047  08EF  3001               	movlw	1
  5048  08F0  00F3               	movwf	??__div_to_l_
  5049  08F1                     u6505:
  5050  08F1  1003               	clrc
  5051  08F2  0DA0               	rlf	__div_to_l_@f1,f
  5052  08F3  0DA1               	rlf	__div_to_l_@f1+1,f
  5053  08F4  0DA2               	rlf	__div_to_l_@f1+2,f
  5054  08F5  0DA3               	rlf	__div_to_l_@f1+3,f
  5055  08F6  0BF3               	decfsz	??__div_to_l_,f
  5056  08F7  28F1               	goto	u6505
  5057  08F8                     l3990:
  5058  08F8  3001               	movlw	1
  5059  08F9  02AC               	subwf	__div_to_l_@cntr,f
  5060  08FA  1D03               	btfss	3,2
  5061  08FB  28FD               	goto	u6511
  5062  08FC  28FE               	goto	u6510
  5063  08FD                     u6511:
  5064  08FD  28C5               	goto	l3980
  5065  08FE                     u6510:
  5066  08FE                     l591:
  5067  08FE  1FAD               	btfss	__div_to_l_@exp1,7
  5068  08FF  2901               	goto	u6521
  5069  0900  2902               	goto	u6520
  5070  0901                     u6521:
  5071  0901  291C               	goto	l4000
  5072  0902                     u6520:
  5073  0902                     l3992:
  5074  0902  082D               	movf	__div_to_l_@exp1,w
  5075  0903  3A80               	xorlw	128
  5076  0904  3E9F               	addlw	159
  5077  0905  1803               	skipnc
  5078  0906  2908               	goto	u6531
  5079  0907  2909               	goto	u6530
  5080  0908                     u6531:
  5081  0908  290A               	goto	l3998
  5082  0909                     u6530:
  5083  0909  288B               	goto	l3962
  5084  090A                     l3998:
  5085  090A  3001               	movlw	1
  5086  090B                     u6545:
  5087  090B  1003               	clrc
  5088  090C  0CAB               	rrf	__div_to_l_@quot+3,f
  5089  090D  0CAA               	rrf	__div_to_l_@quot+2,f
  5090  090E  0CA9               	rrf	__div_to_l_@quot+1,f
  5091  090F  0CA8               	rrf	__div_to_l_@quot,f
  5092  0910  3EFF               	addlw	-1
  5093  0911  1D03               	skipz
  5094  0912  290B               	goto	u6545
  5095  0913  3001               	movlw	1
  5096  0914  00F3               	movwf	??__div_to_l_
  5097  0915  0873               	movf	??__div_to_l_,w
  5098  0916  07AD               	addwf	__div_to_l_@exp1,f
  5099  0917  1D03               	btfss	3,2
  5100  0918  291A               	goto	u6551
  5101  0919  291B               	goto	u6550
  5102  091A                     u6551:
  5103  091A  290A               	goto	l3998
  5104  091B                     u6550:
  5105  091B  2933               	goto	l4008
  5106  091C                     l4000:
  5107  091C  3020               	movlw	32
  5108  091D  022D               	subwf	__div_to_l_@exp1,w
  5109  091E  1C03               	skipc
  5110  091F  2921               	goto	u6561
  5111  0920  2922               	goto	u6560
  5112  0921                     u6561:
  5113  0921  292E               	goto	l598
  5114  0922                     u6560:
  5115  0922  288B               	goto	l3962
  5116  0923                     l4006:
  5117  0923  3001               	movlw	1
  5118  0924  00F3               	movwf	??__div_to_l_
  5119  0925                     u6575:
  5120  0925  1003               	clrc
  5121  0926  0DA8               	rlf	__div_to_l_@quot,f
  5122  0927  0DA9               	rlf	__div_to_l_@quot+1,f
  5123  0928  0DAA               	rlf	__div_to_l_@quot+2,f
  5124  0929  0DAB               	rlf	__div_to_l_@quot+3,f
  5125  092A  0BF3               	decfsz	??__div_to_l_,f
  5126  092B  2925               	goto	u6575
  5127  092C  3001               	movlw	1
  5128  092D  02AD               	subwf	__div_to_l_@exp1,f
  5129  092E                     l598:
  5130  092E  082D               	movf	__div_to_l_@exp1,w
  5131  092F  1D03               	btfss	3,2
  5132  0930  2932               	goto	u6581
  5133  0931  2933               	goto	u6580
  5134  0932                     u6581:
  5135  0932  2923               	goto	l4006
  5136  0933                     u6580:
  5137  0933                     l4008:
  5138  0933  082B               	movf	__div_to_l_@quot+3,w
  5139  0934  00A3               	movwf	?__div_to_l_+3
  5140  0935  082A               	movf	__div_to_l_@quot+2,w
  5141  0936  00A2               	movwf	?__div_to_l_+2
  5142  0937  0829               	movf	__div_to_l_@quot+1,w
  5143  0938  00A1               	movwf	?__div_to_l_+1
  5144  0939  0828               	movf	__div_to_l_@quot,w
  5145  093A  00A0               	movwf	?__div_to_l_
  5146  093B                     l587:
  5147  093B  0008               	return
  5148  093C                     __end_of__div_to_l_:
  5149                           
  5150                           	psect	text11
  5151  1A87                     __ptext11:	
  5152 ;; *************** function ___wmul *****************
  5153 ;; Defined at:
  5154 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  multiplier      2    3[COMMON] unsigned int 
  5157 ;;  multiplicand    2    5[COMMON] unsigned int 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  product         2    0[BANK0 ] unsigned int 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  2    3[COMMON] unsigned int 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5169 ;;      Params:         4       0       0       0       0
  5170 ;;      Locals:         0       2       0       0       0
  5171 ;;      Temps:          0       0       0       0       0
  5172 ;;      Totals:         4       2       0       0       0
  5173 ;;Total ram usage:        6 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    1
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_sprintf
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           
  5184                           ;psect for function ___wmul
  5185  1A87                     ___wmul:
  5186  1A87                     l4012:	
  5187                           ;incstack = 0
  5188                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5189                           
  5190  1A87  1283               	bcf	3,5	;RP0=0, select bank0
  5191  1A88  1303               	bcf	3,6	;RP1=0, select bank0
  5192  1A89  01A0               	clrf	___wmul@product
  5193  1A8A  01A1               	clrf	___wmul@product+1
  5194  1A8B                     l4014:
  5195  1A8B  1C73               	btfss	___wmul@multiplier,0
  5196  1A8C  2A8E               	goto	u6591
  5197  1A8D  2A8F               	goto	u6590
  5198  1A8E                     u6591:
  5199  1A8E  2A97               	goto	l417
  5200  1A8F                     u6590:
  5201  1A8F                     l4016:
  5202  1A8F  0875               	movf	___wmul@multiplicand,w
  5203  1A90  1283               	bcf	3,5	;RP0=0, select bank0
  5204  1A91  1303               	bcf	3,6	;RP1=0, select bank0
  5205  1A92  07A0               	addwf	___wmul@product,f
  5206  1A93  1803               	skipnc
  5207  1A94  0AA1               	incf	___wmul@product+1,f
  5208  1A95  0876               	movf	___wmul@multiplicand+1,w
  5209  1A96  07A1               	addwf	___wmul@product+1,f
  5210  1A97                     l417:
  5211  1A97  3001               	movlw	1
  5212  1A98                     u6605:
  5213  1A98  1003               	clrc
  5214  1A99  0DF5               	rlf	___wmul@multiplicand,f
  5215  1A9A  0DF6               	rlf	___wmul@multiplicand+1,f
  5216  1A9B  3EFF               	addlw	-1
  5217  1A9C  1D03               	skipz
  5218  1A9D  2A98               	goto	u6605
  5219  1A9E                     l4018:
  5220  1A9E  3001               	movlw	1
  5221  1A9F                     u6615:
  5222  1A9F  1003               	clrc
  5223  1AA0  0CF4               	rrf	___wmul@multiplier+1,f
  5224  1AA1  0CF3               	rrf	___wmul@multiplier,f
  5225  1AA2  3EFF               	addlw	-1
  5226  1AA3  1D03               	skipz
  5227  1AA4  2A9F               	goto	u6615
  5228  1AA5                     l4020:
  5229  1AA5  0873               	movf	___wmul@multiplier,w
  5230  1AA6  0474               	iorwf	___wmul@multiplier+1,w
  5231  1AA7  1D03               	btfss	3,2
  5232  1AA8  2AAA               	goto	u6621
  5233  1AA9  2AAB               	goto	u6620
  5234  1AAA                     u6621:
  5235  1AAA  2A8B               	goto	l4014
  5236  1AAB                     u6620:
  5237  1AAB                     l4022:
  5238  1AAB  1283               	bcf	3,5	;RP0=0, select bank0
  5239  1AAC  1303               	bcf	3,6	;RP1=0, select bank0
  5240  1AAD  0821               	movf	___wmul@product+1,w
  5241  1AAE  00F4               	movwf	?___wmul+1
  5242  1AAF  0820               	movf	___wmul@product,w
  5243  1AB0  00F3               	movwf	?___wmul
  5244  1AB1                     l419:
  5245  1AB1  0008               	return
  5246  1AB2                     __end_of___wmul:
  5247                           
  5248                           	psect	text12
  5249  1C61                     __ptext12:	
  5250 ;; *************** function ___llmod *****************
  5251 ;; Defined at:
  5252 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  divisor         4   13[BANK0 ] unsigned long 
  5255 ;;  dividend        4   17[BANK0 ] unsigned long 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  counter         1    5[COMMON] unsigned char 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  4   13[BANK0 ] unsigned long 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2, status,0
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5267 ;;      Params:         0       8       0       0       0
  5268 ;;      Locals:         1       0       0       0       0
  5269 ;;      Temps:          1       0       0       0       0
  5270 ;;      Totals:         2       8       0       0       0
  5271 ;;Total ram usage:       10 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    1
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_sprintf
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function ___llmod
  5283  1C61                     ___llmod:
  5284  1C61                     l4082:	
  5285                           ;incstack = 0
  5286                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5287                           
  5288  1C61  1283               	bcf	3,5	;RP0=0, select bank0
  5289  1C62  1303               	bcf	3,6	;RP1=0, select bank0
  5290  1C63  0830               	movf	___llmod@divisor+3,w
  5291  1C64  042F               	iorwf	___llmod@divisor+2,w
  5292  1C65  042E               	iorwf	___llmod@divisor+1,w
  5293  1C66  042D               	iorwf	___llmod@divisor,w
  5294  1C67  1903               	skipnz
  5295  1C68  2C6A               	goto	u6801
  5296  1C69  2C6B               	goto	u6800
  5297  1C6A                     u6801:
  5298  1C6A  2CAE               	goto	l4098
  5299  1C6B                     u6800:
  5300  1C6B                     l4084:
  5301  1C6B  01F5               	clrf	___llmod@counter
  5302  1C6C  0AF5               	incf	___llmod@counter,f
  5303  1C6D  2C7B               	goto	l4088
  5304  1C6E                     l4086:
  5305  1C6E  3001               	movlw	1
  5306  1C6F  00F4               	movwf	??___llmod
  5307  1C70                     u6815:
  5308  1C70  1003               	clrc
  5309  1C71  0DAD               	rlf	___llmod@divisor,f
  5310  1C72  0DAE               	rlf	___llmod@divisor+1,f
  5311  1C73  0DAF               	rlf	___llmod@divisor+2,f
  5312  1C74  0DB0               	rlf	___llmod@divisor+3,f
  5313  1C75  0BF4               	decfsz	??___llmod,f
  5314  1C76  2C70               	goto	u6815
  5315  1C77  3001               	movlw	1
  5316  1C78  00F4               	movwf	??___llmod
  5317  1C79  0874               	movf	??___llmod,w
  5318  1C7A  07F5               	addwf	___llmod@counter,f
  5319  1C7B                     l4088:
  5320  1C7B  1FB0               	btfss	___llmod@divisor+3,7
  5321  1C7C  2C7E               	goto	u6821
  5322  1C7D  2C7F               	goto	u6820
  5323  1C7E                     u6821:
  5324  1C7E  2C6E               	goto	l4086
  5325  1C7F                     u6820:
  5326  1C7F                     l4090:
  5327  1C7F  0830               	movf	___llmod@divisor+3,w
  5328  1C80  0234               	subwf	___llmod@dividend+3,w
  5329  1C81  1D03               	skipz
  5330  1C82  2C8D               	goto	u6835
  5331  1C83  082F               	movf	___llmod@divisor+2,w
  5332  1C84  0233               	subwf	___llmod@dividend+2,w
  5333  1C85  1D03               	skipz
  5334  1C86  2C8D               	goto	u6835
  5335  1C87  082E               	movf	___llmod@divisor+1,w
  5336  1C88  0232               	subwf	___llmod@dividend+1,w
  5337  1C89  1D03               	skipz
  5338  1C8A  2C8D               	goto	u6835
  5339  1C8B  082D               	movf	___llmod@divisor,w
  5340  1C8C  0231               	subwf	___llmod@dividend,w
  5341  1C8D                     u6835:
  5342  1C8D  1C03               	skipc
  5343  1C8E  2C90               	goto	u6831
  5344  1C8F  2C91               	goto	u6830
  5345  1C90                     u6831:
  5346  1C90  2C9F               	goto	l4094
  5347  1C91                     u6830:
  5348  1C91                     l4092:
  5349  1C91  082D               	movf	___llmod@divisor,w
  5350  1C92  02B1               	subwf	___llmod@dividend,f
  5351  1C93  082E               	movf	___llmod@divisor+1,w
  5352  1C94  1C03               	skipc
  5353  1C95  0F2E               	incfsz	___llmod@divisor+1,w
  5354  1C96  02B2               	subwf	___llmod@dividend+1,f
  5355  1C97  082F               	movf	___llmod@divisor+2,w
  5356  1C98  1C03               	skipc
  5357  1C99  0F2F               	incfsz	___llmod@divisor+2,w
  5358  1C9A  02B3               	subwf	___llmod@dividend+2,f
  5359  1C9B  0830               	movf	___llmod@divisor+3,w
  5360  1C9C  1C03               	skipc
  5361  1C9D  0F30               	incfsz	___llmod@divisor+3,w
  5362  1C9E  02B4               	subwf	___llmod@dividend+3,f
  5363  1C9F                     l4094:
  5364  1C9F  3001               	movlw	1
  5365  1CA0                     u6845:
  5366  1CA0  1003               	clrc
  5367  1CA1  0CB0               	rrf	___llmod@divisor+3,f
  5368  1CA2  0CAF               	rrf	___llmod@divisor+2,f
  5369  1CA3  0CAE               	rrf	___llmod@divisor+1,f
  5370  1CA4  0CAD               	rrf	___llmod@divisor,f
  5371  1CA5  3EFF               	addlw	-1
  5372  1CA6  1D03               	skipz
  5373  1CA7  2CA0               	goto	u6845
  5374  1CA8                     l4096:
  5375  1CA8  3001               	movlw	1
  5376  1CA9  02F5               	subwf	___llmod@counter,f
  5377  1CAA  1D03               	btfss	3,2
  5378  1CAB  2CAD               	goto	u6851
  5379  1CAC  2CAE               	goto	u6850
  5380  1CAD                     u6851:
  5381  1CAD  2C7F               	goto	l4090
  5382  1CAE                     u6850:
  5383  1CAE                     l4098:
  5384  1CAE  0834               	movf	___llmod@dividend+3,w
  5385  1CAF  00B0               	movwf	?___llmod+3
  5386  1CB0  0833               	movf	___llmod@dividend+2,w
  5387  1CB1  00AF               	movwf	?___llmod+2
  5388  1CB2  0832               	movf	___llmod@dividend+1,w
  5389  1CB3  00AE               	movwf	?___llmod+1
  5390  1CB4  0831               	movf	___llmod@dividend,w
  5391  1CB5  00AD               	movwf	?___llmod
  5392  1CB6                     l673:
  5393  1CB6  0008               	return
  5394  1CB7                     __end_of___llmod:
  5395                           
  5396                           	psect	text13
  5397  1D12                     __ptext13:	
  5398 ;; *************** function ___lldiv *****************
  5399 ;; Defined at:
  5400 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  divisor         4    0[BANK0 ] unsigned long 
  5403 ;;  dividend        4    4[BANK0 ] unsigned long 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  quotient        4    8[BANK0 ] unsigned long 
  5406 ;;  counter         1   12[BANK0 ] unsigned char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  4    0[BANK0 ] unsigned long 
  5409 ;; Registers used:
  5410 ;;		wreg, status,2, status,0
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5416 ;;      Params:         0       8       0       0       0
  5417 ;;      Locals:         0       5       0       0       0
  5418 ;;      Temps:          1       0       0       0       0
  5419 ;;      Totals:         1      13       0       0       0
  5420 ;;Total ram usage:       14 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    1
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_sprintf
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           
  5431                           ;psect for function ___lldiv
  5432  1D12                     ___lldiv:
  5433  1D12                     l4026:	
  5434                           ;incstack = 0
  5435                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5436                           
  5437  1D12  3000               	movlw	0
  5438  1D13  1283               	bcf	3,5	;RP0=0, select bank0
  5439  1D14  1303               	bcf	3,6	;RP1=0, select bank0
  5440  1D15  00AB               	movwf	___lldiv@quotient+3
  5441  1D16  3000               	movlw	0
  5442  1D17  00AA               	movwf	___lldiv@quotient+2
  5443  1D18  3000               	movlw	0
  5444  1D19  00A9               	movwf	___lldiv@quotient+1
  5445  1D1A  3000               	movlw	0
  5446  1D1B  00A8               	movwf	___lldiv@quotient
  5447  1D1C  0823               	movf	___lldiv@divisor+3,w
  5448  1D1D  0422               	iorwf	___lldiv@divisor+2,w
  5449  1D1E  0421               	iorwf	___lldiv@divisor+1,w
  5450  1D1F  0420               	iorwf	___lldiv@divisor,w
  5451  1D20  1903               	skipnz
  5452  1D21  2D23               	goto	u6631
  5453  1D22  2D24               	goto	u6630
  5454  1D23                     u6631:
  5455  1D23  2D71               	goto	l4046
  5456  1D24                     u6630:
  5457  1D24                     l4028:
  5458  1D24  01AC               	clrf	___lldiv@counter
  5459  1D25  0AAC               	incf	___lldiv@counter,f
  5460  1D26  2D34               	goto	l4032
  5461  1D27                     l4030:
  5462  1D27  3001               	movlw	1
  5463  1D28  00F3               	movwf	??___lldiv
  5464  1D29                     u6645:
  5465  1D29  1003               	clrc
  5466  1D2A  0DA0               	rlf	___lldiv@divisor,f
  5467  1D2B  0DA1               	rlf	___lldiv@divisor+1,f
  5468  1D2C  0DA2               	rlf	___lldiv@divisor+2,f
  5469  1D2D  0DA3               	rlf	___lldiv@divisor+3,f
  5470  1D2E  0BF3               	decfsz	??___lldiv,f
  5471  1D2F  2D29               	goto	u6645
  5472  1D30  3001               	movlw	1
  5473  1D31  00F3               	movwf	??___lldiv
  5474  1D32  0873               	movf	??___lldiv,w
  5475  1D33  07AC               	addwf	___lldiv@counter,f
  5476  1D34                     l4032:
  5477  1D34  1FA3               	btfss	___lldiv@divisor+3,7
  5478  1D35  2D37               	goto	u6651
  5479  1D36  2D38               	goto	u6650
  5480  1D37                     u6651:
  5481  1D37  2D27               	goto	l4030
  5482  1D38                     u6650:
  5483  1D38                     l4034:
  5484  1D38  3001               	movlw	1
  5485  1D39  00F3               	movwf	??___lldiv
  5486  1D3A                     u6665:
  5487  1D3A  1003               	clrc
  5488  1D3B  0DA8               	rlf	___lldiv@quotient,f
  5489  1D3C  0DA9               	rlf	___lldiv@quotient+1,f
  5490  1D3D  0DAA               	rlf	___lldiv@quotient+2,f
  5491  1D3E  0DAB               	rlf	___lldiv@quotient+3,f
  5492  1D3F  0BF3               	decfsz	??___lldiv,f
  5493  1D40  2D3A               	goto	u6665
  5494  1D41                     l4036:
  5495  1D41  0823               	movf	___lldiv@divisor+3,w
  5496  1D42  0227               	subwf	___lldiv@dividend+3,w
  5497  1D43  1D03               	skipz
  5498  1D44  2D4F               	goto	u6675
  5499  1D45  0822               	movf	___lldiv@divisor+2,w
  5500  1D46  0226               	subwf	___lldiv@dividend+2,w
  5501  1D47  1D03               	skipz
  5502  1D48  2D4F               	goto	u6675
  5503  1D49  0821               	movf	___lldiv@divisor+1,w
  5504  1D4A  0225               	subwf	___lldiv@dividend+1,w
  5505  1D4B  1D03               	skipz
  5506  1D4C  2D4F               	goto	u6675
  5507  1D4D  0820               	movf	___lldiv@divisor,w
  5508  1D4E  0224               	subwf	___lldiv@dividend,w
  5509  1D4F                     u6675:
  5510  1D4F  1C03               	skipc
  5511  1D50  2D52               	goto	u6671
  5512  1D51  2D53               	goto	u6670
  5513  1D52                     u6671:
  5514  1D52  2D62               	goto	l4042
  5515  1D53                     u6670:
  5516  1D53                     l4038:
  5517  1D53  0820               	movf	___lldiv@divisor,w
  5518  1D54  02A4               	subwf	___lldiv@dividend,f
  5519  1D55  0821               	movf	___lldiv@divisor+1,w
  5520  1D56  1C03               	skipc
  5521  1D57  0F21               	incfsz	___lldiv@divisor+1,w
  5522  1D58  02A5               	subwf	___lldiv@dividend+1,f
  5523  1D59  0822               	movf	___lldiv@divisor+2,w
  5524  1D5A  1C03               	skipc
  5525  1D5B  0F22               	incfsz	___lldiv@divisor+2,w
  5526  1D5C  02A6               	subwf	___lldiv@dividend+2,f
  5527  1D5D  0823               	movf	___lldiv@divisor+3,w
  5528  1D5E  1C03               	skipc
  5529  1D5F  0F23               	incfsz	___lldiv@divisor+3,w
  5530  1D60  02A7               	subwf	___lldiv@dividend+3,f
  5531  1D61                     l4040:
  5532  1D61  1428               	bsf	___lldiv@quotient,0
  5533  1D62                     l4042:
  5534  1D62  3001               	movlw	1
  5535  1D63                     u6685:
  5536  1D63  1003               	clrc
  5537  1D64  0CA3               	rrf	___lldiv@divisor+3,f
  5538  1D65  0CA2               	rrf	___lldiv@divisor+2,f
  5539  1D66  0CA1               	rrf	___lldiv@divisor+1,f
  5540  1D67  0CA0               	rrf	___lldiv@divisor,f
  5541  1D68  3EFF               	addlw	-1
  5542  1D69  1D03               	skipz
  5543  1D6A  2D63               	goto	u6685
  5544  1D6B                     l4044:
  5545  1D6B  3001               	movlw	1
  5546  1D6C  02AC               	subwf	___lldiv@counter,f
  5547  1D6D  1D03               	btfss	3,2
  5548  1D6E  2D70               	goto	u6691
  5549  1D6F  2D71               	goto	u6690
  5550  1D70                     u6691:
  5551  1D70  2D38               	goto	l4034
  5552  1D71                     u6690:
  5553  1D71                     l4046:
  5554  1D71  082B               	movf	___lldiv@quotient+3,w
  5555  1D72  00A3               	movwf	?___lldiv+3
  5556  1D73  082A               	movf	___lldiv@quotient+2,w
  5557  1D74  00A2               	movwf	?___lldiv+2
  5558  1D75  0829               	movf	___lldiv@quotient+1,w
  5559  1D76  00A1               	movwf	?___lldiv+1
  5560  1D77  0828               	movf	___lldiv@quotient,w
  5561  1D78  00A0               	movwf	?___lldiv
  5562  1D79                     l453:
  5563  1D79  0008               	return
  5564  1D7A                     __end_of___lldiv:
  5565                           
  5566                           	psect	text14
  5567  0802                     __ptext14:	
  5568 ;; *************** function ___fltol *****************
  5569 ;; Defined at:
  5570 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  f1              4   56[BANK0 ] unsigned long 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  exp1            1   66[BANK0 ] unsigned char 
  5575 ;;  sign1           1   65[BANK0 ] unsigned char 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  4   56[BANK0 ] long 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5585 ;;      Params:         0       4       0       0       0
  5586 ;;      Locals:         0       2       0       0       0
  5587 ;;      Temps:          0       5       0       0       0
  5588 ;;      Totals:         0      11       0       0       0
  5589 ;;Total ram usage:       11 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    1
  5592 ;; This function calls:
  5593 ;;		Nothing
  5594 ;; This function is called by:
  5595 ;;		_sprintf
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function ___fltol
  5601  0802                     ___fltol:
  5602  0802                     l3108:	
  5603                           ;incstack = 0
  5604                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5605                           
  5606  0802  1003               	clrc
  5607  0803  1283               	bcf	3,5	;RP0=0, select bank0
  5608  0804  1303               	bcf	3,6	;RP1=0, select bank0
  5609  0805  0D5A               	rlf	___fltol@f1+2,w
  5610  0806  0D5B               	rlf	___fltol@f1+3,w
  5611  0807  00DC               	movwf	??___fltol
  5612  0808  085C               	movf	??___fltol,w
  5613  0809  00E2               	movwf	___fltol@exp1
  5614  080A  0862               	movf	___fltol@exp1,w
  5615  080B  1D03               	btfss	3,2
  5616  080C  280E               	goto	u4851
  5617  080D  280F               	goto	u4850
  5618  080E                     u4851:
  5619  080E  2818               	goto	l3114
  5620  080F                     u4850:
  5621  080F                     l3110:
  5622  080F  3000               	movlw	0
  5623  0810  00DB               	movwf	?___fltol+3
  5624  0811  3000               	movlw	0
  5625  0812  00DA               	movwf	?___fltol+2
  5626  0813  3000               	movlw	0
  5627  0814  00D9               	movwf	?___fltol+1
  5628  0815  3000               	movlw	0
  5629  0816  00D8               	movwf	?___fltol
  5630  0817  287D               	goto	l620
  5631  0818                     l3114:
  5632  0818  0858               	movf	___fltol@f1,w
  5633  0819  00DC               	movwf	??___fltol
  5634  081A  0859               	movf	___fltol@f1+1,w
  5635  081B  00DD               	movwf	??___fltol+1
  5636  081C  085A               	movf	___fltol@f1+2,w
  5637  081D  00DE               	movwf	??___fltol+2
  5638  081E  085B               	movf	___fltol@f1+3,w
  5639  081F  00DF               	movwf	??___fltol+3
  5640  0820  301F               	movlw	31
  5641  0821                     u4865:
  5642  0821  1003               	clrc
  5643  0822  0CDF               	rrf	??___fltol+3,f
  5644  0823  0CDE               	rrf	??___fltol+2,f
  5645  0824  0CDD               	rrf	??___fltol+1,f
  5646  0825  0CDC               	rrf	??___fltol,f
  5647  0826                     u4860:
  5648  0826  3EFF               	addlw	-1
  5649  0827  1D03               	skipz
  5650  0828  2821               	goto	u4865
  5651  0829  085C               	movf	??___fltol,w
  5652  082A  00E0               	movwf	??___fltol+4
  5653  082B  0860               	movf	??___fltol+4,w
  5654  082C  00E1               	movwf	___fltol@sign1
  5655  082D                     l3116:
  5656  082D  17DA               	bsf	___fltol@f1+2,7
  5657  082E                     l3118:
  5658  082E  30FF               	movlw	255
  5659  082F  05D8               	andwf	___fltol@f1,f
  5660  0830  30FF               	movlw	255
  5661  0831  05D9               	andwf	___fltol@f1+1,f
  5662  0832  30FF               	movlw	255
  5663  0833  05DA               	andwf	___fltol@f1+2,f
  5664  0834  3000               	movlw	0
  5665  0835  05DB               	andwf	___fltol@f1+3,f
  5666  0836                     l3120:
  5667  0836  3096               	movlw	150
  5668  0837  02E2               	subwf	___fltol@exp1,f
  5669  0838                     l3122:
  5670  0838  1FE2               	btfss	___fltol@exp1,7
  5671  0839  283B               	goto	u4871
  5672  083A  283C               	goto	u4870
  5673  083B                     u4871:
  5674  083B  2856               	goto	l3132
  5675  083C                     u4870:
  5676  083C                     l3124:
  5677  083C  0862               	movf	___fltol@exp1,w
  5678  083D  3A80               	xorlw	128
  5679  083E  3E97               	addlw	151
  5680  083F  1803               	skipnc
  5681  0840  2842               	goto	u4881
  5682  0841  2843               	goto	u4880
  5683  0842                     u4881:
  5684  0842  2844               	goto	l3130
  5685  0843                     u4880:
  5686  0843  280F               	goto	l3110
  5687  0844                     l3130:
  5688  0844  3001               	movlw	1
  5689  0845                     u4895:
  5690  0845  1003               	clrc
  5691  0846  0CDB               	rrf	___fltol@f1+3,f
  5692  0847  0CDA               	rrf	___fltol@f1+2,f
  5693  0848  0CD9               	rrf	___fltol@f1+1,f
  5694  0849  0CD8               	rrf	___fltol@f1,f
  5695  084A  3EFF               	addlw	-1
  5696  084B  1D03               	skipz
  5697  084C  2845               	goto	u4895
  5698  084D  3001               	movlw	1
  5699  084E  00DC               	movwf	??___fltol
  5700  084F  085C               	movf	??___fltol,w
  5701  0850  07E2               	addwf	___fltol@exp1,f
  5702  0851  1D03               	btfss	3,2
  5703  0852  2854               	goto	u4901
  5704  0853  2855               	goto	u4900
  5705  0854                     u4901:
  5706  0854  2844               	goto	l3130
  5707  0855                     u4900:
  5708  0855  286D               	goto	l3140
  5709  0856                     l3132:
  5710  0856  3020               	movlw	32
  5711  0857  0262               	subwf	___fltol@exp1,w
  5712  0858  1C03               	skipc
  5713  0859  285B               	goto	u4911
  5714  085A  285C               	goto	u4910
  5715  085B                     u4911:
  5716  085B  2868               	goto	l627
  5717  085C                     u4910:
  5718  085C  280F               	goto	l3110
  5719  085D                     l3138:
  5720  085D  3001               	movlw	1
  5721  085E  00DC               	movwf	??___fltol
  5722  085F                     u4925:
  5723  085F  1003               	clrc
  5724  0860  0DD8               	rlf	___fltol@f1,f
  5725  0861  0DD9               	rlf	___fltol@f1+1,f
  5726  0862  0DDA               	rlf	___fltol@f1+2,f
  5727  0863  0DDB               	rlf	___fltol@f1+3,f
  5728  0864  0BDC               	decfsz	??___fltol,f
  5729  0865  285F               	goto	u4925
  5730  0866  3001               	movlw	1
  5731  0867  02E2               	subwf	___fltol@exp1,f
  5732  0868                     l627:
  5733  0868  0862               	movf	___fltol@exp1,w
  5734  0869  1D03               	btfss	3,2
  5735  086A  286C               	goto	u4931
  5736  086B  286D               	goto	u4930
  5737  086C                     u4931:
  5738  086C  285D               	goto	l3138
  5739  086D                     u4930:
  5740  086D                     l3140:
  5741  086D  0861               	movf	___fltol@sign1,w
  5742  086E  1903               	btfsc	3,2
  5743  086F  2871               	goto	u4941
  5744  0870  2872               	goto	u4940
  5745  0871                     u4941:
  5746  0871  287D               	goto	l630
  5747  0872                     u4940:
  5748  0872                     l3142:
  5749  0872  09D8               	comf	___fltol@f1,f
  5750  0873  09D9               	comf	___fltol@f1+1,f
  5751  0874  09DA               	comf	___fltol@f1+2,f
  5752  0875  09DB               	comf	___fltol@f1+3,f
  5753  0876  0AD8               	incf	___fltol@f1,f
  5754  0877  1903               	skipnz
  5755  0878  0AD9               	incf	___fltol@f1+1,f
  5756  0879  1903               	skipnz
  5757  087A  0ADA               	incf	___fltol@f1+2,f
  5758  087B  1903               	skipnz
  5759  087C  0ADB               	incf	___fltol@f1+3,f
  5760  087D                     l630:
  5761  087D                     l620:
  5762  087D  0008               	return
  5763  087E                     __end_of___fltol:
  5764                           
  5765                           	psect	text15
  5766  1C11                     __ptext15:	
  5767 ;; *************** function ___flsub *****************
  5768 ;; Defined at:
  5769 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  a               4    0[BANK1 ] long 
  5772 ;;  b               4    4[BANK1 ] long 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;		None
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  4    0[BANK1 ] long 
  5777 ;; Registers used:
  5778 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5784 ;;      Params:         0       0       8       0       0
  5785 ;;      Locals:         0       0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0
  5787 ;;      Totals:         0       0       8       0       0
  5788 ;;Total ram usage:        8 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:    2
  5791 ;; This function calls:
  5792 ;;		___fladd
  5793 ;; This function is called by:
  5794 ;;		_sprintf
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           
  5799                           ;psect for function ___flsub
  5800  1C11                     ___flsub:
  5801  1C11                     l3164:	
  5802                           ;incstack = 0
  5803                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5804                           
  5805  1C11  3080               	movlw	128
  5806  1C12  1683               	bsf	3,5	;RP0=1, select bank1
  5807  1C13  1303               	bcf	3,6	;RP1=0, select bank1
  5808  1C14  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5809  1C15                     l3166:
  5810  1C15  0827               	movf	(___flsub@b+3)^(0+128),w
  5811  1C16  1283               	bcf	3,5	;RP0=0, select bank0
  5812  1C17  1303               	bcf	3,6	;RP1=0, select bank0
  5813  1C18  00DC               	movwf	___fladd@b+3
  5814  1C19  1683               	bsf	3,5	;RP0=1, select bank1
  5815  1C1A  1303               	bcf	3,6	;RP1=0, select bank1
  5816  1C1B  0826               	movf	(___flsub@b+2)^(0+128),w
  5817  1C1C  1283               	bcf	3,5	;RP0=0, select bank0
  5818  1C1D  1303               	bcf	3,6	;RP1=0, select bank0
  5819  1C1E  00DB               	movwf	___fladd@b+2
  5820  1C1F  1683               	bsf	3,5	;RP0=1, select bank1
  5821  1C20  1303               	bcf	3,6	;RP1=0, select bank1
  5822  1C21  0825               	movf	(___flsub@b+1)^(0+128),w
  5823  1C22  1283               	bcf	3,5	;RP0=0, select bank0
  5824  1C23  1303               	bcf	3,6	;RP1=0, select bank0
  5825  1C24  00DA               	movwf	___fladd@b+1
  5826  1C25  1683               	bsf	3,5	;RP0=1, select bank1
  5827  1C26  1303               	bcf	3,6	;RP1=0, select bank1
  5828  1C27  0824               	movf	___flsub@b^(0+128),w
  5829  1C28  1283               	bcf	3,5	;RP0=0, select bank0
  5830  1C29  1303               	bcf	3,6	;RP1=0, select bank0
  5831  1C2A  00D9               	movwf	___fladd@b
  5832  1C2B  1683               	bsf	3,5	;RP0=1, select bank1
  5833  1C2C  1303               	bcf	3,6	;RP1=0, select bank1
  5834  1C2D  0823               	movf	(___flsub@a+3)^(0+128),w
  5835  1C2E  1283               	bcf	3,5	;RP0=0, select bank0
  5836  1C2F  1303               	bcf	3,6	;RP1=0, select bank0
  5837  1C30  00E0               	movwf	___fladd@a+3
  5838  1C31  1683               	bsf	3,5	;RP0=1, select bank1
  5839  1C32  1303               	bcf	3,6	;RP1=0, select bank1
  5840  1C33  0822               	movf	(___flsub@a+2)^(0+128),w
  5841  1C34  1283               	bcf	3,5	;RP0=0, select bank0
  5842  1C35  1303               	bcf	3,6	;RP1=0, select bank0
  5843  1C36  00DF               	movwf	___fladd@a+2
  5844  1C37  1683               	bsf	3,5	;RP0=1, select bank1
  5845  1C38  1303               	bcf	3,6	;RP1=0, select bank1
  5846  1C39  0821               	movf	(___flsub@a+1)^(0+128),w
  5847  1C3A  1283               	bcf	3,5	;RP0=0, select bank0
  5848  1C3B  1303               	bcf	3,6	;RP1=0, select bank0
  5849  1C3C  00DE               	movwf	___fladd@a+1
  5850  1C3D  1683               	bsf	3,5	;RP0=1, select bank1
  5851  1C3E  1303               	bcf	3,6	;RP1=0, select bank1
  5852  1C3F  0820               	movf	___flsub@a^(0+128),w
  5853  1C40  1283               	bcf	3,5	;RP0=0, select bank0
  5854  1C41  1303               	bcf	3,6	;RP1=0, select bank0
  5855  1C42  00DD               	movwf	___fladd@a
  5856  1C43  160A  118A  226E  160A  158A  	fcall	___fladd
  5857  1C48  1283               	bcf	3,5	;RP0=0, select bank0
  5858  1C49  1303               	bcf	3,6	;RP1=0, select bank0
  5859  1C4A  085C               	movf	?___fladd+3,w
  5860  1C4B  1683               	bsf	3,5	;RP0=1, select bank1
  5861  1C4C  1303               	bcf	3,6	;RP1=0, select bank1
  5862  1C4D  00A3               	movwf	(?___flsub+3)^(0+128)
  5863  1C4E  1283               	bcf	3,5	;RP0=0, select bank0
  5864  1C4F  1303               	bcf	3,6	;RP1=0, select bank0
  5865  1C50  085B               	movf	?___fladd+2,w
  5866  1C51  1683               	bsf	3,5	;RP0=1, select bank1
  5867  1C52  1303               	bcf	3,6	;RP1=0, select bank1
  5868  1C53  00A2               	movwf	(?___flsub+2)^(0+128)
  5869  1C54  1283               	bcf	3,5	;RP0=0, select bank0
  5870  1C55  1303               	bcf	3,6	;RP1=0, select bank0
  5871  1C56  085A               	movf	?___fladd+1,w
  5872  1C57  1683               	bsf	3,5	;RP0=1, select bank1
  5873  1C58  1303               	bcf	3,6	;RP1=0, select bank1
  5874  1C59  00A1               	movwf	(?___flsub+1)^(0+128)
  5875  1C5A  1283               	bcf	3,5	;RP0=0, select bank0
  5876  1C5B  1303               	bcf	3,6	;RP1=0, select bank0
  5877  1C5C  0859               	movf	?___fladd,w
  5878  1C5D  1683               	bsf	3,5	;RP0=1, select bank1
  5879  1C5E  1303               	bcf	3,6	;RP1=0, select bank1
  5880  1C5F  00A0               	movwf	?___flsub^(0+128)
  5881  1C60                     l790:
  5882  1C60  0008               	return
  5883  1C61                     __end_of___flsub:
  5884                           
  5885                           	psect	text16
  5886  126E                     __ptext16:	
  5887 ;; *************** function ___fladd *****************
  5888 ;; Defined at:
  5889 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  b               4   57[BANK0 ] long 
  5892 ;;  a               4   61[BANK0 ] long 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  grs             1   76[BANK0 ] unsigned char 
  5895 ;;  bexp            1   75[BANK0 ] unsigned char 
  5896 ;;  aexp            1   74[BANK0 ] unsigned char 
  5897 ;;  signs           1   73[BANK0 ] unsigned char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  4   57[BANK0 ] unsigned char 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0, btemp+1
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5907 ;;      Params:         0       8       0       0       0
  5908 ;;      Locals:         0       4       0       0       0
  5909 ;;      Temps:          0       8       0       0       0
  5910 ;;      Totals:         0      20       0       0       0
  5911 ;;Total ram usage:       20 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    1
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_sprintf
  5918 ;;		___flsub
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           
  5923                           ;psect for function ___fladd
  5924  126E                     ___fladd:
  5925  126E                     l2498:	
  5926                           ;incstack = 0
  5927                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5928                           
  5929  126E  1283               	bcf	3,5	;RP0=0, select bank0
  5930  126F  1303               	bcf	3,6	;RP1=0, select bank0
  5931  1270  085C               	movf	___fladd@b+3,w
  5932  1271  3980               	andlw	128
  5933  1272  00E1               	movwf	??___fladd
  5934  1273  0861               	movf	??___fladd,w
  5935  1274  00E9               	movwf	___fladd@signs
  5936  1275                     l2500:
  5937  1275  085C               	movf	___fladd@b+3,w
  5938  1276  00E1               	movwf	??___fladd
  5939  1277  0761               	addwf	??___fladd,w
  5940  1278  00E2               	movwf	??___fladd+1
  5941  1279  0862               	movf	??___fladd+1,w
  5942  127A  00EB               	movwf	___fladd@bexp
  5943  127B                     l2502:
  5944  127B  1FDB               	btfss	___fladd@b+2,7
  5945  127C  2A7E               	goto	u3261
  5946  127D  2A7F               	goto	u3260
  5947  127E                     u3261:
  5948  127E  2A80               	goto	l2506
  5949  127F                     u3260:
  5950  127F                     l2504:
  5951  127F  146B               	bsf	___fladd@bexp,0
  5952  1280                     l2506:
  5953  1280  086B               	movf	___fladd@bexp,w
  5954  1281  1903               	btfsc	3,2
  5955  1282  2A84               	goto	u3271
  5956  1283  2A85               	goto	u3270
  5957  1284                     u3271:
  5958  1284  2A95               	goto	l2516
  5959  1285                     u3270:
  5960  1285                     l2508:
  5961  1285  0A6B               	incf	___fladd@bexp,w
  5962  1286  1D03               	btfss	3,2
  5963  1287  2A89               	goto	u3281
  5964  1288  2A8A               	goto	u3280
  5965  1289                     u3281:
  5966  1289  2A92               	goto	l2512
  5967  128A                     u3280:
  5968  128A                     l2510:
  5969  128A  3000               	movlw	0
  5970  128B  00DC               	movwf	___fladd@b+3
  5971  128C  3000               	movlw	0
  5972  128D  00DB               	movwf	___fladd@b+2
  5973  128E  3000               	movlw	0
  5974  128F  00DA               	movwf	___fladd@b+1
  5975  1290  3000               	movlw	0
  5976  1291  00D9               	movwf	___fladd@b
  5977  1292                     l2512:
  5978  1292  17DB               	bsf	___fladd@b+2,7
  5979  1293                     l2514:
  5980  1293  01DC               	clrf	___fladd@b+3
  5981  1294  2A9D               	goto	l2518
  5982  1295                     l2516:
  5983  1295  3000               	movlw	0
  5984  1296  00DC               	movwf	___fladd@b+3
  5985  1297  3000               	movlw	0
  5986  1298  00DB               	movwf	___fladd@b+2
  5987  1299  3000               	movlw	0
  5988  129A  00DA               	movwf	___fladd@b+1
  5989  129B  3000               	movlw	0
  5990  129C  00D9               	movwf	___fladd@b
  5991  129D                     l2518:
  5992  129D  0860               	movf	___fladd@a+3,w
  5993  129E  3980               	andlw	128
  5994  129F  00E1               	movwf	??___fladd
  5995  12A0  0861               	movf	??___fladd,w
  5996  12A1  00EA               	movwf	___fladd@aexp
  5997  12A2                     l2520:
  5998  12A2  086A               	movf	___fladd@aexp,w
  5999  12A3  0669               	xorwf	___fladd@signs,w
  6000  12A4  1903               	skipnz
  6001  12A5  2AA7               	goto	u3291
  6002  12A6  2AA8               	goto	u3290
  6003  12A7                     u3291:
  6004  12A7  2AA9               	goto	l2524
  6005  12A8                     u3290:
  6006  12A8                     l2522:
  6007  12A8  1769               	bsf	___fladd@signs,6
  6008  12A9                     l2524:
  6009  12A9  0860               	movf	___fladd@a+3,w
  6010  12AA  00E1               	movwf	??___fladd
  6011  12AB  0761               	addwf	??___fladd,w
  6012  12AC  00E2               	movwf	??___fladd+1
  6013  12AD  0862               	movf	??___fladd+1,w
  6014  12AE  00EA               	movwf	___fladd@aexp
  6015  12AF                     l2526:
  6016  12AF  1FDF               	btfss	___fladd@a+2,7
  6017  12B0  2AB2               	goto	u3301
  6018  12B1  2AB3               	goto	u3300
  6019  12B2                     u3301:
  6020  12B2  2AB4               	goto	l2530
  6021  12B3                     u3300:
  6022  12B3                     l2528:
  6023  12B3  146A               	bsf	___fladd@aexp,0
  6024  12B4                     l2530:
  6025  12B4  086A               	movf	___fladd@aexp,w
  6026  12B5  1903               	btfsc	3,2
  6027  12B6  2AB8               	goto	u3311
  6028  12B7  2AB9               	goto	u3310
  6029  12B8                     u3311:
  6030  12B8  2AC9               	goto	l2540
  6031  12B9                     u3310:
  6032  12B9                     l2532:
  6033  12B9  0A6A               	incf	___fladd@aexp,w
  6034  12BA  1D03               	btfss	3,2
  6035  12BB  2ABD               	goto	u3321
  6036  12BC  2ABE               	goto	u3320
  6037  12BD                     u3321:
  6038  12BD  2AC6               	goto	l2536
  6039  12BE                     u3320:
  6040  12BE                     l2534:
  6041  12BE  3000               	movlw	0
  6042  12BF  00E0               	movwf	___fladd@a+3
  6043  12C0  3000               	movlw	0
  6044  12C1  00DF               	movwf	___fladd@a+2
  6045  12C2  3000               	movlw	0
  6046  12C3  00DE               	movwf	___fladd@a+1
  6047  12C4  3000               	movlw	0
  6048  12C5  00DD               	movwf	___fladd@a
  6049  12C6                     l2536:
  6050  12C6  17DF               	bsf	___fladd@a+2,7
  6051  12C7                     l2538:
  6052  12C7  01E0               	clrf	___fladd@a+3
  6053  12C8  2AD1               	goto	l744
  6054  12C9                     l2540:
  6055  12C9  3000               	movlw	0
  6056  12CA  00E0               	movwf	___fladd@a+3
  6057  12CB  3000               	movlw	0
  6058  12CC  00DF               	movwf	___fladd@a+2
  6059  12CD  3000               	movlw	0
  6060  12CE  00DE               	movwf	___fladd@a+1
  6061  12CF  3000               	movlw	0
  6062  12D0  00DD               	movwf	___fladd@a
  6063  12D1                     l744:
  6064  12D1  086B               	movf	___fladd@bexp,w
  6065  12D2  026A               	subwf	___fladd@aexp,w
  6066  12D3  1803               	skipnc
  6067  12D4  2AD6               	goto	u3331
  6068  12D5  2AD7               	goto	u3330
  6069  12D6                     u3331:
  6070  12D6  2B1B               	goto	l2576
  6071  12D7                     u3330:
  6072  12D7                     l2542:
  6073  12D7  1F69               	btfss	___fladd@signs,6
  6074  12D8  2ADA               	goto	u3341
  6075  12D9  2ADB               	goto	u3340
  6076  12DA                     u3341:
  6077  12DA  2ADF               	goto	l2546
  6078  12DB                     u3340:
  6079  12DB                     l2544:
  6080  12DB  3080               	movlw	128
  6081  12DC  00E1               	movwf	??___fladd
  6082  12DD  0861               	movf	??___fladd,w
  6083  12DE  06E9               	xorwf	___fladd@signs,f
  6084  12DF                     l2546:
  6085  12DF  086B               	movf	___fladd@bexp,w
  6086  12E0  00E1               	movwf	??___fladd
  6087  12E1  0861               	movf	??___fladd,w
  6088  12E2  00EC               	movwf	___fladd@grs
  6089  12E3                     l2548:
  6090  12E3  086A               	movf	___fladd@aexp,w
  6091  12E4  00E1               	movwf	??___fladd
  6092  12E5  0861               	movf	??___fladd,w
  6093  12E6  00EB               	movwf	___fladd@bexp
  6094  12E7                     l2550:
  6095  12E7  086C               	movf	___fladd@grs,w
  6096  12E8  00E1               	movwf	??___fladd
  6097  12E9  0861               	movf	??___fladd,w
  6098  12EA  00EA               	movwf	___fladd@aexp
  6099  12EB                     l2552:
  6100  12EB  0859               	movf	___fladd@b,w
  6101  12EC  00E1               	movwf	??___fladd
  6102  12ED  0861               	movf	??___fladd,w
  6103  12EE  00EC               	movwf	___fladd@grs
  6104  12EF                     l2554:
  6105  12EF  085D               	movf	___fladd@a,w
  6106  12F0  00E1               	movwf	??___fladd
  6107  12F1  0861               	movf	??___fladd,w
  6108  12F2  00D9               	movwf	___fladd@b
  6109  12F3                     l2556:
  6110  12F3  086C               	movf	___fladd@grs,w
  6111  12F4  00E1               	movwf	??___fladd
  6112  12F5  0861               	movf	??___fladd,w
  6113  12F6  00DD               	movwf	___fladd@a
  6114  12F7                     l2558:
  6115  12F7  085A               	movf	___fladd@b+1,w
  6116  12F8  00E1               	movwf	??___fladd
  6117  12F9  0861               	movf	??___fladd,w
  6118  12FA  00EC               	movwf	___fladd@grs
  6119  12FB                     l2560:
  6120  12FB  085E               	movf	___fladd@a+1,w
  6121  12FC  00E1               	movwf	??___fladd
  6122  12FD  0861               	movf	??___fladd,w
  6123  12FE  00DA               	movwf	___fladd@b+1
  6124  12FF                     l2562:
  6125  12FF  086C               	movf	___fladd@grs,w
  6126  1300  00E1               	movwf	??___fladd
  6127  1301  0861               	movf	??___fladd,w
  6128  1302  00DE               	movwf	___fladd@a+1
  6129  1303                     l2564:
  6130  1303  085B               	movf	___fladd@b+2,w
  6131  1304  00E1               	movwf	??___fladd
  6132  1305  0861               	movf	??___fladd,w
  6133  1306  00EC               	movwf	___fladd@grs
  6134  1307                     l2566:
  6135  1307  085F               	movf	___fladd@a+2,w
  6136  1308  00E1               	movwf	??___fladd
  6137  1309  0861               	movf	??___fladd,w
  6138  130A  00DB               	movwf	___fladd@b+2
  6139  130B                     l2568:
  6140  130B  086C               	movf	___fladd@grs,w
  6141  130C  00E1               	movwf	??___fladd
  6142  130D  0861               	movf	??___fladd,w
  6143  130E  00DF               	movwf	___fladd@a+2
  6144  130F                     l2570:
  6145  130F  085C               	movf	___fladd@b+3,w
  6146  1310  00E1               	movwf	??___fladd
  6147  1311  0861               	movf	??___fladd,w
  6148  1312  00EC               	movwf	___fladd@grs
  6149  1313                     l2572:
  6150  1313  0860               	movf	___fladd@a+3,w
  6151  1314  00E1               	movwf	??___fladd
  6152  1315  0861               	movf	??___fladd,w
  6153  1316  00DC               	movwf	___fladd@b+3
  6154  1317                     l2574:
  6155  1317  086C               	movf	___fladd@grs,w
  6156  1318  00E1               	movwf	??___fladd
  6157  1319  0861               	movf	??___fladd,w
  6158  131A  00E0               	movwf	___fladd@a+3
  6159  131B                     l2576:
  6160  131B  01EC               	clrf	___fladd@grs
  6161  131C                     l2578:
  6162  131C  086A               	movf	___fladd@aexp,w
  6163  131D  00E1               	movwf	??___fladd
  6164  131E  01E2               	clrf	??___fladd+1
  6165  131F  0862               	movf	??___fladd+1,w
  6166  1320  00E4               	movwf	??___fladd+3
  6167  1321  086B               	movf	___fladd@bexp,w
  6168  1322  0261               	subwf	??___fladd,w
  6169  1323  00E3               	movwf	??___fladd+2
  6170  1324  1C03               	skipc
  6171  1325  03E4               	decf	??___fladd+3,f
  6172  1326  0864               	movf	??___fladd+3,w
  6173  1327  3A80               	xorlw	128
  6174  1328  00FF               	movwf	btemp+1
  6175  1329  3080               	movlw	128
  6176  132A  027F               	subwf	btemp+1,w
  6177  132B  1D03               	skipz
  6178  132C  2B2F               	goto	u3355
  6179  132D  301A               	movlw	26
  6180  132E  0263               	subwf	??___fladd+2,w
  6181  132F                     u3355:
  6182  132F  1C03               	skipc
  6183  1330  2B32               	goto	u3351
  6184  1331  2B33               	goto	u3350
  6185  1332                     u3351:
  6186  1332  2B70               	goto	l2594
  6187  1333                     u3350:
  6188  1333                     l2580:
  6189  1333  1283               	bcf	3,5	;RP0=0, select bank0
  6190  1334  1303               	bcf	3,6	;RP1=0, select bank0
  6191  1335  085C               	movf	___fladd@b+3,w
  6192  1336  045B               	iorwf	___fladd@b+2,w
  6193  1337  045A               	iorwf	___fladd@b+1,w
  6194  1338  0459               	iorwf	___fladd@b,w
  6195  1339  1D03               	skipz
  6196  133A  2B3C               	goto	u3361
  6197  133B  2B3E               	goto	u3360
  6198  133C                     u3361:
  6199  133C  3001               	movlw	1
  6200  133D  2B3F               	goto	u3370
  6201  133E                     u3360:
  6202  133E  3000               	movlw	0
  6203  133F                     u3370:
  6204  133F  00E1               	movwf	??___fladd
  6205  1340  0861               	movf	??___fladd,w
  6206  1341  00EC               	movwf	___fladd@grs
  6207  1342  3000               	movlw	0
  6208  1343  00DC               	movwf	___fladd@b+3
  6209  1344  3000               	movlw	0
  6210  1345  00DB               	movwf	___fladd@b+2
  6211  1346  3000               	movlw	0
  6212  1347  00DA               	movwf	___fladd@b+1
  6213  1348  3000               	movlw	0
  6214  1349  00D9               	movwf	___fladd@b
  6215  134A  086A               	movf	___fladd@aexp,w
  6216  134B  00E1               	movwf	??___fladd
  6217  134C  0861               	movf	??___fladd,w
  6218  134D  00EB               	movwf	___fladd@bexp
  6219  134E  2B78               	goto	l748
  6220  134F                     l750:
  6221  134F  1C6C               	btfss	___fladd@grs,0
  6222  1350  2B52               	goto	u3381
  6223  1351  2B53               	goto	u3380
  6224  1352                     u3381:
  6225  1352  2B5C               	goto	l2584
  6226  1353                     u3380:
  6227  1353                     l2582:
  6228  1353  086C               	movf	___fladd@grs,w
  6229  1354  00E1               	movwf	??___fladd
  6230  1355  1003               	clrc
  6231  1356  0C61               	rrf	??___fladd,w
  6232  1357  3801               	iorlw	1
  6233  1358  00E2               	movwf	??___fladd+1
  6234  1359  0862               	movf	??___fladd+1,w
  6235  135A  00EC               	movwf	___fladd@grs
  6236  135B  2B5E               	goto	l2586
  6237  135C                     l2584:
  6238  135C  1003               	clrc
  6239  135D  0CEC               	rrf	___fladd@grs,f
  6240  135E                     l2586:
  6241  135E  1C59               	btfss	___fladd@b,0
  6242  135F  2B61               	goto	u3391
  6243  1360  2B62               	goto	u3390
  6244  1361                     u3391:
  6245  1361  2B63               	goto	l2590
  6246  1362                     u3390:
  6247  1362                     l2588:
  6248  1362  17EC               	bsf	___fladd@grs,7
  6249  1363                     l2590:
  6250  1363  3001               	movlw	1
  6251  1364  00E1               	movwf	??___fladd
  6252  1365                     u3405:
  6253  1365  0D5C               	rlf	___fladd@b+3,w
  6254  1366  0CDC               	rrf	___fladd@b+3,f
  6255  1367  0CDB               	rrf	___fladd@b+2,f
  6256  1368  0CDA               	rrf	___fladd@b+1,f
  6257  1369  0CD9               	rrf	___fladd@b,f
  6258  136A  0BE1               	decfsz	??___fladd& (0+127),f
  6259  136B  2B65               	goto	u3405
  6260  136C                     l2592:
  6261  136C  3001               	movlw	1
  6262  136D  00E1               	movwf	??___fladd
  6263  136E  0861               	movf	??___fladd,w
  6264  136F  07EB               	addwf	___fladd@bexp,f
  6265  1370                     l2594:
  6266  1370  1283               	bcf	3,5	;RP0=0, select bank0
  6267  1371  1303               	bcf	3,6	;RP1=0, select bank0
  6268  1372  086A               	movf	___fladd@aexp,w
  6269  1373  026B               	subwf	___fladd@bexp,w
  6270  1374  1C03               	skipc
  6271  1375  2B77               	goto	u3411
  6272  1376  2B78               	goto	u3410
  6273  1377                     u3411:
  6274  1377  2B4F               	goto	l750
  6275  1378                     u3410:
  6276  1378                     l748:
  6277  1378  1B69               	btfsc	___fladd@signs,6
  6278  1379  2B7B               	goto	u3421
  6279  137A  2B7C               	goto	u3420
  6280  137B                     u3421:
  6281  137B  2BC7               	goto	l2620
  6282  137C                     u3420:
  6283  137C                     l2596:
  6284  137C  086B               	movf	___fladd@bexp,w
  6285  137D  1D03               	btfss	3,2
  6286  137E  2B80               	goto	u3431
  6287  137F  2B81               	goto	u3430
  6288  1380                     u3431:
  6289  1380  2B8A               	goto	l2602
  6290  1381                     u3430:
  6291  1381                     l2598:
  6292  1381  3000               	movlw	0
  6293  1382  00DC               	movwf	?___fladd+3
  6294  1383  3000               	movlw	0
  6295  1384  00DB               	movwf	?___fladd+2
  6296  1385  3000               	movlw	0
  6297  1386  00DA               	movwf	?___fladd+1
  6298  1387  3000               	movlw	0
  6299  1388  00D9               	movwf	?___fladd
  6300  1389  2CF5               	goto	l757
  6301  138A                     l2602:
  6302  138A  085D               	movf	___fladd@a,w
  6303  138B  07D9               	addwf	___fladd@b,f
  6304  138C  085E               	movf	___fladd@a+1,w
  6305  138D  1103               	clrz
  6306  138E  1803               	skipnc
  6307  138F  3E01               	addlw	1
  6308  1390  1903               	skipnz
  6309  1391  2B93               	goto	u3441
  6310  1392  07DA               	addwf	___fladd@b+1,f
  6311  1393                     u3441:
  6312  1393  085F               	movf	___fladd@a+2,w
  6313  1394  1103               	clrz
  6314  1395  1803               	skipnc
  6315  1396  3E01               	addlw	1
  6316  1397  1903               	skipnz
  6317  1398  2B9A               	goto	u3442
  6318  1399  07DB               	addwf	___fladd@b+2,f
  6319  139A                     u3442:
  6320  139A  0860               	movf	___fladd@a+3,w
  6321  139B  1103               	clrz
  6322  139C  1803               	skipnc
  6323  139D  3E01               	addlw	1
  6324  139E  1903               	skipnz
  6325  139F  2BA1               	goto	u3443
  6326  13A0  07DC               	addwf	___fladd@b+3,f
  6327  13A1                     u3443:
  6328  13A1                     l2604:
  6329  13A1  1C5C               	btfss	___fladd@b+3,0
  6330  13A2  2BA4               	goto	u3451
  6331  13A3  2BA5               	goto	u3450
  6332  13A4                     u3451:
  6333  13A4  2C7B               	goto	l2654
  6334  13A5                     u3450:
  6335  13A5                     l2606:
  6336  13A5  1C6C               	btfss	___fladd@grs,0
  6337  13A6  2BA8               	goto	u3461
  6338  13A7  2BA9               	goto	u3460
  6339  13A8                     u3461:
  6340  13A8  2BB2               	goto	l2610
  6341  13A9                     u3460:
  6342  13A9                     l2608:
  6343  13A9  086C               	movf	___fladd@grs,w
  6344  13AA  00E1               	movwf	??___fladd
  6345  13AB  1003               	clrc
  6346  13AC  0C61               	rrf	??___fladd,w
  6347  13AD  3801               	iorlw	1
  6348  13AE  00E2               	movwf	??___fladd+1
  6349  13AF  0862               	movf	??___fladd+1,w
  6350  13B0  00EC               	movwf	___fladd@grs
  6351  13B1  2BB4               	goto	l2612
  6352  13B2                     l2610:
  6353  13B2  1003               	clrc
  6354  13B3  0CEC               	rrf	___fladd@grs,f
  6355  13B4                     l2612:
  6356  13B4  1C59               	btfss	___fladd@b,0
  6357  13B5  2BB7               	goto	u3471
  6358  13B6  2BB8               	goto	u3470
  6359  13B7                     u3471:
  6360  13B7  2BB9               	goto	l2616
  6361  13B8                     u3470:
  6362  13B8                     l2614:
  6363  13B8  17EC               	bsf	___fladd@grs,7
  6364  13B9                     l2616:
  6365  13B9  3001               	movlw	1
  6366  13BA  00E1               	movwf	??___fladd
  6367  13BB                     u3485:
  6368  13BB  0D5C               	rlf	___fladd@b+3,w
  6369  13BC  0CDC               	rrf	___fladd@b+3,f
  6370  13BD  0CDB               	rrf	___fladd@b+2,f
  6371  13BE  0CDA               	rrf	___fladd@b+1,f
  6372  13BF  0CD9               	rrf	___fladd@b,f
  6373  13C0  0BE1               	decfsz	??___fladd& (0+127),f
  6374  13C1  2BBB               	goto	u3485
  6375  13C2                     l2618:
  6376  13C2  3001               	movlw	1
  6377  13C3  00E1               	movwf	??___fladd
  6378  13C4  0861               	movf	??___fladd,w
  6379  13C5  07EB               	addwf	___fladd@bexp,f
  6380  13C6  2C7B               	goto	l2654
  6381  13C7                     l2620:
  6382  13C7  085C               	movf	___fladd@b+3,w
  6383  13C8  3A80               	xorlw	128
  6384  13C9  00FF               	movwf	btemp+1
  6385  13CA  0860               	movf	___fladd@a+3,w
  6386  13CB  3A80               	xorlw	128
  6387  13CC  027F               	subwf	btemp+1,w
  6388  13CD  1D03               	skipz
  6389  13CE  2BD9               	goto	u3493
  6390  13CF  085F               	movf	___fladd@a+2,w
  6391  13D0  025B               	subwf	___fladd@b+2,w
  6392  13D1  1D03               	skipz
  6393  13D2  2BD9               	goto	u3493
  6394  13D3  085E               	movf	___fladd@a+1,w
  6395  13D4  025A               	subwf	___fladd@b+1,w
  6396  13D5  1D03               	skipz
  6397  13D6  2BD9               	goto	u3493
  6398  13D7  085D               	movf	___fladd@a,w
  6399  13D8  0259               	subwf	___fladd@b,w
  6400  13D9                     u3493:
  6401  13D9  1803               	skipnc
  6402  13DA  2BDC               	goto	u3491
  6403  13DB  2BDD               	goto	u3490
  6404  13DC                     u3491:
  6405  13DC  2C35               	goto	l2630
  6406  13DD                     u3490:
  6407  13DD                     l2622:
  6408  13DD  30FF               	movlw	255
  6409  13DE  00E1               	movwf	??___fladd
  6410  13DF  30FF               	movlw	255
  6411  13E0  00E2               	movwf	??___fladd+1
  6412  13E1  30FF               	movlw	255
  6413  13E2  00E3               	movwf	??___fladd+2
  6414  13E3  30FF               	movlw	255
  6415  13E4  00E4               	movwf	??___fladd+3
  6416  13E5  085D               	movf	___fladd@a,w
  6417  13E6  00E5               	movwf	??___fladd+4
  6418  13E7  085E               	movf	___fladd@a+1,w
  6419  13E8  00E6               	movwf	??___fladd+5
  6420  13E9  085F               	movf	___fladd@a+2,w
  6421  13EA  00E7               	movwf	??___fladd+6
  6422  13EB  0860               	movf	___fladd@a+3,w
  6423  13EC  00E8               	movwf	??___fladd+7
  6424  13ED  0859               	movf	___fladd@b,w
  6425  13EE  02E5               	subwf	??___fladd+4,f
  6426  13EF  085A               	movf	___fladd@b+1,w
  6427  13F0  1C03               	skipc
  6428  13F1  0F5A               	incfsz	___fladd@b+1,w
  6429  13F2  2BF4               	goto	u3501
  6430  13F3  2BF5               	goto	u3502
  6431  13F4                     u3501:
  6432  13F4  02E6               	subwf	??___fladd+5,f
  6433  13F5                     u3502:
  6434  13F5  085B               	movf	___fladd@b+2,w
  6435  13F6  1C03               	skipc
  6436  13F7  0F5B               	incfsz	___fladd@b+2,w
  6437  13F8  2BFA               	goto	u3503
  6438  13F9  2BFB               	goto	u3504
  6439  13FA                     u3503:
  6440  13FA  02E7               	subwf	??___fladd+6,f
  6441  13FB                     u3504:
  6442  13FB  085C               	movf	___fladd@b+3,w
  6443  13FC  1C03               	skipc
  6444  13FD  0F5C               	incfsz	___fladd@b+3,w
  6445  13FE  2C00               	goto	u3505
  6446  13FF  2C01               	goto	u3506
  6447  1400                     u3505:
  6448  1400  02E8               	subwf	??___fladd+7,f
  6449  1401                     u3506:
  6450  1401  0865               	movf	??___fladd+4,w
  6451  1402  07E1               	addwf	??___fladd,f
  6452  1403  0866               	movf	??___fladd+5,w
  6453  1404  1803               	skipnc
  6454  1405  0F66               	incfsz	??___fladd+5,w
  6455  1406  2C08               	goto	u3510
  6456  1407  2C09               	goto	u3511
  6457  1408                     u3510:
  6458  1408  07E2               	addwf	??___fladd+1,f
  6459  1409                     u3511:
  6460  1409  0867               	movf	??___fladd+6,w
  6461  140A  1803               	skipnc
  6462  140B  0F67               	incfsz	??___fladd+6,w
  6463  140C  2C0E               	goto	u3512
  6464  140D  2C0F               	goto	u3513
  6465  140E                     u3512:
  6466  140E  07E3               	addwf	??___fladd+2,f
  6467  140F                     u3513:
  6468  140F  0868               	movf	??___fladd+7,w
  6469  1410  1803               	skipnc
  6470  1411  0A68               	incf	??___fladd+7,w
  6471  1412  07E4               	addwf	??___fladd+3,f
  6472  1413  0864               	movf	??___fladd+3,w
  6473  1414  00DC               	movwf	___fladd@b+3
  6474  1415  0863               	movf	??___fladd+2,w
  6475  1416  00DB               	movwf	___fladd@b+2
  6476  1417  0862               	movf	??___fladd+1,w
  6477  1418  00DA               	movwf	___fladd@b+1
  6478  1419  0861               	movf	??___fladd,w
  6479  141A  00D9               	movwf	___fladd@b
  6480  141B                     l2624:
  6481  141B  3080               	movlw	128
  6482  141C  00E1               	movwf	??___fladd
  6483  141D  0861               	movf	??___fladd,w
  6484  141E  06E9               	xorwf	___fladd@signs,f
  6485  141F  09EC               	comf	___fladd@grs,f
  6486  1420  0AEC               	incf	___fladd@grs,f
  6487  1421                     l2626:
  6488  1421  086C               	movf	___fladd@grs,w
  6489  1422  1D03               	btfss	3,2
  6490  1423  2C25               	goto	u3521
  6491  1424  2C26               	goto	u3520
  6492  1425                     u3521:
  6493  1425  2C43               	goto	l765
  6494  1426                     u3520:
  6495  1426                     l2628:
  6496  1426  3001               	movlw	1
  6497  1427  07D9               	addwf	___fladd@b,f
  6498  1428  3000               	movlw	0
  6499  1429  1803               	skipnc
  6500  142A  3001               	movlw	1
  6501  142B  07DA               	addwf	___fladd@b+1,f
  6502  142C  3000               	movlw	0
  6503  142D  1803               	skipnc
  6504  142E  3001               	movlw	1
  6505  142F  07DB               	addwf	___fladd@b+2,f
  6506  1430  3000               	movlw	0
  6507  1431  1803               	skipnc
  6508  1432  3001               	movlw	1
  6509  1433  07DC               	addwf	___fladd@b+3,f
  6510  1434  2C43               	goto	l765
  6511  1435                     l2630:
  6512  1435  085D               	movf	___fladd@a,w
  6513  1436  02D9               	subwf	___fladd@b,f
  6514  1437  085E               	movf	___fladd@a+1,w
  6515  1438  1C03               	skipc
  6516  1439  0F5E               	incfsz	___fladd@a+1,w
  6517  143A  02DA               	subwf	___fladd@b+1,f
  6518  143B  085F               	movf	___fladd@a+2,w
  6519  143C  1C03               	skipc
  6520  143D  0F5F               	incfsz	___fladd@a+2,w
  6521  143E  02DB               	subwf	___fladd@b+2,f
  6522  143F  0860               	movf	___fladd@a+3,w
  6523  1440  1C03               	skipc
  6524  1441  0F60               	incfsz	___fladd@a+3,w
  6525  1442  02DC               	subwf	___fladd@b+3,f
  6526  1443                     l765:
  6527  1443  085C               	movf	___fladd@b+3,w
  6528  1444  045B               	iorwf	___fladd@b+2,w
  6529  1445  045A               	iorwf	___fladd@b+1,w
  6530  1446  0459               	iorwf	___fladd@b,w
  6531  1447  1D03               	skipz
  6532  1448  2C4A               	goto	u3531
  6533  1449  2C4B               	goto	u3530
  6534  144A                     u3531:
  6535  144A  2C77               	goto	l2652
  6536  144B                     u3530:
  6537  144B                     l2632:
  6538  144B  086C               	movf	___fladd@grs,w
  6539  144C  1D03               	btfss	3,2
  6540  144D  2C4F               	goto	u3541
  6541  144E  2C50               	goto	u3540
  6542  144F                     u3541:
  6543  144F  2C77               	goto	l2652
  6544  1450                     u3540:
  6545  1450                     l2634:
  6546  1450  3000               	movlw	0
  6547  1451  00DC               	movwf	?___fladd+3
  6548  1452  3000               	movlw	0
  6549  1453  00DB               	movwf	?___fladd+2
  6550  1454  3000               	movlw	0
  6551  1455  00DA               	movwf	?___fladd+1
  6552  1456  3000               	movlw	0
  6553  1457  00D9               	movwf	?___fladd
  6554  1458  2CF5               	goto	l757
  6555  1459                     l2638:
  6556  1459  3001               	movlw	1
  6557  145A  00E1               	movwf	??___fladd
  6558  145B                     u3555:
  6559  145B  1003               	clrc
  6560  145C  0DD9               	rlf	___fladd@b,f
  6561  145D  0DDA               	rlf	___fladd@b+1,f
  6562  145E  0DDB               	rlf	___fladd@b+2,f
  6563  145F  0DDC               	rlf	___fladd@b+3,f
  6564  1460  0BE1               	decfsz	??___fladd,f
  6565  1461  2C5B               	goto	u3555
  6566  1462                     l2640:
  6567  1462  1FEC               	btfss	___fladd@grs,7
  6568  1463  2C65               	goto	u3561
  6569  1464  2C66               	goto	u3560
  6570  1465                     u3561:
  6571  1465  2C67               	goto	l769
  6572  1466                     u3560:
  6573  1466                     l2642:
  6574  1466  1459               	bsf	___fladd@b,0
  6575  1467                     l769:
  6576  1467  1C6C               	btfss	___fladd@grs,0
  6577  1468  2C6A               	goto	u3571
  6578  1469  2C6B               	goto	u3570
  6579  146A                     u3571:
  6580  146A  2C6E               	goto	l2646
  6581  146B                     u3570:
  6582  146B                     l2644:
  6583  146B  1403               	setc
  6584  146C  0DEC               	rlf	___fladd@grs,f
  6585  146D  2C70               	goto	l2648
  6586  146E                     l2646:
  6587  146E  1003               	clrc
  6588  146F  0DEC               	rlf	___fladd@grs,f
  6589  1470                     l2648:
  6590  1470  086B               	movf	___fladd@bexp,w
  6591  1471  1903               	btfsc	3,2
  6592  1472  2C74               	goto	u3581
  6593  1473  2C75               	goto	u3580
  6594  1474                     u3581:
  6595  1474  2C77               	goto	l2652
  6596  1475                     u3580:
  6597  1475                     l2650:
  6598  1475  3001               	movlw	1
  6599  1476  02EB               	subwf	___fladd@bexp,f
  6600  1477                     l2652:
  6601  1477  1FDB               	btfss	___fladd@b+2,7
  6602  1478  2C7A               	goto	u3591
  6603  1479  2C7B               	goto	u3590
  6604  147A                     u3591:
  6605  147A  2C59               	goto	l2638
  6606  147B                     u3590:
  6607  147B                     l2654:
  6608  147B  01EA               	clrf	___fladd@aexp
  6609  147C                     l2656:
  6610  147C  1FEC               	btfss	___fladd@grs,7
  6611  147D  2C7F               	goto	u3601
  6612  147E  2C80               	goto	u3600
  6613  147F                     u3601:
  6614  147F  2C8E               	goto	l2664
  6615  1480                     u3600:
  6616  1480                     l2658:
  6617  1480  086C               	movf	___fladd@grs,w
  6618  1481  397F               	andlw	127
  6619  1482  1903               	btfsc	3,2
  6620  1483  2C85               	goto	u3611
  6621  1484  2C86               	goto	u3610
  6622  1485                     u3611:
  6623  1485  2C89               	goto	l775
  6624  1486                     u3610:
  6625  1486                     l2660:
  6626  1486  01EA               	clrf	___fladd@aexp
  6627  1487  0AEA               	incf	___fladd@aexp,f
  6628  1488  2C8E               	goto	l2664
  6629  1489                     l775:
  6630  1489  1C59               	btfss	___fladd@b,0
  6631  148A  2C8C               	goto	u3621
  6632  148B  2C8D               	goto	u3620
  6633  148C                     u3621:
  6634  148C  2C8E               	goto	l2664
  6635  148D                     u3620:
  6636  148D  2C86               	goto	l2660
  6637  148E                     l2664:
  6638  148E  086A               	movf	___fladd@aexp,w
  6639  148F  1903               	btfsc	3,2
  6640  1490  2C92               	goto	u3631
  6641  1491  2C93               	goto	u3630
  6642  1492                     u3631:
  6643  1492  2CC7               	goto	l778
  6644  1493                     u3630:
  6645  1493                     l2666:
  6646  1493  3001               	movlw	1
  6647  1494  07D9               	addwf	___fladd@b,f
  6648  1495  3000               	movlw	0
  6649  1496  1803               	skipnc
  6650  1497  3001               	movlw	1
  6651  1498  07DA               	addwf	___fladd@b+1,f
  6652  1499  3000               	movlw	0
  6653  149A  1803               	skipnc
  6654  149B  3001               	movlw	1
  6655  149C  07DB               	addwf	___fladd@b+2,f
  6656  149D  3000               	movlw	0
  6657  149E  1803               	skipnc
  6658  149F  3001               	movlw	1
  6659  14A0  07DC               	addwf	___fladd@b+3,f
  6660  14A1                     l2668:
  6661  14A1  1C5C               	btfss	___fladd@b+3,0
  6662  14A2  2CA4               	goto	u3641
  6663  14A3  2CA5               	goto	u3640
  6664  14A4                     u3641:
  6665  14A4  2CC7               	goto	l778
  6666  14A5                     u3640:
  6667  14A5                     l2670:
  6668  14A5  0859               	movf	___fladd@b,w
  6669  14A6  00E1               	movwf	??___fladd
  6670  14A7  085A               	movf	___fladd@b+1,w
  6671  14A8  00E2               	movwf	??___fladd+1
  6672  14A9  085B               	movf	___fladd@b+2,w
  6673  14AA  00E3               	movwf	??___fladd+2
  6674  14AB  085C               	movf	___fladd@b+3,w
  6675  14AC  00E4               	movwf	??___fladd+3
  6676  14AD  3001               	movlw	1
  6677  14AE  00E5               	movwf	??___fladd+4
  6678  14AF                     u3655:
  6679  14AF  0D64               	rlf	??___fladd+3,w
  6680  14B0  0CE4               	rrf	??___fladd+3,f
  6681  14B1  0CE3               	rrf	??___fladd+2,f
  6682  14B2  0CE2               	rrf	??___fladd+1,f
  6683  14B3  0CE1               	rrf	??___fladd,f
  6684  14B4                     u3650:
  6685  14B4  0BE5               	decfsz	??___fladd+4,f
  6686  14B5  2CAF               	goto	u3655
  6687  14B6  0864               	movf	??___fladd+3,w
  6688  14B7  00DC               	movwf	___fladd@b+3
  6689  14B8  0863               	movf	??___fladd+2,w
  6690  14B9  00DB               	movwf	___fladd@b+2
  6691  14BA  0862               	movf	??___fladd+1,w
  6692  14BB  00DA               	movwf	___fladd@b+1
  6693  14BC  0861               	movf	??___fladd,w
  6694  14BD  00D9               	movwf	___fladd@b
  6695  14BE  0A6B               	incf	___fladd@bexp,w
  6696  14BF  1903               	btfsc	3,2
  6697  14C0  2CC2               	goto	u3661
  6698  14C1  2CC3               	goto	u3660
  6699  14C2                     u3661:
  6700  14C2  2CC7               	goto	l778
  6701  14C3                     u3660:
  6702  14C3                     l2672:
  6703  14C3  3001               	movlw	1
  6704  14C4  00E1               	movwf	??___fladd
  6705  14C5  0861               	movf	??___fladd,w
  6706  14C6  07EB               	addwf	___fladd@bexp,f
  6707  14C7                     l778:
  6708  14C7  0A6B               	incf	___fladd@bexp,w
  6709  14C8  1903               	btfsc	3,2
  6710  14C9  2CCB               	goto	u3671
  6711  14CA  2CCC               	goto	u3670
  6712  14CB                     u3671:
  6713  14CB  2CD1               	goto	l2676
  6714  14CC                     u3670:
  6715  14CC                     l2674:
  6716  14CC  086B               	movf	___fladd@bexp,w
  6717  14CD  1D03               	btfss	3,2
  6718  14CE  2CD0               	goto	u3681
  6719  14CF  2CD1               	goto	u3680
  6720  14D0                     u3681:
  6721  14D0  2CDF               	goto	l2682
  6722  14D1                     u3680:
  6723  14D1                     l2676:
  6724  14D1  3000               	movlw	0
  6725  14D2  00DC               	movwf	___fladd@b+3
  6726  14D3  3000               	movlw	0
  6727  14D4  00DB               	movwf	___fladd@b+2
  6728  14D5  3000               	movlw	0
  6729  14D6  00DA               	movwf	___fladd@b+1
  6730  14D7  3000               	movlw	0
  6731  14D8  00D9               	movwf	___fladd@b
  6732  14D9                     l2678:
  6733  14D9  086B               	movf	___fladd@bexp,w
  6734  14DA  1D03               	btfss	3,2
  6735  14DB  2CDD               	goto	u3691
  6736  14DC  2CDE               	goto	u3690
  6737  14DD                     u3691:
  6738  14DD  2CDF               	goto	l2682
  6739  14DE                     u3690:
  6740  14DE                     l2680:
  6741  14DE  01E9               	clrf	___fladd@signs
  6742  14DF                     l2682:
  6743  14DF  1C6B               	btfss	___fladd@bexp,0
  6744  14E0  2CE2               	goto	u3701
  6745  14E1  2CE3               	goto	u3700
  6746  14E2                     u3701:
  6747  14E2  2CE5               	goto	l2686
  6748  14E3                     u3700:
  6749  14E3                     l2684:
  6750  14E3  17DB               	bsf	___fladd@b+2,7
  6751  14E4  2CE9               	goto	l786
  6752  14E5                     l2686:
  6753  14E5  307F               	movlw	127
  6754  14E6  00E1               	movwf	??___fladd
  6755  14E7  0861               	movf	??___fladd,w
  6756  14E8  05DB               	andwf	___fladd@b+2,f
  6757  14E9                     l786:
  6758  14E9  086B               	movf	___fladd@bexp,w
  6759  14EA  00E1               	movwf	??___fladd
  6760  14EB  1003               	clrc
  6761  14EC  0C61               	rrf	??___fladd,w
  6762  14ED  00E2               	movwf	??___fladd+1
  6763  14EE  0862               	movf	??___fladd+1,w
  6764  14EF  00DC               	movwf	___fladd@b+3
  6765  14F0                     l2688:
  6766  14F0  1FE9               	btfss	___fladd@signs,7
  6767  14F1  2CF3               	goto	u3711
  6768  14F2  2CF4               	goto	u3710
  6769  14F3                     u3711:
  6770  14F3  2CF5               	goto	l787
  6771  14F4                     u3710:
  6772  14F4                     l2690:
  6773  14F4  17DC               	bsf	___fladd@b+3,7
  6774  14F5                     l787:
  6775  14F5                     l757:
  6776  14F5  0008               	return
  6777  14F6                     __end_of___fladd:
  6778                           
  6779                           	psect	text17
  6780  199D                     __ptext17:	
  6781 ;; *************** function ___flneg *****************
  6782 ;; Defined at:
  6783 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  f1              4    3[COMMON] unsigned char 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  4    3[COMMON] unsigned char 
  6790 ;; Registers used:
  6791 ;;		wreg
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6797 ;;      Params:         4       0       0       0       0
  6798 ;;      Locals:         0       0       0       0       0
  6799 ;;      Temps:          0       0       0       0       0
  6800 ;;      Totals:         4       0       0       0       0
  6801 ;;Total ram usage:        4 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    1
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_sprintf
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           
  6812                           ;psect for function ___flneg
  6813  199D                     ___flneg:
  6814  199D                     l3100:	
  6815                           ;incstack = 0
  6816                           ; Regs used in ___flneg: [wreg]
  6817                           
  6818  199D  0876               	movf	___flneg@f1+3,w
  6819  199E  0475               	iorwf	___flneg@f1+2,w
  6820  199F  0474               	iorwf	___flneg@f1+1,w
  6821  19A0  0473               	iorwf	___flneg@f1,w
  6822  19A1  1903               	skipnz
  6823  19A2  29A4               	goto	u4841
  6824  19A3  29A5               	goto	u4840
  6825  19A4                     u4841:
  6826  19A4  29A7               	goto	l3104
  6827  19A5                     u4840:
  6828  19A5                     l3102:
  6829  19A5  3080               	movlw	128
  6830  19A6  06F6               	xorwf	___flneg@f1+3,f
  6831  19A7                     l3104:
  6832  19A7                     l616:
  6833  19A7  0008               	return
  6834  19A8                     __end_of___flneg:
  6835                           
  6836                           	psect	text18
  6837  1DE3                     __ptext18:	
  6838 ;; *************** function ___flge *****************
  6839 ;; Defined at:
  6840 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  ff1             4    0[BANK0 ] unsigned char 
  6843 ;;  ff2             4    4[BANK0 ] unsigned char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;		None               void
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6855 ;;      Params:         0       8       0       0       0
  6856 ;;      Locals:         0       0       0       0       0
  6857 ;;      Temps:          4       0       0       0       0
  6858 ;;      Totals:         4       8       0       0       0
  6859 ;;Total ram usage:       12 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    1
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_sprintf
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           
  6870                           ;psect for function ___flge
  6871  1DE3                     ___flge:
  6872  1DE3                     l4062:	
  6873                           ;incstack = 0
  6874                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6875                           
  6876  1DE3  3000               	movlw	0
  6877  1DE4  1283               	bcf	3,5	;RP0=0, select bank0
  6878  1DE5  1303               	bcf	3,6	;RP1=0, select bank0
  6879  1DE6  0520               	andwf	___flge@ff1,w
  6880  1DE7  00F3               	movwf	??___flge
  6881  1DE8  3000               	movlw	0
  6882  1DE9  0521               	andwf	___flge@ff1+1,w
  6883  1DEA  00F4               	movwf	??___flge+1
  6884  1DEB  3080               	movlw	128
  6885  1DEC  0522               	andwf	___flge@ff1+2,w
  6886  1DED  00F5               	movwf	??___flge+2
  6887  1DEE  307F               	movlw	127
  6888  1DEF  0523               	andwf	___flge@ff1+3,w
  6889  1DF0  00F6               	movwf	??___flge+3
  6890  1DF1  0876               	movf	??___flge+3,w
  6891  1DF2  0475               	iorwf	??___flge+2,w
  6892  1DF3  0474               	iorwf	??___flge+1,w
  6893  1DF4  0473               	iorwf	??___flge,w
  6894  1DF5  1D03               	skipz
  6895  1DF6  2DF8               	goto	u6731
  6896  1DF7  2DF9               	goto	u6730
  6897  1DF8                     u6731:
  6898  1DF8  2E01               	goto	l608
  6899  1DF9                     u6730:
  6900  1DF9                     l4064:
  6901  1DF9  3000               	movlw	0
  6902  1DFA  00A3               	movwf	___flge@ff1+3
  6903  1DFB  3000               	movlw	0
  6904  1DFC  00A2               	movwf	___flge@ff1+2
  6905  1DFD  3000               	movlw	0
  6906  1DFE  00A1               	movwf	___flge@ff1+1
  6907  1DFF  3000               	movlw	0
  6908  1E00  00A0               	movwf	___flge@ff1
  6909  1E01                     l608:
  6910  1E01  3000               	movlw	0
  6911  1E02  0524               	andwf	___flge@ff2,w
  6912  1E03  00F3               	movwf	??___flge
  6913  1E04  3000               	movlw	0
  6914  1E05  0525               	andwf	___flge@ff2+1,w
  6915  1E06  00F4               	movwf	??___flge+1
  6916  1E07  3080               	movlw	128
  6917  1E08  0526               	andwf	___flge@ff2+2,w
  6918  1E09  00F5               	movwf	??___flge+2
  6919  1E0A  307F               	movlw	127
  6920  1E0B  0527               	andwf	___flge@ff2+3,w
  6921  1E0C  00F6               	movwf	??___flge+3
  6922  1E0D  0876               	movf	??___flge+3,w
  6923  1E0E  0475               	iorwf	??___flge+2,w
  6924  1E0F  0474               	iorwf	??___flge+1,w
  6925  1E10  0473               	iorwf	??___flge,w
  6926  1E11  1D03               	skipz
  6927  1E12  2E14               	goto	u6741
  6928  1E13  2E15               	goto	u6740
  6929  1E14                     u6741:
  6930  1E14  2E1D               	goto	l4068
  6931  1E15                     u6740:
  6932  1E15                     l4066:
  6933  1E15  3000               	movlw	0
  6934  1E16  00A7               	movwf	___flge@ff2+3
  6935  1E17  3000               	movlw	0
  6936  1E18  00A6               	movwf	___flge@ff2+2
  6937  1E19  3000               	movlw	0
  6938  1E1A  00A5               	movwf	___flge@ff2+1
  6939  1E1B  3000               	movlw	0
  6940  1E1C  00A4               	movwf	___flge@ff2
  6941  1E1D                     l4068:
  6942  1E1D  1FA3               	btfss	___flge@ff1+3,7
  6943  1E1E  2E20               	goto	u6751
  6944  1E1F  2E21               	goto	u6750
  6945  1E20                     u6751:
  6946  1E20  2E45               	goto	l4072
  6947  1E21                     u6750:
  6948  1E21                     l4070:
  6949  1E21  3000               	movlw	0
  6950  1E22  00F3               	movwf	??___flge
  6951  1E23  3000               	movlw	0
  6952  1E24  00F4               	movwf	??___flge+1
  6953  1E25  3000               	movlw	0
  6954  1E26  00F5               	movwf	??___flge+2
  6955  1E27  3080               	movlw	128
  6956  1E28  00F6               	movwf	??___flge+3
  6957  1E29  0820               	movf	___flge@ff1,w
  6958  1E2A  02F3               	subwf	??___flge,f
  6959  1E2B  0821               	movf	___flge@ff1+1,w
  6960  1E2C  1C03               	skipc
  6961  1E2D  0F21               	incfsz	___flge@ff1+1,w
  6962  1E2E  2E30               	goto	u6761
  6963  1E2F  2E31               	goto	u6762
  6964  1E30                     u6761:
  6965  1E30  02F4               	subwf	??___flge+1,f
  6966  1E31                     u6762:
  6967  1E31  0822               	movf	___flge@ff1+2,w
  6968  1E32  1C03               	skipc
  6969  1E33  0F22               	incfsz	___flge@ff1+2,w
  6970  1E34  2E36               	goto	u6763
  6971  1E35  2E37               	goto	u6764
  6972  1E36                     u6763:
  6973  1E36  02F5               	subwf	??___flge+2,f
  6974  1E37                     u6764:
  6975  1E37  0823               	movf	___flge@ff1+3,w
  6976  1E38  1C03               	skipc
  6977  1E39  0F23               	incfsz	___flge@ff1+3,w
  6978  1E3A  2E3C               	goto	u6765
  6979  1E3B  2E3D               	goto	u6766
  6980  1E3C                     u6765:
  6981  1E3C  02F6               	subwf	??___flge+3,f
  6982  1E3D                     u6766:
  6983  1E3D  0876               	movf	??___flge+3,w
  6984  1E3E  00A3               	movwf	___flge@ff1+3
  6985  1E3F  0875               	movf	??___flge+2,w
  6986  1E40  00A2               	movwf	___flge@ff1+2
  6987  1E41  0874               	movf	??___flge+1,w
  6988  1E42  00A1               	movwf	___flge@ff1+1
  6989  1E43  0873               	movf	??___flge,w
  6990  1E44  00A0               	movwf	___flge@ff1
  6991  1E45                     l4072:
  6992  1E45  1FA7               	btfss	___flge@ff2+3,7
  6993  1E46  2E48               	goto	u6771
  6994  1E47  2E49               	goto	u6770
  6995  1E48                     u6771:
  6996  1E48  2E6D               	goto	l611
  6997  1E49                     u6770:
  6998  1E49                     l4074:
  6999  1E49  3000               	movlw	0
  7000  1E4A  00F3               	movwf	??___flge
  7001  1E4B  3000               	movlw	0
  7002  1E4C  00F4               	movwf	??___flge+1
  7003  1E4D  3000               	movlw	0
  7004  1E4E  00F5               	movwf	??___flge+2
  7005  1E4F  3080               	movlw	128
  7006  1E50  00F6               	movwf	??___flge+3
  7007  1E51  0824               	movf	___flge@ff2,w
  7008  1E52  02F3               	subwf	??___flge,f
  7009  1E53  0825               	movf	___flge@ff2+1,w
  7010  1E54  1C03               	skipc
  7011  1E55  0F25               	incfsz	___flge@ff2+1,w
  7012  1E56  2E58               	goto	u6781
  7013  1E57  2E59               	goto	u6782
  7014  1E58                     u6781:
  7015  1E58  02F4               	subwf	??___flge+1,f
  7016  1E59                     u6782:
  7017  1E59  0826               	movf	___flge@ff2+2,w
  7018  1E5A  1C03               	skipc
  7019  1E5B  0F26               	incfsz	___flge@ff2+2,w
  7020  1E5C  2E5E               	goto	u6783
  7021  1E5D  2E5F               	goto	u6784
  7022  1E5E                     u6783:
  7023  1E5E  02F5               	subwf	??___flge+2,f
  7024  1E5F                     u6784:
  7025  1E5F  0827               	movf	___flge@ff2+3,w
  7026  1E60  1C03               	skipc
  7027  1E61  0F27               	incfsz	___flge@ff2+3,w
  7028  1E62  2E64               	goto	u6785
  7029  1E63  2E65               	goto	u6786
  7030  1E64                     u6785:
  7031  1E64  02F6               	subwf	??___flge+3,f
  7032  1E65                     u6786:
  7033  1E65  0876               	movf	??___flge+3,w
  7034  1E66  00A7               	movwf	___flge@ff2+3
  7035  1E67  0875               	movf	??___flge+2,w
  7036  1E68  00A6               	movwf	___flge@ff2+2
  7037  1E69  0874               	movf	??___flge+1,w
  7038  1E6A  00A5               	movwf	___flge@ff2+1
  7039  1E6B  0873               	movf	??___flge,w
  7040  1E6C  00A4               	movwf	___flge@ff2
  7041  1E6D                     l611:
  7042  1E6D  3080               	movlw	128
  7043  1E6E  06A3               	xorwf	___flge@ff1+3,f
  7044  1E6F  3080               	movlw	128
  7045  1E70  06A7               	xorwf	___flge@ff2+3,f
  7046  1E71  0827               	movf	___flge@ff2+3,w
  7047  1E72  0223               	subwf	___flge@ff1+3,w
  7048  1E73  1D03               	skipz
  7049  1E74  2E7F               	goto	u6795
  7050  1E75  0826               	movf	___flge@ff2+2,w
  7051  1E76  0222               	subwf	___flge@ff1+2,w
  7052  1E77  1D03               	skipz
  7053  1E78  2E7F               	goto	u6795
  7054  1E79  0825               	movf	___flge@ff2+1,w
  7055  1E7A  0221               	subwf	___flge@ff1+1,w
  7056  1E7B  1D03               	skipz
  7057  1E7C  2E7F               	goto	u6795
  7058  1E7D  0824               	movf	___flge@ff2,w
  7059  1E7E  0220               	subwf	___flge@ff1,w
  7060  1E7F                     u6795:
  7061  1E7F  1803               	skipnc
  7062  1E80  2E82               	goto	u6791
  7063  1E81  2E83               	goto	u6790
  7064  1E82                     u6791:
  7065  1E82  2E85               	goto	l4078
  7066  1E83                     u6790:
  7067  1E83                     l4076:
  7068  1E83  1003               	clrc
  7069  1E84  2E86               	goto	l612
  7070  1E85                     l4078:
  7071  1E85  1403               	setc
  7072  1E86                     l612:
  7073  1E86  0008               	return
  7074  1E87                     __end_of___flge:
  7075                           
  7076                           	psect	text19
  7077  1BC1                     __ptext19:	
  7078 ;; *************** function ___fleq *****************
  7079 ;; Defined at:
  7080 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  ff1             4    0[BANK0 ] unsigned char 
  7083 ;;  ff2             4    4[BANK0 ] unsigned char 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;		None
  7086 ;; Return value:  Size  Location     Type
  7087 ;;		None               void
  7088 ;; Registers used:
  7089 ;;		wreg, status,2, status,0
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7095 ;;      Params:         0       8       0       0       0
  7096 ;;      Locals:         0       0       0       0       0
  7097 ;;      Temps:          4       0       0       0       0
  7098 ;;      Totals:         4       8       0       0       0
  7099 ;;Total ram usage:       12 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:    1
  7102 ;; This function calls:
  7103 ;;		Nothing
  7104 ;; This function is called by:
  7105 ;;		_sprintf
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           
  7110                           ;psect for function ___fleq
  7111  1BC1                     ___fleq:
  7112  1BC1                     l4050:	
  7113                           ;incstack = 0
  7114                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7115                           
  7116  1BC1  3000               	movlw	0
  7117  1BC2  1283               	bcf	3,5	;RP0=0, select bank0
  7118  1BC3  1303               	bcf	3,6	;RP1=0, select bank0
  7119  1BC4  0520               	andwf	___fleq@ff1,w
  7120  1BC5  00F3               	movwf	??___fleq
  7121  1BC6  3000               	movlw	0
  7122  1BC7  0521               	andwf	___fleq@ff1+1,w
  7123  1BC8  00F4               	movwf	??___fleq+1
  7124  1BC9  3080               	movlw	128
  7125  1BCA  0522               	andwf	___fleq@ff1+2,w
  7126  1BCB  00F5               	movwf	??___fleq+2
  7127  1BCC  307F               	movlw	127
  7128  1BCD  0523               	andwf	___fleq@ff1+3,w
  7129  1BCE  00F6               	movwf	??___fleq+3
  7130  1BCF  0876               	movf	??___fleq+3,w
  7131  1BD0  0475               	iorwf	??___fleq+2,w
  7132  1BD1  0474               	iorwf	??___fleq+1,w
  7133  1BD2  0473               	iorwf	??___fleq,w
  7134  1BD3  1D03               	skipz
  7135  1BD4  2BD6               	goto	u6701
  7136  1BD5  2BD7               	goto	u6700
  7137  1BD6                     u6701:
  7138  1BD6  2BDF               	goto	l603
  7139  1BD7                     u6700:
  7140  1BD7                     l4052:
  7141  1BD7  3000               	movlw	0
  7142  1BD8  00A3               	movwf	___fleq@ff1+3
  7143  1BD9  3000               	movlw	0
  7144  1BDA  00A2               	movwf	___fleq@ff1+2
  7145  1BDB  3000               	movlw	0
  7146  1BDC  00A1               	movwf	___fleq@ff1+1
  7147  1BDD  3000               	movlw	0
  7148  1BDE  00A0               	movwf	___fleq@ff1
  7149  1BDF                     l603:
  7150  1BDF  3000               	movlw	0
  7151  1BE0  0524               	andwf	___fleq@ff2,w
  7152  1BE1  00F3               	movwf	??___fleq
  7153  1BE2  3000               	movlw	0
  7154  1BE3  0525               	andwf	___fleq@ff2+1,w
  7155  1BE4  00F4               	movwf	??___fleq+1
  7156  1BE5  3080               	movlw	128
  7157  1BE6  0526               	andwf	___fleq@ff2+2,w
  7158  1BE7  00F5               	movwf	??___fleq+2
  7159  1BE8  307F               	movlw	127
  7160  1BE9  0527               	andwf	___fleq@ff2+3,w
  7161  1BEA  00F6               	movwf	??___fleq+3
  7162  1BEB  0876               	movf	??___fleq+3,w
  7163  1BEC  0475               	iorwf	??___fleq+2,w
  7164  1BED  0474               	iorwf	??___fleq+1,w
  7165  1BEE  0473               	iorwf	??___fleq,w
  7166  1BEF  1D03               	skipz
  7167  1BF0  2BF2               	goto	u6711
  7168  1BF1  2BF3               	goto	u6710
  7169  1BF2                     u6711:
  7170  1BF2  2BFB               	goto	l604
  7171  1BF3                     u6710:
  7172  1BF3                     l4054:
  7173  1BF3  3000               	movlw	0
  7174  1BF4  00A7               	movwf	___fleq@ff2+3
  7175  1BF5  3000               	movlw	0
  7176  1BF6  00A6               	movwf	___fleq@ff2+2
  7177  1BF7  3000               	movlw	0
  7178  1BF8  00A5               	movwf	___fleq@ff2+1
  7179  1BF9  3000               	movlw	0
  7180  1BFA  00A4               	movwf	___fleq@ff2
  7181  1BFB                     l604:
  7182  1BFB  0827               	movf	___fleq@ff2+3,w
  7183  1BFC  0623               	xorwf	___fleq@ff1+3,w
  7184  1BFD  1D03               	skipz
  7185  1BFE  2C09               	goto	u6725
  7186  1BFF  0826               	movf	___fleq@ff2+2,w
  7187  1C00  0622               	xorwf	___fleq@ff1+2,w
  7188  1C01  1D03               	skipz
  7189  1C02  2C09               	goto	u6725
  7190  1C03  0825               	movf	___fleq@ff2+1,w
  7191  1C04  0621               	xorwf	___fleq@ff1+1,w
  7192  1C05  1D03               	skipz
  7193  1C06  2C09               	goto	u6725
  7194  1C07  0824               	movf	___fleq@ff2,w
  7195  1C08  0620               	xorwf	___fleq@ff1,w
  7196  1C09                     u6725:
  7197  1C09  1903               	skipnz
  7198  1C0A  2C0C               	goto	u6721
  7199  1C0B  2C0D               	goto	u6720
  7200  1C0C                     u6721:
  7201  1C0C  2C0F               	goto	l4058
  7202  1C0D                     u6720:
  7203  1C0D                     l4056:
  7204  1C0D  1003               	clrc
  7205  1C0E  2C10               	goto	l605
  7206  1C0F                     l4058:
  7207  1C0F  1403               	setc
  7208  1C10                     l605:
  7209  1C10  0008               	return
  7210  1C11                     __end_of___fleq:
  7211                           
  7212                           	psect	text20
  7213  1989                     __ptext20:	
  7214 ;; *************** function _spiRead *****************
  7215 ;; Defined at:
  7216 ;;		line 48 in file "SPI.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      unsigned char 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, pclath, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7230 ;;      Params:         0       0       0       0       0
  7231 ;;      Locals:         0       0       0       0       0
  7232 ;;      Temps:          0       0       0       0       0
  7233 ;;      Totals:         0       0       0       0       0
  7234 ;;Total ram usage:        0 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    2
  7237 ;; This function calls:
  7238 ;;		_spiReceiveWait
  7239 ;; This function is called by:
  7240 ;;		_main
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           
  7245                           ;psect for function _spiRead
  7246  1989                     _spiRead:
  7247  1989                     l3278:	
  7248                           ;incstack = 0
  7249                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  7250                           
  7251                           
  7252                           ;SPI.c: 50:     spiReceiveWait();
  7253  1989  160A  158A  217A  160A  158A  	fcall	_spiReceiveWait
  7254  198E                     l3280:
  7255                           
  7256                           ;SPI.c: 51:     return(SSPBUF);
  7257  198E  1283               	bcf	3,5	;RP0=0, select bank0
  7258  198F  1303               	bcf	3,6	;RP1=0, select bank0
  7259  1990  0813               	movf	19,w	;volatile
  7260  1991                     l212:
  7261  1991  0008               	return
  7262  1992                     __end_of_spiRead:
  7263                           
  7264                           	psect	text21
  7265  197A                     __ptext21:	
  7266 ;; *************** function _spiReceiveWait *****************
  7267 ;; Defined at:
  7268 ;;		line 30 in file "SPI.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;		None
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;		None
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  1    wreg      void 
  7275 ;; Registers used:
  7276 ;;		None
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7282 ;;      Params:         0       0       0       0       0
  7283 ;;      Locals:         0       0       0       0       0
  7284 ;;      Temps:          0       0       0       0       0
  7285 ;;      Totals:         0       0       0       0       0
  7286 ;;Total ram usage:        0 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; Hardware stack levels required when called:    1
  7289 ;; This function calls:
  7290 ;;		Nothing
  7291 ;; This function is called by:
  7292 ;;		_spiRead
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           
  7297                           ;psect for function _spiReceiveWait
  7298  197A                     _spiReceiveWait:
  7299  197A                     l2854:	
  7300                           ;incstack = 0
  7301                           ; Regs used in _spiReceiveWait: []
  7302                           
  7303  197A                     l198:	
  7304                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  7305                           
  7306  197A  1683               	bsf	3,5	;RP0=1, select bank1
  7307  197B  1303               	bcf	3,6	;RP1=0, select bank1
  7308  197C  1C14               	btfss	20,0	;volatile
  7309  197D  297F               	goto	u4091
  7310  197E  2980               	goto	u4090
  7311  197F                     u4091:
  7312  197F  297A               	goto	l198
  7313  1980                     u4090:
  7314  1980                     l201:
  7315  1980  0008               	return
  7316  1981                     __end_of_spiReceiveWait:
  7317                           
  7318                           	psect	text22
  7319  19EA                     __ptext22:	
  7320 ;; *************** function _spiInit *****************
  7321 ;; Defined at:
  7322 ;;		line 13 in file "SPI.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  sType           1    wreg     enum E1264
  7325 ;;  sDataSample     1    3[COMMON] enum E1272
  7326 ;;  sClockIdle      1    4[COMMON] enum E1276
  7327 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;  sType           1    6[COMMON] enum E1264
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      void 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7339 ;;      Params:         3       0       0       0       0
  7340 ;;      Locals:         1       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0
  7342 ;;      Totals:         4       0       0       0       0
  7343 ;;Total ram usage:        4 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; Hardware stack levels required when called:    1
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_main
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           
  7354                           ;psect for function _spiInit
  7355  19EA                     _spiInit:
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  7359                           ;spiInit@sType stored from wreg
  7360  19EA  00F6               	movwf	spiInit@sType
  7361  19EB                     l3248:
  7362                           
  7363                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
  7364  19EB  1683               	bsf	3,5	;RP0=1, select bank1
  7365  19EC  1303               	bcf	3,6	;RP1=0, select bank1
  7366  19ED  1287               	bcf	7,5	;volatile
  7367                           
  7368                           ;SPI.c: 16:     if(sType & 0b00000100)
  7369  19EE  1D76               	btfss	spiInit@sType,2
  7370  19EF  29F1               	goto	u5151
  7371  19F0  29F2               	goto	u5150
  7372  19F1                     u5151:
  7373  19F1  29F6               	goto	l3254
  7374  19F2                     u5150:
  7375  19F2                     l3250:
  7376                           
  7377                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
  7378  19F2  0875               	movf	spiInit@sTransmitEdge,w
  7379  19F3  0094               	movwf	20	;volatile
  7380  19F4                     l3252:
  7381                           
  7382                           ;SPI.c: 19:         TRISC3 = 1;
  7383  19F4  1587               	bsf	7,3	;volatile
  7384                           
  7385                           ;SPI.c: 20:     }
  7386  19F5  29FA               	goto	l194
  7387  19F6                     l3254:
  7388                           
  7389                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  7390  19F6  0873               	movf	spiInit@sDataSample,w
  7391  19F7  0475               	iorwf	spiInit@sTransmitEdge,w
  7392  19F8  0094               	movwf	20	;volatile
  7393  19F9                     l3256:
  7394                           
  7395                           ;SPI.c: 24:         TRISC3 = 0;
  7396  19F9  1187               	bcf	7,3	;volatile
  7397  19FA                     l194:	
  7398                           ;SPI.c: 25:     }
  7399                           
  7400                           
  7401                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
  7402  19FA  0876               	movf	spiInit@sType,w
  7403  19FB  0474               	iorwf	spiInit@sClockIdle,w
  7404  19FC  1283               	bcf	3,5	;RP0=0, select bank0
  7405  19FD  1303               	bcf	3,6	;RP1=0, select bank0
  7406  19FE  0094               	movwf	20	;volatile
  7407  19FF                     l195:
  7408  19FF  0008               	return
  7409  1A00                     __end_of_spiInit:
  7410                           
  7411                           	psect	text23
  7412  19C6                     __ptext23:	
  7413 ;; *************** function _setup *****************
  7414 ;; Defined at:
  7415 ;;		line 176 in file "main.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;		None
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;		None
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      void 
  7422 ;; Registers used:
  7423 ;;		wreg, status,2
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7429 ;;      Params:         0       0       0       0       0
  7430 ;;      Locals:         0       0       0       0       0
  7431 ;;      Temps:          0       0       0       0       0
  7432 ;;      Totals:         0       0       0       0       0
  7433 ;;Total ram usage:        0 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    1
  7436 ;; This function calls:
  7437 ;;		Nothing
  7438 ;; This function is called by:
  7439 ;;		_main
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           
  7444                           ;psect for function _setup
  7445  19C6                     _setup:
  7446  19C6                     l3214:	
  7447                           ;incstack = 0
  7448                           ; Regs used in _setup: [wreg+status,2]
  7449                           
  7450                           
  7451                           ;main.c: 177:     TRISD = 0b00000000;
  7452  19C6  1683               	bsf	3,5	;RP0=1, select bank1
  7453  19C7  1303               	bcf	3,6	;RP1=0, select bank1
  7454  19C8  0188               	clrf	8	;volatile
  7455  19C9                     l3216:
  7456                           
  7457                           ;main.c: 178:     TRISC = 0b10010000;
  7458  19C9  3090               	movlw	144
  7459  19CA  0087               	movwf	7	;volatile
  7460  19CB                     l3218:
  7461                           
  7462                           ;main.c: 179:     TRISE = 0b00000000;
  7463  19CB  0189               	clrf	9	;volatile
  7464  19CC                     l3220:
  7465                           
  7466                           ;main.c: 180:     TRISB = 0b00000000;
  7467  19CC  0186               	clrf	6	;volatile
  7468  19CD                     l3222:
  7469                           
  7470                           ;main.c: 181:     ANSEL = 0b00000011;
  7471  19CD  3003               	movlw	3
  7472  19CE  1683               	bsf	3,5	;RP0=1, select bank3
  7473  19CF  1703               	bsf	3,6	;RP1=1, select bank3
  7474  19D0  0088               	movwf	8	;volatile
  7475                           
  7476                           ;main.c: 182:     PORTC = 0;
  7477  19D1  1283               	bcf	3,5	;RP0=0, select bank0
  7478  19D2  1303               	bcf	3,6	;RP1=0, select bank0
  7479  19D3  0187               	clrf	7	;volatile
  7480                           
  7481                           ;main.c: 183:     PORTD = 0;
  7482  19D4  0188               	clrf	8	;volatile
  7483                           
  7484                           ;main.c: 184:     PORTE = 0;
  7485  19D5  0189               	clrf	9	;volatile
  7486                           
  7487                           ;main.c: 185:     PORTB = 0;
  7488  19D6  0186               	clrf	6	;volatile
  7489  19D7                     l91:
  7490  19D7  0008               	return
  7491  19D8                     __end_of_setup:
  7492                           
  7493                           	psect	text24
  7494  1992                     __ptext24:	
  7495 ;; *************** function _recibir *****************
  7496 ;; Defined at:
  7497 ;;		line 40 in file "USART.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;		None
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;		None
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		None
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7511 ;;      Params:         0       0       0       0       0
  7512 ;;      Locals:         0       0       0       0       0
  7513 ;;      Temps:          0       0       0       0       0
  7514 ;;      Totals:         0       0       0       0       0
  7515 ;;Total ram usage:        0 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    1
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_main
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           
  7526                           ;psect for function _recibir
  7527  1992                     _recibir:
  7528  1992                     l3234:	
  7529                           ;incstack = 0
  7530                           ; Regs used in _recibir: []
  7531                           
  7532                           
  7533                           ;USART.c: 41:     RCSTAbits.CREN = 1;
  7534  1992  1283               	bcf	3,5	;RP0=0, select bank0
  7535  1993  1303               	bcf	3,6	;RP1=0, select bank0
  7536  1994  1618               	bsf	24,4	;volatile
  7537                           
  7538                           ;USART.c: 42:     RCSTAbits.FERR = 0;
  7539  1995  1118               	bcf	24,2	;volatile
  7540                           
  7541                           ;USART.c: 43:     PIE1bits.RCIE = 1;
  7542  1996  1683               	bsf	3,5	;RP0=1, select bank1
  7543  1997  1303               	bcf	3,6	;RP1=0, select bank1
  7544  1998  168C               	bsf	12,5	;volatile
  7545                           
  7546                           ;USART.c: 44:     RCSTAbits.OERR = 0;
  7547  1999  1283               	bcf	3,5	;RP0=0, select bank0
  7548  199A  1303               	bcf	3,6	;RP1=0, select bank0
  7549  199B  1098               	bcf	24,1	;volatile
  7550  199C                     l178:
  7551  199C  0008               	return
  7552  199D                     __end_of_recibir:
  7553                           
  7554                           	psect	text25
  7555  1005                     __ptext25:	
  7556 ;; *************** function _conversor2 *****************
  7557 ;; Defined at:
  7558 ;;		line 199 in file "main.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  val             1    wreg     unsigned char 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  val             1   45[BANK0 ] unsigned char 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  4   37[BANK0 ] float 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7572 ;;      Params:         0       4       0       0       0
  7573 ;;      Locals:         0       1       0       0       0
  7574 ;;      Temps:          0       4       0       0       0
  7575 ;;      Totals:         0       9       0       0       0
  7576 ;;Total ram usage:        9 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    3
  7579 ;; This function calls:
  7580 ;;		___flmul
  7581 ;;		___xxtofl
  7582 ;; This function is called by:
  7583 ;;		_main
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           
  7588                           ;psect for function _conversor2
  7589  1005                     _conversor2:
  7590                           
  7591                           ;incstack = 0
  7592                           ; Regs used in _conversor2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7593                           ;conversor2@val stored from wreg
  7594  1005  1283               	bcf	3,5	;RP0=0, select bank0
  7595  1006  1303               	bcf	3,6	;RP1=0, select bank0
  7596  1007  00CD               	movwf	conversor2@val
  7597  1008                     l4178:
  7598                           
  7599                           ;main.c: 200:     vv = 1.95 * val;
  7600  1008  303F               	movlw	63
  7601  1009  00AE               	movwf	___flmul@b+3
  7602  100A  30F9               	movlw	249
  7603  100B  00AD               	movwf	___flmul@b+2
  7604  100C  3099               	movlw	153
  7605  100D  00AC               	movwf	___flmul@b+1
  7606  100E  309A               	movlw	154
  7607  100F  00AB               	movwf	___flmul@b
  7608  1010  084D               	movf	conversor2@val,w
  7609  1011  00C9               	movwf	??_conversor2
  7610  1012  01CA               	clrf	??_conversor2+1
  7611  1013  01CB               	clrf	??_conversor2+2
  7612  1014  01CC               	clrf	??_conversor2+3
  7613  1015  084C               	movf	??_conversor2+3,w
  7614  1016  00F6               	movwf	___xxtofl@val+3
  7615  1017  084B               	movf	??_conversor2+2,w
  7616  1018  00F5               	movwf	___xxtofl@val+2
  7617  1019  084A               	movf	??_conversor2+1,w
  7618  101A  00F4               	movwf	___xxtofl@val+1
  7619  101B  0849               	movf	??_conversor2,w
  7620  101C  00F3               	movwf	___xxtofl@val
  7621  101D  3001               	movlw	1
  7622  101E  160A  158A  2687  160A  118A  	fcall	___xxtofl
  7623  1023  0876               	movf	?___xxtofl+3,w
  7624  1024  1283               	bcf	3,5	;RP0=0, select bank0
  7625  1025  1303               	bcf	3,6	;RP1=0, select bank0
  7626  1026  00B2               	movwf	___flmul@a+3
  7627  1027  0875               	movf	?___xxtofl+2,w
  7628  1028  00B1               	movwf	___flmul@a+2
  7629  1029  0874               	movf	?___xxtofl+1,w
  7630  102A  00B0               	movwf	___flmul@a+1
  7631  102B  0873               	movf	?___xxtofl,w
  7632  102C  00AF               	movwf	___flmul@a
  7633  102D  120A  158A  213C  160A  118A  	fcall	___flmul
  7634  1032  1283               	bcf	3,5	;RP0=0, select bank0
  7635  1033  1303               	bcf	3,6	;RP1=0, select bank0
  7636  1034  082E               	movf	?___flmul+3,w
  7637  1035  1683               	bsf	3,5	;RP0=1, select bank1
  7638  1036  1303               	bcf	3,6	;RP1=0, select bank1
  7639  1037  00DB               	movwf	(_vv+3)^(0+128)
  7640  1038  1283               	bcf	3,5	;RP0=0, select bank0
  7641  1039  1303               	bcf	3,6	;RP1=0, select bank0
  7642  103A  082D               	movf	?___flmul+2,w
  7643  103B  1683               	bsf	3,5	;RP0=1, select bank1
  7644  103C  1303               	bcf	3,6	;RP1=0, select bank1
  7645  103D  00DA               	movwf	(_vv+2)^(0+128)
  7646  103E  1283               	bcf	3,5	;RP0=0, select bank0
  7647  103F  1303               	bcf	3,6	;RP1=0, select bank0
  7648  1040  082C               	movf	?___flmul+1,w
  7649  1041  1683               	bsf	3,5	;RP0=1, select bank1
  7650  1042  1303               	bcf	3,6	;RP1=0, select bank1
  7651  1043  00D9               	movwf	(_vv+1)^(0+128)
  7652  1044  1283               	bcf	3,5	;RP0=0, select bank0
  7653  1045  1303               	bcf	3,6	;RP1=0, select bank0
  7654  1046  082B               	movf	?___flmul,w
  7655  1047  1683               	bsf	3,5	;RP0=1, select bank1
  7656  1048  1303               	bcf	3,6	;RP1=0, select bank1
  7657  1049  00D8               	movwf	_vv^(0+128)
  7658  104A                     l4180:
  7659                           
  7660                           ;main.c: 201:     return (vv);
  7661  104A  085B               	movf	(_vv+3)^(0+128),w
  7662  104B  1283               	bcf	3,5	;RP0=0, select bank0
  7663  104C  1303               	bcf	3,6	;RP1=0, select bank0
  7664  104D  00C8               	movwf	?_conversor2+3
  7665  104E  1683               	bsf	3,5	;RP0=1, select bank1
  7666  104F  1303               	bcf	3,6	;RP1=0, select bank1
  7667  1050  085A               	movf	(_vv+2)^(0+128),w
  7668  1051  1283               	bcf	3,5	;RP0=0, select bank0
  7669  1052  1303               	bcf	3,6	;RP1=0, select bank0
  7670  1053  00C7               	movwf	?_conversor2+2
  7671  1054  1683               	bsf	3,5	;RP0=1, select bank1
  7672  1055  1303               	bcf	3,6	;RP1=0, select bank1
  7673  1056  0859               	movf	(_vv+1)^(0+128),w
  7674  1057  1283               	bcf	3,5	;RP0=0, select bank0
  7675  1058  1303               	bcf	3,6	;RP1=0, select bank0
  7676  1059  00C6               	movwf	?_conversor2+1
  7677  105A  1683               	bsf	3,5	;RP0=1, select bank1
  7678  105B  1303               	bcf	3,6	;RP1=0, select bank1
  7679  105C  0858               	movf	_vv^(0+128),w
  7680  105D  1283               	bcf	3,5	;RP0=0, select bank0
  7681  105E  1303               	bcf	3,6	;RP1=0, select bank0
  7682  105F  00C5               	movwf	?_conversor2
  7683  1060                     l97:
  7684  1060  0008               	return
  7685  1061                     __end_of_conversor2:
  7686                           
  7687                           	psect	text26
  7688  1E87                     __ptext26:	
  7689 ;; *************** function ___xxtofl *****************
  7690 ;; Defined at:
  7691 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  sign            1    wreg     unsigned char 
  7694 ;;  val             4    3[COMMON] long 
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;  sign            1    4[BANK0 ] unsigned char 
  7697 ;;  arg             4    6[BANK0 ] unsigned long 
  7698 ;;  exp             1    5[BANK0 ] unsigned char 
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  4    3[COMMON] unsigned char 
  7701 ;; Registers used:
  7702 ;;		wreg, status,2, status,0
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7708 ;;      Params:         4       0       0       0       0
  7709 ;;      Locals:         0       6       0       0       0
  7710 ;;      Temps:          0       4       0       0       0
  7711 ;;      Totals:         4      10       0       0       0
  7712 ;;Total ram usage:       14 bytes
  7713 ;; Hardware stack levels used:    1
  7714 ;; Hardware stack levels required when called:    1
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_conversor2
  7719 ;;		_sprintf
  7720 ;;		_conversor
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           
  7725                           ;psect for function ___xxtofl
  7726  1E87                     ___xxtofl:
  7727                           
  7728                           ;incstack = 0
  7729                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7730                           ;___xxtofl@sign stored from wreg
  7731  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  7732  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  7733  1E89  00A4               	movwf	___xxtofl@sign
  7734  1E8A                     l4102:
  7735  1E8A  0824               	movf	___xxtofl@sign,w
  7736  1E8B  1903               	btfsc	3,2
  7737  1E8C  2E8E               	goto	u6861
  7738  1E8D  2E8F               	goto	u6860
  7739  1E8E                     u6861:
  7740  1E8E  2EA3               	goto	l4108
  7741  1E8F                     u6860:
  7742  1E8F                     l4104:
  7743  1E8F  1FF6               	btfss	___xxtofl@val+3,7
  7744  1E90  2E92               	goto	u6871
  7745  1E91  2E93               	goto	u6870
  7746  1E92                     u6871:
  7747  1E92  2EA3               	goto	l4108
  7748  1E93                     u6870:
  7749  1E93                     l4106:
  7750  1E93  0973               	comf	___xxtofl@val,w
  7751  1E94  00A6               	movwf	___xxtofl@arg
  7752  1E95  0974               	comf	___xxtofl@val+1,w
  7753  1E96  00A7               	movwf	___xxtofl@arg+1
  7754  1E97  0975               	comf	___xxtofl@val+2,w
  7755  1E98  00A8               	movwf	___xxtofl@arg+2
  7756  1E99  0976               	comf	___xxtofl@val+3,w
  7757  1E9A  00A9               	movwf	___xxtofl@arg+3
  7758  1E9B  0AA6               	incf	___xxtofl@arg,f
  7759  1E9C  1903               	skipnz
  7760  1E9D  0AA7               	incf	___xxtofl@arg+1,f
  7761  1E9E  1903               	skipnz
  7762  1E9F  0AA8               	incf	___xxtofl@arg+2,f
  7763  1EA0  1903               	skipnz
  7764  1EA1  0AA9               	incf	___xxtofl@arg+3,f
  7765  1EA2  2EAB               	goto	l884
  7766  1EA3                     l4108:
  7767  1EA3  0876               	movf	___xxtofl@val+3,w
  7768  1EA4  00A9               	movwf	___xxtofl@arg+3
  7769  1EA5  0875               	movf	___xxtofl@val+2,w
  7770  1EA6  00A8               	movwf	___xxtofl@arg+2
  7771  1EA7  0874               	movf	___xxtofl@val+1,w
  7772  1EA8  00A7               	movwf	___xxtofl@arg+1
  7773  1EA9  0873               	movf	___xxtofl@val,w
  7774  1EAA  00A6               	movwf	___xxtofl@arg
  7775  1EAB                     l884:
  7776  1EAB  0876               	movf	___xxtofl@val+3,w
  7777  1EAC  0475               	iorwf	___xxtofl@val+2,w
  7778  1EAD  0474               	iorwf	___xxtofl@val+1,w
  7779  1EAE  0473               	iorwf	___xxtofl@val,w
  7780  1EAF  1D03               	skipz
  7781  1EB0  2EB2               	goto	u6881
  7782  1EB1  2EB3               	goto	u6880
  7783  1EB2                     u6881:
  7784  1EB2  2EBC               	goto	l4114
  7785  1EB3                     u6880:
  7786  1EB3                     l4110:
  7787  1EB3  3000               	movlw	0
  7788  1EB4  00F6               	movwf	?___xxtofl+3
  7789  1EB5  3000               	movlw	0
  7790  1EB6  00F5               	movwf	?___xxtofl+2
  7791  1EB7  3000               	movlw	0
  7792  1EB8  00F4               	movwf	?___xxtofl+1
  7793  1EB9  3000               	movlw	0
  7794  1EBA  00F3               	movwf	?___xxtofl
  7795  1EBB  2F42               	goto	l886
  7796  1EBC                     l4114:
  7797  1EBC  3096               	movlw	150
  7798  1EBD  00A0               	movwf	??___xxtofl
  7799  1EBE  0820               	movf	??___xxtofl,w
  7800  1EBF  00A5               	movwf	___xxtofl@exp
  7801  1EC0  2ECE               	goto	l4118
  7802  1EC1                     l4116:
  7803  1EC1  3001               	movlw	1
  7804  1EC2  00A0               	movwf	??___xxtofl
  7805  1EC3  0820               	movf	??___xxtofl,w
  7806  1EC4  07A5               	addwf	___xxtofl@exp,f
  7807  1EC5  3001               	movlw	1
  7808  1EC6                     u6895:
  7809  1EC6  1003               	clrc
  7810  1EC7  0CA9               	rrf	___xxtofl@arg+3,f
  7811  1EC8  0CA8               	rrf	___xxtofl@arg+2,f
  7812  1EC9  0CA7               	rrf	___xxtofl@arg+1,f
  7813  1ECA  0CA6               	rrf	___xxtofl@arg,f
  7814  1ECB  3EFF               	addlw	-1
  7815  1ECC  1D03               	skipz
  7816  1ECD  2EC6               	goto	u6895
  7817  1ECE                     l4118:
  7818  1ECE  30FE               	movlw	254
  7819  1ECF  0529               	andwf	___xxtofl@arg+3,w
  7820  1ED0  1D03               	btfss	3,2
  7821  1ED1  2ED3               	goto	u6901
  7822  1ED2  2ED4               	goto	u6900
  7823  1ED3                     u6901:
  7824  1ED3  2EC1               	goto	l4116
  7825  1ED4                     u6900:
  7826  1ED4  2EF0               	goto	l890
  7827  1ED5                     l4120:
  7828  1ED5  3001               	movlw	1
  7829  1ED6  00A0               	movwf	??___xxtofl
  7830  1ED7  0820               	movf	??___xxtofl,w
  7831  1ED8  07A5               	addwf	___xxtofl@exp,f
  7832  1ED9                     l4122:
  7833  1ED9  3001               	movlw	1
  7834  1EDA  07A6               	addwf	___xxtofl@arg,f
  7835  1EDB  3000               	movlw	0
  7836  1EDC  1803               	skipnc
  7837  1EDD  3001               	movlw	1
  7838  1EDE  07A7               	addwf	___xxtofl@arg+1,f
  7839  1EDF  3000               	movlw	0
  7840  1EE0  1803               	skipnc
  7841  1EE1  3001               	movlw	1
  7842  1EE2  07A8               	addwf	___xxtofl@arg+2,f
  7843  1EE3  3000               	movlw	0
  7844  1EE4  1803               	skipnc
  7845  1EE5  3001               	movlw	1
  7846  1EE6  07A9               	addwf	___xxtofl@arg+3,f
  7847  1EE7                     l4124:
  7848  1EE7  3001               	movlw	1
  7849  1EE8                     u6915:
  7850  1EE8  1003               	clrc
  7851  1EE9  0CA9               	rrf	___xxtofl@arg+3,f
  7852  1EEA  0CA8               	rrf	___xxtofl@arg+2,f
  7853  1EEB  0CA7               	rrf	___xxtofl@arg+1,f
  7854  1EEC  0CA6               	rrf	___xxtofl@arg,f
  7855  1EED  3EFF               	addlw	-1
  7856  1EEE  1D03               	skipz
  7857  1EEF  2EE8               	goto	u6915
  7858  1EF0                     l890:
  7859  1EF0  30FF               	movlw	255
  7860  1EF1  0529               	andwf	___xxtofl@arg+3,w
  7861  1EF2  1D03               	btfss	3,2
  7862  1EF3  2EF5               	goto	u6921
  7863  1EF4  2EF6               	goto	u6920
  7864  1EF5                     u6921:
  7865  1EF5  2ED5               	goto	l4120
  7866  1EF6                     u6920:
  7867  1EF6  2F02               	goto	l4128
  7868  1EF7                     l4126:
  7869  1EF7  3001               	movlw	1
  7870  1EF8  02A5               	subwf	___xxtofl@exp,f
  7871  1EF9  3001               	movlw	1
  7872  1EFA  00A0               	movwf	??___xxtofl
  7873  1EFB                     u6935:
  7874  1EFB  1003               	clrc
  7875  1EFC  0DA6               	rlf	___xxtofl@arg,f
  7876  1EFD  0DA7               	rlf	___xxtofl@arg+1,f
  7877  1EFE  0DA8               	rlf	___xxtofl@arg+2,f
  7878  1EFF  0DA9               	rlf	___xxtofl@arg+3,f
  7879  1F00  0BA0               	decfsz	??___xxtofl,f
  7880  1F01  2EFB               	goto	u6935
  7881  1F02                     l4128:
  7882  1F02  1BA8               	btfsc	___xxtofl@arg+2,7
  7883  1F03  2F05               	goto	u6941
  7884  1F04  2F06               	goto	u6940
  7885  1F05                     u6941:
  7886  1F05  2F0C               	goto	l897
  7887  1F06                     u6940:
  7888  1F06                     l4130:
  7889  1F06  3002               	movlw	2
  7890  1F07  0225               	subwf	___xxtofl@exp,w
  7891  1F08  1803               	skipnc
  7892  1F09  2F0B               	goto	u6951
  7893  1F0A  2F0C               	goto	u6950
  7894  1F0B                     u6951:
  7895  1F0B  2EF7               	goto	l4126
  7896  1F0C                     u6950:
  7897  1F0C                     l897:
  7898  1F0C  1825               	btfsc	___xxtofl@exp,0
  7899  1F0D  2F0F               	goto	u6961
  7900  1F0E  2F10               	goto	u6960
  7901  1F0F                     u6961:
  7902  1F0F  2F18               	goto	l898
  7903  1F10                     u6960:
  7904  1F10                     l4132:
  7905  1F10  30FF               	movlw	255
  7906  1F11  05A6               	andwf	___xxtofl@arg,f
  7907  1F12  30FF               	movlw	255
  7908  1F13  05A7               	andwf	___xxtofl@arg+1,f
  7909  1F14  307F               	movlw	127
  7910  1F15  05A8               	andwf	___xxtofl@arg+2,f
  7911  1F16  30FF               	movlw	255
  7912  1F17  05A9               	andwf	___xxtofl@arg+3,f
  7913  1F18                     l898:
  7914  1F18  1003               	clrc
  7915  1F19  0CA5               	rrf	___xxtofl@exp,f
  7916  1F1A                     l4134:
  7917  1F1A  0825               	movf	___xxtofl@exp,w
  7918  1F1B  00A0               	movwf	??___xxtofl
  7919  1F1C  01A1               	clrf	??___xxtofl+1
  7920  1F1D  01A2               	clrf	??___xxtofl+2
  7921  1F1E  01A3               	clrf	??___xxtofl+3
  7922  1F1F  3018               	movlw	24
  7923  1F20                     u6975:
  7924  1F20  1003               	clrc
  7925  1F21  0DA0               	rlf	??___xxtofl,f
  7926  1F22  0DA1               	rlf	??___xxtofl+1,f
  7927  1F23  0DA2               	rlf	??___xxtofl+2,f
  7928  1F24  0DA3               	rlf	??___xxtofl+3,f
  7929  1F25                     u6970:
  7930  1F25  3EFF               	addlw	-1
  7931  1F26  1D03               	skipz
  7932  1F27  2F20               	goto	u6975
  7933  1F28  0820               	movf	??___xxtofl,w
  7934  1F29  04A6               	iorwf	___xxtofl@arg,f
  7935  1F2A  0821               	movf	??___xxtofl+1,w
  7936  1F2B  04A7               	iorwf	___xxtofl@arg+1,f
  7937  1F2C  0822               	movf	??___xxtofl+2,w
  7938  1F2D  04A8               	iorwf	___xxtofl@arg+2,f
  7939  1F2E  0823               	movf	??___xxtofl+3,w
  7940  1F2F  04A9               	iorwf	___xxtofl@arg+3,f
  7941  1F30                     l4136:
  7942  1F30  0824               	movf	___xxtofl@sign,w
  7943  1F31  1903               	btfsc	3,2
  7944  1F32  2F34               	goto	u6981
  7945  1F33  2F35               	goto	u6980
  7946  1F34                     u6981:
  7947  1F34  2F3A               	goto	l4142
  7948  1F35                     u6980:
  7949  1F35                     l4138:
  7950  1F35  1FF6               	btfss	___xxtofl@val+3,7
  7951  1F36  2F38               	goto	u6991
  7952  1F37  2F39               	goto	u6990
  7953  1F38                     u6991:
  7954  1F38  2F3A               	goto	l4142
  7955  1F39                     u6990:
  7956  1F39                     l4140:
  7957  1F39  17A9               	bsf	___xxtofl@arg+3,7
  7958  1F3A                     l4142:
  7959  1F3A  0829               	movf	___xxtofl@arg+3,w
  7960  1F3B  00F6               	movwf	?___xxtofl+3
  7961  1F3C  0828               	movf	___xxtofl@arg+2,w
  7962  1F3D  00F5               	movwf	?___xxtofl+2
  7963  1F3E  0827               	movf	___xxtofl@arg+1,w
  7964  1F3F  00F4               	movwf	?___xxtofl+1
  7965  1F40  0826               	movf	___xxtofl@arg,w
  7966  1F41  00F3               	movwf	?___xxtofl
  7967  1F42                     l886:
  7968  1F42  0008               	return
  7969  1F43                     __end_of___xxtofl:
  7970                           
  7971                           	psect	text27
  7972  093C                     __ptext27:	
  7973 ;; *************** function ___flmul *****************
  7974 ;; Defined at:
  7975 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  b               4   11[BANK0 ] unsigned char 
  7978 ;;  a               4   15[BANK0 ] unsigned char 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  prod            4   31[BANK0 ] struct .
  7981 ;;  grs             4   25[BANK0 ] unsigned long 
  7982 ;;  temp            2   35[BANK0 ] struct .
  7983 ;;  bexp            1   30[BANK0 ] unsigned char 
  7984 ;;  aexp            1   29[BANK0 ] unsigned char 
  7985 ;;  sign            1   24[BANK0 ] unsigned char 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  4   11[BANK0 ] unsigned char 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7995 ;;      Params:         0       8       0       0       0
  7996 ;;      Locals:         0      13       0       0       0
  7997 ;;      Temps:          0       5       0       0       0
  7998 ;;      Totals:         0      26       0       0       0
  7999 ;;Total ram usage:       26 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    2
  8002 ;; This function calls:
  8003 ;;		__Umul8_16
  8004 ;; This function is called by:
  8005 ;;		_conversor2
  8006 ;;		_fround
  8007 ;;		_scale
  8008 ;;		_sprintf
  8009 ;;		_conversor
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           
  8014                           ;psect for function ___flmul
  8015  093C                     ___flmul:
  8016  093C                     l2692:	
  8017                           ;incstack = 0
  8018                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8019                           
  8020  093C  1283               	bcf	3,5	;RP0=0, select bank0
  8021  093D  1303               	bcf	3,6	;RP1=0, select bank0
  8022  093E  082E               	movf	___flmul@b+3,w
  8023  093F  3980               	andlw	128
  8024  0940  00B3               	movwf	??___flmul
  8025  0941  0833               	movf	??___flmul,w
  8026  0942  00B8               	movwf	___flmul@sign
  8027  0943                     l2694:
  8028  0943  082E               	movf	___flmul@b+3,w
  8029  0944  00B3               	movwf	??___flmul
  8030  0945  0733               	addwf	??___flmul,w
  8031  0946  00B4               	movwf	??___flmul+1
  8032  0947  0834               	movf	??___flmul+1,w
  8033  0948  00BE               	movwf	___flmul@bexp
  8034  0949                     l2696:
  8035  0949  1FAD               	btfss	___flmul@b+2,7
  8036  094A  294C               	goto	u3721
  8037  094B  294D               	goto	u3720
  8038  094C                     u3721:
  8039  094C  294E               	goto	l2700
  8040  094D                     u3720:
  8041  094D                     l2698:
  8042  094D  143E               	bsf	___flmul@bexp,0
  8043  094E                     l2700:
  8044  094E  083E               	movf	___flmul@bexp,w
  8045  094F  1903               	btfsc	3,2
  8046  0950  2952               	goto	u3731
  8047  0951  2953               	goto	u3730
  8048  0952                     u3731:
  8049  0952  2962               	goto	l2708
  8050  0953                     u3730:
  8051  0953                     l2702:
  8052  0953  0A3E               	incf	___flmul@bexp,w
  8053  0954  1D03               	btfss	3,2
  8054  0955  2957               	goto	u3741
  8055  0956  2958               	goto	u3740
  8056  0957                     u3741:
  8057  0957  2960               	goto	l2706
  8058  0958                     u3740:
  8059  0958                     l2704:
  8060  0958  3000               	movlw	0
  8061  0959  00AE               	movwf	___flmul@b+3
  8062  095A  3000               	movlw	0
  8063  095B  00AD               	movwf	___flmul@b+2
  8064  095C  3000               	movlw	0
  8065  095D  00AC               	movwf	___flmul@b+1
  8066  095E  3000               	movlw	0
  8067  095F  00AB               	movwf	___flmul@b
  8068  0960                     l2706:
  8069  0960  17AD               	bsf	___flmul@b+2,7
  8070  0961  296A               	goto	l2710
  8071  0962                     l2708:
  8072  0962  3000               	movlw	0
  8073  0963  00AE               	movwf	___flmul@b+3
  8074  0964  3000               	movlw	0
  8075  0965  00AD               	movwf	___flmul@b+2
  8076  0966  3000               	movlw	0
  8077  0967  00AC               	movwf	___flmul@b+1
  8078  0968  3000               	movlw	0
  8079  0969  00AB               	movwf	___flmul@b
  8080  096A                     l2710:
  8081  096A  0832               	movf	___flmul@a+3,w
  8082  096B  3980               	andlw	128
  8083  096C  00B3               	movwf	??___flmul
  8084  096D  0833               	movf	??___flmul,w
  8085  096E  06B8               	xorwf	___flmul@sign,f
  8086  096F                     l2712:
  8087  096F  0832               	movf	___flmul@a+3,w
  8088  0970  00B3               	movwf	??___flmul
  8089  0971  0733               	addwf	??___flmul,w
  8090  0972  00B4               	movwf	??___flmul+1
  8091  0973  0834               	movf	??___flmul+1,w
  8092  0974  00BD               	movwf	___flmul@aexp
  8093  0975                     l2714:
  8094  0975  1FB1               	btfss	___flmul@a+2,7
  8095  0976  2978               	goto	u3751
  8096  0977  2979               	goto	u3750
  8097  0978                     u3751:
  8098  0978  297A               	goto	l2718
  8099  0979                     u3750:
  8100  0979                     l2716:
  8101  0979  143D               	bsf	___flmul@aexp,0
  8102  097A                     l2718:
  8103  097A  083D               	movf	___flmul@aexp,w
  8104  097B  1903               	btfsc	3,2
  8105  097C  297E               	goto	u3761
  8106  097D  297F               	goto	u3760
  8107  097E                     u3761:
  8108  097E  298E               	goto	l2726
  8109  097F                     u3760:
  8110  097F                     l2720:
  8111  097F  0A3D               	incf	___flmul@aexp,w
  8112  0980  1D03               	btfss	3,2
  8113  0981  2983               	goto	u3771
  8114  0982  2984               	goto	u3770
  8115  0983                     u3771:
  8116  0983  298C               	goto	l2724
  8117  0984                     u3770:
  8118  0984                     l2722:
  8119  0984  3000               	movlw	0
  8120  0985  00B2               	movwf	___flmul@a+3
  8121  0986  3000               	movlw	0
  8122  0987  00B1               	movwf	___flmul@a+2
  8123  0988  3000               	movlw	0
  8124  0989  00B0               	movwf	___flmul@a+1
  8125  098A  3000               	movlw	0
  8126  098B  00AF               	movwf	___flmul@a
  8127  098C                     l2724:
  8128  098C  17B1               	bsf	___flmul@a+2,7
  8129  098D  2996               	goto	l2728
  8130  098E                     l2726:
  8131  098E  3000               	movlw	0
  8132  098F  00B2               	movwf	___flmul@a+3
  8133  0990  3000               	movlw	0
  8134  0991  00B1               	movwf	___flmul@a+2
  8135  0992  3000               	movlw	0
  8136  0993  00B0               	movwf	___flmul@a+1
  8137  0994  3000               	movlw	0
  8138  0995  00AF               	movwf	___flmul@a
  8139  0996                     l2728:
  8140  0996  083D               	movf	___flmul@aexp,w
  8141  0997  1903               	btfsc	3,2
  8142  0998  299A               	goto	u3781
  8143  0999  299B               	goto	u3780
  8144  099A                     u3781:
  8145  099A  29A0               	goto	l2732
  8146  099B                     u3780:
  8147  099B                     l2730:
  8148  099B  083E               	movf	___flmul@bexp,w
  8149  099C  1D03               	btfss	3,2
  8150  099D  299F               	goto	u3791
  8151  099E  29A0               	goto	u3790
  8152  099F                     u3791:
  8153  099F  29A9               	goto	l2736
  8154  09A0                     u3790:
  8155  09A0                     l2732:
  8156  09A0  3000               	movlw	0
  8157  09A1  00AE               	movwf	?___flmul+3
  8158  09A2  3000               	movlw	0
  8159  09A3  00AD               	movwf	?___flmul+2
  8160  09A4  3000               	movlw	0
  8161  09A5  00AC               	movwf	?___flmul+1
  8162  09A6  3000               	movlw	0
  8163  09A7  00AB               	movwf	?___flmul
  8164  09A8  2C9C               	goto	l840
  8165  09A9                     l2736:
  8166  09A9  082B               	movf	___flmul@b,w
  8167  09AA  00B3               	movwf	??___flmul
  8168  09AB  0833               	movf	??___flmul,w
  8169  09AC  00F3               	movwf	__Umul8_16@multiplicand
  8170  09AD  0831               	movf	___flmul@a+2,w
  8171  09AE  160A  158A  225E  120A  158A  	fcall	__Umul8_16
  8172  09B3  0874               	movf	?__Umul8_16+1,w
  8173  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  8174  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  8175  09B6  00C4               	movwf	___flmul@temp+1
  8176  09B7  0873               	movf	?__Umul8_16,w
  8177  09B8  00C3               	movwf	___flmul@temp
  8178  09B9                     l2738:
  8179  09B9  0843               	movf	___flmul@temp,w
  8180  09BA  00B3               	movwf	??___flmul
  8181  09BB  01B4               	clrf	??___flmul+1
  8182  09BC  01B5               	clrf	??___flmul+2
  8183  09BD  01B6               	clrf	??___flmul+3
  8184  09BE  0836               	movf	??___flmul+3,w
  8185  09BF  00BC               	movwf	___flmul@grs+3
  8186  09C0  0835               	movf	??___flmul+2,w
  8187  09C1  00BB               	movwf	___flmul@grs+2
  8188  09C2  0834               	movf	??___flmul+1,w
  8189  09C3  00BA               	movwf	___flmul@grs+1
  8190  09C4  0833               	movf	??___flmul,w
  8191  09C5  00B9               	movwf	___flmul@grs
  8192  09C6                     l2740:
  8193  09C6  0844               	movf	___flmul@temp+1,w
  8194  09C7  00B3               	movwf	??___flmul
  8195  09C8  01B4               	clrf	??___flmul+1
  8196  09C9  01B5               	clrf	??___flmul+2
  8197  09CA  01B6               	clrf	??___flmul+3
  8198  09CB  0836               	movf	??___flmul+3,w
  8199  09CC  00C2               	movwf	___flmul@prod+3
  8200  09CD  0835               	movf	??___flmul+2,w
  8201  09CE  00C1               	movwf	___flmul@prod+2
  8202  09CF  0834               	movf	??___flmul+1,w
  8203  09D0  00C0               	movwf	___flmul@prod+1
  8204  09D1  0833               	movf	??___flmul,w
  8205  09D2  00BF               	movwf	___flmul@prod
  8206  09D3  082C               	movf	___flmul@b+1,w
  8207  09D4  00B3               	movwf	??___flmul
  8208  09D5  0833               	movf	??___flmul,w
  8209  09D6  00F3               	movwf	__Umul8_16@multiplicand
  8210  09D7  0830               	movf	___flmul@a+1,w
  8211  09D8  160A  158A  225E  120A  158A  	fcall	__Umul8_16
  8212  09DD  0874               	movf	?__Umul8_16+1,w
  8213  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  8214  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  8215  09E0  00C4               	movwf	___flmul@temp+1
  8216  09E1  0873               	movf	?__Umul8_16,w
  8217  09E2  00C3               	movwf	___flmul@temp
  8218  09E3                     l2742:
  8219  09E3  0843               	movf	___flmul@temp,w
  8220  09E4  00B3               	movwf	??___flmul
  8221  09E5  01B4               	clrf	??___flmul+1
  8222  09E6  01B5               	clrf	??___flmul+2
  8223  09E7  01B6               	clrf	??___flmul+3
  8224  09E8  0833               	movf	??___flmul,w
  8225  09E9  07B9               	addwf	___flmul@grs,f
  8226  09EA  0834               	movf	??___flmul+1,w
  8227  09EB  1103               	clrz
  8228  09EC  1803               	skipnc
  8229  09ED  3E01               	addlw	1
  8230  09EE  1903               	skipnz
  8231  09EF  29F1               	goto	u3801
  8232  09F0  07BA               	addwf	___flmul@grs+1,f
  8233  09F1                     u3801:
  8234  09F1  0835               	movf	??___flmul+2,w
  8235  09F2  1103               	clrz
  8236  09F3  1803               	skipnc
  8237  09F4  3E01               	addlw	1
  8238  09F5  1903               	skipnz
  8239  09F6  29F8               	goto	u3802
  8240  09F7  07BB               	addwf	___flmul@grs+2,f
  8241  09F8                     u3802:
  8242  09F8  0836               	movf	??___flmul+3,w
  8243  09F9  1103               	clrz
  8244  09FA  1803               	skipnc
  8245  09FB  3E01               	addlw	1
  8246  09FC  1903               	skipnz
  8247  09FD  29FF               	goto	u3803
  8248  09FE  07BC               	addwf	___flmul@grs+3,f
  8249  09FF                     u3803:
  8250  09FF                     l2744:
  8251  09FF  0844               	movf	___flmul@temp+1,w
  8252  0A00  00B3               	movwf	??___flmul
  8253  0A01  01B4               	clrf	??___flmul+1
  8254  0A02  01B5               	clrf	??___flmul+2
  8255  0A03  01B6               	clrf	??___flmul+3
  8256  0A04  0833               	movf	??___flmul,w
  8257  0A05  07BF               	addwf	___flmul@prod,f
  8258  0A06  0834               	movf	??___flmul+1,w
  8259  0A07  1103               	clrz
  8260  0A08  1803               	skipnc
  8261  0A09  3E01               	addlw	1
  8262  0A0A  1903               	skipnz
  8263  0A0B  2A0D               	goto	u3811
  8264  0A0C  07C0               	addwf	___flmul@prod+1,f
  8265  0A0D                     u3811:
  8266  0A0D  0835               	movf	??___flmul+2,w
  8267  0A0E  1103               	clrz
  8268  0A0F  1803               	skipnc
  8269  0A10  3E01               	addlw	1
  8270  0A11  1903               	skipnz
  8271  0A12  2A14               	goto	u3812
  8272  0A13  07C1               	addwf	___flmul@prod+2,f
  8273  0A14                     u3812:
  8274  0A14  0836               	movf	??___flmul+3,w
  8275  0A15  1103               	clrz
  8276  0A16  1803               	skipnc
  8277  0A17  3E01               	addlw	1
  8278  0A18  1903               	skipnz
  8279  0A19  2A1B               	goto	u3813
  8280  0A1A  07C2               	addwf	___flmul@prod+3,f
  8281  0A1B                     u3813:
  8282  0A1B  082D               	movf	___flmul@b+2,w
  8283  0A1C  00B3               	movwf	??___flmul
  8284  0A1D  0833               	movf	??___flmul,w
  8285  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  8286  0A1F  082F               	movf	___flmul@a,w
  8287  0A20  160A  158A  225E  120A  158A  	fcall	__Umul8_16
  8288  0A25  0874               	movf	?__Umul8_16+1,w
  8289  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8290  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8291  0A28  00C4               	movwf	___flmul@temp+1
  8292  0A29  0873               	movf	?__Umul8_16,w
  8293  0A2A  00C3               	movwf	___flmul@temp
  8294  0A2B                     l2746:
  8295  0A2B  0843               	movf	___flmul@temp,w
  8296  0A2C  00B3               	movwf	??___flmul
  8297  0A2D  01B4               	clrf	??___flmul+1
  8298  0A2E  01B5               	clrf	??___flmul+2
  8299  0A2F  01B6               	clrf	??___flmul+3
  8300  0A30  0833               	movf	??___flmul,w
  8301  0A31  07B9               	addwf	___flmul@grs,f
  8302  0A32  0834               	movf	??___flmul+1,w
  8303  0A33  1103               	clrz
  8304  0A34  1803               	skipnc
  8305  0A35  3E01               	addlw	1
  8306  0A36  1903               	skipnz
  8307  0A37  2A39               	goto	u3821
  8308  0A38  07BA               	addwf	___flmul@grs+1,f
  8309  0A39                     u3821:
  8310  0A39  0835               	movf	??___flmul+2,w
  8311  0A3A  1103               	clrz
  8312  0A3B  1803               	skipnc
  8313  0A3C  3E01               	addlw	1
  8314  0A3D  1903               	skipnz
  8315  0A3E  2A40               	goto	u3822
  8316  0A3F  07BB               	addwf	___flmul@grs+2,f
  8317  0A40                     u3822:
  8318  0A40  0836               	movf	??___flmul+3,w
  8319  0A41  1103               	clrz
  8320  0A42  1803               	skipnc
  8321  0A43  3E01               	addlw	1
  8322  0A44  1903               	skipnz
  8323  0A45  2A47               	goto	u3823
  8324  0A46  07BC               	addwf	___flmul@grs+3,f
  8325  0A47                     u3823:
  8326  0A47                     l2748:
  8327  0A47  0844               	movf	___flmul@temp+1,w
  8328  0A48  00B3               	movwf	??___flmul
  8329  0A49  01B4               	clrf	??___flmul+1
  8330  0A4A  01B5               	clrf	??___flmul+2
  8331  0A4B  01B6               	clrf	??___flmul+3
  8332  0A4C  0833               	movf	??___flmul,w
  8333  0A4D  07BF               	addwf	___flmul@prod,f
  8334  0A4E  0834               	movf	??___flmul+1,w
  8335  0A4F  1103               	clrz
  8336  0A50  1803               	skipnc
  8337  0A51  3E01               	addlw	1
  8338  0A52  1903               	skipnz
  8339  0A53  2A55               	goto	u3831
  8340  0A54  07C0               	addwf	___flmul@prod+1,f
  8341  0A55                     u3831:
  8342  0A55  0835               	movf	??___flmul+2,w
  8343  0A56  1103               	clrz
  8344  0A57  1803               	skipnc
  8345  0A58  3E01               	addlw	1
  8346  0A59  1903               	skipnz
  8347  0A5A  2A5C               	goto	u3832
  8348  0A5B  07C1               	addwf	___flmul@prod+2,f
  8349  0A5C                     u3832:
  8350  0A5C  0836               	movf	??___flmul+3,w
  8351  0A5D  1103               	clrz
  8352  0A5E  1803               	skipnc
  8353  0A5F  3E01               	addlw	1
  8354  0A60  1903               	skipnz
  8355  0A61  2A63               	goto	u3833
  8356  0A62  07C2               	addwf	___flmul@prod+3,f
  8357  0A63                     u3833:
  8358  0A63                     l2750:
  8359  0A63  3008               	movlw	8
  8360  0A64  00B3               	movwf	??___flmul
  8361  0A65                     u3845:
  8362  0A65  1003               	clrc
  8363  0A66  0DB9               	rlf	___flmul@grs,f
  8364  0A67  0DBA               	rlf	___flmul@grs+1,f
  8365  0A68  0DBB               	rlf	___flmul@grs+2,f
  8366  0A69  0DBC               	rlf	___flmul@grs+3,f
  8367  0A6A  0BB3               	decfsz	??___flmul,f
  8368  0A6B  2A65               	goto	u3845
  8369  0A6C                     l2752:
  8370  0A6C  082C               	movf	___flmul@b+1,w
  8371  0A6D  00B3               	movwf	??___flmul
  8372  0A6E  0833               	movf	??___flmul,w
  8373  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  8374  0A70  082F               	movf	___flmul@a,w
  8375  0A71  160A  158A  225E  120A  158A  	fcall	__Umul8_16
  8376  0A76  0874               	movf	?__Umul8_16+1,w
  8377  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8378  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8379  0A79  00C4               	movwf	___flmul@temp+1
  8380  0A7A  0873               	movf	?__Umul8_16,w
  8381  0A7B  00C3               	movwf	___flmul@temp
  8382  0A7C                     l2754:
  8383  0A7C  0843               	movf	___flmul@temp,w
  8384  0A7D  00B3               	movwf	??___flmul
  8385  0A7E  0844               	movf	___flmul@temp+1,w
  8386  0A7F  00B4               	movwf	??___flmul+1
  8387  0A80  01B5               	clrf	??___flmul+2
  8388  0A81  01B6               	clrf	??___flmul+3
  8389  0A82  0833               	movf	??___flmul,w
  8390  0A83  07B9               	addwf	___flmul@grs,f
  8391  0A84  0834               	movf	??___flmul+1,w
  8392  0A85  1103               	clrz
  8393  0A86  1803               	skipnc
  8394  0A87  3E01               	addlw	1
  8395  0A88  1903               	skipnz
  8396  0A89  2A8B               	goto	u3851
  8397  0A8A  07BA               	addwf	___flmul@grs+1,f
  8398  0A8B                     u3851:
  8399  0A8B  0835               	movf	??___flmul+2,w
  8400  0A8C  1103               	clrz
  8401  0A8D  1803               	skipnc
  8402  0A8E  3E01               	addlw	1
  8403  0A8F  1903               	skipnz
  8404  0A90  2A92               	goto	u3852
  8405  0A91  07BB               	addwf	___flmul@grs+2,f
  8406  0A92                     u3852:
  8407  0A92  0836               	movf	??___flmul+3,w
  8408  0A93  1103               	clrz
  8409  0A94  1803               	skipnc
  8410  0A95  3E01               	addlw	1
  8411  0A96  1903               	skipnz
  8412  0A97  2A99               	goto	u3853
  8413  0A98  07BC               	addwf	___flmul@grs+3,f
  8414  0A99                     u3853:
  8415  0A99                     l2756:
  8416  0A99  082B               	movf	___flmul@b,w
  8417  0A9A  00B3               	movwf	??___flmul
  8418  0A9B  0833               	movf	??___flmul,w
  8419  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  8420  0A9D  0830               	movf	___flmul@a+1,w
  8421  0A9E  160A  158A  225E  120A  158A  	fcall	__Umul8_16
  8422  0AA3  0874               	movf	?__Umul8_16+1,w
  8423  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8424  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8425  0AA6  00C4               	movwf	___flmul@temp+1
  8426  0AA7  0873               	movf	?__Umul8_16,w
  8427  0AA8  00C3               	movwf	___flmul@temp
  8428  0AA9                     l2758:
  8429  0AA9  0843               	movf	___flmul@temp,w
  8430  0AAA  00B3               	movwf	??___flmul
  8431  0AAB  0844               	movf	___flmul@temp+1,w
  8432  0AAC  00B4               	movwf	??___flmul+1
  8433  0AAD  01B5               	clrf	??___flmul+2
  8434  0AAE  01B6               	clrf	??___flmul+3
  8435  0AAF  0833               	movf	??___flmul,w
  8436  0AB0  07B9               	addwf	___flmul@grs,f
  8437  0AB1  0834               	movf	??___flmul+1,w
  8438  0AB2  1103               	clrz
  8439  0AB3  1803               	skipnc
  8440  0AB4  3E01               	addlw	1
  8441  0AB5  1903               	skipnz
  8442  0AB6  2AB8               	goto	u3861
  8443  0AB7  07BA               	addwf	___flmul@grs+1,f
  8444  0AB8                     u3861:
  8445  0AB8  0835               	movf	??___flmul+2,w
  8446  0AB9  1103               	clrz
  8447  0ABA  1803               	skipnc
  8448  0ABB  3E01               	addlw	1
  8449  0ABC  1903               	skipnz
  8450  0ABD  2ABF               	goto	u3862
  8451  0ABE  07BB               	addwf	___flmul@grs+2,f
  8452  0ABF                     u3862:
  8453  0ABF  0836               	movf	??___flmul+3,w
  8454  0AC0  1103               	clrz
  8455  0AC1  1803               	skipnc
  8456  0AC2  3E01               	addlw	1
  8457  0AC3  1903               	skipnz
  8458  0AC4  2AC6               	goto	u3863
  8459  0AC5  07BC               	addwf	___flmul@grs+3,f
  8460  0AC6                     u3863:
  8461  0AC6                     l2760:
  8462  0AC6  3008               	movlw	8
  8463  0AC7  00B3               	movwf	??___flmul
  8464  0AC8                     u3875:
  8465  0AC8  1003               	clrc
  8466  0AC9  0DB9               	rlf	___flmul@grs,f
  8467  0ACA  0DBA               	rlf	___flmul@grs+1,f
  8468  0ACB  0DBB               	rlf	___flmul@grs+2,f
  8469  0ACC  0DBC               	rlf	___flmul@grs+3,f
  8470  0ACD  0BB3               	decfsz	??___flmul,f
  8471  0ACE  2AC8               	goto	u3875
  8472  0ACF  082B               	movf	___flmul@b,w
  8473  0AD0  00B3               	movwf	??___flmul
  8474  0AD1  0833               	movf	??___flmul,w
  8475  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8476  0AD3  082F               	movf	___flmul@a,w
  8477  0AD4  160A  158A  225E  120A  158A  	fcall	__Umul8_16
  8478  0AD9  0874               	movf	?__Umul8_16+1,w
  8479  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8480  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8481  0ADC  00C4               	movwf	___flmul@temp+1
  8482  0ADD  0873               	movf	?__Umul8_16,w
  8483  0ADE  00C3               	movwf	___flmul@temp
  8484  0ADF                     l2762:
  8485  0ADF  0843               	movf	___flmul@temp,w
  8486  0AE0  00B3               	movwf	??___flmul
  8487  0AE1  0844               	movf	___flmul@temp+1,w
  8488  0AE2  00B4               	movwf	??___flmul+1
  8489  0AE3  01B5               	clrf	??___flmul+2
  8490  0AE4  01B6               	clrf	??___flmul+3
  8491  0AE5  0833               	movf	??___flmul,w
  8492  0AE6  07B9               	addwf	___flmul@grs,f
  8493  0AE7  0834               	movf	??___flmul+1,w
  8494  0AE8  1103               	clrz
  8495  0AE9  1803               	skipnc
  8496  0AEA  3E01               	addlw	1
  8497  0AEB  1903               	skipnz
  8498  0AEC  2AEE               	goto	u3881
  8499  0AED  07BA               	addwf	___flmul@grs+1,f
  8500  0AEE                     u3881:
  8501  0AEE  0835               	movf	??___flmul+2,w
  8502  0AEF  1103               	clrz
  8503  0AF0  1803               	skipnc
  8504  0AF1  3E01               	addlw	1
  8505  0AF2  1903               	skipnz
  8506  0AF3  2AF5               	goto	u3882
  8507  0AF4  07BB               	addwf	___flmul@grs+2,f
  8508  0AF5                     u3882:
  8509  0AF5  0836               	movf	??___flmul+3,w
  8510  0AF6  1103               	clrz
  8511  0AF7  1803               	skipnc
  8512  0AF8  3E01               	addlw	1
  8513  0AF9  1903               	skipnz
  8514  0AFA  2AFC               	goto	u3883
  8515  0AFB  07BC               	addwf	___flmul@grs+3,f
  8516  0AFC                     u3883:
  8517  0AFC                     l2764:
  8518  0AFC  082C               	movf	___flmul@b+1,w
  8519  0AFD  00B3               	movwf	??___flmul
  8520  0AFE  0833               	movf	??___flmul,w
  8521  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  8522  0B00  0831               	movf	___flmul@a+2,w
  8523  0B01  160A  158A  225E  120A  158A  	fcall	__Umul8_16
  8524  0B06  0874               	movf	?__Umul8_16+1,w
  8525  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8526  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8527  0B09  00C4               	movwf	___flmul@temp+1
  8528  0B0A  0873               	movf	?__Umul8_16,w
  8529  0B0B  00C3               	movwf	___flmul@temp
  8530  0B0C  0843               	movf	___flmul@temp,w
  8531  0B0D  00B3               	movwf	??___flmul
  8532  0B0E  0844               	movf	___flmul@temp+1,w
  8533  0B0F  00B4               	movwf	??___flmul+1
  8534  0B10  01B5               	clrf	??___flmul+2
  8535  0B11  01B6               	clrf	??___flmul+3
  8536  0B12  0833               	movf	??___flmul,w
  8537  0B13  07BF               	addwf	___flmul@prod,f
  8538  0B14  0834               	movf	??___flmul+1,w
  8539  0B15  1103               	clrz
  8540  0B16  1803               	skipnc
  8541  0B17  3E01               	addlw	1
  8542  0B18  1903               	skipnz
  8543  0B19  2B1B               	goto	u3891
  8544  0B1A  07C0               	addwf	___flmul@prod+1,f
  8545  0B1B                     u3891:
  8546  0B1B  0835               	movf	??___flmul+2,w
  8547  0B1C  1103               	clrz
  8548  0B1D  1803               	skipnc
  8549  0B1E  3E01               	addlw	1
  8550  0B1F  1903               	skipnz
  8551  0B20  2B22               	goto	u3892
  8552  0B21  07C1               	addwf	___flmul@prod+2,f
  8553  0B22                     u3892:
  8554  0B22  0836               	movf	??___flmul+3,w
  8555  0B23  1103               	clrz
  8556  0B24  1803               	skipnc
  8557  0B25  3E01               	addlw	1
  8558  0B26  1903               	skipnz
  8559  0B27  2B29               	goto	u3893
  8560  0B28  07C2               	addwf	___flmul@prod+3,f
  8561  0B29                     u3893:
  8562  0B29                     l2766:
  8563  0B29  082D               	movf	___flmul@b+2,w
  8564  0B2A  00B3               	movwf	??___flmul
  8565  0B2B  0833               	movf	??___flmul,w
  8566  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  8567  0B2D  0830               	movf	___flmul@a+1,w
  8568  0B2E  160A  158A  225E  120A  158A  	fcall	__Umul8_16
  8569  0B33  0874               	movf	?__Umul8_16+1,w
  8570  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8571  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8572  0B36  00C4               	movwf	___flmul@temp+1
  8573  0B37  0873               	movf	?__Umul8_16,w
  8574  0B38  00C3               	movwf	___flmul@temp
  8575  0B39                     l2768:
  8576  0B39  0843               	movf	___flmul@temp,w
  8577  0B3A  00B3               	movwf	??___flmul
  8578  0B3B  0844               	movf	___flmul@temp+1,w
  8579  0B3C  00B4               	movwf	??___flmul+1
  8580  0B3D  01B5               	clrf	??___flmul+2
  8581  0B3E  01B6               	clrf	??___flmul+3
  8582  0B3F  0833               	movf	??___flmul,w
  8583  0B40  07BF               	addwf	___flmul@prod,f
  8584  0B41  0834               	movf	??___flmul+1,w
  8585  0B42  1103               	clrz
  8586  0B43  1803               	skipnc
  8587  0B44  3E01               	addlw	1
  8588  0B45  1903               	skipnz
  8589  0B46  2B48               	goto	u3901
  8590  0B47  07C0               	addwf	___flmul@prod+1,f
  8591  0B48                     u3901:
  8592  0B48  0835               	movf	??___flmul+2,w
  8593  0B49  1103               	clrz
  8594  0B4A  1803               	skipnc
  8595  0B4B  3E01               	addlw	1
  8596  0B4C  1903               	skipnz
  8597  0B4D  2B4F               	goto	u3902
  8598  0B4E  07C1               	addwf	___flmul@prod+2,f
  8599  0B4F                     u3902:
  8600  0B4F  0836               	movf	??___flmul+3,w
  8601  0B50  1103               	clrz
  8602  0B51  1803               	skipnc
  8603  0B52  3E01               	addlw	1
  8604  0B53  1903               	skipnz
  8605  0B54  2B56               	goto	u3903
  8606  0B55  07C2               	addwf	___flmul@prod+3,f
  8607  0B56                     u3903:
  8608  0B56  082D               	movf	___flmul@b+2,w
  8609  0B57  00B3               	movwf	??___flmul
  8610  0B58  0833               	movf	??___flmul,w
  8611  0B59  00F3               	movwf	__Umul8_16@multiplicand
  8612  0B5A  0831               	movf	___flmul@a+2,w
  8613  0B5B  160A  158A  225E  120A  158A  	fcall	__Umul8_16
  8614  0B60  0874               	movf	?__Umul8_16+1,w
  8615  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8616  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8617  0B63  00C4               	movwf	___flmul@temp+1
  8618  0B64  0873               	movf	?__Umul8_16,w
  8619  0B65  00C3               	movwf	___flmul@temp
  8620  0B66                     l2770:
  8621  0B66  0843               	movf	___flmul@temp,w
  8622  0B67  00B3               	movwf	??___flmul
  8623  0B68  0844               	movf	___flmul@temp+1,w
  8624  0B69  00B4               	movwf	??___flmul+1
  8625  0B6A  01B5               	clrf	??___flmul+2
  8626  0B6B  01B6               	clrf	??___flmul+3
  8627  0B6C  3008               	movlw	8
  8628  0B6D                     u3915:
  8629  0B6D  1003               	clrc
  8630  0B6E  0DB3               	rlf	??___flmul,f
  8631  0B6F  0DB4               	rlf	??___flmul+1,f
  8632  0B70  0DB5               	rlf	??___flmul+2,f
  8633  0B71  0DB6               	rlf	??___flmul+3,f
  8634  0B72                     u3910:
  8635  0B72  3EFF               	addlw	-1
  8636  0B73  1D03               	skipz
  8637  0B74  2B6D               	goto	u3915
  8638  0B75  0833               	movf	??___flmul,w
  8639  0B76  07BF               	addwf	___flmul@prod,f
  8640  0B77  0834               	movf	??___flmul+1,w
  8641  0B78  1103               	clrz
  8642  0B79  1803               	skipnc
  8643  0B7A  3E01               	addlw	1
  8644  0B7B  1903               	skipnz
  8645  0B7C  2B7E               	goto	u3921
  8646  0B7D  07C0               	addwf	___flmul@prod+1,f
  8647  0B7E                     u3921:
  8648  0B7E  0835               	movf	??___flmul+2,w
  8649  0B7F  1103               	clrz
  8650  0B80  1803               	skipnc
  8651  0B81  3E01               	addlw	1
  8652  0B82  1903               	skipnz
  8653  0B83  2B85               	goto	u3922
  8654  0B84  07C1               	addwf	___flmul@prod+2,f
  8655  0B85                     u3922:
  8656  0B85  0836               	movf	??___flmul+3,w
  8657  0B86  1103               	clrz
  8658  0B87  1803               	skipnc
  8659  0B88  3E01               	addlw	1
  8660  0B89  1903               	skipnz
  8661  0B8A  2B8C               	goto	u3923
  8662  0B8B  07C2               	addwf	___flmul@prod+3,f
  8663  0B8C                     u3923:
  8664  0B8C                     l2772:
  8665  0B8C  0839               	movf	___flmul@grs,w
  8666  0B8D  00B3               	movwf	??___flmul
  8667  0B8E  083A               	movf	___flmul@grs+1,w
  8668  0B8F  00B4               	movwf	??___flmul+1
  8669  0B90  083B               	movf	___flmul@grs+2,w
  8670  0B91  00B5               	movwf	??___flmul+2
  8671  0B92  083C               	movf	___flmul@grs+3,w
  8672  0B93  00B6               	movwf	??___flmul+3
  8673  0B94  3018               	movlw	24
  8674  0B95                     u3935:
  8675  0B95  1003               	clrc
  8676  0B96  0CB6               	rrf	??___flmul+3,f
  8677  0B97  0CB5               	rrf	??___flmul+2,f
  8678  0B98  0CB4               	rrf	??___flmul+1,f
  8679  0B99  0CB3               	rrf	??___flmul,f
  8680  0B9A                     u3930:
  8681  0B9A  3EFF               	addlw	-1
  8682  0B9B  1D03               	skipz
  8683  0B9C  2B95               	goto	u3935
  8684  0B9D  0833               	movf	??___flmul,w
  8685  0B9E  07BF               	addwf	___flmul@prod,f
  8686  0B9F  0834               	movf	??___flmul+1,w
  8687  0BA0  1103               	clrz
  8688  0BA1  1803               	skipnc
  8689  0BA2  3E01               	addlw	1
  8690  0BA3  1903               	skipnz
  8691  0BA4  2BA6               	goto	u3941
  8692  0BA5  07C0               	addwf	___flmul@prod+1,f
  8693  0BA6                     u3941:
  8694  0BA6  0835               	movf	??___flmul+2,w
  8695  0BA7  1103               	clrz
  8696  0BA8  1803               	skipnc
  8697  0BA9  3E01               	addlw	1
  8698  0BAA  1903               	skipnz
  8699  0BAB  2BAD               	goto	u3942
  8700  0BAC  07C1               	addwf	___flmul@prod+2,f
  8701  0BAD                     u3942:
  8702  0BAD  0836               	movf	??___flmul+3,w
  8703  0BAE  1103               	clrz
  8704  0BAF  1803               	skipnc
  8705  0BB0  3E01               	addlw	1
  8706  0BB1  1903               	skipnz
  8707  0BB2  2BB4               	goto	u3943
  8708  0BB3  07C2               	addwf	___flmul@prod+3,f
  8709  0BB4                     u3943:
  8710  0BB4                     l2774:
  8711  0BB4  3008               	movlw	8
  8712  0BB5  00B3               	movwf	??___flmul
  8713  0BB6                     u3955:
  8714  0BB6  1003               	clrc
  8715  0BB7  0DB9               	rlf	___flmul@grs,f
  8716  0BB8  0DBA               	rlf	___flmul@grs+1,f
  8717  0BB9  0DBB               	rlf	___flmul@grs+2,f
  8718  0BBA  0DBC               	rlf	___flmul@grs+3,f
  8719  0BBB  0BB3               	decfsz	??___flmul,f
  8720  0BBC  2BB6               	goto	u3955
  8721  0BBD                     l2776:
  8722  0BBD  083E               	movf	___flmul@bexp,w
  8723  0BBE  073D               	addwf	___flmul@aexp,w
  8724  0BBF  00B3               	movwf	??___flmul
  8725  0BC0  01B4               	clrf	??___flmul+1
  8726  0BC1  0DB4               	rlf	??___flmul+1,f
  8727  0BC2  0833               	movf	??___flmul,w
  8728  0BC3  3E82               	addlw	130
  8729  0BC4  00C3               	movwf	___flmul@temp
  8730  0BC5  0834               	movf	??___flmul+1,w
  8731  0BC6  1803               	skipnc
  8732  0BC7  3E01               	addlw	1
  8733  0BC8  3EFF               	addlw	255
  8734  0BC9  00C4               	movwf	___flmul@temp+1
  8735  0BCA  2BE8               	goto	l2788
  8736  0BCB                     l2778:
  8737  0BCB  3001               	movlw	1
  8738  0BCC  00B3               	movwf	??___flmul
  8739  0BCD                     u3965:
  8740  0BCD  1003               	clrc
  8741  0BCE  0DBF               	rlf	___flmul@prod,f
  8742  0BCF  0DC0               	rlf	___flmul@prod+1,f
  8743  0BD0  0DC1               	rlf	___flmul@prod+2,f
  8744  0BD1  0DC2               	rlf	___flmul@prod+3,f
  8745  0BD2  0BB3               	decfsz	??___flmul,f
  8746  0BD3  2BCD               	goto	u3965
  8747  0BD4                     l2780:
  8748  0BD4  1FBC               	btfss	___flmul@grs+3,7
  8749  0BD5  2BD7               	goto	u3971
  8750  0BD6  2BD8               	goto	u3970
  8751  0BD7                     u3971:
  8752  0BD7  2BD9               	goto	l2784
  8753  0BD8                     u3970:
  8754  0BD8                     l2782:
  8755  0BD8  143F               	bsf	___flmul@prod,0
  8756  0BD9                     l2784:
  8757  0BD9  3001               	movlw	1
  8758  0BDA  00B3               	movwf	??___flmul
  8759  0BDB                     u3985:
  8760  0BDB  1003               	clrc
  8761  0BDC  0DB9               	rlf	___flmul@grs,f
  8762  0BDD  0DBA               	rlf	___flmul@grs+1,f
  8763  0BDE  0DBB               	rlf	___flmul@grs+2,f
  8764  0BDF  0DBC               	rlf	___flmul@grs+3,f
  8765  0BE0  0BB3               	decfsz	??___flmul,f
  8766  0BE1  2BDB               	goto	u3985
  8767  0BE2                     l2786:
  8768  0BE2  30FF               	movlw	255
  8769  0BE3  07C3               	addwf	___flmul@temp,f
  8770  0BE4  1803               	skipnc
  8771  0BE5  0AC4               	incf	___flmul@temp+1,f
  8772  0BE6  30FF               	movlw	255
  8773  0BE7  07C4               	addwf	___flmul@temp+1,f
  8774  0BE8                     l2788:
  8775  0BE8  1FC1               	btfss	___flmul@prod+2,7
  8776  0BE9  2BEB               	goto	u3991
  8777  0BEA  2BEC               	goto	u3990
  8778  0BEB                     u3991:
  8779  0BEB  2BCB               	goto	l2778
  8780  0BEC                     u3990:
  8781  0BEC                     l2790:
  8782  0BEC  01BD               	clrf	___flmul@aexp
  8783  0BED                     l2792:
  8784  0BED  1FBC               	btfss	___flmul@grs+3,7
  8785  0BEE  2BF0               	goto	u4001
  8786  0BEF  2BF1               	goto	u4000
  8787  0BF0                     u4001:
  8788  0BF0  2C0D               	goto	l2800
  8789  0BF1                     u4000:
  8790  0BF1                     l2794:
  8791  0BF1  30FF               	movlw	255
  8792  0BF2  0539               	andwf	___flmul@grs,w
  8793  0BF3  00B3               	movwf	??___flmul
  8794  0BF4  30FF               	movlw	255
  8795  0BF5  053A               	andwf	___flmul@grs+1,w
  8796  0BF6  00B4               	movwf	??___flmul+1
  8797  0BF7  30FF               	movlw	255
  8798  0BF8  053B               	andwf	___flmul@grs+2,w
  8799  0BF9  00B5               	movwf	??___flmul+2
  8800  0BFA  307F               	movlw	127
  8801  0BFB  053C               	andwf	___flmul@grs+3,w
  8802  0BFC  00B6               	movwf	??___flmul+3
  8803  0BFD  0836               	movf	??___flmul+3,w
  8804  0BFE  0435               	iorwf	??___flmul+2,w
  8805  0BFF  0434               	iorwf	??___flmul+1,w
  8806  0C00  0433               	iorwf	??___flmul,w
  8807  0C01  1903               	skipnz
  8808  0C02  2C04               	goto	u4011
  8809  0C03  2C05               	goto	u4010
  8810  0C04                     u4011:
  8811  0C04  2C08               	goto	l846
  8812  0C05                     u4010:
  8813  0C05                     l2796:
  8814  0C05  01BD               	clrf	___flmul@aexp
  8815  0C06  0ABD               	incf	___flmul@aexp,f
  8816  0C07  2C0D               	goto	l2800
  8817  0C08                     l846:
  8818  0C08  1C3F               	btfss	___flmul@prod,0
  8819  0C09  2C0B               	goto	u4021
  8820  0C0A  2C0C               	goto	u4020
  8821  0C0B                     u4021:
  8822  0C0B  2C0D               	goto	l2800
  8823  0C0C                     u4020:
  8824  0C0C  2C05               	goto	l2796
  8825  0C0D                     l2800:
  8826  0C0D  083D               	movf	___flmul@aexp,w
  8827  0C0E  1903               	btfsc	3,2
  8828  0C0F  2C11               	goto	u4031
  8829  0C10  2C12               	goto	u4030
  8830  0C11                     u4031:
  8831  0C11  2C43               	goto	l2810
  8832  0C12                     u4030:
  8833  0C12                     l2802:
  8834  0C12  3001               	movlw	1
  8835  0C13  07BF               	addwf	___flmul@prod,f
  8836  0C14  3000               	movlw	0
  8837  0C15  1803               	skipnc
  8838  0C16  3001               	movlw	1
  8839  0C17  07C0               	addwf	___flmul@prod+1,f
  8840  0C18  3000               	movlw	0
  8841  0C19  1803               	skipnc
  8842  0C1A  3001               	movlw	1
  8843  0C1B  07C1               	addwf	___flmul@prod+2,f
  8844  0C1C  3000               	movlw	0
  8845  0C1D  1803               	skipnc
  8846  0C1E  3001               	movlw	1
  8847  0C1F  07C2               	addwf	___flmul@prod+3,f
  8848  0C20                     l2804:
  8849  0C20  1C42               	btfss	___flmul@prod+3,0
  8850  0C21  2C23               	goto	u4041
  8851  0C22  2C24               	goto	u4040
  8852  0C23                     u4041:
  8853  0C23  2C43               	goto	l2810
  8854  0C24                     u4040:
  8855  0C24                     l2806:
  8856  0C24  083F               	movf	___flmul@prod,w
  8857  0C25  00B3               	movwf	??___flmul
  8858  0C26  0840               	movf	___flmul@prod+1,w
  8859  0C27  00B4               	movwf	??___flmul+1
  8860  0C28  0841               	movf	___flmul@prod+2,w
  8861  0C29  00B5               	movwf	??___flmul+2
  8862  0C2A  0842               	movf	___flmul@prod+3,w
  8863  0C2B  00B6               	movwf	??___flmul+3
  8864  0C2C  3001               	movlw	1
  8865  0C2D  00B7               	movwf	??___flmul+4
  8866  0C2E                     u4055:
  8867  0C2E  0D36               	rlf	??___flmul+3,w
  8868  0C2F  0CB6               	rrf	??___flmul+3,f
  8869  0C30  0CB5               	rrf	??___flmul+2,f
  8870  0C31  0CB4               	rrf	??___flmul+1,f
  8871  0C32  0CB3               	rrf	??___flmul,f
  8872  0C33                     u4050:
  8873  0C33  0BB7               	decfsz	??___flmul+4,f
  8874  0C34  2C2E               	goto	u4055
  8875  0C35  0836               	movf	??___flmul+3,w
  8876  0C36  00C2               	movwf	___flmul@prod+3
  8877  0C37  0835               	movf	??___flmul+2,w
  8878  0C38  00C1               	movwf	___flmul@prod+2
  8879  0C39  0834               	movf	??___flmul+1,w
  8880  0C3A  00C0               	movwf	___flmul@prod+1
  8881  0C3B  0833               	movf	??___flmul,w
  8882  0C3C  00BF               	movwf	___flmul@prod
  8883  0C3D                     l2808:
  8884  0C3D  3001               	movlw	1
  8885  0C3E  07C3               	addwf	___flmul@temp,f
  8886  0C3F  1803               	skipnc
  8887  0C40  0AC4               	incf	___flmul@temp+1,f
  8888  0C41  3000               	movlw	0
  8889  0C42  07C4               	addwf	___flmul@temp+1,f
  8890  0C43                     l2810:
  8891  0C43  0844               	movf	___flmul@temp+1,w
  8892  0C44  3A80               	xorlw	128
  8893  0C45  00FF               	movwf	btemp+1
  8894  0C46  3080               	movlw	128
  8895  0C47  027F               	subwf	btemp+1,w
  8896  0C48  1D03               	skipz
  8897  0C49  2C4C               	goto	u4065
  8898  0C4A  30FF               	movlw	255
  8899  0C4B  0243               	subwf	___flmul@temp,w
  8900  0C4C                     u4065:
  8901  0C4C  1C03               	skipc
  8902  0C4D  2C4F               	goto	u4061
  8903  0C4E  2C50               	goto	u4060
  8904  0C4F                     u4061:
  8905  0C4F  2C5B               	goto	l2814
  8906  0C50                     u4060:
  8907  0C50                     l2812:
  8908  0C50  307F               	movlw	127
  8909  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8910  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8911  0C53  00C2               	movwf	___flmul@prod+3
  8912  0C54  3080               	movlw	128
  8913  0C55  00C1               	movwf	___flmul@prod+2
  8914  0C56  3000               	movlw	0
  8915  0C57  00C0               	movwf	___flmul@prod+1
  8916  0C58  3000               	movlw	0
  8917  0C59  00BF               	movwf	___flmul@prod
  8918  0C5A  2C90               	goto	l852
  8919  0C5B                     l2814:
  8920  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8921  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8922  0C5D  0844               	movf	___flmul@temp+1,w
  8923  0C5E  3A80               	xorlw	128
  8924  0C5F  00FF               	movwf	btemp+1
  8925  0C60  3080               	movlw	128
  8926  0C61  027F               	subwf	btemp+1,w
  8927  0C62  1D03               	skipz
  8928  0C63  2C66               	goto	u4075
  8929  0C64  3001               	movlw	1
  8930  0C65  0243               	subwf	___flmul@temp,w
  8931  0C66                     u4075:
  8932  0C66  1803               	skipnc
  8933  0C67  2C69               	goto	u4071
  8934  0C68  2C6A               	goto	u4070
  8935  0C69                     u4071:
  8936  0C69  2C76               	goto	l2820
  8937  0C6A                     u4070:
  8938  0C6A                     l2816:
  8939  0C6A  3000               	movlw	0
  8940  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8941  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8942  0C6D  00C2               	movwf	___flmul@prod+3
  8943  0C6E  3000               	movlw	0
  8944  0C6F  00C1               	movwf	___flmul@prod+2
  8945  0C70  3000               	movlw	0
  8946  0C71  00C0               	movwf	___flmul@prod+1
  8947  0C72  3000               	movlw	0
  8948  0C73  00BF               	movwf	___flmul@prod
  8949  0C74                     l2818:
  8950  0C74  01B8               	clrf	___flmul@sign
  8951  0C75  2C90               	goto	l852
  8952  0C76                     l2820:
  8953  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8954  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8955  0C78  0843               	movf	___flmul@temp,w
  8956  0C79  00B3               	movwf	??___flmul
  8957  0C7A  0833               	movf	??___flmul,w
  8958  0C7B  00BE               	movwf	___flmul@bexp
  8959  0C7C  30FF               	movlw	255
  8960  0C7D  05BF               	andwf	___flmul@prod,f
  8961  0C7E  30FF               	movlw	255
  8962  0C7F  05C0               	andwf	___flmul@prod+1,f
  8963  0C80  307F               	movlw	127
  8964  0C81  05C1               	andwf	___flmul@prod+2,f
  8965  0C82  3000               	movlw	0
  8966  0C83  05C2               	andwf	___flmul@prod+3,f
  8967  0C84                     l2822:
  8968  0C84  1C3E               	btfss	___flmul@bexp,0
  8969  0C85  2C87               	goto	u4081
  8970  0C86  2C88               	goto	u4080
  8971  0C87                     u4081:
  8972  0C87  2C89               	goto	l2826
  8973  0C88                     u4080:
  8974  0C88                     l2824:
  8975  0C88  17C1               	bsf	___flmul@prod+2,7
  8976  0C89                     l2826:
  8977  0C89  083E               	movf	___flmul@bexp,w
  8978  0C8A  00B3               	movwf	??___flmul
  8979  0C8B  1003               	clrc
  8980  0C8C  0C33               	rrf	??___flmul,w
  8981  0C8D  00B4               	movwf	??___flmul+1
  8982  0C8E  0834               	movf	??___flmul+1,w
  8983  0C8F  00C2               	movwf	___flmul@prod+3
  8984  0C90                     l852:
  8985  0C90  0838               	movf	___flmul@sign,w
  8986  0C91  00B3               	movwf	??___flmul
  8987  0C92  0833               	movf	??___flmul,w
  8988  0C93  04C2               	iorwf	___flmul@prod+3,f
  8989  0C94                     l2828:
  8990  0C94  0842               	movf	___flmul@prod+3,w
  8991  0C95  00AE               	movwf	?___flmul+3
  8992  0C96  0841               	movf	___flmul@prod+2,w
  8993  0C97  00AD               	movwf	?___flmul+2
  8994  0C98  0840               	movf	___flmul@prod+1,w
  8995  0C99  00AC               	movwf	?___flmul+1
  8996  0C9A  083F               	movf	___flmul@prod,w
  8997  0C9B  00AB               	movwf	?___flmul
  8998  0C9C                     l840:
  8999  0C9C  0008               	return
  9000  0C9D                     __end_of___flmul:
  9001                           
  9002                           	psect	text28
  9003  1A5E                     __ptext28:	
  9004 ;; *************** function __Umul8_16 *****************
  9005 ;; Defined at:
  9006 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  multiplier      1    wreg     unsigned char 
  9009 ;;  multiplicand    1    3[COMMON] unsigned char 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9012 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  9013 ;;  product         2    0[BANK0 ] unsigned int 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  2    3[COMMON] unsigned int 
  9016 ;; Registers used:
  9017 ;;		wreg, status,2, status,0
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9023 ;;      Params:         2       0       0       0       0
  9024 ;;      Locals:         0       5       0       0       0
  9025 ;;      Temps:          2       0       0       0       0
  9026 ;;      Totals:         4       5       0       0       0
  9027 ;;Total ram usage:        9 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    1
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		___flmul
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           
  9038                           ;psect for function __Umul8_16
  9039  1A5E                     __Umul8_16:
  9040                           
  9041                           ;incstack = 0
  9042                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9043                           ;__Umul8_16@multiplier stored from wreg
  9044  1A5E  1283               	bcf	3,5	;RP0=0, select bank0
  9045  1A5F  1303               	bcf	3,6	;RP1=0, select bank0
  9046  1A60  00A4               	movwf	__Umul8_16@multiplier
  9047  1A61                     l2352:
  9048  1A61  01A0               	clrf	__Umul8_16@product
  9049  1A62  01A1               	clrf	__Umul8_16@product+1
  9050  1A63                     l2354:
  9051  1A63  0873               	movf	__Umul8_16@multiplicand,w
  9052  1A64  00F5               	movwf	??__Umul8_16
  9053  1A65  01F6               	clrf	??__Umul8_16+1
  9054  1A66  0875               	movf	??__Umul8_16,w
  9055  1A67  00A2               	movwf	__Umul8_16@word_mpld
  9056  1A68  0876               	movf	??__Umul8_16+1,w
  9057  1A69  00A3               	movwf	__Umul8_16@word_mpld+1
  9058  1A6A                     l2356:
  9059  1A6A  1C24               	btfss	__Umul8_16@multiplier,0
  9060  1A6B  2A6D               	goto	u2911
  9061  1A6C  2A6E               	goto	u2910
  9062  1A6D                     u2911:
  9063  1A6D  2A74               	goto	l859
  9064  1A6E                     u2910:
  9065  1A6E                     l2358:
  9066  1A6E  0822               	movf	__Umul8_16@word_mpld,w
  9067  1A6F  07A0               	addwf	__Umul8_16@product,f
  9068  1A70  1803               	skipnc
  9069  1A71  0AA1               	incf	__Umul8_16@product+1,f
  9070  1A72  0823               	movf	__Umul8_16@word_mpld+1,w
  9071  1A73  07A1               	addwf	__Umul8_16@product+1,f
  9072  1A74                     l859:
  9073  1A74  3001               	movlw	1
  9074  1A75                     u2925:
  9075  1A75  1003               	clrc
  9076  1A76  0DA2               	rlf	__Umul8_16@word_mpld,f
  9077  1A77  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9078  1A78  3EFF               	addlw	-1
  9079  1A79  1D03               	skipz
  9080  1A7A  2A75               	goto	u2925
  9081  1A7B  1003               	clrc
  9082  1A7C  0CA4               	rrf	__Umul8_16@multiplier,f
  9083  1A7D                     l2360:
  9084  1A7D  0824               	movf	__Umul8_16@multiplier,w
  9085  1A7E  1D03               	btfss	3,2
  9086  1A7F  2A81               	goto	u2931
  9087  1A80  2A82               	goto	u2930
  9088  1A81                     u2931:
  9089  1A81  2A6A               	goto	l2356
  9090  1A82                     u2930:
  9091  1A82                     l2362:
  9092  1A82  0821               	movf	__Umul8_16@product+1,w
  9093  1A83  00F4               	movwf	?__Umul8_16+1
  9094  1A84  0820               	movf	__Umul8_16@product,w
  9095  1A85  00F3               	movwf	?__Umul8_16
  9096  1A86                     l861:
  9097  1A86  0008               	return
  9098  1A87                     __end_of__Umul8_16:
  9099                           
  9100                           	psect	text29
  9101  1AEE                     __ptext29:	
  9102 ;; *************** function _Lcd_Write_String *****************
  9103 ;; Defined at:
  9104 ;;		line 67 in file "LCD.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  a               2    6[COMMON] PTR unsigned char 
  9107 ;;		 -> s(20), STR_1(17), 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;  i               2    3[BANK0 ] int 
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1    wreg      void 
  9112 ;; Registers used:
  9113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9119 ;;      Params:         2       0       0       0       0
  9120 ;;      Locals:         0       2       0       0       0
  9121 ;;      Temps:          0       3       0       0       0
  9122 ;;      Totals:         2       5       0       0       0
  9123 ;;Total ram usage:        7 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    3
  9126 ;; This function calls:
  9127 ;;		_Lcd_Write_Char
  9128 ;; This function is called by:
  9129 ;;		_main
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           
  9134                           ;psect for function _Lcd_Write_String
  9135  1AEE                     _Lcd_Write_String:
  9136  1AEE                     l4170:	
  9137                           ;incstack = 0
  9138                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9139                           
  9140                           
  9141                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  9142  1AEE  1283               	bcf	3,5	;RP0=0, select bank0
  9143  1AEF  1303               	bcf	3,6	;RP1=0, select bank0
  9144  1AF0  01A3               	clrf	Lcd_Write_String@i
  9145  1AF1  01A4               	clrf	Lcd_Write_String@i+1
  9146  1AF2  2B17               	goto	l4176
  9147  1AF3                     l4172:
  9148                           
  9149                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  9150  1AF3  0823               	movf	Lcd_Write_String@i,w
  9151  1AF4  0776               	addwf	Lcd_Write_String@a,w
  9152  1AF5  00A1               	movwf	??_Lcd_Write_String+1
  9153  1AF6  0877               	movf	Lcd_Write_String@a+1,w
  9154  1AF7  00A0               	movwf	??_Lcd_Write_String
  9155  1AF8  1803               	skipnc
  9156  1AF9  0AA0               	incf	??_Lcd_Write_String,f
  9157  1AFA  1FA3               	btfss	Lcd_Write_String@i,7
  9158  1AFB  2AFD               	goto	u7020
  9159  1AFC  03A0               	decf	??_Lcd_Write_String,f
  9160  1AFD                     u7020:
  9161  1AFD  1283               	bcf	3,5	;RP0=0, select bank0
  9162  1AFE  1303               	bcf	3,6	;RP1=0, select bank0
  9163  1AFF  0820               	movf	??_Lcd_Write_String,w
  9164  1B00  00A2               	movwf	??_Lcd_Write_String+2
  9165  1B01  0822               	movf	??_Lcd_Write_String+2,w
  9166  1B02  00FF               	movwf	btemp+1
  9167  1B03  0821               	movf	??_Lcd_Write_String+1,w
  9168  1B04  0084               	movwf	4
  9169  1B05  160A  158A  2000  160A  158A  	fcall	stringtab
  9170  1B0A  120A  118A  27E3  160A  158A  	fcall	_Lcd_Write_Char
  9171  1B0F                     l4174:
  9172  1B0F  3001               	movlw	1
  9173  1B10  1283               	bcf	3,5	;RP0=0, select bank0
  9174  1B11  1303               	bcf	3,6	;RP1=0, select bank0
  9175  1B12  07A3               	addwf	Lcd_Write_String@i,f
  9176  1B13  1803               	skipnc
  9177  1B14  0AA4               	incf	Lcd_Write_String@i+1,f
  9178  1B15  3000               	movlw	0
  9179  1B16  07A4               	addwf	Lcd_Write_String@i+1,f
  9180  1B17                     l4176:
  9181  1B17  0823               	movf	Lcd_Write_String@i,w
  9182  1B18  0776               	addwf	Lcd_Write_String@a,w
  9183  1B19  00A1               	movwf	??_Lcd_Write_String+1
  9184  1B1A  0877               	movf	Lcd_Write_String@a+1,w
  9185  1B1B  00A0               	movwf	??_Lcd_Write_String
  9186  1B1C  1803               	skipnc
  9187  1B1D  0AA0               	incf	??_Lcd_Write_String,f
  9188  1B1E  1FA3               	btfss	Lcd_Write_String@i,7
  9189  1B1F  2B21               	goto	u7030
  9190  1B20  03A0               	decf	??_Lcd_Write_String,f
  9191  1B21                     u7030:
  9192  1B21  1283               	bcf	3,5	;RP0=0, select bank0
  9193  1B22  1303               	bcf	3,6	;RP1=0, select bank0
  9194  1B23  0820               	movf	??_Lcd_Write_String,w
  9195  1B24  00A2               	movwf	??_Lcd_Write_String+2
  9196  1B25  0822               	movf	??_Lcd_Write_String+2,w
  9197  1B26  00FF               	movwf	btemp+1
  9198  1B27  0821               	movf	??_Lcd_Write_String+1,w
  9199  1B28  0084               	movwf	4
  9200  1B29  160A  158A  2000  160A  158A  	fcall	stringtab
  9201  1B2E  3A00               	xorlw	0
  9202  1B2F  1D03               	skipz
  9203  1B30  2B32               	goto	u7041
  9204  1B31  2B33               	goto	u7040
  9205  1B32                     u7041:
  9206  1B32  2AF3               	goto	l4172
  9207  1B33                     u7040:
  9208  1B33                     l138:
  9209  1B33  0008               	return
  9210  1B34                     __end_of_Lcd_Write_String:
  9211                           
  9212                           	psect	text30
  9213  07E3                     __ptext30:	
  9214 ;; *************** function _Lcd_Write_Char *****************
  9215 ;; Defined at:
  9216 ;;		line 58 in file "LCD.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  a               1    wreg     unsigned char 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;  a               1    5[COMMON] unsigned char 
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0, pclath, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9230 ;;      Params:         0       0       0       0       0
  9231 ;;      Locals:         1       0       0       0       0
  9232 ;;      Temps:          1       0       0       0       0
  9233 ;;      Totals:         2       0       0       0       0
  9234 ;;Total ram usage:        2 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:    2
  9237 ;; This function calls:
  9238 ;;		_Lcd_Port
  9239 ;; This function is called by:
  9240 ;;		_Lcd_Write_String
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           
  9245                           ;psect for function _Lcd_Write_Char
  9246  07E3                     _Lcd_Write_Char:
  9247                           
  9248                           ;incstack = 0
  9249                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9250                           ;Lcd_Write_Char@a stored from wreg
  9251  07E3  00F5               	movwf	Lcd_Write_Char@a
  9252  07E4                     l3838:
  9253                           
  9254                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  9255  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  9256  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  9257  07E6  1409               	bsf	9,0	;volatile
  9258  07E7                     l3840:
  9259                           
  9260                           ;LCD.c: 60:     Lcd_Port(a);
  9261  07E7  0875               	movf	Lcd_Write_Char@a,w
  9262  07E8  160A  158A  2174  120A  118A  	fcall	_Lcd_Port
  9263  07ED                     l3842:
  9264                           
  9265                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
  9266  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  9267  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  9268  07EF  1489               	bsf	9,1	;volatile
  9269  07F0                     l3844:
  9270                           
  9271                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9272  07F0  301A               	movlw	26
  9273  07F1  00F4               	movwf	??_Lcd_Write_Char
  9274  07F2                     u7667:
  9275  07F2  0BF4               	decfsz	??_Lcd_Write_Char,f
  9276  07F3  2FF2               	goto	u7667
  9277  07F4  0000               	nop
  9278  07F5                     l3846:
  9279                           
  9280                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
  9281  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  9282  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  9283  07F7  1089               	bcf	9,1	;volatile
  9284  07F8                     l3848:
  9285                           
  9286                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9287  07F8  301A               	movlw	26
  9288  07F9  00F4               	movwf	??_Lcd_Write_Char
  9289  07FA                     u7677:
  9290  07FA  0BF4               	decfsz	??_Lcd_Write_Char,f
  9291  07FB  2FFA               	goto	u7677
  9292  07FC  0000               	nop
  9293  07FD                     l132:
  9294  07FD  0008               	return
  9295  07FE                     __end_of_Lcd_Write_Char:
  9296                           
  9297                           	psect	text31
  9298  1A38                     __ptext31:	
  9299 ;; *************** function _Lcd_Set_Cursor *****************
  9300 ;; Defined at:
  9301 ;;		line 33 in file "LCD.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;  a               1    wreg     unsigned char 
  9304 ;;  b               1    7[COMMON] unsigned char 
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;  a               1    1[BANK0 ] unsigned char 
  9307 ;;  temp            1    2[BANK0 ] unsigned char 
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, status,2, status,0, pclath, cstack
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9317 ;;      Params:         1       0       0       0       0
  9318 ;;      Locals:         0       2       0       0       0
  9319 ;;      Temps:          0       1       0       0       0
  9320 ;;      Totals:         1       3       0       0       0
  9321 ;;Total ram usage:        4 bytes
  9322 ;; Hardware stack levels used:    1
  9323 ;; Hardware stack levels required when called:    3
  9324 ;; This function calls:
  9325 ;;		_Lcd_Cmd
  9326 ;; This function is called by:
  9327 ;;		_main
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           
  9332                           ;psect for function _Lcd_Set_Cursor
  9333  1A38                     _Lcd_Set_Cursor:
  9334                           
  9335                           ;incstack = 0
  9336                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9337                           ;Lcd_Set_Cursor@a stored from wreg
  9338  1A38  1283               	bcf	3,5	;RP0=0, select bank0
  9339  1A39  1303               	bcf	3,6	;RP1=0, select bank0
  9340  1A3A  00A1               	movwf	Lcd_Set_Cursor@a
  9341  1A3B                     l4158:
  9342                           
  9343                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
  9344  1A3B  0321               	decf	Lcd_Set_Cursor@a,w
  9345  1A3C  1D03               	btfss	3,2
  9346  1A3D  2A3F               	goto	u7001
  9347  1A3E  2A40               	goto	u7000
  9348  1A3F                     u7001:
  9349  1A3F  2A4C               	goto	l4164
  9350  1A40                     u7000:
  9351  1A40                     l4160:
  9352                           
  9353                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  9354  1A40  0877               	movf	Lcd_Set_Cursor@b,w
  9355  1A41  3E7F               	addlw	127
  9356  1A42  00A0               	movwf	??_Lcd_Set_Cursor
  9357  1A43  0820               	movf	??_Lcd_Set_Cursor,w
  9358  1A44  00A2               	movwf	Lcd_Set_Cursor@temp
  9359  1A45                     l4162:
  9360                           
  9361                           ;LCD.c: 37:         Lcd_Cmd(temp);
  9362  1A45  0822               	movf	Lcd_Set_Cursor@temp,w
  9363  1A46  160A  158A  2200  160A  158A  	fcall	_Lcd_Cmd
  9364                           
  9365                           ;LCD.c: 38:     } else if (a == 2) {
  9366  1A4B  2A5D               	goto	l126
  9367  1A4C                     l4164:
  9368  1A4C  3002               	movlw	2
  9369  1A4D  0621               	xorwf	Lcd_Set_Cursor@a,w
  9370  1A4E  1D03               	btfss	3,2
  9371  1A4F  2A51               	goto	u7011
  9372  1A50  2A52               	goto	u7010
  9373  1A51                     u7011:
  9374  1A51  2A5D               	goto	l126
  9375  1A52                     u7010:
  9376  1A52                     l4166:
  9377                           
  9378                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  9379  1A52  0877               	movf	Lcd_Set_Cursor@b,w
  9380  1A53  3EBF               	addlw	191
  9381  1A54  00A0               	movwf	??_Lcd_Set_Cursor
  9382  1A55  0820               	movf	??_Lcd_Set_Cursor,w
  9383  1A56  00A2               	movwf	Lcd_Set_Cursor@temp
  9384  1A57                     l4168:
  9385                           
  9386                           ;LCD.c: 40:         Lcd_Cmd(temp);
  9387  1A57  0822               	movf	Lcd_Set_Cursor@temp,w
  9388  1A58  160A  158A  2200  160A  158A  	fcall	_Lcd_Cmd
  9389  1A5D                     l126:
  9390  1A5D  0008               	return
  9391  1A5E                     __end_of_Lcd_Set_Cursor:
  9392                           
  9393                           	psect	text32
  9394  1B7A                     __ptext32:	
  9395 ;; *************** function _Lcd_Init *****************
  9396 ;; Defined at:
  9397 ;;		line 44 in file "LCD.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;		None
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;		None
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  1    wreg      void 
  9404 ;; Registers used:
  9405 ;;		wreg, status,2, status,0, pclath, cstack
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9411 ;;      Params:         0       0       0       0       0
  9412 ;;      Locals:         0       0       0       0       0
  9413 ;;      Temps:          0       2       0       0       0
  9414 ;;      Totals:         0       2       0       0       0
  9415 ;;Total ram usage:        2 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    3
  9418 ;; This function calls:
  9419 ;;		_Lcd_Cmd
  9420 ;;		_Lcd_Port
  9421 ;; This function is called by:
  9422 ;;		_main
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           
  9427                           ;psect for function _Lcd_Init
  9428  1B7A                     _Lcd_Init:
  9429  1B7A                     l4146:	
  9430                           ;incstack = 0
  9431                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9432                           
  9433                           
  9434                           ;LCD.c: 45:     Lcd_Port(0x00);
  9435  1B7A  3000               	movlw	0
  9436  1B7B  160A  158A  2174  160A  158A  	fcall	_Lcd_Port
  9437  1B80                     l4148:
  9438                           
  9439                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9440  1B80  3034               	movlw	52
  9441  1B81  1283               	bcf	3,5	;RP0=0, select bank0
  9442  1B82  1303               	bcf	3,6	;RP1=0, select bank0
  9443  1B83  00A1               	movwf	??_Lcd_Init+1
  9444  1B84  30F1               	movlw	241
  9445  1B85  00A0               	movwf	??_Lcd_Init
  9446  1B86                     u7687:
  9447  1B86  0BA0               	decfsz	??_Lcd_Init,f
  9448  1B87  2B86               	goto	u7687
  9449  1B88  0BA1               	decfsz	??_Lcd_Init+1,f
  9450  1B89  2B86               	goto	u7687
  9451  1B8A                     l4150:
  9452                           
  9453                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
  9454  1B8A  303F               	movlw	63
  9455  1B8B  160A  158A  2200  160A  158A  	fcall	_Lcd_Cmd
  9456                           
  9457                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9458  1B90  301A               	movlw	26
  9459  1B91  1283               	bcf	3,5	;RP0=0, select bank0
  9460  1B92  1303               	bcf	3,6	;RP1=0, select bank0
  9461  1B93  00A1               	movwf	??_Lcd_Init+1
  9462  1B94  30F7               	movlw	247
  9463  1B95  00A0               	movwf	??_Lcd_Init
  9464  1B96                     u7697:
  9465  1B96  0BA0               	decfsz	??_Lcd_Init,f
  9466  1B97  2B96               	goto	u7697
  9467  1B98  0BA1               	decfsz	??_Lcd_Init+1,f
  9468  1B99  2B96               	goto	u7697
  9469  1B9A  2B9B               	nop2
  9470  1B9B                     l4152:
  9471                           
  9472                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  9473  1B9B  303F               	movlw	63
  9474  1B9C  160A  158A  2200  160A  158A  	fcall	_Lcd_Cmd
  9475  1BA1                     l4154:
  9476                           
  9477                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9478  1BA1  3084               	movlw	132
  9479  1BA2  1283               	bcf	3,5	;RP0=0, select bank0
  9480  1BA3  1303               	bcf	3,6	;RP1=0, select bank0
  9481  1BA4  00A0               	movwf	??_Lcd_Init
  9482  1BA5                     u7707:
  9483  1BA5  0BA0               	decfsz	??_Lcd_Init,f
  9484  1BA6  2BA5               	goto	u7707
  9485  1BA7  0000               	nop
  9486                           
  9487                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  9488  1BA8  303F               	movlw	63
  9489  1BA9  160A  158A  2200  160A  158A  	fcall	_Lcd_Cmd
  9490                           
  9491                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  9492  1BAE  3038               	movlw	56
  9493  1BAF  160A  158A  2200  160A  158A  	fcall	_Lcd_Cmd
  9494                           
  9495                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  9496  1BB4  300C               	movlw	12
  9497  1BB5  160A  158A  2200  160A  158A  	fcall	_Lcd_Cmd
  9498                           
  9499                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  9500  1BBA  3006               	movlw	6
  9501  1BBB  160A  158A  2200  160A  158A  	fcall	_Lcd_Cmd
  9502  1BC0                     l129:
  9503  1BC0  0008               	return
  9504  1BC1                     __end_of_Lcd_Init:
  9505                           
  9506                           	psect	text33
  9507  19A8                     __ptext33:	
  9508 ;; *************** function _Lcd_Clear *****************
  9509 ;; Defined at:
  9510 ;;		line 28 in file "LCD.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;		None
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;		None
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  1    wreg      void 
  9517 ;; Registers used:
  9518 ;;		wreg, status,2, status,0, pclath, cstack
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9524 ;;      Params:         0       0       0       0       0
  9525 ;;      Locals:         0       0       0       0       0
  9526 ;;      Temps:          0       0       0       0       0
  9527 ;;      Totals:         0       0       0       0       0
  9528 ;;Total ram usage:        0 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; Hardware stack levels required when called:    3
  9531 ;; This function calls:
  9532 ;;		_Lcd_Cmd
  9533 ;; This function is called by:
  9534 ;;		_main
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           
  9539                           ;psect for function _Lcd_Clear
  9540  19A8                     _Lcd_Clear:
  9541  19A8                     l4156:	
  9542                           ;incstack = 0
  9543                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9544                           
  9545                           
  9546                           ;LCD.c: 29:     Lcd_Cmd(0);
  9547  19A8  3000               	movlw	0
  9548  19A9  160A  158A  2200  160A  158A  	fcall	_Lcd_Cmd
  9549                           
  9550                           ;LCD.c: 30:     Lcd_Cmd(1);
  9551  19AE  3001               	movlw	1
  9552  19AF  160A  158A  2200  160A  158A  	fcall	_Lcd_Cmd
  9553  19B4                     l120:
  9554  19B4  0008               	return
  9555  19B5                     __end_of_Lcd_Clear:
  9556                           
  9557                           	psect	text34
  9558  1A00                     __ptext34:	
  9559 ;; *************** function _Lcd_Cmd *****************
  9560 ;; Defined at:
  9561 ;;		line 20 in file "LCD.c"
  9562 ;; Parameters:    Size  Location     Type
  9563 ;;  a               1    wreg     unsigned char 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  a               1    6[COMMON] unsigned char 
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  1    wreg      void 
  9568 ;; Registers used:
  9569 ;;		wreg, status,2, status,0, pclath, cstack
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9575 ;;      Params:         0       0       0       0       0
  9576 ;;      Locals:         1       0       0       0       0
  9577 ;;      Temps:          2       0       0       0       0
  9578 ;;      Totals:         3       0       0       0       0
  9579 ;;Total ram usage:        3 bytes
  9580 ;; Hardware stack levels used:    1
  9581 ;; Hardware stack levels required when called:    2
  9582 ;; This function calls:
  9583 ;;		_Lcd_Port
  9584 ;; This function is called by:
  9585 ;;		_Lcd_Clear
  9586 ;;		_Lcd_Set_Cursor
  9587 ;;		_Lcd_Init
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           
  9592                           ;psect for function _Lcd_Cmd
  9593  1A00                     _Lcd_Cmd:
  9594                           
  9595                           ;incstack = 0
  9596                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9597                           ;Lcd_Cmd@a stored from wreg
  9598  1A00  00F6               	movwf	Lcd_Cmd@a
  9599  1A01                     l3828:
  9600                           
  9601                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
  9602  1A01  1283               	bcf	3,5	;RP0=0, select bank0
  9603  1A02  1303               	bcf	3,6	;RP1=0, select bank0
  9604  1A03  1009               	bcf	9,0	;volatile
  9605  1A04                     l3830:
  9606                           
  9607                           ;LCD.c: 22:     Lcd_Port(a);
  9608  1A04  0876               	movf	Lcd_Cmd@a,w
  9609  1A05  160A  158A  2174  160A  158A  	fcall	_Lcd_Port
  9610  1A0A                     l3832:
  9611                           
  9612                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
  9613  1A0A  1283               	bcf	3,5	;RP0=0, select bank0
  9614  1A0B  1303               	bcf	3,6	;RP1=0, select bank0
  9615  1A0C  1489               	bsf	9,1	;volatile
  9616  1A0D                     l3834:
  9617                           
  9618                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9619  1A0D  300B               	movlw	11
  9620  1A0E  00F5               	movwf	??_Lcd_Cmd+1
  9621  1A0F  3062               	movlw	98
  9622  1A10  00F4               	movwf	??_Lcd_Cmd
  9623  1A11                     u7717:
  9624  1A11  0BF4               	decfsz	??_Lcd_Cmd,f
  9625  1A12  2A11               	goto	u7717
  9626  1A13  0BF5               	decfsz	??_Lcd_Cmd+1,f
  9627  1A14  2A11               	goto	u7717
  9628  1A15  0000               	nop
  9629  1A16                     l3836:
  9630                           
  9631                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
  9632  1A16  1283               	bcf	3,5	;RP0=0, select bank0
  9633  1A17  1303               	bcf	3,6	;RP1=0, select bank0
  9634  1A18  1089               	bcf	9,1	;volatile
  9635  1A19                     l117:
  9636  1A19  0008               	return
  9637  1A1A                     __end_of_Lcd_Cmd:
  9638                           
  9639                           	psect	text35
  9640  1974                     __ptext35:	
  9641 ;; *************** function _Lcd_Port *****************
  9642 ;; Defined at:
  9643 ;;		line 16 in file "LCD.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  a               1    wreg     unsigned char 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;  a               1    3[COMMON] unsigned char 
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      void 
  9650 ;; Registers used:
  9651 ;;		wreg
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9657 ;;      Params:         0       0       0       0       0
  9658 ;;      Locals:         1       0       0       0       0
  9659 ;;      Temps:          0       0       0       0       0
  9660 ;;      Totals:         1       0       0       0       0
  9661 ;;Total ram usage:        1 bytes
  9662 ;; Hardware stack levels used:    1
  9663 ;; Hardware stack levels required when called:    1
  9664 ;; This function calls:
  9665 ;;		Nothing
  9666 ;; This function is called by:
  9667 ;;		_Lcd_Cmd
  9668 ;;		_Lcd_Init
  9669 ;;		_Lcd_Write_Char
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           
  9674                           ;psect for function _Lcd_Port
  9675  1974                     _Lcd_Port:
  9676                           
  9677                           ;incstack = 0
  9678                           ; Regs used in _Lcd_Port: [wreg]
  9679                           ;Lcd_Port@a stored from wreg
  9680  1974  00F3               	movwf	Lcd_Port@a
  9681  1975                     l3696:
  9682                           
  9683                           ;LCD.c: 17:     PORTD = a;
  9684  1975  0873               	movf	Lcd_Port@a,w
  9685  1976  1283               	bcf	3,5	;RP0=0, select bank0
  9686  1977  1303               	bcf	3,6	;RP1=0, select bank0
  9687  1978  0088               	movwf	8	;volatile
  9688  1979                     l114:
  9689  1979  0008               	return
  9690  197A                     __end_of_Lcd_Port:
  9691                           
  9692                           	psect	text36
  9693  19B5                     __ptext36:	
  9694 ;; *************** function _Config_USARTT *****************
  9695 ;; Defined at:
  9696 ;;		line 11 in file "USART.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;		None
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;		None
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  1    wreg      void 
  9703 ;; Registers used:
  9704 ;;		wreg
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9710 ;;      Params:         0       0       0       0       0
  9711 ;;      Locals:         0       0       0       0       0
  9712 ;;      Temps:          0       0       0       0       0
  9713 ;;      Totals:         0       0       0       0       0
  9714 ;;Total ram usage:        0 bytes
  9715 ;; Hardware stack levels used:    1
  9716 ;; Hardware stack levels required when called:    1
  9717 ;; This function calls:
  9718 ;;		Nothing
  9719 ;; This function is called by:
  9720 ;;		_main
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           
  9725                           ;psect for function _Config_USARTT
  9726  19B5                     _Config_USARTT:
  9727  19B5                     l3224:	
  9728                           ;incstack = 0
  9729                           ; Regs used in _Config_USARTT: [wreg]
  9730                           
  9731                           
  9732                           ;USART.c: 12:     TXSTAbits.SYNC = 0;
  9733  19B5  1683               	bsf	3,5	;RP0=1, select bank1
  9734  19B6  1303               	bcf	3,6	;RP1=0, select bank1
  9735  19B7  1218               	bcf	24,4	;volatile
  9736                           
  9737                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  9738  19B8  1698               	bsf	24,5	;volatile
  9739                           
  9740                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  9741  19B9  1118               	bcf	24,2	;volatile
  9742                           
  9743                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  9744  19BA  1683               	bsf	3,5	;RP0=1, select bank3
  9745  19BB  1703               	bsf	3,6	;RP1=1, select bank3
  9746  19BC  1587               	bsf	7,3	;volatile
  9747  19BD                     l3226:
  9748                           
  9749                           ;USART.c: 16:     SPBRG = 25;
  9750  19BD  3019               	movlw	25
  9751  19BE  1683               	bsf	3,5	;RP0=1, select bank1
  9752  19BF  1303               	bcf	3,6	;RP1=0, select bank1
  9753  19C0  0099               	movwf	25	;volatile
  9754  19C1                     l3228:
  9755                           
  9756                           ;USART.c: 17:     RCSTAbits.SPEN = 1;
  9757  19C1  1283               	bcf	3,5	;RP0=0, select bank0
  9758  19C2  1303               	bcf	3,6	;RP1=0, select bank0
  9759  19C3  1798               	bsf	24,7	;volatile
  9760  19C4                     l3230:
  9761                           
  9762                           ;USART.c: 18:     INTCONbits.GIE = 1;
  9763  19C4  178B               	bsf	11,7	;volatile
  9764  19C5                     l157:
  9765  19C5  0008               	return
  9766  19C6                     __end_of_Config_USARTT:
  9767                           
  9768                           	psect	text37
  9769  1A1A                     __ptext37:	
  9770 ;; *************** function _ISR *****************
  9771 ;; Defined at:
  9772 ;;		line 208 in file "main.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;		None
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9786 ;;      Params:         0       0       0       0       0
  9787 ;;      Locals:         0       0       0       0       0
  9788 ;;      Temps:          3       0       0       0       0
  9789 ;;      Totals:         3       0       0       0       0
  9790 ;;Total ram usage:        3 bytes
  9791 ;; Hardware stack levels used:    1
  9792 ;; This function calls:
  9793 ;;		Nothing
  9794 ;; This function is called by:
  9795 ;;		Interrupt level 1
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           
  9800                           ;psect for function _ISR
  9801  1A1A                     _ISR:
  9802  1A1A                     i1l3648:
  9803                           
  9804                           ;main.c: 209:     if (PIR1bits.RCIF == 1) {
  9805  1A1A  1283               	bcf	3,5	;RP0=0, select bank0
  9806  1A1B  1303               	bcf	3,6	;RP1=0, select bank0
  9807  1A1C  1E8C               	btfss	12,5	;volatile
  9808  1A1D  2A1F               	goto	u574_21
  9809  1A1E  2A20               	goto	u574_20
  9810  1A1F                     u574_21:
  9811  1A1F  2A31               	goto	i1l105
  9812  1A20                     u574_20:
  9813  1A20                     i1l3650:
  9814                           
  9815                           ;main.c: 210:         if (RCSTAbits.OERR == 1) {
  9816  1A20  1C98               	btfss	24,1	;volatile
  9817  1A21  2A23               	goto	u575_21
  9818  1A22  2A24               	goto	u575_20
  9819  1A23                     u575_21:
  9820  1A23  2A2B               	goto	i1l3656
  9821  1A24                     u575_20:
  9822  1A24                     i1l3652:
  9823                           
  9824                           ;main.c: 211:             RCSTAbits.CREN = 0;
  9825  1A24  1218               	bcf	24,4	;volatile
  9826  1A25                     i1l3654:
  9827                           
  9828                           ;main.c: 212:             _delay((unsigned long)((300)*(8000000/4000000.0)));
  9829  1A25  30C7               	movlw	199
  9830  1A26  00F0               	movwf	??_ISR
  9831  1A27                     u772_27:
  9832  1A27  0BF0               	decfsz	??_ISR,f
  9833  1A28  2A27               	goto	u772_27
  9834  1A29  2A2A               	nop2
  9835                           
  9836                           ;main.c: 213:         } else {
  9837  1A2A  2A31               	goto	i1l105
  9838  1A2B                     i1l3656:
  9839                           
  9840                           ;main.c: 214:             recibido = RCREG;
  9841  1A2B  081A               	movf	26,w	;volatile
  9842  1A2C  00F0               	movwf	??_ISR
  9843  1A2D  0870               	movf	??_ISR,w
  9844  1A2E  1683               	bsf	3,5	;RP0=1, select bank1
  9845  1A2F  1303               	bcf	3,6	;RP1=0, select bank1
  9846  1A30  00E1               	movwf	_recibido^(0+128)
  9847  1A31                     i1l105:
  9848  1A31  0872               	movf	??_ISR+2,w
  9849  1A32  008A               	movwf	10
  9850  1A33  0E71               	swapf	??_ISR+1,w
  9851  1A34  0083               	movwf	3
  9852  1A35  0EFE               	swapf	btemp,f
  9853  1A36  0E7E               	swapf	btemp,w
  9854  1A37  0009               	retfie
  9855  1A38                     __end_of_ISR:
  9856  007E                     btemp	set	126	;btemp
  9857  007E                     wtemp0	set	126
  9858                           
  9859                           	psect	intentry
  9860  0004                     __pintentry:	
  9861                           ;incstack = 0
  9862                           ; Regs used in _ISR: [wreg]
  9863                           
  9864  0004                     interrupt_function:
  9865  007E                     saved_w	set	btemp
  9866  0004  00FE               	movwf	btemp
  9867  0005  0E03               	swapf	3,w
  9868  0006  00F1               	movwf	??_ISR+1
  9869  0007  080A               	movf	10,w
  9870  0008  00F2               	movwf	??_ISR+2
  9871  0009  160A  158A  2A1A   	ljmp	_ISR
  9872                           
  9873                           	psect	config
  9874                           
  9875                           ;Config register CONFIG1 @ 0x2007
  9876                           ;	Oscillator Selection bits
  9877                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9878                           ;	Watchdog Timer Enable bit
  9879                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9880                           ;	Power-up Timer Enable bit
  9881                           ;	PWRTE = OFF, PWRT disabled
  9882                           ;	RE3/MCLR pin function select bit
  9883                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9884                           ;	Code Protection bit
  9885                           ;	CP = OFF, Program memory code protection is disabled
  9886                           ;	Data Code Protection bit
  9887                           ;	CPD = OFF, Data memory code protection is disabled
  9888                           ;	Brown Out Reset Selection bits
  9889                           ;	BOREN = OFF, BOR disabled
  9890                           ;	Internal External Switchover bit
  9891                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9892                           ;	Fail-Safe Clock Monitor Enabled bit
  9893                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9894                           ;	Low Voltage Programming Enable bit
  9895                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9896                           ;	In-Circuit Debugger Mode bit
  9897                           ;	DEBUG = 0x1, unprogrammed default
  9898  2007                     	org	8199
  9899  2007  20D5               	dw	8405
  9900                           
  9901                           ;Config register CONFIG2 @ 0x2008
  9902                           ;	Brown-out Reset Selection bit
  9903                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9904                           ;	Flash Program Memory Self Write Enable bits
  9905                           ;	WRT = OFF, Write protection off
  9906  2008                     	org	8200
  9907  2008  3FFF               	dw	16383
  9908                           
  9909                           	psect	text1_split_1
  9910  0033                     u7180:
  9911  0033                     l4280:
  9912  0033  1683               	bsf	3,5	;RP0=1, select bank1
  9913  0034  1303               	bcf	3,6	;RP1=0, select bank1
  9914  0035  0848               	movf	(sprintf@fval+3)^(0+128),w
  9915  0036  1283               	bcf	3,5	;RP0=0, select bank0
  9916  0037  1303               	bcf	3,6	;RP1=0, select bank0
  9917  0038  00A3               	movwf	___fleq@ff1+3
  9918  0039  1683               	bsf	3,5	;RP0=1, select bank1
  9919  003A  1303               	bcf	3,6	;RP1=0, select bank1
  9920  003B  0847               	movf	(sprintf@fval+2)^(0+128),w
  9921  003C  1283               	bcf	3,5	;RP0=0, select bank0
  9922  003D  1303               	bcf	3,6	;RP1=0, select bank0
  9923  003E  00A2               	movwf	___fleq@ff1+2
  9924  003F  1683               	bsf	3,5	;RP0=1, select bank1
  9925  0040  1303               	bcf	3,6	;RP1=0, select bank1
  9926  0041  0846               	movf	(sprintf@fval+1)^(0+128),w
  9927  0042  1283               	bcf	3,5	;RP0=0, select bank0
  9928  0043  1303               	bcf	3,6	;RP1=0, select bank0
  9929  0044  00A1               	movwf	___fleq@ff1+1
  9930  0045  1683               	bsf	3,5	;RP0=1, select bank1
  9931  0046  1303               	bcf	3,6	;RP1=0, select bank1
  9932  0047  0845               	movf	sprintf@fval^(0+128),w
  9933  0048  1283               	bcf	3,5	;RP0=0, select bank0
  9934  0049  1303               	bcf	3,6	;RP1=0, select bank0
  9935  004A  00A0               	movwf	___fleq@ff1
  9936  004B  3000               	movlw	0
  9937  004C  00A7               	movwf	___fleq@ff2+3
  9938  004D  3000               	movlw	0
  9939  004E  00A6               	movwf	___fleq@ff2+2
  9940  004F  3000               	movlw	0
  9941  0050  00A5               	movwf	___fleq@ff2+1
  9942  0051  3000               	movlw	0
  9943  0052  00A4               	movwf	___fleq@ff2
  9944  0053  160A  158A  23C1  120A  118A  	fcall	___fleq
  9945  0058  1803               	btfsc	3,0
  9946  0059  285B               	goto	u7191
  9947  005A  285C               	goto	u7190
  9948  005B                     u7191:
  9949  005B  293E               	goto	l4300
  9950  005C                     u7190:
  9951  005C                     l4282:
  9952  005C  1683               	bsf	3,5	;RP0=1, select bank1
  9953  005D  1303               	bcf	3,6	;RP1=0, select bank1
  9954  005E  0848               	movf	(sprintf@fval+3)^(0+128),w
  9955  005F  1283               	bcf	3,5	;RP0=0, select bank0
  9956  0060  1303               	bcf	3,6	;RP1=0, select bank0
  9957  0061  00DB               	movwf	___fltol@f1+3
  9958  0062  1683               	bsf	3,5	;RP0=1, select bank1
  9959  0063  1303               	bcf	3,6	;RP1=0, select bank1
  9960  0064  0847               	movf	(sprintf@fval+2)^(0+128),w
  9961  0065  1283               	bcf	3,5	;RP0=0, select bank0
  9962  0066  1303               	bcf	3,6	;RP1=0, select bank0
  9963  0067  00DA               	movwf	___fltol@f1+2
  9964  0068  1683               	bsf	3,5	;RP0=1, select bank1
  9965  0069  1303               	bcf	3,6	;RP1=0, select bank1
  9966  006A  0846               	movf	(sprintf@fval+1)^(0+128),w
  9967  006B  1283               	bcf	3,5	;RP0=0, select bank0
  9968  006C  1303               	bcf	3,6	;RP1=0, select bank0
  9969  006D  00D9               	movwf	___fltol@f1+1
  9970  006E  1683               	bsf	3,5	;RP0=1, select bank1
  9971  006F  1303               	bcf	3,6	;RP1=0, select bank1
  9972  0070  0845               	movf	sprintf@fval^(0+128),w
  9973  0071  1283               	bcf	3,5	;RP0=0, select bank0
  9974  0072  1303               	bcf	3,6	;RP1=0, select bank0
  9975  0073  00D8               	movwf	___fltol@f1
  9976  0074  120A  158A  2002  120A  118A  	fcall	___fltol
  9977  0079  1283               	bcf	3,5	;RP0=0, select bank0
  9978  007A  1303               	bcf	3,6	;RP1=0, select bank0
  9979  007B  085B               	movf	?___fltol+3,w
  9980  007C  045A               	iorwf	?___fltol+2,w
  9981  007D  0459               	iorwf	?___fltol+1,w
  9982  007E  0458               	iorwf	?___fltol,w
  9983  007F  1D03               	skipz
  9984  0080  2882               	goto	u7201
  9985  0081  2883               	goto	u7200
  9986  0082                     u7201:
  9987  0082  293E               	goto	l4300
  9988  0083                     u7200:
  9989  0083                     l4284:
  9990  0083  1683               	bsf	3,5	;RP0=1, select bank1
  9991  0084  1303               	bcf	3,6	;RP1=0, select bank1
  9992  0085  0844               	movf	(sprintf@eexp+1)^(0+128),w
  9993  0086  3A80               	xorlw	128
  9994  0087  00FF               	movwf	btemp+1
  9995  0088  3080               	movlw	128
  9996  0089  027F               	subwf	btemp+1,w
  9997  008A  1D03               	skipz
  9998  008B  288E               	goto	u7215
  9999  008C  3002               	movlw	2
 10000  008D  0243               	subwf	sprintf@eexp^(0+128),w
 10001  008E                     u7215:
 10002  008E  1C03               	skipc
 10003  008F  2891               	goto	u7211
 10004  0090  2892               	goto	u7210
 10005  0091                     u7211:
 10006  0091  293E               	goto	l4300
 10007  0092                     u7210:
 10008  0092                     l4286:
 10009                           
 10010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10011  0092  1683               	bsf	3,5	;RP0=1, select bank1
 10012  0093  1303               	bcf	3,6	;RP1=0, select bank1
 10013  0094  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10014  0095  1283               	bcf	3,5	;RP0=0, select bank0
 10015  0096  1303               	bcf	3,6	;RP1=0, select bank0
 10016  0097  00A3               	movwf	___flge@ff1+3
 10017  0098  1683               	bsf	3,5	;RP0=1, select bank1
 10018  0099  1303               	bcf	3,6	;RP1=0, select bank1
 10019  009A  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10020  009B  1283               	bcf	3,5	;RP0=0, select bank0
 10021  009C  1303               	bcf	3,6	;RP1=0, select bank0
 10022  009D  00A2               	movwf	___flge@ff1+2
 10023  009E  1683               	bsf	3,5	;RP0=1, select bank1
 10024  009F  1303               	bcf	3,6	;RP1=0, select bank1
 10025  00A0  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10026  00A1  1283               	bcf	3,5	;RP0=0, select bank0
 10027  00A2  1303               	bcf	3,6	;RP1=0, select bank0
 10028  00A3  00A1               	movwf	___flge@ff1+1
 10029  00A4  1683               	bsf	3,5	;RP0=1, select bank1
 10030  00A5  1303               	bcf	3,6	;RP1=0, select bank1
 10031  00A6  083B               	movf	sprintf@tmpval^(0+128),w
 10032  00A7  1283               	bcf	3,5	;RP0=0, select bank0
 10033  00A8  1303               	bcf	3,6	;RP1=0, select bank0
 10034  00A9  00A0               	movwf	___flge@ff1
 10035  00AA  3040               	movlw	64
 10036  00AB  00A7               	movwf	___flge@ff2+3
 10037  00AC  3089               	movlw	137
 10038  00AD  00A6               	movwf	___flge@ff2+2
 10039  00AE  3070               	movlw	112
 10040  00AF  00A5               	movwf	___flge@ff2+1
 10041  00B0  305F               	movlw	95
 10042  00B1  00A4               	movwf	___flge@ff2
 10043  00B2  160A  158A  25E3  120A  118A  	fcall	___flge
 10044  00B7  1803               	btfsc	3,0
 10045  00B8  28BA               	goto	u7221
 10046  00B9  28BB               	goto	u7220
 10047  00BA                     u7221:
 10048  00BA  28C4               	goto	l4290
 10049  00BB                     u7220:
 10050  00BB                     l4288:
 10051                           
 10052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10053  00BB  30F7               	movlw	247
 10054  00BC  1683               	bsf	3,5	;RP0=1, select bank1
 10055  00BD  1303               	bcf	3,6	;RP1=0, select bank1
 10056  00BE  07C3               	addwf	sprintf@eexp^(0+128),f
 10057  00BF  1803               	skipnc
 10058  00C0  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10059  00C1  30FF               	movlw	255
 10060  00C2  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10061                           
 10062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10063  00C3  28CC               	goto	l4292
 10064  00C4                     l4290:
 10065                           
 10066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10067  00C4  30F8               	movlw	248
 10068  00C5  1683               	bsf	3,5	;RP0=1, select bank1
 10069  00C6  1303               	bcf	3,6	;RP1=0, select bank1
 10070  00C7  07C3               	addwf	sprintf@eexp^(0+128),f
 10071  00C8  1803               	skipnc
 10072  00C9  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10073  00CA  30FF               	movlw	255
 10074  00CB  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10075  00CC                     l4292:
 10076                           
 10077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10078  00CC  0843               	movf	sprintf@eexp^(0+128),w
 10079  00CD  120A  158A  249D  120A  118A  	fcall	_scale
 10080  00D2  1283               	bcf	3,5	;RP0=0, select bank0
 10081  00D3  1303               	bcf	3,6	;RP1=0, select bank0
 10082  00D4  0848               	movf	?_scale+3,w
 10083  00D5  1683               	bsf	3,5	;RP0=1, select bank1
 10084  00D6  1303               	bcf	3,6	;RP1=0, select bank1
 10085  00D7  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10086  00D8  1283               	bcf	3,5	;RP0=0, select bank0
 10087  00D9  1303               	bcf	3,6	;RP1=0, select bank0
 10088  00DA  0847               	movf	?_scale+2,w
 10089  00DB  1683               	bsf	3,5	;RP0=1, select bank1
 10090  00DC  1303               	bcf	3,6	;RP1=0, select bank1
 10091  00DD  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10092  00DE  1283               	bcf	3,5	;RP0=0, select bank0
 10093  00DF  1303               	bcf	3,6	;RP1=0, select bank0
 10094  00E0  0846               	movf	?_scale+1,w
 10095  00E1  1683               	bsf	3,5	;RP0=1, select bank1
 10096  00E2  1303               	bcf	3,6	;RP1=0, select bank1
 10097  00E3  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10098  00E4  1283               	bcf	3,5	;RP0=0, select bank0
 10099  00E5  1303               	bcf	3,6	;RP1=0, select bank0
 10100  00E6  0845               	movf	?_scale,w
 10101  00E7  1683               	bsf	3,5	;RP0=1, select bank1
 10102  00E8  1303               	bcf	3,6	;RP1=0, select bank1
 10103  00E9  00BB               	movwf	sprintf@tmpval^(0+128)
 10104  00EA                     l4294:
 10105  00EA  0848               	movf	(sprintf@fval+3)^(0+128),w
 10106  00EB  1283               	bcf	3,5	;RP0=0, select bank0
 10107  00EC  1303               	bcf	3,6	;RP1=0, select bank0
 10108  00ED  00A3               	movwf	__div_to_l_@f1+3
 10109  00EE  1683               	bsf	3,5	;RP0=1, select bank1
 10110  00EF  1303               	bcf	3,6	;RP1=0, select bank1
 10111  00F0  0847               	movf	(sprintf@fval+2)^(0+128),w
 10112  00F1  1283               	bcf	3,5	;RP0=0, select bank0
 10113  00F2  1303               	bcf	3,6	;RP1=0, select bank0
 10114  00F3  00A2               	movwf	__div_to_l_@f1+2
 10115  00F4  1683               	bsf	3,5	;RP0=1, select bank1
 10116  00F5  1303               	bcf	3,6	;RP1=0, select bank1
 10117  00F6  0846               	movf	(sprintf@fval+1)^(0+128),w
 10118  00F7  1283               	bcf	3,5	;RP0=0, select bank0
 10119  00F8  1303               	bcf	3,6	;RP1=0, select bank0
 10120  00F9  00A1               	movwf	__div_to_l_@f1+1
 10121  00FA  1683               	bsf	3,5	;RP0=1, select bank1
 10122  00FB  1303               	bcf	3,6	;RP1=0, select bank1
 10123  00FC  0845               	movf	sprintf@fval^(0+128),w
 10124  00FD  1283               	bcf	3,5	;RP0=0, select bank0
 10125  00FE  1303               	bcf	3,6	;RP1=0, select bank0
 10126  00FF  00A0               	movwf	__div_to_l_@f1
 10127  0100  1683               	bsf	3,5	;RP0=1, select bank1
 10128  0101  1303               	bcf	3,6	;RP1=0, select bank1
 10129  0102  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10130  0103  1283               	bcf	3,5	;RP0=0, select bank0
 10131  0104  1303               	bcf	3,6	;RP1=0, select bank0
 10132  0105  00A7               	movwf	__div_to_l_@f2+3
 10133  0106  1683               	bsf	3,5	;RP0=1, select bank1
 10134  0107  1303               	bcf	3,6	;RP1=0, select bank1
 10135  0108  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10136  0109  1283               	bcf	3,5	;RP0=0, select bank0
 10137  010A  1303               	bcf	3,6	;RP1=0, select bank0
 10138  010B  00A6               	movwf	__div_to_l_@f2+2
 10139  010C  1683               	bsf	3,5	;RP0=1, select bank1
 10140  010D  1303               	bcf	3,6	;RP1=0, select bank1
 10141  010E  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10142  010F  1283               	bcf	3,5	;RP0=0, select bank0
 10143  0110  1303               	bcf	3,6	;RP1=0, select bank0
 10144  0111  00A5               	movwf	__div_to_l_@f2+1
 10145  0112  1683               	bsf	3,5	;RP0=1, select bank1
 10146  0113  1303               	bcf	3,6	;RP1=0, select bank1
 10147  0114  083B               	movf	sprintf@tmpval^(0+128),w
 10148  0115  1283               	bcf	3,5	;RP0=0, select bank0
 10149  0116  1303               	bcf	3,6	;RP1=0, select bank0
 10150  0117  00A4               	movwf	__div_to_l_@f2
 10151  0118  120A  158A  207E  120A  118A  	fcall	__div_to_l_
 10152  011D  1283               	bcf	3,5	;RP0=0, select bank0
 10153  011E  1303               	bcf	3,6	;RP1=0, select bank0
 10154  011F  0823               	movf	?__div_to_l_+3,w
 10155  0120  1683               	bsf	3,5	;RP0=1, select bank1
 10156  0121  1303               	bcf	3,6	;RP1=0, select bank1
 10157  0122  00C2               	movwf	(sprintf@val+3)^(0+128)
 10158  0123  1283               	bcf	3,5	;RP0=0, select bank0
 10159  0124  1303               	bcf	3,6	;RP1=0, select bank0
 10160  0125  0822               	movf	?__div_to_l_+2,w
 10161  0126  1683               	bsf	3,5	;RP0=1, select bank1
 10162  0127  1303               	bcf	3,6	;RP1=0, select bank1
 10163  0128  00C1               	movwf	(sprintf@val+2)^(0+128)
 10164  0129  1283               	bcf	3,5	;RP0=0, select bank0
 10165  012A  1303               	bcf	3,6	;RP1=0, select bank0
 10166  012B  0821               	movf	?__div_to_l_+1,w
 10167  012C  1683               	bsf	3,5	;RP0=1, select bank1
 10168  012D  1303               	bcf	3,6	;RP1=0, select bank1
 10169  012E  00C0               	movwf	(sprintf@val+1)^(0+128)
 10170  012F  1283               	bcf	3,5	;RP0=0, select bank0
 10171  0130  1303               	bcf	3,6	;RP1=0, select bank0
 10172  0131  0820               	movf	?__div_to_l_,w
 10173  0132  1683               	bsf	3,5	;RP0=1, select bank1
 10174  0133  1303               	bcf	3,6	;RP1=0, select bank1
 10175  0134  00BF               	movwf	sprintf@val^(0+128)
 10176  0135                     l4298:
 10177                           
 10178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10179  0135  3000               	movlw	0
 10180  0136  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10181  0137  3000               	movlw	0
 10182  0138  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10183  0139  3000               	movlw	0
 10184  013A  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10185  013B  3000               	movlw	0
 10186  013C  00C5               	movwf	sprintf@fval^(0+128)
 10187                           
 10188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10189  013D  29A4               	goto	l4306
 10190  013E                     l4300:
 10191                           
 10192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10193  013E  1683               	bsf	3,5	;RP0=1, select bank1
 10194  013F  1303               	bcf	3,6	;RP1=0, select bank1
 10195  0140  0848               	movf	(sprintf@fval+3)^(0+128),w
 10196  0141  1283               	bcf	3,5	;RP0=0, select bank0
 10197  0142  1303               	bcf	3,6	;RP1=0, select bank0
 10198  0143  00DB               	movwf	___fltol@f1+3
 10199  0144  1683               	bsf	3,5	;RP0=1, select bank1
 10200  0145  1303               	bcf	3,6	;RP1=0, select bank1
 10201  0146  0847               	movf	(sprintf@fval+2)^(0+128),w
 10202  0147  1283               	bcf	3,5	;RP0=0, select bank0
 10203  0148  1303               	bcf	3,6	;RP1=0, select bank0
 10204  0149  00DA               	movwf	___fltol@f1+2
 10205  014A  1683               	bsf	3,5	;RP0=1, select bank1
 10206  014B  1303               	bcf	3,6	;RP1=0, select bank1
 10207  014C  0846               	movf	(sprintf@fval+1)^(0+128),w
 10208  014D  1283               	bcf	3,5	;RP0=0, select bank0
 10209  014E  1303               	bcf	3,6	;RP1=0, select bank0
 10210  014F  00D9               	movwf	___fltol@f1+1
 10211  0150  1683               	bsf	3,5	;RP0=1, select bank1
 10212  0151  1303               	bcf	3,6	;RP1=0, select bank1
 10213  0152  0845               	movf	sprintf@fval^(0+128),w
 10214  0153  1283               	bcf	3,5	;RP0=0, select bank0
 10215  0154  1303               	bcf	3,6	;RP1=0, select bank0
 10216  0155  00D8               	movwf	___fltol@f1
 10217  0156  120A  158A  2002  120A  118A  	fcall	___fltol
 10218  015B  1283               	bcf	3,5	;RP0=0, select bank0
 10219  015C  1303               	bcf	3,6	;RP1=0, select bank0
 10220  015D  085B               	movf	?___fltol+3,w
 10221  015E  1683               	bsf	3,5	;RP0=1, select bank1
 10222  015F  1303               	bcf	3,6	;RP1=0, select bank1
 10223  0160  00C2               	movwf	(sprintf@val+3)^(0+128)
 10224  0161  1283               	bcf	3,5	;RP0=0, select bank0
 10225  0162  1303               	bcf	3,6	;RP1=0, select bank0
 10226  0163  085A               	movf	?___fltol+2,w
 10227  0164  1683               	bsf	3,5	;RP0=1, select bank1
 10228  0165  1303               	bcf	3,6	;RP1=0, select bank1
 10229  0166  00C1               	movwf	(sprintf@val+2)^(0+128)
 10230  0167  1283               	bcf	3,5	;RP0=0, select bank0
 10231  0168  1303               	bcf	3,6	;RP1=0, select bank0
 10232  0169  0859               	movf	?___fltol+1,w
 10233  016A  1683               	bsf	3,5	;RP0=1, select bank1
 10234  016B  1303               	bcf	3,6	;RP1=0, select bank1
 10235  016C  00C0               	movwf	(sprintf@val+1)^(0+128)
 10236  016D  1283               	bcf	3,5	;RP0=0, select bank0
 10237  016E  1303               	bcf	3,6	;RP1=0, select bank0
 10238  016F  0858               	movf	?___fltol,w
 10239  0170  1683               	bsf	3,5	;RP0=1, select bank1
 10240  0171  1303               	bcf	3,6	;RP1=0, select bank1
 10241  0172  00BF               	movwf	sprintf@val^(0+128)
 10242  0173                     l4302:
 10243                           
 10244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10245  0173  0842               	movf	(sprintf@val+3)^(0+128),w
 10246  0174  00F6               	movwf	___xxtofl@val+3
 10247  0175  0841               	movf	(sprintf@val+2)^(0+128),w
 10248  0176  00F5               	movwf	___xxtofl@val+2
 10249  0177  0840               	movf	(sprintf@val+1)^(0+128),w
 10250  0178  00F4               	movwf	___xxtofl@val+1
 10251  0179  083F               	movf	sprintf@val^(0+128),w
 10252  017A  00F3               	movwf	___xxtofl@val
 10253  017B  3000               	movlw	0
 10254  017C  160A  158A  2687  120A  118A  	fcall	___xxtofl
 10255  0181  0876               	movf	?___xxtofl+3,w
 10256  0182  1683               	bsf	3,5	;RP0=1, select bank1
 10257  0183  1303               	bcf	3,6	;RP1=0, select bank1
 10258  0184  00A3               	movwf	(___flsub@a+3)^(0+128)
 10259  0185  0875               	movf	?___xxtofl+2,w
 10260  0186  00A2               	movwf	(___flsub@a+2)^(0+128)
 10261  0187  0874               	movf	?___xxtofl+1,w
 10262  0188  00A1               	movwf	(___flsub@a+1)^(0+128)
 10263  0189  0873               	movf	?___xxtofl,w
 10264  018A  00A0               	movwf	___flsub@a^(0+128)
 10265  018B  0848               	movf	(sprintf@fval+3)^(0+128),w
 10266  018C  00A7               	movwf	(___flsub@b+3)^(0+128)
 10267  018D  0847               	movf	(sprintf@fval+2)^(0+128),w
 10268  018E  00A6               	movwf	(___flsub@b+2)^(0+128)
 10269  018F  0846               	movf	(sprintf@fval+1)^(0+128),w
 10270  0190  00A5               	movwf	(___flsub@b+1)^(0+128)
 10271  0191  0845               	movf	sprintf@fval^(0+128),w
 10272  0192  00A4               	movwf	___flsub@b^(0+128)
 10273  0193  160A  158A  2411  120A  118A  	fcall	___flsub
 10274  0198  1683               	bsf	3,5	;RP0=1, select bank1
 10275  0199  1303               	bcf	3,6	;RP1=0, select bank1
 10276  019A  0823               	movf	(?___flsub+3)^(0+128),w
 10277  019B  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10278  019C  0822               	movf	(?___flsub+2)^(0+128),w
 10279  019D  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10280  019E  0821               	movf	(?___flsub+1)^(0+128),w
 10281  019F  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10282  01A0  0820               	movf	?___flsub^(0+128),w
 10283  01A1  00C5               	movwf	sprintf@fval^(0+128)
 10284  01A2                     l4304:
 10285                           
 10286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10287  01A2  01C3               	clrf	sprintf@eexp^(0+128)
 10288  01A3  01C4               	clrf	(sprintf@eexp+1)^(0+128)
 10289  01A4                     l4306:
 10290                           
 10291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10292  01A4  01CC               	clrf	sprintf@c^(0+128)
 10293  01A5  0ACC               	incf	sprintf@c^(0+128),f
 10294  01A6                     l4312:
 10295                           
 10296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10297  01A6  084C               	movf	sprintf@c^(0+128),w
 10298  01A7  00AD               	movwf	??_sprintf^(0+128)
 10299  01A8  3001               	movlw	1
 10300  01A9                     u7235:
 10301  01A9  1003               	clrc
 10302  01AA  0DAD               	rlf	??_sprintf^(0+128),f
 10303  01AB  3EFF               	addlw	-1
 10304  01AC  1D03               	skipz
 10305  01AD  29A9               	goto	u7235
 10306  01AE  1003               	clrc
 10307  01AF  0D2D               	rlf	??_sprintf^(0+128),w
 10308  01B0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10309  01B1  0084               	movwf	4
 10310  01B2  160A  158A  200A  120A  118A  	fcall	stringdir
 10311  01B7  00AE               	movwf	(??_sprintf+1)^(0+128)
 10312  01B8  160A  158A  200A  120A  118A  	fcall	stringdir
 10313  01BD  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 10314  01BE  160A  158A  200A  120A  118A  	fcall	stringdir
 10315  01C3  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 10316  01C4  160A  158A  200A  120A  118A  	fcall	stringdir
 10317  01C9  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 10318  01CA  0831               	movf	(??_sprintf+4)^(0+128),w
 10319  01CB  0242               	subwf	(sprintf@val+3)^(0+128),w
 10320  01CC  1D03               	skipz
 10321  01CD  29D8               	goto	u7245
 10322  01CE  0830               	movf	(??_sprintf+3)^(0+128),w
 10323  01CF  0241               	subwf	(sprintf@val+2)^(0+128),w
 10324  01D0  1D03               	skipz
 10325  01D1  29D8               	goto	u7245
 10326  01D2  082F               	movf	(??_sprintf+2)^(0+128),w
 10327  01D3  0240               	subwf	(sprintf@val+1)^(0+128),w
 10328  01D4  1D03               	skipz
 10329  01D5  29D8               	goto	u7245
 10330  01D6  082E               	movf	(??_sprintf+1)^(0+128),w
 10331  01D7  023F               	subwf	sprintf@val^(0+128),w
 10332  01D8                     u7245:
 10333  01D8  1803               	skipnc
 10334  01D9  29DB               	goto	u7241
 10335  01DA  29DC               	goto	u7240
 10336  01DB                     u7241:
 10337  01DB  29DD               	goto	l4316
 10338  01DC                     u7240:
 10339  01DC  29E7               	goto	l4318
 10340  01DD                     l4316:
 10341  01DD  3001               	movlw	1
 10342  01DE  00AD               	movwf	??_sprintf^(0+128)
 10343  01DF  082D               	movf	??_sprintf^(0+128),w
 10344  01E0  07CC               	addwf	sprintf@c^(0+128),f
 10345  01E1  300A               	movlw	10
 10346  01E2  064C               	xorwf	sprintf@c^(0+128),w
 10347  01E3  1D03               	btfss	3,2
 10348  01E4  29E6               	goto	u7251
 10349  01E5  29E7               	goto	u7250
 10350  01E6                     u7251:
 10351  01E6  29A6               	goto	l4312
 10352  01E7                     u7250:
 10353  01E7                     l4318:
 10354                           
 10355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10356  01E7  084C               	movf	sprintf@c^(0+128),w
 10357  01E8  074A               	addwf	sprintf@prec^(0+128),w
 10358  01E9  00AD               	movwf	??_sprintf^(0+128)
 10359  01EA  084B               	movf	(sprintf@prec+1)^(0+128),w
 10360  01EB  1803               	skipnc
 10361  01EC  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 10362  01ED  00AE               	movwf	(??_sprintf^(0+128)+1)
 10363  01EE  0843               	movf	sprintf@eexp^(0+128),w
 10364  01EF  072D               	addwf	??_sprintf^(0+128),w
 10365  01F0  00AF               	movwf	(??_sprintf+2)^(0+128)
 10366  01F1  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10367  01F2  1803               	skipnc
 10368  01F3  0A44               	incf	(sprintf@eexp+1)^(0+128),w
 10369  01F4  072E               	addwf	(??_sprintf+1)^(0+128),w
 10370  01F5  00B0               	movwf	(??_sprintf+3)^(0+128)
 10371  01F6  082F               	movf	(??_sprintf+2)^(0+128),w
 10372  01F7  02B9               	subwf	sprintf@width^(0+128),f
 10373  01F8  0830               	movf	(??_sprintf+3)^(0+128),w
 10374  01F9  1C03               	skipc
 10375  01FA  03BA               	decf	(sprintf@width+1)^(0+128),f
 10376  01FB  02BA               	subwf	(sprintf@width+1)^(0+128),f
 10377                           
 10378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10379  01FC  084A               	movf	sprintf@prec^(0+128),w
 10380  01FD  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10381  01FE  1903               	btfsc	3,2
 10382  01FF  2A01               	goto	u7261
 10383  0200  2A02               	goto	u7260
 10384  0201                     u7261:
 10385  0201  2A08               	goto	l4322
 10386  0202                     u7260:
 10387  0202                     l4320:
 10388                           
 10389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10390  0202  30FF               	movlw	255
 10391  0203  07B9               	addwf	sprintf@width^(0+128),f
 10392  0204  1803               	skipnc
 10393  0205  0ABA               	incf	(sprintf@width+1)^(0+128),f
 10394  0206  30FF               	movlw	255
 10395  0207  07BA               	addwf	(sprintf@width+1)^(0+128),f
 10396  0208                     l4322:
 10397                           
 10398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10399  0208  3003               	movlw	3
 10400  0209  0537               	andwf	sprintf@flag^(0+128),w
 10401  020A  00AD               	movwf	??_sprintf^(0+128)
 10402  020B  3000               	movlw	0
 10403  020C  0538               	andwf	(sprintf@flag+1)^(0+128),w
 10404  020D  00AE               	movwf	(??_sprintf+1)^(0+128)
 10405  020E  082D               	movf	??_sprintf^(0+128),w
 10406  020F  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10407  0210  1903               	btfsc	3,2
 10408  0211  2A13               	goto	u7271
 10409  0212  2A14               	goto	u7270
 10410  0213                     u7271:
 10411  0213  2A29               	goto	l4332
 10412  0214                     u7270:
 10413  0214                     l4324:
 10414                           
 10415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10416  0214  30FF               	movlw	255
 10417  0215  07B9               	addwf	sprintf@width^(0+128),f
 10418  0216  1803               	skipnc
 10419  0217  0ABA               	incf	(sprintf@width+1)^(0+128),f
 10420  0218  30FF               	movlw	255
 10421  0219  07BA               	addwf	(sprintf@width+1)^(0+128),f
 10422  021A  2A29               	goto	l4332
 10423  021B                     l4326:
 10424                           
 10425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10426  021B  3020               	movlw	32
 10427  021C  1683               	bsf	3,5	;RP0=1, select bank1
 10428  021D  1303               	bcf	3,6	;RP1=0, select bank1
 10429  021E  00AD               	movwf	??_sprintf^(0+128)
 10430  021F  0849               	movf	sprintf@sp^(0+128),w
 10431  0220  0084               	movwf	4
 10432  0221  082D               	movf	??_sprintf^(0+128),w
 10433  0222  1783               	bsf	3,7	;select IRP bank2
 10434  0223  0080               	movwf	0
 10435  0224                     l4328:
 10436  0224  3001               	movlw	1
 10437  0225  00AD               	movwf	??_sprintf^(0+128)
 10438  0226  082D               	movf	??_sprintf^(0+128),w
 10439  0227  07C9               	addwf	sprintf@sp^(0+128),f
 10440  0228  2A14               	goto	l4324
 10441  0229                     l4332:
 10442                           
 10443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10444  0229  083A               	movf	(sprintf@width+1)^(0+128),w
 10445  022A  3A80               	xorlw	128
 10446  022B  00FF               	movwf	btemp+1
 10447  022C  3080               	movlw	128
 10448  022D  027F               	subwf	btemp+1,w
 10449  022E  1D03               	skipz
 10450  022F  2A32               	goto	u7285
 10451  0230  3001               	movlw	1
 10452  0231  0239               	subwf	sprintf@width^(0+128),w
 10453  0232                     u7285:
 10454  0232  1803               	skipnc
 10455  0233  2A35               	goto	u7281
 10456  0234  2A36               	goto	u7280
 10457  0235                     u7281:
 10458  0235  2A1B               	goto	l4326
 10459  0236                     u7280:
 10460  0236                     l4334:
 10461                           
 10462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10463  0236  3003               	movlw	3
 10464  0237  1683               	bsf	3,5	;RP0=1, select bank1
 10465  0238  1303               	bcf	3,6	;RP1=0, select bank1
 10466  0239  0537               	andwf	sprintf@flag^(0+128),w
 10467  023A  00AD               	movwf	??_sprintf^(0+128)
 10468  023B  3000               	movlw	0
 10469  023C  0538               	andwf	(sprintf@flag+1)^(0+128),w
 10470  023D  00AE               	movwf	(??_sprintf+1)^(0+128)
 10471  023E  082D               	movf	??_sprintf^(0+128),w
 10472  023F  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10473  0240  1903               	btfsc	3,2
 10474  0241  2A43               	goto	u7291
 10475  0242  2A44               	goto	u7290
 10476  0243                     u7291:
 10477  0243  2AF6               	goto	l376
 10478  0244                     u7290:
 10479  0244                     l4336:
 10480                           
 10481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10482  0244  302D               	movlw	45
 10483  0245  00AD               	movwf	??_sprintf^(0+128)
 10484  0246  0849               	movf	sprintf@sp^(0+128),w
 10485  0247  0084               	movwf	4
 10486  0248  082D               	movf	??_sprintf^(0+128),w
 10487  0249  1783               	bsf	3,7	;select IRP bank2
 10488  024A  0080               	movwf	0
 10489  024B                     l4338:
 10490  024B  3001               	movlw	1
 10491  024C  00AD               	movwf	??_sprintf^(0+128)
 10492  024D  082D               	movf	??_sprintf^(0+128),w
 10493  024E  07C9               	addwf	sprintf@sp^(0+128),f
 10494  024F  2AF6               	goto	l376
 10495  0250                     l4340:
 10496                           
 10497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10498  0250  084C               	movf	sprintf@c^(0+128),w
 10499  0251  00AD               	movwf	??_sprintf^(0+128)
 10500  0252  3001               	movlw	1
 10501  0253                     u7305:
 10502  0253  1003               	clrc
 10503  0254  0DAD               	rlf	??_sprintf^(0+128),f
 10504  0255  3EFF               	addlw	-1
 10505  0256  1D03               	skipz
 10506  0257  2A53               	goto	u7305
 10507  0258  1003               	clrc
 10508  0259  0D2D               	rlf	??_sprintf^(0+128),w
 10509  025A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10510  025B  0084               	movwf	4
 10511  025C  160A  158A  200A  120A  118A  	fcall	stringdir
 10512  0261  1283               	bcf	3,5	;RP0=0, select bank0
 10513  0262  1303               	bcf	3,6	;RP1=0, select bank0
 10514  0263  00A0               	movwf	___lldiv@divisor
 10515  0264  160A  158A  200A  120A  118A  	fcall	stringdir
 10516  0269  00A1               	movwf	___lldiv@divisor+1
 10517  026A  160A  158A  200A  120A  118A  	fcall	stringdir
 10518  026F  00A2               	movwf	___lldiv@divisor+2
 10519  0270  160A  158A  200A  120A  118A  	fcall	stringdir
 10520  0275  00A3               	movwf	___lldiv@divisor+3
 10521  0276  1683               	bsf	3,5	;RP0=1, select bank1
 10522  0277  1303               	bcf	3,6	;RP1=0, select bank1
 10523  0278  0842               	movf	(sprintf@val+3)^(0+128),w
 10524  0279  1283               	bcf	3,5	;RP0=0, select bank0
 10525  027A  1303               	bcf	3,6	;RP1=0, select bank0
 10526  027B  00A7               	movwf	___lldiv@dividend+3
 10527  027C  1683               	bsf	3,5	;RP0=1, select bank1
 10528  027D  1303               	bcf	3,6	;RP1=0, select bank1
 10529  027E  0841               	movf	(sprintf@val+2)^(0+128),w
 10530  027F  1283               	bcf	3,5	;RP0=0, select bank0
 10531  0280  1303               	bcf	3,6	;RP1=0, select bank0
 10532  0281  00A6               	movwf	___lldiv@dividend+2
 10533  0282  1683               	bsf	3,5	;RP0=1, select bank1
 10534  0283  1303               	bcf	3,6	;RP1=0, select bank1
 10535  0284  0840               	movf	(sprintf@val+1)^(0+128),w
 10536  0285  1283               	bcf	3,5	;RP0=0, select bank0
 10537  0286  1303               	bcf	3,6	;RP1=0, select bank0
 10538  0287  00A5               	movwf	___lldiv@dividend+1
 10539  0288  1683               	bsf	3,5	;RP0=1, select bank1
 10540  0289  1303               	bcf	3,6	;RP1=0, select bank1
 10541  028A  083F               	movf	sprintf@val^(0+128),w
 10542  028B  1283               	bcf	3,5	;RP0=0, select bank0
 10543  028C  1303               	bcf	3,6	;RP1=0, select bank0
 10544  028D  00A4               	movwf	___lldiv@dividend
 10545  028E  160A  158A  2512  120A  118A  	fcall	___lldiv
 10546  0293  1283               	bcf	3,5	;RP0=0, select bank0
 10547  0294  1303               	bcf	3,6	;RP1=0, select bank0
 10548  0295  0823               	movf	?___lldiv+3,w
 10549  0296  1683               	bsf	3,5	;RP0=1, select bank1
 10550  0297  1303               	bcf	3,6	;RP1=0, select bank1
 10551  0298  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10552  0299  1283               	bcf	3,5	;RP0=0, select bank0
 10553  029A  1303               	bcf	3,6	;RP1=0, select bank0
 10554  029B  0822               	movf	?___lldiv+2,w
 10555  029C  1683               	bsf	3,5	;RP0=1, select bank1
 10556  029D  1303               	bcf	3,6	;RP1=0, select bank1
 10557  029E  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10558  029F  1283               	bcf	3,5	;RP0=0, select bank0
 10559  02A0  1303               	bcf	3,6	;RP1=0, select bank0
 10560  02A1  0821               	movf	?___lldiv+1,w
 10561  02A2  1683               	bsf	3,5	;RP0=1, select bank1
 10562  02A3  1303               	bcf	3,6	;RP1=0, select bank1
 10563  02A4  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10564  02A5  1283               	bcf	3,5	;RP0=0, select bank0
 10565  02A6  1303               	bcf	3,6	;RP1=0, select bank0
 10566  02A7  0820               	movf	?___lldiv,w
 10567  02A8  1683               	bsf	3,5	;RP0=1, select bank1
 10568  02A9  1303               	bcf	3,6	;RP1=0, select bank1
 10569  02AA  00BB               	movwf	sprintf@tmpval^(0+128)
 10570  02AB                     l4342:
 10571                           
 10572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10573  02AB  3000               	movlw	0
 10574  02AC  1283               	bcf	3,5	;RP0=0, select bank0
 10575  02AD  1303               	bcf	3,6	;RP1=0, select bank0
 10576  02AE  00B0               	movwf	___llmod@divisor+3
 10577  02AF  3000               	movlw	0
 10578  02B0  00AF               	movwf	___llmod@divisor+2
 10579  02B1  3000               	movlw	0
 10580  02B2  00AE               	movwf	___llmod@divisor+1
 10581  02B3  300A               	movlw	10
 10582  02B4  00AD               	movwf	___llmod@divisor
 10583  02B5  1683               	bsf	3,5	;RP0=1, select bank1
 10584  02B6  1303               	bcf	3,6	;RP1=0, select bank1
 10585  02B7  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10586  02B8  1283               	bcf	3,5	;RP0=0, select bank0
 10587  02B9  1303               	bcf	3,6	;RP1=0, select bank0
 10588  02BA  00B4               	movwf	___llmod@dividend+3
 10589  02BB  1683               	bsf	3,5	;RP0=1, select bank1
 10590  02BC  1303               	bcf	3,6	;RP1=0, select bank1
 10591  02BD  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10592  02BE  1283               	bcf	3,5	;RP0=0, select bank0
 10593  02BF  1303               	bcf	3,6	;RP1=0, select bank0
 10594  02C0  00B3               	movwf	___llmod@dividend+2
 10595  02C1  1683               	bsf	3,5	;RP0=1, select bank1
 10596  02C2  1303               	bcf	3,6	;RP1=0, select bank1
 10597  02C3  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10598  02C4  1283               	bcf	3,5	;RP0=0, select bank0
 10599  02C5  1303               	bcf	3,6	;RP1=0, select bank0
 10600  02C6  00B2               	movwf	___llmod@dividend+1
 10601  02C7  1683               	bsf	3,5	;RP0=1, select bank1
 10602  02C8  1303               	bcf	3,6	;RP1=0, select bank1
 10603  02C9  083B               	movf	sprintf@tmpval^(0+128),w
 10604  02CA  1283               	bcf	3,5	;RP0=0, select bank0
 10605  02CB  1303               	bcf	3,6	;RP1=0, select bank0
 10606  02CC  00B1               	movwf	___llmod@dividend
 10607  02CD  160A  158A  2461  120A  118A  	fcall	___llmod
 10608  02D2  1283               	bcf	3,5	;RP0=0, select bank0
 10609  02D3  1303               	bcf	3,6	;RP1=0, select bank0
 10610  02D4  0830               	movf	?___llmod+3,w
 10611  02D5  1683               	bsf	3,5	;RP0=1, select bank1
 10612  02D6  1303               	bcf	3,6	;RP1=0, select bank1
 10613  02D7  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10614  02D8  1283               	bcf	3,5	;RP0=0, select bank0
 10615  02D9  1303               	bcf	3,6	;RP1=0, select bank0
 10616  02DA  082F               	movf	?___llmod+2,w
 10617  02DB  1683               	bsf	3,5	;RP0=1, select bank1
 10618  02DC  1303               	bcf	3,6	;RP1=0, select bank1
 10619  02DD  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10620  02DE  1283               	bcf	3,5	;RP0=0, select bank0
 10621  02DF  1303               	bcf	3,6	;RP1=0, select bank0
 10622  02E0  082E               	movf	?___llmod+1,w
 10623  02E1  1683               	bsf	3,5	;RP0=1, select bank1
 10624  02E2  1303               	bcf	3,6	;RP1=0, select bank1
 10625  02E3  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10626  02E4  1283               	bcf	3,5	;RP0=0, select bank0
 10627  02E5  1303               	bcf	3,6	;RP1=0, select bank0
 10628  02E6  082D               	movf	?___llmod,w
 10629  02E7  1683               	bsf	3,5	;RP0=1, select bank1
 10630  02E8  1303               	bcf	3,6	;RP1=0, select bank1
 10631  02E9  00BB               	movwf	sprintf@tmpval^(0+128)
 10632  02EA                     l4344:
 10633                           
 10634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10635  02EA  083B               	movf	sprintf@tmpval^(0+128),w
 10636  02EB  3E30               	addlw	48
 10637  02EC  00AD               	movwf	??_sprintf^(0+128)
 10638  02ED  0849               	movf	sprintf@sp^(0+128),w
 10639  02EE  0084               	movwf	4
 10640  02EF  082D               	movf	??_sprintf^(0+128),w
 10641  02F0  1783               	bsf	3,7	;select IRP bank2
 10642  02F1  0080               	movwf	0
 10643  02F2  3001               	movlw	1
 10644  02F3  00AD               	movwf	??_sprintf^(0+128)
 10645  02F4  082D               	movf	??_sprintf^(0+128),w
 10646  02F5  07C9               	addwf	sprintf@sp^(0+128),f
 10647  02F6                     l376:	
 10648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10649                           
 10650                           
 10651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10652  02F6  3001               	movlw	1
 10653  02F7  02CC               	subwf	sprintf@c^(0+128),f
 10654  02F8  0A4C               	incf	sprintf@c^(0+128),w
 10655  02F9  1D03               	btfss	3,2
 10656  02FA  2AFC               	goto	u7311
 10657  02FB  2AFD               	goto	u7310
 10658  02FC                     u7311:
 10659  02FC  2A50               	goto	l4340
 10660  02FD                     u7310:
 10661  02FD  2B11               	goto	l4352
 10662  02FE                     l4346:
 10663                           
 10664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10665  02FE  3030               	movlw	48
 10666  02FF  1683               	bsf	3,5	;RP0=1, select bank1
 10667  0300  1303               	bcf	3,6	;RP1=0, select bank1
 10668  0301  00AD               	movwf	??_sprintf^(0+128)
 10669  0302  0849               	movf	sprintf@sp^(0+128),w
 10670  0303  0084               	movwf	4
 10671  0304  082D               	movf	??_sprintf^(0+128),w
 10672  0305  1783               	bsf	3,7	;select IRP bank2
 10673  0306  0080               	movwf	0
 10674  0307                     l4348:
 10675  0307  3001               	movlw	1
 10676  0308  00AD               	movwf	??_sprintf^(0+128)
 10677  0309  082D               	movf	??_sprintf^(0+128),w
 10678  030A  07C9               	addwf	sprintf@sp^(0+128),f
 10679  030B                     l4350:
 10680                           
 10681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10682  030B  30FF               	movlw	255
 10683  030C  07C3               	addwf	sprintf@eexp^(0+128),f
 10684  030D  1803               	skipnc
 10685  030E  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10686  030F  30FF               	movlw	255
 10687  0310  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10688  0311                     l4352:
 10689                           
 10690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10691  0311  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10692  0312  3A80               	xorlw	128
 10693  0313  00FF               	movwf	btemp+1
 10694  0314  3080               	movlw	128
 10695  0315  027F               	subwf	btemp+1,w
 10696  0316  1D03               	skipz
 10697  0317  2B1A               	goto	u7325
 10698  0318  3001               	movlw	1
 10699  0319  0243               	subwf	sprintf@eexp^(0+128),w
 10700  031A                     u7325:
 10701  031A  1803               	skipnc
 10702  031B  2B1D               	goto	u7321
 10703  031C  2B1E               	goto	u7320
 10704  031D                     u7321:
 10705  031D  2AFE               	goto	l4346
 10706  031E                     u7320:
 10707  031E                     l4354:
 10708                           
 10709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10710  031E  1683               	bsf	3,5	;RP0=1, select bank1
 10711  031F  1303               	bcf	3,6	;RP1=0, select bank1
 10712  0320  084B               	movf	(sprintf@prec+1)^(0+128),w
 10713  0321  3A80               	xorlw	128
 10714  0322  00FF               	movwf	btemp+1
 10715  0323  3080               	movlw	128
 10716  0324  027F               	subwf	btemp+1,w
 10717  0325  1D03               	skipz
 10718  0326  2B29               	goto	u7335
 10719  0327  3009               	movlw	9
 10720  0328  024A               	subwf	sprintf@prec^(0+128),w
 10721  0329                     u7335:
 10722  0329  1C03               	skipc
 10723  032A  2B2C               	goto	u7331
 10724  032B  2B2D               	goto	u7330
 10725  032C                     u7331:
 10726  032C  2B34               	goto	l4358
 10727  032D                     u7330:
 10728  032D                     l4356:
 10729                           
 10730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10731  032D  3008               	movlw	8
 10732  032E  1683               	bsf	3,5	;RP0=1, select bank1
 10733  032F  1303               	bcf	3,6	;RP1=0, select bank1
 10734  0330  00AD               	movwf	??_sprintf^(0+128)
 10735  0331  082D               	movf	??_sprintf^(0+128),w
 10736  0332  00CC               	movwf	sprintf@c^(0+128)
 10737  0333  2B3A               	goto	l383
 10738  0334                     l4358:
 10739                           
 10740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10741  0334  1683               	bsf	3,5	;RP0=1, select bank1
 10742  0335  1303               	bcf	3,6	;RP1=0, select bank1
 10743  0336  084A               	movf	sprintf@prec^(0+128),w
 10744  0337  00AD               	movwf	??_sprintf^(0+128)
 10745  0338  082D               	movf	??_sprintf^(0+128),w
 10746  0339  00CC               	movwf	sprintf@c^(0+128)
 10747  033A                     l383:
 10748                           
 10749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10750  033A  084C               	movf	sprintf@c^(0+128),w
 10751  033B  00AD               	movwf	??_sprintf^(0+128)
 10752  033C  01AE               	clrf	(??_sprintf^(0+128)+1)
 10753  033D  082D               	movf	??_sprintf^(0+128),w
 10754  033E  02CA               	subwf	sprintf@prec^(0+128),f
 10755  033F  082E               	movf	(??_sprintf+1)^(0+128),w
 10756  0340  1C03               	skipc
 10757  0341  03CB               	decf	(sprintf@prec+1)^(0+128),f
 10758  0342  02CB               	subwf	(sprintf@prec+1)^(0+128),f
 10759  0343                     l4360:
 10760                           
 10761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10762  0343  084C               	movf	sprintf@c^(0+128),w
 10763  0344  1903               	btfsc	3,2
 10764  0345  2B47               	goto	u7341
 10765  0346  2B48               	goto	u7340
 10766  0347                     u7341:
 10767  0347  2B53               	goto	l4366
 10768  0348                     u7340:
 10769  0348                     l4362:
 10770                           
 10771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10772  0348  302E               	movlw	46
 10773  0349  00AD               	movwf	??_sprintf^(0+128)
 10774  034A  0849               	movf	sprintf@sp^(0+128),w
 10775  034B  0084               	movwf	4
 10776  034C  082D               	movf	??_sprintf^(0+128),w
 10777  034D  1783               	bsf	3,7	;select IRP bank2
 10778  034E  0080               	movwf	0
 10779  034F                     l4364:
 10780  034F  3001               	movlw	1
 10781  0350  00AD               	movwf	??_sprintf^(0+128)
 10782  0351  082D               	movf	??_sprintf^(0+128),w
 10783  0352  07C9               	addwf	sprintf@sp^(0+128),f
 10784  0353                     l4366:
 10785                           
 10786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10787  0353  084C               	movf	sprintf@c^(0+128),w
 10788  0354  120A  158A  249D  120A  118A  	fcall	_scale
 10789  0359  1283               	bcf	3,5	;RP0=0, select bank0
 10790  035A  1303               	bcf	3,6	;RP1=0, select bank0
 10791  035B  0848               	movf	?_scale+3,w
 10792  035C  1683               	bsf	3,5	;RP0=1, select bank1
 10793  035D  1303               	bcf	3,6	;RP1=0, select bank1
 10794  035E  00B5               	movwf	(_sprintf$1267+3)^(0+128)
 10795  035F  1283               	bcf	3,5	;RP0=0, select bank0
 10796  0360  1303               	bcf	3,6	;RP1=0, select bank0
 10797  0361  0847               	movf	?_scale+2,w
 10798  0362  1683               	bsf	3,5	;RP0=1, select bank1
 10799  0363  1303               	bcf	3,6	;RP1=0, select bank1
 10800  0364  00B4               	movwf	(_sprintf$1267+2)^(0+128)
 10801  0365  1283               	bcf	3,5	;RP0=0, select bank0
 10802  0366  1303               	bcf	3,6	;RP1=0, select bank0
 10803  0367  0846               	movf	?_scale+1,w
 10804  0368  1683               	bsf	3,5	;RP0=1, select bank1
 10805  0369  1303               	bcf	3,6	;RP1=0, select bank1
 10806  036A  00B3               	movwf	(_sprintf$1267+1)^(0+128)
 10807  036B  1283               	bcf	3,5	;RP0=0, select bank0
 10808  036C  1303               	bcf	3,6	;RP1=0, select bank0
 10809  036D  0845               	movf	?_scale,w
 10810  036E  1683               	bsf	3,5	;RP0=1, select bank1
 10811  036F  1303               	bcf	3,6	;RP1=0, select bank1
 10812  0370  00B2               	movwf	_sprintf$1267^(0+128)
 10813  0371                     l4368:
 10814                           
 10815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10816  0371  0835               	movf	(_sprintf$1267+3)^(0+128),w
 10817  0372  1283               	bcf	3,5	;RP0=0, select bank0
 10818  0373  1303               	bcf	3,6	;RP1=0, select bank0
 10819  0374  00B2               	movwf	___flmul@a+3
 10820  0375  1683               	bsf	3,5	;RP0=1, select bank1
 10821  0376  1303               	bcf	3,6	;RP1=0, select bank1
 10822  0377  0834               	movf	(_sprintf$1267+2)^(0+128),w
 10823  0378  1283               	bcf	3,5	;RP0=0, select bank0
 10824  0379  1303               	bcf	3,6	;RP1=0, select bank0
 10825  037A  00B1               	movwf	___flmul@a+2
 10826  037B  1683               	bsf	3,5	;RP0=1, select bank1
 10827  037C  1303               	bcf	3,6	;RP1=0, select bank1
 10828  037D  0833               	movf	(_sprintf$1267+1)^(0+128),w
 10829  037E  1283               	bcf	3,5	;RP0=0, select bank0
 10830  037F  1303               	bcf	3,6	;RP1=0, select bank0
 10831  0380  00B0               	movwf	___flmul@a+1
 10832  0381  1683               	bsf	3,5	;RP0=1, select bank1
 10833  0382  1303               	bcf	3,6	;RP1=0, select bank1
 10834  0383  0832               	movf	_sprintf$1267^(0+128),w
 10835  0384  1283               	bcf	3,5	;RP0=0, select bank0
 10836  0385  1303               	bcf	3,6	;RP1=0, select bank0
 10837  0386  00AF               	movwf	___flmul@a
 10838  0387  1683               	bsf	3,5	;RP0=1, select bank1
 10839  0388  1303               	bcf	3,6	;RP1=0, select bank1
 10840  0389  0848               	movf	(sprintf@fval+3)^(0+128),w
 10841  038A  1283               	bcf	3,5	;RP0=0, select bank0
 10842  038B  1303               	bcf	3,6	;RP1=0, select bank0
 10843  038C  00AE               	movwf	___flmul@b+3
 10844  038D  1683               	bsf	3,5	;RP0=1, select bank1
 10845  038E  1303               	bcf	3,6	;RP1=0, select bank1
 10846  038F  0847               	movf	(sprintf@fval+2)^(0+128),w
 10847  0390  1283               	bcf	3,5	;RP0=0, select bank0
 10848  0391  1303               	bcf	3,6	;RP1=0, select bank0
 10849  0392  00AD               	movwf	___flmul@b+2
 10850  0393  1683               	bsf	3,5	;RP0=1, select bank1
 10851  0394  1303               	bcf	3,6	;RP1=0, select bank1
 10852  0395  0846               	movf	(sprintf@fval+1)^(0+128),w
 10853  0396  1283               	bcf	3,5	;RP0=0, select bank0
 10854  0397  1303               	bcf	3,6	;RP1=0, select bank0
 10855  0398  00AC               	movwf	___flmul@b+1
 10856  0399  1683               	bsf	3,5	;RP0=1, select bank1
 10857  039A  1303               	bcf	3,6	;RP1=0, select bank1
 10858  039B  0845               	movf	sprintf@fval^(0+128),w
 10859  039C  1283               	bcf	3,5	;RP0=0, select bank0
 10860  039D  1303               	bcf	3,6	;RP1=0, select bank0
 10861  039E  00AB               	movwf	___flmul@b
 10862  039F  120A  158A  213C  120A  118A  	fcall	___flmul
 10863  03A4  1283               	bcf	3,5	;RP0=0, select bank0
 10864  03A5  1303               	bcf	3,6	;RP1=0, select bank0
 10865  03A6  082E               	movf	?___flmul+3,w
 10866  03A7  00DB               	movwf	___fltol@f1+3
 10867  03A8  082D               	movf	?___flmul+2,w
 10868  03A9  00DA               	movwf	___fltol@f1+2
 10869  03AA  082C               	movf	?___flmul+1,w
 10870  03AB  00D9               	movwf	___fltol@f1+1
 10871  03AC  082B               	movf	?___flmul,w
 10872  03AD  00D8               	movwf	___fltol@f1
 10873  03AE  120A  158A  2002  120A  118A  	fcall	___fltol
 10874  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 10875  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 10876  03B5  085B               	movf	?___fltol+3,w
 10877  03B6  1683               	bsf	3,5	;RP0=1, select bank1
 10878  03B7  1303               	bcf	3,6	;RP1=0, select bank1
 10879  03B8  00C2               	movwf	(sprintf@val+3)^(0+128)
 10880  03B9  1283               	bcf	3,5	;RP0=0, select bank0
 10881  03BA  1303               	bcf	3,6	;RP1=0, select bank0
 10882  03BB  085A               	movf	?___fltol+2,w
 10883  03BC  1683               	bsf	3,5	;RP0=1, select bank1
 10884  03BD  1303               	bcf	3,6	;RP1=0, select bank1
 10885  03BE  00C1               	movwf	(sprintf@val+2)^(0+128)
 10886  03BF  1283               	bcf	3,5	;RP0=0, select bank0
 10887  03C0  1303               	bcf	3,6	;RP1=0, select bank0
 10888  03C1  0859               	movf	?___fltol+1,w
 10889  03C2  1683               	bsf	3,5	;RP0=1, select bank1
 10890  03C3  1303               	bcf	3,6	;RP1=0, select bank1
 10891  03C4  00C0               	movwf	(sprintf@val+1)^(0+128)
 10892  03C5  1283               	bcf	3,5	;RP0=0, select bank0
 10893  03C6  1303               	bcf	3,6	;RP1=0, select bank0
 10894  03C7  0858               	movf	?___fltol,w
 10895  03C8  1683               	bsf	3,5	;RP0=1, select bank1
 10896  03C9  1303               	bcf	3,6	;RP1=0, select bank1
 10897  03CA  00BF               	movwf	sprintf@val^(0+128)
 10898                           
 10899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10900  03CB  2CCD               	goto	l4378
 10901  03CC                     l4370:
 10902                           
 10903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10904  03CC  084C               	movf	sprintf@c^(0+128),w
 10905  03CD  00AD               	movwf	??_sprintf^(0+128)
 10906  03CE  3001               	movlw	1
 10907  03CF                     u7355:
 10908  03CF  1003               	clrc
 10909  03D0  0DAD               	rlf	??_sprintf^(0+128),f
 10910  03D1  3EFF               	addlw	-1
 10911  03D2  1D03               	skipz
 10912  03D3  2BCF               	goto	u7355
 10913  03D4  1003               	clrc
 10914  03D5  0D2D               	rlf	??_sprintf^(0+128),w
 10915  03D6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10916  03D7  0084               	movwf	4
 10917  03D8  160A  158A  200A  120A  118A  	fcall	stringdir
 10918  03DD  1283               	bcf	3,5	;RP0=0, select bank0
 10919  03DE  1303               	bcf	3,6	;RP1=0, select bank0
 10920  03DF  00A0               	movwf	___lldiv@divisor
 10921  03E0  160A  158A  200A  120A  118A  	fcall	stringdir
 10922  03E5  00A1               	movwf	___lldiv@divisor+1
 10923  03E6  160A  158A  200A  120A  118A  	fcall	stringdir
 10924  03EB  00A2               	movwf	___lldiv@divisor+2
 10925  03EC  160A  158A  200A  120A  118A  	fcall	stringdir
 10926  03F1  00A3               	movwf	___lldiv@divisor+3
 10927  03F2  1683               	bsf	3,5	;RP0=1, select bank1
 10928  03F3  1303               	bcf	3,6	;RP1=0, select bank1
 10929  03F4  0842               	movf	(sprintf@val+3)^(0+128),w
 10930  03F5  1283               	bcf	3,5	;RP0=0, select bank0
 10931  03F6  1303               	bcf	3,6	;RP1=0, select bank0
 10932  03F7  00A7               	movwf	___lldiv@dividend+3
 10933  03F8  1683               	bsf	3,5	;RP0=1, select bank1
 10934  03F9  1303               	bcf	3,6	;RP1=0, select bank1
 10935  03FA  0841               	movf	(sprintf@val+2)^(0+128),w
 10936  03FB  1283               	bcf	3,5	;RP0=0, select bank0
 10937  03FC  1303               	bcf	3,6	;RP1=0, select bank0
 10938  03FD  00A6               	movwf	___lldiv@dividend+2
 10939  03FE  1683               	bsf	3,5	;RP0=1, select bank1
 10940  03FF  1303               	bcf	3,6	;RP1=0, select bank1
 10941  0400  0840               	movf	(sprintf@val+1)^(0+128),w
 10942  0401  1283               	bcf	3,5	;RP0=0, select bank0
 10943  0402  1303               	bcf	3,6	;RP1=0, select bank0
 10944  0403  00A5               	movwf	___lldiv@dividend+1
 10945  0404  1683               	bsf	3,5	;RP0=1, select bank1
 10946  0405  1303               	bcf	3,6	;RP1=0, select bank1
 10947  0406  083F               	movf	sprintf@val^(0+128),w
 10948  0407  1283               	bcf	3,5	;RP0=0, select bank0
 10949  0408  1303               	bcf	3,6	;RP1=0, select bank0
 10950  0409  00A4               	movwf	___lldiv@dividend
 10951  040A  160A  158A  2512  120A  118A  	fcall	___lldiv
 10952  040F  1283               	bcf	3,5	;RP0=0, select bank0
 10953  0410  1303               	bcf	3,6	;RP1=0, select bank0
 10954  0411  0823               	movf	?___lldiv+3,w
 10955  0412  1683               	bsf	3,5	;RP0=1, select bank1
 10956  0413  1303               	bcf	3,6	;RP1=0, select bank1
 10957  0414  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10958  0415  1283               	bcf	3,5	;RP0=0, select bank0
 10959  0416  1303               	bcf	3,6	;RP1=0, select bank0
 10960  0417  0822               	movf	?___lldiv+2,w
 10961  0418  1683               	bsf	3,5	;RP0=1, select bank1
 10962  0419  1303               	bcf	3,6	;RP1=0, select bank1
 10963  041A  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10964  041B  1283               	bcf	3,5	;RP0=0, select bank0
 10965  041C  1303               	bcf	3,6	;RP1=0, select bank0
 10966  041D  0821               	movf	?___lldiv+1,w
 10967  041E  1683               	bsf	3,5	;RP0=1, select bank1
 10968  041F  1303               	bcf	3,6	;RP1=0, select bank1
 10969  0420  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10970  0421  1283               	bcf	3,5	;RP0=0, select bank0
 10971  0422  1303               	bcf	3,6	;RP1=0, select bank0
 10972  0423  0820               	movf	?___lldiv,w
 10973  0424  1683               	bsf	3,5	;RP0=1, select bank1
 10974  0425  1303               	bcf	3,6	;RP1=0, select bank1
 10975  0426  00BB               	movwf	sprintf@tmpval^(0+128)
 10976  0427                     l4372:
 10977                           
 10978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10979  0427  3000               	movlw	0
 10980  0428  1283               	bcf	3,5	;RP0=0, select bank0
 10981  0429  1303               	bcf	3,6	;RP1=0, select bank0
 10982  042A  00B0               	movwf	___llmod@divisor+3
 10983  042B  3000               	movlw	0
 10984  042C  00AF               	movwf	___llmod@divisor+2
 10985  042D  3000               	movlw	0
 10986  042E  00AE               	movwf	___llmod@divisor+1
 10987  042F  300A               	movlw	10
 10988  0430  00AD               	movwf	___llmod@divisor
 10989  0431  1683               	bsf	3,5	;RP0=1, select bank1
 10990  0432  1303               	bcf	3,6	;RP1=0, select bank1
 10991  0433  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10992  0434  1283               	bcf	3,5	;RP0=0, select bank0
 10993  0435  1303               	bcf	3,6	;RP1=0, select bank0
 10994  0436  00B4               	movwf	___llmod@dividend+3
 10995  0437  1683               	bsf	3,5	;RP0=1, select bank1
 10996  0438  1303               	bcf	3,6	;RP1=0, select bank1
 10997  0439  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10998  043A  1283               	bcf	3,5	;RP0=0, select bank0
 10999  043B  1303               	bcf	3,6	;RP1=0, select bank0
 11000  043C  00B3               	movwf	___llmod@dividend+2
 11001  043D  1683               	bsf	3,5	;RP0=1, select bank1
 11002  043E  1303               	bcf	3,6	;RP1=0, select bank1
 11003  043F  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 11004  0440  1283               	bcf	3,5	;RP0=0, select bank0
 11005  0441  1303               	bcf	3,6	;RP1=0, select bank0
 11006  0442  00B2               	movwf	___llmod@dividend+1
 11007  0443  1683               	bsf	3,5	;RP0=1, select bank1
 11008  0444  1303               	bcf	3,6	;RP1=0, select bank1
 11009  0445  083B               	movf	sprintf@tmpval^(0+128),w
 11010  0446  1283               	bcf	3,5	;RP0=0, select bank0
 11011  0447  1303               	bcf	3,6	;RP1=0, select bank0
 11012  0448  00B1               	movwf	___llmod@dividend
 11013  0449  160A  158A  2461  120A  118A  	fcall	___llmod
 11014  044E  1283               	bcf	3,5	;RP0=0, select bank0
 11015  044F  1303               	bcf	3,6	;RP1=0, select bank0
 11016  0450  0830               	movf	?___llmod+3,w
 11017  0451  1683               	bsf	3,5	;RP0=1, select bank1
 11018  0452  1303               	bcf	3,6	;RP1=0, select bank1
 11019  0453  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 11020  0454  1283               	bcf	3,5	;RP0=0, select bank0
 11021  0455  1303               	bcf	3,6	;RP1=0, select bank0
 11022  0456  082F               	movf	?___llmod+2,w
 11023  0457  1683               	bsf	3,5	;RP0=1, select bank1
 11024  0458  1303               	bcf	3,6	;RP1=0, select bank1
 11025  0459  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 11026  045A  1283               	bcf	3,5	;RP0=0, select bank0
 11027  045B  1303               	bcf	3,6	;RP1=0, select bank0
 11028  045C  082E               	movf	?___llmod+1,w
 11029  045D  1683               	bsf	3,5	;RP0=1, select bank1
 11030  045E  1303               	bcf	3,6	;RP1=0, select bank1
 11031  045F  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 11032  0460  1283               	bcf	3,5	;RP0=0, select bank0
 11033  0461  1303               	bcf	3,6	;RP1=0, select bank0
 11034  0462  082D               	movf	?___llmod,w
 11035  0463  1683               	bsf	3,5	;RP0=1, select bank1
 11036  0464  1303               	bcf	3,6	;RP1=0, select bank1
 11037  0465  00BB               	movwf	sprintf@tmpval^(0+128)
 11038  0466                     l4374:
 11039                           
 11040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11041  0466  083B               	movf	sprintf@tmpval^(0+128),w
 11042  0467  3E30               	addlw	48
 11043  0468  00AD               	movwf	??_sprintf^(0+128)
 11044  0469  0849               	movf	sprintf@sp^(0+128),w
 11045  046A  0084               	movwf	4
 11046  046B  082D               	movf	??_sprintf^(0+128),w
 11047  046C  1783               	bsf	3,7	;select IRP bank2
 11048  046D  0080               	movwf	0
 11049  046E  3001               	movlw	1
 11050  046F  00AD               	movwf	??_sprintf^(0+128)
 11051  0470  082D               	movf	??_sprintf^(0+128),w
 11052  0471  07C9               	addwf	sprintf@sp^(0+128),f
 11053  0472                     l4376:
 11054                           
 11055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11056  0472  084C               	movf	sprintf@c^(0+128),w
 11057  0473  00AD               	movwf	??_sprintf^(0+128)
 11058  0474  3001               	movlw	1
 11059  0475                     u7365:
 11060  0475  1003               	clrc
 11061  0476  0DAD               	rlf	??_sprintf^(0+128),f
 11062  0477  3EFF               	addlw	-1
 11063  0478  1D03               	skipz
 11064  0479  2C75               	goto	u7365
 11065  047A  1003               	clrc
 11066  047B  0D2D               	rlf	??_sprintf^(0+128),w
 11067  047C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11068  047D  0084               	movwf	4
 11069  047E  160A  158A  200A  120A  118A  	fcall	stringdir
 11070  0483  1283               	bcf	3,5	;RP0=0, select bank0
 11071  0484  1303               	bcf	3,6	;RP1=0, select bank0
 11072  0485  00AD               	movwf	___llmod@divisor
 11073  0486  160A  158A  200A  120A  118A  	fcall	stringdir
 11074  048B  00AE               	movwf	___llmod@divisor+1
 11075  048C  160A  158A  200A  120A  118A  	fcall	stringdir
 11076  0491  00AF               	movwf	___llmod@divisor+2
 11077  0492  160A  158A  200A  120A  118A  	fcall	stringdir
 11078  0497  00B0               	movwf	___llmod@divisor+3
 11079  0498  1683               	bsf	3,5	;RP0=1, select bank1
 11080  0499  1303               	bcf	3,6	;RP1=0, select bank1
 11081  049A  0842               	movf	(sprintf@val+3)^(0+128),w
 11082  049B  1283               	bcf	3,5	;RP0=0, select bank0
 11083  049C  1303               	bcf	3,6	;RP1=0, select bank0
 11084  049D  00B4               	movwf	___llmod@dividend+3
 11085  049E  1683               	bsf	3,5	;RP0=1, select bank1
 11086  049F  1303               	bcf	3,6	;RP1=0, select bank1
 11087  04A0  0841               	movf	(sprintf@val+2)^(0+128),w
 11088  04A1  1283               	bcf	3,5	;RP0=0, select bank0
 11089  04A2  1303               	bcf	3,6	;RP1=0, select bank0
 11090  04A3  00B3               	movwf	___llmod@dividend+2
 11091  04A4  1683               	bsf	3,5	;RP0=1, select bank1
 11092  04A5  1303               	bcf	3,6	;RP1=0, select bank1
 11093  04A6  0840               	movf	(sprintf@val+1)^(0+128),w
 11094  04A7  1283               	bcf	3,5	;RP0=0, select bank0
 11095  04A8  1303               	bcf	3,6	;RP1=0, select bank0
 11096  04A9  00B2               	movwf	___llmod@dividend+1
 11097  04AA  1683               	bsf	3,5	;RP0=1, select bank1
 11098  04AB  1303               	bcf	3,6	;RP1=0, select bank1
 11099  04AC  083F               	movf	sprintf@val^(0+128),w
 11100  04AD  1283               	bcf	3,5	;RP0=0, select bank0
 11101  04AE  1303               	bcf	3,6	;RP1=0, select bank0
 11102  04AF  00B1               	movwf	___llmod@dividend
 11103  04B0  160A  158A  2461  120A  118A  	fcall	___llmod
 11104  04B5  1283               	bcf	3,5	;RP0=0, select bank0
 11105  04B6  1303               	bcf	3,6	;RP1=0, select bank0
 11106  04B7  0830               	movf	?___llmod+3,w
 11107  04B8  1683               	bsf	3,5	;RP0=1, select bank1
 11108  04B9  1303               	bcf	3,6	;RP1=0, select bank1
 11109  04BA  00C2               	movwf	(sprintf@val+3)^(0+128)
 11110  04BB  1283               	bcf	3,5	;RP0=0, select bank0
 11111  04BC  1303               	bcf	3,6	;RP1=0, select bank0
 11112  04BD  082F               	movf	?___llmod+2,w
 11113  04BE  1683               	bsf	3,5	;RP0=1, select bank1
 11114  04BF  1303               	bcf	3,6	;RP1=0, select bank1
 11115  04C0  00C1               	movwf	(sprintf@val+2)^(0+128)
 11116  04C1  1283               	bcf	3,5	;RP0=0, select bank0
 11117  04C2  1303               	bcf	3,6	;RP1=0, select bank0
 11118  04C3  082E               	movf	?___llmod+1,w
 11119  04C4  1683               	bsf	3,5	;RP0=1, select bank1
 11120  04C5  1303               	bcf	3,6	;RP1=0, select bank1
 11121  04C6  00C0               	movwf	(sprintf@val+1)^(0+128)
 11122  04C7  1283               	bcf	3,5	;RP0=0, select bank0
 11123  04C8  1303               	bcf	3,6	;RP1=0, select bank0
 11124  04C9  082D               	movf	?___llmod,w
 11125  04CA  1683               	bsf	3,5	;RP0=1, select bank1
 11126  04CB  1303               	bcf	3,6	;RP1=0, select bank1
 11127  04CC  00BF               	movwf	sprintf@val^(0+128)
 11128  04CD                     l4378:
 11129                           
 11130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11131  04CD  3001               	movlw	1
 11132  04CE  02CC               	subwf	sprintf@c^(0+128),f
 11133  04CF  0A4C               	incf	sprintf@c^(0+128),w
 11134  04D0  1D03               	btfss	3,2
 11135  04D1  2CD3               	goto	u7371
 11136  04D2  2CD4               	goto	u7370
 11137  04D3                     u7371:
 11138  04D3  2BCC               	goto	l4370
 11139  04D4                     u7370:
 11140  04D4  2CE6               	goto	l4386
 11141  04D5                     l4380:
 11142                           
 11143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11144  04D5  3030               	movlw	48
 11145  04D6  00AD               	movwf	??_sprintf^(0+128)
 11146  04D7  0849               	movf	sprintf@sp^(0+128),w
 11147  04D8  0084               	movwf	4
 11148  04D9  082D               	movf	??_sprintf^(0+128),w
 11149  04DA  1783               	bsf	3,7	;select IRP bank2
 11150  04DB  0080               	movwf	0
 11151  04DC                     l4382:
 11152  04DC  3001               	movlw	1
 11153  04DD  00AD               	movwf	??_sprintf^(0+128)
 11154  04DE  082D               	movf	??_sprintf^(0+128),w
 11155  04DF  07C9               	addwf	sprintf@sp^(0+128),f
 11156  04E0                     l4384:
 11157                           
 11158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11159  04E0  30FF               	movlw	255
 11160  04E1  07CA               	addwf	sprintf@prec^(0+128),f
 11161  04E2  1803               	skipnc
 11162  04E3  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11163  04E4  30FF               	movlw	255
 11164  04E5  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11165  04E6                     l4386:
 11166                           
 11167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11168  04E6  084A               	movf	sprintf@prec^(0+128),w
 11169  04E7  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11170  04E8  1D03               	btfss	3,2
 11171  04E9  2CEB               	goto	u7381
 11172  04EA  2CEC               	goto	u7380
 11173  04EB                     u7381:
 11174  04EB  2CD5               	goto	l4380
 11175  04EC                     u7380:
 11176  04EC  2E9C               	goto	l4466
 11177  04ED                     l4388:
 11178                           
 11179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11180  04ED  0836               	movf	sprintf@ap^(0+128),w
 11181  04EE  0084               	movwf	4
 11182  04EF  1383               	bcf	3,7	;select IRP bank0
 11183  04F0  0800               	movf	0,w
 11184  04F1  00AD               	movwf	??_sprintf^(0+128)
 11185  04F2  0A84               	incf	4,f
 11186  04F3  0800               	movf	0,w
 11187  04F4  00AE               	movwf	(??_sprintf^(0+128)+1)
 11188  04F5  082D               	movf	??_sprintf^(0+128),w
 11189  04F6  00BF               	movwf	sprintf@val^(0+128)
 11190  04F7  082E               	movf	(??_sprintf+1)^(0+128),w
 11191  04F8  00C0               	movwf	(sprintf@val+1)^(0+128)
 11192  04F9  3000               	movlw	0
 11193  04FA  1BC0               	btfsc	(sprintf@val+1)^(0+128),7
 11194  04FB  30FF               	movlw	255
 11195  04FC  00C1               	movwf	(sprintf@val+2)^(0+128)
 11196  04FD  00C2               	movwf	(sprintf@val+3)^(0+128)
 11197  04FE                     l4390:
 11198  04FE  3002               	movlw	2
 11199  04FF  00AD               	movwf	??_sprintf^(0+128)
 11200  0500  082D               	movf	??_sprintf^(0+128),w
 11201  0501  07B6               	addwf	sprintf@ap^(0+128),f
 11202  0502                     l4392:
 11203                           
 11204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11205  0502  1FC2               	btfss	(sprintf@val+3)^(0+128),7
 11206  0503  2D05               	goto	u7391
 11207  0504  2D06               	goto	u7390
 11208  0505                     u7391:
 11209  0505  2D15               	goto	l4398
 11210  0506                     u7390:
 11211  0506                     l4394:
 11212                           
 11213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11214  0506  3003               	movlw	3
 11215  0507  04B7               	iorwf	sprintf@flag^(0+128),f
 11216  0508  3000               	movlw	0
 11217  0509  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
 11218  050A                     l4396:
 11219                           
 11220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11221  050A  09BF               	comf	sprintf@val^(0+128),f
 11222  050B  09C0               	comf	(sprintf@val+1)^(0+128),f
 11223  050C  09C1               	comf	(sprintf@val+2)^(0+128),f
 11224  050D  09C2               	comf	(sprintf@val+3)^(0+128),f
 11225  050E  0ABF               	incf	sprintf@val^(0+128),f
 11226  050F  1903               	skipnz
 11227  0510  0AC0               	incf	(sprintf@val+1)^(0+128),f
 11228  0511  1903               	skipnz
 11229  0512  0AC1               	incf	(sprintf@val+2)^(0+128),f
 11230  0513  1903               	skipnz
 11231  0514  0AC2               	incf	(sprintf@val+3)^(0+128),f
 11232  0515                     l4398:
 11233                           
 11234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11235  0515  084A               	movf	sprintf@prec^(0+128),w
 11236  0516  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11237  0517  1D03               	btfss	3,2
 11238  0518  2D1A               	goto	u7401
 11239  0519  2D1B               	goto	u7400
 11240  051A                     u7401:
 11241  051A  2D29               	goto	l4404
 11242  051B                     u7400:
 11243  051B                     l4400:
 11244  051B  0842               	movf	(sprintf@val+3)^(0+128),w
 11245  051C  0441               	iorwf	(sprintf@val+2)^(0+128),w
 11246  051D  0440               	iorwf	(sprintf@val+1)^(0+128),w
 11247  051E  043F               	iorwf	sprintf@val^(0+128),w
 11248  051F  1D03               	skipz
 11249  0520  2D22               	goto	u7411
 11250  0521  2D23               	goto	u7410
 11251  0522                     u7411:
 11252  0522  2D29               	goto	l4404
 11253  0523                     u7410:
 11254  0523                     l4402:
 11255                           
 11256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11257  0523  3001               	movlw	1
 11258  0524  07CA               	addwf	sprintf@prec^(0+128),f
 11259  0525  1803               	skipnc
 11260  0526  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11261  0527  3000               	movlw	0
 11262  0528  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11263  0529                     l4404:
 11264                           
 11265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11266  0529  01CC               	clrf	sprintf@c^(0+128)
 11267  052A  0ACC               	incf	sprintf@c^(0+128),f
 11268  052B                     l4410:
 11269                           
 11270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11271  052B  084C               	movf	sprintf@c^(0+128),w
 11272  052C  00AD               	movwf	??_sprintf^(0+128)
 11273  052D  3001               	movlw	1
 11274  052E                     u7425:
 11275  052E  1003               	clrc
 11276  052F  0DAD               	rlf	??_sprintf^(0+128),f
 11277  0530  3EFF               	addlw	-1
 11278  0531  1D03               	skipz
 11279  0532  2D2E               	goto	u7425
 11280  0533  1003               	clrc
 11281  0534  0D2D               	rlf	??_sprintf^(0+128),w
 11282  0535  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11283  0536  0084               	movwf	4
 11284  0537  160A  158A  200A  120A  118A  	fcall	stringdir
 11285  053C  00AE               	movwf	(??_sprintf+1)^(0+128)
 11286  053D  160A  158A  200A  120A  118A  	fcall	stringdir
 11287  0542  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 11288  0543  160A  158A  200A  120A  118A  	fcall	stringdir
 11289  0548  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 11290  0549  160A  158A  200A  120A  118A  	fcall	stringdir
 11291  054E  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 11292  054F  0831               	movf	(??_sprintf+4)^(0+128),w
 11293  0550  0242               	subwf	(sprintf@val+3)^(0+128),w
 11294  0551  1D03               	skipz
 11295  0552  2D5D               	goto	u7435
 11296  0553  0830               	movf	(??_sprintf+3)^(0+128),w
 11297  0554  0241               	subwf	(sprintf@val+2)^(0+128),w
 11298  0555  1D03               	skipz
 11299  0556  2D5D               	goto	u7435
 11300  0557  082F               	movf	(??_sprintf+2)^(0+128),w
 11301  0558  0240               	subwf	(sprintf@val+1)^(0+128),w
 11302  0559  1D03               	skipz
 11303  055A  2D5D               	goto	u7435
 11304  055B  082E               	movf	(??_sprintf+1)^(0+128),w
 11305  055C  023F               	subwf	sprintf@val^(0+128),w
 11306  055D                     u7435:
 11307  055D  1803               	skipnc
 11308  055E  2D60               	goto	u7431
 11309  055F  2D61               	goto	u7430
 11310  0560                     u7431:
 11311  0560  2D62               	goto	l4414
 11312  0561                     u7430:
 11313  0561  2D6C               	goto	l4416
 11314  0562                     l4414:
 11315  0562  3001               	movlw	1
 11316  0563  00AD               	movwf	??_sprintf^(0+128)
 11317  0564  082D               	movf	??_sprintf^(0+128),w
 11318  0565  07CC               	addwf	sprintf@c^(0+128),f
 11319  0566  300A               	movlw	10
 11320  0567  064C               	xorwf	sprintf@c^(0+128),w
 11321  0568  1D03               	btfss	3,2
 11322  0569  2D6B               	goto	u7441
 11323  056A  2D6C               	goto	u7440
 11324  056B                     u7441:
 11325  056B  2D2B               	goto	l4410
 11326  056C                     u7440:
 11327  056C                     l4416:
 11328                           
 11329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11330  056C  084B               	movf	(sprintf@prec+1)^(0+128),w
 11331  056D  3A80               	xorlw	128
 11332  056E  3C80               	sublw	128
 11333  056F  1D03               	skipz
 11334  0570  2D73               	goto	u7455
 11335  0571  084A               	movf	sprintf@prec^(0+128),w
 11336  0572  024C               	subwf	sprintf@c^(0+128),w
 11337  0573                     u7455:
 11338  0573  1803               	skipnc
 11339  0574  2D76               	goto	u7451
 11340  0575  2D77               	goto	u7450
 11341  0576                     u7451:
 11342  0576  2D7E               	goto	l4420
 11343  0577                     u7450:
 11344  0577                     l4418:
 11345                           
 11346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11347  0577  1683               	bsf	3,5	;RP0=1, select bank1
 11348  0578  1303               	bcf	3,6	;RP1=0, select bank1
 11349  0579  084A               	movf	sprintf@prec^(0+128),w
 11350  057A  00AD               	movwf	??_sprintf^(0+128)
 11351  057B  082D               	movf	??_sprintf^(0+128),w
 11352  057C  00CC               	movwf	sprintf@c^(0+128)
 11353  057D  2D96               	goto	l4424
 11354  057E                     l4420:
 11355  057E  1683               	bsf	3,5	;RP0=1, select bank1
 11356  057F  1303               	bcf	3,6	;RP1=0, select bank1
 11357  0580  084B               	movf	(sprintf@prec+1)^(0+128),w
 11358  0581  3A80               	xorlw	128
 11359  0582  00AD               	movwf	??_sprintf^(0+128)
 11360  0583  3080               	movlw	128
 11361  0584  022D               	subwf	??_sprintf^(0+128),w
 11362  0585  1D03               	skipz
 11363  0586  2D89               	goto	u7465
 11364  0587  084C               	movf	sprintf@c^(0+128),w
 11365  0588  024A               	subwf	sprintf@prec^(0+128),w
 11366  0589                     u7465:
 11367  0589  1803               	skipnc
 11368  058A  2D8C               	goto	u7461
 11369  058B  2D8D               	goto	u7460
 11370  058C                     u7461:
 11371  058C  2D96               	goto	l4424
 11372  058D                     u7460:
 11373  058D                     l4422:
 11374                           
 11375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11376  058D  1683               	bsf	3,5	;RP0=1, select bank1
 11377  058E  1303               	bcf	3,6	;RP1=0, select bank1
 11378  058F  084C               	movf	sprintf@c^(0+128),w
 11379  0590  00AD               	movwf	??_sprintf^(0+128)
 11380  0591  01AE               	clrf	(??_sprintf^(0+128)+1)
 11381  0592  082D               	movf	??_sprintf^(0+128),w
 11382  0593  00CA               	movwf	sprintf@prec^(0+128)
 11383  0594  082E               	movf	(??_sprintf+1)^(0+128),w
 11384  0595  00CB               	movwf	(sprintf@prec+1)^(0+128)
 11385  0596                     l4424:
 11386                           
 11387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11388  0596  1683               	bsf	3,5	;RP0=1, select bank1
 11389  0597  1303               	bcf	3,6	;RP1=0, select bank1
 11390  0598  0839               	movf	sprintf@width^(0+128),w
 11391  0599  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11392  059A  1903               	btfsc	3,2
 11393  059B  2D9D               	goto	u7471
 11394  059C  2D9E               	goto	u7470
 11395  059D                     u7471:
 11396  059D  2DB0               	goto	l4430
 11397  059E                     u7470:
 11398  059E                     l4426:
 11399  059E  3003               	movlw	3
 11400  059F  0537               	andwf	sprintf@flag^(0+128),w
 11401  05A0  00AD               	movwf	??_sprintf^(0+128)
 11402  05A1  3000               	movlw	0
 11403  05A2  0538               	andwf	(sprintf@flag+1)^(0+128),w
 11404  05A3  00AE               	movwf	(??_sprintf+1)^(0+128)
 11405  05A4  082D               	movf	??_sprintf^(0+128),w
 11406  05A5  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11407  05A6  1903               	btfsc	3,2
 11408  05A7  2DA9               	goto	u7481
 11409  05A8  2DAA               	goto	u7480
 11410  05A9                     u7481:
 11411  05A9  2DB0               	goto	l4430
 11412  05AA                     u7480:
 11413  05AA                     l4428:
 11414                           
 11415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11416  05AA  30FF               	movlw	255
 11417  05AB  07B9               	addwf	sprintf@width^(0+128),f
 11418  05AC  1803               	skipnc
 11419  05AD  0ABA               	incf	(sprintf@width+1)^(0+128),f
 11420  05AE  30FF               	movlw	255
 11421  05AF  07BA               	addwf	(sprintf@width+1)^(0+128),f
 11422  05B0                     l4430:
 11423                           
 11424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11425  05B0  1F38               	btfss	(sprintf@flag+1)^(0+128),6
 11426  05B1  2DB3               	goto	u7491
 11427  05B2  2DB4               	goto	u7490
 11428  05B3                     u7491:
 11429  05B3  2DCF               	goto	l4438
 11430  05B4                     u7490:
 11431  05B4                     l4432:
 11432                           
 11433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11434  05B4  084B               	movf	(sprintf@prec+1)^(0+128),w
 11435  05B5  3A80               	xorlw	128
 11436  05B6  00AD               	movwf	??_sprintf^(0+128)
 11437  05B7  083A               	movf	(sprintf@width+1)^(0+128),w
 11438  05B8  3A80               	xorlw	128
 11439  05B9  022D               	subwf	??_sprintf^(0+128),w
 11440  05BA  1D03               	skipz
 11441  05BB  2DBE               	goto	u7505
 11442  05BC  0839               	movf	sprintf@width^(0+128),w
 11443  05BD  024A               	subwf	sprintf@prec^(0+128),w
 11444  05BE                     u7505:
 11445  05BE  1803               	skipnc
 11446  05BF  2DC1               	goto	u7501
 11447  05C0  2DC2               	goto	u7500
 11448  05C1                     u7501:
 11449  05C1  2DCB               	goto	l4436
 11450  05C2                     u7500:
 11451  05C2                     l4434:
 11452                           
 11453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11454  05C2  1683               	bsf	3,5	;RP0=1, select bank1
 11455  05C3  1303               	bcf	3,6	;RP1=0, select bank1
 11456  05C4  084A               	movf	sprintf@prec^(0+128),w
 11457  05C5  02B9               	subwf	sprintf@width^(0+128),f
 11458  05C6  084B               	movf	(sprintf@prec+1)^(0+128),w
 11459  05C7  1C03               	skipc
 11460  05C8  03BA               	decf	(sprintf@width+1)^(0+128),f
 11461  05C9  02BA               	subwf	(sprintf@width+1)^(0+128),f
 11462  05CA  2DCF               	goto	l4438
 11463  05CB                     l4436:
 11464                           
 11465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11466  05CB  1683               	bsf	3,5	;RP0=1, select bank1
 11467  05CC  1303               	bcf	3,6	;RP1=0, select bank1
 11468  05CD  01B9               	clrf	sprintf@width^(0+128)
 11469  05CE  01BA               	clrf	(sprintf@width+1)^(0+128)
 11470  05CF                     l4438:
 11471                           
 11472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11473  05CF  083A               	movf	(sprintf@width+1)^(0+128),w
 11474  05D0  3A80               	xorlw	128
 11475  05D1  3C80               	sublw	128
 11476  05D2  1D03               	skipz
 11477  05D3  2DD6               	goto	u7515
 11478  05D4  0839               	movf	sprintf@width^(0+128),w
 11479  05D5  024C               	subwf	sprintf@c^(0+128),w
 11480  05D6                     u7515:
 11481  05D6  1803               	skipnc
 11482  05D7  2DD9               	goto	u7511
 11483  05D8  2DDA               	goto	u7510
 11484  05D9                     u7511:
 11485  05D9  2DE6               	goto	l4442
 11486  05DA                     u7510:
 11487  05DA                     l4440:
 11488                           
 11489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11490  05DA  1683               	bsf	3,5	;RP0=1, select bank1
 11491  05DB  1303               	bcf	3,6	;RP1=0, select bank1
 11492  05DC  084C               	movf	sprintf@c^(0+128),w
 11493  05DD  00AD               	movwf	??_sprintf^(0+128)
 11494  05DE  01AE               	clrf	(??_sprintf^(0+128)+1)
 11495  05DF  082D               	movf	??_sprintf^(0+128),w
 11496  05E0  02B9               	subwf	sprintf@width^(0+128),f
 11497  05E1  082E               	movf	(??_sprintf+1)^(0+128),w
 11498  05E2  1C03               	skipc
 11499  05E3  03BA               	decf	(sprintf@width+1)^(0+128),f
 11500  05E4  02BA               	subwf	(sprintf@width+1)^(0+128),f
 11501  05E5  2DEA               	goto	l4444
 11502  05E6                     l4442:
 11503                           
 11504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11505  05E6  1683               	bsf	3,5	;RP0=1, select bank1
 11506  05E7  1303               	bcf	3,6	;RP1=0, select bank1
 11507  05E8  01B9               	clrf	sprintf@width^(0+128)
 11508  05E9  01BA               	clrf	(sprintf@width+1)^(0+128)
 11509  05EA                     l4444:
 11510                           
 11511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11512  05EA  0839               	movf	sprintf@width^(0+128),w
 11513  05EB  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11514  05EC  1903               	btfsc	3,2
 11515  05ED  2DEF               	goto	u7521
 11516  05EE  2DF0               	goto	u7520
 11517  05EF                     u7521:
 11518  05EF  2E07               	goto	l4452
 11519  05F0                     u7520:
 11520  05F0                     l4446:
 11521                           
 11522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11523  05F0  3020               	movlw	32
 11524  05F1  00AD               	movwf	??_sprintf^(0+128)
 11525  05F2  0849               	movf	sprintf@sp^(0+128),w
 11526  05F3  0084               	movwf	4
 11527  05F4  082D               	movf	??_sprintf^(0+128),w
 11528  05F5  1783               	bsf	3,7	;select IRP bank2
 11529  05F6  0080               	movwf	0
 11530  05F7                     l4448:
 11531  05F7  3001               	movlw	1
 11532  05F8  00AD               	movwf	??_sprintf^(0+128)
 11533  05F9  082D               	movf	??_sprintf^(0+128),w
 11534  05FA  07C9               	addwf	sprintf@sp^(0+128),f
 11535  05FB                     l4450:
 11536  05FB  30FF               	movlw	255
 11537  05FC  07B9               	addwf	sprintf@width^(0+128),f
 11538  05FD  1803               	skipnc
 11539  05FE  0ABA               	incf	(sprintf@width+1)^(0+128),f
 11540  05FF  30FF               	movlw	255
 11541  0600  07BA               	addwf	(sprintf@width+1)^(0+128),f
 11542  0601  0839               	movf	sprintf@width^(0+128),w
 11543  0602  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11544  0603  1D03               	btfss	3,2
 11545  0604  2E06               	goto	u7531
 11546  0605  2E07               	goto	u7530
 11547  0606                     u7531:
 11548  0606  2DF0               	goto	l4446
 11549  0607                     u7530:
 11550  0607                     l4452:
 11551                           
 11552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11553  0607  3003               	movlw	3
 11554  0608  0537               	andwf	sprintf@flag^(0+128),w
 11555  0609  00AD               	movwf	??_sprintf^(0+128)
 11556  060A  3000               	movlw	0
 11557  060B  0538               	andwf	(sprintf@flag+1)^(0+128),w
 11558  060C  00AE               	movwf	(??_sprintf+1)^(0+128)
 11559  060D  082D               	movf	??_sprintf^(0+128),w
 11560  060E  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11561  060F  1903               	btfsc	3,2
 11562  0610  2E12               	goto	u7541
 11563  0611  2E13               	goto	u7540
 11564  0612                     u7541:
 11565  0612  2E8E               	goto	l4464
 11566  0613                     u7540:
 11567  0613                     l4454:
 11568                           
 11569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11570  0613  302D               	movlw	45
 11571  0614  00AD               	movwf	??_sprintf^(0+128)
 11572  0615  0849               	movf	sprintf@sp^(0+128),w
 11573  0616  0084               	movwf	4
 11574  0617  082D               	movf	??_sprintf^(0+128),w
 11575  0618  1783               	bsf	3,7	;select IRP bank2
 11576  0619  0080               	movwf	0
 11577  061A                     l4456:
 11578  061A  3001               	movlw	1
 11579  061B  00AD               	movwf	??_sprintf^(0+128)
 11580  061C  082D               	movf	??_sprintf^(0+128),w
 11581  061D  07C9               	addwf	sprintf@sp^(0+128),f
 11582  061E  2E8E               	goto	l4464
 11583  061F                     l4458:
 11584                           
 11585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11586  061F  3000               	movlw	0
 11587  0620  1283               	bcf	3,5	;RP0=0, select bank0
 11588  0621  1303               	bcf	3,6	;RP1=0, select bank0
 11589  0622  00B0               	movwf	___llmod@divisor+3
 11590  0623  3000               	movlw	0
 11591  0624  00AF               	movwf	___llmod@divisor+2
 11592  0625  3000               	movlw	0
 11593  0626  00AE               	movwf	___llmod@divisor+1
 11594  0627  300A               	movlw	10
 11595  0628  00AD               	movwf	___llmod@divisor
 11596  0629  1683               	bsf	3,5	;RP0=1, select bank1
 11597  062A  1303               	bcf	3,6	;RP1=0, select bank1
 11598  062B  084A               	movf	sprintf@prec^(0+128),w
 11599  062C  00AD               	movwf	??_sprintf^(0+128)
 11600  062D  3001               	movlw	1
 11601  062E                     u7555:
 11602  062E  1003               	clrc
 11603  062F  0DAD               	rlf	??_sprintf^(0+128),f
 11604  0630  3EFF               	addlw	-1
 11605  0631  1D03               	skipz
 11606  0632  2E2E               	goto	u7555
 11607  0633  1003               	clrc
 11608  0634  0D2D               	rlf	??_sprintf^(0+128),w
 11609  0635  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11610  0636  0084               	movwf	4
 11611  0637  160A  158A  200A  120A  118A  	fcall	stringdir
 11612  063C  1283               	bcf	3,5	;RP0=0, select bank0
 11613  063D  1303               	bcf	3,6	;RP1=0, select bank0
 11614  063E  00A0               	movwf	___lldiv@divisor
 11615  063F  160A  158A  200A  120A  118A  	fcall	stringdir
 11616  0644  00A1               	movwf	___lldiv@divisor+1
 11617  0645  160A  158A  200A  120A  118A  	fcall	stringdir
 11618  064A  00A2               	movwf	___lldiv@divisor+2
 11619  064B  160A  158A  200A  120A  118A  	fcall	stringdir
 11620  0650  00A3               	movwf	___lldiv@divisor+3
 11621  0651  1683               	bsf	3,5	;RP0=1, select bank1
 11622  0652  1303               	bcf	3,6	;RP1=0, select bank1
 11623  0653  0842               	movf	(sprintf@val+3)^(0+128),w
 11624  0654  1283               	bcf	3,5	;RP0=0, select bank0
 11625  0655  1303               	bcf	3,6	;RP1=0, select bank0
 11626  0656  00A7               	movwf	___lldiv@dividend+3
 11627  0657  1683               	bsf	3,5	;RP0=1, select bank1
 11628  0658  1303               	bcf	3,6	;RP1=0, select bank1
 11629  0659  0841               	movf	(sprintf@val+2)^(0+128),w
 11630  065A  1283               	bcf	3,5	;RP0=0, select bank0
 11631  065B  1303               	bcf	3,6	;RP1=0, select bank0
 11632  065C  00A6               	movwf	___lldiv@dividend+2
 11633  065D  1683               	bsf	3,5	;RP0=1, select bank1
 11634  065E  1303               	bcf	3,6	;RP1=0, select bank1
 11635  065F  0840               	movf	(sprintf@val+1)^(0+128),w
 11636  0660  1283               	bcf	3,5	;RP0=0, select bank0
 11637  0661  1303               	bcf	3,6	;RP1=0, select bank0
 11638  0662  00A5               	movwf	___lldiv@dividend+1
 11639  0663  1683               	bsf	3,5	;RP0=1, select bank1
 11640  0664  1303               	bcf	3,6	;RP1=0, select bank1
 11641  0665  083F               	movf	sprintf@val^(0+128),w
 11642  0666  1283               	bcf	3,5	;RP0=0, select bank0
 11643  0667  1303               	bcf	3,6	;RP1=0, select bank0
 11644  0668  00A4               	movwf	___lldiv@dividend
 11645  0669  160A  158A  2512  120A  118A  	fcall	___lldiv
 11646  066E  1283               	bcf	3,5	;RP0=0, select bank0
 11647  066F  1303               	bcf	3,6	;RP1=0, select bank0
 11648  0670  0823               	movf	?___lldiv+3,w
 11649  0671  00B4               	movwf	___llmod@dividend+3
 11650  0672  0822               	movf	?___lldiv+2,w
 11651  0673  00B3               	movwf	___llmod@dividend+2
 11652  0674  0821               	movf	?___lldiv+1,w
 11653  0675  00B2               	movwf	___llmod@dividend+1
 11654  0676  0820               	movf	?___lldiv,w
 11655  0677  00B1               	movwf	___llmod@dividend
 11656  0678  160A  158A  2461  120A  118A  	fcall	___llmod
 11657  067D  1283               	bcf	3,5	;RP0=0, select bank0
 11658  067E  1303               	bcf	3,6	;RP1=0, select bank0
 11659  067F  082D               	movf	?___llmod,w
 11660  0680  3E30               	addlw	48
 11661  0681  1683               	bsf	3,5	;RP0=1, select bank1
 11662  0682  1303               	bcf	3,6	;RP1=0, select bank1
 11663  0683  00AE               	movwf	(??_sprintf+1)^(0+128)
 11664  0684  082E               	movf	(??_sprintf+1)^(0+128),w
 11665  0685  00CC               	movwf	sprintf@c^(0+128)
 11666  0686                     l4460:
 11667                           
 11668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11669  0686  084C               	movf	sprintf@c^(0+128),w
 11670  0687  00AD               	movwf	??_sprintf^(0+128)
 11671  0688  0849               	movf	sprintf@sp^(0+128),w
 11672  0689  0084               	movwf	4
 11673  068A  082D               	movf	??_sprintf^(0+128),w
 11674  068B  1783               	bsf	3,7	;select IRP bank2
 11675  068C  0080               	movwf	0
 11676  068D  2E1A               	goto	l4456
 11677  068E                     l4464:
 11678                           
 11679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11680  068E  30FF               	movlw	255
 11681  068F  07CA               	addwf	sprintf@prec^(0+128),f
 11682  0690  1803               	skipnc
 11683  0691  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11684  0692  30FF               	movlw	255
 11685  0693  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11686  0694  0A4A               	incf	sprintf@prec^(0+128),w
 11687  0695  1D03               	skipz
 11688  0696  2E9B               	goto	u7561
 11689  0697  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 11690  0698  1D03               	btfss	3,2
 11691  0699  2E9B               	goto	u7561
 11692  069A  2E9C               	goto	u7560
 11693  069B                     u7561:
 11694  069B  2E1F               	goto	l4458
 11695  069C                     u7560:
 11696  069C                     l4466:
 11697                           
 11698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11699  069C  3001               	movlw	1
 11700  069D  07A8               	addwf	sprintf@f^(0+128),f
 11701  069E  30FF               	movlw	-1
 11702  069F  0728               	addwf	sprintf@f^(0+128),w
 11703  06A0  0084               	movwf	4
 11704  06A1  160A  158A  200A  120A  118A  	fcall	stringdir
 11705  06A6  00AD               	movwf	??_sprintf^(0+128)
 11706  06A7  082D               	movf	??_sprintf^(0+128),w
 11707  06A8  00CC               	movwf	sprintf@c^(0+128)
 11708  06A9  084C               	movf	sprintf@c^(0+128),w
 11709  06AA  1D03               	btfss	3,2
 11710  06AB  2EAD               	goto	u7571
 11711  06AC  2EB0               	goto	u7570
 11712  06AD                     u7571:
 11713  06AD  160A  118A  2D00   	goto	l4186
 11714  06B0                     u7570:
 11715  06B0                     l4468:
 11716                           
 11717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11718  06B0  0849               	movf	sprintf@sp^(0+128),w
 11719  06B1  0084               	movwf	4
 11720  06B2  1783               	bsf	3,7	;select IRP bank2
 11721  06B3  0180               	clrf	0
 11722  06B4                     l413:
 11723  06B4  0008               	return
 11724  06B5                     __end_of_sprintf:

Data Sizes:
    Strings     27
    Constant    144
    Data        2
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      78
    BANK1            80     48      69
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_3(CODE[3]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> s(BANK3[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flmul->___awmod
    ___flmul->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversor2->___flmul
    ___flmul->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   44010
                                             45 BANK1      3     3      0
                      _Config_USARTT
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _conversor2
                            _recibir
                              _setup
                            _spiInit
                            _spiRead
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   37035
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8544
                                             37 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6600
                                             37 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              4 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             56 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             57 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversor2                                           9     5      4    5474
                                             37 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     462
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     524
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_USARTT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_USARTT
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conversor2
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _recibir
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      14       9       20.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     30      45       7       86.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B2      12        0.0%
ABS                  0      0      B2       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 21:44:26 2021

                        _p 00D0                          _s 0190                          _v 00DC  
                        _x 00D4                          pc 0002                _SSPSTATbits 0094  
                       l91 19D7                         l97 1060               ___awdiv@sign 0028  
                       _vv 00D8                         fsr 0004        ___wmul@multiplicand 0075  
      __Umul8_16@word_mpld 0022                        l120 19B4                        l201 1980  
                      l114 1979                        l132 07FD                        l212 1991  
                      l117 1A19                        l126 1A5D                        l129 1BC0  
                      l321 0FFF                        l138 1B33                        l314 126D  
                      l157 19C5                        l413 06B4                        l343 15BD  
                      l417 1A97                        l178 199C                        l194 19FA  
                      l195 19FF                        l603 1BDF                        l611 1E6D  
                      l419 1AB1                        l604 1BFB                        l612 1E86  
                      l620 087D                        l605 1C10                        l453 1D79  
                      l198 197A                        l630 087D                        l383 033A  
                      l608 1E01                        l616 19A7                        l376 02F6  
                      l634 1FFF                        l570 1DE2                        l627 0868  
                      l635 1F71                        l723 1B79                        l645 1FF2  
                      l733 1AED                        l750 134F                        l638 1FC2  
                      l591 08FE                        l583 1D11                        l840 0C9C  
                      l744 12D1                        l904 19E9                        l673 1CB6  
                      l587 093B                        l852 0C90                        l748 1378  
                      l588 08A0                        l861 1A86                        l765 1443  
                      l757 14F5                        l846 0C08                        l790 1C60  
                      l598 092E                        l775 1489                        l769 1467  
                      l890 1EF0                        l786 14E9                        l778 14C7  
                      l859 1A74                        l787 14F5                        l884 1EAB  
                      l886 1F42                        l897 1F0C                        l898 1F18  
                      _ISR 1A1A                        fsr0 0004                        indf 0000  
             ___awmod@sign 0021               ___flmul@aexp 003D               ___flmul@bexp 003E  
             ___flmul@sign 0038               ___flmul@temp 0043               ___flmul@prod 003F  
                     ?_ISR 0070               ___fltol@exp1 0062                       l3100 199D  
                     l3102 19A5                       l3110 080F                       l3104 19A7  
                     l3120 0836                       l4000 091C                       l3130 0844  
                     l3122 0838                       l3114 0818                       l3220 19CC  
                     l2500 1275                       l3140 086D                       l3124 083C  
                     l3132 0856                       l3116 082D                       l3108 0802  
                     l4020 1AA5                       l4012 1A87                       l3230 19C4  
                     l4110 1EB3                       l4102 1E8A                       l3222 19CD  
                     l3214 19C6                       l2510 128A                       l2502 127B  
                     l3142 0872                       l3118 082E                       l4030 1D27  
                     l4022 1AAB                       l4014 1A8B                       l4006 0923  
                     l3224 19B5                       l2360 1A7D                       l2352 1A61  
                     l4120 1ED5                       l4104 1E8F                       l3216 19C9  
                     l2520 12A2                       l2512 1292                       l2504 127F  
                     l4040 1D61                       l4032 1D34                       l4016 1A8F  
                     l4008 0933                       l4200 153F                       l3226 19BD  
                     l2362 1A82                       l2354 1A63                       l4130 1F06  
                     l4122 1ED9                       l4114 1EBC                       l4106 1E93  
                     l3234 1992                       l3218 19CB                       l3250 19F2  
                     l4050 1BC1                       l2610 13B2                       l2602 138A  
                     l2530 12B4                       l2522 12A8                       l2514 1293  
                     l2506 1280                       l3138 085D                       l4042 1D62  
                     l4034 1D38                       l4026 1D12                       l4018 1A9E  
                     l4210 1575                       l4202 1552                       l3228 19C1  
                     l2356 1A6A                       l2700 094E                       l4140 1F39  
                     l4132 1F10                       l4124 1EE7                       l4116 1EC1  
                     l4108 1EA3                       l3252 19F4                       l4052 1BD7  
                     l2612 13B4                       l2604 13A1                       l2620 13C7  
                     l2532 12B9                       l2540 12C9                       l2524 12A9  
                     l2508 1285                       l2516 1295                       l3164 1C11  
                     l4044 1D6B                       l4036 1D41                       l4028 1D24  
                     l4300 013E                       l4220 15A8                       l4212 1579  
                     l4204 1556                       l4150 1B8A                       l2358 1A6E  
                     l2710 096A                       l2702 0953                       l4142 1F3A  
                     l4134 1F1A                       l4126 1EF7                       l4118 1ECE  
                     l3254 19F6                       l4054 1BF3                       l4070 1E21  
                     l4062 1DE3                       l2622 13DD                       l2630 1435  
                     l2614 13B8                       l2606 13A5                       l2550 12E7  
                     l2542 12D7                       l2534 12BE                       l2526 12AF  
                     l2518 129D                       l3166 1C15                       l4038 1D53  
                     l4046 1D71                       l4302 0173                       l4230 15E1  
                     l4214 157C                       l4222 15B9                       l4206 1566  
                     l4152 1B9B                       l4160 1A40                       l2800 0C0D  
                     l2720 097F                       l2712 096F                       l2704 0958  
                     l4136 1F30                       l4128 1F02                       l3256 19F9  
                     l3248 19EB                       l3280 198E                       l4056 1C0D  
                     l4072 1E45                       l4064 1DF9                       l2640 1462  
                     l2632 144B                       l2624 141B                       l2616 13B9  
                     l2608 13A9                       l2560 12FB                       l2552 12EB  
                     l2544 12DB                       l2536 12C6                       l2528 12B3  
                     l4400 051B                       l4320 0202                       l4312 01A6  
                     l4304 01A2                       l4240 1609                       l4232 15EF  
                     l4224 15BB                       l4216 1591                       l4208 1574  
                     l4154 1BA1                       l4146 1B7A                       l4162 1A45  
                     l4170 1AEE                       l2802 0C12                       l2810 0C43  
                     l2730 099B                       l2722 0984                       l2714 0975  
                     l2706 0960                       l4138 1F35                       l4058 1C0F  
                     l4074 1E49                       l4066 1E15                       l2650 1475  
                     l2642 1466                       l2634 1450                       l2626 1421  
                     l2618 13C2                       l2570 130F                       l2562 12FF  
                     l2554 12EF                       l2546 12DF                       l2538 12C7  
                     l4090 1C7F                       l4082 1C61                       l4410 052B  
                     l4402 0523                       l4322 0208                       l4306 01A4  
                     l4250 1678                       l4242 1630                       l4234 15F3  
                     l4218 15A4                       l4156 19A8                       l4148 1B80  
                     l4164 1A4C                       l4172 1AF3                       l2820 0C76  
                     l2812 0C50                       l2804 0C20                       l2740 09C6  
                     l2732 09A0                       l2724 098C                       l2716 0979  
                     l2708 0962                       l4180 104A                       l4076 1E83  
                     l4068 1E1D                       l2660 1486                       l2644 146B  
                     l2652 1477                       l2628 1426                       l2580 1333  
                     l2572 1313                       l2564 1303                       l2556 12F3  
                     l2548 12E3                       l4092 1C91                       l4084 1C6B  
                     l3700 1D7D                       l4420 057E                       l4404 0529  
                     l4340 0250                       l4324 0214                       l4332 0229  
                     l4316 01DD                       l4260 16C3                       l4252 1683  
                     l4244 1649                       l4236 15F7                       l4228 15BF  
                     l4500 0702                       l4166 1A52                       l4158 1A3B  
                     l4174 1B0F                       l2822 0C84                       l2814 0C5B  
                     l2806 0C24                       l2750 0A63                       l2742 09E3  
                     l2726 098E                       l2718 097A                       l3278 1989  
                     l4078 1E85                       l2670 14A5                       l2646 146E  
                     l2638 1459                       l2654 147B                       l2590 1363  
                     l2582 1353                       l2574 1317                       l2566 1307  
                     l2558 12F7                       l4094 1C9F                       l4086 1C6E  
                     l3710 1D91                       l3702 1D81                       l4430 05B0  
                     l4422 058D                       l4414 0562                       l4350 030B  
                     l4342 02AB                       l4334 0236                       l4326 021B  
                     l4318 01E7                       l4270 1763                       l4262 16C9  
                     l4254 1689                       l4246 164D                       l4238 1605  
                     l4190 150D                       l4510 0736                       l4502 070E  
                     l4168 1A57                       l4176 1B17                       l2824 0C88  
                     l2816 0C6A                       l2808 0C3D                       l2760 0AC6  
                     l2752 0A6C                       l2744 09FF                       l2736 09A9  
                     l2728 0996                       l2680 14DE                       l2672 14C3  
                     l2664 148E                       l2656 147C                       l2648 1470  
                     l2592 136C                       l2584 135C                       l2568 130B  
                     l2576 131B                       l4096 1CA8                       l4088 1C7B  
                     l3800 1B6F                       l2920 19E6                       l3720 1DA7  
                     l3712 1D95                       l3704 1D86                       l4440 05DA  
                     l4432 05B4                       l4424 0596                       l4416 056C  
                     l4360 0343                       l4352 0311                       l4344 02EA  
                     l4336 0244                       l4328 0224                       l4280 0033  
                     l4272 178C                       l4264 16E8                       l4256 169C  
                     l4248 1651                       l4192 1512                       l4184 14F9  
                     l4520 0783                       l4512 0756                       l4504 0718  
                     l2826 0C89                       l2818 0C74                       l2770 0B66  
                     l2762 0ADF                       l2754 0A7C                       l2746 0A2B  
                     l2738 09B9                       l4178 1008                       l2690 14F4  
                     l2682 14DF                       l2674 14CC                       l2666 1493  
                     l2658 1480                       l2586 135E                       l2594 1370  
                     l2578 131C                       l2498 126E                       l4098 1CAE  
                     l3802 1B75                       l3810 1ABD                       l2922 19E8  
                     l2914 19D9                       l3730 1DC7                       l3722 1DAB  
                     l3714 1D97                       l3706 1D88                       l4450 05FB  
                     l4442 05E6                       l4434 05C2                       l4426 059E  
                     l4418 0577                       l4370 03CC                       l4362 0348  
                     l4354 031E                       l4346 02FE                       l4338 024B  
                     l4290 00C4                       l4282 005C                       l4266 1733  
                     l4258 16BF                       l4274 1794                       l4194 1516  
                     l4186 1500                       l4530 07A8                       l4522 078D  
                     l4514 0768                       l4506 071B                       l2828 0C94  
                     l2780 0BD4                       l2772 0B8C                       l2764 0AFC  
                     l2756 0A99                       l2748 0A47                       l2692 093C  
                     l2684 14E3                       l2676 14D1                       l2668 14A1  
                     l2596 137C                       l2588 1362                       l3820 1ADC  
                     l3812 1AC4                       l2916 19DA                       l3732 1DCE  
                     l3724 1DAF                       l3716 1D9D                       l3708 1D8C  
                     l3900 0F4B                       l4460 0686                       l4452 0607  
                     l4444 05EA                       l4436 05CB                       l4428 05AA  
                     l4380 04D5                       l4372 0427                       l4364 034F  
                     l4356 032D                       l4348 0307                       l4292 00CC  
                     l4284 0083                       l4276 17A3                       l4268 175A  
                     l4196 1526                       l4188 1506                       l4532 07B7  
                     l4524 0791                       l4516 0771                       l4508 072A  
                     l3830 1A04                       l2790 0BEC                       l2782 0BD8  
                     l2774 0BB4                       l2766 0B29                       l2758 0AA9  
                     l2694 0943                       l2854 197A                       l2686 14E5  
                     l2678 14D9                       l2598 1381                       l3910 1F56  
                     l3822 1AE3                       l3814 1AC8                       l3806 1AB2  
                     l2918 19E0                       l3726 1DC0                       l3718 1DA0  
                     l3734 1DD4                       l3750 1CC5                       l3742 1CB7  
                     l4454 0613                       l4446 05F0                       l4438 05CF  
                     l4390 04FE                       l4382 04DC                       l4374 0466  
                     l4366 0353                       l4358 0334                       l4294 00EA  
                     l4286 0092                       l4278 17EA                       l4198 152A  
                     l4534 07C3                       l4526 079B                       l4518 0780  
                     l3832 1A0A                       l3840 07E7                       l2792 0BED  
                     l2784 0BD9                       l2776 0BBD                       l2768 0B39  
                     l2696 0949                       l2688 14F0                       l3920 1F72  
                     l3816 1ACC                       l3808 1AB8                       l3824 1AE9  
                     l3736 1DD9                       l3728 1DC6                       l3760 1CDE  
                     l3752 1CC9                       l3744 1CBA                       l3904 0FD3  
                     l4456 061A                       l4464 068E                       l4448 05F7  
                     l4392 0502                       l4384 04E0                       l4376 0472  
                     l4368 0371                       l4288 00BB                       l4536 07D6  
                     l4528 07A5                       l4480 06BF                       l3834 1A0D  
                     l3842 07ED                       l2794 0BF1                       l2786 0BE2  
                     l2778 0BCB                       l2698 094D                       l3930 1F9B  
                     l3922 1F78                       l3914 1F5F                       l3818 1AD6  
                     l3850 1064                       l3738 1DDE                       l3770 1CFD  
                     l3762 1CE2                       l3754 1CCE                       l3746 1CBE  
                     l4458 061F                       l4394 0506                       l4386 04E6  
                     l4378 04CD                       l4298 0135                       l4466 069C  
                     l4490 06DF                       l4482 06C4                       l3836 1A16  
                     l3828 1A01                       l3844 07F0                       l2796 0C05  
                     l2788 0BE8                       l3940 1FC6                       l3932 1FA9  
                     l3924 1F87                       l3908 1F43                       l3780 1B34  
                     l3860 117F                       l3852 106A                       l3764 1CE6  
                     l3756 1CD4                       l3772 1D03                       l3748 1CC3  
                     l4396 050A                       l4388 04ED                       l4468 06B0  
                     l4572 15D3                       l4492 06E8                       l4484 06C9  
                     l3846 07F5                       l3838 07E4                       l3934 1FB3  
                     l3926 1F89                       l3790 1B4C                       l3782 1B38  
                     l3774 1D08                       l3766 1CF0                       l3758 1CD7  
                     l3870 0CA4                       l4398 0515                       l4494 06F2  
                     l4486 06CE                       l4478 06B5                       l3696 1975  
                     l3848 07F8                       l3960 087E                       l3936 1FB4  
                     l3928 1F92                       l3792 1B50                       l3784 1B3E  
                     l3864 122A                       l3776 1D0D                       l3768 1CF6  
                     l3880 0D97                       l3872 0CA6                       l4496 06F5  
                     l4488 06D7                       l3962 088B                       l3954 1FE7  
                     l3946 1FCE                       l3938 1FBC                       l3794 1B61  
                     l3786 1B41                       l3858 1179                       l3698 1D7A  
                     l3882 0D9E                       l3874 0CAD                       l3890 0E53  
                     l4498 06FF                       l3980 08C5                       l3972 08A1  
                     l3956 1FF7                       l3948 1FE0                       l3796 1B67  
                     l3788 1B48                       l3892 0E5A                       l3868 0CA0  
                     l3990 08F8                       l3982 08CE                       l3974 08A9  
                     l3966 0894                       l3798 1B68                       l3886 0E26  
                     l3992 0902                       l3984 08E0                       l3976 08BA  
                     l3986 08EE                       l3978 08BC                       l3898 0F44  
                     l3988 08EF                       l3998 090A                       STR_1 18A0  
                     STR_2 18B1                       STR_3 18B8                       u4000 0BF1  
                     u4001 0BF0                       u4010 0C05                       u4011 0C04  
                     u4020 0C0C                       u3300 12B3                       u4021 0C0B  
                     u3301 12B2                       u4030 0C12                       u3310 12B9  
                     u4031 0C11                       u3311 12B8                       u4040 0C24  
                     u3320 12BE                       u4041 0C23                       u3321 12BD  
                     u4050 0C33                       u3410 1378                       u3330 12D7  
                     u3411 1377                       u3331 12D6                       u4060 0C50  
                     u3420 137C                       u3340 12DB                       u3260 127F  
                     u4061 0C4F                       u3501 13F4                       u3421 137B  
                     u3405 1365                       u3341 12DA                       u3261 127E  
                     u4070 0C6A                       u3510 1408                       u3502 13F5  
                     u3430 1381                       u3350 1333                       u3270 1285  
                     u4071 0C69                       u4055 0C2E                       u3511 1409  
                     u3503 13FA                       u3431 1380                       u3351 1332  
                     u3271 1284                       u4080 0C88                       u3600 1480  
                     u3520 1426                       u3512 140E                       u3504 13FB  
                     u3360 133E                       u3280 128A                       u4081 0C87  
                     u4065 0C4C                       u3601 147F                       u3521 1425  
                     u3513 140F                       u3505 1400                       u3441 1393  
                     u3361 133C                       u3281 1289                       u4090 1980  
                     u3610 1486                       u3530 144B                       u3506 1401  
                     u3450 13A5                       u3442 139A                       u3370 133F  
                     u3290 12A8                       u6010 1B75                       u4075 0C66  
                     u4091 197F                       u3611 1485                       u3531 144A  
                     u3451 13A4                       u3443 13A1                       u3355 132F  
                     u3291 12A7                       u6011 1B74                       u3700 14E3  
                     u3620 148D                       u3540 1450                       u3460 13A9  
                     u3380 1353                       u6020 1AB8                       u3701 14E2  
                     u3621 148C                       u3541 144F                       u3461 13A8  
                     u3381 1352                       u6005 1B69                       u6021 1AB7  
                     u2910 1A6E                       u5150 19F2                       u3710 14F4  
                     u3630 1493                       u3470 13B8                       u3390 1362  
                     u4350 19E0                       u2911 1A6D                       u5151 19F1  
                     u3711 14F3                       u3631 1492                       u3471 13B7  
                     u3391 1361                       u4351 19DF                       u7000 1A40  
                     u3720 094D                       u3640 14A5                       u3560 1466  
                     u6040 1ACC                       u6120 117F                       u4360 19E6  
                     u7001 1A3F                       u3801 09F1                       u3721 094C  
                     u3641 14A4                       u3561 1465                       u6041 1ACB  
                     u6121 117E                       u6105 10E3                       u4361 19E5  
                     u7010 1A52                       u2930 1A82                       u3802 09F8  
                     u3730 0953                       u3650 14B4                       u3570 146B  
                     u3490 13DD                       u6050 1AD6                       u6210 0D9E  
                     u7011 1A51                       u2931 1A81                       u3811 0A0D  
                     u3803 09FF                       u3731 0952                       u3571 146A  
                     u3555 145B                       u3491 13DC                       u6051 1AD5  
                     u6035 1ABE                       u6115 1138                       u6211 0D9D  
                     u7020 1AFD                       u3812 0A14                       u3740 0958  
                     u3660 14C3                       u3580 1475                       u7100 15EF  
                     u2925 1A75                       u3901 0B48                       u3821 0A39  
                     u3813 0A1B                       u3741 0957                       u3661 14C2  
                     u3581 1474                       u3493 13D9                       u3485 13BB  
                     u6205 0D56                       u7101 15EC                       u7030 1B21  
                     u3910 0B72                       u3902 0B4F                       u3822 0A40  
                     u3750 0979                       u3670 14CC                       u3590 147B  
                     u6070 1AE9                       u7110 15F3                       u3903 0B56  
                     u3831 0A55                       u3823 0A47                       u3751 0978  
                     u3671 14CB                       u3655 14AF                       u3591 147A  
                     u6071 1AE8                       u6055 1AD2                       u6135 119C  
                     u7111 15F2                       u7040 1B33                       u3832 0A5C  
                     u3760 097F                       u3680 14D1                       u6400 1FCD  
                     u6080 106A                       u6160 0CA4                       u7200 0083  
                     u7120 1630                       u7041 1B32                       u3921 0B7E  
                     u3833 0A63                       u3761 097E                       u3681 14D0  
                     u6401 1FCC                       u6065 1ADD                       u6145 11E9  
                     u6081 1069                       u6305 0F5E                       u6225 0DB1  
                     u6161 0CA3                       u7201 0082                       u7121 162F  
                     u3930 0B9A                       u3922 0B85                       u3770 0984  
                     u3690 14DE                       u6330 1F56                       u6250 0E5A  
                     u6170 0CAD                       u7210 0092                       u7130 1678  
                     u7050 1506                       u3923 0B8C                       u3915 0B6D  
                     u3851 0A8B                       u3771 0983                       u3691 14DD  
                     u6331 1F55                       u6155 1235                       u6315 0F9A  
                     u6251 0E59                       u6235 0DED                       u6171 0CAC  
                     u7211 0091                       u7131 1677                       u7051 1505  
                     u3852 0A92                       u3780 099B                       u4900 0855  
                     u6420 1FDF                       u6340 1F70                       u7220 00BB  
                     u7140 16C3                       u7060 1526                       u3941 0BA6  
                     u3861 0AB8                       u3853 0A99                       u3845 0A65  
                     u3781 099A                       u4901 0854                       u6421 1FDE  
                     u6341 1F6F                       u6325 0FD6                       u6245 0E29  
                     u7221 00BA                       u7141 16C2                       u7061 1525  
                     u3942 0BAD                       u3862 0ABF                       u3790 09A0  
                     u4910 085C                       u6510 08FE                       u6430 1FE6  
                     u7310 02FD                       u7150 175A                       u7070 1566  
                     u3943 0BB4                       u3935 0B95                       u3863 0AC6  
                     u3791 099F                       u4911 085B                       u6511 08FD  
                     u6431 1FE5                       u6415 1FCF                       u6095 1087  
                     u7311 02FC                       u7215 008E                       u7151 1759  
                     u7071 1565                       u4840 19A5                       u6520 0902  
                     u6360 1FA9                       u5800 1DAF                       u7400 051B  
                     u7320 031E                       u7240 01DC                       u7160 178C  
                     u7080 1574                       u3881 0AEE                       u4841 19A4  
                     u6521 0901                       u6505 08F1                       u6361 1FA8  
                     u5801 1DAE                       u6265 0E7C                       u6185 0CCF  
                     u7401 051A                       u7321 031D                       u7305 0253  
                     u7241 01DB                       u7161 178B                       u7081 1573  
                     u3970 0BD8                       u3882 0AF5                       u4930 086D  
                     u4850 080F                       u6530 0909                       u6450 1FF7  
                     u6290 0F4B                       u7410 0523                       u7330 032D  
                     u7250 01E7                       u7170 17A3                       u7090 15B8  
                     u3971 0BD7                       u3955 0BB6                       u3891 0B1B  
                     u3883 0AFC                       u3875 0AC8                       u4931 086C  
                     u4851 080E                       u6531 0908                       u6451 1FF6  
                     u6355 1F94                       u6291 0F4A                       u6275 0EB8  
                     u6195 0D0B                       u7411 0522                       u7331 032C  
                     u7251 01E6                       u7235 01A9                       u7171 17A2  
                     u7091 15B7                       u3892 0B22                       u6700 1BD7  
                     u4940 0872                       u4860 0826                       u6620 1AAB  
                     u6460 088B                       u6380 1FC2                       u5820 1DC0  
                     u5900 1CE6                       u7500 05C2                       u7340 0348  
                     u7260 0202                       u7180 0033                       u3965 0BCD  
                     u3893 0B29                       u6701 1BD6                       u4941 0871  
                     u4925 085F                       u6621 1AAA                       u6605 1A98  
                     u6461 088A                       u6445 1FE9                       u6381 1FC1  
                     u6365 1FA5                       u5821 1DBF                       u5901 1CE5  
                     u6285 0F03                       u7501 05C1                       u7341 0347  
                     u7325 031A                       u7261 0201                       u7245 01D8  
                     u7181 17FA                       u3990 0BEC                       u6710 1BF3  
                     u4870 083C                       u6630 1D24                       u6550 091B  
                     u6470 089F                       u6390 1FC6                       u5910 1CF0  
                     u7510 05DA                       u7430 0561                       u7270 0214  
                     u7190 005C                       u3991 0BEB                       u6711 1BF2  
                     u4871 083B                       u6631 1D23                       u6615 1A9F  
                     u6551 091A                       u6471 089E                       u6391 1FC5  
                     u6375 1FB5                       u5815 1DB0                       u5911 1CEF  
                     u7511 05D9                       u7431 0560                       u7335 0329  
                     u7271 0213                       u7191 005B                       u7175 179F  
                     u6720 1C0D                       u4880 0843                       u6800 1C6B  
                     u6560 0922                       u5840 1DD4                       u5760 1D81  
                     u7520 05F0                       u7440 056C                       u7280 0236  
                     u3985 0BDB                       u6721 1C0C                       u4881 0842  
                     u4865 0821                       u6801 1C6A                       u6561 0921  
                     u6545 090B                       u5841 1DD3                       u5825 1DBC  
                     u5761 1D80                       u7521 05EF                       u7505 05BE  
                     u7441 056B                       u7425 052E                       u7281 0235  
                     u7185 17F5                       u6730 1DF9                       u6650 1D38  
                     u6490 08E0                       u5850 1DD9                       u5770 1D8C  
                     u5930 1D03                       u7530 0607                       u7450 0577  
                     u7370 04D4                       u7290 0244                       u6731 1DF8  
                     u6651 1D37                       u6491 08DF                       u5851 1DD8  
                     u5835 1DC8                       u5771 1D8B                       u5931 1D02  
                     u5915 1CEC                       u7531 0606                       u7515 05D6  
                     u7451 0576                       u7435 055D                       u7371 04D3  
                     u7355 03CF                       u7291 0243                       u6900 1ED4  
                     u6740 1E15                       u6820 1C7F                       u6580 0933  
                     u5780 1D9D                       u5940 1D08                       u5860 1CBE  
                     u7540 0613                       u7460 058D                       u7380 04EC  
                     u6901 1ED3                       u6725 1C09                       u6741 1E14  
                     u6645 1D29                       u6821 1C7E                       u6581 0932  
                     u6485 08C7                       u5781 1D9C                       u5941 1D07  
                     u5925 1CF7                       u5861 1CBD                       u7541 0612  
                     u7461 058C                       u7381 04EB                       u7365 0475  
                     u7285 0232                       u6750 1E21                       u6670 1D53  
                     u6830 1C91                       u6590 1A8F                       u5950 1B3E  
                     u5870 1CC9                       u7470 059E                       u7390 0506  
                     u6751 1E20                       u4895 0845                       u6671 1D52  
                     u6831 1C90                       u6815 1C70                       u6591 1A8E  
                     u6575 0925                       u6495 08DC                       u5951 1B3D  
                     u5871 1CC8                       u7471 059D                       u7455 0573  
                     u7391 0505                       u7607 0714                       u6920 1EF6  
                     u5880 1CD4                       u7560 069C                       u7480 05AA  
                     u6921 1EF5                       u6761 1E30                       u6665 1D3A  
                     u5881 1CD3                       u7561 069B                       u7481 05A9  
                     u7465 0589                       u7617 0723                       u6770 1E49  
                     u6762 1E31                       u6690 1D71                       u6850 1CAE  
                     u5970 1B50                       u7570 06B0                       u7490 05B4  
                     u7707 1BA5                       u6915 1EE8                       u6771 1E48  
                     u6763 1E36                       u6691 1D70                       u6675 1D4F  
                     u6851 1CAD                       u6835 1C8D                       u5971 1B4F  
                     u5795 1DA1                       u7571 06AD                       u7555 062E  
                     u7491 05B3                       u7627 0779                       u6940 1F06  
                     u6860 1E8F                       u6764 1E37                       u7717 1A11  
                     u6941 1F05                       u6861 1E8E                       u6781 1E58  
                     u6765 1E3C                       u6685 1D63                       u6845 1CA0  
                     u5965 1B42                       u7637 0789                       u6950 1F0C  
                     u6870 1E93                       u6790 1E83                       u6782 1E59  
                     u6766 1E3D                       u5990 1B61                       u6951 1F0B  
                     u6935 1EFB                       u6871 1E92                       u6791 1E82  
                     u6783 1E5E                       u5991 1B60                       u5895 1CD8  
                     u7647 07A1                       u6960 1F10                       u6880 1EB3  
                     u6784 1E5F                       u6961 1F0F                       u6881 1EB2  
                     u6785 1E64                       u5985 1B51                       u7657 07B0  
                     u6970 1F25                       u6786 1E65                       u7667 07F2  
                     u6795 1E7F                       u5995 1B5D                       u7587 06EE  
                     u6980 1F35                       u7677 07FA                       u6981 1F34  
                     u7597 06FB                       u6990 1F39                       u7687 1B86  
                     u6991 1F38                       u6975 1F20                       u6895 1EC6  
                     u7697 1B96                       _TRMT 04C1          ?_Lcd_Write_String 0076  
                     _flag 0079                       _main 06B5                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0020               _sprintf$1267 00B2  
          __end_of_Lcd_Cmd 1A1A                      ??_ISR 0070              ___fltol@sign1 0061  
          __end_of___fladd 14F6                      ?_main 0070            __end_of___awdiv 1DE3  
          __end_of___flneg 19A8            __end_of___awmod 1D12            __end_of___flmul 0C9D  
          __end_of___flsub 1C61            __end_of___fltol 087E                      _ANSEL 0188  
          __end_of___lldiv 1D7A            ___awdiv@divisor 0022            __end_of___llmod 1CB7  
          __end_of___lwdiv 1B7A                      i1l105 1A31            __end_of___lwmod 1AEE  
          ___awdiv@counter 0027                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0026                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 18A0                      _count 00E2  
                    _scale 0C9D            __end_of_isdigit 19EA            __end_of_recibir 199D  
                    _setup 19C6                      _turno 0078                      pclath 000A  
          __end_of_spiInit 1A00            __end_of_spiRead 1992                      status 0003  
                    wtemp0 007E            __end_of_sprintf 06B5           __end_of_Lcd_Init 1BC1  
         __end_of_Lcd_Port 197A            __initialization 000F               __end_of_main 07E3  
                   ??_main 00CD         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
         ___llmod@dividend 0031                     ?_scale 0045           ___awdiv@dividend 0024  
                   ?_setup 0070                     i1l3650 1A20                     i1l3652 1A24  
                   i1l3654 1A25                     i1l3656 1A2B                     i1l3648 1A1A  
                   u574_20 1A20                     u574_21 1A1F                     u575_20 1A24  
                   u575_21 1A23                  ??_Lcd_Cmd 0074                     u772_27 1A27  
  __size_of_Lcd_Write_Char 001B                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPBUF 0013                     _SSPCON 0014           __end_of___xxtofl 1F43  
         __end_of__powers_ 1844                     ___flge 1DE3                     ___fleq 1BC1  
                ??___fladd 0061                     ___wmul 1A87                  ??___awdiv 0026  
                ??___flneg 0077                  ??___awmod 0077                  ??___flmul 0033  
                ??___flsub 0078                  ??___fltol 005C                  ??___lldiv 0073  
                ??___llmod 0074                  ??___lwdiv 0025                  ??___lwmod 0077  
                   _fround 1061           ___awdiv@quotient 0029            ___awmod@divisor 0073  
                   _valorA 00E3                     _valorC 00E4                     _valorT 006D  
          ___awmod@counter 0020               __pdataCOMMON 0078                  ??_isdigit 0073  
       __size_of__Umul8_16 0029                  ??_recibir 0073                     saved_w 007E  
                ??_spiInit 0076                  ??_spiRead 0073                  ??_sprintf 00AD  
          Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0077                 ___flge@ff1 0020  
               ___flge@ff2 0024               ___xxtofl@arg 0026               ___xxtofl@exp 0025  
             ___xxtofl@val 0073                 ___fleq@ff1 0020                 ___fleq@ff2 0024  
  __end_of__initialization 002F                 ___flneg@f1 0073          __end_of_Lcd_Clear 19B5  
               ___fltol@f1 0058      __end_of_Config_USARTT 19C6             __pcstackCOMMON 0070  
            __end_of_scale 1000              __end_of_setup 19D8             _Lcd_Set_Cursor 1A38  
               __div_to_l_ 087E                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 002D            __div_to_l_@cntr 002C                    ??_scale 0049  
          __div_to_l_@quot 0028               sprintf@width 00B9                    ??_setup 0073  
               __pbssBANK0 006D                 __pbssBANK1 00D0                 __pbssBANK3 0190  
            __div_to_l_@f1 0020              __div_to_l_@f2 0024          __end_of__Umul8_16 1A87  
               __pmaintext 06B5                    ?___flge 0020                    ?___fleq 0020  
                  ?___wmul 0073                 __pintentry 0004    __size_of_spiReceiveWait 0007  
                  ?_fround 0045  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 1A5E  
                ?___xxtofl 0073                 ??_Lcd_Init 0020                 ??_Lcd_Port 0073  
                  _SSPSTAT 0094                 __stringtab 1800             _Lcd_Write_Char 07E3  
                  _Lcd_Cmd 1A00                 _conversor2 1005          __end_of__npowers_ 1878  
               _scale$1266 0053            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 126E                    ___awdiv 1D7A                    ___flneg 199D  
                  ___awmod 1CB7                    ___flmul 093C                    ___flsub 1C11  
                  ___fltol 0802                    ___lldiv 1D12            __size_of___wmul 002B  
                  ___llmod 1C61                    ___lwdiv 1B34                    ___lwmod 1AB2  
          __size_of_fround 020D            ?_Lcd_Set_Cursor 0077                    __ptext1 14F6  
                  __ptext2 0C9D                    __ptext3 1CB7                    __ptext4 1D7A  
                  __ptext5 19D8                    __ptext6 1061                    __ptext7 1AB2  
                  __ptext8 1B34                    __ptext9 1F43               __size_of_ISR 001E  
              ?__div_to_l_ 0020                    _enviado 00E0                    _dpowers 1878  
                  _isdigit 19D8                 ??___xxtofl 0020                    _recibir 1992  
         ___awmod@dividend 0075                    _spiInit 19EA                    _spiRead 1989  
                  _retorno 007A              conversor2@val 004D                    _sprintf 14F6  
                  clrloop0 1982     __end_of_Lcd_Write_Char 07FE       end_of_initialization 002F  
          ___lldiv@divisor 0020            ___lldiv@counter 002C                  _RCSTAbits 0018  
                  psplit$0 F0036                  Lcd_Port@a 0073             __tdiv_to_l_@f1 0020  
           __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0073                  _PORTCbits 0007  
                _PORTEbits 0009                ___fladd@grs 006C              ___xxtofl@sign 0024  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0023  
              ___flmul@grs 0039                ?_conversor2 0045                  _TXSTAbits 0098  
      __size_of__div_to_l_ 00BE                  _Lcd_Clear 19A8             _spiReceiveWait 197A  
           __end_of___flge 1E87             __end_of___fleq 1C11             __end_of___wmul 1AB2  
         _Lcd_Write_String 1AEE              __pidataCOMMON 07FE          pnum$text1_split_1 0036  
              _BAUDCTLbits 0187             __end_of_fround 126E        start_initialization 000F  
              __end_of_ISR 1A38        __end_of__tdiv_to_l_ 2000          __size_of_Lcd_Init 0047  
        __size_of_Lcd_Port 0006            ___llmod@divisor 002D            ___llmod@counter 0075  
   __end_of_spiReceiveWait 1981                 ?_Lcd_Clear 0070                   ??___flge 0073  
                 ??___fleq 0073                   ??___wmul 0077                  __Umul8_16 1A5E  
          Lcd_Write_Char@a 0075                   ??_fround 0049              sprintf@tmpval 00BB  
                ___fladd@a 005D                  ___fladd@b 0059        __size_of_conversor2 005C  
               fround@prec 0058                  ___flmul@a 002F                  ___flmul@b 002B  
              __pbssCOMMON 007A                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
   __size_of_Config_USARTT 0011          __size_of___xxtofl 00BC               _isdigit$1075 0073  
                 ?_Lcd_Cmd 0070                sprintf@flag 00B7                sprintf@eexp 00C3  
              sprintf@fval 00C5                sprintf@prec 00CA           ___lwdiv@dividend 0023  
          ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0020                   ?___fladd 0059  
                 ?___awdiv 0022                   ?___flneg 0073                   ?___awmod 0073  
                 ?___flmul 002B                   ?___flsub 00A0                   ?___fltol 0058  
                 ?___lldiv 0020                   ?___llmod 002D                  __npowers_ 1844  
               ?__Umul8_16 0073                   ?___lwdiv 0021                   ?___lwmod 0073  
                __pstrings 1800                __tdiv_to_l_ 1F43               ??__div_to_l_ 0073  
                 ?_isdigit 0070                   ?_recibir 0070                   ?_spiInit 0073  
                 ?_spiRead 0070           ___lwdiv@quotient 0027                   ?_sprintf 00A8  
           __size_of_scale 0363             __size_of_setup 0012       spiInit@sTransmitEdge 0075  
        interrupt_function 0004             ___wmul@product 0020                  clear_ram0 1981  
                 _PIE1bits 008C         spiInit@sDataSample 0073                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C         __end_of__div_to_l_ 093C              _Config_USARTT 19B5  
              ??_Lcd_Clear 0077                __stringbase 180F          ___wmul@multiplier 0073  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 1B7A                   _Lcd_Port 1974  
 __end_of_Lcd_Write_String 1B34               ??_conversor2 0049           __size_of_Lcd_Cmd 001A  
           ?_Config_USARTT 0070                ??__Umul8_16 0075           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 005B  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003C                _fround$1264 0054                _fround$1265 0050  
       __end_of__stringtab 1810                 sprintf@val 00BF         __end_of_conversor2 1061  
                 ___xxtofl 1E87           __size_of_isdigit 0012           __size_of_recibir 000B  
          ___lwdiv@divisor 0021            ___lwdiv@counter 0026                   __ptext10 087E  
                 __ptext11 1A87                   __ptext20 1989                   __ptext12 1C61  
                 __ptext21 197A                   __ptext13 1D12                   __ptext30 07E3  
                 __ptext22 19EA                   __ptext14 0802                   __ptext31 1A38  
                 __ptext23 19C6                   __ptext15 1C11                   __ptext32 1B7A  
                 __ptext24 1992                   __ptext16 126E                   __ptext33 19A8  
                 __ptext25 1005                   __ptext17 199D                   __ptext34 1A00  
                 __ptext26 1E87                   __ptext18 1DE3                   __ptext35 1974  
                 __ptext27 093C                   __ptext19 1BC1                   __ptext36 19B5  
                 __ptext28 1A5E                   __ptext37 1A1A                   __ptext29 1AEE  
         __size_of_spiInit 0016           __size_of_spiRead 0009                   __powers_ 1810  
         __size_of_sprintf F1BF              __size_of_main 012E                  pnum$text1 000F  
                 _recibido 00E1               spiInit@sType 0076          spiInit@sClockIdle 0074  
               _INTCONbits 000B                   isdigit@c 0074                   scale@scl 0057  
                 intlevel1 0000                  sprintf@ap 00B6           __tdiv_to_l_@exp1 002D  
         __tdiv_to_l_@cntr 002C                  sprintf@sp 00C9           __tdiv_to_l_@quot 0028  
         ___lwmod@dividend 0075           ___lldiv@dividend 0024           ??_spiReceiveWait 0073  
          ??_Config_USARTT 0073                  stringcode 180A         Lcd_Set_Cursor@temp 0022  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0073                   sprintf@c 00CC  
                 sprintf@f 00A8           ___lldiv@quotient 0028            ___lwmod@divisor 0073  
          ___lwmod@counter 0020                   stringdir 180A                   stringtab 1800  
            ___fladd@signs 0069               ___fladd@aexp 006A               ___fladd@bexp 006B  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
