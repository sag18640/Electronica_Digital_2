

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 00:46:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    58                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F887 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  0087                     	;# 
   134  0088                     	;# 
   135  0089                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  0105                     	;# 
   159  0107                     	;# 
   160  0108                     	;# 
   161  0109                     	;# 
   162  010C                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  0185                     	;# 
   168  0187                     	;# 
   169  0188                     	;# 
   170  0189                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008F                     	;# 
   218  0090                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  0105                     	;# 
   237  0107                     	;# 
   238  0108                     	;# 
   239  0109                     	;# 
   240  010C                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0185                     	;# 
   246  0187                     	;# 
   247  0188                     	;# 
   248  0189                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0088                     	;# 
   291  0089                     	;# 
   292  008C                     	;# 
   293  008D                     	;# 
   294  008E                     	;# 
   295  008F                     	;# 
   296  0090                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0094                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0097                     	;# 
   306  0098                     	;# 
   307  0099                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  0105                     	;# 
   315  0107                     	;# 
   316  0108                     	;# 
   317  0109                     	;# 
   318  010C                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  0185                     	;# 
   324  0187                     	;# 
   325  0188                     	;# 
   326  0189                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0008                     	;# 
   338  0009                     	;# 
   339  000A                     	;# 
   340  000B                     	;# 
   341  000C                     	;# 
   342  000D                     	;# 
   343  000E                     	;# 
   344  000E                     	;# 
   345  000F                     	;# 
   346  0010                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0013                     	;# 
   350  0014                     	;# 
   351  0015                     	;# 
   352  0015                     	;# 
   353  0016                     	;# 
   354  0017                     	;# 
   355  0018                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001B                     	;# 
   359  001B                     	;# 
   360  001C                     	;# 
   361  001D                     	;# 
   362  001E                     	;# 
   363  001F                     	;# 
   364  0081                     	;# 
   365  0085                     	;# 
   366  0086                     	;# 
   367  0087                     	;# 
   368  0088                     	;# 
   369  0089                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  008F                     	;# 
   374  0090                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009C                     	;# 
   389  009D                     	;# 
   390  009E                     	;# 
   391  009F                     	;# 
   392  0105                     	;# 
   393  0107                     	;# 
   394  0108                     	;# 
   395  0109                     	;# 
   396  010C                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  010E                     	;# 
   400  010F                     	;# 
   401  0185                     	;# 
   402  0187                     	;# 
   403  0188                     	;# 
   404  0189                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0000                     	;# 
   408  0001                     	;# 
   409  0002                     	;# 
   410  0003                     	;# 
   411  0004                     	;# 
   412  0005                     	;# 
   413  0006                     	;# 
   414  0007                     	;# 
   415  0008                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  0081                     	;# 
   443  0085                     	;# 
   444  0086                     	;# 
   445  0087                     	;# 
   446  0088                     	;# 
   447  0089                     	;# 
   448  008C                     	;# 
   449  008D                     	;# 
   450  008E                     	;# 
   451  008F                     	;# 
   452  0090                     	;# 
   453  0091                     	;# 
   454  0092                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0093                     	;# 
   458  0094                     	;# 
   459  0095                     	;# 
   460  0096                     	;# 
   461  0097                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009A                     	;# 
   465  009B                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  009F                     	;# 
   470  0105                     	;# 
   471  0107                     	;# 
   472  0108                     	;# 
   473  0109                     	;# 
   474  010C                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010E                     	;# 
   478  010F                     	;# 
   479  0185                     	;# 
   480  0187                     	;# 
   481  0188                     	;# 
   482  0189                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485                           
   486                           	psect	idataCOMMON
   487  0000'                    __pidataCOMMON:
   488                           
   489                           ;initializer for _turno
   490  0000' 3401               	retlw	1
   491                           
   492                           ;initializer for _flag
   493  0001' 3401               	retlw	1
   494                           
   495                           	psect	strings
   496  0000'                    __pstrings:
   497  0000'                    stringtab:
   498  0000'                    __stringtab:
   499                           
   500                           ;	String table - string pointers are 1 byte each
   501  0000' 1BFF               	btfsc	btemp+1,7
   502  0001' 2800'              	ljmp	stringcode
   503  0002' 1383               	bcf	3,7
   504  0003' 187F               	btfsc	btemp+1,0
   505  0004' 1783               	bsf	3,7
   506  0005' 0800               	movf	0,w
   507  0006' 0A84               	incf	4,f
   508  0007' 1903               	skipnz
   509  0008' 0AFF               	incf	btemp+1,f
   510  0009' 0008               	return
   511  000A'                    stringcode:
   512  000A'                    stringdir:
   513  000A' 3000'              	movlw	high stringdir
   514  000B' 008A               	movwf	10
   515  000C' 0804               	movf	4,w
   516  000D' 0A84               	incf	4,f
   517  000E' 0782               	addwf	2,f
   518  000F'                    __stringbase:
   519  000F' 3400               	retlw	0
   520  0010'                    __end_of__stringtab:
   521  0010'                    __powers_:
   522  0010' 3400               	retlw	0
   523  0011' 3400               	retlw	0
   524  0012' 3480               	retlw	128
   525  0013' 343F               	retlw	63
   526  0014' 3400               	retlw	0
   527  0015' 3400               	retlw	0
   528  0016' 3420               	retlw	32
   529  0017' 3441               	retlw	65
   530  0018' 3400               	retlw	0
   531  0019' 3400               	retlw	0
   532  001A' 34C8               	retlw	200
   533  001B' 3442               	retlw	66
   534  001C' 3400               	retlw	0
   535  001D' 3400               	retlw	0
   536  001E' 347A               	retlw	122
   537  001F' 3444               	retlw	68
   538  0020' 3400               	retlw	0
   539  0021' 3440               	retlw	64
   540  0022' 341C               	retlw	28
   541  0023' 3446               	retlw	70
   542  0024' 3400               	retlw	0
   543  0025' 3450               	retlw	80
   544  0026' 34C3               	retlw	195
   545  0027' 3447               	retlw	71
   546  0028' 3400               	retlw	0
   547  0029' 3424               	retlw	36
   548  002A' 3474               	retlw	116
   549  002B' 3449               	retlw	73
   550  002C' 3480               	retlw	128
   551  002D' 3496               	retlw	150
   552  002E' 3418               	retlw	24
   553  002F' 344B               	retlw	75
   554  0030' 3420               	retlw	32
   555  0031' 34BC               	retlw	188
   556  0032' 34BE               	retlw	190
   557  0033' 344C               	retlw	76
   558  0034' 3428               	retlw	40
   559  0035' 346B               	retlw	107
   560  0036' 346E               	retlw	110
   561  0037' 344E               	retlw	78
   562  0038' 34F9               	retlw	249
   563  0039' 3402               	retlw	2
   564  003A' 3415               	retlw	21
   565  003B' 3450               	retlw	80
   566  003C' 34EC               	retlw	236
   567  003D' 3478               	retlw	120
   568  003E' 34AD               	retlw	173
   569  003F' 3460               	retlw	96
   570  0040' 34CA               	retlw	202
   571  0041' 34F2               	retlw	242
   572  0042' 3449               	retlw	73
   573  0043' 3471               	retlw	113
   574  0044'                    __end_of__powers_:
   575  0044'                    __npowers_:
   576  0044' 3400               	retlw	0
   577  0045' 3400               	retlw	0
   578  0046' 3480               	retlw	128
   579  0047' 343F               	retlw	63
   580  0048' 34CD               	retlw	205
   581  0049' 34CC               	retlw	204
   582  004A' 34CC               	retlw	204
   583  004B' 343D               	retlw	61
   584  004C' 340A               	retlw	10
   585  004D' 34D7               	retlw	215
   586  004E' 3423               	retlw	35
   587  004F' 343C               	retlw	60
   588  0050' 346F               	retlw	111
   589  0051' 3412               	retlw	18
   590  0052' 3483               	retlw	131
   591  0053' 343A               	retlw	58
   592  0054' 3417               	retlw	23
   593  0055' 34B7               	retlw	183
   594  0056' 34D1               	retlw	209
   595  0057' 3438               	retlw	56
   596  0058' 34AC               	retlw	172
   597  0059' 34C5               	retlw	197
   598  005A' 3427               	retlw	39
   599  005B' 3437               	retlw	55
   600  005C' 34BD               	retlw	189
   601  005D' 3437               	retlw	55
   602  005E' 3486               	retlw	134
   603  005F' 3435               	retlw	53
   604  0060' 3495               	retlw	149
   605  0061' 34BF               	retlw	191
   606  0062' 34D6               	retlw	214
   607  0063' 3433               	retlw	51
   608  0064' 3477               	retlw	119
   609  0065' 34CC               	retlw	204
   610  0066' 342B               	retlw	43
   611  0067' 3432               	retlw	50
   612  0068' 345F               	retlw	95
   613  0069' 3470               	retlw	112
   614  006A' 3489               	retlw	137
   615  006B' 3430               	retlw	48
   616  006C' 34FF               	retlw	255
   617  006D' 34E6               	retlw	230
   618  006E' 34DB               	retlw	219
   619  006F' 342E               	retlw	46
   620  0070' 3408               	retlw	8
   621  0071' 34E5               	retlw	229
   622  0072' 343C               	retlw	60
   623  0073' 341E               	retlw	30
   624  0074' 3460               	retlw	96
   625  0075' 3442               	retlw	66
   626  0076' 34A2               	retlw	162
   627  0077' 340D               	retlw	13
   628  0078'                    __end_of__npowers_:
   629  0078'                    _dpowers:
   630  0078' 3401               	retlw	1
   631  0079' 3400               	retlw	0
   632  007A' 3400               	retlw	0
   633  007B' 3400               	retlw	0
   634  007C' 340A               	retlw	10
   635  007D' 3400               	retlw	0
   636  007E' 3400               	retlw	0
   637  007F' 3400               	retlw	0
   638  0080' 3464               	retlw	100
   639  0081' 3400               	retlw	0
   640  0082' 3400               	retlw	0
   641  0083' 3400               	retlw	0
   642  0084' 34E8               	retlw	232
   643  0085' 3403               	retlw	3
   644  0086' 3400               	retlw	0
   645  0087' 3400               	retlw	0
   646  0088' 3410               	retlw	16
   647  0089' 3427               	retlw	39
   648  008A' 3400               	retlw	0
   649  008B' 3400               	retlw	0
   650  008C' 34A0               	retlw	160
   651  008D' 3486               	retlw	134
   652  008E' 3401               	retlw	1
   653  008F' 3400               	retlw	0
   654  0090' 3440               	retlw	64
   655  0091' 3442               	retlw	66
   656  0092' 340F               	retlw	15
   657  0093' 3400               	retlw	0
   658  0094' 3480               	retlw	128
   659  0095' 3496               	retlw	150
   660  0096' 3498               	retlw	152
   661  0097' 3400               	retlw	0
   662  0098' 3400               	retlw	0
   663  0099' 34E1               	retlw	225
   664  009A' 34F5               	retlw	245
   665  009B' 3405               	retlw	5
   666  009C' 3400               	retlw	0
   667  009D' 34CA               	retlw	202
   668  009E' 349A               	retlw	154
   669  009F' 343B               	retlw	59
   670  00A0'                    __end_of_dpowers:
   671  0014                     _SSPCON	set	20
   672  0019                     _TXREG	set	25
   673  000B                     _INTCONbits	set	11
   674  0009                     _PORTEbits	set	9
   675  001A                     _RCREG	set	26
   676  0018                     _RCSTAbits	set	24
   677  000C                     _PIR1bits	set	12
   678  0006                     _PORTB	set	6
   679  0009                     _PORTE	set	9
   680  0008                     _PORTD	set	8
   681  0013                     _SSPBUF	set	19
   682  0007                     _PORTCbits	set	7
   683  0094                     _SSPSTATbits	set	148
   684  0094                     _SSPSTAT	set	148
   685  008C                     _PIE1bits	set	140
   686  0099                     _SPBRG	set	153
   687  0098                     _TXSTAbits	set	152
   688  0086                     _TRISB	set	134
   689  0089                     _TRISE	set	137
   690  0087                     _TRISC	set	135
   691  0088                     _TRISD	set	136
   692  043B                     _TRISC3	set	1083
   693  043D                     _TRISC5	set	1085
   694  04C1                     _TRMT	set	1217
   695  0187                     _BAUDCTLbits	set	391
   696  0188                     _ANSEL	set	392
   697  00A0'                    STR_1:
   698  00A0' 3453               	retlw	83	;'S'
   699  00A1' 3431               	retlw	49	;'1'
   700  00A2' 343A               	retlw	58	;':'
   701  00A3' 3420               	retlw	32	;' '
   702  00A4' 3420               	retlw	32	;' '
   703  00A5' 3420               	retlw	32	;' '
   704  00A6' 3453               	retlw	83	;'S'
   705  00A7' 3432               	retlw	50	;'2'
   706  00A8' 343A               	retlw	58	;':'
   707  00A9' 3420               	retlw	32	;' '
   708  00AA' 3420               	retlw	32	;' '
   709  00AB' 3420               	retlw	32	;' '
   710  00AC' 3420               	retlw	32	;' '
   711  00AD' 3453               	retlw	83	;'S'
   712  00AE' 3433               	retlw	51	;'3'
   713  00AF' 343A               	retlw	58	;':'
   714  00B0' 3400               	retlw	0
   715  00B1'                    STR_2:
   716  00B1' 3425               	retlw	37	;'%'
   717  00B2' 3433               	retlw	51	;'3'
   718  00B3' 342E               	retlw	46	;'.'
   719  00B4' 3432               	retlw	50	;'2'
   720  00B5' 3466               	retlw	102	;'f'
   721  00B6' 3443               	retlw	67	;'C'
   722  00B7' 3400               	retlw	0
   723  00B8'                    STR_3:
   724  00B8' 3425               	retlw	37	;'%'
   725  00B9' 3433               	retlw	51	;'3'
   726  00BA' 342E               	retlw	46	;'.'
   727  00BB' 3432               	retlw	50	;'2'
   728  00BC' 3466               	retlw	102	;'f'
   729  00BD' 3456               	retlw	86	;'V'
   730  00BE' 3400               	retlw	0
   731  00BF'                    STR_4:
   732  00BF' 3420               	retlw	32	;' '
   733  00C0' 3420               	retlw	32	;' '
   734  00C1' 3420               	retlw	32	;' '
   735  00C2' 3400               	retlw	0
   736  00C3'                    STR_5:
   737  00C3' 3425               	retlw	37	;'%'
   738  00C4' 3464               	retlw	100	;'d'
   739  00C5' 3400               	retlw	0
   740                           
   741                           	psect	cinit
   742  0000'                    start_initialization:	
   743                           ; #config settings
   744                           
   745  0000'                    __initialization:
   746                           
   747                           ; Initialize objects allocated to COMMON
   748  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	__pidataCOMMON	;fetch initializer
   749  0005' 0080'              	movwf	__pdataCOMMON& (0+127)
   750  0006' 120A' 118A' 2000' 120A' 118A' 	fcall	__pidataCOMMON+1	;fetch initializer
   751  000B' 0080'              	movwf	(__pdataCOMMON+1)& (0+127)
   752                           
   753                           ; Clear objects allocated to BANK3
   754  000C' 1783               	bsf	3,7	;select IRP bank2
   755  000D' 3000'              	movlw	low __pbssBANK3
   756  000E' 0084               	movwf	4
   757  000F' 3000'              	movlw	low (__pbssBANK3+50)
   758  0010' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   759                           
   760                           ; Clear objects allocated to BANK1
   761  0015' 1383               	bcf	3,7	;select IRP bank0
   762  0016' 3000'              	movlw	low __pbssBANK1
   763  0017' 0084               	movwf	4
   764  0018' 3000'              	movlw	low (__pbssBANK1+22)
   765  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   766                           
   767                           ; Clear objects allocated to BANK0
   768  001E' 0180'              	clrf	__pbssBANK0& (0+127)
   769                           
   770                           ; Clear objects allocated to COMMON
   771  001F' 0180'              	clrf	__pbssCOMMON& (0+127)
   772  0020'                    end_of_initialization:	
   773                           ;End of C runtime variable initialization code
   774                           
   775  0020'                    __end_of__initialization:
   776  0020' 0183               	clrf	3
   777  0021' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   778                           
   779                           	psect	bssCOMMON
   780  0000'                    __pbssCOMMON:
   781  0000'                    _retorno:
   782  0000'                    	ds	1
   783                           
   784                           	psect	dataCOMMON
   785  0000'                    __pdataCOMMON:
   786  0000'                    _turno:
   787  0000'                    	ds	1
   788  0001'                    _flag:
   789  0001'                    	ds	1
   790                           
   791                           	psect	bssBANK0
   792  0000'                    __pbssBANK0:
   793  0000'                    _valorC:
   794  0000'                    	ds	1
   795                           
   796                           	psect	bssBANK1
   797  0000'                    __pbssBANK1:
   798  0000'                    _p:
   799  0000'                    	ds	4
   800  0004'                    _x:
   801  0004'                    	ds	4
   802  0008'                    _vv:
   803  0008'                    	ds	4
   804  000C'                    _v:
   805  000C'                    	ds	4
   806  0010'                    _enviado:
   807  0010'                    	ds	1
   808  0011'                    _recibido:
   809  0011'                    	ds	1
   810  0012'                    _count:
   811  0012'                    	ds	1
   812  0013'                    _k:
   813  0013'                    	ds	1
   814  0014'                    _valorA:
   815  0014'                    	ds	1
   816  0015'                    _valorT:
   817  0015'                    	ds	1
   818                           
   819                           	psect	bssBANK3
   820  0000'                    __pbssBANK3:
   821  0000'                    _s:
   822  0000'                    	ds	50
   823                           
   824                           	psect	clrtext
   825  0000'                    clear_ram0:	
   826                           ;	Called with FSR containing the base address, and
   827                           ;	W with the last address+1
   828                           
   829  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   830  0001'                    clrloop0:
   831  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   832  0002' 0A84               	incf	4,f	;increment pointer
   833  0003' 0604               	xorwf	4,w	;XOR with final address
   834  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   835  0005' 3400               	retlw	0	;all done for this memory range, return
   836  0006' 0604               	xorwf	4,w	;XOR again to restore value
   837  0007' 2800'              	goto	clrloop0	;do the next byte
   838                           
   839                           	psect	cstackBANK1
   840  0000'                    __pcstackBANK1:
   841  0000'                    ?___flsub:
   842  0000'                    ___flsub@a:	
   843                           ; 4 bytes @ 0x0
   844                           
   845                           
   846                           ; 4 bytes @ 0x0
   847  0000'                    	ds	4
   848  0004'                    ___flsub@b:
   849                           
   850                           ; 4 bytes @ 0x4
   851  0004'                    	ds	4
   852  0008'                    ?_sprintf:
   853  0008'                    sprintf@f:	
   854                           ; 2 bytes @ 0x8
   855                           
   856                           
   857                           ; 1 bytes @ 0x8
   858  0008'                    	ds	5
   859  000D'                    ??_sprintf:
   860                           
   861                           ; 1 bytes @ 0xD
   862  000D'                    	ds	5
   863  0012'                    _sprintf$1273:
   864                           
   865                           ; 4 bytes @ 0x12
   866  0012'                    	ds	4
   867  0016'                    sprintf@ap:
   868                           
   869                           ; 1 bytes @ 0x16
   870  0016'                    	ds	1
   871  0017'                    sprintf@flag:
   872                           
   873                           ; 2 bytes @ 0x17
   874  0017'                    	ds	2
   875  0019'                    sprintf@width:
   876                           
   877                           ; 2 bytes @ 0x19
   878  0019'                    	ds	2
   879  001B'                    sprintf@tmpval:
   880                           
   881                           ; 4 bytes @ 0x1B
   882  001B'                    	ds	4
   883  001F'                    sprintf@val:
   884                           
   885                           ; 4 bytes @ 0x1F
   886  001F'                    	ds	4
   887  0023'                    sprintf@eexp:
   888                           
   889                           ; 2 bytes @ 0x23
   890  0023'                    	ds	2
   891  0025'                    sprintf@fval:
   892                           
   893                           ; 4 bytes @ 0x25
   894  0025'                    	ds	4
   895  0029'                    sprintf@sp:
   896                           
   897                           ; 1 bytes @ 0x29
   898  0029'                    	ds	1
   899  002A'                    sprintf@prec:
   900                           
   901                           ; 2 bytes @ 0x2A
   902  002A'                    	ds	2
   903  002C'                    sprintf@c:
   904                           
   905                           ; 1 bytes @ 0x2C
   906  002C'                    	ds	1
   907  002D'                    ??_main:
   908                           
   909                           ; 1 bytes @ 0x2D
   910  002D'                    	ds	3
   911                           
   912                           	psect	cstackCOMMON
   913  0000'                    __pcstackCOMMON:
   914  0000'                    ?_isdigit:
   915  0000'                    ?_setup:	
   916                           ; 1 bit 
   917                           
   918  0000'                    ?_Config_USARTT:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0000'                    ?_recibir:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0000'                    ?_Lcd_Init:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0000'                    ?_Lcd_Clear:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0000'                    ?_spiRead:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0000'                    ?_spiWrite:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0000'                    ?_main:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0000'                    ?_ISR:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0000'                    ??_ISR:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0000'                    ?_Lcd_Port:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0000'                    ?_Lcd_Cmd:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0000'                    ?_Lcd_Write_Char:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0000'                    ?_spiReceiveWait:	
   955                           ; 1 bytes @ 0x0
   956                           
   957                           
   958                           ; 1 bytes @ 0x0
   959  0000'                    	ds	3
   960  0003'                    ??_setup:
   961  0003'                    ?_spiInit:	
   962                           ; 1 bytes @ 0x3
   963                           
   964  0003'                    ??_Config_USARTT:	
   965                           ; 1 bytes @ 0x3
   966                           
   967  0003'                    ??_recibir:	
   968                           ; 1 bytes @ 0x3
   969                           
   970  0003'                    ??_spiRead:	
   971                           ; 1 bytes @ 0x3
   972                           
   973  0003'                    ??_spiWrite:	
   974                           ; 1 bytes @ 0x3
   975                           
   976  0003'                    ??_isdigit:	
   977                           ; 1 bytes @ 0x3
   978                           
   979  0003'                    ??__tdiv_to_l_:	
   980                           ; 1 bytes @ 0x3
   981                           
   982  0003'                    ??__div_to_l_:	
   983                           ; 1 bytes @ 0x3
   984                           
   985  0003'                    ??_Lcd_Port:	
   986                           ; 1 bytes @ 0x3
   987                           
   988  0003'                    ??_spiReceiveWait:	
   989                           ; 1 bytes @ 0x3
   990                           
   991  0003'                    ??___lldiv:	
   992                           ; 1 bytes @ 0x3
   993                           
   994  0003'                    ??___fleq:	
   995                           ; 1 bytes @ 0x3
   996                           
   997  0003'                    ??___flge:	
   998                           ; 1 bytes @ 0x3
   999                           
  1000  0003'                    ?__Umul8_16:	
  1001                           ; 1 bytes @ 0x3
  1002                           
  1003  0003'                    ?___wmul:	
  1004                           ; 2 bytes @ 0x3
  1005                           
  1006  0003'                    ?___awmod:	
  1007                           ; 2 bytes @ 0x3
  1008                           
  1009  0003'                    ?___lwmod:	
  1010                           ; 2 bytes @ 0x3
  1011                           
  1012  0003'                    ?___flneg:	
  1013                           ; 2 bytes @ 0x3
  1014                           
  1015  0003'                    ?___xxtofl:	
  1016                           ; 4 bytes @ 0x3
  1017                           
  1018  0003'                    Lcd_Port@a:	
  1019                           ; 4 bytes @ 0x3
  1020                           
  1021  0003'                    spiInit@sDataSample:	
  1022                           ; 1 bytes @ 0x3
  1023                           
  1024  0003'                    spiWrite@dat:	
  1025                           ; 1 bytes @ 0x3
  1026                           
  1027  0003'                    __Umul8_16@multiplicand:	
  1028                           ; 1 bytes @ 0x3
  1029                           
  1030  0003'                    _isdigit$1087:	
  1031                           ; 1 bytes @ 0x3
  1032                           
  1033  0003'                    ___wmul@multiplier:	
  1034                           ; 1 bytes @ 0x3
  1035                           
  1036  0003'                    ___awmod@divisor:	
  1037                           ; 2 bytes @ 0x3
  1038                           
  1039  0003'                    ___lwmod@divisor:	
  1040                           ; 2 bytes @ 0x3
  1041                           
  1042  0003'                    ___flneg@f1:	
  1043                           ; 2 bytes @ 0x3
  1044                           
  1045  0003'                    ___xxtofl@val:	
  1046                           ; 4 bytes @ 0x3
  1047                           
  1048                           
  1049                           ; 4 bytes @ 0x3
  1050  0003'                    	ds	1
  1051  0004'                    ??_Lcd_Cmd:
  1052  0004'                    ??_Lcd_Write_Char:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055  0004'                    ??___llmod:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058  0004'                    spiInit@sClockIdle:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061  0004'                    isdigit@c:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0x4
  1066  0004'                    	ds	1
  1067  0005'                    ??__Umul8_16:
  1068  0005'                    Lcd_Write_Char@a:	
  1069                           ; 1 bytes @ 0x5
  1070                           
  1071  0005'                    spiInit@sTransmitEdge:	
  1072                           ; 1 bytes @ 0x5
  1073                           
  1074  0005'                    ___llmod@counter:	
  1075                           ; 1 bytes @ 0x5
  1076                           
  1077  0005'                    ___wmul@multiplicand:	
  1078                           ; 1 bytes @ 0x5
  1079                           
  1080  0005'                    ___awmod@dividend:	
  1081                           ; 2 bytes @ 0x5
  1082                           
  1083  0005'                    ___lwmod@dividend:	
  1084                           ; 2 bytes @ 0x5
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x5
  1088  0005'                    	ds	1
  1089  0006'                    ??_spiInit:
  1090  0006'                    ?_Lcd_Write_String:	
  1091                           ; 1 bytes @ 0x6
  1092                           
  1093  0006'                    Lcd_Cmd@a:	
  1094                           ; 1 bytes @ 0x6
  1095                           
  1096  0006'                    spiInit@sType:	
  1097                           ; 1 bytes @ 0x6
  1098                           
  1099  0006'                    Lcd_Write_String@a:	
  1100                           ; 1 bytes @ 0x6
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x6
  1104  0006'                    	ds	1
  1105  0007'                    ??_Lcd_Clear:
  1106  0007'                    ?_Lcd_Set_Cursor:	
  1107                           ; 1 bytes @ 0x7
  1108                           
  1109  0007'                    ??___wmul:	
  1110                           ; 1 bytes @ 0x7
  1111                           
  1112  0007'                    ??___awmod:	
  1113                           ; 1 bytes @ 0x7
  1114                           
  1115  0007'                    ??___flneg:	
  1116                           ; 1 bytes @ 0x7
  1117                           
  1118  0007'                    ??___lwmod:	
  1119                           ; 1 bytes @ 0x7
  1120                           
  1121  0007'                    Lcd_Set_Cursor@b:	
  1122                           ; 1 bytes @ 0x7
  1123                           
  1124                           
  1125                           ; 1 bytes @ 0x7
  1126  0007'                    	ds	1
  1127  0008'                    ??___flsub:
  1128                           
  1129                           	psect	cstackBANK0
  1130  0000'                    __pcstackBANK0:	
  1131                           ; 1 bytes @ 0x8
  1132                           
  1133  0000'                    ?___fleq:
  1134  0000'                    ?___flge:	
  1135                           ; 1 bit 
  1136                           
  1137  0000'                    ??_Lcd_Init:	
  1138                           ; 1 bit 
  1139                           
  1140  0000'                    ??_Lcd_Set_Cursor:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0000'                    ??_Lcd_Write_String:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0000'                    ??___xxtofl:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0000'                    ?__tdiv_to_l_:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0000'                    ?__div_to_l_:	
  1153                           ; 4 bytes @ 0x0
  1154                           
  1155  0000'                    ?___lldiv:	
  1156                           ; 4 bytes @ 0x0
  1157                           
  1158  0000'                    ___awmod@counter:	
  1159                           ; 4 bytes @ 0x0
  1160                           
  1161  0000'                    ___lwmod@counter:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0000'                    ___wmul@product:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0000'                    __Umul8_16@product:	
  1168                           ; 2 bytes @ 0x0
  1169                           
  1170  0000'                    ___lldiv@divisor:	
  1171                           ; 2 bytes @ 0x0
  1172                           
  1173  0000'                    __div_to_l_@f1:	
  1174                           ; 4 bytes @ 0x0
  1175                           
  1176  0000'                    ___fleq@ff1:	
  1177                           ; 4 bytes @ 0x0
  1178                           
  1179  0000'                    ___flge@ff1:	
  1180                           ; 4 bytes @ 0x0
  1181                           
  1182  0000'                    __tdiv_to_l_@f1:	
  1183                           ; 4 bytes @ 0x0
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x0
  1187  0000'                    	ds	1
  1188  0001'                    ?___lwdiv:
  1189  0001'                    Lcd_Set_Cursor@a:	
  1190                           ; 2 bytes @ 0x1
  1191                           
  1192  0001'                    ___awmod@sign:	
  1193                           ; 1 bytes @ 0x1
  1194                           
  1195  0001'                    ___lwdiv@divisor:	
  1196                           ; 1 bytes @ 0x1
  1197                           
  1198                           
  1199                           ; 2 bytes @ 0x1
  1200  0001'                    	ds	1
  1201  0002'                    ?___awdiv:
  1202  0002'                    Lcd_Set_Cursor@temp:	
  1203                           ; 2 bytes @ 0x2
  1204                           
  1205  0002'                    ___awdiv@divisor:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208  0002'                    __Umul8_16@word_mpld:	
  1209                           ; 2 bytes @ 0x2
  1210                           
  1211                           
  1212                           ; 2 bytes @ 0x2
  1213  0002'                    	ds	1
  1214  0003'                    Lcd_Write_String@i:
  1215  0003'                    ___lwdiv@dividend:	
  1216                           ; 2 bytes @ 0x3
  1217                           
  1218                           
  1219                           ; 2 bytes @ 0x3
  1220  0003'                    	ds	1
  1221  0004'                    __Umul8_16@multiplier:
  1222  0004'                    ___xxtofl@sign:	
  1223                           ; 1 bytes @ 0x4
  1224                           
  1225  0004'                    ___awdiv@dividend:	
  1226                           ; 1 bytes @ 0x4
  1227                           
  1228  0004'                    ___lldiv@dividend:	
  1229                           ; 2 bytes @ 0x4
  1230                           
  1231  0004'                    __div_to_l_@f2:	
  1232                           ; 4 bytes @ 0x4
  1233                           
  1234  0004'                    ___fleq@ff2:	
  1235                           ; 4 bytes @ 0x4
  1236                           
  1237  0004'                    ___flge@ff2:	
  1238                           ; 4 bytes @ 0x4
  1239                           
  1240  0004'                    __tdiv_to_l_@f2:	
  1241                           ; 4 bytes @ 0x4
  1242                           
  1243                           
  1244                           ; 4 bytes @ 0x4
  1245  0004'                    	ds	1
  1246  0005'                    ??___lwdiv:
  1247  0005'                    ___xxtofl@exp:	
  1248                           ; 1 bytes @ 0x5
  1249                           
  1250                           
  1251                           ; 1 bytes @ 0x5
  1252  0005'                    	ds	1
  1253  0006'                    ??___awdiv:
  1254  0006'                    ___lwdiv@counter:	
  1255                           ; 1 bytes @ 0x6
  1256                           
  1257  0006'                    ___xxtofl@arg:	
  1258                           ; 1 bytes @ 0x6
  1259                           
  1260                           
  1261                           ; 4 bytes @ 0x6
  1262  0006'                    	ds	1
  1263  0007'                    ___awdiv@counter:
  1264  0007'                    ___lwdiv@quotient:	
  1265                           ; 1 bytes @ 0x7
  1266                           
  1267                           
  1268                           ; 2 bytes @ 0x7
  1269  0007'                    	ds	1
  1270  0008'                    ___awdiv@sign:
  1271  0008'                    ___lldiv@quotient:	
  1272                           ; 1 bytes @ 0x8
  1273                           
  1274  0008'                    __div_to_l_@quot:	
  1275                           ; 4 bytes @ 0x8
  1276                           
  1277  0008'                    __tdiv_to_l_@quot:	
  1278                           ; 4 bytes @ 0x8
  1279                           
  1280                           
  1281                           ; 4 bytes @ 0x8
  1282  0008'                    	ds	1
  1283  0009'                    ___awdiv@quotient:
  1284                           
  1285                           ; 2 bytes @ 0x9
  1286  0009'                    	ds	2
  1287  000B'                    ?___flmul:
  1288  000B'                    ___flmul@b:	
  1289                           ; 4 bytes @ 0xB
  1290                           
  1291                           
  1292                           ; 4 bytes @ 0xB
  1293  000B'                    	ds	1
  1294  000C'                    ___lldiv@counter:
  1295  000C'                    __div_to_l_@cntr:	
  1296                           ; 1 bytes @ 0xC
  1297                           
  1298  000C'                    __tdiv_to_l_@cntr:	
  1299                           ; 1 bytes @ 0xC
  1300                           
  1301                           
  1302                           ; 1 bytes @ 0xC
  1303  000C'                    	ds	1
  1304  000D'                    ?___llmod:
  1305  000D'                    __div_to_l_@exp1:	
  1306                           ; 4 bytes @ 0xD
  1307                           
  1308  000D'                    __tdiv_to_l_@exp1:	
  1309                           ; 1 bytes @ 0xD
  1310                           
  1311  000D'                    ___llmod@divisor:	
  1312                           ; 1 bytes @ 0xD
  1313                           
  1314                           
  1315                           ; 4 bytes @ 0xD
  1316  000D'                    	ds	2
  1317  000F'                    ___flmul@a:
  1318                           
  1319                           ; 4 bytes @ 0xF
  1320  000F'                    	ds	2
  1321  0011'                    ___llmod@dividend:
  1322                           
  1323                           ; 4 bytes @ 0x11
  1324  0011'                    	ds	2
  1325  0013'                    ??___flmul:
  1326                           
  1327                           ; 1 bytes @ 0x13
  1328  0013'                    	ds	5
  1329  0018'                    ___flmul@sign:
  1330                           
  1331                           ; 1 bytes @ 0x18
  1332  0018'                    	ds	1
  1333  0019'                    ___flmul@grs:
  1334                           
  1335                           ; 4 bytes @ 0x19
  1336  0019'                    	ds	4
  1337  001D'                    ___flmul@aexp:
  1338                           
  1339                           ; 1 bytes @ 0x1D
  1340  001D'                    	ds	1
  1341  001E'                    ___flmul@bexp:
  1342                           
  1343                           ; 1 bytes @ 0x1E
  1344  001E'                    	ds	1
  1345  001F'                    ___flmul@prod:
  1346                           
  1347                           ; 4 bytes @ 0x1F
  1348  001F'                    	ds	4
  1349  0023'                    ___flmul@temp:
  1350                           
  1351                           ; 2 bytes @ 0x23
  1352  0023'                    	ds	2
  1353  0025'                    ?_conversor2:
  1354  0025'                    ?_conversor:	
  1355                           ; 4 bytes @ 0x25
  1356                           
  1357  0025'                    ?_fround:	
  1358                           ; 4 bytes @ 0x25
  1359                           
  1360  0025'                    ?_scale:	
  1361                           ; 4 bytes @ 0x25
  1362                           
  1363                           
  1364                           ; 4 bytes @ 0x25
  1365  0025'                    	ds	4
  1366  0029'                    ??_conversor2:
  1367  0029'                    ??_conversor:	
  1368                           ; 1 bytes @ 0x29
  1369                           
  1370  0029'                    ??_fround:	
  1371                           ; 1 bytes @ 0x29
  1372                           
  1373  0029'                    ??_scale:	
  1374                           ; 1 bytes @ 0x29
  1375                           
  1376                           
  1377                           ; 1 bytes @ 0x29
  1378  0029'                    	ds	4
  1379  002D'                    conversor@val:
  1380  002D'                    conversor2@val:	
  1381                           ; 1 bytes @ 0x2D
  1382                           
  1383                           
  1384                           ; 1 bytes @ 0x2D
  1385  002D'                    	ds	3
  1386  0030'                    _fround$1271:
  1387                           
  1388                           ; 4 bytes @ 0x30
  1389  0030'                    	ds	3
  1390  0033'                    _scale$1272:
  1391                           
  1392                           ; 4 bytes @ 0x33
  1393  0033'                    	ds	1
  1394  0034'                    _fround$1270:
  1395                           
  1396                           ; 4 bytes @ 0x34
  1397  0034'                    	ds	3
  1398  0037'                    scale@scl:
  1399                           
  1400                           ; 1 bytes @ 0x37
  1401  0037'                    	ds	1
  1402  0038'                    ?___fltol:
  1403  0038'                    fround@prec:	
  1404                           ; 4 bytes @ 0x38
  1405                           
  1406  0038'                    ___fltol@f1:	
  1407                           ; 1 bytes @ 0x38
  1408                           
  1409                           
  1410                           ; 4 bytes @ 0x38
  1411  0038'                    	ds	1
  1412  0039'                    ?___fladd:
  1413  0039'                    ___fladd@b:	
  1414                           ; 4 bytes @ 0x39
  1415                           
  1416                           
  1417                           ; 4 bytes @ 0x39
  1418  0039'                    	ds	3
  1419  003C'                    ??___fltol:
  1420                           
  1421                           ; 1 bytes @ 0x3C
  1422  003C'                    	ds	1
  1423  003D'                    ___fladd@a:
  1424                           
  1425                           ; 4 bytes @ 0x3D
  1426  003D'                    	ds	4
  1427  0041'                    ??___fladd:
  1428  0041'                    ___fltol@sign1:	
  1429                           ; 1 bytes @ 0x41
  1430                           
  1431                           
  1432                           ; 1 bytes @ 0x41
  1433  0041'                    	ds	1
  1434  0042'                    ___fltol@exp1:
  1435                           
  1436                           ; 1 bytes @ 0x42
  1437  0042'                    	ds	7
  1438  0049'                    ___fladd@signs:
  1439                           
  1440                           ; 1 bytes @ 0x49
  1441  0049'                    	ds	1
  1442  004A'                    ___fladd@aexp:
  1443                           
  1444                           ; 1 bytes @ 0x4A
  1445  004A'                    	ds	1
  1446  004B'                    ___fladd@bexp:
  1447                           
  1448                           ; 1 bytes @ 0x4B
  1449  004B'                    	ds	1
  1450  004C'                    ___fladd@grs:
  1451                           
  1452                           ; 1 bytes @ 0x4C
  1453  004C'                    	ds	1
  1454                           
  1455                           	psect	maintext
  1456  0000'                    __pmaintext:	
  1457 ;;
  1458 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1459 ;;
  1460 ;; *************** function _main *****************
  1461 ;; Defined at:
  1462 ;;		line 69 in file "main.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : B00/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0
  1478 ;;      Temps:          0       0       3       0       0
  1479 ;;      Totals:         0       0       3       0       0
  1480 ;;Total ram usage:        3 bytes
  1481 ;; Hardware stack levels required when called:    5
  1482 ;; This function calls:
  1483 ;;		_Config_USARTT
  1484 ;;		_Lcd_Clear
  1485 ;;		_Lcd_Init
  1486 ;;		_Lcd_Set_Cursor
  1487 ;;		_Lcd_Write_String
  1488 ;;		_conversor
  1489 ;;		_conversor2
  1490 ;;		_recibir
  1491 ;;		_setup
  1492 ;;		_spiInit
  1493 ;;		_spiRead
  1494 ;;		_spiWrite
  1495 ;;		_sprintf
  1496 ;; This function is called by:
  1497 ;;		Startup code after reset
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _main
  1503  0000'                    _main:
  1504  0000'                    l4571:	
  1505                           ;incstack = 0
  1506                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1507                           
  1508                           
  1509                           ;main.c: 70:     setup();
  1510  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_setup
  1511                           
  1512                           ;main.c: 71:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1513  0005' 0183'              	clrf	spiInit@sDataSample
  1514  0006' 0184'              	clrf	spiInit@sClockIdle
  1515  0007' 0185'              	clrf	spiInit@sTransmitEdge
  1516  0008' 3020               	movlw	32
  1517  0009' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiInit
  1518                           
  1519                           ;main.c: 72:     Config_USARTT();
  1520  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Config_USARTT
  1521  0013'                    l4573:
  1522                           
  1523                           ;main.c: 73:     recibir();
  1524  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	_recibir
  1525  0018'                    l4575:
  1526                           
  1527                           ;main.c: 74:     Lcd_Init();
  1528  0018' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Init
  1529  001D'                    l4577:
  1530                           
  1531                           ;main.c: 75:     Lcd_Clear();
  1532  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
  1533  0022'                    l4579:
  1534                           
  1535                           ;main.c: 80:         Lcd_Set_Cursor(1, 1);
  1536  0022' 0187'              	clrf	Lcd_Set_Cursor@b
  1537  0023' 0A87'              	incf	Lcd_Set_Cursor@b,f
  1538  0024' 3001               	movlw	1
  1539  0025' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1540  002A'                    l4581:
  1541                           
  1542                           ;main.c: 81:         Lcd_Write_String("S1:   S2:    S3:");
  1543  002A' 3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1544  002B' 0086'              	movwf	Lcd_Write_String@a
  1545  002C' 3080               	movlw	128
  1546  002D' 0087'              	movwf	Lcd_Write_String@a+1
  1547  002E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1548  0033'                    l4583:
  1549                           
  1550                           ;main.c: 89:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1551  0033' 3003               	movlw	3
  1552  0034' 1683               	bsf	3,5	;RP0=1, select bank1
  1553  0035' 1303               	bcf	3,6	;RP1=0, select bank1
  1554  0036' 0081'              	movwf	(??_main^(0+128)+1)
  1555  0037' 3097               	movlw	151
  1556  0038' 0080'              	movwf	??_main^(0+128)
  1557  0039'                    u7617:
  1558  0039' 0B80'              	decfsz	??_main^(0+128),f
  1559  003A' 2800'              	goto	u7617
  1560  003B' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1561  003C' 2800'              	goto	u7617
  1562  003D'                    l4585:
  1563                           
  1564                           ;main.c: 90:         PORTCbits.RC0 = 0;
  1565  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  1566  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  1567  003F' 1007               	bcf	7,0	;volatile
  1568  0040'                    l4587:
  1569                           
  1570                           ;main.c: 91:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1571  0040' 3003               	movlw	3
  1572  0041' 1683               	bsf	3,5	;RP0=1, select bank1
  1573  0042' 1303               	bcf	3,6	;RP1=0, select bank1
  1574  0043' 0081'              	movwf	(??_main^(0+128)+1)
  1575  0044' 3097               	movlw	151
  1576  0045' 0080'              	movwf	??_main^(0+128)
  1577  0046'                    u7627:
  1578  0046' 0B80'              	decfsz	??_main^(0+128),f
  1579  0047' 2800'              	goto	u7627
  1580  0048' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1581  0049' 2800'              	goto	u7627
  1582  004A'                    l4589:
  1583                           
  1584                           ;main.c: 92:         SSPBUF = 0;
  1585  004A' 1283               	bcf	3,5	;RP0=0, select bank0
  1586  004B' 1303               	bcf	3,6	;RP1=0, select bank0
  1587  004C' 0193               	clrf	19	;volatile
  1588  004D'                    l4591:
  1589                           
  1590                           ;main.c: 93:         valorT = spiRead();
  1591  004D' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiRead
  1592  0052' 1683               	bsf	3,5	;RP0=1, select bank1
  1593  0053' 1303               	bcf	3,6	;RP1=0, select bank1
  1594  0054' 0080'              	movwf	??_main^(0+128)
  1595  0055' 0800'              	movf	??_main^(0+128),w
  1596  0056' 0080'              	movwf	_valorT^(0+128)
  1597  0057'                    l4593:
  1598                           
  1599                           ;main.c: 95:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1600  0057' 3003               	movlw	3
  1601  0058' 1683               	bsf	3,5	;RP0=1, select bank1
  1602  0059' 1303               	bcf	3,6	;RP1=0, select bank1
  1603  005A' 0081'              	movwf	(??_main^(0+128)+1)
  1604  005B' 3097               	movlw	151
  1605  005C' 0080'              	movwf	??_main^(0+128)
  1606  005D'                    u7637:
  1607  005D' 0B80'              	decfsz	??_main^(0+128),f
  1608  005E' 2800'              	goto	u7637
  1609  005F' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1610  0060' 2800'              	goto	u7637
  1611  0061'                    l4595:
  1612                           
  1613                           ;main.c: 96:         PORTCbits.RC0 = 1;
  1614  0061' 1283               	bcf	3,5	;RP0=0, select bank0
  1615  0062' 1303               	bcf	3,6	;RP1=0, select bank0
  1616  0063' 1407               	bsf	7,0	;volatile
  1617  0064'                    l4597:
  1618                           
  1619                           ;main.c: 98:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1620  0064' 3003               	movlw	3
  1621  0065' 1683               	bsf	3,5	;RP0=1, select bank1
  1622  0066' 1303               	bcf	3,6	;RP1=0, select bank1
  1623  0067' 0082'              	movwf	(??_main^(0+128)+2)
  1624  0068' 3008               	movlw	8
  1625  0069' 0081'              	movwf	(??_main^(0+128)+1)
  1626  006A' 3076               	movlw	118
  1627  006B' 0080'              	movwf	??_main^(0+128)
  1628  006C'                    u7647:
  1629  006C' 0B80'              	decfsz	??_main^(0+128),f
  1630  006D' 2800'              	goto	u7647
  1631  006E' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1632  006F' 2800'              	goto	u7647
  1633  0070' 0B82'              	decfsz	(??_main^(0+128)+2),f
  1634  0071' 2800'              	goto	u7647
  1635  0072' 0000               	nop
  1636  0073'                    l4599:
  1637                           
  1638                           ;main.c: 99:         Lcd_Set_Cursor(2, 11);
  1639  0073' 300B               	movlw	11
  1640  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  1641  0075' 1303               	bcf	3,6	;RP1=0, select bank1
  1642  0076' 0080'              	movwf	??_main^(0+128)
  1643  0077' 0800'              	movf	??_main^(0+128),w
  1644  0078' 0087'              	movwf	Lcd_Set_Cursor@b
  1645  0079' 3002               	movlw	2
  1646  007A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1647  007F'                    l4601:
  1648                           
  1649                           ;main.c: 100:         p = conversor2(valorT);
  1650  007F' 1683               	bsf	3,5	;RP0=1, select bank1
  1651  0080' 1303               	bcf	3,6	;RP1=0, select bank1
  1652  0081' 0800'              	movf	_valorT^(0+128),w
  1653  0082' 120A' 118A' 2000' 120A' 118A' 	fcall	_conversor2
  1654  0087' 1283               	bcf	3,5	;RP0=0, select bank0
  1655  0088' 1303               	bcf	3,6	;RP1=0, select bank0
  1656  0089' 0828'              	movf	?_conversor2+3,w
  1657  008A' 1683               	bsf	3,5	;RP0=1, select bank1
  1658  008B' 1303               	bcf	3,6	;RP1=0, select bank1
  1659  008C' 0080'              	movwf	(_p+3)^(0+128)
  1660  008D' 1283               	bcf	3,5	;RP0=0, select bank0
  1661  008E' 1303               	bcf	3,6	;RP1=0, select bank0
  1662  008F' 0827'              	movf	?_conversor2+2,w
  1663  0090' 1683               	bsf	3,5	;RP0=1, select bank1
  1664  0091' 1303               	bcf	3,6	;RP1=0, select bank1
  1665  0092' 0080'              	movwf	(_p+2)^(0+128)
  1666  0093' 1283               	bcf	3,5	;RP0=0, select bank0
  1667  0094' 1303               	bcf	3,6	;RP1=0, select bank0
  1668  0095' 0826'              	movf	?_conversor2+1,w
  1669  0096' 1683               	bsf	3,5	;RP0=1, select bank1
  1670  0097' 1303               	bcf	3,6	;RP1=0, select bank1
  1671  0098' 0080'              	movwf	(_p+1)^(0+128)
  1672  0099' 1283               	bcf	3,5	;RP0=0, select bank0
  1673  009A' 1303               	bcf	3,6	;RP1=0, select bank0
  1674  009B' 0825'              	movf	?_conversor2,w
  1675  009C' 1683               	bsf	3,5	;RP0=1, select bank1
  1676  009D' 1303               	bcf	3,6	;RP1=0, select bank1
  1677  009E' 0080'              	movwf	_p^(0+128)
  1678  009F'                    l4603:
  1679                           
  1680                           ;main.c: 101:         sprintf(s, "%3.2fC", p);
  1681  009F' 30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1682  00A0' 0080'              	movwf	??_main^(0+128)
  1683  00A1' 0800'              	movf	??_main^(0+128),w
  1684  00A2' 0080'              	movwf	sprintf@f^(0+128)
  1685  00A3' 0800'              	movf	(_p+3)^(0+128),w
  1686  00A4' 0081'              	movwf	((?_sprintf+3)^(0+128)+1)
  1687  00A5' 0800'              	movf	(_p+2)^(0+128),w
  1688  00A6' 0081'              	movwf	((?_sprintf+2)^(0+128)+1)
  1689  00A7' 0800'              	movf	(_p+1)^(0+128),w
  1690  00A8' 0081'              	movwf	((?_sprintf+1)^(0+128)+1)
  1691  00A9' 0800'              	movf	_p^(0+128),w
  1692  00AA' 0081'              	movwf	(?_sprintf^(0+128)+1)
  1693  00AB' 3000'              	movlw	(low (_s| (0+256)))& (0+255)
  1694  00AC' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1695  00B1'                    l4605:
  1696                           
  1697                           ;main.c: 102:         Lcd_Write_String(s);
  1698  00B1' 3000'              	movlw	(low (_s| (0+256)))& (0+255)
  1699  00B2' 0086'              	movwf	Lcd_Write_String@a
  1700  00B3' 3001               	movlw	1
  1701  00B4' 0087'              	movwf	Lcd_Write_String@a+1
  1702  00B5' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1703  00BA'                    l4607:
  1704                           
  1705                           ;main.c: 105:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1706  00BA' 3003               	movlw	3
  1707  00BB' 1683               	bsf	3,5	;RP0=1, select bank1
  1708  00BC' 1303               	bcf	3,6	;RP1=0, select bank1
  1709  00BD' 0082'              	movwf	(??_main^(0+128)+2)
  1710  00BE' 3008               	movlw	8
  1711  00BF' 0081'              	movwf	(??_main^(0+128)+1)
  1712  00C0' 3076               	movlw	118
  1713  00C1' 0080'              	movwf	??_main^(0+128)
  1714  00C2'                    u7657:
  1715  00C2' 0B80'              	decfsz	??_main^(0+128),f
  1716  00C3' 2800'              	goto	u7657
  1717  00C4' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1718  00C5' 2800'              	goto	u7657
  1719  00C6' 0B82'              	decfsz	(??_main^(0+128)+2),f
  1720  00C7' 2800'              	goto	u7657
  1721  00C8' 0000               	nop
  1722  00C9'                    l4609:
  1723                           
  1724                           ;main.c: 106:         PORTCbits.RC1 = 0;
  1725  00C9' 1283               	bcf	3,5	;RP0=0, select bank0
  1726  00CA' 1303               	bcf	3,6	;RP1=0, select bank0
  1727  00CB' 1087               	bcf	7,1	;volatile
  1728  00CC'                    l4611:
  1729                           
  1730                           ;main.c: 107:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1731  00CC' 3003               	movlw	3
  1732  00CD' 1683               	bsf	3,5	;RP0=1, select bank1
  1733  00CE' 1303               	bcf	3,6	;RP1=0, select bank1
  1734  00CF' 0081'              	movwf	(??_main^(0+128)+1)
  1735  00D0' 3097               	movlw	151
  1736  00D1' 0080'              	movwf	??_main^(0+128)
  1737  00D2'                    u7667:
  1738  00D2' 0B80'              	decfsz	??_main^(0+128),f
  1739  00D3' 2800'              	goto	u7667
  1740  00D4' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1741  00D5' 2800'              	goto	u7667
  1742  00D6'                    l4613:
  1743                           
  1744                           ;main.c: 108:         SSPBUF = 1;
  1745  00D6' 3001               	movlw	1
  1746  00D7' 1283               	bcf	3,5	;RP0=0, select bank0
  1747  00D8' 1303               	bcf	3,6	;RP1=0, select bank0
  1748  00D9' 0093               	movwf	19	;volatile
  1749  00DA'                    l4615:
  1750                           
  1751                           ;main.c: 109:         valorA = spiRead();
  1752  00DA' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiRead
  1753  00DF' 1683               	bsf	3,5	;RP0=1, select bank1
  1754  00E0' 1303               	bcf	3,6	;RP1=0, select bank1
  1755  00E1' 0080'              	movwf	??_main^(0+128)
  1756  00E2' 0800'              	movf	??_main^(0+128),w
  1757  00E3' 0080'              	movwf	_valorA^(0+128)
  1758  00E4'                    l4617:
  1759                           
  1760                           ;main.c: 110:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1761  00E4' 3003               	movlw	3
  1762  00E5' 1683               	bsf	3,5	;RP0=1, select bank1
  1763  00E6' 1303               	bcf	3,6	;RP1=0, select bank1
  1764  00E7' 0081'              	movwf	(??_main^(0+128)+1)
  1765  00E8' 3097               	movlw	151
  1766  00E9' 0080'              	movwf	??_main^(0+128)
  1767  00EA'                    u7677:
  1768  00EA' 0B80'              	decfsz	??_main^(0+128),f
  1769  00EB' 2800'              	goto	u7677
  1770  00EC' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1771  00ED' 2800'              	goto	u7677
  1772  00EE'                    l4619:
  1773                           
  1774                           ;main.c: 111:         PORTCbits.RC1 = 1;
  1775  00EE' 1283               	bcf	3,5	;RP0=0, select bank0
  1776  00EF' 1303               	bcf	3,6	;RP1=0, select bank0
  1777  00F0' 1487               	bsf	7,1	;volatile
  1778  00F1'                    l4621:
  1779                           
  1780                           ;main.c: 112:         Lcd_Set_Cursor(2, 1);
  1781  00F1' 0187'              	clrf	Lcd_Set_Cursor@b
  1782  00F2' 0A87'              	incf	Lcd_Set_Cursor@b,f
  1783  00F3' 3002               	movlw	2
  1784  00F4' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1785  00F9'                    l4623:
  1786                           
  1787                           ;main.c: 113:         v = conversor(valorA);
  1788  00F9' 1683               	bsf	3,5	;RP0=1, select bank1
  1789  00FA' 1303               	bcf	3,6	;RP1=0, select bank1
  1790  00FB' 0800'              	movf	_valorA^(0+128),w
  1791  00FC' 120A' 118A' 2000' 120A' 118A' 	fcall	_conversor
  1792  0101' 1283               	bcf	3,5	;RP0=0, select bank0
  1793  0102' 1303               	bcf	3,6	;RP1=0, select bank0
  1794  0103' 0828'              	movf	?_conversor+3,w
  1795  0104' 1683               	bsf	3,5	;RP0=1, select bank1
  1796  0105' 1303               	bcf	3,6	;RP1=0, select bank1
  1797  0106' 0080'              	movwf	(_v+3)^(0+128)
  1798  0107' 1283               	bcf	3,5	;RP0=0, select bank0
  1799  0108' 1303               	bcf	3,6	;RP1=0, select bank0
  1800  0109' 0827'              	movf	?_conversor+2,w
  1801  010A' 1683               	bsf	3,5	;RP0=1, select bank1
  1802  010B' 1303               	bcf	3,6	;RP1=0, select bank1
  1803  010C' 0080'              	movwf	(_v+2)^(0+128)
  1804  010D' 1283               	bcf	3,5	;RP0=0, select bank0
  1805  010E' 1303               	bcf	3,6	;RP1=0, select bank0
  1806  010F' 0826'              	movf	?_conversor+1,w
  1807  0110' 1683               	bsf	3,5	;RP0=1, select bank1
  1808  0111' 1303               	bcf	3,6	;RP1=0, select bank1
  1809  0112' 0080'              	movwf	(_v+1)^(0+128)
  1810  0113' 1283               	bcf	3,5	;RP0=0, select bank0
  1811  0114' 1303               	bcf	3,6	;RP1=0, select bank0
  1812  0115' 0825'              	movf	?_conversor,w
  1813  0116' 1683               	bsf	3,5	;RP0=1, select bank1
  1814  0117' 1303               	bcf	3,6	;RP1=0, select bank1
  1815  0118' 0080'              	movwf	_v^(0+128)
  1816  0119'                    l4625:
  1817                           
  1818                           ;main.c: 114:         sprintf(s, "%3.2fV", v);
  1819  0119' 30A9               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1820  011A' 0080'              	movwf	??_main^(0+128)
  1821  011B' 0800'              	movf	??_main^(0+128),w
  1822  011C' 0080'              	movwf	sprintf@f^(0+128)
  1823  011D' 0800'              	movf	(_v+3)^(0+128),w
  1824  011E' 0081'              	movwf	((?_sprintf+3)^(0+128)+1)
  1825  011F' 0800'              	movf	(_v+2)^(0+128),w
  1826  0120' 0081'              	movwf	((?_sprintf+2)^(0+128)+1)
  1827  0121' 0800'              	movf	(_v+1)^(0+128),w
  1828  0122' 0081'              	movwf	((?_sprintf+1)^(0+128)+1)
  1829  0123' 0800'              	movf	_v^(0+128),w
  1830  0124' 0081'              	movwf	(?_sprintf^(0+128)+1)
  1831  0125' 3000'              	movlw	(low (_s| (0+256)))& (0+255)
  1832  0126' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1833  012B'                    l4627:
  1834                           
  1835                           ;main.c: 115:         Lcd_Write_String(s);
  1836  012B' 3000'              	movlw	(low (_s| (0+256)))& (0+255)
  1837  012C' 0086'              	movwf	Lcd_Write_String@a
  1838  012D' 3001               	movlw	1
  1839  012E' 0087'              	movwf	Lcd_Write_String@a+1
  1840  012F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1841  0134'                    l4629:
  1842                           
  1843                           ;main.c: 116:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1844  0134' 3002               	movlw	2
  1845  0135' 1683               	bsf	3,5	;RP0=1, select bank1
  1846  0136' 1303               	bcf	3,6	;RP1=0, select bank1
  1847  0137' 0082'              	movwf	(??_main^(0+128)+2)
  1848  0138' 3004               	movlw	4
  1849  0139' 0081'              	movwf	(??_main^(0+128)+1)
  1850  013A' 30B9               	movlw	185
  1851  013B' 0080'              	movwf	??_main^(0+128)
  1852  013C'                    u7687:
  1853  013C' 0B80'              	decfsz	??_main^(0+128),f
  1854  013D' 2800'              	goto	u7687
  1855  013E' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1856  013F' 2800'              	goto	u7687
  1857  0140' 0B82'              	decfsz	(??_main^(0+128)+2),f
  1858  0141' 2800'              	goto	u7687
  1859  0142' 2800'              	nop2
  1860  0143'                    l4631:
  1861                           
  1862                           ;main.c: 119:         if (valorC >= 0 && valorC < 10) {
  1863  0143' 300A               	movlw	10
  1864  0144' 1283               	bcf	3,5	;RP0=0, select bank0
  1865  0145' 1303               	bcf	3,6	;RP1=0, select bank0
  1866  0146' 0200'              	subwf	_valorC,w
  1867  0147' 1803               	skipnc
  1868  0148' 2800'              	goto	u7601
  1869  0149' 2800'              	goto	u7600
  1870  014A'                    u7601:
  1871  014A' 2800'              	goto	l4637
  1872  014B'                    u7600:
  1873  014B'                    l4633:
  1874                           
  1875                           ;main.c: 121:             Lcd_Set_Cursor(2, 8);
  1876  014B' 3008               	movlw	8
  1877  014C' 1683               	bsf	3,5	;RP0=1, select bank1
  1878  014D' 1303               	bcf	3,6	;RP1=0, select bank1
  1879  014E' 0080'              	movwf	??_main^(0+128)
  1880  014F' 0800'              	movf	??_main^(0+128),w
  1881  0150' 0087'              	movwf	Lcd_Set_Cursor@b
  1882  0151' 3002               	movlw	2
  1883  0152' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1884  0157'                    l4635:
  1885                           
  1886                           ;main.c: 122:             Lcd_Write_String("   ");
  1887  0157' 30B0               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1888  0158' 0086'              	movwf	Lcd_Write_String@a
  1889  0159' 3080               	movlw	128
  1890  015A' 0087'              	movwf	Lcd_Write_String@a+1
  1891  015B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  1892  0160'                    l4637:
  1893                           
  1894                           ;main.c: 124:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1895  0160' 3003               	movlw	3
  1896  0161' 1683               	bsf	3,5	;RP0=1, select bank1
  1897  0162' 1303               	bcf	3,6	;RP1=0, select bank1
  1898  0163' 0082'              	movwf	(??_main^(0+128)+2)
  1899  0164' 3008               	movlw	8
  1900  0165' 0081'              	movwf	(??_main^(0+128)+1)
  1901  0166' 3076               	movlw	118
  1902  0167' 0080'              	movwf	??_main^(0+128)
  1903  0168'                    u7697:
  1904  0168' 0B80'              	decfsz	??_main^(0+128),f
  1905  0169' 2800'              	goto	u7697
  1906  016A' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1907  016B' 2800'              	goto	u7697
  1908  016C' 0B82'              	decfsz	(??_main^(0+128)+2),f
  1909  016D' 2800'              	goto	u7697
  1910  016E' 0000               	nop
  1911  016F'                    l4639:
  1912                           
  1913                           ;main.c: 125:         PORTCbits.RC2 = 0;
  1914  016F' 1283               	bcf	3,5	;RP0=0, select bank0
  1915  0170' 1303               	bcf	3,6	;RP1=0, select bank0
  1916  0171' 1107               	bcf	7,2	;volatile
  1917  0172'                    l4641:
  1918                           
  1919                           ;main.c: 126:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1920  0172' 3003               	movlw	3
  1921  0173' 1683               	bsf	3,5	;RP0=1, select bank1
  1922  0174' 1303               	bcf	3,6	;RP1=0, select bank1
  1923  0175' 0081'              	movwf	(??_main^(0+128)+1)
  1924  0176' 3097               	movlw	151
  1925  0177' 0080'              	movwf	??_main^(0+128)
  1926  0178'                    u7707:
  1927  0178' 0B80'              	decfsz	??_main^(0+128),f
  1928  0179' 2800'              	goto	u7707
  1929  017A' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1930  017B' 2800'              	goto	u7707
  1931  017C'                    l4643:
  1932                           
  1933                           ;main.c: 127:         spiWrite(valorC);
  1934  017C' 1283               	bcf	3,5	;RP0=0, select bank0
  1935  017D' 1303               	bcf	3,6	;RP1=0, select bank0
  1936  017E' 0800'              	movf	_valorC,w
  1937  017F' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiWrite
  1938  0184'                    l4645:
  1939                           
  1940                           ;main.c: 128:         valorC = spiRead();
  1941  0184' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiRead
  1942  0189' 1683               	bsf	3,5	;RP0=1, select bank1
  1943  018A' 1303               	bcf	3,6	;RP1=0, select bank1
  1944  018B' 0080'              	movwf	??_main^(0+128)
  1945  018C' 0800'              	movf	??_main^(0+128),w
  1946  018D' 1283               	bcf	3,5	;RP0=0, select bank0
  1947  018E' 1303               	bcf	3,6	;RP1=0, select bank0
  1948  018F' 0080'              	movwf	_valorC
  1949  0190'                    l4647:
  1950                           
  1951                           ;main.c: 129:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1952  0190' 3003               	movlw	3
  1953  0191' 1683               	bsf	3,5	;RP0=1, select bank1
  1954  0192' 1303               	bcf	3,6	;RP1=0, select bank1
  1955  0193' 0081'              	movwf	(??_main^(0+128)+1)
  1956  0194' 3097               	movlw	151
  1957  0195' 0080'              	movwf	??_main^(0+128)
  1958  0196'                    u7717:
  1959  0196' 0B80'              	decfsz	??_main^(0+128),f
  1960  0197' 2800'              	goto	u7717
  1961  0198' 0B81'              	decfsz	(??_main^(0+128)+1),f
  1962  0199' 2800'              	goto	u7717
  1963  019A'                    l4649:
  1964                           
  1965                           ;main.c: 130:         PORTCbits.RC2 = 1;
  1966  019A' 1283               	bcf	3,5	;RP0=0, select bank0
  1967  019B' 1303               	bcf	3,6	;RP1=0, select bank0
  1968  019C' 1507               	bsf	7,2	;volatile
  1969  019D'                    l4651:
  1970                           
  1971                           ;main.c: 132:         Lcd_Set_Cursor(2, 7);
  1972  019D' 3007               	movlw	7
  1973  019E' 1683               	bsf	3,5	;RP0=1, select bank1
  1974  019F' 1303               	bcf	3,6	;RP1=0, select bank1
  1975  01A0' 0080'              	movwf	??_main^(0+128)
  1976  01A1' 0800'              	movf	??_main^(0+128),w
  1977  01A2' 0087'              	movwf	Lcd_Set_Cursor@b
  1978  01A3' 3002               	movlw	2
  1979  01A4' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
  1980  01A9'                    l4653:
  1981                           
  1982                           ;main.c: 133:         sprintf(s, "%d", valorC);
  1983  01A9' 30B4               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1984  01AA' 1683               	bsf	3,5	;RP0=1, select bank1
  1985  01AB' 1303               	bcf	3,6	;RP1=0, select bank1
  1986  01AC' 0080'              	movwf	??_main^(0+128)
  1987  01AD' 0800'              	movf	??_main^(0+128),w
  1988  01AE' 0080'              	movwf	sprintf@f^(0+128)
  1989  01AF' 1283               	bcf	3,5	;RP0=0, select bank0
  1990  01B0' 1303               	bcf	3,6	;RP1=0, select bank0
  1991  01B1' 0800'              	movf	_valorC,w
  1992  01B2' 1683               	bsf	3,5	;RP0=1, select bank1
  1993  01B3' 1303               	bcf	3,6	;RP1=0, select bank1
  1994  01B4' 0080'              	movwf	(??_main+1)^(0+128)
  1995  01B5' 0181'              	clrf	((??_main+1)^(0+128)+1)
  1996  01B6' 0800'              	movf	(??_main+1)^(0+128),w
  1997  01B7' 0081'              	movwf	(?_sprintf^(0+128)+1)
  1998  01B8' 0800'              	movf	(??_main+2)^(0+128),w
  1999  01B9' 0081'              	movwf	((?_sprintf+1)^(0+128)+1)
  2000  01BA' 3000'              	movlw	(low (_s| (0+256)))& (0+255)
  2001  01BB' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  2002  01C0'                    l4655:
  2003                           
  2004                           ;main.c: 134:         Lcd_Write_String(s);
  2005  01C0' 3000'              	movlw	(low (_s| (0+256)))& (0+255)
  2006  01C1' 0086'              	movwf	Lcd_Write_String@a
  2007  01C2' 3001               	movlw	1
  2008  01C3' 0087'              	movwf	Lcd_Write_String@a+1
  2009  01C4' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
  2010  01C9'                    l4657:
  2011                           
  2012                           ;main.c: 135:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2013  01C9' 3002               	movlw	2
  2014  01CA' 1683               	bsf	3,5	;RP0=1, select bank1
  2015  01CB' 1303               	bcf	3,6	;RP1=0, select bank1
  2016  01CC' 0082'              	movwf	(??_main^(0+128)+2)
  2017  01CD' 3004               	movlw	4
  2018  01CE' 0081'              	movwf	(??_main^(0+128)+1)
  2019  01CF' 30B9               	movlw	185
  2020  01D0' 0080'              	movwf	??_main^(0+128)
  2021  01D1'                    u7727:
  2022  01D1' 0B80'              	decfsz	??_main^(0+128),f
  2023  01D2' 2800'              	goto	u7727
  2024  01D3' 0B81'              	decfsz	(??_main^(0+128)+1),f
  2025  01D4' 2800'              	goto	u7727
  2026  01D5' 0B82'              	decfsz	(??_main^(0+128)+2),f
  2027  01D6' 2800'              	goto	u7727
  2028  01D7' 2800'              	nop2
  2029  01D8' 2800'              	goto	l4579
  2030  01D9' 120A' 118A' 2800'  	ljmp	start
  2031  01DC'                    __end_of_main:
  2032                           
  2033                           	psect	text1
  2034  0000'                    __ptext1:	
  2035 ;; *************** function _sprintf *****************
  2036 ;; Defined at:
  2037 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  sp              1    wreg     PTR unsigned char 
  2040 ;;		 -> s(50), 
  2041 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  2042 ;;		 -> STR_5(3), STR_3(7), STR_2(7), 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  2045 ;;		 -> s(50), 
  2046 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  2047 ;;  val             4   31[BANK1 ] unsigned long 
  2048 ;;  tmpval          4   27[BANK1 ] struct .
  2049 ;;  prec            2   42[BANK1 ] int 
  2050 ;;  eexp            2   35[BANK1 ] int 
  2051 ;;  width           2   25[BANK1 ] int 
  2052 ;;  flag            2   23[BANK1 ] unsigned short 
  2053 ;;  cp              2    0        PTR const unsigned char 
  2054 ;;  len             2    0        unsigned int 
  2055 ;;  c               1   44[BANK1 ] unsigned char 
  2056 ;;  ap              1   22[BANK1 ] PTR void [1]
  2057 ;;		 -> ?_sprintf(2), 
  2058 ;;  d               1    0        unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2    8[BANK1 ] int 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         0       0       5       0       0
  2069 ;;      Locals:         0       0      27       0       0
  2070 ;;      Temps:          0       0       5       0       0
  2071 ;;      Totals:         0       0      37       0       0
  2072 ;;Total ram usage:       37 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    4
  2075 ;; This function calls:
  2076 ;;		___awdiv
  2077 ;;		___fladd
  2078 ;;		___fleq
  2079 ;;		___flge
  2080 ;;		___flmul
  2081 ;;		___flneg
  2082 ;;		___flsub
  2083 ;;		___fltol
  2084 ;;		___lldiv
  2085 ;;		___llmod
  2086 ;;		___wmul
  2087 ;;		___xxtofl
  2088 ;;		__div_to_l_
  2089 ;;		__tdiv_to_l_
  2090 ;;		_fround
  2091 ;;		_isdigit
  2092 ;;		_scale
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _sprintf
  2100  0000'                    _sprintf:
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2104                           ;sprintf@sp stored from wreg
  2105  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2106  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2107  0002' 0080'              	movwf	sprintf@sp^(0+128)
  2108  0003'                    l4271:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2111  0003' 3000'              	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2112  0004' 0080'              	movwf	??_sprintf^(0+128)
  2113  0005' 0800'              	movf	??_sprintf^(0+128),w
  2114  0006' 0080'              	movwf	sprintf@ap^(0+128)
  2115  0007'                    L1:
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2118  0007' 120A' 118A' 2800'  	goto	l4553
  2119  000A'                    l4273:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2122  000A' 3025               	movlw	37
  2123  000B' 0600'              	xorwf	sprintf@c^(0+128),w
  2124  000C' 1903               	btfsc	3,2
  2125  000D' 2800'              	goto	u7071
  2126  000E' 2800'              	goto	u7070
  2127  000F'                    u7071:
  2128  000F' 2800'              	goto	l4279
  2129  0010'                    u7070:
  2130  0010'                    l4275:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2133  0010' 0800'              	movf	sprintf@c^(0+128),w
  2134  0011' 0080'              	movwf	??_sprintf^(0+128)
  2135  0012' 0800'              	movf	sprintf@sp^(0+128),w
  2136  0013' 0084               	movwf	4
  2137  0014' 0800'              	movf	??_sprintf^(0+128),w
  2138  0015' 1783               	bsf	3,7	;select IRP bank2
  2139  0016' 0080               	movwf	0
  2140  0017'                    l4277:
  2141  0017' 3001               	movlw	1
  2142  0018' 0080'              	movwf	??_sprintf^(0+128)
  2143  0019' 0800'              	movf	??_sprintf^(0+128),w
  2144  001A' 0780'              	addwf	sprintf@sp^(0+128),f
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2147  001B' 2800'              	goto	L1
  2148  001C'                    l4279:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2151  001C' 0180'              	clrf	sprintf@width^(0+128)
  2152  001D' 0180'              	clrf	(sprintf@width+1)^(0+128)
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2155  001E' 0180'              	clrf	sprintf@flag^(0+128)
  2156  001F' 0180'              	clrf	(sprintf@flag+1)^(0+128)
  2157  0020'                    l4281:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2160  0020' 0800'              	movf	sprintf@f^(0+128),w
  2161  0021' 0084               	movwf	4
  2162  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2163  0027' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2164  002C' 1C03               	btfss	3,0
  2165  002D' 2800'              	goto	u7081
  2166  002E' 2800'              	goto	u7080
  2167  002F'                    u7081:
  2168  002F' 2800'              	goto	l4293
  2169  0030'                    u7080:
  2170  0030'                    l4283:
  2171                           
  2172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2173  0030' 1683               	bsf	3,5	;RP0=1, select bank1
  2174  0031' 1303               	bcf	3,6	;RP1=0, select bank1
  2175  0032' 0180'              	clrf	sprintf@width^(0+128)
  2176  0033' 0180'              	clrf	(sprintf@width+1)^(0+128)
  2177  0034'                    l4285:
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2180  0034' 300A               	movlw	10
  2181  0035' 0083'              	movwf	___wmul@multiplier
  2182  0036' 3000               	movlw	0
  2183  0037' 0084'              	movwf	___wmul@multiplier+1
  2184  0038' 1683               	bsf	3,5	;RP0=1, select bank1
  2185  0039' 1303               	bcf	3,6	;RP1=0, select bank1
  2186  003A' 0800'              	movf	(sprintf@width+1)^(0+128),w
  2187  003B' 0086'              	movwf	___wmul@multiplicand+1
  2188  003C' 0800'              	movf	sprintf@width^(0+128),w
  2189  003D' 0085'              	movwf	___wmul@multiplicand
  2190  003E' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2191  0043' 0804'              	movf	?___wmul+1,w
  2192  0044' 1683               	bsf	3,5	;RP0=1, select bank1
  2193  0045' 1303               	bcf	3,6	;RP1=0, select bank1
  2194  0046' 0080'              	movwf	(sprintf@width+1)^(0+128)
  2195  0047' 0803'              	movf	?___wmul,w
  2196  0048' 0080'              	movwf	sprintf@width^(0+128)
  2197  0049'                    l4287:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2200  0049' 0800'              	movf	sprintf@f^(0+128),w
  2201  004A' 0084               	movwf	4
  2202  004B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2203  0050' 3ED0               	addlw	208
  2204  0051' 0080'              	movwf	??_sprintf^(0+128)
  2205  0052' 30FF               	movlw	255
  2206  0053' 1803               	skipnc
  2207  0054' 3000               	movlw	0
  2208  0055' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2209  0056' 0800'              	movf	??_sprintf^(0+128),w
  2210  0057' 0780'              	addwf	sprintf@width^(0+128),f
  2211  0058' 1803               	skipnc
  2212  0059' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  2213  005A' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2214  005B' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  2215  005C'                    l4289:
  2216  005C' 3001               	movlw	1
  2217  005D' 0080'              	movwf	??_sprintf^(0+128)
  2218  005E' 0800'              	movf	??_sprintf^(0+128),w
  2219  005F' 0780'              	addwf	sprintf@f^(0+128),f
  2220  0060'                    l4291:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2223  0060' 0800'              	movf	sprintf@f^(0+128),w
  2224  0061' 0084               	movwf	4
  2225  0062' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2226  0067' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2227  006C' 1803               	btfsc	3,0
  2228  006D' 2800'              	goto	u7091
  2229  006E' 2800'              	goto	u7090
  2230  006F'                    u7091:
  2231  006F' 2800'              	goto	l4285
  2232  0070'                    u7090:
  2233  0070'                    l4293:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2236  0070' 1683               	bsf	3,5	;RP0=1, select bank1
  2237  0071' 1303               	bcf	3,6	;RP1=0, select bank1
  2238  0072' 0800'              	movf	sprintf@f^(0+128),w
  2239  0073' 0084               	movwf	4
  2240  0074' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2241  0079' 3A2E               	xorlw	46
  2242  007A' 1D03               	skipz
  2243  007B' 2800'              	goto	u7101
  2244  007C' 2800'              	goto	u7100
  2245  007D'                    u7101:
  2246  007D' 2800'              	goto	l4309
  2247  007E'                    u7100:
  2248  007E'                    l4295:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2251  007E' 1701'              	bsf	(sprintf@flag^(0+128)+1),6
  2252  007F'                    l4297:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2255  007F' 3001               	movlw	1
  2256  0080' 0080'              	movwf	??_sprintf^(0+128)
  2257  0081' 0800'              	movf	??_sprintf^(0+128),w
  2258  0082' 0780'              	addwf	sprintf@f^(0+128),f
  2259  0083'                    l4299:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2262  0083' 0180'              	clrf	sprintf@prec^(0+128)
  2263  0084' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2266  0085' 2800'              	goto	l4307
  2267  0086'                    l4301:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2270  0086' 300A               	movlw	10
  2271  0087' 0083'              	movwf	___wmul@multiplier
  2272  0088' 3000               	movlw	0
  2273  0089' 0084'              	movwf	___wmul@multiplier+1
  2274  008A' 1683               	bsf	3,5	;RP0=1, select bank1
  2275  008B' 1303               	bcf	3,6	;RP1=0, select bank1
  2276  008C' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  2277  008D' 0086'              	movwf	___wmul@multiplicand+1
  2278  008E' 0800'              	movf	sprintf@prec^(0+128),w
  2279  008F' 0085'              	movwf	___wmul@multiplicand
  2280  0090' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2281  0095' 0804'              	movf	?___wmul+1,w
  2282  0096' 1683               	bsf	3,5	;RP0=1, select bank1
  2283  0097' 1303               	bcf	3,6	;RP1=0, select bank1
  2284  0098' 0080'              	movwf	(sprintf@prec+1)^(0+128)
  2285  0099' 0803'              	movf	?___wmul,w
  2286  009A' 0080'              	movwf	sprintf@prec^(0+128)
  2287  009B'                    l4303:
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2290  009B' 0800'              	movf	sprintf@f^(0+128),w
  2291  009C' 0084               	movwf	4
  2292  009D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2293  00A2' 3ED0               	addlw	208
  2294  00A3' 0080'              	movwf	??_sprintf^(0+128)
  2295  00A4' 30FF               	movlw	255
  2296  00A5' 1803               	skipnc
  2297  00A6' 3000               	movlw	0
  2298  00A7' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2299  00A8' 0800'              	movf	??_sprintf^(0+128),w
  2300  00A9' 0780'              	addwf	sprintf@prec^(0+128),f
  2301  00AA' 1803               	skipnc
  2302  00AB' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
  2303  00AC' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2304  00AD' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
  2305  00AE'                    l4305:
  2306  00AE' 3001               	movlw	1
  2307  00AF' 0080'              	movwf	??_sprintf^(0+128)
  2308  00B0' 0800'              	movf	??_sprintf^(0+128),w
  2309  00B1' 0780'              	addwf	sprintf@f^(0+128),f
  2310  00B2'                    l4307:
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2313  00B2' 0800'              	movf	sprintf@f^(0+128),w
  2314  00B3' 0084               	movwf	4
  2315  00B4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2316  00B9' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2317  00BE' 1803               	btfsc	3,0
  2318  00BF' 2800'              	goto	u7111
  2319  00C0' 2800'              	goto	u7110
  2320  00C1'                    u7111:
  2321  00C1' 2800'              	goto	l4301
  2322  00C2'                    u7110:
  2323  00C2' 2800'              	goto	l4315
  2324  00C3'                    l4309:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2327  00C3' 0180'              	clrf	sprintf@prec^(0+128)
  2328  00C4' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  2329  00C5'                    l4311:
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2332  00C5' 1601'              	bsf	(sprintf@flag^(0+128)+1),4
  2333  00C6' 2800'              	goto	l4315
  2334  00C7'                    l348:	
  2335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2336                           
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2339  00C7' 1501'              	bsf	(sprintf@flag^(0+128)+1),2
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2342  00C8' 2800'              	goto	l4317
  2343  00C9'                    l4315:
  2344  00C9' 3001               	movlw	1
  2345  00CA' 1683               	bsf	3,5	;RP0=1, select bank1
  2346  00CB' 1303               	bcf	3,6	;RP1=0, select bank1
  2347  00CC' 0780'              	addwf	sprintf@f^(0+128),f
  2348  00CD' 30FF               	movlw	-1
  2349  00CE' 0700'              	addwf	sprintf@f^(0+128),w
  2350  00CF' 0084               	movwf	4
  2351  00D0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2352  00D5' 0080'              	movwf	sprintf@c^(0+128)
  2353  00D6' 0080'              	movwf	??_sprintf^(0+128)
  2354  00D7' 0181'              	clrf	(??_sprintf^(0+128)+1)
  2355                           
  2356                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2357                           ; Switch size 1, requested type "simple"
  2358                           ; Number of cases is 1, Range of values is 0 to 0
  2359                           ; switch strategies available:
  2360                           ; Name         Instructions Cycles
  2361                           ; simple_byte            4     3 (average)
  2362                           ; direct_byte           11     8 (fixed)
  2363                           ; jumptable            260     6 (fixed)
  2364                           ;	Chosen strategy is simple_byte
  2365  00D8' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2366  00D9' 3A00               	xorlw	0	; case 0
  2367  00DA' 1903               	skipnz
  2368  00DB' 2800'              	goto	l4689
  2369  00DC' 2800'              	goto	L1
  2370  00DD'                    l4689:
  2371                           
  2372                           ; Switch size 1, requested type "simple"
  2373                           ; Number of cases is 4, Range of values is 0 to 105
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte           13     7 (average)
  2377                           ; jumptable            260     6 (fixed)
  2378                           ;	Chosen strategy is simple_byte
  2379  00DD' 0800'              	movf	??_sprintf^(0+128),w
  2380  00DE' 3A00               	xorlw	0	; case 0
  2381  00DF' 1903               	skipnz
  2382  00E0' 2800'              	goto	L3
  2383  00E1' 3A64               	xorlw	100	; case 100
  2384  00E2' 1903               	skipnz
  2385  00E3' 2800'              	goto	l4317
  2386  00E4' 3A02               	xorlw	2	; case 102
  2387  00E5' 1903               	skipnz
  2388  00E6' 2800'              	goto	l348
  2389  00E7' 3A0F               	xorlw	15	; case 105
  2390  00E8' 1903               	skipnz
  2391  00E9' 2800'              	goto	l4317
  2392  00EA' 2800'              	goto	L1
  2393  00EB'                    l4317:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2396  00EB' 3000               	movlw	0
  2397  00EC' 0500'              	andwf	sprintf@flag^(0+128),w
  2398  00ED' 0080'              	movwf	??_sprintf^(0+128)
  2399  00EE' 3007               	movlw	7
  2400  00EF' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  2401  00F0' 0080'              	movwf	(??_sprintf+1)^(0+128)
  2402  00F1' 0800'              	movf	??_sprintf^(0+128),w
  2403  00F2' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  2404  00F3' 1903               	btfsc	3,2
  2405  00F4' 2800'              	goto	u7121
  2406  00F5' 2800'              	goto	u7120
  2407  00F6'                    u7121:
  2408  00F6' 120A' 118A' 2800'  	goto	l4475
  2409  00F9'                    u7120:
  2410  00F9'                    l4319:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2413  00F9' 1E00'              	btfss	(sprintf@flag+1)^(0+128),4
  2414  00FA' 2800'              	goto	u7131
  2415  00FB' 2800'              	goto	u7130
  2416  00FC'                    u7131:
  2417  00FC' 2800'              	goto	l4323
  2418  00FD'                    u7130:
  2419  00FD'                    l4321:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2422  00FD' 3006               	movlw	6
  2423  00FE' 0080'              	movwf	sprintf@prec^(0+128)
  2424  00FF' 3000               	movlw	0
  2425  0100' 0081'              	movwf	(sprintf@prec^(0+128)+1)
  2426  0101'                    l4323:
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2429  0101' 0800'              	movf	sprintf@ap^(0+128),w
  2430  0102' 0084               	movwf	4
  2431  0103' 1383               	bcf	3,7	;select IRP bank0
  2432  0104' 0800               	movf	0,w
  2433  0105' 0080'              	movwf	sprintf@fval^(0+128)
  2434  0106' 0A84               	incf	4,f
  2435  0107' 0800               	movf	0,w
  2436  0108' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2437  0109' 0A84               	incf	4,f
  2438  010A' 0800               	movf	0,w
  2439  010B' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2440  010C' 0A84               	incf	4,f
  2441  010D' 0800               	movf	0,w
  2442  010E' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2443  010F'                    l4325:
  2444  010F' 3004               	movlw	4
  2445  0110' 0080'              	movwf	??_sprintf^(0+128)
  2446  0111' 0800'              	movf	??_sprintf^(0+128),w
  2447  0112' 0780'              	addwf	sprintf@ap^(0+128),f
  2448  0113'                    l4327:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2451  0113' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2452  0114' 1283               	bcf	3,5	;RP0=0, select bank0
  2453  0115' 1303               	bcf	3,6	;RP1=0, select bank0
  2454  0116' 0083'              	movwf	___flge@ff1+3
  2455  0117' 1683               	bsf	3,5	;RP0=1, select bank1
  2456  0118' 1303               	bcf	3,6	;RP1=0, select bank1
  2457  0119' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2458  011A' 1283               	bcf	3,5	;RP0=0, select bank0
  2459  011B' 1303               	bcf	3,6	;RP1=0, select bank0
  2460  011C' 0082'              	movwf	___flge@ff1+2
  2461  011D' 1683               	bsf	3,5	;RP0=1, select bank1
  2462  011E' 1303               	bcf	3,6	;RP1=0, select bank1
  2463  011F' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2464  0120' 1283               	bcf	3,5	;RP0=0, select bank0
  2465  0121' 1303               	bcf	3,6	;RP1=0, select bank0
  2466  0122' 0081'              	movwf	___flge@ff1+1
  2467  0123' 1683               	bsf	3,5	;RP0=1, select bank1
  2468  0124' 1303               	bcf	3,6	;RP1=0, select bank1
  2469  0125' 0800'              	movf	sprintf@fval^(0+128),w
  2470  0126' 1283               	bcf	3,5	;RP0=0, select bank0
  2471  0127' 1303               	bcf	3,6	;RP1=0, select bank0
  2472  0128' 0080'              	movwf	___flge@ff1
  2473  0129' 3000               	movlw	0
  2474  012A' 0087'              	movwf	___flge@ff2+3
  2475  012B' 3000               	movlw	0
  2476  012C' 0086'              	movwf	___flge@ff2+2
  2477  012D' 3000               	movlw	0
  2478  012E' 0085'              	movwf	___flge@ff2+1
  2479  012F' 3000               	movlw	0
  2480  0130' 0084'              	movwf	___flge@ff2
  2481  0131' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2482  0136' 1803               	btfsc	3,0
  2483  0137' 2800'              	goto	u7141
  2484  0138' 2800'              	goto	u7140
  2485  0139'                    u7141:
  2486  0139' 2800'              	goto	l4333
  2487  013A'                    u7140:
  2488  013A'                    l4329:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2491  013A' 1683               	bsf	3,5	;RP0=1, select bank1
  2492  013B' 1303               	bcf	3,6	;RP1=0, select bank1
  2493  013C' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2494  013D' 0086'              	movwf	___flneg@f1+3
  2495  013E' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2496  013F' 0085'              	movwf	___flneg@f1+2
  2497  0140' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2498  0141' 0084'              	movwf	___flneg@f1+1
  2499  0142' 0800'              	movf	sprintf@fval^(0+128),w
  2500  0143' 0083'              	movwf	___flneg@f1
  2501  0144' 120A' 118A' 2000' 120A' 118A' 	fcall	___flneg
  2502  0149' 0806'              	movf	?___flneg+3,w
  2503  014A' 1683               	bsf	3,5	;RP0=1, select bank1
  2504  014B' 1303               	bcf	3,6	;RP1=0, select bank1
  2505  014C' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2506  014D' 0805'              	movf	?___flneg+2,w
  2507  014E' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2508  014F' 0804'              	movf	?___flneg+1,w
  2509  0150' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2510  0151' 0803'              	movf	?___flneg,w
  2511  0152' 0080'              	movwf	sprintf@fval^(0+128)
  2512  0153'                    l4331:
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2515  0153' 3003               	movlw	3
  2516  0154' 0480'              	iorwf	sprintf@flag^(0+128),f
  2517  0155' 3000               	movlw	0
  2518  0156' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
  2519  0157'                    l4333:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2522  0157' 1683               	bsf	3,5	;RP0=1, select bank1
  2523  0158' 1303               	bcf	3,6	;RP1=0, select bank1
  2524  0159' 0180'              	clrf	sprintf@eexp^(0+128)
  2525  015A' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
  2526  015B'                    l4335:
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2529  015B' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2530  015C' 1283               	bcf	3,5	;RP0=0, select bank0
  2531  015D' 1303               	bcf	3,6	;RP1=0, select bank0
  2532  015E' 0083'              	movwf	___fleq@ff1+3
  2533  015F' 1683               	bsf	3,5	;RP0=1, select bank1
  2534  0160' 1303               	bcf	3,6	;RP1=0, select bank1
  2535  0161' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2536  0162' 1283               	bcf	3,5	;RP0=0, select bank0
  2537  0163' 1303               	bcf	3,6	;RP1=0, select bank0
  2538  0164' 0082'              	movwf	___fleq@ff1+2
  2539  0165' 1683               	bsf	3,5	;RP0=1, select bank1
  2540  0166' 1303               	bcf	3,6	;RP1=0, select bank1
  2541  0167' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2542  0168' 1283               	bcf	3,5	;RP0=0, select bank0
  2543  0169' 1303               	bcf	3,6	;RP1=0, select bank0
  2544  016A' 0081'              	movwf	___fleq@ff1+1
  2545  016B' 1683               	bsf	3,5	;RP0=1, select bank1
  2546  016C' 1303               	bcf	3,6	;RP1=0, select bank1
  2547  016D' 0800'              	movf	sprintf@fval^(0+128),w
  2548  016E' 1283               	bcf	3,5	;RP0=0, select bank0
  2549  016F' 1303               	bcf	3,6	;RP1=0, select bank0
  2550  0170' 0080'              	movwf	___fleq@ff1
  2551  0171' 3000               	movlw	0
  2552  0172' 0087'              	movwf	___fleq@ff2+3
  2553  0173' 3000               	movlw	0
  2554  0174' 0086'              	movwf	___fleq@ff2+2
  2555  0175' 3000               	movlw	0
  2556  0176' 0085'              	movwf	___fleq@ff2+1
  2557  0177' 3000               	movlw	0
  2558  0178' 0084'              	movwf	___fleq@ff2
  2559  0179' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  2560  017E' 1803               	btfsc	3,0
  2561  017F' 2800'              	goto	u7151
  2562  0180' 2800'              	goto	u7150
  2563  0181'                    u7151:
  2564  0181' 2800'              	goto	l4361
  2565  0182'                    u7150:
  2566  0182'                    l4337:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2569  0182' 1003               	clrc
  2570  0183' 1683               	bsf	3,5	;RP0=1, select bank1
  2571  0184' 1303               	bcf	3,6	;RP1=0, select bank1
  2572  0185' 0D00'              	rlf	(sprintf@fval+2)^(0+128),w
  2573  0186' 0D00'              	rlf	(sprintf@fval+3)^(0+128),w
  2574  0187' 3E82               	addlw	130
  2575  0188' 0080'              	movwf	sprintf@eexp^(0+128)
  2576  0189' 30FF               	movlw	255
  2577  018A' 1803               	skipnc
  2578  018B' 3000               	movlw	0
  2579  018C' 0081'              	movwf	(sprintf@eexp^(0+128)+1)
  2580  018D'                    l4339:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2583  018D' 30FF               	movlw	255
  2584  018E' 0780'              	addwf	sprintf@eexp^(0+128),f
  2585  018F' 1803               	skipnc
  2586  0190' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2587  0191' 30FF               	movlw	255
  2588  0192' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2589  0193'                    l4341:
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2592  0193' 3003               	movlw	3
  2593  0194' 0083'              	movwf	___wmul@multiplier
  2594  0195' 3000               	movlw	0
  2595  0196' 0084'              	movwf	___wmul@multiplier+1
  2596  0197' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2597  0198' 0086'              	movwf	___wmul@multiplicand+1
  2598  0199' 0800'              	movf	sprintf@eexp^(0+128),w
  2599  019A' 0085'              	movwf	___wmul@multiplicand
  2600  019B' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2601  01A0' 0804'              	movf	?___wmul+1,w
  2602  01A1' 1683               	bsf	3,5	;RP0=1, select bank1
  2603  01A2' 1303               	bcf	3,6	;RP1=0, select bank1
  2604  01A3' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2605  01A4' 0803'              	movf	?___wmul,w
  2606  01A5' 0080'              	movwf	sprintf@eexp^(0+128)
  2607  01A6'                    l4343:
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2610  01A6' 300A               	movlw	10
  2611  01A7' 1283               	bcf	3,5	;RP0=0, select bank0
  2612  01A8' 1303               	bcf	3,6	;RP1=0, select bank0
  2613  01A9' 0082'              	movwf	___awdiv@divisor
  2614  01AA' 3000               	movlw	0
  2615  01AB' 0083'              	movwf	___awdiv@divisor+1
  2616  01AC' 1683               	bsf	3,5	;RP0=1, select bank1
  2617  01AD' 1303               	bcf	3,6	;RP1=0, select bank1
  2618  01AE' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2619  01AF' 1283               	bcf	3,5	;RP0=0, select bank0
  2620  01B0' 1303               	bcf	3,6	;RP1=0, select bank0
  2621  01B1' 0085'              	movwf	___awdiv@dividend+1
  2622  01B2' 1683               	bsf	3,5	;RP0=1, select bank1
  2623  01B3' 1303               	bcf	3,6	;RP1=0, select bank1
  2624  01B4' 0800'              	movf	sprintf@eexp^(0+128),w
  2625  01B5' 1283               	bcf	3,5	;RP0=0, select bank0
  2626  01B6' 1303               	bcf	3,6	;RP1=0, select bank0
  2627  01B7' 0084'              	movwf	___awdiv@dividend
  2628  01B8' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2629  01BD' 1283               	bcf	3,5	;RP0=0, select bank0
  2630  01BE' 1303               	bcf	3,6	;RP1=0, select bank0
  2631  01BF' 0803'              	movf	?___awdiv+1,w
  2632  01C0' 1683               	bsf	3,5	;RP0=1, select bank1
  2633  01C1' 1303               	bcf	3,6	;RP1=0, select bank1
  2634  01C2' 0080'              	movwf	(sprintf@eexp+1)^(0+128)
  2635  01C3' 1283               	bcf	3,5	;RP0=0, select bank0
  2636  01C4' 1303               	bcf	3,6	;RP1=0, select bank0
  2637  01C5' 0802'              	movf	?___awdiv,w
  2638  01C6' 1683               	bsf	3,5	;RP0=1, select bank1
  2639  01C7' 1303               	bcf	3,6	;RP1=0, select bank1
  2640  01C8' 0080'              	movwf	sprintf@eexp^(0+128)
  2641  01C9'                    l4345:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2644  01C9' 1F80'              	btfss	(sprintf@eexp+1)^(0+128),7
  2645  01CA' 2800'              	goto	u7161
  2646  01CB' 2800'              	goto	u7160
  2647  01CC'                    u7161:
  2648  01CC' 2800'              	goto	l4349
  2649  01CD'                    u7160:
  2650  01CD'                    l4347:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2653  01CD' 30FF               	movlw	255
  2654  01CE' 0780'              	addwf	sprintf@eexp^(0+128),f
  2655  01CF' 1803               	skipnc
  2656  01D0' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2657  01D1' 30FF               	movlw	255
  2658  01D2' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2659  01D3'                    l4349:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2662  01D3' 0300'              	decf	sprintf@eexp^(0+128),w
  2663  01D4' 3AFF               	xorlw	255
  2664  01D5' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  2665  01DA' 1283               	bcf	3,5	;RP0=0, select bank0
  2666  01DB' 1303               	bcf	3,6	;RP1=0, select bank0
  2667  01DC' 0828'              	movf	?_scale+3,w
  2668  01DD' 1683               	bsf	3,5	;RP0=1, select bank1
  2669  01DE' 1303               	bcf	3,6	;RP1=0, select bank1
  2670  01DF' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2671  01E0' 1283               	bcf	3,5	;RP0=0, select bank0
  2672  01E1' 1303               	bcf	3,6	;RP1=0, select bank0
  2673  01E2' 0827'              	movf	?_scale+2,w
  2674  01E3' 1683               	bsf	3,5	;RP0=1, select bank1
  2675  01E4' 1303               	bcf	3,6	;RP1=0, select bank1
  2676  01E5' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2677  01E6' 1283               	bcf	3,5	;RP0=0, select bank0
  2678  01E7' 1303               	bcf	3,6	;RP1=0, select bank0
  2679  01E8' 0826'              	movf	?_scale+1,w
  2680  01E9' 1683               	bsf	3,5	;RP0=1, select bank1
  2681  01EA' 1303               	bcf	3,6	;RP1=0, select bank1
  2682  01EB' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2683  01EC' 1283               	bcf	3,5	;RP0=0, select bank0
  2684  01ED' 1303               	bcf	3,6	;RP1=0, select bank0
  2685  01EE' 0825'              	movf	?_scale,w
  2686  01EF' 1683               	bsf	3,5	;RP0=1, select bank1
  2687  01F0' 1303               	bcf	3,6	;RP1=0, select bank1
  2688  01F1' 0080'              	movwf	sprintf@tmpval^(0+128)
  2689  01F2'                    l4351:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2692  01F2' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2693  01F3' 1283               	bcf	3,5	;RP0=0, select bank0
  2694  01F4' 1303               	bcf	3,6	;RP1=0, select bank0
  2695  01F5' 008E'              	movwf	___flmul@b+3
  2696  01F6' 1683               	bsf	3,5	;RP0=1, select bank1
  2697  01F7' 1303               	bcf	3,6	;RP1=0, select bank1
  2698  01F8' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2699  01F9' 1283               	bcf	3,5	;RP0=0, select bank0
  2700  01FA' 1303               	bcf	3,6	;RP1=0, select bank0
  2701  01FB' 008D'              	movwf	___flmul@b+2
  2702  01FC' 1683               	bsf	3,5	;RP0=1, select bank1
  2703  01FD' 1303               	bcf	3,6	;RP1=0, select bank1
  2704  01FE' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2705  01FF' 1283               	bcf	3,5	;RP0=0, select bank0
  2706  0200' 1303               	bcf	3,6	;RP1=0, select bank0
  2707  0201' 008C'              	movwf	___flmul@b+1
  2708  0202' 1683               	bsf	3,5	;RP0=1, select bank1
  2709  0203' 1303               	bcf	3,6	;RP1=0, select bank1
  2710  0204' 0800'              	movf	sprintf@fval^(0+128),w
  2711  0205' 1283               	bcf	3,5	;RP0=0, select bank0
  2712  0206' 1303               	bcf	3,6	;RP1=0, select bank0
  2713  0207' 008B'              	movwf	___flmul@b
  2714  0208' 1683               	bsf	3,5	;RP0=1, select bank1
  2715  0209' 1303               	bcf	3,6	;RP1=0, select bank1
  2716  020A' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2717  020B' 1283               	bcf	3,5	;RP0=0, select bank0
  2718  020C' 1303               	bcf	3,6	;RP1=0, select bank0
  2719  020D' 0092'              	movwf	___flmul@a+3
  2720  020E' 1683               	bsf	3,5	;RP0=1, select bank1
  2721  020F' 1303               	bcf	3,6	;RP1=0, select bank1
  2722  0210' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2723  0211' 1283               	bcf	3,5	;RP0=0, select bank0
  2724  0212' 1303               	bcf	3,6	;RP1=0, select bank0
  2725  0213' 0091'              	movwf	___flmul@a+2
  2726  0214' 1683               	bsf	3,5	;RP0=1, select bank1
  2727  0215' 1303               	bcf	3,6	;RP1=0, select bank1
  2728  0216' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2729  0217' 1283               	bcf	3,5	;RP0=0, select bank0
  2730  0218' 1303               	bcf	3,6	;RP1=0, select bank0
  2731  0219' 0090'              	movwf	___flmul@a+1
  2732  021A' 1683               	bsf	3,5	;RP0=1, select bank1
  2733  021B' 1303               	bcf	3,6	;RP1=0, select bank1
  2734  021C' 0800'              	movf	sprintf@tmpval^(0+128),w
  2735  021D' 1283               	bcf	3,5	;RP0=0, select bank0
  2736  021E' 1303               	bcf	3,6	;RP1=0, select bank0
  2737  021F' 008F'              	movwf	___flmul@a
  2738  0220' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2739  0225' 1283               	bcf	3,5	;RP0=0, select bank0
  2740  0226' 1303               	bcf	3,6	;RP1=0, select bank0
  2741  0227' 080E'              	movf	?___flmul+3,w
  2742  0228' 1683               	bsf	3,5	;RP0=1, select bank1
  2743  0229' 1303               	bcf	3,6	;RP1=0, select bank1
  2744  022A' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
  2745  022B' 1283               	bcf	3,5	;RP0=0, select bank0
  2746  022C' 1303               	bcf	3,6	;RP1=0, select bank0
  2747  022D' 080D'              	movf	?___flmul+2,w
  2748  022E' 1683               	bsf	3,5	;RP0=1, select bank1
  2749  022F' 1303               	bcf	3,6	;RP1=0, select bank1
  2750  0230' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
  2751  0231' 1283               	bcf	3,5	;RP0=0, select bank0
  2752  0232' 1303               	bcf	3,6	;RP1=0, select bank0
  2753  0233' 080C'              	movf	?___flmul+1,w
  2754  0234' 1683               	bsf	3,5	;RP0=1, select bank1
  2755  0235' 1303               	bcf	3,6	;RP1=0, select bank1
  2756  0236' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
  2757  0237' 1283               	bcf	3,5	;RP0=0, select bank0
  2758  0238' 1303               	bcf	3,6	;RP1=0, select bank0
  2759  0239' 080B'              	movf	?___flmul,w
  2760  023A' 1683               	bsf	3,5	;RP0=1, select bank1
  2761  023B' 1303               	bcf	3,6	;RP1=0, select bank1
  2762  023C' 0080'              	movwf	sprintf@tmpval^(0+128)
  2763  023D'                    l4353:
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2766  023D' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2767  023E' 1283               	bcf	3,5	;RP0=0, select bank0
  2768  023F' 1303               	bcf	3,6	;RP1=0, select bank0
  2769  0240' 0083'              	movwf	___flge@ff1+3
  2770  0241' 1683               	bsf	3,5	;RP0=1, select bank1
  2771  0242' 1303               	bcf	3,6	;RP1=0, select bank1
  2772  0243' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2773  0244' 1283               	bcf	3,5	;RP0=0, select bank0
  2774  0245' 1303               	bcf	3,6	;RP1=0, select bank0
  2775  0246' 0082'              	movwf	___flge@ff1+2
  2776  0247' 1683               	bsf	3,5	;RP0=1, select bank1
  2777  0248' 1303               	bcf	3,6	;RP1=0, select bank1
  2778  0249' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2779  024A' 1283               	bcf	3,5	;RP0=0, select bank0
  2780  024B' 1303               	bcf	3,6	;RP1=0, select bank0
  2781  024C' 0081'              	movwf	___flge@ff1+1
  2782  024D' 1683               	bsf	3,5	;RP0=1, select bank1
  2783  024E' 1303               	bcf	3,6	;RP1=0, select bank1
  2784  024F' 0800'              	movf	sprintf@tmpval^(0+128),w
  2785  0250' 1283               	bcf	3,5	;RP0=0, select bank0
  2786  0251' 1303               	bcf	3,6	;RP1=0, select bank0
  2787  0252' 0080'              	movwf	___flge@ff1
  2788  0253' 303F               	movlw	63
  2789  0254' 0087'              	movwf	___flge@ff2+3
  2790  0255' 3080               	movlw	128
  2791  0256' 0086'              	movwf	___flge@ff2+2
  2792  0257' 3000               	movlw	0
  2793  0258' 0085'              	movwf	___flge@ff2+1
  2794  0259' 3000               	movlw	0
  2795  025A' 0084'              	movwf	___flge@ff2
  2796  025B' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2797  0260' 1803               	btfsc	3,0
  2798  0261' 2800'              	goto	u7171
  2799  0262' 2800'              	goto	u7170
  2800  0263'                    u7171:
  2801  0263' 2800'              	goto	l4357
  2802  0264'                    u7170:
  2803  0264'                    l4355:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2806  0264' 30FF               	movlw	255
  2807  0265' 1683               	bsf	3,5	;RP0=1, select bank1
  2808  0266' 1303               	bcf	3,6	;RP1=0, select bank1
  2809  0267' 0780'              	addwf	sprintf@eexp^(0+128),f
  2810  0268' 1803               	skipnc
  2811  0269' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2812  026A' 30FF               	movlw	255
  2813  026B' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2814  026C' 2800'              	goto	l4361
  2815  026D'                    l4357:
  2816  026D' 1683               	bsf	3,5	;RP0=1, select bank1
  2817  026E' 1303               	bcf	3,6	;RP1=0, select bank1
  2818  026F' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
  2819  0270' 1283               	bcf	3,5	;RP0=0, select bank0
  2820  0271' 1303               	bcf	3,6	;RP1=0, select bank0
  2821  0272' 0083'              	movwf	___flge@ff1+3
  2822  0273' 1683               	bsf	3,5	;RP0=1, select bank1
  2823  0274' 1303               	bcf	3,6	;RP1=0, select bank1
  2824  0275' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
  2825  0276' 1283               	bcf	3,5	;RP0=0, select bank0
  2826  0277' 1303               	bcf	3,6	;RP1=0, select bank0
  2827  0278' 0082'              	movwf	___flge@ff1+2
  2828  0279' 1683               	bsf	3,5	;RP0=1, select bank1
  2829  027A' 1303               	bcf	3,6	;RP1=0, select bank1
  2830  027B' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
  2831  027C' 1283               	bcf	3,5	;RP0=0, select bank0
  2832  027D' 1303               	bcf	3,6	;RP1=0, select bank0
  2833  027E' 0081'              	movwf	___flge@ff1+1
  2834  027F' 1683               	bsf	3,5	;RP0=1, select bank1
  2835  0280' 1303               	bcf	3,6	;RP1=0, select bank1
  2836  0281' 0800'              	movf	sprintf@tmpval^(0+128),w
  2837  0282' 1283               	bcf	3,5	;RP0=0, select bank0
  2838  0283' 1303               	bcf	3,6	;RP1=0, select bank0
  2839  0284' 0080'              	movwf	___flge@ff1
  2840  0285' 3041               	movlw	65
  2841  0286' 0087'              	movwf	___flge@ff2+3
  2842  0287' 3020               	movlw	32
  2843  0288' 0086'              	movwf	___flge@ff2+2
  2844  0289' 3000               	movlw	0
  2845  028A' 0085'              	movwf	___flge@ff2+1
  2846  028B' 3000               	movlw	0
  2847  028C' 0084'              	movwf	___flge@ff2
  2848  028D' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2849  0292' 1C03               	btfss	3,0
  2850  0293' 2800'              	goto	u7181
  2851  0294' 2800'              	goto	u7180
  2852  0295'                    u7181:
  2853  0295' 2800'              	goto	l4361
  2854  0296'                    u7180:
  2855  0296'                    l4359:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2858  0296' 3001               	movlw	1
  2859  0297' 1683               	bsf	3,5	;RP0=1, select bank1
  2860  0298' 1303               	bcf	3,6	;RP1=0, select bank1
  2861  0299' 0780'              	addwf	sprintf@eexp^(0+128),f
  2862  029A' 1803               	skipnc
  2863  029B' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
  2864  029C' 3000               	movlw	0
  2865  029D' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
  2866  029E'                    l4361:
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2869  029E' 1683               	bsf	3,5	;RP0=1, select bank1
  2870  029F' 1303               	bcf	3,6	;RP1=0, select bank1
  2871  02A0' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  2872  02A1' 3A80               	xorlw	128
  2873  02A2' 00FF               	movwf	btemp+1
  2874  02A3' 3080               	movlw	128
  2875  02A4' 027F               	subwf	btemp+1,w
  2876  02A5' 1D03               	skipz
  2877  02A6' 2800'              	goto	u7195
  2878  02A7' 300D               	movlw	13
  2879  02A8' 0200'              	subwf	sprintf@prec^(0+128),w
  2880  02A9'                    u7195:
  2881  02A9' 1803               	skipnc
  2882  02AA' 2800'              	goto	u7191
  2883  02AB' 2800'              	goto	u7190
  2884  02AC'                    u7191:
  2885  02AC' 2800'              	goto	l4365
  2886  02AD'                    u7190:
  2887  02AD'                    l4363:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2890  02AD' 1683               	bsf	3,5	;RP0=1, select bank1
  2891  02AE' 1303               	bcf	3,6	;RP1=0, select bank1
  2892  02AF' 0800'              	movf	sprintf@prec^(0+128),w
  2893  02B0' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  2894  02B5' 1283               	bcf	3,5	;RP0=0, select bank0
  2895  02B6' 1303               	bcf	3,6	;RP1=0, select bank0
  2896  02B7' 0828'              	movf	?_fround+3,w
  2897  02B8' 00BC'              	movwf	___fladd@b+3
  2898  02B9' 0827'              	movf	?_fround+2,w
  2899  02BA' 00BB'              	movwf	___fladd@b+2
  2900  02BB' 0826'              	movf	?_fround+1,w
  2901  02BC' 00BA'              	movwf	___fladd@b+1
  2902  02BD' 0825'              	movf	?_fround,w
  2903  02BE' 00B9'              	movwf	___fladd@b
  2904  02BF' 1683               	bsf	3,5	;RP0=1, select bank1
  2905  02C0' 1303               	bcf	3,6	;RP1=0, select bank1
  2906  02C1' 0800'              	movf	(sprintf@fval+3)^(0+128),w
  2907  02C2' 1283               	bcf	3,5	;RP0=0, select bank0
  2908  02C3' 1303               	bcf	3,6	;RP1=0, select bank0
  2909  02C4' 00C0'              	movwf	___fladd@a+3
  2910  02C5' 1683               	bsf	3,5	;RP0=1, select bank1
  2911  02C6' 1303               	bcf	3,6	;RP1=0, select bank1
  2912  02C7' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  2913  02C8' 1283               	bcf	3,5	;RP0=0, select bank0
  2914  02C9' 1303               	bcf	3,6	;RP1=0, select bank0
  2915  02CA' 00BF'              	movwf	___fladd@a+2
  2916  02CB' 1683               	bsf	3,5	;RP0=1, select bank1
  2917  02CC' 1303               	bcf	3,6	;RP1=0, select bank1
  2918  02CD' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  2919  02CE' 1283               	bcf	3,5	;RP0=0, select bank0
  2920  02CF' 1303               	bcf	3,6	;RP1=0, select bank0
  2921  02D0' 00BE'              	movwf	___fladd@a+1
  2922  02D1' 1683               	bsf	3,5	;RP0=1, select bank1
  2923  02D2' 1303               	bcf	3,6	;RP1=0, select bank1
  2924  02D3' 0800'              	movf	sprintf@fval^(0+128),w
  2925  02D4' 1283               	bcf	3,5	;RP0=0, select bank0
  2926  02D5' 1303               	bcf	3,6	;RP1=0, select bank0
  2927  02D6' 00BD'              	movwf	___fladd@a
  2928  02D7' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  2929  02DC' 1283               	bcf	3,5	;RP0=0, select bank0
  2930  02DD' 1303               	bcf	3,6	;RP1=0, select bank0
  2931  02DE' 083C'              	movf	?___fladd+3,w
  2932  02DF' 1683               	bsf	3,5	;RP0=1, select bank1
  2933  02E0' 1303               	bcf	3,6	;RP1=0, select bank1
  2934  02E1' 0080'              	movwf	(sprintf@fval+3)^(0+128)
  2935  02E2' 1283               	bcf	3,5	;RP0=0, select bank0
  2936  02E3' 1303               	bcf	3,6	;RP1=0, select bank0
  2937  02E4' 083B'              	movf	?___fladd+2,w
  2938  02E5' 1683               	bsf	3,5	;RP0=1, select bank1
  2939  02E6' 1303               	bcf	3,6	;RP1=0, select bank1
  2940  02E7' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  2941  02E8' 1283               	bcf	3,5	;RP0=0, select bank0
  2942  02E9' 1303               	bcf	3,6	;RP1=0, select bank0
  2943  02EA' 083A'              	movf	?___fladd+1,w
  2944  02EB' 1683               	bsf	3,5	;RP0=1, select bank1
  2945  02EC' 1303               	bcf	3,6	;RP1=0, select bank1
  2946  02ED' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  2947  02EE' 1283               	bcf	3,5	;RP0=0, select bank0
  2948  02EF' 1303               	bcf	3,6	;RP1=0, select bank0
  2949  02F0' 0839'              	movf	?___fladd,w
  2950  02F1' 1683               	bsf	3,5	;RP0=1, select bank1
  2951  02F2' 1303               	bcf	3,6	;RP1=0, select bank1
  2952  02F3' 0080'              	movwf	sprintf@fval^(0+128)
  2953  02F4'                    l4365:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2956  02F4' 1683               	bsf	3,5	;RP0=1, select bank1
  2957  02F5' 1303               	bcf	3,6	;RP1=0, select bank1
  2958  02F6' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
  2959  02F7' 3A80               	xorlw	128
  2960  02F8' 00FF               	movwf	btemp+1
  2961  02F9' 3080               	movlw	128
  2962  02FA' 027F               	subwf	btemp+1,w
  2963  02FB' 1D03               	skipz
  2964  02FC' 2800'              	goto	u7205
  2965  02FD' 300A               	movlw	10
  2966  02FE' 0200'              	subwf	sprintf@eexp^(0+128),w
  2967  02FF'                    u7205:
  2968  02FF' 1803               	skipnc
  2969  0300' 2800'              	goto	u7201
  2970  0301' 120A' 118A' 2800'  	goto	u7200
  2971  0304'                    u7201:
  2972  0304' 120A' 118A' 2800'  	goto	l4373
  2973  0307'                    L3:
  2974  0307'                    L2:
  2975  0307' 120A' 118A' 2800'  	ljmp	l4555
  2976                           
  2977                           	psect	text2
  2978  0000'                    __ptext2:	
  2979 ;; *************** function _scale *****************
  2980 ;; Defined at:
  2981 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  scl             1    wreg     char 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  scl             1   55[BANK0 ] char 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  4   37[BANK0 ] char 
  2988 ;; Registers used:
  2989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2995 ;;      Params:         0       4       0       0       0
  2996 ;;      Locals:         0       5       0       0       0
  2997 ;;      Temps:          0      10       0       0       0
  2998 ;;      Totals:         0      19       0       0       0
  2999 ;;Total ram usage:       19 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    3
  3002 ;; This function calls:
  3003 ;;		___awdiv
  3004 ;;		___awmod
  3005 ;;		___flmul
  3006 ;; This function is called by:
  3007 ;;		_sprintf
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function _scale
  3013  0000'                    _scale:
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3017                           ;scale@scl stored from wreg
  3018  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3019  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3020  0002' 00B7'              	movwf	scale@scl
  3021  0003'                    l3955:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3024  0003' 1FB7'              	btfss	scale@scl,7
  3025  0004' 2800'              	goto	u6181
  3026  0005' 2800'              	goto	u6180
  3027  0006'                    u6181:
  3028  0006' 2800'              	goto	l3977
  3029  0007'                    u6180:
  3030  0007'                    l3957:
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3033  0007' 09B7'              	comf	scale@scl,f
  3034  0008' 0AB7'              	incf	scale@scl,f
  3035  0009'                    l3959:
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3038  0009' 0837'              	movf	scale@scl,w
  3039  000A' 3A80               	xorlw	128
  3040  000B' 3E12               	addlw	-238
  3041  000C' 1C03               	skipc
  3042  000D' 2800'              	goto	u6191
  3043  000E' 2800'              	goto	u6190
  3044  000F'                    u6191:
  3045  000F' 2800'              	goto	l3967
  3046  0010'                    u6190:
  3047  0010'                    l3961:
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3050  0010' 300A               	movlw	10
  3051  0011' 0082'              	movwf	___awdiv@divisor
  3052  0012' 3000               	movlw	0
  3053  0013' 0083'              	movwf	___awdiv@divisor+1
  3054  0014' 0837'              	movf	scale@scl,w
  3055  0015' 0085'              	movwf	___awmod@dividend
  3056  0016' 0186'              	clrf	___awmod@dividend+1
  3057  0017' 1B85'              	btfsc	___awmod@dividend,7
  3058  0018' 0386'              	decf	___awmod@dividend+1,f
  3059  0019' 3064               	movlw	100
  3060  001A' 0083'              	movwf	___awmod@divisor
  3061  001B' 3000               	movlw	0
  3062  001C' 0084'              	movwf	___awmod@divisor+1
  3063  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3064  0022' 0804'              	movf	?___awmod+1,w
  3065  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  3066  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  3067  0025' 0085'              	movwf	___awdiv@dividend+1
  3068  0026' 0803'              	movf	?___awmod,w
  3069  0027' 0084'              	movwf	___awdiv@dividend
  3070  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3071  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  3072  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  3073  002F' 0802'              	movf	?___awdiv,w
  3074  0030' 00A9'              	movwf	??_scale
  3075  0031' 3001               	movlw	1
  3076  0032'                    u6205:
  3077  0032' 1003               	clrc
  3078  0033' 0DA9'              	rlf	??_scale,f
  3079  0034' 3EFF               	addlw	-1
  3080  0035' 1D03               	skipz
  3081  0036' 2800'              	goto	u6205
  3082  0037' 1003               	clrc
  3083  0038' 0D29'              	rlf	??_scale,w
  3084  0039' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3085  003A' 0084               	movwf	4
  3086  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3087  0040' 00AA'              	movwf	??_scale+1
  3088  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3089  0046' 00AB'              	movwf	??_scale+2
  3090  0047' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3091  004C' 00AC'              	movwf	??_scale+3
  3092  004D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3093  0052' 00AD'              	movwf	??_scale+4
  3094  0053' 082D'              	movf	??_scale+4,w
  3095  0054' 008E'              	movwf	___flmul@b+3
  3096  0055' 082C'              	movf	??_scale+3,w
  3097  0056' 008D'              	movwf	___flmul@b+2
  3098  0057' 082B'              	movf	??_scale+2,w
  3099  0058' 008C'              	movwf	___flmul@b+1
  3100  0059' 082A'              	movf	??_scale+1,w
  3101  005A' 008B'              	movwf	___flmul@b
  3102  005B' 3064               	movlw	100
  3103  005C' 0082'              	movwf	___awdiv@divisor
  3104  005D' 3000               	movlw	0
  3105  005E' 0083'              	movwf	___awdiv@divisor+1
  3106  005F' 0837'              	movf	scale@scl,w
  3107  0060' 0084'              	movwf	___awdiv@dividend
  3108  0061' 0185'              	clrf	___awdiv@dividend+1
  3109  0062' 1B84'              	btfsc	___awdiv@dividend,7
  3110  0063' 0385'              	decf	___awdiv@dividend+1,f
  3111  0064' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3112  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  3113  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  3114  006B' 0802'              	movf	?___awdiv,w
  3115  006C' 00AE'              	movwf	??_scale+5
  3116  006D' 3001               	movlw	1
  3117  006E'                    u6215:
  3118  006E' 1003               	clrc
  3119  006F' 0DAE'              	rlf	??_scale+5,f
  3120  0070' 3EFF               	addlw	-1
  3121  0071' 1D03               	skipz
  3122  0072' 2800'              	goto	u6215
  3123  0073' 1003               	clrc
  3124  0074' 0D2E'              	rlf	??_scale+5,w
  3125  0075' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3126  0076' 0084               	movwf	4
  3127  0077' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3128  007C' 00AF'              	movwf	??_scale+6
  3129  007D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3130  0082' 00B0'              	movwf	??_scale+7
  3131  0083' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3132  0088' 00B1'              	movwf	??_scale+8
  3133  0089' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3134  008E' 00B2'              	movwf	??_scale+9
  3135  008F' 0832'              	movf	??_scale+9,w
  3136  0090' 0092'              	movwf	___flmul@a+3
  3137  0091' 0831'              	movf	??_scale+8,w
  3138  0092' 0091'              	movwf	___flmul@a+2
  3139  0093' 0830'              	movf	??_scale+7,w
  3140  0094' 0090'              	movwf	___flmul@a+1
  3141  0095' 082F'              	movf	??_scale+6,w
  3142  0096' 008F'              	movwf	___flmul@a
  3143  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3144  009C' 1283               	bcf	3,5	;RP0=0, select bank0
  3145  009D' 1303               	bcf	3,6	;RP1=0, select bank0
  3146  009E' 080E'              	movf	?___flmul+3,w
  3147  009F' 00B6'              	movwf	_scale$1272+3
  3148  00A0' 080D'              	movf	?___flmul+2,w
  3149  00A1' 00B5'              	movwf	_scale$1272+2
  3150  00A2' 080C'              	movf	?___flmul+1,w
  3151  00A3' 00B4'              	movwf	_scale$1272+1
  3152  00A4' 080B'              	movf	?___flmul,w
  3153  00A5' 00B3'              	movwf	_scale$1272
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3156  00A6' 300A               	movlw	10
  3157  00A7' 0083'              	movwf	___awmod@divisor
  3158  00A8' 3000               	movlw	0
  3159  00A9' 0084'              	movwf	___awmod@divisor+1
  3160  00AA' 0837'              	movf	scale@scl,w
  3161  00AB' 0085'              	movwf	___awmod@dividend
  3162  00AC' 0186'              	clrf	___awmod@dividend+1
  3163  00AD' 1B85'              	btfsc	___awmod@dividend,7
  3164  00AE' 0386'              	decf	___awmod@dividend+1,f
  3165  00AF' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3166  00B4' 0803'              	movf	?___awmod,w
  3167  00B5' 1283               	bcf	3,5	;RP0=0, select bank0
  3168  00B6' 1303               	bcf	3,6	;RP1=0, select bank0
  3169  00B7' 00A9'              	movwf	??_scale
  3170  00B8' 3001               	movlw	1
  3171  00B9'                    u6225:
  3172  00B9' 1003               	clrc
  3173  00BA' 0DA9'              	rlf	??_scale,f
  3174  00BB' 3EFF               	addlw	-1
  3175  00BC' 1D03               	skipz
  3176  00BD' 2800'              	goto	u6225
  3177  00BE' 1003               	clrc
  3178  00BF' 0D29'              	rlf	??_scale,w
  3179  00C0' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3180  00C1' 0084               	movwf	4
  3181  00C2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3182  00C7' 00AA'              	movwf	??_scale+1
  3183  00C8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3184  00CD' 00AB'              	movwf	??_scale+2
  3185  00CE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3186  00D3' 00AC'              	movwf	??_scale+3
  3187  00D4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3188  00D9' 00AD'              	movwf	??_scale+4
  3189  00DA' 082D'              	movf	??_scale+4,w
  3190  00DB' 008E'              	movwf	___flmul@b+3
  3191  00DC' 082C'              	movf	??_scale+3,w
  3192  00DD' 008D'              	movwf	___flmul@b+2
  3193  00DE' 082B'              	movf	??_scale+2,w
  3194  00DF' 008C'              	movwf	___flmul@b+1
  3195  00E0' 082A'              	movf	??_scale+1,w
  3196  00E1' 008B'              	movwf	___flmul@b
  3197  00E2' 0836'              	movf	_scale$1272+3,w
  3198  00E3' 0092'              	movwf	___flmul@a+3
  3199  00E4' 0835'              	movf	_scale$1272+2,w
  3200  00E5' 0091'              	movwf	___flmul@a+2
  3201  00E6' 0834'              	movf	_scale$1272+1,w
  3202  00E7' 0090'              	movwf	___flmul@a+1
  3203  00E8' 0833'              	movf	_scale$1272,w
  3204  00E9' 008F'              	movwf	___flmul@a
  3205  00EA' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3206  00EF' 1283               	bcf	3,5	;RP0=0, select bank0
  3207  00F0' 1303               	bcf	3,6	;RP1=0, select bank0
  3208  00F1' 080E'              	movf	?___flmul+3,w
  3209  00F2' 00A8'              	movwf	?_scale+3
  3210  00F3' 080D'              	movf	?___flmul+2,w
  3211  00F4' 00A7'              	movwf	?_scale+2
  3212  00F5' 080C'              	movf	?___flmul+1,w
  3213  00F6' 00A6'              	movwf	?_scale+1
  3214  00F7' 080B'              	movf	?___flmul,w
  3215  00F8' 00A5'              	movwf	?_scale
  3216  00F9' 2800'              	goto	l326
  3217  00FA'                    l3967:
  3218  00FA' 0837'              	movf	scale@scl,w
  3219  00FB' 3A80               	xorlw	128
  3220  00FC' 3E75               	addlw	-139
  3221  00FD' 1C03               	skipc
  3222  00FE' 2800'              	goto	u6231
  3223  00FF' 2800'              	goto	u6230
  3224  0100'                    u6231:
  3225  0100' 2800'              	goto	l3973
  3226  0101'                    u6230:
  3227  0101'                    l3969:
  3228                           
  3229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3230  0101' 300A               	movlw	10
  3231  0102' 0083'              	movwf	___awmod@divisor
  3232  0103' 3000               	movlw	0
  3233  0104' 0084'              	movwf	___awmod@divisor+1
  3234  0105' 0837'              	movf	scale@scl,w
  3235  0106' 0085'              	movwf	___awmod@dividend
  3236  0107' 0186'              	clrf	___awmod@dividend+1
  3237  0108' 1B85'              	btfsc	___awmod@dividend,7
  3238  0109' 0386'              	decf	___awmod@dividend+1,f
  3239  010A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3240  010F' 0803'              	movf	?___awmod,w
  3241  0110' 1283               	bcf	3,5	;RP0=0, select bank0
  3242  0111' 1303               	bcf	3,6	;RP1=0, select bank0
  3243  0112' 00A9'              	movwf	??_scale
  3244  0113' 3001               	movlw	1
  3245  0114'                    u6245:
  3246  0114' 1003               	clrc
  3247  0115' 0DA9'              	rlf	??_scale,f
  3248  0116' 3EFF               	addlw	-1
  3249  0117' 1D03               	skipz
  3250  0118' 2800'              	goto	u6245
  3251  0119' 1003               	clrc
  3252  011A' 0D29'              	rlf	??_scale,w
  3253  011B' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3254  011C' 0084               	movwf	4
  3255  011D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3256  0122' 00AA'              	movwf	??_scale+1
  3257  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3258  0128' 00AB'              	movwf	??_scale+2
  3259  0129' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3260  012E' 00AC'              	movwf	??_scale+3
  3261  012F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3262  0134' 00AD'              	movwf	??_scale+4
  3263  0135' 082D'              	movf	??_scale+4,w
  3264  0136' 008E'              	movwf	___flmul@b+3
  3265  0137' 082C'              	movf	??_scale+3,w
  3266  0138' 008D'              	movwf	___flmul@b+2
  3267  0139' 082B'              	movf	??_scale+2,w
  3268  013A' 008C'              	movwf	___flmul@b+1
  3269  013B' 082A'              	movf	??_scale+1,w
  3270  013C' 008B'              	movwf	___flmul@b
  3271  013D' 300A               	movlw	10
  3272  013E' 0082'              	movwf	___awdiv@divisor
  3273  013F' 3000               	movlw	0
  3274  0140' 0083'              	movwf	___awdiv@divisor+1
  3275  0141' 0837'              	movf	scale@scl,w
  3276  0142' 0084'              	movwf	___awdiv@dividend
  3277  0143' 0185'              	clrf	___awdiv@dividend+1
  3278  0144' 1B84'              	btfsc	___awdiv@dividend,7
  3279  0145' 0385'              	decf	___awdiv@dividend+1,f
  3280  0146' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3281  014B' 1283               	bcf	3,5	;RP0=0, select bank0
  3282  014C' 1303               	bcf	3,6	;RP1=0, select bank0
  3283  014D' 0802'              	movf	?___awdiv,w
  3284  014E' 00AE'              	movwf	??_scale+5
  3285  014F' 3001               	movlw	1
  3286  0150'                    u6255:
  3287  0150' 1003               	clrc
  3288  0151' 0DAE'              	rlf	??_scale+5,f
  3289  0152' 3EFF               	addlw	-1
  3290  0153' 1D03               	skipz
  3291  0154' 2800'              	goto	u6255
  3292  0155' 1003               	clrc
  3293  0156' 0D2E'              	rlf	??_scale+5,w
  3294  0157' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3295  0158' 0084               	movwf	4
  3296  0159' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3297  015E' 00AF'              	movwf	??_scale+6
  3298  015F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3299  0164' 00B0'              	movwf	??_scale+7
  3300  0165' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3301  016A' 00B1'              	movwf	??_scale+8
  3302  016B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3303  0170' 00B2'              	movwf	??_scale+9
  3304  0171' 0832'              	movf	??_scale+9,w
  3305  0172' 0092'              	movwf	___flmul@a+3
  3306  0173' 0831'              	movf	??_scale+8,w
  3307  0174' 0091'              	movwf	___flmul@a+2
  3308  0175' 0830'              	movf	??_scale+7,w
  3309  0176' 0090'              	movwf	___flmul@a+1
  3310  0177' 082F'              	movf	??_scale+6,w
  3311  0178' 008F'              	movwf	___flmul@a
  3312  0179' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3313  017E' 1283               	bcf	3,5	;RP0=0, select bank0
  3314  017F' 1303               	bcf	3,6	;RP1=0, select bank0
  3315  0180' 080E'              	movf	?___flmul+3,w
  3316  0181' 00A8'              	movwf	?_scale+3
  3317  0182' 080D'              	movf	?___flmul+2,w
  3318  0183' 00A7'              	movwf	?_scale+2
  3319  0184' 080C'              	movf	?___flmul+1,w
  3320  0185' 00A6'              	movwf	?_scale+1
  3321  0186' 080B'              	movf	?___flmul,w
  3322  0187' 00A5'              	movwf	?_scale
  3323  0188' 2800'              	goto	l326
  3324  0189'                    l3973:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3327  0189' 0837'              	movf	scale@scl,w
  3328  018A' 00A9'              	movwf	??_scale
  3329  018B' 3001               	movlw	1
  3330  018C'                    u6265:
  3331  018C' 1003               	clrc
  3332  018D' 0DA9'              	rlf	??_scale,f
  3333  018E' 3EFF               	addlw	-1
  3334  018F' 1D03               	skipz
  3335  0190' 2800'              	goto	u6265
  3336  0191' 1003               	clrc
  3337  0192' 0D29'              	rlf	??_scale,w
  3338  0193' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3339  0194' 0084               	movwf	4
  3340  0195' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3341  019A' 00AA'              	movwf	??_scale+1
  3342  019B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3343  01A0' 00AB'              	movwf	??_scale+2
  3344  01A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3345  01A6' 00AC'              	movwf	??_scale+3
  3346  01A7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3347  01AC' 00AD'              	movwf	??_scale+4
  3348  01AD' 082D'              	movf	??_scale+4,w
  3349  01AE' 00A8'              	movwf	?_scale+3
  3350  01AF' 082C'              	movf	??_scale+3,w
  3351  01B0' 00A7'              	movwf	?_scale+2
  3352  01B1' 082B'              	movf	??_scale+2,w
  3353  01B2' 00A6'              	movwf	?_scale+1
  3354  01B3' 082A'              	movf	??_scale+1,w
  3355  01B4' 00A5'              	movwf	?_scale
  3356  01B5' 2800'              	goto	l326
  3357  01B6'                    l3977:
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3360  01B6' 0837'              	movf	scale@scl,w
  3361  01B7' 3A80               	xorlw	128
  3362  01B8' 3E12               	addlw	-238
  3363  01B9' 1C03               	skipc
  3364  01BA' 2800'              	goto	u6271
  3365  01BB' 2800'              	goto	u6270
  3366  01BC'                    u6271:
  3367  01BC' 2800'              	goto	l3985
  3368  01BD'                    u6270:
  3369  01BD'                    l3979:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3372  01BD' 300A               	movlw	10
  3373  01BE' 0082'              	movwf	___awdiv@divisor
  3374  01BF' 3000               	movlw	0
  3375  01C0' 0083'              	movwf	___awdiv@divisor+1
  3376  01C1' 0837'              	movf	scale@scl,w
  3377  01C2' 0085'              	movwf	___awmod@dividend
  3378  01C3' 0186'              	clrf	___awmod@dividend+1
  3379  01C4' 1B85'              	btfsc	___awmod@dividend,7
  3380  01C5' 0386'              	decf	___awmod@dividend+1,f
  3381  01C6' 3064               	movlw	100
  3382  01C7' 0083'              	movwf	___awmod@divisor
  3383  01C8' 3000               	movlw	0
  3384  01C9' 0084'              	movwf	___awmod@divisor+1
  3385  01CA' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3386  01CF' 0804'              	movf	?___awmod+1,w
  3387  01D0' 1283               	bcf	3,5	;RP0=0, select bank0
  3388  01D1' 1303               	bcf	3,6	;RP1=0, select bank0
  3389  01D2' 0085'              	movwf	___awdiv@dividend+1
  3390  01D3' 0803'              	movf	?___awmod,w
  3391  01D4' 0084'              	movwf	___awdiv@dividend
  3392  01D5' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3393  01DA' 1283               	bcf	3,5	;RP0=0, select bank0
  3394  01DB' 1303               	bcf	3,6	;RP1=0, select bank0
  3395  01DC' 0802'              	movf	?___awdiv,w
  3396  01DD' 00A9'              	movwf	??_scale
  3397  01DE' 3001               	movlw	1
  3398  01DF'                    u6285:
  3399  01DF' 1003               	clrc
  3400  01E0' 0DA9'              	rlf	??_scale,f
  3401  01E1' 3EFF               	addlw	-1
  3402  01E2' 1D03               	skipz
  3403  01E3' 2800'              	goto	u6285
  3404  01E4' 1003               	clrc
  3405  01E5' 0D29'              	rlf	??_scale,w
  3406  01E6' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3407  01E7' 0084               	movwf	4
  3408  01E8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3409  01ED' 00AA'              	movwf	??_scale+1
  3410  01EE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3411  01F3' 00AB'              	movwf	??_scale+2
  3412  01F4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3413  01F9' 00AC'              	movwf	??_scale+3
  3414  01FA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3415  01FF' 00AD'              	movwf	??_scale+4
  3416  0200' 082D'              	movf	??_scale+4,w
  3417  0201' 008E'              	movwf	___flmul@b+3
  3418  0202' 082C'              	movf	??_scale+3,w
  3419  0203' 008D'              	movwf	___flmul@b+2
  3420  0204' 082B'              	movf	??_scale+2,w
  3421  0205' 008C'              	movwf	___flmul@b+1
  3422  0206' 082A'              	movf	??_scale+1,w
  3423  0207' 008B'              	movwf	___flmul@b
  3424  0208' 3064               	movlw	100
  3425  0209' 0082'              	movwf	___awdiv@divisor
  3426  020A' 3000               	movlw	0
  3427  020B' 0083'              	movwf	___awdiv@divisor+1
  3428  020C' 0837'              	movf	scale@scl,w
  3429  020D' 0084'              	movwf	___awdiv@dividend
  3430  020E' 0185'              	clrf	___awdiv@dividend+1
  3431  020F' 1B84'              	btfsc	___awdiv@dividend,7
  3432  0210' 0385'              	decf	___awdiv@dividend+1,f
  3433  0211' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3434  0216' 1283               	bcf	3,5	;RP0=0, select bank0
  3435  0217' 1303               	bcf	3,6	;RP1=0, select bank0
  3436  0218' 0802'              	movf	?___awdiv,w
  3437  0219' 00AE'              	movwf	??_scale+5
  3438  021A' 3001               	movlw	1
  3439  021B'                    u6295:
  3440  021B' 1003               	clrc
  3441  021C' 0DAE'              	rlf	??_scale+5,f
  3442  021D' 3EFF               	addlw	-1
  3443  021E' 1D03               	skipz
  3444  021F' 2800'              	goto	u6295
  3445  0220' 1003               	clrc
  3446  0221' 0D2E'              	rlf	??_scale+5,w
  3447  0222' 3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3448  0223' 0084               	movwf	4
  3449  0224' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3450  0229' 00AF'              	movwf	??_scale+6
  3451  022A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3452  022F' 00B0'              	movwf	??_scale+7
  3453  0230' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3454  0235' 00B1'              	movwf	??_scale+8
  3455  0236' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3456  023B' 00B2'              	movwf	??_scale+9
  3457  023C' 0832'              	movf	??_scale+9,w
  3458  023D' 0092'              	movwf	___flmul@a+3
  3459  023E' 0831'              	movf	??_scale+8,w
  3460  023F' 0091'              	movwf	___flmul@a+2
  3461  0240' 0830'              	movf	??_scale+7,w
  3462  0241' 0090'              	movwf	___flmul@a+1
  3463  0242' 082F'              	movf	??_scale+6,w
  3464  0243' 008F'              	movwf	___flmul@a
  3465  0244' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3466  0249' 1283               	bcf	3,5	;RP0=0, select bank0
  3467  024A' 1303               	bcf	3,6	;RP1=0, select bank0
  3468  024B' 080E'              	movf	?___flmul+3,w
  3469  024C' 00B6'              	movwf	_scale$1272+3
  3470  024D' 080D'              	movf	?___flmul+2,w
  3471  024E' 00B5'              	movwf	_scale$1272+2
  3472  024F' 080C'              	movf	?___flmul+1,w
  3473  0250' 00B4'              	movwf	_scale$1272+1
  3474  0251' 080B'              	movf	?___flmul,w
  3475  0252' 00B3'              	movwf	_scale$1272
  3476                           
  3477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3478  0253' 300A               	movlw	10
  3479  0254' 0083'              	movwf	___awmod@divisor
  3480  0255' 3000               	movlw	0
  3481  0256' 0084'              	movwf	___awmod@divisor+1
  3482  0257' 0837'              	movf	scale@scl,w
  3483  0258' 0085'              	movwf	___awmod@dividend
  3484  0259' 0186'              	clrf	___awmod@dividend+1
  3485  025A' 1B85'              	btfsc	___awmod@dividend,7
  3486  025B' 0386'              	decf	___awmod@dividend+1,f
  3487  025C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3488  0261' 0803'              	movf	?___awmod,w
  3489  0262' 1283               	bcf	3,5	;RP0=0, select bank0
  3490  0263' 1303               	bcf	3,6	;RP1=0, select bank0
  3491  0264' 00A9'              	movwf	??_scale
  3492  0265' 3001               	movlw	1
  3493  0266'                    u6305:
  3494  0266' 1003               	clrc
  3495  0267' 0DA9'              	rlf	??_scale,f
  3496  0268' 3EFF               	addlw	-1
  3497  0269' 1D03               	skipz
  3498  026A' 2800'              	goto	u6305
  3499  026B' 1003               	clrc
  3500  026C' 0D29'              	rlf	??_scale,w
  3501  026D' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3502  026E' 0084               	movwf	4
  3503  026F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3504  0274' 00AA'              	movwf	??_scale+1
  3505  0275' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3506  027A' 00AB'              	movwf	??_scale+2
  3507  027B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3508  0280' 00AC'              	movwf	??_scale+3
  3509  0281' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3510  0286' 00AD'              	movwf	??_scale+4
  3511  0287' 082D'              	movf	??_scale+4,w
  3512  0288' 008E'              	movwf	___flmul@b+3
  3513  0289' 082C'              	movf	??_scale+3,w
  3514  028A' 008D'              	movwf	___flmul@b+2
  3515  028B' 082B'              	movf	??_scale+2,w
  3516  028C' 008C'              	movwf	___flmul@b+1
  3517  028D' 082A'              	movf	??_scale+1,w
  3518  028E' 008B'              	movwf	___flmul@b
  3519  028F' 0836'              	movf	_scale$1272+3,w
  3520  0290' 0092'              	movwf	___flmul@a+3
  3521  0291' 0835'              	movf	_scale$1272+2,w
  3522  0292' 0091'              	movwf	___flmul@a+2
  3523  0293' 0834'              	movf	_scale$1272+1,w
  3524  0294' 0090'              	movwf	___flmul@a+1
  3525  0295' 0833'              	movf	_scale$1272,w
  3526  0296' 008F'              	movwf	___flmul@a
  3527  0297' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3528  029C' 1283               	bcf	3,5	;RP0=0, select bank0
  3529  029D' 1303               	bcf	3,6	;RP1=0, select bank0
  3530  029E' 080E'              	movf	?___flmul+3,w
  3531  029F' 00A8'              	movwf	?_scale+3
  3532  02A0' 080D'              	movf	?___flmul+2,w
  3533  02A1' 00A7'              	movwf	?_scale+2
  3534  02A2' 080C'              	movf	?___flmul+1,w
  3535  02A3' 00A6'              	movwf	?_scale+1
  3536  02A4' 080B'              	movf	?___flmul,w
  3537  02A5' 00A5'              	movwf	?_scale
  3538  02A6' 2800'              	goto	l326
  3539  02A7'                    l3985:
  3540  02A7' 0837'              	movf	scale@scl,w
  3541  02A8' 3A80               	xorlw	128
  3542  02A9' 3E75               	addlw	-139
  3543  02AA' 1C03               	skipc
  3544  02AB' 2800'              	goto	u6311
  3545  02AC' 2800'              	goto	u6310
  3546  02AD'                    u6311:
  3547  02AD' 2800'              	goto	l3991
  3548  02AE'                    u6310:
  3549  02AE'                    l3987:
  3550                           
  3551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3552  02AE' 300A               	movlw	10
  3553  02AF' 0083'              	movwf	___awmod@divisor
  3554  02B0' 3000               	movlw	0
  3555  02B1' 0084'              	movwf	___awmod@divisor+1
  3556  02B2' 0837'              	movf	scale@scl,w
  3557  02B3' 0085'              	movwf	___awmod@dividend
  3558  02B4' 0186'              	clrf	___awmod@dividend+1
  3559  02B5' 1B85'              	btfsc	___awmod@dividend,7
  3560  02B6' 0386'              	decf	___awmod@dividend+1,f
  3561  02B7' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3562  02BC' 0803'              	movf	?___awmod,w
  3563  02BD' 1283               	bcf	3,5	;RP0=0, select bank0
  3564  02BE' 1303               	bcf	3,6	;RP1=0, select bank0
  3565  02BF' 00A9'              	movwf	??_scale
  3566  02C0' 3001               	movlw	1
  3567  02C1'                    u6325:
  3568  02C1' 1003               	clrc
  3569  02C2' 0DA9'              	rlf	??_scale,f
  3570  02C3' 3EFF               	addlw	-1
  3571  02C4' 1D03               	skipz
  3572  02C5' 2800'              	goto	u6325
  3573  02C6' 1003               	clrc
  3574  02C7' 0D29'              	rlf	??_scale,w
  3575  02C8' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3576  02C9' 0084               	movwf	4
  3577  02CA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3578  02CF' 00AA'              	movwf	??_scale+1
  3579  02D0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3580  02D5' 00AB'              	movwf	??_scale+2
  3581  02D6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3582  02DB' 00AC'              	movwf	??_scale+3
  3583  02DC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3584  02E1' 00AD'              	movwf	??_scale+4
  3585  02E2' 082D'              	movf	??_scale+4,w
  3586  02E3' 008E'              	movwf	___flmul@b+3
  3587  02E4' 082C'              	movf	??_scale+3,w
  3588  02E5' 008D'              	movwf	___flmul@b+2
  3589  02E6' 082B'              	movf	??_scale+2,w
  3590  02E7' 008C'              	movwf	___flmul@b+1
  3591  02E8' 082A'              	movf	??_scale+1,w
  3592  02E9' 008B'              	movwf	___flmul@b
  3593  02EA' 300A               	movlw	10
  3594  02EB' 0082'              	movwf	___awdiv@divisor
  3595  02EC' 3000               	movlw	0
  3596  02ED' 0083'              	movwf	___awdiv@divisor+1
  3597  02EE' 0837'              	movf	scale@scl,w
  3598  02EF' 0084'              	movwf	___awdiv@dividend
  3599  02F0' 0185'              	clrf	___awdiv@dividend+1
  3600  02F1' 1B84'              	btfsc	___awdiv@dividend,7
  3601  02F2' 0385'              	decf	___awdiv@dividend+1,f
  3602  02F3' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3603  02F8' 1283               	bcf	3,5	;RP0=0, select bank0
  3604  02F9' 1303               	bcf	3,6	;RP1=0, select bank0
  3605  02FA' 0802'              	movf	?___awdiv,w
  3606  02FB' 00AE'              	movwf	??_scale+5
  3607  02FC' 3001               	movlw	1
  3608  02FD'                    u6335:
  3609  02FD' 1003               	clrc
  3610  02FE' 0DAE'              	rlf	??_scale+5,f
  3611  02FF' 3EFF               	addlw	-1
  3612  0300' 1D03               	skipz
  3613  0301' 2800'              	goto	u6335
  3614  0302' 1003               	clrc
  3615  0303' 0D2E'              	rlf	??_scale+5,w
  3616  0304' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3617  0305' 0084               	movwf	4
  3618  0306' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3619  030B' 00AF'              	movwf	??_scale+6
  3620  030C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3621  0311' 00B0'              	movwf	??_scale+7
  3622  0312' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3623  0317' 00B1'              	movwf	??_scale+8
  3624  0318' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3625  031D' 00B2'              	movwf	??_scale+9
  3626  031E' 0832'              	movf	??_scale+9,w
  3627  031F' 0092'              	movwf	___flmul@a+3
  3628  0320' 0831'              	movf	??_scale+8,w
  3629  0321' 0091'              	movwf	___flmul@a+2
  3630  0322' 0830'              	movf	??_scale+7,w
  3631  0323' 0090'              	movwf	___flmul@a+1
  3632  0324' 082F'              	movf	??_scale+6,w
  3633  0325' 008F'              	movwf	___flmul@a
  3634  0326' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3635  032B' 1283               	bcf	3,5	;RP0=0, select bank0
  3636  032C' 1303               	bcf	3,6	;RP1=0, select bank0
  3637  032D' 080E'              	movf	?___flmul+3,w
  3638  032E' 00A8'              	movwf	?_scale+3
  3639  032F' 080D'              	movf	?___flmul+2,w
  3640  0330' 00A7'              	movwf	?_scale+2
  3641  0331' 080C'              	movf	?___flmul+1,w
  3642  0332' 00A6'              	movwf	?_scale+1
  3643  0333' 080B'              	movf	?___flmul,w
  3644  0334' 00A5'              	movwf	?_scale
  3645  0335' 2800'              	goto	l326
  3646  0336'                    l3991:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3649  0336' 0837'              	movf	scale@scl,w
  3650  0337' 00A9'              	movwf	??_scale
  3651  0338' 3001               	movlw	1
  3652  0339'                    u6345:
  3653  0339' 1003               	clrc
  3654  033A' 0DA9'              	rlf	??_scale,f
  3655  033B' 3EFF               	addlw	-1
  3656  033C' 1D03               	skipz
  3657  033D' 2800'              	goto	u6345
  3658  033E' 1003               	clrc
  3659  033F' 0D29'              	rlf	??_scale,w
  3660  0340' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3661  0341' 0084               	movwf	4
  3662  0342' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3663  0347' 00AA'              	movwf	??_scale+1
  3664  0348' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3665  034D' 00AB'              	movwf	??_scale+2
  3666  034E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3667  0353' 00AC'              	movwf	??_scale+3
  3668  0354' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3669  0359' 00AD'              	movwf	??_scale+4
  3670  035A' 082D'              	movf	??_scale+4,w
  3671  035B' 00A8'              	movwf	?_scale+3
  3672  035C' 082C'              	movf	??_scale+3,w
  3673  035D' 00A7'              	movwf	?_scale+2
  3674  035E' 082B'              	movf	??_scale+2,w
  3675  035F' 00A6'              	movwf	?_scale+1
  3676  0360' 082A'              	movf	??_scale+1,w
  3677  0361' 00A5'              	movwf	?_scale
  3678  0362'                    l326:
  3679  0362' 0008               	return
  3680  0363'                    __end_of_scale:
  3681                           
  3682                           	psect	text3
  3683  0000'                    __ptext3:	
  3684 ;; *************** function ___awmod *****************
  3685 ;; Defined at:
  3686 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  divisor         2    3[COMMON] int 
  3689 ;;  dividend        2    5[COMMON] int 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  sign            1    1[BANK0 ] unsigned char 
  3692 ;;  counter         1    0[BANK0 ] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  2    3[COMMON] int 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3702 ;;      Params:         4       0       0       0       0
  3703 ;;      Locals:         0       2       0       0       0
  3704 ;;      Temps:          1       0       0       0       0
  3705 ;;      Totals:         5       2       0       0       0
  3706 ;;Total ram usage:        7 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_scale
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           
  3717                           ;psect for function ___awmod
  3718  0000'                    ___awmod:
  3719  0000'                    l3829:	
  3720                           ;incstack = 0
  3721                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3722                           
  3723  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3724  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3725  0002' 0181'              	clrf	___awmod@sign
  3726  0003'                    l3831:
  3727  0003' 1F86'              	btfss	___awmod@dividend+1,7
  3728  0004' 2800'              	goto	u5881
  3729  0005' 2800'              	goto	u5880
  3730  0006'                    u5881:
  3731  0006' 2800'              	goto	l3837
  3732  0007'                    u5880:
  3733  0007'                    l3833:
  3734  0007' 0985'              	comf	___awmod@dividend,f
  3735  0008' 0986'              	comf	___awmod@dividend+1,f
  3736  0009' 0A85'              	incf	___awmod@dividend,f
  3737  000A' 1903               	skipnz
  3738  000B' 0A86'              	incf	___awmod@dividend+1,f
  3739  000C'                    l3835:
  3740  000C' 0181'              	clrf	___awmod@sign
  3741  000D' 0A81'              	incf	___awmod@sign,f
  3742  000E'                    l3837:
  3743  000E' 1F84'              	btfss	___awmod@divisor+1,7
  3744  000F' 2800'              	goto	u5891
  3745  0010' 2800'              	goto	u5890
  3746  0011'                    u5891:
  3747  0011' 2800'              	goto	l3841
  3748  0012'                    u5890:
  3749  0012'                    l3839:
  3750  0012' 0983'              	comf	___awmod@divisor,f
  3751  0013' 0984'              	comf	___awmod@divisor+1,f
  3752  0014' 0A83'              	incf	___awmod@divisor,f
  3753  0015' 1903               	skipnz
  3754  0016' 0A84'              	incf	___awmod@divisor+1,f
  3755  0017'                    l3841:
  3756  0017' 0803'              	movf	___awmod@divisor,w
  3757  0018' 0404'              	iorwf	___awmod@divisor+1,w
  3758  0019' 1903               	btfsc	3,2
  3759  001A' 2800'              	goto	u5901
  3760  001B' 2800'              	goto	u5900
  3761  001C'                    u5901:
  3762  001C' 2800'              	goto	l3859
  3763  001D'                    u5900:
  3764  001D'                    l3843:
  3765  001D' 0180'              	clrf	___awmod@counter
  3766  001E' 0A80'              	incf	___awmod@counter,f
  3767  001F' 2800'              	goto	l3849
  3768  0020'                    l3845:
  3769  0020' 3001               	movlw	1
  3770  0021'                    u5915:
  3771  0021' 1003               	clrc
  3772  0022' 0D83'              	rlf	___awmod@divisor,f
  3773  0023' 0D84'              	rlf	___awmod@divisor+1,f
  3774  0024' 3EFF               	addlw	-1
  3775  0025' 1D03               	skipz
  3776  0026' 2800'              	goto	u5915
  3777  0027'                    l3847:
  3778  0027' 3001               	movlw	1
  3779  0028' 0087'              	movwf	??___awmod
  3780  0029' 0807'              	movf	??___awmod,w
  3781  002A' 0780'              	addwf	___awmod@counter,f
  3782  002B'                    l3849:
  3783  002B' 1F84'              	btfss	___awmod@divisor+1,7
  3784  002C' 2800'              	goto	u5921
  3785  002D' 2800'              	goto	u5920
  3786  002E'                    u5921:
  3787  002E' 2800'              	goto	l3845
  3788  002F'                    u5920:
  3789  002F'                    l3851:
  3790  002F' 0804'              	movf	___awmod@divisor+1,w
  3791  0030' 0206'              	subwf	___awmod@dividend+1,w
  3792  0031' 1D03               	skipz
  3793  0032' 2800'              	goto	u5935
  3794  0033' 0803'              	movf	___awmod@divisor,w
  3795  0034' 0205'              	subwf	___awmod@dividend,w
  3796  0035'                    u5935:
  3797  0035' 1C03               	skipc
  3798  0036' 2800'              	goto	u5931
  3799  0037' 2800'              	goto	u5930
  3800  0038'                    u5931:
  3801  0038' 2800'              	goto	l3855
  3802  0039'                    u5930:
  3803  0039'                    l3853:
  3804  0039' 0803'              	movf	___awmod@divisor,w
  3805  003A' 0285'              	subwf	___awmod@dividend,f
  3806  003B' 0804'              	movf	___awmod@divisor+1,w
  3807  003C' 1C03               	skipc
  3808  003D' 0386'              	decf	___awmod@dividend+1,f
  3809  003E' 0286'              	subwf	___awmod@dividend+1,f
  3810  003F'                    l3855:
  3811  003F' 3001               	movlw	1
  3812  0040'                    u5945:
  3813  0040' 1003               	clrc
  3814  0041' 0C84'              	rrf	___awmod@divisor+1,f
  3815  0042' 0C83'              	rrf	___awmod@divisor,f
  3816  0043' 3EFF               	addlw	-1
  3817  0044' 1D03               	skipz
  3818  0045' 2800'              	goto	u5945
  3819  0046'                    l3857:
  3820  0046' 3001               	movlw	1
  3821  0047' 0280'              	subwf	___awmod@counter,f
  3822  0048' 1D03               	btfss	3,2
  3823  0049' 2800'              	goto	u5951
  3824  004A' 2800'              	goto	u5950
  3825  004B'                    u5951:
  3826  004B' 2800'              	goto	l3851
  3827  004C'                    u5950:
  3828  004C'                    l3859:
  3829  004C' 0801'              	movf	___awmod@sign,w
  3830  004D' 1903               	btfsc	3,2
  3831  004E' 2800'              	goto	u5961
  3832  004F' 2800'              	goto	u5960
  3833  0050'                    u5961:
  3834  0050' 2800'              	goto	l3863
  3835  0051'                    u5960:
  3836  0051'                    l3861:
  3837  0051' 0985'              	comf	___awmod@dividend,f
  3838  0052' 0986'              	comf	___awmod@dividend+1,f
  3839  0053' 0A85'              	incf	___awmod@dividend,f
  3840  0054' 1903               	skipnz
  3841  0055' 0A86'              	incf	___awmod@dividend+1,f
  3842  0056'                    l3863:
  3843  0056' 0806'              	movf	___awmod@dividend+1,w
  3844  0057' 0084'              	movwf	?___awmod+1
  3845  0058' 0805'              	movf	___awmod@dividend,w
  3846  0059' 0083'              	movwf	?___awmod
  3847  005A'                    l588:
  3848  005A' 0008               	return
  3849  005B'                    __end_of___awmod:
  3850                           
  3851                           	psect	text4
  3852  0000'                    __ptext4:	
  3853 ;; *************** function ___awdiv *****************
  3854 ;; Defined at:
  3855 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  divisor         2    2[BANK0 ] int 
  3858 ;;  dividend        2    4[BANK0 ] int 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  quotient        2    9[BANK0 ] int 
  3861 ;;  sign            1    8[BANK0 ] unsigned char 
  3862 ;;  counter         1    7[BANK0 ] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  2    2[BANK0 ] int 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3872 ;;      Params:         0       4       0       0       0
  3873 ;;      Locals:         0       4       0       0       0
  3874 ;;      Temps:          0       1       0       0       0
  3875 ;;      Totals:         0       9       0       0       0
  3876 ;;Total ram usage:        9 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    1
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_scale
  3883 ;;		_sprintf
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function ___awdiv
  3889  0000'                    ___awdiv:
  3890  0000'                    l3785:	
  3891                           ;incstack = 0
  3892                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3893                           
  3894  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3895  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3896  0002' 0188'              	clrf	___awdiv@sign
  3897  0003'                    l3787:
  3898  0003' 1F83'              	btfss	___awdiv@divisor+1,7
  3899  0004' 2800'              	goto	u5781
  3900  0005' 2800'              	goto	u5780
  3901  0006'                    u5781:
  3902  0006' 2800'              	goto	l3793
  3903  0007'                    u5780:
  3904  0007'                    l3789:
  3905  0007' 0982'              	comf	___awdiv@divisor,f
  3906  0008' 0983'              	comf	___awdiv@divisor+1,f
  3907  0009' 0A82'              	incf	___awdiv@divisor,f
  3908  000A' 1903               	skipnz
  3909  000B' 0A83'              	incf	___awdiv@divisor+1,f
  3910  000C'                    l3791:
  3911  000C' 0188'              	clrf	___awdiv@sign
  3912  000D' 0A88'              	incf	___awdiv@sign,f
  3913  000E'                    l3793:
  3914  000E' 1F85'              	btfss	___awdiv@dividend+1,7
  3915  000F' 2800'              	goto	u5791
  3916  0010' 2800'              	goto	u5790
  3917  0011'                    u5791:
  3918  0011' 2800'              	goto	l3799
  3919  0012'                    u5790:
  3920  0012'                    l3795:
  3921  0012' 0984'              	comf	___awdiv@dividend,f
  3922  0013' 0985'              	comf	___awdiv@dividend+1,f
  3923  0014' 0A84'              	incf	___awdiv@dividend,f
  3924  0015' 1903               	skipnz
  3925  0016' 0A85'              	incf	___awdiv@dividend+1,f
  3926  0017'                    l3797:
  3927  0017' 3001               	movlw	1
  3928  0018' 0086'              	movwf	??___awdiv
  3929  0019' 0806'              	movf	??___awdiv,w
  3930  001A' 0688'              	xorwf	___awdiv@sign,f
  3931  001B'                    l3799:
  3932  001B' 0189'              	clrf	___awdiv@quotient
  3933  001C' 018A'              	clrf	___awdiv@quotient+1
  3934  001D'                    l3801:
  3935  001D' 0802'              	movf	___awdiv@divisor,w
  3936  001E' 0403'              	iorwf	___awdiv@divisor+1,w
  3937  001F' 1903               	btfsc	3,2
  3938  0020' 2800'              	goto	u5801
  3939  0021' 2800'              	goto	u5800
  3940  0022'                    u5801:
  3941  0022' 2800'              	goto	l3821
  3942  0023'                    u5800:
  3943  0023'                    l3803:
  3944  0023' 0187'              	clrf	___awdiv@counter
  3945  0024' 0A87'              	incf	___awdiv@counter,f
  3946  0025' 2800'              	goto	l3809
  3947  0026'                    l3805:
  3948  0026' 3001               	movlw	1
  3949  0027'                    u5815:
  3950  0027' 1003               	clrc
  3951  0028' 0D82'              	rlf	___awdiv@divisor,f
  3952  0029' 0D83'              	rlf	___awdiv@divisor+1,f
  3953  002A' 3EFF               	addlw	-1
  3954  002B' 1D03               	skipz
  3955  002C' 2800'              	goto	u5815
  3956  002D'                    l3807:
  3957  002D' 3001               	movlw	1
  3958  002E' 0086'              	movwf	??___awdiv
  3959  002F' 0806'              	movf	??___awdiv,w
  3960  0030' 0787'              	addwf	___awdiv@counter,f
  3961  0031'                    l3809:
  3962  0031' 1F83'              	btfss	___awdiv@divisor+1,7
  3963  0032' 2800'              	goto	u5821
  3964  0033' 2800'              	goto	u5820
  3965  0034'                    u5821:
  3966  0034' 2800'              	goto	l3805
  3967  0035'                    u5820:
  3968  0035'                    l3811:
  3969  0035' 3001               	movlw	1
  3970  0036'                    u5835:
  3971  0036' 1003               	clrc
  3972  0037' 0D89'              	rlf	___awdiv@quotient,f
  3973  0038' 0D8A'              	rlf	___awdiv@quotient+1,f
  3974  0039' 3EFF               	addlw	-1
  3975  003A' 1D03               	skipz
  3976  003B' 2800'              	goto	u5835
  3977  003C' 0803'              	movf	___awdiv@divisor+1,w
  3978  003D' 0205'              	subwf	___awdiv@dividend+1,w
  3979  003E' 1D03               	skipz
  3980  003F' 2800'              	goto	u5845
  3981  0040' 0802'              	movf	___awdiv@divisor,w
  3982  0041' 0204'              	subwf	___awdiv@dividend,w
  3983  0042'                    u5845:
  3984  0042' 1C03               	skipc
  3985  0043' 2800'              	goto	u5841
  3986  0044' 2800'              	goto	u5840
  3987  0045'                    u5841:
  3988  0045' 2800'              	goto	l3817
  3989  0046'                    u5840:
  3990  0046'                    l3813:
  3991  0046' 0802'              	movf	___awdiv@divisor,w
  3992  0047' 0284'              	subwf	___awdiv@dividend,f
  3993  0048' 0803'              	movf	___awdiv@divisor+1,w
  3994  0049' 1C03               	skipc
  3995  004A' 0385'              	decf	___awdiv@dividend+1,f
  3996  004B' 0285'              	subwf	___awdiv@dividend+1,f
  3997  004C'                    l3815:
  3998  004C' 1409'              	bsf	___awdiv@quotient,0
  3999  004D'                    l3817:
  4000  004D' 3001               	movlw	1
  4001  004E'                    u5855:
  4002  004E' 1003               	clrc
  4003  004F' 0C83'              	rrf	___awdiv@divisor+1,f
  4004  0050' 0C82'              	rrf	___awdiv@divisor,f
  4005  0051' 3EFF               	addlw	-1
  4006  0052' 1D03               	skipz
  4007  0053' 2800'              	goto	u5855
  4008  0054'                    l3819:
  4009  0054' 3001               	movlw	1
  4010  0055' 0287'              	subwf	___awdiv@counter,f
  4011  0056' 1D03               	btfss	3,2
  4012  0057' 2800'              	goto	u5861
  4013  0058' 2800'              	goto	u5860
  4014  0059'                    u5861:
  4015  0059' 2800'              	goto	l3811
  4016  005A'                    u5860:
  4017  005A'                    l3821:
  4018  005A' 0808'              	movf	___awdiv@sign,w
  4019  005B' 1903               	btfsc	3,2
  4020  005C' 2800'              	goto	u5871
  4021  005D' 2800'              	goto	u5870
  4022  005E'                    u5871:
  4023  005E' 2800'              	goto	l3825
  4024  005F'                    u5870:
  4025  005F'                    l3823:
  4026  005F' 0989'              	comf	___awdiv@quotient,f
  4027  0060' 098A'              	comf	___awdiv@quotient+1,f
  4028  0061' 0A89'              	incf	___awdiv@quotient,f
  4029  0062' 1903               	skipnz
  4030  0063' 0A8A'              	incf	___awdiv@quotient+1,f
  4031  0064'                    l3825:
  4032  0064' 080A'              	movf	___awdiv@quotient+1,w
  4033  0065' 0083'              	movwf	?___awdiv+1
  4034  0066' 0809'              	movf	___awdiv@quotient,w
  4035  0067' 0082'              	movwf	?___awdiv
  4036  0068'                    l575:
  4037  0068' 0008               	return
  4038  0069'                    __end_of___awdiv:
  4039                           
  4040                           	psect	text5
  4041  0000'                    __ptext5:	
  4042 ;; *************** function _isdigit *****************
  4043 ;; Defined at:
  4044 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  c               1    wreg     unsigned char 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  c               1    4[COMMON] unsigned char 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;		None               void
  4051 ;; Registers used:
  4052 ;;		wreg, status,2, status,0
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4058 ;;      Params:         0       0       0       0       0
  4059 ;;      Locals:         2       0       0       0       0
  4060 ;;      Temps:          0       0       0       0       0
  4061 ;;      Totals:         2       0       0       0       0
  4062 ;;Total ram usage:        2 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:    1
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_sprintf
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           
  4073                           ;psect for function _isdigit
  4074  0000'                    _isdigit:
  4075                           
  4076                           ;incstack = 0
  4077                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4078                           ;isdigit@c stored from wreg
  4079  0000' 0084'              	movwf	isdigit@c
  4080  0001'                    l2959:
  4081  0001' 0183'              	clrf	_isdigit$1087
  4082  0002'                    l2961:
  4083  0002' 303A               	movlw	58
  4084  0003' 0204'              	subwf	isdigit@c,w
  4085  0004' 1803               	skipnc
  4086  0005' 2800'              	goto	u4361
  4087  0006' 2800'              	goto	u4360
  4088  0007'                    u4361:
  4089  0007' 2800'              	goto	l2967
  4090  0008'                    u4360:
  4091  0008'                    l2963:
  4092  0008' 3030               	movlw	48
  4093  0009' 0204'              	subwf	isdigit@c,w
  4094  000A' 1C03               	skipc
  4095  000B' 2800'              	goto	u4371
  4096  000C' 2800'              	goto	u4370
  4097  000D'                    u4371:
  4098  000D' 2800'              	goto	l2967
  4099  000E'                    u4370:
  4100  000E'                    l2965:
  4101  000E' 0183'              	clrf	_isdigit$1087
  4102  000F' 0A83'              	incf	_isdigit$1087,f
  4103  0010'                    l2967:
  4104  0010' 0C03'              	rrf	_isdigit$1087,w
  4105  0011'                    l909:
  4106  0011' 0008               	return
  4107  0012'                    __end_of_isdigit:
  4108                           
  4109                           	psect	text6
  4110  0000'                    __ptext6:	
  4111 ;; *************** function _fround *****************
  4112 ;; Defined at:
  4113 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  prec            1    wreg     unsigned char 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  prec            1   56[BANK0 ] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  4   37[BANK0 ] unsigned char 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4127 ;;      Params:         0       4       0       0       0
  4128 ;;      Locals:         0       9       0       0       0
  4129 ;;      Temps:          0       7       0       0       0
  4130 ;;      Totals:         0      20       0       0       0
  4131 ;;Total ram usage:       20 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    3
  4134 ;; This function calls:
  4135 ;;		___flmul
  4136 ;;		___lwdiv
  4137 ;;		___lwmod
  4138 ;; This function is called by:
  4139 ;;		_sprintf
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           
  4144                           ;psect for function _fround
  4145  0000'                    _fround:
  4146                           
  4147                           ;incstack = 0
  4148                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4149                           ;fround@prec stored from wreg
  4150  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4151  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4152  0002' 00B8'              	movwf	fround@prec
  4153  0003'                    l3937:
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4156  0003' 306E               	movlw	110
  4157  0004' 0238'              	subwf	fround@prec,w
  4158  0005' 1C03               	skipc
  4159  0006' 2800'              	goto	u6101
  4160  0007' 2800'              	goto	u6100
  4161  0008'                    u6101:
  4162  0008' 2800'              	goto	l3945
  4163  0009'                    u6100:
  4164  0009'                    l3939:
  4165                           
  4166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4167  0009' 303F               	movlw	63
  4168  000A' 008E'              	movwf	___flmul@b+3
  4169  000B' 3000               	movlw	0
  4170  000C' 008D'              	movwf	___flmul@b+2
  4171  000D' 3000               	movlw	0
  4172  000E' 008C'              	movwf	___flmul@b+1
  4173  000F' 3000               	movlw	0
  4174  0010' 008B'              	movwf	___flmul@b
  4175  0011' 3064               	movlw	100
  4176  0012' 0081'              	movwf	___lwdiv@divisor
  4177  0013' 3000               	movlw	0
  4178  0014' 0082'              	movwf	___lwdiv@divisor+1
  4179  0015' 0838'              	movf	fround@prec,w
  4180  0016' 00A9'              	movwf	??_fround
  4181  0017' 01AA'              	clrf	??_fround+1
  4182  0018' 0829'              	movf	??_fround,w
  4183  0019' 0083'              	movwf	___lwdiv@dividend
  4184  001A' 082A'              	movf	??_fround+1,w
  4185  001B' 0084'              	movwf	___lwdiv@dividend+1
  4186  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4187  0021' 1283               	bcf	3,5	;RP0=0, select bank0
  4188  0022' 1303               	bcf	3,6	;RP1=0, select bank0
  4189  0023' 0801'              	movf	?___lwdiv,w
  4190  0024' 00AB'              	movwf	??_fround+2
  4191  0025' 3001               	movlw	1
  4192  0026'                    u6115:
  4193  0026' 1003               	clrc
  4194  0027' 0DAB'              	rlf	??_fround+2,f
  4195  0028' 3EFF               	addlw	-1
  4196  0029' 1D03               	skipz
  4197  002A' 2800'              	goto	u6115
  4198  002B' 1003               	clrc
  4199  002C' 0D2B'              	rlf	??_fround+2,w
  4200  002D' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4201  002E' 0084               	movwf	4
  4202  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4203  0034' 00AC'              	movwf	??_fround+3
  4204  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4205  003A' 00AD'              	movwf	??_fround+4
  4206  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4207  0040' 00AE'              	movwf	??_fround+5
  4208  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4209  0046' 00AF'              	movwf	??_fround+6
  4210  0047' 082F'              	movf	??_fround+6,w
  4211  0048' 0092'              	movwf	___flmul@a+3
  4212  0049' 082E'              	movf	??_fround+5,w
  4213  004A' 0091'              	movwf	___flmul@a+2
  4214  004B' 082D'              	movf	??_fround+4,w
  4215  004C' 0090'              	movwf	___flmul@a+1
  4216  004D' 082C'              	movf	??_fround+3,w
  4217  004E' 008F'              	movwf	___flmul@a
  4218  004F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4219  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  4220  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  4221  0056' 080E'              	movf	?___flmul+3,w
  4222  0057' 00B7'              	movwf	_fround$1270+3
  4223  0058' 080D'              	movf	?___flmul+2,w
  4224  0059' 00B6'              	movwf	_fround$1270+2
  4225  005A' 080C'              	movf	?___flmul+1,w
  4226  005B' 00B5'              	movwf	_fround$1270+1
  4227  005C' 080B'              	movf	?___flmul,w
  4228  005D' 00B4'              	movwf	_fround$1270
  4229                           
  4230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4231  005E' 300A               	movlw	10
  4232  005F' 0081'              	movwf	___lwdiv@divisor
  4233  0060' 3000               	movlw	0
  4234  0061' 0082'              	movwf	___lwdiv@divisor+1
  4235  0062' 0838'              	movf	fround@prec,w
  4236  0063' 00A9'              	movwf	??_fround
  4237  0064' 01AA'              	clrf	??_fround+1
  4238  0065' 0829'              	movf	??_fround,w
  4239  0066' 0085'              	movwf	___lwmod@dividend
  4240  0067' 082A'              	movf	??_fround+1,w
  4241  0068' 0086'              	movwf	___lwmod@dividend+1
  4242  0069' 3064               	movlw	100
  4243  006A' 0083'              	movwf	___lwmod@divisor
  4244  006B' 3000               	movlw	0
  4245  006C' 0084'              	movwf	___lwmod@divisor+1
  4246  006D' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4247  0072' 0804'              	movf	?___lwmod+1,w
  4248  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  4249  0074' 1303               	bcf	3,6	;RP1=0, select bank0
  4250  0075' 0084'              	movwf	___lwdiv@dividend+1
  4251  0076' 0803'              	movf	?___lwmod,w
  4252  0077' 0083'              	movwf	___lwdiv@dividend
  4253  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4254  007D' 1283               	bcf	3,5	;RP0=0, select bank0
  4255  007E' 1303               	bcf	3,6	;RP1=0, select bank0
  4256  007F' 0801'              	movf	?___lwdiv,w
  4257  0080' 00AB'              	movwf	??_fround+2
  4258  0081' 3001               	movlw	1
  4259  0082'                    u6125:
  4260  0082' 1003               	clrc
  4261  0083' 0DAB'              	rlf	??_fround+2,f
  4262  0084' 3EFF               	addlw	-1
  4263  0085' 1D03               	skipz
  4264  0086' 2800'              	goto	u6125
  4265  0087' 1003               	clrc
  4266  0088' 0D2B'              	rlf	??_fround+2,w
  4267  0089' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4268  008A' 0084               	movwf	4
  4269  008B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4270  0090' 00AC'              	movwf	??_fround+3
  4271  0091' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4272  0096' 00AD'              	movwf	??_fround+4
  4273  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4274  009C' 00AE'              	movwf	??_fround+5
  4275  009D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4276  00A2' 00AF'              	movwf	??_fround+6
  4277  00A3' 082F'              	movf	??_fround+6,w
  4278  00A4' 008E'              	movwf	___flmul@b+3
  4279  00A5' 082E'              	movf	??_fround+5,w
  4280  00A6' 008D'              	movwf	___flmul@b+2
  4281  00A7' 082D'              	movf	??_fround+4,w
  4282  00A8' 008C'              	movwf	___flmul@b+1
  4283  00A9' 082C'              	movf	??_fround+3,w
  4284  00AA' 008B'              	movwf	___flmul@b
  4285  00AB' 0837'              	movf	_fround$1270+3,w
  4286  00AC' 0092'              	movwf	___flmul@a+3
  4287  00AD' 0836'              	movf	_fround$1270+2,w
  4288  00AE' 0091'              	movwf	___flmul@a+2
  4289  00AF' 0835'              	movf	_fround$1270+1,w
  4290  00B0' 0090'              	movwf	___flmul@a+1
  4291  00B1' 0834'              	movf	_fround$1270,w
  4292  00B2' 008F'              	movwf	___flmul@a
  4293  00B3' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4294  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  4295  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
  4296  00BA' 080E'              	movf	?___flmul+3,w
  4297  00BB' 00B3'              	movwf	_fround$1271+3
  4298  00BC' 080D'              	movf	?___flmul+2,w
  4299  00BD' 00B2'              	movwf	_fround$1271+2
  4300  00BE' 080C'              	movf	?___flmul+1,w
  4301  00BF' 00B1'              	movwf	_fround$1271+1
  4302  00C0' 080B'              	movf	?___flmul,w
  4303  00C1' 00B0'              	movwf	_fround$1271
  4304                           
  4305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4306  00C2' 300A               	movlw	10
  4307  00C3' 0083'              	movwf	___lwmod@divisor
  4308  00C4' 3000               	movlw	0
  4309  00C5' 0084'              	movwf	___lwmod@divisor+1
  4310  00C6' 0838'              	movf	fround@prec,w
  4311  00C7' 00A9'              	movwf	??_fround
  4312  00C8' 01AA'              	clrf	??_fround+1
  4313  00C9' 0829'              	movf	??_fround,w
  4314  00CA' 0085'              	movwf	___lwmod@dividend
  4315  00CB' 082A'              	movf	??_fround+1,w
  4316  00CC' 0086'              	movwf	___lwmod@dividend+1
  4317  00CD' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4318  00D2' 0803'              	movf	?___lwmod,w
  4319  00D3' 1283               	bcf	3,5	;RP0=0, select bank0
  4320  00D4' 1303               	bcf	3,6	;RP1=0, select bank0
  4321  00D5' 00AB'              	movwf	??_fround+2
  4322  00D6' 3001               	movlw	1
  4323  00D7'                    u6135:
  4324  00D7' 1003               	clrc
  4325  00D8' 0DAB'              	rlf	??_fround+2,f
  4326  00D9' 3EFF               	addlw	-1
  4327  00DA' 1D03               	skipz
  4328  00DB' 2800'              	goto	u6135
  4329  00DC' 1003               	clrc
  4330  00DD' 0D2B'              	rlf	??_fround+2,w
  4331  00DE' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4332  00DF' 0084               	movwf	4
  4333  00E0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4334  00E5' 00AC'              	movwf	??_fround+3
  4335  00E6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4336  00EB' 00AD'              	movwf	??_fround+4
  4337  00EC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4338  00F1' 00AE'              	movwf	??_fround+5
  4339  00F2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4340  00F7' 00AF'              	movwf	??_fround+6
  4341  00F8' 082F'              	movf	??_fround+6,w
  4342  00F9' 008E'              	movwf	___flmul@b+3
  4343  00FA' 082E'              	movf	??_fround+5,w
  4344  00FB' 008D'              	movwf	___flmul@b+2
  4345  00FC' 082D'              	movf	??_fround+4,w
  4346  00FD' 008C'              	movwf	___flmul@b+1
  4347  00FE' 082C'              	movf	??_fround+3,w
  4348  00FF' 008B'              	movwf	___flmul@b
  4349  0100' 0833'              	movf	_fround$1271+3,w
  4350  0101' 0092'              	movwf	___flmul@a+3
  4351  0102' 0832'              	movf	_fround$1271+2,w
  4352  0103' 0091'              	movwf	___flmul@a+2
  4353  0104' 0831'              	movf	_fround$1271+1,w
  4354  0105' 0090'              	movwf	___flmul@a+1
  4355  0106' 0830'              	movf	_fround$1271,w
  4356  0107' 008F'              	movwf	___flmul@a
  4357  0108' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4358  010D' 1283               	bcf	3,5	;RP0=0, select bank0
  4359  010E' 1303               	bcf	3,6	;RP1=0, select bank0
  4360  010F' 080E'              	movf	?___flmul+3,w
  4361  0110' 00A8'              	movwf	?_fround+3
  4362  0111' 080D'              	movf	?___flmul+2,w
  4363  0112' 00A7'              	movwf	?_fround+2
  4364  0113' 080C'              	movf	?___flmul+1,w
  4365  0114' 00A6'              	movwf	?_fround+1
  4366  0115' 080B'              	movf	?___flmul,w
  4367  0116' 00A5'              	movwf	?_fround
  4368  0117' 2800'              	goto	l319
  4369  0118'                    l3945:
  4370  0118' 300B               	movlw	11
  4371  0119' 0238'              	subwf	fround@prec,w
  4372  011A' 1C03               	skipc
  4373  011B' 2800'              	goto	u6141
  4374  011C' 2800'              	goto	u6140
  4375  011D'                    u6141:
  4376  011D' 2800'              	goto	l3951
  4377  011E'                    u6140:
  4378  011E'                    l3947:
  4379                           
  4380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4381  011E' 303F               	movlw	63
  4382  011F' 008E'              	movwf	___flmul@b+3
  4383  0120' 3000               	movlw	0
  4384  0121' 008D'              	movwf	___flmul@b+2
  4385  0122' 3000               	movlw	0
  4386  0123' 008C'              	movwf	___flmul@b+1
  4387  0124' 3000               	movlw	0
  4388  0125' 008B'              	movwf	___flmul@b
  4389  0126' 300A               	movlw	10
  4390  0127' 0081'              	movwf	___lwdiv@divisor
  4391  0128' 3000               	movlw	0
  4392  0129' 0082'              	movwf	___lwdiv@divisor+1
  4393  012A' 0838'              	movf	fround@prec,w
  4394  012B' 00A9'              	movwf	??_fround
  4395  012C' 01AA'              	clrf	??_fround+1
  4396  012D' 0829'              	movf	??_fround,w
  4397  012E' 0083'              	movwf	___lwdiv@dividend
  4398  012F' 082A'              	movf	??_fround+1,w
  4399  0130' 0084'              	movwf	___lwdiv@dividend+1
  4400  0131' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4401  0136' 1283               	bcf	3,5	;RP0=0, select bank0
  4402  0137' 1303               	bcf	3,6	;RP1=0, select bank0
  4403  0138' 0801'              	movf	?___lwdiv,w
  4404  0139' 00AB'              	movwf	??_fround+2
  4405  013A' 3001               	movlw	1
  4406  013B'                    u6155:
  4407  013B' 1003               	clrc
  4408  013C' 0DAB'              	rlf	??_fround+2,f
  4409  013D' 3EFF               	addlw	-1
  4410  013E' 1D03               	skipz
  4411  013F' 2800'              	goto	u6155
  4412  0140' 1003               	clrc
  4413  0141' 0D2B'              	rlf	??_fround+2,w
  4414  0142' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4415  0143' 0084               	movwf	4
  4416  0144' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4417  0149' 00AC'              	movwf	??_fround+3
  4418  014A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4419  014F' 00AD'              	movwf	??_fround+4
  4420  0150' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4421  0155' 00AE'              	movwf	??_fround+5
  4422  0156' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4423  015B' 00AF'              	movwf	??_fround+6
  4424  015C' 082F'              	movf	??_fround+6,w
  4425  015D' 0092'              	movwf	___flmul@a+3
  4426  015E' 082E'              	movf	??_fround+5,w
  4427  015F' 0091'              	movwf	___flmul@a+2
  4428  0160' 082D'              	movf	??_fround+4,w
  4429  0161' 0090'              	movwf	___flmul@a+1
  4430  0162' 082C'              	movf	??_fround+3,w
  4431  0163' 008F'              	movwf	___flmul@a
  4432  0164' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4433  0169' 1283               	bcf	3,5	;RP0=0, select bank0
  4434  016A' 1303               	bcf	3,6	;RP1=0, select bank0
  4435  016B' 080E'              	movf	?___flmul+3,w
  4436  016C' 00B7'              	movwf	_fround$1270+3
  4437  016D' 080D'              	movf	?___flmul+2,w
  4438  016E' 00B6'              	movwf	_fround$1270+2
  4439  016F' 080C'              	movf	?___flmul+1,w
  4440  0170' 00B5'              	movwf	_fround$1270+1
  4441  0171' 080B'              	movf	?___flmul,w
  4442  0172' 00B4'              	movwf	_fround$1270
  4443                           
  4444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4445  0173' 300A               	movlw	10
  4446  0174' 0083'              	movwf	___lwmod@divisor
  4447  0175' 3000               	movlw	0
  4448  0176' 0084'              	movwf	___lwmod@divisor+1
  4449  0177' 0838'              	movf	fround@prec,w
  4450  0178' 00A9'              	movwf	??_fround
  4451  0179' 01AA'              	clrf	??_fround+1
  4452  017A' 0829'              	movf	??_fround,w
  4453  017B' 0085'              	movwf	___lwmod@dividend
  4454  017C' 082A'              	movf	??_fround+1,w
  4455  017D' 0086'              	movwf	___lwmod@dividend+1
  4456  017E' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4457  0183' 0803'              	movf	?___lwmod,w
  4458  0184' 1283               	bcf	3,5	;RP0=0, select bank0
  4459  0185' 1303               	bcf	3,6	;RP1=0, select bank0
  4460  0186' 00AB'              	movwf	??_fround+2
  4461  0187' 3001               	movlw	1
  4462  0188'                    u6165:
  4463  0188' 1003               	clrc
  4464  0189' 0DAB'              	rlf	??_fround+2,f
  4465  018A' 3EFF               	addlw	-1
  4466  018B' 1D03               	skipz
  4467  018C' 2800'              	goto	u6165
  4468  018D' 1003               	clrc
  4469  018E' 0D2B'              	rlf	??_fround+2,w
  4470  018F' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4471  0190' 0084               	movwf	4
  4472  0191' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4473  0196' 00AC'              	movwf	??_fround+3
  4474  0197' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4475  019C' 00AD'              	movwf	??_fround+4
  4476  019D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4477  01A2' 00AE'              	movwf	??_fround+5
  4478  01A3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4479  01A8' 00AF'              	movwf	??_fround+6
  4480  01A9' 082F'              	movf	??_fround+6,w
  4481  01AA' 008E'              	movwf	___flmul@b+3
  4482  01AB' 082E'              	movf	??_fround+5,w
  4483  01AC' 008D'              	movwf	___flmul@b+2
  4484  01AD' 082D'              	movf	??_fround+4,w
  4485  01AE' 008C'              	movwf	___flmul@b+1
  4486  01AF' 082C'              	movf	??_fround+3,w
  4487  01B0' 008B'              	movwf	___flmul@b
  4488  01B1' 0837'              	movf	_fround$1270+3,w
  4489  01B2' 0092'              	movwf	___flmul@a+3
  4490  01B3' 0836'              	movf	_fround$1270+2,w
  4491  01B4' 0091'              	movwf	___flmul@a+2
  4492  01B5' 0835'              	movf	_fround$1270+1,w
  4493  01B6' 0090'              	movwf	___flmul@a+1
  4494  01B7' 0834'              	movf	_fround$1270,w
  4495  01B8' 008F'              	movwf	___flmul@a
  4496  01B9' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4497  01BE' 1283               	bcf	3,5	;RP0=0, select bank0
  4498  01BF' 1303               	bcf	3,6	;RP1=0, select bank0
  4499  01C0' 080E'              	movf	?___flmul+3,w
  4500  01C1' 00A8'              	movwf	?_fround+3
  4501  01C2' 080D'              	movf	?___flmul+2,w
  4502  01C3' 00A7'              	movwf	?_fround+2
  4503  01C4' 080C'              	movf	?___flmul+1,w
  4504  01C5' 00A6'              	movwf	?_fround+1
  4505  01C6' 080B'              	movf	?___flmul,w
  4506  01C7' 00A5'              	movwf	?_fround
  4507  01C8' 2800'              	goto	l319
  4508  01C9'                    l3951:
  4509                           
  4510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4511  01C9' 303F               	movlw	63
  4512  01CA' 008E'              	movwf	___flmul@b+3
  4513  01CB' 3000               	movlw	0
  4514  01CC' 008D'              	movwf	___flmul@b+2
  4515  01CD' 3000               	movlw	0
  4516  01CE' 008C'              	movwf	___flmul@b+1
  4517  01CF' 3000               	movlw	0
  4518  01D0' 008B'              	movwf	___flmul@b
  4519  01D1' 0838'              	movf	fround@prec,w
  4520  01D2' 00A9'              	movwf	??_fround
  4521  01D3' 3001               	movlw	1
  4522  01D4'                    u6175:
  4523  01D4' 1003               	clrc
  4524  01D5' 0DA9'              	rlf	??_fround,f
  4525  01D6' 3EFF               	addlw	-1
  4526  01D7' 1D03               	skipz
  4527  01D8' 2800'              	goto	u6175
  4528  01D9' 1003               	clrc
  4529  01DA' 0D29'              	rlf	??_fround,w
  4530  01DB' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4531  01DC' 0084               	movwf	4
  4532  01DD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4533  01E2' 00AA'              	movwf	??_fround+1
  4534  01E3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4535  01E8' 00AB'              	movwf	??_fround+2
  4536  01E9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4537  01EE' 00AC'              	movwf	??_fround+3
  4538  01EF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4539  01F4' 00AD'              	movwf	??_fround+4
  4540  01F5' 082D'              	movf	??_fround+4,w
  4541  01F6' 0092'              	movwf	___flmul@a+3
  4542  01F7' 082C'              	movf	??_fround+3,w
  4543  01F8' 0091'              	movwf	___flmul@a+2
  4544  01F9' 082B'              	movf	??_fround+2,w
  4545  01FA' 0090'              	movwf	___flmul@a+1
  4546  01FB' 082A'              	movf	??_fround+1,w
  4547  01FC' 008F'              	movwf	___flmul@a
  4548  01FD' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4549  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  4550  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  4551  0204' 080E'              	movf	?___flmul+3,w
  4552  0205' 00A8'              	movwf	?_fround+3
  4553  0206' 080D'              	movf	?___flmul+2,w
  4554  0207' 00A7'              	movwf	?_fround+2
  4555  0208' 080C'              	movf	?___flmul+1,w
  4556  0209' 00A6'              	movwf	?_fround+1
  4557  020A' 080B'              	movf	?___flmul,w
  4558  020B' 00A5'              	movwf	?_fround
  4559  020C'                    l319:
  4560  020C' 0008               	return
  4561  020D'                    __end_of_fround:
  4562                           
  4563                           	psect	text7
  4564  0000'                    __ptext7:	
  4565 ;; *************** function ___lwmod *****************
  4566 ;; Defined at:
  4567 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  divisor         2    3[COMMON] unsigned int 
  4570 ;;  dividend        2    5[COMMON] unsigned int 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  counter         1    0[BANK0 ] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  2    3[COMMON] unsigned int 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4582 ;;      Params:         4       0       0       0       0
  4583 ;;      Locals:         0       1       0       0       0
  4584 ;;      Temps:          1       0       0       0       0
  4585 ;;      Totals:         5       1       0       0       0
  4586 ;;Total ram usage:        6 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    1
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_fround
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           
  4597                           ;psect for function ___lwmod
  4598  0000'                    ___lwmod:
  4599  0000'                    l3893:	
  4600                           ;incstack = 0
  4601                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4602                           
  4603  0000' 0803'              	movf	___lwmod@divisor,w
  4604  0001' 0404'              	iorwf	___lwmod@divisor+1,w
  4605  0002' 1903               	btfsc	3,2
  4606  0003' 2800'              	goto	u6041
  4607  0004' 2800'              	goto	u6040
  4608  0005'                    u6041:
  4609  0005' 2800'              	goto	l3911
  4610  0006'                    u6040:
  4611  0006'                    l3895:
  4612  0006' 1283               	bcf	3,5	;RP0=0, select bank0
  4613  0007' 1303               	bcf	3,6	;RP1=0, select bank0
  4614  0008' 0180'              	clrf	___lwmod@counter
  4615  0009' 0A80'              	incf	___lwmod@counter,f
  4616  000A' 2800'              	goto	l3901
  4617  000B'                    l3897:
  4618  000B' 3001               	movlw	1
  4619  000C'                    u6055:
  4620  000C' 1003               	clrc
  4621  000D' 0D83'              	rlf	___lwmod@divisor,f
  4622  000E' 0D84'              	rlf	___lwmod@divisor+1,f
  4623  000F' 3EFF               	addlw	-1
  4624  0010' 1D03               	skipz
  4625  0011' 2800'              	goto	u6055
  4626  0012'                    l3899:
  4627  0012' 3001               	movlw	1
  4628  0013' 0087'              	movwf	??___lwmod
  4629  0014' 0807'              	movf	??___lwmod,w
  4630  0015' 0780'              	addwf	___lwmod@counter,f
  4631  0016'                    l3901:
  4632  0016' 1F84'              	btfss	___lwmod@divisor+1,7
  4633  0017' 2800'              	goto	u6061
  4634  0018' 2800'              	goto	u6060
  4635  0019'                    u6061:
  4636  0019' 2800'              	goto	l3897
  4637  001A'                    u6060:
  4638  001A'                    l3903:
  4639  001A' 0804'              	movf	___lwmod@divisor+1,w
  4640  001B' 0206'              	subwf	___lwmod@dividend+1,w
  4641  001C' 1D03               	skipz
  4642  001D' 2800'              	goto	u6075
  4643  001E' 0803'              	movf	___lwmod@divisor,w
  4644  001F' 0205'              	subwf	___lwmod@dividend,w
  4645  0020'                    u6075:
  4646  0020' 1C03               	skipc
  4647  0021' 2800'              	goto	u6071
  4648  0022' 2800'              	goto	u6070
  4649  0023'                    u6071:
  4650  0023' 2800'              	goto	l3907
  4651  0024'                    u6070:
  4652  0024'                    l3905:
  4653  0024' 0803'              	movf	___lwmod@divisor,w
  4654  0025' 0285'              	subwf	___lwmod@dividend,f
  4655  0026' 0804'              	movf	___lwmod@divisor+1,w
  4656  0027' 1C03               	skipc
  4657  0028' 0386'              	decf	___lwmod@dividend+1,f
  4658  0029' 0286'              	subwf	___lwmod@dividend+1,f
  4659  002A'                    l3907:
  4660  002A' 3001               	movlw	1
  4661  002B'                    u6085:
  4662  002B' 1003               	clrc
  4663  002C' 0C84'              	rrf	___lwmod@divisor+1,f
  4664  002D' 0C83'              	rrf	___lwmod@divisor,f
  4665  002E' 3EFF               	addlw	-1
  4666  002F' 1D03               	skipz
  4667  0030' 2800'              	goto	u6085
  4668  0031'                    l3909:
  4669  0031' 3001               	movlw	1
  4670  0032' 0280'              	subwf	___lwmod@counter,f
  4671  0033' 1D03               	btfss	3,2
  4672  0034' 2800'              	goto	u6091
  4673  0035' 2800'              	goto	u6090
  4674  0036'                    u6091:
  4675  0036' 2800'              	goto	l3903
  4676  0037'                    u6090:
  4677  0037'                    l3911:
  4678  0037' 0806'              	movf	___lwmod@dividend+1,w
  4679  0038' 0084'              	movwf	?___lwmod+1
  4680  0039' 0805'              	movf	___lwmod@dividend,w
  4681  003A' 0083'              	movwf	?___lwmod
  4682  003B'                    l738:
  4683  003B' 0008               	return
  4684  003C'                    __end_of___lwmod:
  4685                           
  4686                           	psect	text8
  4687  0000'                    __ptext8:	
  4688 ;; *************** function ___lwdiv *****************
  4689 ;; Defined at:
  4690 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  divisor         2    1[BANK0 ] unsigned int 
  4693 ;;  dividend        2    3[BANK0 ] unsigned int 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  quotient        2    7[BANK0 ] unsigned int 
  4696 ;;  counter         1    6[BANK0 ] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  2    1[BANK0 ] unsigned int 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4706 ;;      Params:         0       4       0       0       0
  4707 ;;      Locals:         0       3       0       0       0
  4708 ;;      Temps:          0       1       0       0       0
  4709 ;;      Totals:         0       8       0       0       0
  4710 ;;Total ram usage:        8 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    1
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_fround
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function ___lwdiv
  4722  0000'                    ___lwdiv:
  4723  0000'                    l3867:	
  4724                           ;incstack = 0
  4725                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4726                           
  4727  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4728  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4729  0002' 0187'              	clrf	___lwdiv@quotient
  4730  0003' 0188'              	clrf	___lwdiv@quotient+1
  4731  0004'                    l3869:
  4732  0004' 0801'              	movf	___lwdiv@divisor,w
  4733  0005' 0402'              	iorwf	___lwdiv@divisor+1,w
  4734  0006' 1903               	btfsc	3,2
  4735  0007' 2800'              	goto	u5971
  4736  0008' 2800'              	goto	u5970
  4737  0009'                    u5971:
  4738  0009' 2800'              	goto	l3889
  4739  000A'                    u5970:
  4740  000A'                    l3871:
  4741  000A' 0186'              	clrf	___lwdiv@counter
  4742  000B' 0A86'              	incf	___lwdiv@counter,f
  4743  000C' 2800'              	goto	l3877
  4744  000D'                    l3873:
  4745  000D' 3001               	movlw	1
  4746  000E'                    u5985:
  4747  000E' 1003               	clrc
  4748  000F' 0D81'              	rlf	___lwdiv@divisor,f
  4749  0010' 0D82'              	rlf	___lwdiv@divisor+1,f
  4750  0011' 3EFF               	addlw	-1
  4751  0012' 1D03               	skipz
  4752  0013' 2800'              	goto	u5985
  4753  0014'                    l3875:
  4754  0014' 3001               	movlw	1
  4755  0015' 0085'              	movwf	??___lwdiv
  4756  0016' 0805'              	movf	??___lwdiv,w
  4757  0017' 0786'              	addwf	___lwdiv@counter,f
  4758  0018'                    l3877:
  4759  0018' 1F82'              	btfss	___lwdiv@divisor+1,7
  4760  0019' 2800'              	goto	u5991
  4761  001A' 2800'              	goto	u5990
  4762  001B'                    u5991:
  4763  001B' 2800'              	goto	l3873
  4764  001C'                    u5990:
  4765  001C'                    l3879:
  4766  001C' 3001               	movlw	1
  4767  001D'                    u6005:
  4768  001D' 1003               	clrc
  4769  001E' 0D87'              	rlf	___lwdiv@quotient,f
  4770  001F' 0D88'              	rlf	___lwdiv@quotient+1,f
  4771  0020' 3EFF               	addlw	-1
  4772  0021' 1D03               	skipz
  4773  0022' 2800'              	goto	u6005
  4774  0023' 0802'              	movf	___lwdiv@divisor+1,w
  4775  0024' 0204'              	subwf	___lwdiv@dividend+1,w
  4776  0025' 1D03               	skipz
  4777  0026' 2800'              	goto	u6015
  4778  0027' 0801'              	movf	___lwdiv@divisor,w
  4779  0028' 0203'              	subwf	___lwdiv@dividend,w
  4780  0029'                    u6015:
  4781  0029' 1C03               	skipc
  4782  002A' 2800'              	goto	u6011
  4783  002B' 2800'              	goto	u6010
  4784  002C'                    u6011:
  4785  002C' 2800'              	goto	l3885
  4786  002D'                    u6010:
  4787  002D'                    l3881:
  4788  002D' 0801'              	movf	___lwdiv@divisor,w
  4789  002E' 0283'              	subwf	___lwdiv@dividend,f
  4790  002F' 0802'              	movf	___lwdiv@divisor+1,w
  4791  0030' 1C03               	skipc
  4792  0031' 0384'              	decf	___lwdiv@dividend+1,f
  4793  0032' 0284'              	subwf	___lwdiv@dividend+1,f
  4794  0033'                    l3883:
  4795  0033' 1407'              	bsf	___lwdiv@quotient,0
  4796  0034'                    l3885:
  4797  0034' 3001               	movlw	1
  4798  0035'                    u6025:
  4799  0035' 1003               	clrc
  4800  0036' 0C82'              	rrf	___lwdiv@divisor+1,f
  4801  0037' 0C81'              	rrf	___lwdiv@divisor,f
  4802  0038' 3EFF               	addlw	-1
  4803  0039' 1D03               	skipz
  4804  003A' 2800'              	goto	u6025
  4805  003B'                    l3887:
  4806  003B' 3001               	movlw	1
  4807  003C' 0286'              	subwf	___lwdiv@counter,f
  4808  003D' 1D03               	btfss	3,2
  4809  003E' 2800'              	goto	u6031
  4810  003F' 2800'              	goto	u6030
  4811  0040'                    u6031:
  4812  0040' 2800'              	goto	l3879
  4813  0041'                    u6030:
  4814  0041'                    l3889:
  4815  0041' 0808'              	movf	___lwdiv@quotient+1,w
  4816  0042' 0082'              	movwf	?___lwdiv+1
  4817  0043' 0807'              	movf	___lwdiv@quotient,w
  4818  0044' 0081'              	movwf	?___lwdiv
  4819  0045'                    l728:
  4820  0045' 0008               	return
  4821  0046'                    __end_of___lwdiv:
  4822                           
  4823                           	psect	text9
  4824  0000'                    __ptext9:	
  4825 ;; *************** function __tdiv_to_l_ *****************
  4826 ;; Defined at:
  4827 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  f1              4    0[BANK0 ] float 
  4830 ;;  f2              4    4[BANK0 ] float 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  quot            4    8[BANK0 ] unsigned long 
  4833 ;;  exp1            1   13[BANK0 ] unsigned char 
  4834 ;;  cntr            1   12[BANK0 ] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  4    0[BANK0 ] unsigned long 
  4837 ;; Registers used:
  4838 ;;		wreg, status,2, status,0
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4844 ;;      Params:         0       8       0       0       0
  4845 ;;      Locals:         0       6       0       0       0
  4846 ;;      Temps:          4       0       0       0       0
  4847 ;;      Totals:         4      14       0       0       0
  4848 ;;Total ram usage:       18 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; Hardware stack levels required when called:    1
  4851 ;; This function calls:
  4852 ;;		Nothing
  4853 ;; This function is called by:
  4854 ;;		_sprintf
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           
  4859                           ;psect for function __tdiv_to_l_
  4860  0000'                    __tdiv_to_l_:
  4861  0000'                    l3995:	
  4862                           ;incstack = 0
  4863                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4864                           
  4865  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4866  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4867  0002' 0800'              	movf	__tdiv_to_l_@f1,w
  4868  0003' 0083'              	movwf	??__tdiv_to_l_
  4869  0004' 0801'              	movf	__tdiv_to_l_@f1+1,w
  4870  0005' 0084'              	movwf	??__tdiv_to_l_+1
  4871  0006' 0802'              	movf	__tdiv_to_l_@f1+2,w
  4872  0007' 0085'              	movwf	??__tdiv_to_l_+2
  4873  0008' 1003               	clrc
  4874  0009' 0D04'              	rlf	??__tdiv_to_l_+1,w
  4875  000A' 0D05'              	rlf	??__tdiv_to_l_+2,w
  4876  000B' 0086'              	movwf	??__tdiv_to_l_+3
  4877  000C' 0806'              	movf	??__tdiv_to_l_+3,w
  4878  000D' 008D'              	movwf	__tdiv_to_l_@exp1
  4879  000E' 080D'              	movf	__tdiv_to_l_@exp1,w
  4880  000F' 1D03               	btfss	3,2
  4881  0010' 2800'              	goto	u6351
  4882  0011' 2800'              	goto	u6350
  4883  0012'                    u6351:
  4884  0012' 2800'              	goto	l4001
  4885  0013'                    u6350:
  4886  0013'                    l3997:
  4887  0013' 3000               	movlw	0
  4888  0014' 0083'              	movwf	?__tdiv_to_l_+3
  4889  0015' 3000               	movlw	0
  4890  0016' 0082'              	movwf	?__tdiv_to_l_+2
  4891  0017' 3000               	movlw	0
  4892  0018' 0081'              	movwf	?__tdiv_to_l_+1
  4893  0019' 3000               	movlw	0
  4894  001A' 0080'              	movwf	?__tdiv_to_l_
  4895  001B' 2800'              	goto	l639
  4896  001C'                    l4001:
  4897  001C' 0804'              	movf	__tdiv_to_l_@f2,w
  4898  001D' 0083'              	movwf	??__tdiv_to_l_
  4899  001E' 0805'              	movf	__tdiv_to_l_@f2+1,w
  4900  001F' 0084'              	movwf	??__tdiv_to_l_+1
  4901  0020' 0806'              	movf	__tdiv_to_l_@f2+2,w
  4902  0021' 0085'              	movwf	??__tdiv_to_l_+2
  4903  0022' 1003               	clrc
  4904  0023' 0D04'              	rlf	??__tdiv_to_l_+1,w
  4905  0024' 0D05'              	rlf	??__tdiv_to_l_+2,w
  4906  0025' 0086'              	movwf	??__tdiv_to_l_+3
  4907  0026' 0806'              	movf	??__tdiv_to_l_+3,w
  4908  0027' 008C'              	movwf	__tdiv_to_l_@cntr
  4909  0028' 080C'              	movf	__tdiv_to_l_@cntr,w
  4910  0029' 1D03               	btfss	3,2
  4911  002A' 2800'              	goto	u6361
  4912  002B' 2800'              	goto	u6360
  4913  002C'                    u6361:
  4914  002C' 2800'              	goto	l640
  4915  002D'                    u6360:
  4916  002D' 2800'              	goto	l3997
  4917  002E'                    l640:
  4918  002E' 1781'              	bsf	__tdiv_to_l_@f1+1,7
  4919  002F'                    l4007:
  4920  002F' 30FF               	movlw	255
  4921  0030' 0580'              	andwf	__tdiv_to_l_@f1,f
  4922  0031' 30FF               	movlw	255
  4923  0032' 0581'              	andwf	__tdiv_to_l_@f1+1,f
  4924  0033' 3000               	movlw	0
  4925  0034' 0582'              	andwf	__tdiv_to_l_@f1+2,f
  4926  0035'                    l4009:
  4927  0035' 1785'              	bsf	__tdiv_to_l_@f2+1,7
  4928  0036' 30FF               	movlw	255
  4929  0037' 0584'              	andwf	__tdiv_to_l_@f2,f
  4930  0038' 30FF               	movlw	255
  4931  0039' 0585'              	andwf	__tdiv_to_l_@f2+1,f
  4932  003A' 3000               	movlw	0
  4933  003B' 0586'              	andwf	__tdiv_to_l_@f2+2,f
  4934  003C' 3000               	movlw	0
  4935  003D' 008B'              	movwf	__tdiv_to_l_@quot+3
  4936  003E' 3000               	movlw	0
  4937  003F' 008A'              	movwf	__tdiv_to_l_@quot+2
  4938  0040' 3000               	movlw	0
  4939  0041' 0089'              	movwf	__tdiv_to_l_@quot+1
  4940  0042' 3000               	movlw	0
  4941  0043' 0088'              	movwf	__tdiv_to_l_@quot
  4942  0044'                    l4011:
  4943  0044' 307F               	movlw	127
  4944  0045' 028D'              	subwf	__tdiv_to_l_@exp1,f
  4945  0046'                    l4013:
  4946  0046' 3098               	movlw	152
  4947  0047' 070C'              	addwf	__tdiv_to_l_@cntr,w
  4948  0048' 0083'              	movwf	??__tdiv_to_l_
  4949  0049' 0803'              	movf	??__tdiv_to_l_,w
  4950  004A' 028D'              	subwf	__tdiv_to_l_@exp1,f
  4951  004B' 3018               	movlw	24
  4952  004C' 0083'              	movwf	??__tdiv_to_l_
  4953  004D' 0803'              	movf	??__tdiv_to_l_,w
  4954  004E' 008C'              	movwf	__tdiv_to_l_@cntr
  4955  004F'                    l4015:
  4956  004F' 3001               	movlw	1
  4957  0050' 0083'              	movwf	??__tdiv_to_l_
  4958  0051'                    u6375:
  4959  0051' 1003               	clrc
  4960  0052' 0D88'              	rlf	__tdiv_to_l_@quot,f
  4961  0053' 0D89'              	rlf	__tdiv_to_l_@quot+1,f
  4962  0054' 0D8A'              	rlf	__tdiv_to_l_@quot+2,f
  4963  0055' 0D8B'              	rlf	__tdiv_to_l_@quot+3,f
  4964  0056' 0B83'              	decfsz	??__tdiv_to_l_,f
  4965  0057' 2800'              	goto	u6375
  4966  0058'                    l4017:
  4967  0058' 0806'              	movf	__tdiv_to_l_@f2+2,w
  4968  0059' 0202'              	subwf	__tdiv_to_l_@f1+2,w
  4969  005A' 1D03               	skipz
  4970  005B' 2800'              	goto	u6385
  4971  005C' 0805'              	movf	__tdiv_to_l_@f2+1,w
  4972  005D' 0201'              	subwf	__tdiv_to_l_@f1+1,w
  4973  005E' 1D03               	skipz
  4974  005F' 2800'              	goto	u6385
  4975  0060' 0804'              	movf	__tdiv_to_l_@f2,w
  4976  0061' 0200'              	subwf	__tdiv_to_l_@f1,w
  4977  0062'                    u6385:
  4978  0062' 1C03               	skipc
  4979  0063' 2800'              	goto	u6381
  4980  0064' 2800'              	goto	u6380
  4981  0065'                    u6381:
  4982  0065' 2800'              	goto	l4023
  4983  0066'                    u6380:
  4984  0066'                    l4019:
  4985  0066' 0804'              	movf	__tdiv_to_l_@f2,w
  4986  0067' 0280'              	subwf	__tdiv_to_l_@f1,f
  4987  0068' 0805'              	movf	__tdiv_to_l_@f2+1,w
  4988  0069' 1C03               	skipc
  4989  006A' 0F05'              	incfsz	__tdiv_to_l_@f2+1,w
  4990  006B' 0281'              	subwf	__tdiv_to_l_@f1+1,f
  4991  006C' 0806'              	movf	__tdiv_to_l_@f2+2,w
  4992  006D' 1C03               	skipc
  4993  006E' 0A06'              	incf	__tdiv_to_l_@f2+2,w
  4994  006F' 0282'              	subwf	__tdiv_to_l_@f1+2,f
  4995  0070'                    l4021:
  4996  0070' 1408'              	bsf	__tdiv_to_l_@quot,0
  4997  0071'                    l4023:
  4998  0071' 3001               	movlw	1
  4999  0072'                    u6395:
  5000  0072' 1003               	clrc
  5001  0073' 0D80'              	rlf	__tdiv_to_l_@f1,f
  5002  0074' 0D81'              	rlf	__tdiv_to_l_@f1+1,f
  5003  0075' 0D82'              	rlf	__tdiv_to_l_@f1+2,f
  5004  0076' 3EFF               	addlw	-1
  5005  0077' 1D03               	skipz
  5006  0078' 2800'              	goto	u6395
  5007  0079'                    l4025:
  5008  0079' 3001               	movlw	1
  5009  007A' 028C'              	subwf	__tdiv_to_l_@cntr,f
  5010  007B' 1D03               	btfss	3,2
  5011  007C' 2800'              	goto	u6401
  5012  007D' 2800'              	goto	u6400
  5013  007E'                    u6401:
  5014  007E' 2800'              	goto	l4015
  5015  007F'                    u6400:
  5016  007F'                    l643:
  5017  007F' 1F8D'              	btfss	__tdiv_to_l_@exp1,7
  5018  0080' 2800'              	goto	u6411
  5019  0081' 2800'              	goto	u6410
  5020  0082'                    u6411:
  5021  0082' 2800'              	goto	l4035
  5022  0083'                    u6410:
  5023  0083'                    l4027:
  5024  0083' 080D'              	movf	__tdiv_to_l_@exp1,w
  5025  0084' 3A80               	xorlw	128
  5026  0085' 3E97               	addlw	151
  5027  0086' 1803               	skipnc
  5028  0087' 2800'              	goto	u6421
  5029  0088' 2800'              	goto	u6420
  5030  0089'                    u6421:
  5031  0089' 2800'              	goto	l4033
  5032  008A'                    u6420:
  5033  008A' 2800'              	goto	l3997
  5034  008B'                    l4033:
  5035  008B' 3001               	movlw	1
  5036  008C'                    u6435:
  5037  008C' 1003               	clrc
  5038  008D' 0C8B'              	rrf	__tdiv_to_l_@quot+3,f
  5039  008E' 0C8A'              	rrf	__tdiv_to_l_@quot+2,f
  5040  008F' 0C89'              	rrf	__tdiv_to_l_@quot+1,f
  5041  0090' 0C88'              	rrf	__tdiv_to_l_@quot,f
  5042  0091' 3EFF               	addlw	-1
  5043  0092' 1D03               	skipz
  5044  0093' 2800'              	goto	u6435
  5045  0094' 3001               	movlw	1
  5046  0095' 0083'              	movwf	??__tdiv_to_l_
  5047  0096' 0803'              	movf	??__tdiv_to_l_,w
  5048  0097' 078D'              	addwf	__tdiv_to_l_@exp1,f
  5049  0098' 1D03               	btfss	3,2
  5050  0099' 2800'              	goto	u6441
  5051  009A' 2800'              	goto	u6440
  5052  009B'                    u6441:
  5053  009B' 2800'              	goto	l4033
  5054  009C'                    u6440:
  5055  009C' 2800'              	goto	l4043
  5056  009D'                    l4035:
  5057  009D' 3018               	movlw	24
  5058  009E' 020D'              	subwf	__tdiv_to_l_@exp1,w
  5059  009F' 1C03               	skipc
  5060  00A0' 2800'              	goto	u6451
  5061  00A1' 2800'              	goto	u6450
  5062  00A2'                    u6451:
  5063  00A2' 2800'              	goto	l650
  5064  00A3'                    u6450:
  5065  00A3' 2800'              	goto	l3997
  5066  00A4'                    l4041:
  5067  00A4' 3001               	movlw	1
  5068  00A5' 0083'              	movwf	??__tdiv_to_l_
  5069  00A6'                    u6465:
  5070  00A6' 1003               	clrc
  5071  00A7' 0D88'              	rlf	__tdiv_to_l_@quot,f
  5072  00A8' 0D89'              	rlf	__tdiv_to_l_@quot+1,f
  5073  00A9' 0D8A'              	rlf	__tdiv_to_l_@quot+2,f
  5074  00AA' 0D8B'              	rlf	__tdiv_to_l_@quot+3,f
  5075  00AB' 0B83'              	decfsz	??__tdiv_to_l_,f
  5076  00AC' 2800'              	goto	u6465
  5077  00AD' 3001               	movlw	1
  5078  00AE' 028D'              	subwf	__tdiv_to_l_@exp1,f
  5079  00AF'                    l650:
  5080  00AF' 080D'              	movf	__tdiv_to_l_@exp1,w
  5081  00B0' 1D03               	btfss	3,2
  5082  00B1' 2800'              	goto	u6471
  5083  00B2' 2800'              	goto	u6470
  5084  00B3'                    u6471:
  5085  00B3' 2800'              	goto	l4041
  5086  00B4'                    u6470:
  5087  00B4'                    l4043:
  5088  00B4' 080B'              	movf	__tdiv_to_l_@quot+3,w
  5089  00B5' 0083'              	movwf	?__tdiv_to_l_+3
  5090  00B6' 080A'              	movf	__tdiv_to_l_@quot+2,w
  5091  00B7' 0082'              	movwf	?__tdiv_to_l_+2
  5092  00B8' 0809'              	movf	__tdiv_to_l_@quot+1,w
  5093  00B9' 0081'              	movwf	?__tdiv_to_l_+1
  5094  00BA' 0808'              	movf	__tdiv_to_l_@quot,w
  5095  00BB' 0080'              	movwf	?__tdiv_to_l_
  5096  00BC'                    l639:
  5097  00BC' 0008               	return
  5098  00BD'                    __end_of__tdiv_to_l_:
  5099                           
  5100                           	psect	text10
  5101  0000'                    __ptext10:	
  5102 ;; *************** function __div_to_l_ *****************
  5103 ;; Defined at:
  5104 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  f1              4    0[BANK0 ] unsigned long 
  5107 ;;  f2              4    4[BANK0 ] unsigned long 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  quot            4    8[BANK0 ] unsigned long 
  5110 ;;  exp1            1   13[BANK0 ] unsigned char 
  5111 ;;  cntr            1   12[BANK0 ] unsigned char 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  4    0[BANK0 ] unsigned long 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5121 ;;      Params:         0       8       0       0       0
  5122 ;;      Locals:         0       6       0       0       0
  5123 ;;      Temps:          1       0       0       0       0
  5124 ;;      Totals:         1      14       0       0       0
  5125 ;;Total ram usage:       15 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    1
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_sprintf
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           
  5136                           ;psect for function __div_to_l_
  5137  0000'                    __div_to_l_:
  5138  0000'                    l4047:	
  5139                           ;incstack = 0
  5140                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5141                           
  5142  0000' 1003               	clrc
  5143  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  5144  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  5145  0003' 0D02'              	rlf	__div_to_l_@f1+2,w
  5146  0004' 0D03'              	rlf	__div_to_l_@f1+3,w
  5147  0005' 0083'              	movwf	??__div_to_l_
  5148  0006' 0803'              	movf	??__div_to_l_,w
  5149  0007' 008D'              	movwf	__div_to_l_@exp1
  5150  0008' 080D'              	movf	__div_to_l_@exp1,w
  5151  0009' 1D03               	btfss	3,2
  5152  000A' 2800'              	goto	u6481
  5153  000B' 2800'              	goto	u6480
  5154  000C'                    u6481:
  5155  000C' 2800'              	goto	l4053
  5156  000D'                    u6480:
  5157  000D'                    l4049:
  5158  000D' 3000               	movlw	0
  5159  000E' 0083'              	movwf	?__div_to_l_+3
  5160  000F' 3000               	movlw	0
  5161  0010' 0082'              	movwf	?__div_to_l_+2
  5162  0011' 3000               	movlw	0
  5163  0012' 0081'              	movwf	?__div_to_l_+1
  5164  0013' 3000               	movlw	0
  5165  0014' 0080'              	movwf	?__div_to_l_
  5166  0015' 2800'              	goto	l592
  5167  0016'                    l4053:
  5168  0016' 1003               	clrc
  5169  0017' 0D06'              	rlf	__div_to_l_@f2+2,w
  5170  0018' 0D07'              	rlf	__div_to_l_@f2+3,w
  5171  0019' 0083'              	movwf	??__div_to_l_
  5172  001A' 0803'              	movf	??__div_to_l_,w
  5173  001B' 008C'              	movwf	__div_to_l_@cntr
  5174  001C' 080C'              	movf	__div_to_l_@cntr,w
  5175  001D' 1D03               	btfss	3,2
  5176  001E' 2800'              	goto	u6491
  5177  001F' 2800'              	goto	u6490
  5178  0020'                    u6491:
  5179  0020' 2800'              	goto	l593
  5180  0021'                    u6490:
  5181  0021' 2800'              	goto	l4049
  5182  0022'                    l593:
  5183  0022' 1782'              	bsf	__div_to_l_@f1+2,7
  5184  0023'                    l4059:
  5185  0023' 30FF               	movlw	255
  5186  0024' 0580'              	andwf	__div_to_l_@f1,f
  5187  0025' 30FF               	movlw	255
  5188  0026' 0581'              	andwf	__div_to_l_@f1+1,f
  5189  0027' 30FF               	movlw	255
  5190  0028' 0582'              	andwf	__div_to_l_@f1+2,f
  5191  0029' 3000               	movlw	0
  5192  002A' 0583'              	andwf	__div_to_l_@f1+3,f
  5193  002B'                    l4061:
  5194  002B' 1786'              	bsf	__div_to_l_@f2+2,7
  5195  002C' 30FF               	movlw	255
  5196  002D' 0584'              	andwf	__div_to_l_@f2,f
  5197  002E' 30FF               	movlw	255
  5198  002F' 0585'              	andwf	__div_to_l_@f2+1,f
  5199  0030' 30FF               	movlw	255
  5200  0031' 0586'              	andwf	__div_to_l_@f2+2,f
  5201  0032' 3000               	movlw	0
  5202  0033' 0587'              	andwf	__div_to_l_@f2+3,f
  5203  0034' 3000               	movlw	0
  5204  0035' 008B'              	movwf	__div_to_l_@quot+3
  5205  0036' 3000               	movlw	0
  5206  0037' 008A'              	movwf	__div_to_l_@quot+2
  5207  0038' 3000               	movlw	0
  5208  0039' 0089'              	movwf	__div_to_l_@quot+1
  5209  003A' 3000               	movlw	0
  5210  003B' 0088'              	movwf	__div_to_l_@quot
  5211  003C'                    l4063:
  5212  003C' 307F               	movlw	127
  5213  003D' 028D'              	subwf	__div_to_l_@exp1,f
  5214  003E'                    l4065:
  5215  003E' 30A0               	movlw	160
  5216  003F' 070C'              	addwf	__div_to_l_@cntr,w
  5217  0040' 0083'              	movwf	??__div_to_l_
  5218  0041' 0803'              	movf	??__div_to_l_,w
  5219  0042' 028D'              	subwf	__div_to_l_@exp1,f
  5220  0043' 3020               	movlw	32
  5221  0044' 0083'              	movwf	??__div_to_l_
  5222  0045' 0803'              	movf	??__div_to_l_,w
  5223  0046' 008C'              	movwf	__div_to_l_@cntr
  5224  0047'                    l4067:
  5225  0047' 3001               	movlw	1
  5226  0048' 0083'              	movwf	??__div_to_l_
  5227  0049'                    u6505:
  5228  0049' 1003               	clrc
  5229  004A' 0D88'              	rlf	__div_to_l_@quot,f
  5230  004B' 0D89'              	rlf	__div_to_l_@quot+1,f
  5231  004C' 0D8A'              	rlf	__div_to_l_@quot+2,f
  5232  004D' 0D8B'              	rlf	__div_to_l_@quot+3,f
  5233  004E' 0B83'              	decfsz	??__div_to_l_,f
  5234  004F' 2800'              	goto	u6505
  5235  0050'                    l4069:
  5236  0050' 0807'              	movf	__div_to_l_@f2+3,w
  5237  0051' 0203'              	subwf	__div_to_l_@f1+3,w
  5238  0052' 1D03               	skipz
  5239  0053' 2800'              	goto	u6515
  5240  0054' 0806'              	movf	__div_to_l_@f2+2,w
  5241  0055' 0202'              	subwf	__div_to_l_@f1+2,w
  5242  0056' 1D03               	skipz
  5243  0057' 2800'              	goto	u6515
  5244  0058' 0805'              	movf	__div_to_l_@f2+1,w
  5245  0059' 0201'              	subwf	__div_to_l_@f1+1,w
  5246  005A' 1D03               	skipz
  5247  005B' 2800'              	goto	u6515
  5248  005C' 0804'              	movf	__div_to_l_@f2,w
  5249  005D' 0200'              	subwf	__div_to_l_@f1,w
  5250  005E'                    u6515:
  5251  005E' 1C03               	skipc
  5252  005F' 2800'              	goto	u6511
  5253  0060' 2800'              	goto	u6510
  5254  0061'                    u6511:
  5255  0061' 2800'              	goto	l4075
  5256  0062'                    u6510:
  5257  0062'                    l4071:
  5258  0062' 0804'              	movf	__div_to_l_@f2,w
  5259  0063' 0280'              	subwf	__div_to_l_@f1,f
  5260  0064' 0805'              	movf	__div_to_l_@f2+1,w
  5261  0065' 1C03               	skipc
  5262  0066' 0F05'              	incfsz	__div_to_l_@f2+1,w
  5263  0067' 0281'              	subwf	__div_to_l_@f1+1,f
  5264  0068' 0806'              	movf	__div_to_l_@f2+2,w
  5265  0069' 1C03               	skipc
  5266  006A' 0F06'              	incfsz	__div_to_l_@f2+2,w
  5267  006B' 0282'              	subwf	__div_to_l_@f1+2,f
  5268  006C' 0807'              	movf	__div_to_l_@f2+3,w
  5269  006D' 1C03               	skipc
  5270  006E' 0F07'              	incfsz	__div_to_l_@f2+3,w
  5271  006F' 0283'              	subwf	__div_to_l_@f1+3,f
  5272  0070'                    l4073:
  5273  0070' 1408'              	bsf	__div_to_l_@quot,0
  5274  0071'                    l4075:
  5275  0071' 3001               	movlw	1
  5276  0072' 0083'              	movwf	??__div_to_l_
  5277  0073'                    u6525:
  5278  0073' 1003               	clrc
  5279  0074' 0D80'              	rlf	__div_to_l_@f1,f
  5280  0075' 0D81'              	rlf	__div_to_l_@f1+1,f
  5281  0076' 0D82'              	rlf	__div_to_l_@f1+2,f
  5282  0077' 0D83'              	rlf	__div_to_l_@f1+3,f
  5283  0078' 0B83'              	decfsz	??__div_to_l_,f
  5284  0079' 2800'              	goto	u6525
  5285  007A'                    l4077:
  5286  007A' 3001               	movlw	1
  5287  007B' 028C'              	subwf	__div_to_l_@cntr,f
  5288  007C' 1D03               	btfss	3,2
  5289  007D' 2800'              	goto	u6531
  5290  007E' 2800'              	goto	u6530
  5291  007F'                    u6531:
  5292  007F' 2800'              	goto	l4067
  5293  0080'                    u6530:
  5294  0080'                    l596:
  5295  0080' 1F8D'              	btfss	__div_to_l_@exp1,7
  5296  0081' 2800'              	goto	u6541
  5297  0082' 2800'              	goto	u6540
  5298  0083'                    u6541:
  5299  0083' 2800'              	goto	l4087
  5300  0084'                    u6540:
  5301  0084'                    l4079:
  5302  0084' 080D'              	movf	__div_to_l_@exp1,w
  5303  0085' 3A80               	xorlw	128
  5304  0086' 3E9F               	addlw	159
  5305  0087' 1803               	skipnc
  5306  0088' 2800'              	goto	u6551
  5307  0089' 2800'              	goto	u6550
  5308  008A'                    u6551:
  5309  008A' 2800'              	goto	l4085
  5310  008B'                    u6550:
  5311  008B' 2800'              	goto	l4049
  5312  008C'                    l4085:
  5313  008C' 3001               	movlw	1
  5314  008D'                    u6565:
  5315  008D' 1003               	clrc
  5316  008E' 0C8B'              	rrf	__div_to_l_@quot+3,f
  5317  008F' 0C8A'              	rrf	__div_to_l_@quot+2,f
  5318  0090' 0C89'              	rrf	__div_to_l_@quot+1,f
  5319  0091' 0C88'              	rrf	__div_to_l_@quot,f
  5320  0092' 3EFF               	addlw	-1
  5321  0093' 1D03               	skipz
  5322  0094' 2800'              	goto	u6565
  5323  0095' 3001               	movlw	1
  5324  0096' 0083'              	movwf	??__div_to_l_
  5325  0097' 0803'              	movf	??__div_to_l_,w
  5326  0098' 078D'              	addwf	__div_to_l_@exp1,f
  5327  0099' 1D03               	btfss	3,2
  5328  009A' 2800'              	goto	u6571
  5329  009B' 2800'              	goto	u6570
  5330  009C'                    u6571:
  5331  009C' 2800'              	goto	l4085
  5332  009D'                    u6570:
  5333  009D' 2800'              	goto	l4095
  5334  009E'                    l4087:
  5335  009E' 3020               	movlw	32
  5336  009F' 020D'              	subwf	__div_to_l_@exp1,w
  5337  00A0' 1C03               	skipc
  5338  00A1' 2800'              	goto	u6581
  5339  00A2' 2800'              	goto	u6580
  5340  00A3'                    u6581:
  5341  00A3' 2800'              	goto	l603
  5342  00A4'                    u6580:
  5343  00A4' 2800'              	goto	l4049
  5344  00A5'                    l4093:
  5345  00A5' 3001               	movlw	1
  5346  00A6' 0083'              	movwf	??__div_to_l_
  5347  00A7'                    u6595:
  5348  00A7' 1003               	clrc
  5349  00A8' 0D88'              	rlf	__div_to_l_@quot,f
  5350  00A9' 0D89'              	rlf	__div_to_l_@quot+1,f
  5351  00AA' 0D8A'              	rlf	__div_to_l_@quot+2,f
  5352  00AB' 0D8B'              	rlf	__div_to_l_@quot+3,f
  5353  00AC' 0B83'              	decfsz	??__div_to_l_,f
  5354  00AD' 2800'              	goto	u6595
  5355  00AE' 3001               	movlw	1
  5356  00AF' 028D'              	subwf	__div_to_l_@exp1,f
  5357  00B0'                    l603:
  5358  00B0' 080D'              	movf	__div_to_l_@exp1,w
  5359  00B1' 1D03               	btfss	3,2
  5360  00B2' 2800'              	goto	u6601
  5361  00B3' 2800'              	goto	u6600
  5362  00B4'                    u6601:
  5363  00B4' 2800'              	goto	l4093
  5364  00B5'                    u6600:
  5365  00B5'                    l4095:
  5366  00B5' 080B'              	movf	__div_to_l_@quot+3,w
  5367  00B6' 0083'              	movwf	?__div_to_l_+3
  5368  00B7' 080A'              	movf	__div_to_l_@quot+2,w
  5369  00B8' 0082'              	movwf	?__div_to_l_+2
  5370  00B9' 0809'              	movf	__div_to_l_@quot+1,w
  5371  00BA' 0081'              	movwf	?__div_to_l_+1
  5372  00BB' 0808'              	movf	__div_to_l_@quot,w
  5373  00BC' 0080'              	movwf	?__div_to_l_
  5374  00BD'                    l592:
  5375  00BD' 0008               	return
  5376  00BE'                    __end_of__div_to_l_:
  5377                           
  5378                           	psect	text11
  5379  0000'                    __ptext11:	
  5380 ;; *************** function ___wmul *****************
  5381 ;; Defined at:
  5382 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  multiplier      2    3[COMMON] unsigned int 
  5385 ;;  multiplicand    2    5[COMMON] unsigned int 
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;  product         2    0[BANK0 ] unsigned int 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  2    3[COMMON] unsigned int 
  5390 ;; Registers used:
  5391 ;;		wreg, status,2, status,0
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5397 ;;      Params:         4       0       0       0       0
  5398 ;;      Locals:         0       2       0       0       0
  5399 ;;      Temps:          0       0       0       0       0
  5400 ;;      Totals:         4       2       0       0       0
  5401 ;;Total ram usage:        6 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    1
  5404 ;; This function calls:
  5405 ;;		Nothing
  5406 ;; This function is called by:
  5407 ;;		_sprintf
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           
  5412                           ;psect for function ___wmul
  5413  0000'                    ___wmul:
  5414  0000'                    l4099:	
  5415                           ;incstack = 0
  5416                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5417                           
  5418  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5419  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5420  0002' 0180'              	clrf	___wmul@product
  5421  0003' 0181'              	clrf	___wmul@product+1
  5422  0004'                    l4101:
  5423  0004' 1C03'              	btfss	___wmul@multiplier,0
  5424  0005' 2800'              	goto	u6611
  5425  0006' 2800'              	goto	u6610
  5426  0007'                    u6611:
  5427  0007' 2800'              	goto	l422
  5428  0008'                    u6610:
  5429  0008'                    l4103:
  5430  0008' 0805'              	movf	___wmul@multiplicand,w
  5431  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  5432  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  5433  000B' 0780'              	addwf	___wmul@product,f
  5434  000C' 1803               	skipnc
  5435  000D' 0A81'              	incf	___wmul@product+1,f
  5436  000E' 0806'              	movf	___wmul@multiplicand+1,w
  5437  000F' 0781'              	addwf	___wmul@product+1,f
  5438  0010'                    l422:
  5439  0010' 3001               	movlw	1
  5440  0011'                    u6625:
  5441  0011' 1003               	clrc
  5442  0012' 0D85'              	rlf	___wmul@multiplicand,f
  5443  0013' 0D86'              	rlf	___wmul@multiplicand+1,f
  5444  0014' 3EFF               	addlw	-1
  5445  0015' 1D03               	skipz
  5446  0016' 2800'              	goto	u6625
  5447  0017'                    l4105:
  5448  0017' 3001               	movlw	1
  5449  0018'                    u6635:
  5450  0018' 1003               	clrc
  5451  0019' 0C84'              	rrf	___wmul@multiplier+1,f
  5452  001A' 0C83'              	rrf	___wmul@multiplier,f
  5453  001B' 3EFF               	addlw	-1
  5454  001C' 1D03               	skipz
  5455  001D' 2800'              	goto	u6635
  5456  001E'                    l4107:
  5457  001E' 0803'              	movf	___wmul@multiplier,w
  5458  001F' 0404'              	iorwf	___wmul@multiplier+1,w
  5459  0020' 1D03               	btfss	3,2
  5460  0021' 2800'              	goto	u6641
  5461  0022' 2800'              	goto	u6640
  5462  0023'                    u6641:
  5463  0023' 2800'              	goto	l4101
  5464  0024'                    u6640:
  5465  0024'                    l4109:
  5466  0024' 1283               	bcf	3,5	;RP0=0, select bank0
  5467  0025' 1303               	bcf	3,6	;RP1=0, select bank0
  5468  0026' 0801'              	movf	___wmul@product+1,w
  5469  0027' 0084'              	movwf	?___wmul+1
  5470  0028' 0800'              	movf	___wmul@product,w
  5471  0029' 0083'              	movwf	?___wmul
  5472  002A'                    l424:
  5473  002A' 0008               	return
  5474  002B'                    __end_of___wmul:
  5475                           
  5476                           	psect	text12
  5477  0000'                    __ptext12:	
  5478 ;; *************** function ___llmod *****************
  5479 ;; Defined at:
  5480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  divisor         4   13[BANK0 ] unsigned long 
  5483 ;;  dividend        4   17[BANK0 ] unsigned long 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  counter         1    5[COMMON] unsigned char 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  4   13[BANK0 ] unsigned long 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5495 ;;      Params:         0       8       0       0       0
  5496 ;;      Locals:         1       0       0       0       0
  5497 ;;      Temps:          1       0       0       0       0
  5498 ;;      Totals:         2       8       0       0       0
  5499 ;;Total ram usage:       10 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    1
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_sprintf
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function ___llmod
  5511  0000'                    ___llmod:
  5512  0000'                    l4169:	
  5513                           ;incstack = 0
  5514                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5515                           
  5516  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5517  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5518  0002' 0810'              	movf	___llmod@divisor+3,w
  5519  0003' 040F'              	iorwf	___llmod@divisor+2,w
  5520  0004' 040E'              	iorwf	___llmod@divisor+1,w
  5521  0005' 040D'              	iorwf	___llmod@divisor,w
  5522  0006' 1903               	skipnz
  5523  0007' 2800'              	goto	u6821
  5524  0008' 2800'              	goto	u6820
  5525  0009'                    u6821:
  5526  0009' 2800'              	goto	l4185
  5527  000A'                    u6820:
  5528  000A'                    l4171:
  5529  000A' 0185'              	clrf	___llmod@counter
  5530  000B' 0A85'              	incf	___llmod@counter,f
  5531  000C' 2800'              	goto	l4175
  5532  000D'                    l4173:
  5533  000D' 3001               	movlw	1
  5534  000E' 0084'              	movwf	??___llmod
  5535  000F'                    u6835:
  5536  000F' 1003               	clrc
  5537  0010' 0D8D'              	rlf	___llmod@divisor,f
  5538  0011' 0D8E'              	rlf	___llmod@divisor+1,f
  5539  0012' 0D8F'              	rlf	___llmod@divisor+2,f
  5540  0013' 0D90'              	rlf	___llmod@divisor+3,f
  5541  0014' 0B84'              	decfsz	??___llmod,f
  5542  0015' 2800'              	goto	u6835
  5543  0016' 3001               	movlw	1
  5544  0017' 0084'              	movwf	??___llmod
  5545  0018' 0804'              	movf	??___llmod,w
  5546  0019' 0785'              	addwf	___llmod@counter,f
  5547  001A'                    l4175:
  5548  001A' 1F90'              	btfss	___llmod@divisor+3,7
  5549  001B' 2800'              	goto	u6841
  5550  001C' 2800'              	goto	u6840
  5551  001D'                    u6841:
  5552  001D' 2800'              	goto	l4173
  5553  001E'                    u6840:
  5554  001E'                    l4177:
  5555  001E' 0810'              	movf	___llmod@divisor+3,w
  5556  001F' 0214'              	subwf	___llmod@dividend+3,w
  5557  0020' 1D03               	skipz
  5558  0021' 2800'              	goto	u6855
  5559  0022' 080F'              	movf	___llmod@divisor+2,w
  5560  0023' 0213'              	subwf	___llmod@dividend+2,w
  5561  0024' 1D03               	skipz
  5562  0025' 2800'              	goto	u6855
  5563  0026' 080E'              	movf	___llmod@divisor+1,w
  5564  0027' 0212'              	subwf	___llmod@dividend+1,w
  5565  0028' 1D03               	skipz
  5566  0029' 2800'              	goto	u6855
  5567  002A' 080D'              	movf	___llmod@divisor,w
  5568  002B' 0211'              	subwf	___llmod@dividend,w
  5569  002C'                    u6855:
  5570  002C' 1C03               	skipc
  5571  002D' 2800'              	goto	u6851
  5572  002E' 2800'              	goto	u6850
  5573  002F'                    u6851:
  5574  002F' 2800'              	goto	l4181
  5575  0030'                    u6850:
  5576  0030'                    l4179:
  5577  0030' 080D'              	movf	___llmod@divisor,w
  5578  0031' 0291'              	subwf	___llmod@dividend,f
  5579  0032' 080E'              	movf	___llmod@divisor+1,w
  5580  0033' 1C03               	skipc
  5581  0034' 0F0E'              	incfsz	___llmod@divisor+1,w
  5582  0035' 0292'              	subwf	___llmod@dividend+1,f
  5583  0036' 080F'              	movf	___llmod@divisor+2,w
  5584  0037' 1C03               	skipc
  5585  0038' 0F0F'              	incfsz	___llmod@divisor+2,w
  5586  0039' 0293'              	subwf	___llmod@dividend+2,f
  5587  003A' 0810'              	movf	___llmod@divisor+3,w
  5588  003B' 1C03               	skipc
  5589  003C' 0F10'              	incfsz	___llmod@divisor+3,w
  5590  003D' 0294'              	subwf	___llmod@dividend+3,f
  5591  003E'                    l4181:
  5592  003E' 3001               	movlw	1
  5593  003F'                    u6865:
  5594  003F' 1003               	clrc
  5595  0040' 0C90'              	rrf	___llmod@divisor+3,f
  5596  0041' 0C8F'              	rrf	___llmod@divisor+2,f
  5597  0042' 0C8E'              	rrf	___llmod@divisor+1,f
  5598  0043' 0C8D'              	rrf	___llmod@divisor,f
  5599  0044' 3EFF               	addlw	-1
  5600  0045' 1D03               	skipz
  5601  0046' 2800'              	goto	u6865
  5602  0047'                    l4183:
  5603  0047' 3001               	movlw	1
  5604  0048' 0285'              	subwf	___llmod@counter,f
  5605  0049' 1D03               	btfss	3,2
  5606  004A' 2800'              	goto	u6871
  5607  004B' 2800'              	goto	u6870
  5608  004C'                    u6871:
  5609  004C' 2800'              	goto	l4177
  5610  004D'                    u6870:
  5611  004D'                    l4185:
  5612  004D' 0814'              	movf	___llmod@dividend+3,w
  5613  004E' 0090'              	movwf	?___llmod+3
  5614  004F' 0813'              	movf	___llmod@dividend+2,w
  5615  0050' 008F'              	movwf	?___llmod+2
  5616  0051' 0812'              	movf	___llmod@dividend+1,w
  5617  0052' 008E'              	movwf	?___llmod+1
  5618  0053' 0811'              	movf	___llmod@dividend,w
  5619  0054' 008D'              	movwf	?___llmod
  5620  0055'                    l678:
  5621  0055' 0008               	return
  5622  0056'                    __end_of___llmod:
  5623                           
  5624                           	psect	text13
  5625  0000'                    __ptext13:	
  5626 ;; *************** function ___lldiv *****************
  5627 ;; Defined at:
  5628 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  divisor         4    0[BANK0 ] unsigned long 
  5631 ;;  dividend        4    4[BANK0 ] unsigned long 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  quotient        4    8[BANK0 ] unsigned long 
  5634 ;;  counter         1   12[BANK0 ] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  4    0[BANK0 ] unsigned long 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5644 ;;      Params:         0       8       0       0       0
  5645 ;;      Locals:         0       5       0       0       0
  5646 ;;      Temps:          1       0       0       0       0
  5647 ;;      Totals:         1      13       0       0       0
  5648 ;;Total ram usage:       14 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    1
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_sprintf
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           
  5659                           ;psect for function ___lldiv
  5660  0000'                    ___lldiv:
  5661  0000'                    l4113:	
  5662                           ;incstack = 0
  5663                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5664                           
  5665  0000' 3000               	movlw	0
  5666  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  5667  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  5668  0003' 008B'              	movwf	___lldiv@quotient+3
  5669  0004' 3000               	movlw	0
  5670  0005' 008A'              	movwf	___lldiv@quotient+2
  5671  0006' 3000               	movlw	0
  5672  0007' 0089'              	movwf	___lldiv@quotient+1
  5673  0008' 3000               	movlw	0
  5674  0009' 0088'              	movwf	___lldiv@quotient
  5675  000A' 0803'              	movf	___lldiv@divisor+3,w
  5676  000B' 0402'              	iorwf	___lldiv@divisor+2,w
  5677  000C' 0401'              	iorwf	___lldiv@divisor+1,w
  5678  000D' 0400'              	iorwf	___lldiv@divisor,w
  5679  000E' 1903               	skipnz
  5680  000F' 2800'              	goto	u6651
  5681  0010' 2800'              	goto	u6650
  5682  0011'                    u6651:
  5683  0011' 2800'              	goto	l4133
  5684  0012'                    u6650:
  5685  0012'                    l4115:
  5686  0012' 018C'              	clrf	___lldiv@counter
  5687  0013' 0A8C'              	incf	___lldiv@counter,f
  5688  0014' 2800'              	goto	l4119
  5689  0015'                    l4117:
  5690  0015' 3001               	movlw	1
  5691  0016' 0083'              	movwf	??___lldiv
  5692  0017'                    u6665:
  5693  0017' 1003               	clrc
  5694  0018' 0D80'              	rlf	___lldiv@divisor,f
  5695  0019' 0D81'              	rlf	___lldiv@divisor+1,f
  5696  001A' 0D82'              	rlf	___lldiv@divisor+2,f
  5697  001B' 0D83'              	rlf	___lldiv@divisor+3,f
  5698  001C' 0B83'              	decfsz	??___lldiv,f
  5699  001D' 2800'              	goto	u6665
  5700  001E' 3001               	movlw	1
  5701  001F' 0083'              	movwf	??___lldiv
  5702  0020' 0803'              	movf	??___lldiv,w
  5703  0021' 078C'              	addwf	___lldiv@counter,f
  5704  0022'                    l4119:
  5705  0022' 1F83'              	btfss	___lldiv@divisor+3,7
  5706  0023' 2800'              	goto	u6671
  5707  0024' 2800'              	goto	u6670
  5708  0025'                    u6671:
  5709  0025' 2800'              	goto	l4117
  5710  0026'                    u6670:
  5711  0026'                    l4121:
  5712  0026' 3001               	movlw	1
  5713  0027' 0083'              	movwf	??___lldiv
  5714  0028'                    u6685:
  5715  0028' 1003               	clrc
  5716  0029' 0D88'              	rlf	___lldiv@quotient,f
  5717  002A' 0D89'              	rlf	___lldiv@quotient+1,f
  5718  002B' 0D8A'              	rlf	___lldiv@quotient+2,f
  5719  002C' 0D8B'              	rlf	___lldiv@quotient+3,f
  5720  002D' 0B83'              	decfsz	??___lldiv,f
  5721  002E' 2800'              	goto	u6685
  5722  002F'                    l4123:
  5723  002F' 0803'              	movf	___lldiv@divisor+3,w
  5724  0030' 0207'              	subwf	___lldiv@dividend+3,w
  5725  0031' 1D03               	skipz
  5726  0032' 2800'              	goto	u6695
  5727  0033' 0802'              	movf	___lldiv@divisor+2,w
  5728  0034' 0206'              	subwf	___lldiv@dividend+2,w
  5729  0035' 1D03               	skipz
  5730  0036' 2800'              	goto	u6695
  5731  0037' 0801'              	movf	___lldiv@divisor+1,w
  5732  0038' 0205'              	subwf	___lldiv@dividend+1,w
  5733  0039' 1D03               	skipz
  5734  003A' 2800'              	goto	u6695
  5735  003B' 0800'              	movf	___lldiv@divisor,w
  5736  003C' 0204'              	subwf	___lldiv@dividend,w
  5737  003D'                    u6695:
  5738  003D' 1C03               	skipc
  5739  003E' 2800'              	goto	u6691
  5740  003F' 2800'              	goto	u6690
  5741  0040'                    u6691:
  5742  0040' 2800'              	goto	l4129
  5743  0041'                    u6690:
  5744  0041'                    l4125:
  5745  0041' 0800'              	movf	___lldiv@divisor,w
  5746  0042' 0284'              	subwf	___lldiv@dividend,f
  5747  0043' 0801'              	movf	___lldiv@divisor+1,w
  5748  0044' 1C03               	skipc
  5749  0045' 0F01'              	incfsz	___lldiv@divisor+1,w
  5750  0046' 0285'              	subwf	___lldiv@dividend+1,f
  5751  0047' 0802'              	movf	___lldiv@divisor+2,w
  5752  0048' 1C03               	skipc
  5753  0049' 0F02'              	incfsz	___lldiv@divisor+2,w
  5754  004A' 0286'              	subwf	___lldiv@dividend+2,f
  5755  004B' 0803'              	movf	___lldiv@divisor+3,w
  5756  004C' 1C03               	skipc
  5757  004D' 0F03'              	incfsz	___lldiv@divisor+3,w
  5758  004E' 0287'              	subwf	___lldiv@dividend+3,f
  5759  004F'                    l4127:
  5760  004F' 1408'              	bsf	___lldiv@quotient,0
  5761  0050'                    l4129:
  5762  0050' 3001               	movlw	1
  5763  0051'                    u6705:
  5764  0051' 1003               	clrc
  5765  0052' 0C83'              	rrf	___lldiv@divisor+3,f
  5766  0053' 0C82'              	rrf	___lldiv@divisor+2,f
  5767  0054' 0C81'              	rrf	___lldiv@divisor+1,f
  5768  0055' 0C80'              	rrf	___lldiv@divisor,f
  5769  0056' 3EFF               	addlw	-1
  5770  0057' 1D03               	skipz
  5771  0058' 2800'              	goto	u6705
  5772  0059'                    l4131:
  5773  0059' 3001               	movlw	1
  5774  005A' 028C'              	subwf	___lldiv@counter,f
  5775  005B' 1D03               	btfss	3,2
  5776  005C' 2800'              	goto	u6711
  5777  005D' 2800'              	goto	u6710
  5778  005E'                    u6711:
  5779  005E' 2800'              	goto	l4121
  5780  005F'                    u6710:
  5781  005F'                    l4133:
  5782  005F' 080B'              	movf	___lldiv@quotient+3,w
  5783  0060' 0083'              	movwf	?___lldiv+3
  5784  0061' 080A'              	movf	___lldiv@quotient+2,w
  5785  0062' 0082'              	movwf	?___lldiv+2
  5786  0063' 0809'              	movf	___lldiv@quotient+1,w
  5787  0064' 0081'              	movwf	?___lldiv+1
  5788  0065' 0808'              	movf	___lldiv@quotient,w
  5789  0066' 0080'              	movwf	?___lldiv
  5790  0067'                    l458:
  5791  0067' 0008               	return
  5792  0068'                    __end_of___lldiv:
  5793                           
  5794                           	psect	text14
  5795  0000'                    __ptext14:	
  5796 ;; *************** function ___fltol *****************
  5797 ;; Defined at:
  5798 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  f1              4   56[BANK0 ] unsigned long 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  exp1            1   66[BANK0 ] unsigned char 
  5803 ;;  sign1           1   65[BANK0 ] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  4   56[BANK0 ] long 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5813 ;;      Params:         0       4       0       0       0
  5814 ;;      Locals:         0       2       0       0       0
  5815 ;;      Temps:          0       5       0       0       0
  5816 ;;      Totals:         0      11       0       0       0
  5817 ;;Total ram usage:       11 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    1
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_sprintf
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           
  5828                           ;psect for function ___fltol
  5829  0000'                    ___fltol:
  5830  0000'                    l3153:	
  5831                           ;incstack = 0
  5832                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5833                           
  5834  0000' 1003               	clrc
  5835  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  5836  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  5837  0003' 0D3A'              	rlf	___fltol@f1+2,w
  5838  0004' 0D3B'              	rlf	___fltol@f1+3,w
  5839  0005' 00BC'              	movwf	??___fltol
  5840  0006' 083C'              	movf	??___fltol,w
  5841  0007' 00C2'              	movwf	___fltol@exp1
  5842  0008' 0842'              	movf	___fltol@exp1,w
  5843  0009' 1D03               	btfss	3,2
  5844  000A' 2800'              	goto	u4861
  5845  000B' 2800'              	goto	u4860
  5846  000C'                    u4861:
  5847  000C' 2800'              	goto	l3159
  5848  000D'                    u4860:
  5849  000D'                    l3155:
  5850  000D' 3000               	movlw	0
  5851  000E' 00BB'              	movwf	?___fltol+3
  5852  000F' 3000               	movlw	0
  5853  0010' 00BA'              	movwf	?___fltol+2
  5854  0011' 3000               	movlw	0
  5855  0012' 00B9'              	movwf	?___fltol+1
  5856  0013' 3000               	movlw	0
  5857  0014' 00B8'              	movwf	?___fltol
  5858  0015' 2800'              	goto	l625
  5859  0016'                    l3159:
  5860  0016' 0838'              	movf	___fltol@f1,w
  5861  0017' 00BC'              	movwf	??___fltol
  5862  0018' 0839'              	movf	___fltol@f1+1,w
  5863  0019' 00BD'              	movwf	??___fltol+1
  5864  001A' 083A'              	movf	___fltol@f1+2,w
  5865  001B' 00BE'              	movwf	??___fltol+2
  5866  001C' 083B'              	movf	___fltol@f1+3,w
  5867  001D' 00BF'              	movwf	??___fltol+3
  5868  001E' 301F               	movlw	31
  5869  001F'                    u4875:
  5870  001F' 1003               	clrc
  5871  0020' 0CBF'              	rrf	??___fltol+3,f
  5872  0021' 0CBE'              	rrf	??___fltol+2,f
  5873  0022' 0CBD'              	rrf	??___fltol+1,f
  5874  0023' 0CBC'              	rrf	??___fltol,f
  5875  0024'                    u4870:
  5876  0024' 3EFF               	addlw	-1
  5877  0025' 1D03               	skipz
  5878  0026' 2800'              	goto	u4875
  5879  0027' 083C'              	movf	??___fltol,w
  5880  0028' 00C0'              	movwf	??___fltol+4
  5881  0029' 0840'              	movf	??___fltol+4,w
  5882  002A' 00C1'              	movwf	___fltol@sign1
  5883  002B'                    l3161:
  5884  002B' 17BA'              	bsf	___fltol@f1+2,7
  5885  002C'                    l3163:
  5886  002C' 30FF               	movlw	255
  5887  002D' 05B8'              	andwf	___fltol@f1,f
  5888  002E' 30FF               	movlw	255
  5889  002F' 05B9'              	andwf	___fltol@f1+1,f
  5890  0030' 30FF               	movlw	255
  5891  0031' 05BA'              	andwf	___fltol@f1+2,f
  5892  0032' 3000               	movlw	0
  5893  0033' 05BB'              	andwf	___fltol@f1+3,f
  5894  0034'                    l3165:
  5895  0034' 3096               	movlw	150
  5896  0035' 02C2'              	subwf	___fltol@exp1,f
  5897  0036'                    l3167:
  5898  0036' 1FC2'              	btfss	___fltol@exp1,7
  5899  0037' 2800'              	goto	u4881
  5900  0038' 2800'              	goto	u4880
  5901  0039'                    u4881:
  5902  0039' 2800'              	goto	l3177
  5903  003A'                    u4880:
  5904  003A'                    l3169:
  5905  003A' 0842'              	movf	___fltol@exp1,w
  5906  003B' 3A80               	xorlw	128
  5907  003C' 3E97               	addlw	151
  5908  003D' 1803               	skipnc
  5909  003E' 2800'              	goto	u4891
  5910  003F' 2800'              	goto	u4890
  5911  0040'                    u4891:
  5912  0040' 2800'              	goto	l3175
  5913  0041'                    u4890:
  5914  0041' 2800'              	goto	l3155
  5915  0042'                    l3175:
  5916  0042' 3001               	movlw	1
  5917  0043'                    u4905:
  5918  0043' 1003               	clrc
  5919  0044' 0CBB'              	rrf	___fltol@f1+3,f
  5920  0045' 0CBA'              	rrf	___fltol@f1+2,f
  5921  0046' 0CB9'              	rrf	___fltol@f1+1,f
  5922  0047' 0CB8'              	rrf	___fltol@f1,f
  5923  0048' 3EFF               	addlw	-1
  5924  0049' 1D03               	skipz
  5925  004A' 2800'              	goto	u4905
  5926  004B' 3001               	movlw	1
  5927  004C' 00BC'              	movwf	??___fltol
  5928  004D' 083C'              	movf	??___fltol,w
  5929  004E' 07C2'              	addwf	___fltol@exp1,f
  5930  004F' 1D03               	btfss	3,2
  5931  0050' 2800'              	goto	u4911
  5932  0051' 2800'              	goto	u4910
  5933  0052'                    u4911:
  5934  0052' 2800'              	goto	l3175
  5935  0053'                    u4910:
  5936  0053' 2800'              	goto	l3185
  5937  0054'                    l3177:
  5938  0054' 3020               	movlw	32
  5939  0055' 0242'              	subwf	___fltol@exp1,w
  5940  0056' 1C03               	skipc
  5941  0057' 2800'              	goto	u4921
  5942  0058' 2800'              	goto	u4920
  5943  0059'                    u4921:
  5944  0059' 2800'              	goto	l632
  5945  005A'                    u4920:
  5946  005A' 2800'              	goto	l3155
  5947  005B'                    l3183:
  5948  005B' 3001               	movlw	1
  5949  005C' 00BC'              	movwf	??___fltol
  5950  005D'                    u4935:
  5951  005D' 1003               	clrc
  5952  005E' 0DB8'              	rlf	___fltol@f1,f
  5953  005F' 0DB9'              	rlf	___fltol@f1+1,f
  5954  0060' 0DBA'              	rlf	___fltol@f1+2,f
  5955  0061' 0DBB'              	rlf	___fltol@f1+3,f
  5956  0062' 0BBC'              	decfsz	??___fltol,f
  5957  0063' 2800'              	goto	u4935
  5958  0064' 3001               	movlw	1
  5959  0065' 02C2'              	subwf	___fltol@exp1,f
  5960  0066'                    l632:
  5961  0066' 0842'              	movf	___fltol@exp1,w
  5962  0067' 1D03               	btfss	3,2
  5963  0068' 2800'              	goto	u4941
  5964  0069' 2800'              	goto	u4940
  5965  006A'                    u4941:
  5966  006A' 2800'              	goto	l3183
  5967  006B'                    u4940:
  5968  006B'                    l3185:
  5969  006B' 0841'              	movf	___fltol@sign1,w
  5970  006C' 1903               	btfsc	3,2
  5971  006D' 2800'              	goto	u4951
  5972  006E' 2800'              	goto	u4950
  5973  006F'                    u4951:
  5974  006F' 2800'              	goto	l635
  5975  0070'                    u4950:
  5976  0070'                    l3187:
  5977  0070' 09B8'              	comf	___fltol@f1,f
  5978  0071' 09B9'              	comf	___fltol@f1+1,f
  5979  0072' 09BA'              	comf	___fltol@f1+2,f
  5980  0073' 09BB'              	comf	___fltol@f1+3,f
  5981  0074' 0AB8'              	incf	___fltol@f1,f
  5982  0075' 1903               	skipnz
  5983  0076' 0AB9'              	incf	___fltol@f1+1,f
  5984  0077' 1903               	skipnz
  5985  0078' 0ABA'              	incf	___fltol@f1+2,f
  5986  0079' 1903               	skipnz
  5987  007A' 0ABB'              	incf	___fltol@f1+3,f
  5988  007B'                    l635:
  5989  007B'                    l625:
  5990  007B' 0008               	return
  5991  007C'                    __end_of___fltol:
  5992                           
  5993                           	psect	text15
  5994  0000'                    __ptext15:	
  5995 ;; *************** function ___flsub *****************
  5996 ;; Defined at:
  5997 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  a               4    0[BANK1 ] long 
  6000 ;;  b               4    4[BANK1 ] long 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;		None
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  4    0[BANK1 ] long 
  6005 ;; Registers used:
  6006 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6012 ;;      Params:         0       0       8       0       0
  6013 ;;      Locals:         0       0       0       0       0
  6014 ;;      Temps:          0       0       0       0       0
  6015 ;;      Totals:         0       0       8       0       0
  6016 ;;Total ram usage:        8 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    2
  6019 ;; This function calls:
  6020 ;;		___fladd
  6021 ;; This function is called by:
  6022 ;;		_sprintf
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           
  6027                           ;psect for function ___flsub
  6028  0000'                    ___flsub:
  6029  0000'                    l3209:	
  6030                           ;incstack = 0
  6031                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6032                           
  6033  0000' 3080               	movlw	128
  6034  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  6035  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  6036  0003' 0680'              	xorwf	(___flsub@a+3)^(0+128),f
  6037  0004'                    l3211:
  6038  0004' 0800'              	movf	(___flsub@b+3)^(0+128),w
  6039  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  6040  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  6041  0007' 00BC'              	movwf	___fladd@b+3
  6042  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  6043  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  6044  000A' 0800'              	movf	(___flsub@b+2)^(0+128),w
  6045  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  6046  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  6047  000D' 00BB'              	movwf	___fladd@b+2
  6048  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  6049  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  6050  0010' 0800'              	movf	(___flsub@b+1)^(0+128),w
  6051  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  6052  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  6053  0013' 00BA'              	movwf	___fladd@b+1
  6054  0014' 1683               	bsf	3,5	;RP0=1, select bank1
  6055  0015' 1303               	bcf	3,6	;RP1=0, select bank1
  6056  0016' 0800'              	movf	___flsub@b^(0+128),w
  6057  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  6058  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  6059  0019' 00B9'              	movwf	___fladd@b
  6060  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  6061  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  6062  001C' 0800'              	movf	(___flsub@a+3)^(0+128),w
  6063  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  6064  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  6065  001F' 00C0'              	movwf	___fladd@a+3
  6066  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  6067  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  6068  0022' 0800'              	movf	(___flsub@a+2)^(0+128),w
  6069  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  6070  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  6071  0025' 00BF'              	movwf	___fladd@a+2
  6072  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  6073  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  6074  0028' 0800'              	movf	(___flsub@a+1)^(0+128),w
  6075  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  6076  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  6077  002B' 00BE'              	movwf	___fladd@a+1
  6078  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  6079  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  6080  002E' 0800'              	movf	___flsub@a^(0+128),w
  6081  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  6082  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  6083  0031' 00BD'              	movwf	___fladd@a
  6084  0032' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  6085  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  6086  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  6087  0039' 083C'              	movf	?___fladd+3,w
  6088  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  6089  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  6090  003C' 0080'              	movwf	(?___flsub+3)^(0+128)
  6091  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  6092  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  6093  003F' 083B'              	movf	?___fladd+2,w
  6094  0040' 1683               	bsf	3,5	;RP0=1, select bank1
  6095  0041' 1303               	bcf	3,6	;RP1=0, select bank1
  6096  0042' 0080'              	movwf	(?___flsub+2)^(0+128)
  6097  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  6098  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  6099  0045' 083A'              	movf	?___fladd+1,w
  6100  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  6101  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  6102  0048' 0080'              	movwf	(?___flsub+1)^(0+128)
  6103  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  6104  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  6105  004B' 0839'              	movf	?___fladd,w
  6106  004C' 1683               	bsf	3,5	;RP0=1, select bank1
  6107  004D' 1303               	bcf	3,6	;RP1=0, select bank1
  6108  004E' 0080'              	movwf	?___flsub^(0+128)
  6109  004F'                    l795:
  6110  004F' 0008               	return
  6111  0050'                    __end_of___flsub:
  6112                           
  6113                           	psect	text16
  6114  0000'                    __ptext16:	
  6115 ;; *************** function ___fladd *****************
  6116 ;; Defined at:
  6117 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  b               4   57[BANK0 ] long 
  6120 ;;  a               4   61[BANK0 ] long 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  grs             1   76[BANK0 ] unsigned char 
  6123 ;;  bexp            1   75[BANK0 ] unsigned char 
  6124 ;;  aexp            1   74[BANK0 ] unsigned char 
  6125 ;;  signs           1   73[BANK0 ] unsigned char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  4   57[BANK0 ] unsigned char 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0, btemp+1
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6135 ;;      Params:         0       8       0       0       0
  6136 ;;      Locals:         0       4       0       0       0
  6137 ;;      Temps:          0       8       0       0       0
  6138 ;;      Totals:         0      20       0       0       0
  6139 ;;Total ram usage:       20 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    1
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_sprintf
  6146 ;;		___flsub
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           
  6151                           ;psect for function ___fladd
  6152  0000'                    ___fladd:
  6153  0000'                    l2543:	
  6154                           ;incstack = 0
  6155                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6156                           
  6157  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6158  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6159  0002' 083C'              	movf	___fladd@b+3,w
  6160  0003' 3980               	andlw	128
  6161  0004' 00C1'              	movwf	??___fladd
  6162  0005' 0841'              	movf	??___fladd,w
  6163  0006' 00C9'              	movwf	___fladd@signs
  6164  0007'                    l2545:
  6165  0007' 083C'              	movf	___fladd@b+3,w
  6166  0008' 00C1'              	movwf	??___fladd
  6167  0009' 0741'              	addwf	??___fladd,w
  6168  000A' 00C2'              	movwf	??___fladd+1
  6169  000B' 0842'              	movf	??___fladd+1,w
  6170  000C' 00CB'              	movwf	___fladd@bexp
  6171  000D'                    l2547:
  6172  000D' 1FBB'              	btfss	___fladd@b+2,7
  6173  000E' 2800'              	goto	u3271
  6174  000F' 2800'              	goto	u3270
  6175  0010'                    u3271:
  6176  0010' 2800'              	goto	l2551
  6177  0011'                    u3270:
  6178  0011'                    l2549:
  6179  0011' 144B'              	bsf	___fladd@bexp,0
  6180  0012'                    l2551:
  6181  0012' 084B'              	movf	___fladd@bexp,w
  6182  0013' 1903               	btfsc	3,2
  6183  0014' 2800'              	goto	u3281
  6184  0015' 2800'              	goto	u3280
  6185  0016'                    u3281:
  6186  0016' 2800'              	goto	l2561
  6187  0017'                    u3280:
  6188  0017'                    l2553:
  6189  0017' 0A4B'              	incf	___fladd@bexp,w
  6190  0018' 1D03               	btfss	3,2
  6191  0019' 2800'              	goto	u3291
  6192  001A' 2800'              	goto	u3290
  6193  001B'                    u3291:
  6194  001B' 2800'              	goto	l2557
  6195  001C'                    u3290:
  6196  001C'                    l2555:
  6197  001C' 3000               	movlw	0
  6198  001D' 00BC'              	movwf	___fladd@b+3
  6199  001E' 3000               	movlw	0
  6200  001F' 00BB'              	movwf	___fladd@b+2
  6201  0020' 3000               	movlw	0
  6202  0021' 00BA'              	movwf	___fladd@b+1
  6203  0022' 3000               	movlw	0
  6204  0023' 00B9'              	movwf	___fladd@b
  6205  0024'                    l2557:
  6206  0024' 17BB'              	bsf	___fladd@b+2,7
  6207  0025'                    l2559:
  6208  0025' 01BC'              	clrf	___fladd@b+3
  6209  0026' 2800'              	goto	l2563
  6210  0027'                    l2561:
  6211  0027' 3000               	movlw	0
  6212  0028' 00BC'              	movwf	___fladd@b+3
  6213  0029' 3000               	movlw	0
  6214  002A' 00BB'              	movwf	___fladd@b+2
  6215  002B' 3000               	movlw	0
  6216  002C' 00BA'              	movwf	___fladd@b+1
  6217  002D' 3000               	movlw	0
  6218  002E' 00B9'              	movwf	___fladd@b
  6219  002F'                    l2563:
  6220  002F' 0840'              	movf	___fladd@a+3,w
  6221  0030' 3980               	andlw	128
  6222  0031' 00C1'              	movwf	??___fladd
  6223  0032' 0841'              	movf	??___fladd,w
  6224  0033' 00CA'              	movwf	___fladd@aexp
  6225  0034'                    l2565:
  6226  0034' 084A'              	movf	___fladd@aexp,w
  6227  0035' 0649'              	xorwf	___fladd@signs,w
  6228  0036' 1903               	skipnz
  6229  0037' 2800'              	goto	u3301
  6230  0038' 2800'              	goto	u3300
  6231  0039'                    u3301:
  6232  0039' 2800'              	goto	l2569
  6233  003A'                    u3300:
  6234  003A'                    l2567:
  6235  003A' 1749'              	bsf	___fladd@signs,6
  6236  003B'                    l2569:
  6237  003B' 0840'              	movf	___fladd@a+3,w
  6238  003C' 00C1'              	movwf	??___fladd
  6239  003D' 0741'              	addwf	??___fladd,w
  6240  003E' 00C2'              	movwf	??___fladd+1
  6241  003F' 0842'              	movf	??___fladd+1,w
  6242  0040' 00CA'              	movwf	___fladd@aexp
  6243  0041'                    l2571:
  6244  0041' 1FBF'              	btfss	___fladd@a+2,7
  6245  0042' 2800'              	goto	u3311
  6246  0043' 2800'              	goto	u3310
  6247  0044'                    u3311:
  6248  0044' 2800'              	goto	l2575
  6249  0045'                    u3310:
  6250  0045'                    l2573:
  6251  0045' 144A'              	bsf	___fladd@aexp,0
  6252  0046'                    l2575:
  6253  0046' 084A'              	movf	___fladd@aexp,w
  6254  0047' 1903               	btfsc	3,2
  6255  0048' 2800'              	goto	u3321
  6256  0049' 2800'              	goto	u3320
  6257  004A'                    u3321:
  6258  004A' 2800'              	goto	l2585
  6259  004B'                    u3320:
  6260  004B'                    l2577:
  6261  004B' 0A4A'              	incf	___fladd@aexp,w
  6262  004C' 1D03               	btfss	3,2
  6263  004D' 2800'              	goto	u3331
  6264  004E' 2800'              	goto	u3330
  6265  004F'                    u3331:
  6266  004F' 2800'              	goto	l2581
  6267  0050'                    u3330:
  6268  0050'                    l2579:
  6269  0050' 3000               	movlw	0
  6270  0051' 00C0'              	movwf	___fladd@a+3
  6271  0052' 3000               	movlw	0
  6272  0053' 00BF'              	movwf	___fladd@a+2
  6273  0054' 3000               	movlw	0
  6274  0055' 00BE'              	movwf	___fladd@a+1
  6275  0056' 3000               	movlw	0
  6276  0057' 00BD'              	movwf	___fladd@a
  6277  0058'                    l2581:
  6278  0058' 17BF'              	bsf	___fladd@a+2,7
  6279  0059'                    l2583:
  6280  0059' 01C0'              	clrf	___fladd@a+3
  6281  005A' 2800'              	goto	l749
  6282  005B'                    l2585:
  6283  005B' 3000               	movlw	0
  6284  005C' 00C0'              	movwf	___fladd@a+3
  6285  005D' 3000               	movlw	0
  6286  005E' 00BF'              	movwf	___fladd@a+2
  6287  005F' 3000               	movlw	0
  6288  0060' 00BE'              	movwf	___fladd@a+1
  6289  0061' 3000               	movlw	0
  6290  0062' 00BD'              	movwf	___fladd@a
  6291  0063'                    l749:
  6292  0063' 084B'              	movf	___fladd@bexp,w
  6293  0064' 024A'              	subwf	___fladd@aexp,w
  6294  0065' 1803               	skipnc
  6295  0066' 2800'              	goto	u3341
  6296  0067' 2800'              	goto	u3340
  6297  0068'                    u3341:
  6298  0068' 2800'              	goto	l2621
  6299  0069'                    u3340:
  6300  0069'                    l2587:
  6301  0069' 1F49'              	btfss	___fladd@signs,6
  6302  006A' 2800'              	goto	u3351
  6303  006B' 2800'              	goto	u3350
  6304  006C'                    u3351:
  6305  006C' 2800'              	goto	l2591
  6306  006D'                    u3350:
  6307  006D'                    l2589:
  6308  006D' 3080               	movlw	128
  6309  006E' 00C1'              	movwf	??___fladd
  6310  006F' 0841'              	movf	??___fladd,w
  6311  0070' 06C9'              	xorwf	___fladd@signs,f
  6312  0071'                    l2591:
  6313  0071' 084B'              	movf	___fladd@bexp,w
  6314  0072' 00C1'              	movwf	??___fladd
  6315  0073' 0841'              	movf	??___fladd,w
  6316  0074' 00CC'              	movwf	___fladd@grs
  6317  0075'                    l2593:
  6318  0075' 084A'              	movf	___fladd@aexp,w
  6319  0076' 00C1'              	movwf	??___fladd
  6320  0077' 0841'              	movf	??___fladd,w
  6321  0078' 00CB'              	movwf	___fladd@bexp
  6322  0079'                    l2595:
  6323  0079' 084C'              	movf	___fladd@grs,w
  6324  007A' 00C1'              	movwf	??___fladd
  6325  007B' 0841'              	movf	??___fladd,w
  6326  007C' 00CA'              	movwf	___fladd@aexp
  6327  007D'                    l2597:
  6328  007D' 0839'              	movf	___fladd@b,w
  6329  007E' 00C1'              	movwf	??___fladd
  6330  007F' 0841'              	movf	??___fladd,w
  6331  0080' 00CC'              	movwf	___fladd@grs
  6332  0081'                    l2599:
  6333  0081' 083D'              	movf	___fladd@a,w
  6334  0082' 00C1'              	movwf	??___fladd
  6335  0083' 0841'              	movf	??___fladd,w
  6336  0084' 00B9'              	movwf	___fladd@b
  6337  0085'                    l2601:
  6338  0085' 084C'              	movf	___fladd@grs,w
  6339  0086' 00C1'              	movwf	??___fladd
  6340  0087' 0841'              	movf	??___fladd,w
  6341  0088' 00BD'              	movwf	___fladd@a
  6342  0089'                    l2603:
  6343  0089' 083A'              	movf	___fladd@b+1,w
  6344  008A' 00C1'              	movwf	??___fladd
  6345  008B' 0841'              	movf	??___fladd,w
  6346  008C' 00CC'              	movwf	___fladd@grs
  6347  008D'                    l2605:
  6348  008D' 083E'              	movf	___fladd@a+1,w
  6349  008E' 00C1'              	movwf	??___fladd
  6350  008F' 0841'              	movf	??___fladd,w
  6351  0090' 00BA'              	movwf	___fladd@b+1
  6352  0091'                    l2607:
  6353  0091' 084C'              	movf	___fladd@grs,w
  6354  0092' 00C1'              	movwf	??___fladd
  6355  0093' 0841'              	movf	??___fladd,w
  6356  0094' 00BE'              	movwf	___fladd@a+1
  6357  0095'                    l2609:
  6358  0095' 083B'              	movf	___fladd@b+2,w
  6359  0096' 00C1'              	movwf	??___fladd
  6360  0097' 0841'              	movf	??___fladd,w
  6361  0098' 00CC'              	movwf	___fladd@grs
  6362  0099'                    l2611:
  6363  0099' 083F'              	movf	___fladd@a+2,w
  6364  009A' 00C1'              	movwf	??___fladd
  6365  009B' 0841'              	movf	??___fladd,w
  6366  009C' 00BB'              	movwf	___fladd@b+2
  6367  009D'                    l2613:
  6368  009D' 084C'              	movf	___fladd@grs,w
  6369  009E' 00C1'              	movwf	??___fladd
  6370  009F' 0841'              	movf	??___fladd,w
  6371  00A0' 00BF'              	movwf	___fladd@a+2
  6372  00A1'                    l2615:
  6373  00A1' 083C'              	movf	___fladd@b+3,w
  6374  00A2' 00C1'              	movwf	??___fladd
  6375  00A3' 0841'              	movf	??___fladd,w
  6376  00A4' 00CC'              	movwf	___fladd@grs
  6377  00A5'                    l2617:
  6378  00A5' 0840'              	movf	___fladd@a+3,w
  6379  00A6' 00C1'              	movwf	??___fladd
  6380  00A7' 0841'              	movf	??___fladd,w
  6381  00A8' 00BC'              	movwf	___fladd@b+3
  6382  00A9'                    l2619:
  6383  00A9' 084C'              	movf	___fladd@grs,w
  6384  00AA' 00C1'              	movwf	??___fladd
  6385  00AB' 0841'              	movf	??___fladd,w
  6386  00AC' 00C0'              	movwf	___fladd@a+3
  6387  00AD'                    l2621:
  6388  00AD' 01CC'              	clrf	___fladd@grs
  6389  00AE'                    l2623:
  6390  00AE' 084A'              	movf	___fladd@aexp,w
  6391  00AF' 00C1'              	movwf	??___fladd
  6392  00B0' 01C2'              	clrf	??___fladd+1
  6393  00B1' 0842'              	movf	??___fladd+1,w
  6394  00B2' 00C4'              	movwf	??___fladd+3
  6395  00B3' 084B'              	movf	___fladd@bexp,w
  6396  00B4' 0241'              	subwf	??___fladd,w
  6397  00B5' 00C3'              	movwf	??___fladd+2
  6398  00B6' 1C03               	skipc
  6399  00B7' 03C4'              	decf	??___fladd+3,f
  6400  00B8' 0844'              	movf	??___fladd+3,w
  6401  00B9' 3A80               	xorlw	128
  6402  00BA' 00FF               	movwf	btemp+1
  6403  00BB' 3080               	movlw	128
  6404  00BC' 027F               	subwf	btemp+1,w
  6405  00BD' 1D03               	skipz
  6406  00BE' 2800'              	goto	u3365
  6407  00BF' 301A               	movlw	26
  6408  00C0' 0243'              	subwf	??___fladd+2,w
  6409  00C1'                    u3365:
  6410  00C1' 1C03               	skipc
  6411  00C2' 2800'              	goto	u3361
  6412  00C3' 2800'              	goto	u3360
  6413  00C4'                    u3361:
  6414  00C4' 2800'              	goto	l2639
  6415  00C5'                    u3360:
  6416  00C5'                    l2625:
  6417  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  6418  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  6419  00C7' 083C'              	movf	___fladd@b+3,w
  6420  00C8' 043B'              	iorwf	___fladd@b+2,w
  6421  00C9' 043A'              	iorwf	___fladd@b+1,w
  6422  00CA' 0439'              	iorwf	___fladd@b,w
  6423  00CB' 1D03               	skipz
  6424  00CC' 2800'              	goto	u3371
  6425  00CD' 2800'              	goto	u3370
  6426  00CE'                    u3371:
  6427  00CE' 3001               	movlw	1
  6428  00CF' 2800'              	goto	u3380
  6429  00D0'                    u3370:
  6430  00D0' 3000               	movlw	0
  6431  00D1'                    u3380:
  6432  00D1' 00C1'              	movwf	??___fladd
  6433  00D2' 0841'              	movf	??___fladd,w
  6434  00D3' 00CC'              	movwf	___fladd@grs
  6435  00D4' 3000               	movlw	0
  6436  00D5' 00BC'              	movwf	___fladd@b+3
  6437  00D6' 3000               	movlw	0
  6438  00D7' 00BB'              	movwf	___fladd@b+2
  6439  00D8' 3000               	movlw	0
  6440  00D9' 00BA'              	movwf	___fladd@b+1
  6441  00DA' 3000               	movlw	0
  6442  00DB' 00B9'              	movwf	___fladd@b
  6443  00DC' 084A'              	movf	___fladd@aexp,w
  6444  00DD' 00C1'              	movwf	??___fladd
  6445  00DE' 0841'              	movf	??___fladd,w
  6446  00DF' 00CB'              	movwf	___fladd@bexp
  6447  00E0' 2800'              	goto	l753
  6448  00E1'                    l755:
  6449  00E1' 1C4C'              	btfss	___fladd@grs,0
  6450  00E2' 2800'              	goto	u3391
  6451  00E3' 2800'              	goto	u3390
  6452  00E4'                    u3391:
  6453  00E4' 2800'              	goto	l2629
  6454  00E5'                    u3390:
  6455  00E5'                    l2627:
  6456  00E5' 084C'              	movf	___fladd@grs,w
  6457  00E6' 00C1'              	movwf	??___fladd
  6458  00E7' 1003               	clrc
  6459  00E8' 0C41'              	rrf	??___fladd,w
  6460  00E9' 3801               	iorlw	1
  6461  00EA' 00C2'              	movwf	??___fladd+1
  6462  00EB' 0842'              	movf	??___fladd+1,w
  6463  00EC' 00CC'              	movwf	___fladd@grs
  6464  00ED' 2800'              	goto	l2631
  6465  00EE'                    l2629:
  6466  00EE' 1003               	clrc
  6467  00EF' 0CCC'              	rrf	___fladd@grs,f
  6468  00F0'                    l2631:
  6469  00F0' 1C39'              	btfss	___fladd@b,0
  6470  00F1' 2800'              	goto	u3401
  6471  00F2' 2800'              	goto	u3400
  6472  00F3'                    u3401:
  6473  00F3' 2800'              	goto	l2635
  6474  00F4'                    u3400:
  6475  00F4'                    l2633:
  6476  00F4' 17CC'              	bsf	___fladd@grs,7
  6477  00F5'                    l2635:
  6478  00F5' 3001               	movlw	1
  6479  00F6' 00C1'              	movwf	??___fladd
  6480  00F7'                    u3415:
  6481  00F7' 0D3C'              	rlf	___fladd@b+3,w
  6482  00F8' 0CBC'              	rrf	___fladd@b+3,f
  6483  00F9' 0CBB'              	rrf	___fladd@b+2,f
  6484  00FA' 0CBA'              	rrf	___fladd@b+1,f
  6485  00FB' 0CB9'              	rrf	___fladd@b,f
  6486  00FC' 0B80'              	decfsz	??___fladd& (0+127),f
  6487  00FD' 2800'              	goto	u3415
  6488  00FE'                    l2637:
  6489  00FE' 3001               	movlw	1
  6490  00FF' 00C1'              	movwf	??___fladd
  6491  0100' 0841'              	movf	??___fladd,w
  6492  0101' 07CB'              	addwf	___fladd@bexp,f
  6493  0102'                    l2639:
  6494  0102' 1283               	bcf	3,5	;RP0=0, select bank0
  6495  0103' 1303               	bcf	3,6	;RP1=0, select bank0
  6496  0104' 084A'              	movf	___fladd@aexp,w
  6497  0105' 024B'              	subwf	___fladd@bexp,w
  6498  0106' 1C03               	skipc
  6499  0107' 2800'              	goto	u3421
  6500  0108' 2800'              	goto	u3420
  6501  0109'                    u3421:
  6502  0109' 2800'              	goto	l755
  6503  010A'                    u3420:
  6504  010A'                    l753:
  6505  010A' 1B49'              	btfsc	___fladd@signs,6
  6506  010B' 2800'              	goto	u3431
  6507  010C' 2800'              	goto	u3430
  6508  010D'                    u3431:
  6509  010D' 2800'              	goto	l2665
  6510  010E'                    u3430:
  6511  010E'                    l2641:
  6512  010E' 084B'              	movf	___fladd@bexp,w
  6513  010F' 1D03               	btfss	3,2
  6514  0110' 2800'              	goto	u3441
  6515  0111' 2800'              	goto	u3440
  6516  0112'                    u3441:
  6517  0112' 2800'              	goto	l2647
  6518  0113'                    u3440:
  6519  0113'                    l2643:
  6520  0113' 3000               	movlw	0
  6521  0114' 00BC'              	movwf	?___fladd+3
  6522  0115' 3000               	movlw	0
  6523  0116' 00BB'              	movwf	?___fladd+2
  6524  0117' 3000               	movlw	0
  6525  0118' 00BA'              	movwf	?___fladd+1
  6526  0119' 3000               	movlw	0
  6527  011A' 00B9'              	movwf	?___fladd
  6528  011B' 2800'              	goto	l762
  6529  011C'                    l2647:
  6530  011C' 083D'              	movf	___fladd@a,w
  6531  011D' 07B9'              	addwf	___fladd@b,f
  6532  011E' 083E'              	movf	___fladd@a+1,w
  6533  011F' 1103               	clrz
  6534  0120' 1803               	skipnc
  6535  0121' 3E01               	addlw	1
  6536  0122' 1903               	skipnz
  6537  0123' 2800'              	goto	u3451
  6538  0124' 07BA'              	addwf	___fladd@b+1,f
  6539  0125'                    u3451:
  6540  0125' 083F'              	movf	___fladd@a+2,w
  6541  0126' 1103               	clrz
  6542  0127' 1803               	skipnc
  6543  0128' 3E01               	addlw	1
  6544  0129' 1903               	skipnz
  6545  012A' 2800'              	goto	u3452
  6546  012B' 07BB'              	addwf	___fladd@b+2,f
  6547  012C'                    u3452:
  6548  012C' 0840'              	movf	___fladd@a+3,w
  6549  012D' 1103               	clrz
  6550  012E' 1803               	skipnc
  6551  012F' 3E01               	addlw	1
  6552  0130' 1903               	skipnz
  6553  0131' 2800'              	goto	u3453
  6554  0132' 07BC'              	addwf	___fladd@b+3,f
  6555  0133'                    u3453:
  6556  0133'                    l2649:
  6557  0133' 1C3C'              	btfss	___fladd@b+3,0
  6558  0134' 2800'              	goto	u3461
  6559  0135' 2800'              	goto	u3460
  6560  0136'                    u3461:
  6561  0136' 2800'              	goto	l2699
  6562  0137'                    u3460:
  6563  0137'                    l2651:
  6564  0137' 1C4C'              	btfss	___fladd@grs,0
  6565  0138' 2800'              	goto	u3471
  6566  0139' 2800'              	goto	u3470
  6567  013A'                    u3471:
  6568  013A' 2800'              	goto	l2655
  6569  013B'                    u3470:
  6570  013B'                    l2653:
  6571  013B' 084C'              	movf	___fladd@grs,w
  6572  013C' 00C1'              	movwf	??___fladd
  6573  013D' 1003               	clrc
  6574  013E' 0C41'              	rrf	??___fladd,w
  6575  013F' 3801               	iorlw	1
  6576  0140' 00C2'              	movwf	??___fladd+1
  6577  0141' 0842'              	movf	??___fladd+1,w
  6578  0142' 00CC'              	movwf	___fladd@grs
  6579  0143' 2800'              	goto	l2657
  6580  0144'                    l2655:
  6581  0144' 1003               	clrc
  6582  0145' 0CCC'              	rrf	___fladd@grs,f
  6583  0146'                    l2657:
  6584  0146' 1C39'              	btfss	___fladd@b,0
  6585  0147' 2800'              	goto	u3481
  6586  0148' 2800'              	goto	u3480
  6587  0149'                    u3481:
  6588  0149' 2800'              	goto	l2661
  6589  014A'                    u3480:
  6590  014A'                    l2659:
  6591  014A' 17CC'              	bsf	___fladd@grs,7
  6592  014B'                    l2661:
  6593  014B' 3001               	movlw	1
  6594  014C' 00C1'              	movwf	??___fladd
  6595  014D'                    u3495:
  6596  014D' 0D3C'              	rlf	___fladd@b+3,w
  6597  014E' 0CBC'              	rrf	___fladd@b+3,f
  6598  014F' 0CBB'              	rrf	___fladd@b+2,f
  6599  0150' 0CBA'              	rrf	___fladd@b+1,f
  6600  0151' 0CB9'              	rrf	___fladd@b,f
  6601  0152' 0B80'              	decfsz	??___fladd& (0+127),f
  6602  0153' 2800'              	goto	u3495
  6603  0154'                    l2663:
  6604  0154' 3001               	movlw	1
  6605  0155' 00C1'              	movwf	??___fladd
  6606  0156' 0841'              	movf	??___fladd,w
  6607  0157' 07CB'              	addwf	___fladd@bexp,f
  6608  0158' 2800'              	goto	l2699
  6609  0159'                    l2665:
  6610  0159' 083C'              	movf	___fladd@b+3,w
  6611  015A' 3A80               	xorlw	128
  6612  015B' 00FF               	movwf	btemp+1
  6613  015C' 0840'              	movf	___fladd@a+3,w
  6614  015D' 3A80               	xorlw	128
  6615  015E' 027F               	subwf	btemp+1,w
  6616  015F' 1D03               	skipz
  6617  0160' 2800'              	goto	u3503
  6618  0161' 083F'              	movf	___fladd@a+2,w
  6619  0162' 023B'              	subwf	___fladd@b+2,w
  6620  0163' 1D03               	skipz
  6621  0164' 2800'              	goto	u3503
  6622  0165' 083E'              	movf	___fladd@a+1,w
  6623  0166' 023A'              	subwf	___fladd@b+1,w
  6624  0167' 1D03               	skipz
  6625  0168' 2800'              	goto	u3503
  6626  0169' 083D'              	movf	___fladd@a,w
  6627  016A' 0239'              	subwf	___fladd@b,w
  6628  016B'                    u3503:
  6629  016B' 1803               	skipnc
  6630  016C' 2800'              	goto	u3501
  6631  016D' 2800'              	goto	u3500
  6632  016E'                    u3501:
  6633  016E' 2800'              	goto	l2675
  6634  016F'                    u3500:
  6635  016F'                    l2667:
  6636  016F' 30FF               	movlw	255
  6637  0170' 00C1'              	movwf	??___fladd
  6638  0171' 30FF               	movlw	255
  6639  0172' 00C2'              	movwf	??___fladd+1
  6640  0173' 30FF               	movlw	255
  6641  0174' 00C3'              	movwf	??___fladd+2
  6642  0175' 30FF               	movlw	255
  6643  0176' 00C4'              	movwf	??___fladd+3
  6644  0177' 083D'              	movf	___fladd@a,w
  6645  0178' 00C5'              	movwf	??___fladd+4
  6646  0179' 083E'              	movf	___fladd@a+1,w
  6647  017A' 00C6'              	movwf	??___fladd+5
  6648  017B' 083F'              	movf	___fladd@a+2,w
  6649  017C' 00C7'              	movwf	??___fladd+6
  6650  017D' 0840'              	movf	___fladd@a+3,w
  6651  017E' 00C8'              	movwf	??___fladd+7
  6652  017F' 0839'              	movf	___fladd@b,w
  6653  0180' 02C5'              	subwf	??___fladd+4,f
  6654  0181' 083A'              	movf	___fladd@b+1,w
  6655  0182' 1C03               	skipc
  6656  0183' 0F3A'              	incfsz	___fladd@b+1,w
  6657  0184' 2800'              	goto	u3511
  6658  0185' 2800'              	goto	u3512
  6659  0186'                    u3511:
  6660  0186' 02C6'              	subwf	??___fladd+5,f
  6661  0187'                    u3512:
  6662  0187' 083B'              	movf	___fladd@b+2,w
  6663  0188' 1C03               	skipc
  6664  0189' 0F3B'              	incfsz	___fladd@b+2,w
  6665  018A' 2800'              	goto	u3513
  6666  018B' 2800'              	goto	u3514
  6667  018C'                    u3513:
  6668  018C' 02C7'              	subwf	??___fladd+6,f
  6669  018D'                    u3514:
  6670  018D' 083C'              	movf	___fladd@b+3,w
  6671  018E' 1C03               	skipc
  6672  018F' 0F3C'              	incfsz	___fladd@b+3,w
  6673  0190' 2800'              	goto	u3515
  6674  0191' 2800'              	goto	u3516
  6675  0192'                    u3515:
  6676  0192' 02C8'              	subwf	??___fladd+7,f
  6677  0193'                    u3516:
  6678  0193' 0845'              	movf	??___fladd+4,w
  6679  0194' 07C1'              	addwf	??___fladd,f
  6680  0195' 0846'              	movf	??___fladd+5,w
  6681  0196' 1803               	skipnc
  6682  0197' 0F46'              	incfsz	??___fladd+5,w
  6683  0198' 2800'              	goto	u3520
  6684  0199' 2800'              	goto	u3521
  6685  019A'                    u3520:
  6686  019A' 07C2'              	addwf	??___fladd+1,f
  6687  019B'                    u3521:
  6688  019B' 0847'              	movf	??___fladd+6,w
  6689  019C' 1803               	skipnc
  6690  019D' 0F47'              	incfsz	??___fladd+6,w
  6691  019E' 2800'              	goto	u3522
  6692  019F' 2800'              	goto	u3523
  6693  01A0'                    u3522:
  6694  01A0' 07C3'              	addwf	??___fladd+2,f
  6695  01A1'                    u3523:
  6696  01A1' 0848'              	movf	??___fladd+7,w
  6697  01A2' 1803               	skipnc
  6698  01A3' 0A48'              	incf	??___fladd+7,w
  6699  01A4' 07C4'              	addwf	??___fladd+3,f
  6700  01A5' 0844'              	movf	??___fladd+3,w
  6701  01A6' 00BC'              	movwf	___fladd@b+3
  6702  01A7' 0843'              	movf	??___fladd+2,w
  6703  01A8' 00BB'              	movwf	___fladd@b+2
  6704  01A9' 0842'              	movf	??___fladd+1,w
  6705  01AA' 00BA'              	movwf	___fladd@b+1
  6706  01AB' 0841'              	movf	??___fladd,w
  6707  01AC' 00B9'              	movwf	___fladd@b
  6708  01AD'                    l2669:
  6709  01AD' 3080               	movlw	128
  6710  01AE' 00C1'              	movwf	??___fladd
  6711  01AF' 0841'              	movf	??___fladd,w
  6712  01B0' 06C9'              	xorwf	___fladd@signs,f
  6713  01B1' 09CC'              	comf	___fladd@grs,f
  6714  01B2' 0ACC'              	incf	___fladd@grs,f
  6715  01B3'                    l2671:
  6716  01B3' 084C'              	movf	___fladd@grs,w
  6717  01B4' 1D03               	btfss	3,2
  6718  01B5' 2800'              	goto	u3531
  6719  01B6' 2800'              	goto	u3530
  6720  01B7'                    u3531:
  6721  01B7' 2800'              	goto	l770
  6722  01B8'                    u3530:
  6723  01B8'                    l2673:
  6724  01B8' 3001               	movlw	1
  6725  01B9' 07B9'              	addwf	___fladd@b,f
  6726  01BA' 3000               	movlw	0
  6727  01BB' 1803               	skipnc
  6728  01BC' 3001               	movlw	1
  6729  01BD' 07BA'              	addwf	___fladd@b+1,f
  6730  01BE' 3000               	movlw	0
  6731  01BF' 1803               	skipnc
  6732  01C0' 3001               	movlw	1
  6733  01C1' 07BB'              	addwf	___fladd@b+2,f
  6734  01C2' 3000               	movlw	0
  6735  01C3' 1803               	skipnc
  6736  01C4' 3001               	movlw	1
  6737  01C5' 07BC'              	addwf	___fladd@b+3,f
  6738  01C6' 2800'              	goto	l770
  6739  01C7'                    l2675:
  6740  01C7' 083D'              	movf	___fladd@a,w
  6741  01C8' 02B9'              	subwf	___fladd@b,f
  6742  01C9' 083E'              	movf	___fladd@a+1,w
  6743  01CA' 1C03               	skipc
  6744  01CB' 0F3E'              	incfsz	___fladd@a+1,w
  6745  01CC' 02BA'              	subwf	___fladd@b+1,f
  6746  01CD' 083F'              	movf	___fladd@a+2,w
  6747  01CE' 1C03               	skipc
  6748  01CF' 0F3F'              	incfsz	___fladd@a+2,w
  6749  01D0' 02BB'              	subwf	___fladd@b+2,f
  6750  01D1' 0840'              	movf	___fladd@a+3,w
  6751  01D2' 1C03               	skipc
  6752  01D3' 0F40'              	incfsz	___fladd@a+3,w
  6753  01D4' 02BC'              	subwf	___fladd@b+3,f
  6754  01D5'                    l770:
  6755  01D5' 083C'              	movf	___fladd@b+3,w
  6756  01D6' 043B'              	iorwf	___fladd@b+2,w
  6757  01D7' 043A'              	iorwf	___fladd@b+1,w
  6758  01D8' 0439'              	iorwf	___fladd@b,w
  6759  01D9' 1D03               	skipz
  6760  01DA' 2800'              	goto	u3541
  6761  01DB' 2800'              	goto	u3540
  6762  01DC'                    u3541:
  6763  01DC' 2800'              	goto	l2697
  6764  01DD'                    u3540:
  6765  01DD'                    l2677:
  6766  01DD' 084C'              	movf	___fladd@grs,w
  6767  01DE' 1D03               	btfss	3,2
  6768  01DF' 2800'              	goto	u3551
  6769  01E0' 2800'              	goto	u3550
  6770  01E1'                    u3551:
  6771  01E1' 2800'              	goto	l2697
  6772  01E2'                    u3550:
  6773  01E2'                    l2679:
  6774  01E2' 3000               	movlw	0
  6775  01E3' 00BC'              	movwf	?___fladd+3
  6776  01E4' 3000               	movlw	0
  6777  01E5' 00BB'              	movwf	?___fladd+2
  6778  01E6' 3000               	movlw	0
  6779  01E7' 00BA'              	movwf	?___fladd+1
  6780  01E8' 3000               	movlw	0
  6781  01E9' 00B9'              	movwf	?___fladd
  6782  01EA' 2800'              	goto	l762
  6783  01EB'                    l2683:
  6784  01EB' 3001               	movlw	1
  6785  01EC' 00C1'              	movwf	??___fladd
  6786  01ED'                    u3565:
  6787  01ED' 1003               	clrc
  6788  01EE' 0DB9'              	rlf	___fladd@b,f
  6789  01EF' 0DBA'              	rlf	___fladd@b+1,f
  6790  01F0' 0DBB'              	rlf	___fladd@b+2,f
  6791  01F1' 0DBC'              	rlf	___fladd@b+3,f
  6792  01F2' 0BC1'              	decfsz	??___fladd,f
  6793  01F3' 2800'              	goto	u3565
  6794  01F4'                    l2685:
  6795  01F4' 1FCC'              	btfss	___fladd@grs,7
  6796  01F5' 2800'              	goto	u3571
  6797  01F6' 2800'              	goto	u3570
  6798  01F7'                    u3571:
  6799  01F7' 2800'              	goto	l774
  6800  01F8'                    u3570:
  6801  01F8'                    l2687:
  6802  01F8' 1439'              	bsf	___fladd@b,0
  6803  01F9'                    l774:
  6804  01F9' 1C4C'              	btfss	___fladd@grs,0
  6805  01FA' 2800'              	goto	u3581
  6806  01FB' 2800'              	goto	u3580
  6807  01FC'                    u3581:
  6808  01FC' 2800'              	goto	l2691
  6809  01FD'                    u3580:
  6810  01FD'                    l2689:
  6811  01FD' 1403               	setc
  6812  01FE' 0DCC'              	rlf	___fladd@grs,f
  6813  01FF' 2800'              	goto	l2693
  6814  0200'                    l2691:
  6815  0200' 1003               	clrc
  6816  0201' 0DCC'              	rlf	___fladd@grs,f
  6817  0202'                    l2693:
  6818  0202' 084B'              	movf	___fladd@bexp,w
  6819  0203' 1903               	btfsc	3,2
  6820  0204' 2800'              	goto	u3591
  6821  0205' 2800'              	goto	u3590
  6822  0206'                    u3591:
  6823  0206' 2800'              	goto	l2697
  6824  0207'                    u3590:
  6825  0207'                    l2695:
  6826  0207' 3001               	movlw	1
  6827  0208' 02CB'              	subwf	___fladd@bexp,f
  6828  0209'                    l2697:
  6829  0209' 1FBB'              	btfss	___fladd@b+2,7
  6830  020A' 2800'              	goto	u3601
  6831  020B' 2800'              	goto	u3600
  6832  020C'                    u3601:
  6833  020C' 2800'              	goto	l2683
  6834  020D'                    u3600:
  6835  020D'                    l2699:
  6836  020D' 01CA'              	clrf	___fladd@aexp
  6837  020E'                    l2701:
  6838  020E' 1FCC'              	btfss	___fladd@grs,7
  6839  020F' 2800'              	goto	u3611
  6840  0210' 2800'              	goto	u3610
  6841  0211'                    u3611:
  6842  0211' 2800'              	goto	l2709
  6843  0212'                    u3610:
  6844  0212'                    l2703:
  6845  0212' 084C'              	movf	___fladd@grs,w
  6846  0213' 397F               	andlw	127
  6847  0214' 1903               	btfsc	3,2
  6848  0215' 2800'              	goto	u3621
  6849  0216' 2800'              	goto	u3620
  6850  0217'                    u3621:
  6851  0217' 2800'              	goto	l780
  6852  0218'                    u3620:
  6853  0218'                    l2705:
  6854  0218' 01CA'              	clrf	___fladd@aexp
  6855  0219' 0ACA'              	incf	___fladd@aexp,f
  6856  021A' 2800'              	goto	l2709
  6857  021B'                    l780:
  6858  021B' 1C39'              	btfss	___fladd@b,0
  6859  021C' 2800'              	goto	u3631
  6860  021D' 2800'              	goto	u3630
  6861  021E'                    u3631:
  6862  021E' 2800'              	goto	l2709
  6863  021F'                    u3630:
  6864  021F' 2800'              	goto	l2705
  6865  0220'                    l2709:
  6866  0220' 084A'              	movf	___fladd@aexp,w
  6867  0221' 1903               	btfsc	3,2
  6868  0222' 2800'              	goto	u3641
  6869  0223' 2800'              	goto	u3640
  6870  0224'                    u3641:
  6871  0224' 2800'              	goto	l783
  6872  0225'                    u3640:
  6873  0225'                    l2711:
  6874  0225' 3001               	movlw	1
  6875  0226' 07B9'              	addwf	___fladd@b,f
  6876  0227' 3000               	movlw	0
  6877  0228' 1803               	skipnc
  6878  0229' 3001               	movlw	1
  6879  022A' 07BA'              	addwf	___fladd@b+1,f
  6880  022B' 3000               	movlw	0
  6881  022C' 1803               	skipnc
  6882  022D' 3001               	movlw	1
  6883  022E' 07BB'              	addwf	___fladd@b+2,f
  6884  022F' 3000               	movlw	0
  6885  0230' 1803               	skipnc
  6886  0231' 3001               	movlw	1
  6887  0232' 07BC'              	addwf	___fladd@b+3,f
  6888  0233'                    l2713:
  6889  0233' 1C3C'              	btfss	___fladd@b+3,0
  6890  0234' 2800'              	goto	u3651
  6891  0235' 2800'              	goto	u3650
  6892  0236'                    u3651:
  6893  0236' 2800'              	goto	l783
  6894  0237'                    u3650:
  6895  0237'                    l2715:
  6896  0237' 0839'              	movf	___fladd@b,w
  6897  0238' 00C1'              	movwf	??___fladd
  6898  0239' 083A'              	movf	___fladd@b+1,w
  6899  023A' 00C2'              	movwf	??___fladd+1
  6900  023B' 083B'              	movf	___fladd@b+2,w
  6901  023C' 00C3'              	movwf	??___fladd+2
  6902  023D' 083C'              	movf	___fladd@b+3,w
  6903  023E' 00C4'              	movwf	??___fladd+3
  6904  023F' 3001               	movlw	1
  6905  0240' 00C5'              	movwf	??___fladd+4
  6906  0241'                    u3665:
  6907  0241' 0D44'              	rlf	??___fladd+3,w
  6908  0242' 0CC4'              	rrf	??___fladd+3,f
  6909  0243' 0CC3'              	rrf	??___fladd+2,f
  6910  0244' 0CC2'              	rrf	??___fladd+1,f
  6911  0245' 0CC1'              	rrf	??___fladd,f
  6912  0246'                    u3660:
  6913  0246' 0BC5'              	decfsz	??___fladd+4,f
  6914  0247' 2800'              	goto	u3665
  6915  0248' 0844'              	movf	??___fladd+3,w
  6916  0249' 00BC'              	movwf	___fladd@b+3
  6917  024A' 0843'              	movf	??___fladd+2,w
  6918  024B' 00BB'              	movwf	___fladd@b+2
  6919  024C' 0842'              	movf	??___fladd+1,w
  6920  024D' 00BA'              	movwf	___fladd@b+1
  6921  024E' 0841'              	movf	??___fladd,w
  6922  024F' 00B9'              	movwf	___fladd@b
  6923  0250' 0A4B'              	incf	___fladd@bexp,w
  6924  0251' 1903               	btfsc	3,2
  6925  0252' 2800'              	goto	u3671
  6926  0253' 2800'              	goto	u3670
  6927  0254'                    u3671:
  6928  0254' 2800'              	goto	l783
  6929  0255'                    u3670:
  6930  0255'                    l2717:
  6931  0255' 3001               	movlw	1
  6932  0256' 00C1'              	movwf	??___fladd
  6933  0257' 0841'              	movf	??___fladd,w
  6934  0258' 07CB'              	addwf	___fladd@bexp,f
  6935  0259'                    l783:
  6936  0259' 0A4B'              	incf	___fladd@bexp,w
  6937  025A' 1903               	btfsc	3,2
  6938  025B' 2800'              	goto	u3681
  6939  025C' 2800'              	goto	u3680
  6940  025D'                    u3681:
  6941  025D' 2800'              	goto	l2721
  6942  025E'                    u3680:
  6943  025E'                    l2719:
  6944  025E' 084B'              	movf	___fladd@bexp,w
  6945  025F' 1D03               	btfss	3,2
  6946  0260' 2800'              	goto	u3691
  6947  0261' 2800'              	goto	u3690
  6948  0262'                    u3691:
  6949  0262' 2800'              	goto	l2727
  6950  0263'                    u3690:
  6951  0263'                    l2721:
  6952  0263' 3000               	movlw	0
  6953  0264' 00BC'              	movwf	___fladd@b+3
  6954  0265' 3000               	movlw	0
  6955  0266' 00BB'              	movwf	___fladd@b+2
  6956  0267' 3000               	movlw	0
  6957  0268' 00BA'              	movwf	___fladd@b+1
  6958  0269' 3000               	movlw	0
  6959  026A' 00B9'              	movwf	___fladd@b
  6960  026B'                    l2723:
  6961  026B' 084B'              	movf	___fladd@bexp,w
  6962  026C' 1D03               	btfss	3,2
  6963  026D' 2800'              	goto	u3701
  6964  026E' 2800'              	goto	u3700
  6965  026F'                    u3701:
  6966  026F' 2800'              	goto	l2727
  6967  0270'                    u3700:
  6968  0270'                    l2725:
  6969  0270' 01C9'              	clrf	___fladd@signs
  6970  0271'                    l2727:
  6971  0271' 1C4B'              	btfss	___fladd@bexp,0
  6972  0272' 2800'              	goto	u3711
  6973  0273' 2800'              	goto	u3710
  6974  0274'                    u3711:
  6975  0274' 2800'              	goto	l2731
  6976  0275'                    u3710:
  6977  0275'                    l2729:
  6978  0275' 17BB'              	bsf	___fladd@b+2,7
  6979  0276' 2800'              	goto	l791
  6980  0277'                    l2731:
  6981  0277' 307F               	movlw	127
  6982  0278' 00C1'              	movwf	??___fladd
  6983  0279' 0841'              	movf	??___fladd,w
  6984  027A' 05BB'              	andwf	___fladd@b+2,f
  6985  027B'                    l791:
  6986  027B' 084B'              	movf	___fladd@bexp,w
  6987  027C' 00C1'              	movwf	??___fladd
  6988  027D' 1003               	clrc
  6989  027E' 0C41'              	rrf	??___fladd,w
  6990  027F' 00C2'              	movwf	??___fladd+1
  6991  0280' 0842'              	movf	??___fladd+1,w
  6992  0281' 00BC'              	movwf	___fladd@b+3
  6993  0282'                    l2733:
  6994  0282' 1FC9'              	btfss	___fladd@signs,7
  6995  0283' 2800'              	goto	u3721
  6996  0284' 2800'              	goto	u3720
  6997  0285'                    u3721:
  6998  0285' 2800'              	goto	l792
  6999  0286'                    u3720:
  7000  0286'                    l2735:
  7001  0286' 17BC'              	bsf	___fladd@b+3,7
  7002  0287'                    l792:
  7003  0287'                    l762:
  7004  0287' 0008               	return
  7005  0288'                    __end_of___fladd:
  7006                           
  7007                           	psect	text17
  7008  0000'                    __ptext17:	
  7009 ;; *************** function ___flneg *****************
  7010 ;; Defined at:
  7011 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  f1              4    3[COMMON] unsigned char 
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;		None
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  4    3[COMMON] unsigned char 
  7018 ;; Registers used:
  7019 ;;		wreg
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7025 ;;      Params:         4       0       0       0       0
  7026 ;;      Locals:         0       0       0       0       0
  7027 ;;      Temps:          0       0       0       0       0
  7028 ;;      Totals:         4       0       0       0       0
  7029 ;;Total ram usage:        4 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    1
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_sprintf
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           
  7040                           ;psect for function ___flneg
  7041  0000'                    ___flneg:
  7042  0000'                    l3145:	
  7043                           ;incstack = 0
  7044                           ; Regs used in ___flneg: [wreg]
  7045                           
  7046  0000' 0806'              	movf	___flneg@f1+3,w
  7047  0001' 0405'              	iorwf	___flneg@f1+2,w
  7048  0002' 0404'              	iorwf	___flneg@f1+1,w
  7049  0003' 0403'              	iorwf	___flneg@f1,w
  7050  0004' 1903               	skipnz
  7051  0005' 2800'              	goto	u4851
  7052  0006' 2800'              	goto	u4850
  7053  0007'                    u4851:
  7054  0007' 2800'              	goto	l3149
  7055  0008'                    u4850:
  7056  0008'                    l3147:
  7057  0008' 3080               	movlw	128
  7058  0009' 0686'              	xorwf	___flneg@f1+3,f
  7059  000A'                    l3149:
  7060  000A'                    l621:
  7061  000A' 0008               	return
  7062  000B'                    __end_of___flneg:
  7063                           
  7064                           	psect	text18
  7065  0000'                    __ptext18:	
  7066 ;; *************** function ___flge *****************
  7067 ;; Defined at:
  7068 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  ff1             4    0[BANK0 ] unsigned char 
  7071 ;;  ff2             4    4[BANK0 ] unsigned char 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;		None
  7074 ;; Return value:  Size  Location     Type
  7075 ;;		None               void
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7083 ;;      Params:         0       8       0       0       0
  7084 ;;      Locals:         0       0       0       0       0
  7085 ;;      Temps:          4       0       0       0       0
  7086 ;;      Totals:         4       8       0       0       0
  7087 ;;Total ram usage:       12 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_sprintf
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           
  7098                           ;psect for function ___flge
  7099  0000'                    ___flge:
  7100  0000'                    l4149:	
  7101                           ;incstack = 0
  7102                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7103                           
  7104  0000' 3000               	movlw	0
  7105  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7106  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7107  0003' 0500'              	andwf	___flge@ff1,w
  7108  0004' 0083'              	movwf	??___flge
  7109  0005' 3000               	movlw	0
  7110  0006' 0501'              	andwf	___flge@ff1+1,w
  7111  0007' 0084'              	movwf	??___flge+1
  7112  0008' 3080               	movlw	128
  7113  0009' 0502'              	andwf	___flge@ff1+2,w
  7114  000A' 0085'              	movwf	??___flge+2
  7115  000B' 307F               	movlw	127
  7116  000C' 0503'              	andwf	___flge@ff1+3,w
  7117  000D' 0086'              	movwf	??___flge+3
  7118  000E' 0806'              	movf	??___flge+3,w
  7119  000F' 0405'              	iorwf	??___flge+2,w
  7120  0010' 0404'              	iorwf	??___flge+1,w
  7121  0011' 0403'              	iorwf	??___flge,w
  7122  0012' 1D03               	skipz
  7123  0013' 2800'              	goto	u6751
  7124  0014' 2800'              	goto	u6750
  7125  0015'                    u6751:
  7126  0015' 2800'              	goto	l613
  7127  0016'                    u6750:
  7128  0016'                    l4151:
  7129  0016' 3000               	movlw	0
  7130  0017' 0083'              	movwf	___flge@ff1+3
  7131  0018' 3000               	movlw	0
  7132  0019' 0082'              	movwf	___flge@ff1+2
  7133  001A' 3000               	movlw	0
  7134  001B' 0081'              	movwf	___flge@ff1+1
  7135  001C' 3000               	movlw	0
  7136  001D' 0080'              	movwf	___flge@ff1
  7137  001E'                    l613:
  7138  001E' 3000               	movlw	0
  7139  001F' 0504'              	andwf	___flge@ff2,w
  7140  0020' 0083'              	movwf	??___flge
  7141  0021' 3000               	movlw	0
  7142  0022' 0505'              	andwf	___flge@ff2+1,w
  7143  0023' 0084'              	movwf	??___flge+1
  7144  0024' 3080               	movlw	128
  7145  0025' 0506'              	andwf	___flge@ff2+2,w
  7146  0026' 0085'              	movwf	??___flge+2
  7147  0027' 307F               	movlw	127
  7148  0028' 0507'              	andwf	___flge@ff2+3,w
  7149  0029' 0086'              	movwf	??___flge+3
  7150  002A' 0806'              	movf	??___flge+3,w
  7151  002B' 0405'              	iorwf	??___flge+2,w
  7152  002C' 0404'              	iorwf	??___flge+1,w
  7153  002D' 0403'              	iorwf	??___flge,w
  7154  002E' 1D03               	skipz
  7155  002F' 2800'              	goto	u6761
  7156  0030' 2800'              	goto	u6760
  7157  0031'                    u6761:
  7158  0031' 2800'              	goto	l4155
  7159  0032'                    u6760:
  7160  0032'                    l4153:
  7161  0032' 3000               	movlw	0
  7162  0033' 0087'              	movwf	___flge@ff2+3
  7163  0034' 3000               	movlw	0
  7164  0035' 0086'              	movwf	___flge@ff2+2
  7165  0036' 3000               	movlw	0
  7166  0037' 0085'              	movwf	___flge@ff2+1
  7167  0038' 3000               	movlw	0
  7168  0039' 0084'              	movwf	___flge@ff2
  7169  003A'                    l4155:
  7170  003A' 1F83'              	btfss	___flge@ff1+3,7
  7171  003B' 2800'              	goto	u6771
  7172  003C' 2800'              	goto	u6770
  7173  003D'                    u6771:
  7174  003D' 2800'              	goto	l4159
  7175  003E'                    u6770:
  7176  003E'                    l4157:
  7177  003E' 3000               	movlw	0
  7178  003F' 0083'              	movwf	??___flge
  7179  0040' 3000               	movlw	0
  7180  0041' 0084'              	movwf	??___flge+1
  7181  0042' 3000               	movlw	0
  7182  0043' 0085'              	movwf	??___flge+2
  7183  0044' 3080               	movlw	128
  7184  0045' 0086'              	movwf	??___flge+3
  7185  0046' 0800'              	movf	___flge@ff1,w
  7186  0047' 0283'              	subwf	??___flge,f
  7187  0048' 0801'              	movf	___flge@ff1+1,w
  7188  0049' 1C03               	skipc
  7189  004A' 0F01'              	incfsz	___flge@ff1+1,w
  7190  004B' 2800'              	goto	u6781
  7191  004C' 2800'              	goto	u6782
  7192  004D'                    u6781:
  7193  004D' 0284'              	subwf	??___flge+1,f
  7194  004E'                    u6782:
  7195  004E' 0802'              	movf	___flge@ff1+2,w
  7196  004F' 1C03               	skipc
  7197  0050' 0F02'              	incfsz	___flge@ff1+2,w
  7198  0051' 2800'              	goto	u6783
  7199  0052' 2800'              	goto	u6784
  7200  0053'                    u6783:
  7201  0053' 0285'              	subwf	??___flge+2,f
  7202  0054'                    u6784:
  7203  0054' 0803'              	movf	___flge@ff1+3,w
  7204  0055' 1C03               	skipc
  7205  0056' 0F03'              	incfsz	___flge@ff1+3,w
  7206  0057' 2800'              	goto	u6785
  7207  0058' 2800'              	goto	u6786
  7208  0059'                    u6785:
  7209  0059' 0286'              	subwf	??___flge+3,f
  7210  005A'                    u6786:
  7211  005A' 0806'              	movf	??___flge+3,w
  7212  005B' 0083'              	movwf	___flge@ff1+3
  7213  005C' 0805'              	movf	??___flge+2,w
  7214  005D' 0082'              	movwf	___flge@ff1+2
  7215  005E' 0804'              	movf	??___flge+1,w
  7216  005F' 0081'              	movwf	___flge@ff1+1
  7217  0060' 0803'              	movf	??___flge,w
  7218  0061' 0080'              	movwf	___flge@ff1
  7219  0062'                    l4159:
  7220  0062' 1F87'              	btfss	___flge@ff2+3,7
  7221  0063' 2800'              	goto	u6791
  7222  0064' 2800'              	goto	u6790
  7223  0065'                    u6791:
  7224  0065' 2800'              	goto	l616
  7225  0066'                    u6790:
  7226  0066'                    l4161:
  7227  0066' 3000               	movlw	0
  7228  0067' 0083'              	movwf	??___flge
  7229  0068' 3000               	movlw	0
  7230  0069' 0084'              	movwf	??___flge+1
  7231  006A' 3000               	movlw	0
  7232  006B' 0085'              	movwf	??___flge+2
  7233  006C' 3080               	movlw	128
  7234  006D' 0086'              	movwf	??___flge+3
  7235  006E' 0804'              	movf	___flge@ff2,w
  7236  006F' 0283'              	subwf	??___flge,f
  7237  0070' 0805'              	movf	___flge@ff2+1,w
  7238  0071' 1C03               	skipc
  7239  0072' 0F05'              	incfsz	___flge@ff2+1,w
  7240  0073' 2800'              	goto	u6801
  7241  0074' 2800'              	goto	u6802
  7242  0075'                    u6801:
  7243  0075' 0284'              	subwf	??___flge+1,f
  7244  0076'                    u6802:
  7245  0076' 0806'              	movf	___flge@ff2+2,w
  7246  0077' 1C03               	skipc
  7247  0078' 0F06'              	incfsz	___flge@ff2+2,w
  7248  0079' 2800'              	goto	u6803
  7249  007A' 2800'              	goto	u6804
  7250  007B'                    u6803:
  7251  007B' 0285'              	subwf	??___flge+2,f
  7252  007C'                    u6804:
  7253  007C' 0807'              	movf	___flge@ff2+3,w
  7254  007D' 1C03               	skipc
  7255  007E' 0F07'              	incfsz	___flge@ff2+3,w
  7256  007F' 2800'              	goto	u6805
  7257  0080' 2800'              	goto	u6806
  7258  0081'                    u6805:
  7259  0081' 0286'              	subwf	??___flge+3,f
  7260  0082'                    u6806:
  7261  0082' 0806'              	movf	??___flge+3,w
  7262  0083' 0087'              	movwf	___flge@ff2+3
  7263  0084' 0805'              	movf	??___flge+2,w
  7264  0085' 0086'              	movwf	___flge@ff2+2
  7265  0086' 0804'              	movf	??___flge+1,w
  7266  0087' 0085'              	movwf	___flge@ff2+1
  7267  0088' 0803'              	movf	??___flge,w
  7268  0089' 0084'              	movwf	___flge@ff2
  7269  008A'                    l616:
  7270  008A' 3080               	movlw	128
  7271  008B' 0683'              	xorwf	___flge@ff1+3,f
  7272  008C' 3080               	movlw	128
  7273  008D' 0687'              	xorwf	___flge@ff2+3,f
  7274  008E' 0807'              	movf	___flge@ff2+3,w
  7275  008F' 0203'              	subwf	___flge@ff1+3,w
  7276  0090' 1D03               	skipz
  7277  0091' 2800'              	goto	u6815
  7278  0092' 0806'              	movf	___flge@ff2+2,w
  7279  0093' 0202'              	subwf	___flge@ff1+2,w
  7280  0094' 1D03               	skipz
  7281  0095' 2800'              	goto	u6815
  7282  0096' 0805'              	movf	___flge@ff2+1,w
  7283  0097' 0201'              	subwf	___flge@ff1+1,w
  7284  0098' 1D03               	skipz
  7285  0099' 2800'              	goto	u6815
  7286  009A' 0804'              	movf	___flge@ff2,w
  7287  009B' 0200'              	subwf	___flge@ff1,w
  7288  009C'                    u6815:
  7289  009C' 1803               	skipnc
  7290  009D' 2800'              	goto	u6811
  7291  009E' 2800'              	goto	u6810
  7292  009F'                    u6811:
  7293  009F' 2800'              	goto	l4165
  7294  00A0'                    u6810:
  7295  00A0'                    l4163:
  7296  00A0' 1003               	clrc
  7297  00A1' 2800'              	goto	l617
  7298  00A2'                    l4165:
  7299  00A2' 1403               	setc
  7300  00A3'                    l617:
  7301  00A3' 0008               	return
  7302  00A4'                    __end_of___flge:
  7303                           
  7304                           	psect	text19
  7305  0000'                    __ptext19:	
  7306 ;; *************** function ___fleq *****************
  7307 ;; Defined at:
  7308 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  ff1             4    0[BANK0 ] unsigned char 
  7311 ;;  ff2             4    4[BANK0 ] unsigned char 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;		None
  7314 ;; Return value:  Size  Location     Type
  7315 ;;		None               void
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7323 ;;      Params:         0       8       0       0       0
  7324 ;;      Locals:         0       0       0       0       0
  7325 ;;      Temps:          4       0       0       0       0
  7326 ;;      Totals:         4       8       0       0       0
  7327 ;;Total ram usage:       12 bytes
  7328 ;; Hardware stack levels used:    1
  7329 ;; Hardware stack levels required when called:    1
  7330 ;; This function calls:
  7331 ;;		Nothing
  7332 ;; This function is called by:
  7333 ;;		_sprintf
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           
  7338                           ;psect for function ___fleq
  7339  0000'                    ___fleq:
  7340  0000'                    l4137:	
  7341                           ;incstack = 0
  7342                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7343                           
  7344  0000' 3000               	movlw	0
  7345  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7346  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7347  0003' 0500'              	andwf	___fleq@ff1,w
  7348  0004' 0083'              	movwf	??___fleq
  7349  0005' 3000               	movlw	0
  7350  0006' 0501'              	andwf	___fleq@ff1+1,w
  7351  0007' 0084'              	movwf	??___fleq+1
  7352  0008' 3080               	movlw	128
  7353  0009' 0502'              	andwf	___fleq@ff1+2,w
  7354  000A' 0085'              	movwf	??___fleq+2
  7355  000B' 307F               	movlw	127
  7356  000C' 0503'              	andwf	___fleq@ff1+3,w
  7357  000D' 0086'              	movwf	??___fleq+3
  7358  000E' 0806'              	movf	??___fleq+3,w
  7359  000F' 0405'              	iorwf	??___fleq+2,w
  7360  0010' 0404'              	iorwf	??___fleq+1,w
  7361  0011' 0403'              	iorwf	??___fleq,w
  7362  0012' 1D03               	skipz
  7363  0013' 2800'              	goto	u6721
  7364  0014' 2800'              	goto	u6720
  7365  0015'                    u6721:
  7366  0015' 2800'              	goto	l608
  7367  0016'                    u6720:
  7368  0016'                    l4139:
  7369  0016' 3000               	movlw	0
  7370  0017' 0083'              	movwf	___fleq@ff1+3
  7371  0018' 3000               	movlw	0
  7372  0019' 0082'              	movwf	___fleq@ff1+2
  7373  001A' 3000               	movlw	0
  7374  001B' 0081'              	movwf	___fleq@ff1+1
  7375  001C' 3000               	movlw	0
  7376  001D' 0080'              	movwf	___fleq@ff1
  7377  001E'                    l608:
  7378  001E' 3000               	movlw	0
  7379  001F' 0504'              	andwf	___fleq@ff2,w
  7380  0020' 0083'              	movwf	??___fleq
  7381  0021' 3000               	movlw	0
  7382  0022' 0505'              	andwf	___fleq@ff2+1,w
  7383  0023' 0084'              	movwf	??___fleq+1
  7384  0024' 3080               	movlw	128
  7385  0025' 0506'              	andwf	___fleq@ff2+2,w
  7386  0026' 0085'              	movwf	??___fleq+2
  7387  0027' 307F               	movlw	127
  7388  0028' 0507'              	andwf	___fleq@ff2+3,w
  7389  0029' 0086'              	movwf	??___fleq+3
  7390  002A' 0806'              	movf	??___fleq+3,w
  7391  002B' 0405'              	iorwf	??___fleq+2,w
  7392  002C' 0404'              	iorwf	??___fleq+1,w
  7393  002D' 0403'              	iorwf	??___fleq,w
  7394  002E' 1D03               	skipz
  7395  002F' 2800'              	goto	u6731
  7396  0030' 2800'              	goto	u6730
  7397  0031'                    u6731:
  7398  0031' 2800'              	goto	l609
  7399  0032'                    u6730:
  7400  0032'                    l4141:
  7401  0032' 3000               	movlw	0
  7402  0033' 0087'              	movwf	___fleq@ff2+3
  7403  0034' 3000               	movlw	0
  7404  0035' 0086'              	movwf	___fleq@ff2+2
  7405  0036' 3000               	movlw	0
  7406  0037' 0085'              	movwf	___fleq@ff2+1
  7407  0038' 3000               	movlw	0
  7408  0039' 0084'              	movwf	___fleq@ff2
  7409  003A'                    l609:
  7410  003A' 0807'              	movf	___fleq@ff2+3,w
  7411  003B' 0603'              	xorwf	___fleq@ff1+3,w
  7412  003C' 1D03               	skipz
  7413  003D' 2800'              	goto	u6745
  7414  003E' 0806'              	movf	___fleq@ff2+2,w
  7415  003F' 0602'              	xorwf	___fleq@ff1+2,w
  7416  0040' 1D03               	skipz
  7417  0041' 2800'              	goto	u6745
  7418  0042' 0805'              	movf	___fleq@ff2+1,w
  7419  0043' 0601'              	xorwf	___fleq@ff1+1,w
  7420  0044' 1D03               	skipz
  7421  0045' 2800'              	goto	u6745
  7422  0046' 0804'              	movf	___fleq@ff2,w
  7423  0047' 0600'              	xorwf	___fleq@ff1,w
  7424  0048'                    u6745:
  7425  0048' 1903               	skipnz
  7426  0049' 2800'              	goto	u6741
  7427  004A' 2800'              	goto	u6740
  7428  004B'                    u6741:
  7429  004B' 2800'              	goto	l4145
  7430  004C'                    u6740:
  7431  004C'                    l4143:
  7432  004C' 1003               	clrc
  7433  004D' 2800'              	goto	l610
  7434  004E'                    l4145:
  7435  004E' 1403               	setc
  7436  004F'                    l610:
  7437  004F' 0008               	return
  7438  0050'                    __end_of___fleq:
  7439                           
  7440                           	psect	text20
  7441  0000'                    __ptext20:	
  7442 ;; *************** function _spiWrite *****************
  7443 ;; Defined at:
  7444 ;;		line 35 in file "SPI.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  dat             1    wreg     unsigned char 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  dat             1    3[COMMON] unsigned char 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7458 ;;      Params:         0       0       0       0       0
  7459 ;;      Locals:         1       0       0       0       0
  7460 ;;      Temps:          0       0       0       0       0
  7461 ;;      Totals:         1       0       0       0       0
  7462 ;;Total ram usage:        1 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:    1
  7465 ;; This function calls:
  7466 ;;		Nothing
  7467 ;; This function is called by:
  7468 ;;		_main
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           
  7473                           ;psect for function _spiWrite
  7474  0000'                    _spiWrite:
  7475                           
  7476                           ;incstack = 0
  7477                           ; Regs used in _spiWrite: [wreg]
  7478                           ;spiWrite@dat stored from wreg
  7479  0000' 0083'              	movwf	spiWrite@dat
  7480  0001'                    l3645:
  7481                           
  7482                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  7483  0001' 0803'              	movf	spiWrite@dat,w
  7484  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  7485  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  7486  0004' 0093               	movwf	19	;volatile
  7487  0005'                    l209:
  7488  0005' 0008               	return
  7489  0006'                    __end_of_spiWrite:
  7490                           
  7491                           	psect	text21
  7492  0000'                    __ptext21:	
  7493 ;; *************** function _spiRead *****************
  7494 ;; Defined at:
  7495 ;;		line 48 in file "SPI.c"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;		None
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;		None
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  1    wreg      unsigned char 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0, pclath, cstack
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7509 ;;      Params:         0       0       0       0       0
  7510 ;;      Locals:         0       0       0       0       0
  7511 ;;      Temps:          0       0       0       0       0
  7512 ;;      Totals:         0       0       0       0       0
  7513 ;;Total ram usage:        0 bytes
  7514 ;; Hardware stack levels used:    1
  7515 ;; Hardware stack levels required when called:    2
  7516 ;; This function calls:
  7517 ;;		_spiReceiveWait
  7518 ;; This function is called by:
  7519 ;;		_main
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           
  7524                           ;psect for function _spiRead
  7525  0000'                    _spiRead:
  7526  0000'                    l3333:	
  7527                           ;incstack = 0
  7528                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  7529                           
  7530                           
  7531                           ;SPI.c: 50:     spiReceiveWait();
  7532  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiReceiveWait
  7533  0005'                    l3335:
  7534                           
  7535                           ;SPI.c: 51:     return(SSPBUF);
  7536  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  7537  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  7538  0007' 0813               	movf	19,w	;volatile
  7539  0008'                    l217:
  7540  0008' 0008               	return
  7541  0009'                    __end_of_spiRead:
  7542                           
  7543                           	psect	text22
  7544  0000'                    __ptext22:	
  7545 ;; *************** function _spiReceiveWait *****************
  7546 ;; Defined at:
  7547 ;;		line 30 in file "SPI.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;		None
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;		None
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  1    wreg      void 
  7554 ;; Registers used:
  7555 ;;		None
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7561 ;;      Params:         0       0       0       0       0
  7562 ;;      Locals:         0       0       0       0       0
  7563 ;;      Temps:          0       0       0       0       0
  7564 ;;      Totals:         0       0       0       0       0
  7565 ;;Total ram usage:        0 bytes
  7566 ;; Hardware stack levels used:    1
  7567 ;; Hardware stack levels required when called:    1
  7568 ;; This function calls:
  7569 ;;		Nothing
  7570 ;; This function is called by:
  7571 ;;		_spiRead
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           
  7576                           ;psect for function _spiReceiveWait
  7577  0000'                    _spiReceiveWait:
  7578  0000'                    l2899:	
  7579                           ;incstack = 0
  7580                           ; Regs used in _spiReceiveWait: []
  7581                           
  7582  0000'                    l203:	
  7583                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  7584                           
  7585  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  7586  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  7587  0002' 1C14               	btfss	20,0	;volatile
  7588  0003' 2800'              	goto	u4101
  7589  0004' 2800'              	goto	u4100
  7590  0005'                    u4101:
  7591  0005' 2800'              	goto	l203
  7592  0006'                    u4100:
  7593  0006'                    l206:
  7594  0006' 0008               	return
  7595  0007'                    __end_of_spiReceiveWait:
  7596                           
  7597                           	psect	text23
  7598  0000'                    __ptext23:	
  7599 ;; *************** function _spiInit *****************
  7600 ;; Defined at:
  7601 ;;		line 13 in file "SPI.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  sType           1    wreg     enum E1264
  7604 ;;  sDataSample     1    3[COMMON] enum E1272
  7605 ;;  sClockIdle      1    4[COMMON] enum E1276
  7606 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  sType           1    6[COMMON] enum E1264
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7618 ;;      Params:         3       0       0       0       0
  7619 ;;      Locals:         1       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0
  7621 ;;      Totals:         4       0       0       0       0
  7622 ;;Total ram usage:        4 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    1
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_main
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           
  7633                           ;psect for function _spiInit
  7634  0000'                    _spiInit:
  7635                           
  7636                           ;incstack = 0
  7637                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  7638                           ;spiInit@sType stored from wreg
  7639  0000' 0086'              	movwf	spiInit@sType
  7640  0001'                    l3279:
  7641                           
  7642                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
  7643  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  7644  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  7645  0003' 1287               	bcf	7,5	;volatile
  7646                           
  7647                           ;SPI.c: 16:     if(sType & 0b00000100)
  7648  0004' 1D06'              	btfss	spiInit@sType,2
  7649  0005' 2800'              	goto	u5161
  7650  0006' 2800'              	goto	u5160
  7651  0007'                    u5161:
  7652  0007' 2800'              	goto	l3285
  7653  0008'                    u5160:
  7654  0008'                    l3281:
  7655                           
  7656                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
  7657  0008' 0805'              	movf	spiInit@sTransmitEdge,w
  7658  0009' 0094               	movwf	20	;volatile
  7659  000A'                    l3283:
  7660                           
  7661                           ;SPI.c: 19:         TRISC3 = 1;
  7662  000A' 1587               	bsf	7,3	;volatile
  7663                           
  7664                           ;SPI.c: 20:     }
  7665  000B' 2800'              	goto	l199
  7666  000C'                    l3285:
  7667                           
  7668                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  7669  000C' 0803'              	movf	spiInit@sDataSample,w
  7670  000D' 0405'              	iorwf	spiInit@sTransmitEdge,w
  7671  000E' 0094               	movwf	20	;volatile
  7672  000F'                    l3287:
  7673                           
  7674                           ;SPI.c: 24:         TRISC3 = 0;
  7675  000F' 1187               	bcf	7,3	;volatile
  7676  0010'                    l199:	
  7677                           ;SPI.c: 25:     }
  7678                           
  7679                           
  7680                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
  7681  0010' 0806'              	movf	spiInit@sType,w
  7682  0011' 0404'              	iorwf	spiInit@sClockIdle,w
  7683  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  7684  0013' 1303               	bcf	3,6	;RP1=0, select bank0
  7685  0014' 0094               	movwf	20	;volatile
  7686  0015'                    l200:
  7687  0015' 0008               	return
  7688  0016'                    __end_of_spiInit:
  7689                           
  7690                           	psect	text24
  7691  0000'                    __ptext24:	
  7692 ;; *************** function _setup *****************
  7693 ;; Defined at:
  7694 ;;		line 187 in file "main.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;		None
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;		None
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  1    wreg      void 
  7701 ;; Registers used:
  7702 ;;		wreg, status,2
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7708 ;;      Params:         0       0       0       0       0
  7709 ;;      Locals:         0       0       0       0       0
  7710 ;;      Temps:          0       0       0       0       0
  7711 ;;      Totals:         0       0       0       0       0
  7712 ;;Total ram usage:        0 bytes
  7713 ;; Hardware stack levels used:    1
  7714 ;; Hardware stack levels required when called:    1
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_main
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           
  7723                           ;psect for function _setup
  7724  0000'                    _setup:
  7725  0000'                    l3259:	
  7726                           ;incstack = 0
  7727                           ; Regs used in _setup: [wreg+status,2]
  7728                           
  7729                           
  7730                           ;main.c: 188:     TRISD = 0b00000000;
  7731  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  7732  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  7733  0002' 0188               	clrf	8	;volatile
  7734  0003'                    l3261:
  7735                           
  7736                           ;main.c: 189:     TRISC = 0b10010000;
  7737  0003' 3090               	movlw	144
  7738  0004' 0087               	movwf	7	;volatile
  7739  0005'                    l3263:
  7740                           
  7741                           ;main.c: 190:     TRISE = 0b00000000;
  7742  0005' 0189               	clrf	9	;volatile
  7743  0006'                    l3265:
  7744                           
  7745                           ;main.c: 191:     TRISB = 0b00000000;
  7746  0006' 0186               	clrf	6	;volatile
  7747  0007'                    l3267:
  7748                           
  7749                           ;main.c: 192:     ANSEL = 0b00000011;
  7750  0007' 3003               	movlw	3
  7751  0008' 1683               	bsf	3,5	;RP0=1, select bank3
  7752  0009' 1703               	bsf	3,6	;RP1=1, select bank3
  7753  000A' 0088               	movwf	8	;volatile
  7754  000B'                    l3269:
  7755                           
  7756                           ;main.c: 193:     PORTCbits.RC0 = 1;
  7757  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  7758  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  7759  000D' 1407               	bsf	7,0	;volatile
  7760  000E'                    l3271:
  7761                           
  7762                           ;main.c: 194:     PORTCbits.RC1 = 1;
  7763  000E' 1487               	bsf	7,1	;volatile
  7764  000F'                    l3273:
  7765                           
  7766                           ;main.c: 195:     PORTCbits.RC2 = 1;
  7767  000F' 1507               	bsf	7,2	;volatile
  7768  0010'                    l3275:
  7769                           
  7770                           ;main.c: 196:     PORTCbits.RC6 = 0;
  7771  0010' 1307               	bcf	7,6	;volatile
  7772  0011'                    l3277:
  7773                           
  7774                           ;main.c: 197:     PORTCbits.RC7 = 0;
  7775  0011' 1387               	bcf	7,7	;volatile
  7776                           
  7777                           ;main.c: 198:     PORTD = 0;
  7778  0012' 0188               	clrf	8	;volatile
  7779                           
  7780                           ;main.c: 199:     PORTE = 0;
  7781  0013' 0189               	clrf	9	;volatile
  7782                           
  7783                           ;main.c: 200:     PORTB = 0;
  7784  0014' 0186               	clrf	6	;volatile
  7785  0015'                    l96:
  7786  0015' 0008               	return
  7787  0016'                    __end_of_setup:
  7788                           
  7789                           	psect	text25
  7790  0000'                    __ptext25:	
  7791 ;; *************** function _recibir *****************
  7792 ;; Defined at:
  7793 ;;		line 40 in file "USART.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;		None
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      void 
  7800 ;; Registers used:
  7801 ;;		None
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7807 ;;      Params:         0       0       0       0       0
  7808 ;;      Locals:         0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0
  7810 ;;      Totals:         0       0       0       0       0
  7811 ;;Total ram usage:        0 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:    1
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_main
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           
  7822                           ;psect for function _recibir
  7823  0000'                    _recibir:
  7824  0000'                    l3299:	
  7825                           ;incstack = 0
  7826                           ; Regs used in _recibir: []
  7827                           
  7828                           
  7829                           ;USART.c: 41:     RCSTAbits.CREN = 1;
  7830  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7831  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7832  0002' 1618               	bsf	24,4	;volatile
  7833                           
  7834                           ;USART.c: 42:     RCSTAbits.FERR = 0;
  7835  0003' 1118               	bcf	24,2	;volatile
  7836                           
  7837                           ;USART.c: 43:     PIE1bits.RCIE = 1;
  7838  0004' 1683               	bsf	3,5	;RP0=1, select bank1
  7839  0005' 1303               	bcf	3,6	;RP1=0, select bank1
  7840  0006' 168C               	bsf	12,5	;volatile
  7841                           
  7842                           ;USART.c: 44:     RCSTAbits.OERR = 0;
  7843  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  7844  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  7845  0009' 1098               	bcf	24,1	;volatile
  7846  000A'                    l183:
  7847  000A' 0008               	return
  7848  000B'                    __end_of_recibir:
  7849                           
  7850                           	psect	text26
  7851  0000'                    __ptext26:	
  7852 ;; *************** function _conversor2 *****************
  7853 ;; Defined at:
  7854 ;;		line 214 in file "main.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  val             1    wreg     unsigned char 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  val             1   45[BANK0 ] unsigned char 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  4   37[BANK0 ] float 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7868 ;;      Params:         0       4       0       0       0
  7869 ;;      Locals:         0       1       0       0       0
  7870 ;;      Temps:          0       4       0       0       0
  7871 ;;      Totals:         0       9       0       0       0
  7872 ;;Total ram usage:        9 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:    3
  7875 ;; This function calls:
  7876 ;;		___flmul
  7877 ;;		___xxtofl
  7878 ;; This function is called by:
  7879 ;;		_main
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           
  7884                           ;psect for function _conversor2
  7885  0000'                    _conversor2:
  7886                           
  7887                           ;incstack = 0
  7888                           ; Regs used in _conversor2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7889                           ;conversor2@val stored from wreg
  7890  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7891  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7892  0002' 00AD'              	movwf	conversor2@val
  7893  0003'                    l4265:
  7894                           
  7895                           ;main.c: 215:     vv = 1.95 * val;
  7896  0003' 303F               	movlw	63
  7897  0004' 008E'              	movwf	___flmul@b+3
  7898  0005' 30F9               	movlw	249
  7899  0006' 008D'              	movwf	___flmul@b+2
  7900  0007' 3099               	movlw	153
  7901  0008' 008C'              	movwf	___flmul@b+1
  7902  0009' 309A               	movlw	154
  7903  000A' 008B'              	movwf	___flmul@b
  7904  000B' 082D'              	movf	conversor2@val,w
  7905  000C' 00A9'              	movwf	??_conversor2
  7906  000D' 01AA'              	clrf	??_conversor2+1
  7907  000E' 01AB'              	clrf	??_conversor2+2
  7908  000F' 01AC'              	clrf	??_conversor2+3
  7909  0010' 082C'              	movf	??_conversor2+3,w
  7910  0011' 0086'              	movwf	___xxtofl@val+3
  7911  0012' 082B'              	movf	??_conversor2+2,w
  7912  0013' 0085'              	movwf	___xxtofl@val+2
  7913  0014' 082A'              	movf	??_conversor2+1,w
  7914  0015' 0084'              	movwf	___xxtofl@val+1
  7915  0016' 0829'              	movf	??_conversor2,w
  7916  0017' 0083'              	movwf	___xxtofl@val
  7917  0018' 3001               	movlw	1
  7918  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  7919  001E' 0806'              	movf	?___xxtofl+3,w
  7920  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  7921  0020' 1303               	bcf	3,6	;RP1=0, select bank0
  7922  0021' 0092'              	movwf	___flmul@a+3
  7923  0022' 0805'              	movf	?___xxtofl+2,w
  7924  0023' 0091'              	movwf	___flmul@a+2
  7925  0024' 0804'              	movf	?___xxtofl+1,w
  7926  0025' 0090'              	movwf	___flmul@a+1
  7927  0026' 0803'              	movf	?___xxtofl,w
  7928  0027' 008F'              	movwf	___flmul@a
  7929  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  7930  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  7931  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  7932  002F' 080E'              	movf	?___flmul+3,w
  7933  0030' 1683               	bsf	3,5	;RP0=1, select bank1
  7934  0031' 1303               	bcf	3,6	;RP1=0, select bank1
  7935  0032' 0080'              	movwf	(_vv+3)^(0+128)
  7936  0033' 1283               	bcf	3,5	;RP0=0, select bank0
  7937  0034' 1303               	bcf	3,6	;RP1=0, select bank0
  7938  0035' 080D'              	movf	?___flmul+2,w
  7939  0036' 1683               	bsf	3,5	;RP0=1, select bank1
  7940  0037' 1303               	bcf	3,6	;RP1=0, select bank1
  7941  0038' 0080'              	movwf	(_vv+2)^(0+128)
  7942  0039' 1283               	bcf	3,5	;RP0=0, select bank0
  7943  003A' 1303               	bcf	3,6	;RP1=0, select bank0
  7944  003B' 080C'              	movf	?___flmul+1,w
  7945  003C' 1683               	bsf	3,5	;RP0=1, select bank1
  7946  003D' 1303               	bcf	3,6	;RP1=0, select bank1
  7947  003E' 0080'              	movwf	(_vv+1)^(0+128)
  7948  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  7949  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  7950  0041' 080B'              	movf	?___flmul,w
  7951  0042' 1683               	bsf	3,5	;RP0=1, select bank1
  7952  0043' 1303               	bcf	3,6	;RP1=0, select bank1
  7953  0044' 0080'              	movwf	_vv^(0+128)
  7954  0045'                    l4267:
  7955                           
  7956                           ;main.c: 216:     return (vv);
  7957  0045' 0800'              	movf	(_vv+3)^(0+128),w
  7958  0046' 1283               	bcf	3,5	;RP0=0, select bank0
  7959  0047' 1303               	bcf	3,6	;RP1=0, select bank0
  7960  0048' 00A8'              	movwf	?_conversor2+3
  7961  0049' 1683               	bsf	3,5	;RP0=1, select bank1
  7962  004A' 1303               	bcf	3,6	;RP1=0, select bank1
  7963  004B' 0800'              	movf	(_vv+2)^(0+128),w
  7964  004C' 1283               	bcf	3,5	;RP0=0, select bank0
  7965  004D' 1303               	bcf	3,6	;RP1=0, select bank0
  7966  004E' 00A7'              	movwf	?_conversor2+2
  7967  004F' 1683               	bsf	3,5	;RP0=1, select bank1
  7968  0050' 1303               	bcf	3,6	;RP1=0, select bank1
  7969  0051' 0800'              	movf	(_vv+1)^(0+128),w
  7970  0052' 1283               	bcf	3,5	;RP0=0, select bank0
  7971  0053' 1303               	bcf	3,6	;RP1=0, select bank0
  7972  0054' 00A6'              	movwf	?_conversor2+1
  7973  0055' 1683               	bsf	3,5	;RP0=1, select bank1
  7974  0056' 1303               	bcf	3,6	;RP1=0, select bank1
  7975  0057' 0800'              	movf	_vv^(0+128),w
  7976  0058' 1283               	bcf	3,5	;RP0=0, select bank0
  7977  0059' 1303               	bcf	3,6	;RP1=0, select bank0
  7978  005A' 00A5'              	movwf	?_conversor2
  7979  005B'                    l102:
  7980  005B' 0008               	return
  7981  005C'                    __end_of_conversor2:
  7982                           
  7983                           	psect	text27
  7984  0000'                    __ptext27:	
  7985 ;; *************** function _conversor *****************
  7986 ;; Defined at:
  7987 ;;		line 209 in file "main.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  val             1    wreg     unsigned char 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  val             1   45[BANK0 ] unsigned char 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  4   37[BANK0 ] float 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8001 ;;      Params:         0       4       0       0       0
  8002 ;;      Locals:         0       1       0       0       0
  8003 ;;      Temps:          0       4       0       0       0
  8004 ;;      Totals:         0       9       0       0       0
  8005 ;;Total ram usage:        9 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:    3
  8008 ;; This function calls:
  8009 ;;		___flmul
  8010 ;;		___xxtofl
  8011 ;; This function is called by:
  8012 ;;		_main
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           
  8017                           ;psect for function _conversor
  8018  0000'                    _conversor:
  8019                           
  8020                           ;incstack = 0
  8021                           ; Regs used in _conversor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8022                           ;conversor@val stored from wreg
  8023  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8024  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8025  0002' 00AD'              	movwf	conversor@val
  8026  0003'                    l4565:
  8027                           
  8028                           ;main.c: 210:     x = 0.0195 * val;
  8029  0003' 303C               	movlw	60
  8030  0004' 008E'              	movwf	___flmul@b+3
  8031  0005' 309F               	movlw	159
  8032  0006' 008D'              	movwf	___flmul@b+2
  8033  0007' 30BE               	movlw	190
  8034  0008' 008C'              	movwf	___flmul@b+1
  8035  0009' 3077               	movlw	119
  8036  000A' 008B'              	movwf	___flmul@b
  8037  000B' 082D'              	movf	conversor@val,w
  8038  000C' 00A9'              	movwf	??_conversor
  8039  000D' 01AA'              	clrf	??_conversor+1
  8040  000E' 01AB'              	clrf	??_conversor+2
  8041  000F' 01AC'              	clrf	??_conversor+3
  8042  0010' 082C'              	movf	??_conversor+3,w
  8043  0011' 0086'              	movwf	___xxtofl@val+3
  8044  0012' 082B'              	movf	??_conversor+2,w
  8045  0013' 0085'              	movwf	___xxtofl@val+2
  8046  0014' 082A'              	movf	??_conversor+1,w
  8047  0015' 0084'              	movwf	___xxtofl@val+1
  8048  0016' 0829'              	movf	??_conversor,w
  8049  0017' 0083'              	movwf	___xxtofl@val
  8050  0018' 3001               	movlw	1
  8051  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  8052  001E' 0806'              	movf	?___xxtofl+3,w
  8053  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  8054  0020' 1303               	bcf	3,6	;RP1=0, select bank0
  8055  0021' 0092'              	movwf	___flmul@a+3
  8056  0022' 0805'              	movf	?___xxtofl+2,w
  8057  0023' 0091'              	movwf	___flmul@a+2
  8058  0024' 0804'              	movf	?___xxtofl+1,w
  8059  0025' 0090'              	movwf	___flmul@a+1
  8060  0026' 0803'              	movf	?___xxtofl,w
  8061  0027' 008F'              	movwf	___flmul@a
  8062  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  8063  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  8064  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  8065  002F' 080E'              	movf	?___flmul+3,w
  8066  0030' 1683               	bsf	3,5	;RP0=1, select bank1
  8067  0031' 1303               	bcf	3,6	;RP1=0, select bank1
  8068  0032' 0080'              	movwf	(_x+3)^(0+128)
  8069  0033' 1283               	bcf	3,5	;RP0=0, select bank0
  8070  0034' 1303               	bcf	3,6	;RP1=0, select bank0
  8071  0035' 080D'              	movf	?___flmul+2,w
  8072  0036' 1683               	bsf	3,5	;RP0=1, select bank1
  8073  0037' 1303               	bcf	3,6	;RP1=0, select bank1
  8074  0038' 0080'              	movwf	(_x+2)^(0+128)
  8075  0039' 1283               	bcf	3,5	;RP0=0, select bank0
  8076  003A' 1303               	bcf	3,6	;RP1=0, select bank0
  8077  003B' 080C'              	movf	?___flmul+1,w
  8078  003C' 1683               	bsf	3,5	;RP0=1, select bank1
  8079  003D' 1303               	bcf	3,6	;RP1=0, select bank1
  8080  003E' 0080'              	movwf	(_x+1)^(0+128)
  8081  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  8082  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  8083  0041' 080B'              	movf	?___flmul,w
  8084  0042' 1683               	bsf	3,5	;RP0=1, select bank1
  8085  0043' 1303               	bcf	3,6	;RP1=0, select bank1
  8086  0044' 0080'              	movwf	_x^(0+128)
  8087  0045'                    l4567:
  8088                           
  8089                           ;main.c: 211:     return (x);
  8090  0045' 0800'              	movf	(_x+3)^(0+128),w
  8091  0046' 1283               	bcf	3,5	;RP0=0, select bank0
  8092  0047' 1303               	bcf	3,6	;RP1=0, select bank0
  8093  0048' 00A8'              	movwf	?_conversor+3
  8094  0049' 1683               	bsf	3,5	;RP0=1, select bank1
  8095  004A' 1303               	bcf	3,6	;RP1=0, select bank1
  8096  004B' 0800'              	movf	(_x+2)^(0+128),w
  8097  004C' 1283               	bcf	3,5	;RP0=0, select bank0
  8098  004D' 1303               	bcf	3,6	;RP1=0, select bank0
  8099  004E' 00A7'              	movwf	?_conversor+2
  8100  004F' 1683               	bsf	3,5	;RP0=1, select bank1
  8101  0050' 1303               	bcf	3,6	;RP1=0, select bank1
  8102  0051' 0800'              	movf	(_x+1)^(0+128),w
  8103  0052' 1283               	bcf	3,5	;RP0=0, select bank0
  8104  0053' 1303               	bcf	3,6	;RP1=0, select bank0
  8105  0054' 00A6'              	movwf	?_conversor+1
  8106  0055' 1683               	bsf	3,5	;RP0=1, select bank1
  8107  0056' 1303               	bcf	3,6	;RP1=0, select bank1
  8108  0057' 0800'              	movf	_x^(0+128),w
  8109  0058' 1283               	bcf	3,5	;RP0=0, select bank0
  8110  0059' 1303               	bcf	3,6	;RP1=0, select bank0
  8111  005A' 00A5'              	movwf	?_conversor
  8112  005B'                    l99:
  8113  005B' 0008               	return
  8114  005C'                    __end_of_conversor:
  8115                           
  8116                           	psect	text28
  8117  0000'                    __ptext28:	
  8118 ;; *************** function ___xxtofl *****************
  8119 ;; Defined at:
  8120 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  sign            1    wreg     unsigned char 
  8123 ;;  val             4    3[COMMON] long 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;  sign            1    4[BANK0 ] unsigned char 
  8126 ;;  arg             4    6[BANK0 ] unsigned long 
  8127 ;;  exp             1    5[BANK0 ] unsigned char 
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  4    3[COMMON] unsigned char 
  8130 ;; Registers used:
  8131 ;;		wreg, status,2, status,0
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8137 ;;      Params:         4       0       0       0       0
  8138 ;;      Locals:         0       6       0       0       0
  8139 ;;      Temps:          0       4       0       0       0
  8140 ;;      Totals:         4      10       0       0       0
  8141 ;;Total ram usage:       14 bytes
  8142 ;; Hardware stack levels used:    1
  8143 ;; Hardware stack levels required when called:    1
  8144 ;; This function calls:
  8145 ;;		Nothing
  8146 ;; This function is called by:
  8147 ;;		_conversor
  8148 ;;		_conversor2
  8149 ;;		_sprintf
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           
  8154                           ;psect for function ___xxtofl
  8155  0000'                    ___xxtofl:
  8156                           
  8157                           ;incstack = 0
  8158                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8159                           ;___xxtofl@sign stored from wreg
  8160  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8161  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8162  0002' 0084'              	movwf	___xxtofl@sign
  8163  0003'                    l4189:
  8164  0003' 0804'              	movf	___xxtofl@sign,w
  8165  0004' 1903               	btfsc	3,2
  8166  0005' 2800'              	goto	u6881
  8167  0006' 2800'              	goto	u6880
  8168  0007'                    u6881:
  8169  0007' 2800'              	goto	l4195
  8170  0008'                    u6880:
  8171  0008'                    l4191:
  8172  0008' 1F86'              	btfss	___xxtofl@val+3,7
  8173  0009' 2800'              	goto	u6891
  8174  000A' 2800'              	goto	u6890
  8175  000B'                    u6891:
  8176  000B' 2800'              	goto	l4195
  8177  000C'                    u6890:
  8178  000C'                    l4193:
  8179  000C' 0903'              	comf	___xxtofl@val,w
  8180  000D' 0086'              	movwf	___xxtofl@arg
  8181  000E' 0904'              	comf	___xxtofl@val+1,w
  8182  000F' 0087'              	movwf	___xxtofl@arg+1
  8183  0010' 0905'              	comf	___xxtofl@val+2,w
  8184  0011' 0088'              	movwf	___xxtofl@arg+2
  8185  0012' 0906'              	comf	___xxtofl@val+3,w
  8186  0013' 0089'              	movwf	___xxtofl@arg+3
  8187  0014' 0A86'              	incf	___xxtofl@arg,f
  8188  0015' 1903               	skipnz
  8189  0016' 0A87'              	incf	___xxtofl@arg+1,f
  8190  0017' 1903               	skipnz
  8191  0018' 0A88'              	incf	___xxtofl@arg+2,f
  8192  0019' 1903               	skipnz
  8193  001A' 0A89'              	incf	___xxtofl@arg+3,f
  8194  001B' 2800'              	goto	l889
  8195  001C'                    l4195:
  8196  001C' 0806'              	movf	___xxtofl@val+3,w
  8197  001D' 0089'              	movwf	___xxtofl@arg+3
  8198  001E' 0805'              	movf	___xxtofl@val+2,w
  8199  001F' 0088'              	movwf	___xxtofl@arg+2
  8200  0020' 0804'              	movf	___xxtofl@val+1,w
  8201  0021' 0087'              	movwf	___xxtofl@arg+1
  8202  0022' 0803'              	movf	___xxtofl@val,w
  8203  0023' 0086'              	movwf	___xxtofl@arg
  8204  0024'                    l889:
  8205  0024' 0806'              	movf	___xxtofl@val+3,w
  8206  0025' 0405'              	iorwf	___xxtofl@val+2,w
  8207  0026' 0404'              	iorwf	___xxtofl@val+1,w
  8208  0027' 0403'              	iorwf	___xxtofl@val,w
  8209  0028' 1D03               	skipz
  8210  0029' 2800'              	goto	u6901
  8211  002A' 2800'              	goto	u6900
  8212  002B'                    u6901:
  8213  002B' 2800'              	goto	l4201
  8214  002C'                    u6900:
  8215  002C'                    l4197:
  8216  002C' 3000               	movlw	0
  8217  002D' 0086'              	movwf	?___xxtofl+3
  8218  002E' 3000               	movlw	0
  8219  002F' 0085'              	movwf	?___xxtofl+2
  8220  0030' 3000               	movlw	0
  8221  0031' 0084'              	movwf	?___xxtofl+1
  8222  0032' 3000               	movlw	0
  8223  0033' 0083'              	movwf	?___xxtofl
  8224  0034' 2800'              	goto	l891
  8225  0035'                    l4201:
  8226  0035' 3096               	movlw	150
  8227  0036' 0080'              	movwf	??___xxtofl
  8228  0037' 0800'              	movf	??___xxtofl,w
  8229  0038' 0085'              	movwf	___xxtofl@exp
  8230  0039' 2800'              	goto	l4205
  8231  003A'                    l4203:
  8232  003A' 3001               	movlw	1
  8233  003B' 0080'              	movwf	??___xxtofl
  8234  003C' 0800'              	movf	??___xxtofl,w
  8235  003D' 0785'              	addwf	___xxtofl@exp,f
  8236  003E' 3001               	movlw	1
  8237  003F'                    u6915:
  8238  003F' 1003               	clrc
  8239  0040' 0C89'              	rrf	___xxtofl@arg+3,f
  8240  0041' 0C88'              	rrf	___xxtofl@arg+2,f
  8241  0042' 0C87'              	rrf	___xxtofl@arg+1,f
  8242  0043' 0C86'              	rrf	___xxtofl@arg,f
  8243  0044' 3EFF               	addlw	-1
  8244  0045' 1D03               	skipz
  8245  0046' 2800'              	goto	u6915
  8246  0047'                    l4205:
  8247  0047' 30FE               	movlw	254
  8248  0048' 0509'              	andwf	___xxtofl@arg+3,w
  8249  0049' 1D03               	btfss	3,2
  8250  004A' 2800'              	goto	u6921
  8251  004B' 2800'              	goto	u6920
  8252  004C'                    u6921:
  8253  004C' 2800'              	goto	l4203
  8254  004D'                    u6920:
  8255  004D' 2800'              	goto	l895
  8256  004E'                    l4207:
  8257  004E' 3001               	movlw	1
  8258  004F' 0080'              	movwf	??___xxtofl
  8259  0050' 0800'              	movf	??___xxtofl,w
  8260  0051' 0785'              	addwf	___xxtofl@exp,f
  8261  0052'                    l4209:
  8262  0052' 3001               	movlw	1
  8263  0053' 0786'              	addwf	___xxtofl@arg,f
  8264  0054' 3000               	movlw	0
  8265  0055' 1803               	skipnc
  8266  0056' 3001               	movlw	1
  8267  0057' 0787'              	addwf	___xxtofl@arg+1,f
  8268  0058' 3000               	movlw	0
  8269  0059' 1803               	skipnc
  8270  005A' 3001               	movlw	1
  8271  005B' 0788'              	addwf	___xxtofl@arg+2,f
  8272  005C' 3000               	movlw	0
  8273  005D' 1803               	skipnc
  8274  005E' 3001               	movlw	1
  8275  005F' 0789'              	addwf	___xxtofl@arg+3,f
  8276  0060'                    l4211:
  8277  0060' 3001               	movlw	1
  8278  0061'                    u6935:
  8279  0061' 1003               	clrc
  8280  0062' 0C89'              	rrf	___xxtofl@arg+3,f
  8281  0063' 0C88'              	rrf	___xxtofl@arg+2,f
  8282  0064' 0C87'              	rrf	___xxtofl@arg+1,f
  8283  0065' 0C86'              	rrf	___xxtofl@arg,f
  8284  0066' 3EFF               	addlw	-1
  8285  0067' 1D03               	skipz
  8286  0068' 2800'              	goto	u6935
  8287  0069'                    l895:
  8288  0069' 30FF               	movlw	255
  8289  006A' 0509'              	andwf	___xxtofl@arg+3,w
  8290  006B' 1D03               	btfss	3,2
  8291  006C' 2800'              	goto	u6941
  8292  006D' 2800'              	goto	u6940
  8293  006E'                    u6941:
  8294  006E' 2800'              	goto	l4207
  8295  006F'                    u6940:
  8296  006F' 2800'              	goto	l4215
  8297  0070'                    l4213:
  8298  0070' 3001               	movlw	1
  8299  0071' 0285'              	subwf	___xxtofl@exp,f
  8300  0072' 3001               	movlw	1
  8301  0073' 0080'              	movwf	??___xxtofl
  8302  0074'                    u6955:
  8303  0074' 1003               	clrc
  8304  0075' 0D86'              	rlf	___xxtofl@arg,f
  8305  0076' 0D87'              	rlf	___xxtofl@arg+1,f
  8306  0077' 0D88'              	rlf	___xxtofl@arg+2,f
  8307  0078' 0D89'              	rlf	___xxtofl@arg+3,f
  8308  0079' 0B80'              	decfsz	??___xxtofl,f
  8309  007A' 2800'              	goto	u6955
  8310  007B'                    l4215:
  8311  007B' 1B88'              	btfsc	___xxtofl@arg+2,7
  8312  007C' 2800'              	goto	u6961
  8313  007D' 2800'              	goto	u6960
  8314  007E'                    u6961:
  8315  007E' 2800'              	goto	l902
  8316  007F'                    u6960:
  8317  007F'                    l4217:
  8318  007F' 3002               	movlw	2
  8319  0080' 0205'              	subwf	___xxtofl@exp,w
  8320  0081' 1803               	skipnc
  8321  0082' 2800'              	goto	u6971
  8322  0083' 2800'              	goto	u6970
  8323  0084'                    u6971:
  8324  0084' 2800'              	goto	l4213
  8325  0085'                    u6970:
  8326  0085'                    l902:
  8327  0085' 1805'              	btfsc	___xxtofl@exp,0
  8328  0086' 2800'              	goto	u6981
  8329  0087' 2800'              	goto	u6980
  8330  0088'                    u6981:
  8331  0088' 2800'              	goto	l903
  8332  0089'                    u6980:
  8333  0089'                    l4219:
  8334  0089' 30FF               	movlw	255
  8335  008A' 0586'              	andwf	___xxtofl@arg,f
  8336  008B' 30FF               	movlw	255
  8337  008C' 0587'              	andwf	___xxtofl@arg+1,f
  8338  008D' 307F               	movlw	127
  8339  008E' 0588'              	andwf	___xxtofl@arg+2,f
  8340  008F' 30FF               	movlw	255
  8341  0090' 0589'              	andwf	___xxtofl@arg+3,f
  8342  0091'                    l903:
  8343  0091' 1003               	clrc
  8344  0092' 0C85'              	rrf	___xxtofl@exp,f
  8345  0093'                    l4221:
  8346  0093' 0805'              	movf	___xxtofl@exp,w
  8347  0094' 0080'              	movwf	??___xxtofl
  8348  0095' 0181'              	clrf	??___xxtofl+1
  8349  0096' 0182'              	clrf	??___xxtofl+2
  8350  0097' 0183'              	clrf	??___xxtofl+3
  8351  0098' 3018               	movlw	24
  8352  0099'                    u6995:
  8353  0099' 1003               	clrc
  8354  009A' 0D80'              	rlf	??___xxtofl,f
  8355  009B' 0D81'              	rlf	??___xxtofl+1,f
  8356  009C' 0D82'              	rlf	??___xxtofl+2,f
  8357  009D' 0D83'              	rlf	??___xxtofl+3,f
  8358  009E'                    u6990:
  8359  009E' 3EFF               	addlw	-1
  8360  009F' 1D03               	skipz
  8361  00A0' 2800'              	goto	u6995
  8362  00A1' 0800'              	movf	??___xxtofl,w
  8363  00A2' 0486'              	iorwf	___xxtofl@arg,f
  8364  00A3' 0801'              	movf	??___xxtofl+1,w
  8365  00A4' 0487'              	iorwf	___xxtofl@arg+1,f
  8366  00A5' 0802'              	movf	??___xxtofl+2,w
  8367  00A6' 0488'              	iorwf	___xxtofl@arg+2,f
  8368  00A7' 0803'              	movf	??___xxtofl+3,w
  8369  00A8' 0489'              	iorwf	___xxtofl@arg+3,f
  8370  00A9'                    l4223:
  8371  00A9' 0804'              	movf	___xxtofl@sign,w
  8372  00AA' 1903               	btfsc	3,2
  8373  00AB' 2800'              	goto	u7001
  8374  00AC' 2800'              	goto	u7000
  8375  00AD'                    u7001:
  8376  00AD' 2800'              	goto	l4229
  8377  00AE'                    u7000:
  8378  00AE'                    l4225:
  8379  00AE' 1F86'              	btfss	___xxtofl@val+3,7
  8380  00AF' 2800'              	goto	u7011
  8381  00B0' 2800'              	goto	u7010
  8382  00B1'                    u7011:
  8383  00B1' 2800'              	goto	l4229
  8384  00B2'                    u7010:
  8385  00B2'                    l4227:
  8386  00B2' 1789'              	bsf	___xxtofl@arg+3,7
  8387  00B3'                    l4229:
  8388  00B3' 0809'              	movf	___xxtofl@arg+3,w
  8389  00B4' 0086'              	movwf	?___xxtofl+3
  8390  00B5' 0808'              	movf	___xxtofl@arg+2,w
  8391  00B6' 0085'              	movwf	?___xxtofl+2
  8392  00B7' 0807'              	movf	___xxtofl@arg+1,w
  8393  00B8' 0084'              	movwf	?___xxtofl+1
  8394  00B9' 0806'              	movf	___xxtofl@arg,w
  8395  00BA' 0083'              	movwf	?___xxtofl
  8396  00BB'                    l891:
  8397  00BB' 0008               	return
  8398  00BC'                    __end_of___xxtofl:
  8399                           
  8400                           	psect	text29
  8401  0000'                    __ptext29:	
  8402 ;; *************** function ___flmul *****************
  8403 ;; Defined at:
  8404 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  b               4   11[BANK0 ] unsigned char 
  8407 ;;  a               4   15[BANK0 ] unsigned char 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  prod            4   31[BANK0 ] struct .
  8410 ;;  grs             4   25[BANK0 ] unsigned long 
  8411 ;;  temp            2   35[BANK0 ] struct .
  8412 ;;  bexp            1   30[BANK0 ] unsigned char 
  8413 ;;  aexp            1   29[BANK0 ] unsigned char 
  8414 ;;  sign            1   24[BANK0 ] unsigned char 
  8415 ;; Return value:  Size  Location     Type
  8416 ;;                  4   11[BANK0 ] unsigned char 
  8417 ;; Registers used:
  8418 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8419 ;; Tracked objects:
  8420 ;;		On entry : 0/0
  8421 ;;		On exit  : 0/0
  8422 ;;		Unchanged: 0/0
  8423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8424 ;;      Params:         0       8       0       0       0
  8425 ;;      Locals:         0      13       0       0       0
  8426 ;;      Temps:          0       5       0       0       0
  8427 ;;      Totals:         0      26       0       0       0
  8428 ;;Total ram usage:       26 bytes
  8429 ;; Hardware stack levels used:    1
  8430 ;; Hardware stack levels required when called:    2
  8431 ;; This function calls:
  8432 ;;		__Umul8_16
  8433 ;; This function is called by:
  8434 ;;		_conversor
  8435 ;;		_conversor2
  8436 ;;		_fround
  8437 ;;		_scale
  8438 ;;		_sprintf
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           
  8443                           ;psect for function ___flmul
  8444  0000'                    ___flmul:
  8445  0000'                    l2737:	
  8446                           ;incstack = 0
  8447                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8448                           
  8449  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8450  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8451  0002' 080E'              	movf	___flmul@b+3,w
  8452  0003' 3980               	andlw	128
  8453  0004' 0093'              	movwf	??___flmul
  8454  0005' 0813'              	movf	??___flmul,w
  8455  0006' 0098'              	movwf	___flmul@sign
  8456  0007'                    l2739:
  8457  0007' 080E'              	movf	___flmul@b+3,w
  8458  0008' 0093'              	movwf	??___flmul
  8459  0009' 0713'              	addwf	??___flmul,w
  8460  000A' 0094'              	movwf	??___flmul+1
  8461  000B' 0814'              	movf	??___flmul+1,w
  8462  000C' 009E'              	movwf	___flmul@bexp
  8463  000D'                    l2741:
  8464  000D' 1F8D'              	btfss	___flmul@b+2,7
  8465  000E' 2800'              	goto	u3731
  8466  000F' 2800'              	goto	u3730
  8467  0010'                    u3731:
  8468  0010' 2800'              	goto	l2745
  8469  0011'                    u3730:
  8470  0011'                    l2743:
  8471  0011' 141E'              	bsf	___flmul@bexp,0
  8472  0012'                    l2745:
  8473  0012' 081E'              	movf	___flmul@bexp,w
  8474  0013' 1903               	btfsc	3,2
  8475  0014' 2800'              	goto	u3741
  8476  0015' 2800'              	goto	u3740
  8477  0016'                    u3741:
  8478  0016' 2800'              	goto	l2753
  8479  0017'                    u3740:
  8480  0017'                    l2747:
  8481  0017' 0A1E'              	incf	___flmul@bexp,w
  8482  0018' 1D03               	btfss	3,2
  8483  0019' 2800'              	goto	u3751
  8484  001A' 2800'              	goto	u3750
  8485  001B'                    u3751:
  8486  001B' 2800'              	goto	l2751
  8487  001C'                    u3750:
  8488  001C'                    l2749:
  8489  001C' 3000               	movlw	0
  8490  001D' 008E'              	movwf	___flmul@b+3
  8491  001E' 3000               	movlw	0
  8492  001F' 008D'              	movwf	___flmul@b+2
  8493  0020' 3000               	movlw	0
  8494  0021' 008C'              	movwf	___flmul@b+1
  8495  0022' 3000               	movlw	0
  8496  0023' 008B'              	movwf	___flmul@b
  8497  0024'                    l2751:
  8498  0024' 178D'              	bsf	___flmul@b+2,7
  8499  0025' 2800'              	goto	l2755
  8500  0026'                    l2753:
  8501  0026' 3000               	movlw	0
  8502  0027' 008E'              	movwf	___flmul@b+3
  8503  0028' 3000               	movlw	0
  8504  0029' 008D'              	movwf	___flmul@b+2
  8505  002A' 3000               	movlw	0
  8506  002B' 008C'              	movwf	___flmul@b+1
  8507  002C' 3000               	movlw	0
  8508  002D' 008B'              	movwf	___flmul@b
  8509  002E'                    l2755:
  8510  002E' 0812'              	movf	___flmul@a+3,w
  8511  002F' 3980               	andlw	128
  8512  0030' 0093'              	movwf	??___flmul
  8513  0031' 0813'              	movf	??___flmul,w
  8514  0032' 0698'              	xorwf	___flmul@sign,f
  8515  0033'                    l2757:
  8516  0033' 0812'              	movf	___flmul@a+3,w
  8517  0034' 0093'              	movwf	??___flmul
  8518  0035' 0713'              	addwf	??___flmul,w
  8519  0036' 0094'              	movwf	??___flmul+1
  8520  0037' 0814'              	movf	??___flmul+1,w
  8521  0038' 009D'              	movwf	___flmul@aexp
  8522  0039'                    l2759:
  8523  0039' 1F91'              	btfss	___flmul@a+2,7
  8524  003A' 2800'              	goto	u3761
  8525  003B' 2800'              	goto	u3760
  8526  003C'                    u3761:
  8527  003C' 2800'              	goto	l2763
  8528  003D'                    u3760:
  8529  003D'                    l2761:
  8530  003D' 141D'              	bsf	___flmul@aexp,0
  8531  003E'                    l2763:
  8532  003E' 081D'              	movf	___flmul@aexp,w
  8533  003F' 1903               	btfsc	3,2
  8534  0040' 2800'              	goto	u3771
  8535  0041' 2800'              	goto	u3770
  8536  0042'                    u3771:
  8537  0042' 2800'              	goto	l2771
  8538  0043'                    u3770:
  8539  0043'                    l2765:
  8540  0043' 0A1D'              	incf	___flmul@aexp,w
  8541  0044' 1D03               	btfss	3,2
  8542  0045' 2800'              	goto	u3781
  8543  0046' 2800'              	goto	u3780
  8544  0047'                    u3781:
  8545  0047' 2800'              	goto	l2769
  8546  0048'                    u3780:
  8547  0048'                    l2767:
  8548  0048' 3000               	movlw	0
  8549  0049' 0092'              	movwf	___flmul@a+3
  8550  004A' 3000               	movlw	0
  8551  004B' 0091'              	movwf	___flmul@a+2
  8552  004C' 3000               	movlw	0
  8553  004D' 0090'              	movwf	___flmul@a+1
  8554  004E' 3000               	movlw	0
  8555  004F' 008F'              	movwf	___flmul@a
  8556  0050'                    l2769:
  8557  0050' 1791'              	bsf	___flmul@a+2,7
  8558  0051' 2800'              	goto	l2773
  8559  0052'                    l2771:
  8560  0052' 3000               	movlw	0
  8561  0053' 0092'              	movwf	___flmul@a+3
  8562  0054' 3000               	movlw	0
  8563  0055' 0091'              	movwf	___flmul@a+2
  8564  0056' 3000               	movlw	0
  8565  0057' 0090'              	movwf	___flmul@a+1
  8566  0058' 3000               	movlw	0
  8567  0059' 008F'              	movwf	___flmul@a
  8568  005A'                    l2773:
  8569  005A' 081D'              	movf	___flmul@aexp,w
  8570  005B' 1903               	btfsc	3,2
  8571  005C' 2800'              	goto	u3791
  8572  005D' 2800'              	goto	u3790
  8573  005E'                    u3791:
  8574  005E' 2800'              	goto	l2777
  8575  005F'                    u3790:
  8576  005F'                    l2775:
  8577  005F' 081E'              	movf	___flmul@bexp,w
  8578  0060' 1D03               	btfss	3,2
  8579  0061' 2800'              	goto	u3801
  8580  0062' 2800'              	goto	u3800
  8581  0063'                    u3801:
  8582  0063' 2800'              	goto	l2781
  8583  0064'                    u3800:
  8584  0064'                    l2777:
  8585  0064' 3000               	movlw	0
  8586  0065' 008E'              	movwf	?___flmul+3
  8587  0066' 3000               	movlw	0
  8588  0067' 008D'              	movwf	?___flmul+2
  8589  0068' 3000               	movlw	0
  8590  0069' 008C'              	movwf	?___flmul+1
  8591  006A' 3000               	movlw	0
  8592  006B' 008B'              	movwf	?___flmul
  8593  006C' 2800'              	goto	l845
  8594  006D'                    l2781:
  8595  006D' 080B'              	movf	___flmul@b,w
  8596  006E' 0093'              	movwf	??___flmul
  8597  006F' 0813'              	movf	??___flmul,w
  8598  0070' 0083'              	movwf	__Umul8_16@multiplicand
  8599  0071' 0811'              	movf	___flmul@a+2,w
  8600  0072' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8601  0077' 0804'              	movf	?__Umul8_16+1,w
  8602  0078' 1283               	bcf	3,5	;RP0=0, select bank0
  8603  0079' 1303               	bcf	3,6	;RP1=0, select bank0
  8604  007A' 00A4'              	movwf	___flmul@temp+1
  8605  007B' 0803'              	movf	?__Umul8_16,w
  8606  007C' 00A3'              	movwf	___flmul@temp
  8607  007D'                    l2783:
  8608  007D' 0823'              	movf	___flmul@temp,w
  8609  007E' 0093'              	movwf	??___flmul
  8610  007F' 0194'              	clrf	??___flmul+1
  8611  0080' 0195'              	clrf	??___flmul+2
  8612  0081' 0196'              	clrf	??___flmul+3
  8613  0082' 0816'              	movf	??___flmul+3,w
  8614  0083' 009C'              	movwf	___flmul@grs+3
  8615  0084' 0815'              	movf	??___flmul+2,w
  8616  0085' 009B'              	movwf	___flmul@grs+2
  8617  0086' 0814'              	movf	??___flmul+1,w
  8618  0087' 009A'              	movwf	___flmul@grs+1
  8619  0088' 0813'              	movf	??___flmul,w
  8620  0089' 0099'              	movwf	___flmul@grs
  8621  008A'                    l2785:
  8622  008A' 0824'              	movf	___flmul@temp+1,w
  8623  008B' 0093'              	movwf	??___flmul
  8624  008C' 0194'              	clrf	??___flmul+1
  8625  008D' 0195'              	clrf	??___flmul+2
  8626  008E' 0196'              	clrf	??___flmul+3
  8627  008F' 0816'              	movf	??___flmul+3,w
  8628  0090' 00A2'              	movwf	___flmul@prod+3
  8629  0091' 0815'              	movf	??___flmul+2,w
  8630  0092' 00A1'              	movwf	___flmul@prod+2
  8631  0093' 0814'              	movf	??___flmul+1,w
  8632  0094' 00A0'              	movwf	___flmul@prod+1
  8633  0095' 0813'              	movf	??___flmul,w
  8634  0096' 009F'              	movwf	___flmul@prod
  8635  0097' 080C'              	movf	___flmul@b+1,w
  8636  0098' 0093'              	movwf	??___flmul
  8637  0099' 0813'              	movf	??___flmul,w
  8638  009A' 0083'              	movwf	__Umul8_16@multiplicand
  8639  009B' 0810'              	movf	___flmul@a+1,w
  8640  009C' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8641  00A1' 0804'              	movf	?__Umul8_16+1,w
  8642  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
  8643  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
  8644  00A4' 00A4'              	movwf	___flmul@temp+1
  8645  00A5' 0803'              	movf	?__Umul8_16,w
  8646  00A6' 00A3'              	movwf	___flmul@temp
  8647  00A7'                    l2787:
  8648  00A7' 0823'              	movf	___flmul@temp,w
  8649  00A8' 0093'              	movwf	??___flmul
  8650  00A9' 0194'              	clrf	??___flmul+1
  8651  00AA' 0195'              	clrf	??___flmul+2
  8652  00AB' 0196'              	clrf	??___flmul+3
  8653  00AC' 0813'              	movf	??___flmul,w
  8654  00AD' 0799'              	addwf	___flmul@grs,f
  8655  00AE' 0814'              	movf	??___flmul+1,w
  8656  00AF' 1103               	clrz
  8657  00B0' 1803               	skipnc
  8658  00B1' 3E01               	addlw	1
  8659  00B2' 1903               	skipnz
  8660  00B3' 2800'              	goto	u3811
  8661  00B4' 079A'              	addwf	___flmul@grs+1,f
  8662  00B5'                    u3811:
  8663  00B5' 0815'              	movf	??___flmul+2,w
  8664  00B6' 1103               	clrz
  8665  00B7' 1803               	skipnc
  8666  00B8' 3E01               	addlw	1
  8667  00B9' 1903               	skipnz
  8668  00BA' 2800'              	goto	u3812
  8669  00BB' 079B'              	addwf	___flmul@grs+2,f
  8670  00BC'                    u3812:
  8671  00BC' 0816'              	movf	??___flmul+3,w
  8672  00BD' 1103               	clrz
  8673  00BE' 1803               	skipnc
  8674  00BF' 3E01               	addlw	1
  8675  00C0' 1903               	skipnz
  8676  00C1' 2800'              	goto	u3813
  8677  00C2' 079C'              	addwf	___flmul@grs+3,f
  8678  00C3'                    u3813:
  8679  00C3'                    l2789:
  8680  00C3' 0824'              	movf	___flmul@temp+1,w
  8681  00C4' 0093'              	movwf	??___flmul
  8682  00C5' 0194'              	clrf	??___flmul+1
  8683  00C6' 0195'              	clrf	??___flmul+2
  8684  00C7' 0196'              	clrf	??___flmul+3
  8685  00C8' 0813'              	movf	??___flmul,w
  8686  00C9' 079F'              	addwf	___flmul@prod,f
  8687  00CA' 0814'              	movf	??___flmul+1,w
  8688  00CB' 1103               	clrz
  8689  00CC' 1803               	skipnc
  8690  00CD' 3E01               	addlw	1
  8691  00CE' 1903               	skipnz
  8692  00CF' 2800'              	goto	u3821
  8693  00D0' 07A0'              	addwf	___flmul@prod+1,f
  8694  00D1'                    u3821:
  8695  00D1' 0815'              	movf	??___flmul+2,w
  8696  00D2' 1103               	clrz
  8697  00D3' 1803               	skipnc
  8698  00D4' 3E01               	addlw	1
  8699  00D5' 1903               	skipnz
  8700  00D6' 2800'              	goto	u3822
  8701  00D7' 07A1'              	addwf	___flmul@prod+2,f
  8702  00D8'                    u3822:
  8703  00D8' 0816'              	movf	??___flmul+3,w
  8704  00D9' 1103               	clrz
  8705  00DA' 1803               	skipnc
  8706  00DB' 3E01               	addlw	1
  8707  00DC' 1903               	skipnz
  8708  00DD' 2800'              	goto	u3823
  8709  00DE' 07A2'              	addwf	___flmul@prod+3,f
  8710  00DF'                    u3823:
  8711  00DF' 080D'              	movf	___flmul@b+2,w
  8712  00E0' 0093'              	movwf	??___flmul
  8713  00E1' 0813'              	movf	??___flmul,w
  8714  00E2' 0083'              	movwf	__Umul8_16@multiplicand
  8715  00E3' 080F'              	movf	___flmul@a,w
  8716  00E4' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8717  00E9' 0804'              	movf	?__Umul8_16+1,w
  8718  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
  8719  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
  8720  00EC' 00A4'              	movwf	___flmul@temp+1
  8721  00ED' 0803'              	movf	?__Umul8_16,w
  8722  00EE' 00A3'              	movwf	___flmul@temp
  8723  00EF'                    l2791:
  8724  00EF' 0823'              	movf	___flmul@temp,w
  8725  00F0' 0093'              	movwf	??___flmul
  8726  00F1' 0194'              	clrf	??___flmul+1
  8727  00F2' 0195'              	clrf	??___flmul+2
  8728  00F3' 0196'              	clrf	??___flmul+3
  8729  00F4' 0813'              	movf	??___flmul,w
  8730  00F5' 0799'              	addwf	___flmul@grs,f
  8731  00F6' 0814'              	movf	??___flmul+1,w
  8732  00F7' 1103               	clrz
  8733  00F8' 1803               	skipnc
  8734  00F9' 3E01               	addlw	1
  8735  00FA' 1903               	skipnz
  8736  00FB' 2800'              	goto	u3831
  8737  00FC' 079A'              	addwf	___flmul@grs+1,f
  8738  00FD'                    u3831:
  8739  00FD' 0815'              	movf	??___flmul+2,w
  8740  00FE' 1103               	clrz
  8741  00FF' 1803               	skipnc
  8742  0100' 3E01               	addlw	1
  8743  0101' 1903               	skipnz
  8744  0102' 2800'              	goto	u3832
  8745  0103' 079B'              	addwf	___flmul@grs+2,f
  8746  0104'                    u3832:
  8747  0104' 0816'              	movf	??___flmul+3,w
  8748  0105' 1103               	clrz
  8749  0106' 1803               	skipnc
  8750  0107' 3E01               	addlw	1
  8751  0108' 1903               	skipnz
  8752  0109' 2800'              	goto	u3833
  8753  010A' 079C'              	addwf	___flmul@grs+3,f
  8754  010B'                    u3833:
  8755  010B'                    l2793:
  8756  010B' 0824'              	movf	___flmul@temp+1,w
  8757  010C' 0093'              	movwf	??___flmul
  8758  010D' 0194'              	clrf	??___flmul+1
  8759  010E' 0195'              	clrf	??___flmul+2
  8760  010F' 0196'              	clrf	??___flmul+3
  8761  0110' 0813'              	movf	??___flmul,w
  8762  0111' 079F'              	addwf	___flmul@prod,f
  8763  0112' 0814'              	movf	??___flmul+1,w
  8764  0113' 1103               	clrz
  8765  0114' 1803               	skipnc
  8766  0115' 3E01               	addlw	1
  8767  0116' 1903               	skipnz
  8768  0117' 2800'              	goto	u3841
  8769  0118' 07A0'              	addwf	___flmul@prod+1,f
  8770  0119'                    u3841:
  8771  0119' 0815'              	movf	??___flmul+2,w
  8772  011A' 1103               	clrz
  8773  011B' 1803               	skipnc
  8774  011C' 3E01               	addlw	1
  8775  011D' 1903               	skipnz
  8776  011E' 2800'              	goto	u3842
  8777  011F' 07A1'              	addwf	___flmul@prod+2,f
  8778  0120'                    u3842:
  8779  0120' 0816'              	movf	??___flmul+3,w
  8780  0121' 1103               	clrz
  8781  0122' 1803               	skipnc
  8782  0123' 3E01               	addlw	1
  8783  0124' 1903               	skipnz
  8784  0125' 2800'              	goto	u3843
  8785  0126' 07A2'              	addwf	___flmul@prod+3,f
  8786  0127'                    u3843:
  8787  0127'                    l2795:
  8788  0127' 3008               	movlw	8
  8789  0128' 0093'              	movwf	??___flmul
  8790  0129'                    u3855:
  8791  0129' 1003               	clrc
  8792  012A' 0D99'              	rlf	___flmul@grs,f
  8793  012B' 0D9A'              	rlf	___flmul@grs+1,f
  8794  012C' 0D9B'              	rlf	___flmul@grs+2,f
  8795  012D' 0D9C'              	rlf	___flmul@grs+3,f
  8796  012E' 0B93'              	decfsz	??___flmul,f
  8797  012F' 2800'              	goto	u3855
  8798  0130'                    l2797:
  8799  0130' 080C'              	movf	___flmul@b+1,w
  8800  0131' 0093'              	movwf	??___flmul
  8801  0132' 0813'              	movf	??___flmul,w
  8802  0133' 0083'              	movwf	__Umul8_16@multiplicand
  8803  0134' 080F'              	movf	___flmul@a,w
  8804  0135' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8805  013A' 0804'              	movf	?__Umul8_16+1,w
  8806  013B' 1283               	bcf	3,5	;RP0=0, select bank0
  8807  013C' 1303               	bcf	3,6	;RP1=0, select bank0
  8808  013D' 00A4'              	movwf	___flmul@temp+1
  8809  013E' 0803'              	movf	?__Umul8_16,w
  8810  013F' 00A3'              	movwf	___flmul@temp
  8811  0140'                    l2799:
  8812  0140' 0823'              	movf	___flmul@temp,w
  8813  0141' 0093'              	movwf	??___flmul
  8814  0142' 0824'              	movf	___flmul@temp+1,w
  8815  0143' 0094'              	movwf	??___flmul+1
  8816  0144' 0195'              	clrf	??___flmul+2
  8817  0145' 0196'              	clrf	??___flmul+3
  8818  0146' 0813'              	movf	??___flmul,w
  8819  0147' 0799'              	addwf	___flmul@grs,f
  8820  0148' 0814'              	movf	??___flmul+1,w
  8821  0149' 1103               	clrz
  8822  014A' 1803               	skipnc
  8823  014B' 3E01               	addlw	1
  8824  014C' 1903               	skipnz
  8825  014D' 2800'              	goto	u3861
  8826  014E' 079A'              	addwf	___flmul@grs+1,f
  8827  014F'                    u3861:
  8828  014F' 0815'              	movf	??___flmul+2,w
  8829  0150' 1103               	clrz
  8830  0151' 1803               	skipnc
  8831  0152' 3E01               	addlw	1
  8832  0153' 1903               	skipnz
  8833  0154' 2800'              	goto	u3862
  8834  0155' 079B'              	addwf	___flmul@grs+2,f
  8835  0156'                    u3862:
  8836  0156' 0816'              	movf	??___flmul+3,w
  8837  0157' 1103               	clrz
  8838  0158' 1803               	skipnc
  8839  0159' 3E01               	addlw	1
  8840  015A' 1903               	skipnz
  8841  015B' 2800'              	goto	u3863
  8842  015C' 079C'              	addwf	___flmul@grs+3,f
  8843  015D'                    u3863:
  8844  015D'                    l2801:
  8845  015D' 080B'              	movf	___flmul@b,w
  8846  015E' 0093'              	movwf	??___flmul
  8847  015F' 0813'              	movf	??___flmul,w
  8848  0160' 0083'              	movwf	__Umul8_16@multiplicand
  8849  0161' 0810'              	movf	___flmul@a+1,w
  8850  0162' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8851  0167' 0804'              	movf	?__Umul8_16+1,w
  8852  0168' 1283               	bcf	3,5	;RP0=0, select bank0
  8853  0169' 1303               	bcf	3,6	;RP1=0, select bank0
  8854  016A' 00A4'              	movwf	___flmul@temp+1
  8855  016B' 0803'              	movf	?__Umul8_16,w
  8856  016C' 00A3'              	movwf	___flmul@temp
  8857  016D'                    l2803:
  8858  016D' 0823'              	movf	___flmul@temp,w
  8859  016E' 0093'              	movwf	??___flmul
  8860  016F' 0824'              	movf	___flmul@temp+1,w
  8861  0170' 0094'              	movwf	??___flmul+1
  8862  0171' 0195'              	clrf	??___flmul+2
  8863  0172' 0196'              	clrf	??___flmul+3
  8864  0173' 0813'              	movf	??___flmul,w
  8865  0174' 0799'              	addwf	___flmul@grs,f
  8866  0175' 0814'              	movf	??___flmul+1,w
  8867  0176' 1103               	clrz
  8868  0177' 1803               	skipnc
  8869  0178' 3E01               	addlw	1
  8870  0179' 1903               	skipnz
  8871  017A' 2800'              	goto	u3871
  8872  017B' 079A'              	addwf	___flmul@grs+1,f
  8873  017C'                    u3871:
  8874  017C' 0815'              	movf	??___flmul+2,w
  8875  017D' 1103               	clrz
  8876  017E' 1803               	skipnc
  8877  017F' 3E01               	addlw	1
  8878  0180' 1903               	skipnz
  8879  0181' 2800'              	goto	u3872
  8880  0182' 079B'              	addwf	___flmul@grs+2,f
  8881  0183'                    u3872:
  8882  0183' 0816'              	movf	??___flmul+3,w
  8883  0184' 1103               	clrz
  8884  0185' 1803               	skipnc
  8885  0186' 3E01               	addlw	1
  8886  0187' 1903               	skipnz
  8887  0188' 2800'              	goto	u3873
  8888  0189' 079C'              	addwf	___flmul@grs+3,f
  8889  018A'                    u3873:
  8890  018A'                    l2805:
  8891  018A' 3008               	movlw	8
  8892  018B' 0093'              	movwf	??___flmul
  8893  018C'                    u3885:
  8894  018C' 1003               	clrc
  8895  018D' 0D99'              	rlf	___flmul@grs,f
  8896  018E' 0D9A'              	rlf	___flmul@grs+1,f
  8897  018F' 0D9B'              	rlf	___flmul@grs+2,f
  8898  0190' 0D9C'              	rlf	___flmul@grs+3,f
  8899  0191' 0B93'              	decfsz	??___flmul,f
  8900  0192' 2800'              	goto	u3885
  8901  0193' 080B'              	movf	___flmul@b,w
  8902  0194' 0093'              	movwf	??___flmul
  8903  0195' 0813'              	movf	??___flmul,w
  8904  0196' 0083'              	movwf	__Umul8_16@multiplicand
  8905  0197' 080F'              	movf	___flmul@a,w
  8906  0198' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8907  019D' 0804'              	movf	?__Umul8_16+1,w
  8908  019E' 1283               	bcf	3,5	;RP0=0, select bank0
  8909  019F' 1303               	bcf	3,6	;RP1=0, select bank0
  8910  01A0' 00A4'              	movwf	___flmul@temp+1
  8911  01A1' 0803'              	movf	?__Umul8_16,w
  8912  01A2' 00A3'              	movwf	___flmul@temp
  8913  01A3'                    l2807:
  8914  01A3' 0823'              	movf	___flmul@temp,w
  8915  01A4' 0093'              	movwf	??___flmul
  8916  01A5' 0824'              	movf	___flmul@temp+1,w
  8917  01A6' 0094'              	movwf	??___flmul+1
  8918  01A7' 0195'              	clrf	??___flmul+2
  8919  01A8' 0196'              	clrf	??___flmul+3
  8920  01A9' 0813'              	movf	??___flmul,w
  8921  01AA' 0799'              	addwf	___flmul@grs,f
  8922  01AB' 0814'              	movf	??___flmul+1,w
  8923  01AC' 1103               	clrz
  8924  01AD' 1803               	skipnc
  8925  01AE' 3E01               	addlw	1
  8926  01AF' 1903               	skipnz
  8927  01B0' 2800'              	goto	u3891
  8928  01B1' 079A'              	addwf	___flmul@grs+1,f
  8929  01B2'                    u3891:
  8930  01B2' 0815'              	movf	??___flmul+2,w
  8931  01B3' 1103               	clrz
  8932  01B4' 1803               	skipnc
  8933  01B5' 3E01               	addlw	1
  8934  01B6' 1903               	skipnz
  8935  01B7' 2800'              	goto	u3892
  8936  01B8' 079B'              	addwf	___flmul@grs+2,f
  8937  01B9'                    u3892:
  8938  01B9' 0816'              	movf	??___flmul+3,w
  8939  01BA' 1103               	clrz
  8940  01BB' 1803               	skipnc
  8941  01BC' 3E01               	addlw	1
  8942  01BD' 1903               	skipnz
  8943  01BE' 2800'              	goto	u3893
  8944  01BF' 079C'              	addwf	___flmul@grs+3,f
  8945  01C0'                    u3893:
  8946  01C0'                    l2809:
  8947  01C0' 080C'              	movf	___flmul@b+1,w
  8948  01C1' 0093'              	movwf	??___flmul
  8949  01C2' 0813'              	movf	??___flmul,w
  8950  01C3' 0083'              	movwf	__Umul8_16@multiplicand
  8951  01C4' 0811'              	movf	___flmul@a+2,w
  8952  01C5' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8953  01CA' 0804'              	movf	?__Umul8_16+1,w
  8954  01CB' 1283               	bcf	3,5	;RP0=0, select bank0
  8955  01CC' 1303               	bcf	3,6	;RP1=0, select bank0
  8956  01CD' 00A4'              	movwf	___flmul@temp+1
  8957  01CE' 0803'              	movf	?__Umul8_16,w
  8958  01CF' 00A3'              	movwf	___flmul@temp
  8959  01D0' 0823'              	movf	___flmul@temp,w
  8960  01D1' 0093'              	movwf	??___flmul
  8961  01D2' 0824'              	movf	___flmul@temp+1,w
  8962  01D3' 0094'              	movwf	??___flmul+1
  8963  01D4' 0195'              	clrf	??___flmul+2
  8964  01D5' 0196'              	clrf	??___flmul+3
  8965  01D6' 0813'              	movf	??___flmul,w
  8966  01D7' 079F'              	addwf	___flmul@prod,f
  8967  01D8' 0814'              	movf	??___flmul+1,w
  8968  01D9' 1103               	clrz
  8969  01DA' 1803               	skipnc
  8970  01DB' 3E01               	addlw	1
  8971  01DC' 1903               	skipnz
  8972  01DD' 2800'              	goto	u3901
  8973  01DE' 07A0'              	addwf	___flmul@prod+1,f
  8974  01DF'                    u3901:
  8975  01DF' 0815'              	movf	??___flmul+2,w
  8976  01E0' 1103               	clrz
  8977  01E1' 1803               	skipnc
  8978  01E2' 3E01               	addlw	1
  8979  01E3' 1903               	skipnz
  8980  01E4' 2800'              	goto	u3902
  8981  01E5' 07A1'              	addwf	___flmul@prod+2,f
  8982  01E6'                    u3902:
  8983  01E6' 0816'              	movf	??___flmul+3,w
  8984  01E7' 1103               	clrz
  8985  01E8' 1803               	skipnc
  8986  01E9' 3E01               	addlw	1
  8987  01EA' 1903               	skipnz
  8988  01EB' 2800'              	goto	u3903
  8989  01EC' 07A2'              	addwf	___flmul@prod+3,f
  8990  01ED'                    u3903:
  8991  01ED'                    l2811:
  8992  01ED' 080D'              	movf	___flmul@b+2,w
  8993  01EE' 0093'              	movwf	??___flmul
  8994  01EF' 0813'              	movf	??___flmul,w
  8995  01F0' 0083'              	movwf	__Umul8_16@multiplicand
  8996  01F1' 0810'              	movf	___flmul@a+1,w
  8997  01F2' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  8998  01F7' 0804'              	movf	?__Umul8_16+1,w
  8999  01F8' 1283               	bcf	3,5	;RP0=0, select bank0
  9000  01F9' 1303               	bcf	3,6	;RP1=0, select bank0
  9001  01FA' 00A4'              	movwf	___flmul@temp+1
  9002  01FB' 0803'              	movf	?__Umul8_16,w
  9003  01FC' 00A3'              	movwf	___flmul@temp
  9004  01FD'                    l2813:
  9005  01FD' 0823'              	movf	___flmul@temp,w
  9006  01FE' 0093'              	movwf	??___flmul
  9007  01FF' 0824'              	movf	___flmul@temp+1,w
  9008  0200' 0094'              	movwf	??___flmul+1
  9009  0201' 0195'              	clrf	??___flmul+2
  9010  0202' 0196'              	clrf	??___flmul+3
  9011  0203' 0813'              	movf	??___flmul,w
  9012  0204' 079F'              	addwf	___flmul@prod,f
  9013  0205' 0814'              	movf	??___flmul+1,w
  9014  0206' 1103               	clrz
  9015  0207' 1803               	skipnc
  9016  0208' 3E01               	addlw	1
  9017  0209' 1903               	skipnz
  9018  020A' 2800'              	goto	u3911
  9019  020B' 07A0'              	addwf	___flmul@prod+1,f
  9020  020C'                    u3911:
  9021  020C' 0815'              	movf	??___flmul+2,w
  9022  020D' 1103               	clrz
  9023  020E' 1803               	skipnc
  9024  020F' 3E01               	addlw	1
  9025  0210' 1903               	skipnz
  9026  0211' 2800'              	goto	u3912
  9027  0212' 07A1'              	addwf	___flmul@prod+2,f
  9028  0213'                    u3912:
  9029  0213' 0816'              	movf	??___flmul+3,w
  9030  0214' 1103               	clrz
  9031  0215' 1803               	skipnc
  9032  0216' 3E01               	addlw	1
  9033  0217' 1903               	skipnz
  9034  0218' 2800'              	goto	u3913
  9035  0219' 07A2'              	addwf	___flmul@prod+3,f
  9036  021A'                    u3913:
  9037  021A' 080D'              	movf	___flmul@b+2,w
  9038  021B' 0093'              	movwf	??___flmul
  9039  021C' 0813'              	movf	??___flmul,w
  9040  021D' 0083'              	movwf	__Umul8_16@multiplicand
  9041  021E' 0811'              	movf	___flmul@a+2,w
  9042  021F' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  9043  0224' 0804'              	movf	?__Umul8_16+1,w
  9044  0225' 1283               	bcf	3,5	;RP0=0, select bank0
  9045  0226' 1303               	bcf	3,6	;RP1=0, select bank0
  9046  0227' 00A4'              	movwf	___flmul@temp+1
  9047  0228' 0803'              	movf	?__Umul8_16,w
  9048  0229' 00A3'              	movwf	___flmul@temp
  9049  022A'                    l2815:
  9050  022A' 0823'              	movf	___flmul@temp,w
  9051  022B' 0093'              	movwf	??___flmul
  9052  022C' 0824'              	movf	___flmul@temp+1,w
  9053  022D' 0094'              	movwf	??___flmul+1
  9054  022E' 0195'              	clrf	??___flmul+2
  9055  022F' 0196'              	clrf	??___flmul+3
  9056  0230' 3008               	movlw	8
  9057  0231'                    u3925:
  9058  0231' 1003               	clrc
  9059  0232' 0D93'              	rlf	??___flmul,f
  9060  0233' 0D94'              	rlf	??___flmul+1,f
  9061  0234' 0D95'              	rlf	??___flmul+2,f
  9062  0235' 0D96'              	rlf	??___flmul+3,f
  9063  0236'                    u3920:
  9064  0236' 3EFF               	addlw	-1
  9065  0237' 1D03               	skipz
  9066  0238' 2800'              	goto	u3925
  9067  0239' 0813'              	movf	??___flmul,w
  9068  023A' 079F'              	addwf	___flmul@prod,f
  9069  023B' 0814'              	movf	??___flmul+1,w
  9070  023C' 1103               	clrz
  9071  023D' 1803               	skipnc
  9072  023E' 3E01               	addlw	1
  9073  023F' 1903               	skipnz
  9074  0240' 2800'              	goto	u3931
  9075  0241' 07A0'              	addwf	___flmul@prod+1,f
  9076  0242'                    u3931:
  9077  0242' 0815'              	movf	??___flmul+2,w
  9078  0243' 1103               	clrz
  9079  0244' 1803               	skipnc
  9080  0245' 3E01               	addlw	1
  9081  0246' 1903               	skipnz
  9082  0247' 2800'              	goto	u3932
  9083  0248' 07A1'              	addwf	___flmul@prod+2,f
  9084  0249'                    u3932:
  9085  0249' 0816'              	movf	??___flmul+3,w
  9086  024A' 1103               	clrz
  9087  024B' 1803               	skipnc
  9088  024C' 3E01               	addlw	1
  9089  024D' 1903               	skipnz
  9090  024E' 2800'              	goto	u3933
  9091  024F' 07A2'              	addwf	___flmul@prod+3,f
  9092  0250'                    u3933:
  9093  0250'                    l2817:
  9094  0250' 0819'              	movf	___flmul@grs,w
  9095  0251' 0093'              	movwf	??___flmul
  9096  0252' 081A'              	movf	___flmul@grs+1,w
  9097  0253' 0094'              	movwf	??___flmul+1
  9098  0254' 081B'              	movf	___flmul@grs+2,w
  9099  0255' 0095'              	movwf	??___flmul+2
  9100  0256' 081C'              	movf	___flmul@grs+3,w
  9101  0257' 0096'              	movwf	??___flmul+3
  9102  0258' 3018               	movlw	24
  9103  0259'                    u3945:
  9104  0259' 1003               	clrc
  9105  025A' 0C96'              	rrf	??___flmul+3,f
  9106  025B' 0C95'              	rrf	??___flmul+2,f
  9107  025C' 0C94'              	rrf	??___flmul+1,f
  9108  025D' 0C93'              	rrf	??___flmul,f
  9109  025E'                    u3940:
  9110  025E' 3EFF               	addlw	-1
  9111  025F' 1D03               	skipz
  9112  0260' 2800'              	goto	u3945
  9113  0261' 0813'              	movf	??___flmul,w
  9114  0262' 079F'              	addwf	___flmul@prod,f
  9115  0263' 0814'              	movf	??___flmul+1,w
  9116  0264' 1103               	clrz
  9117  0265' 1803               	skipnc
  9118  0266' 3E01               	addlw	1
  9119  0267' 1903               	skipnz
  9120  0268' 2800'              	goto	u3951
  9121  0269' 07A0'              	addwf	___flmul@prod+1,f
  9122  026A'                    u3951:
  9123  026A' 0815'              	movf	??___flmul+2,w
  9124  026B' 1103               	clrz
  9125  026C' 1803               	skipnc
  9126  026D' 3E01               	addlw	1
  9127  026E' 1903               	skipnz
  9128  026F' 2800'              	goto	u3952
  9129  0270' 07A1'              	addwf	___flmul@prod+2,f
  9130  0271'                    u3952:
  9131  0271' 0816'              	movf	??___flmul+3,w
  9132  0272' 1103               	clrz
  9133  0273' 1803               	skipnc
  9134  0274' 3E01               	addlw	1
  9135  0275' 1903               	skipnz
  9136  0276' 2800'              	goto	u3953
  9137  0277' 07A2'              	addwf	___flmul@prod+3,f
  9138  0278'                    u3953:
  9139  0278'                    l2819:
  9140  0278' 3008               	movlw	8
  9141  0279' 0093'              	movwf	??___flmul
  9142  027A'                    u3965:
  9143  027A' 1003               	clrc
  9144  027B' 0D99'              	rlf	___flmul@grs,f
  9145  027C' 0D9A'              	rlf	___flmul@grs+1,f
  9146  027D' 0D9B'              	rlf	___flmul@grs+2,f
  9147  027E' 0D9C'              	rlf	___flmul@grs+3,f
  9148  027F' 0B93'              	decfsz	??___flmul,f
  9149  0280' 2800'              	goto	u3965
  9150  0281'                    l2821:
  9151  0281' 081E'              	movf	___flmul@bexp,w
  9152  0282' 071D'              	addwf	___flmul@aexp,w
  9153  0283' 0093'              	movwf	??___flmul
  9154  0284' 0194'              	clrf	??___flmul+1
  9155  0285' 0D94'              	rlf	??___flmul+1,f
  9156  0286' 0813'              	movf	??___flmul,w
  9157  0287' 3E82               	addlw	130
  9158  0288' 00A3'              	movwf	___flmul@temp
  9159  0289' 0814'              	movf	??___flmul+1,w
  9160  028A' 1803               	skipnc
  9161  028B' 3E01               	addlw	1
  9162  028C' 3EFF               	addlw	255
  9163  028D' 00A4'              	movwf	___flmul@temp+1
  9164  028E' 2800'              	goto	l2833
  9165  028F'                    l2823:
  9166  028F' 3001               	movlw	1
  9167  0290' 0093'              	movwf	??___flmul
  9168  0291'                    u3975:
  9169  0291' 1003               	clrc
  9170  0292' 0D9F'              	rlf	___flmul@prod,f
  9171  0293' 0DA0'              	rlf	___flmul@prod+1,f
  9172  0294' 0DA1'              	rlf	___flmul@prod+2,f
  9173  0295' 0DA2'              	rlf	___flmul@prod+3,f
  9174  0296' 0B93'              	decfsz	??___flmul,f
  9175  0297' 2800'              	goto	u3975
  9176  0298'                    l2825:
  9177  0298' 1F9C'              	btfss	___flmul@grs+3,7
  9178  0299' 2800'              	goto	u3981
  9179  029A' 2800'              	goto	u3980
  9180  029B'                    u3981:
  9181  029B' 2800'              	goto	l2829
  9182  029C'                    u3980:
  9183  029C'                    l2827:
  9184  029C' 141F'              	bsf	___flmul@prod,0
  9185  029D'                    l2829:
  9186  029D' 3001               	movlw	1
  9187  029E' 0093'              	movwf	??___flmul
  9188  029F'                    u3995:
  9189  029F' 1003               	clrc
  9190  02A0' 0D99'              	rlf	___flmul@grs,f
  9191  02A1' 0D9A'              	rlf	___flmul@grs+1,f
  9192  02A2' 0D9B'              	rlf	___flmul@grs+2,f
  9193  02A3' 0D9C'              	rlf	___flmul@grs+3,f
  9194  02A4' 0B93'              	decfsz	??___flmul,f
  9195  02A5' 2800'              	goto	u3995
  9196  02A6'                    l2831:
  9197  02A6' 30FF               	movlw	255
  9198  02A7' 07A3'              	addwf	___flmul@temp,f
  9199  02A8' 1803               	skipnc
  9200  02A9' 0AA4'              	incf	___flmul@temp+1,f
  9201  02AA' 30FF               	movlw	255
  9202  02AB' 07A4'              	addwf	___flmul@temp+1,f
  9203  02AC'                    l2833:
  9204  02AC' 1FA1'              	btfss	___flmul@prod+2,7
  9205  02AD' 2800'              	goto	u4001
  9206  02AE' 2800'              	goto	u4000
  9207  02AF'                    u4001:
  9208  02AF' 2800'              	goto	l2823
  9209  02B0'                    u4000:
  9210  02B0'                    l2835:
  9211  02B0' 019D'              	clrf	___flmul@aexp
  9212  02B1'                    l2837:
  9213  02B1' 1F9C'              	btfss	___flmul@grs+3,7
  9214  02B2' 2800'              	goto	u4011
  9215  02B3' 2800'              	goto	u4010
  9216  02B4'                    u4011:
  9217  02B4' 2800'              	goto	l2845
  9218  02B5'                    u4010:
  9219  02B5'                    l2839:
  9220  02B5' 30FF               	movlw	255
  9221  02B6' 0519'              	andwf	___flmul@grs,w
  9222  02B7' 0093'              	movwf	??___flmul
  9223  02B8' 30FF               	movlw	255
  9224  02B9' 051A'              	andwf	___flmul@grs+1,w
  9225  02BA' 0094'              	movwf	??___flmul+1
  9226  02BB' 30FF               	movlw	255
  9227  02BC' 051B'              	andwf	___flmul@grs+2,w
  9228  02BD' 0095'              	movwf	??___flmul+2
  9229  02BE' 307F               	movlw	127
  9230  02BF' 051C'              	andwf	___flmul@grs+3,w
  9231  02C0' 0096'              	movwf	??___flmul+3
  9232  02C1' 0816'              	movf	??___flmul+3,w
  9233  02C2' 0415'              	iorwf	??___flmul+2,w
  9234  02C3' 0414'              	iorwf	??___flmul+1,w
  9235  02C4' 0413'              	iorwf	??___flmul,w
  9236  02C5' 1903               	skipnz
  9237  02C6' 2800'              	goto	u4021
  9238  02C7' 2800'              	goto	u4020
  9239  02C8'                    u4021:
  9240  02C8' 2800'              	goto	l851
  9241  02C9'                    u4020:
  9242  02C9'                    l2841:
  9243  02C9' 019D'              	clrf	___flmul@aexp
  9244  02CA' 0A9D'              	incf	___flmul@aexp,f
  9245  02CB' 2800'              	goto	l2845
  9246  02CC'                    l851:
  9247  02CC' 1C1F'              	btfss	___flmul@prod,0
  9248  02CD' 2800'              	goto	u4031
  9249  02CE' 2800'              	goto	u4030
  9250  02CF'                    u4031:
  9251  02CF' 2800'              	goto	l2845
  9252  02D0'                    u4030:
  9253  02D0' 2800'              	goto	l2841
  9254  02D1'                    l2845:
  9255  02D1' 081D'              	movf	___flmul@aexp,w
  9256  02D2' 1903               	btfsc	3,2
  9257  02D3' 2800'              	goto	u4041
  9258  02D4' 2800'              	goto	u4040
  9259  02D5'                    u4041:
  9260  02D5' 2800'              	goto	l2855
  9261  02D6'                    u4040:
  9262  02D6'                    l2847:
  9263  02D6' 3001               	movlw	1
  9264  02D7' 079F'              	addwf	___flmul@prod,f
  9265  02D8' 3000               	movlw	0
  9266  02D9' 1803               	skipnc
  9267  02DA' 3001               	movlw	1
  9268  02DB' 07A0'              	addwf	___flmul@prod+1,f
  9269  02DC' 3000               	movlw	0
  9270  02DD' 1803               	skipnc
  9271  02DE' 3001               	movlw	1
  9272  02DF' 07A1'              	addwf	___flmul@prod+2,f
  9273  02E0' 3000               	movlw	0
  9274  02E1' 1803               	skipnc
  9275  02E2' 3001               	movlw	1
  9276  02E3' 07A2'              	addwf	___flmul@prod+3,f
  9277  02E4'                    l2849:
  9278  02E4' 1C22'              	btfss	___flmul@prod+3,0
  9279  02E5' 2800'              	goto	u4051
  9280  02E6' 2800'              	goto	u4050
  9281  02E7'                    u4051:
  9282  02E7' 2800'              	goto	l2855
  9283  02E8'                    u4050:
  9284  02E8'                    l2851:
  9285  02E8' 081F'              	movf	___flmul@prod,w
  9286  02E9' 0093'              	movwf	??___flmul
  9287  02EA' 0820'              	movf	___flmul@prod+1,w
  9288  02EB' 0094'              	movwf	??___flmul+1
  9289  02EC' 0821'              	movf	___flmul@prod+2,w
  9290  02ED' 0095'              	movwf	??___flmul+2
  9291  02EE' 0822'              	movf	___flmul@prod+3,w
  9292  02EF' 0096'              	movwf	??___flmul+3
  9293  02F0' 3001               	movlw	1
  9294  02F1' 0097'              	movwf	??___flmul+4
  9295  02F2'                    u4065:
  9296  02F2' 0D16'              	rlf	??___flmul+3,w
  9297  02F3' 0C96'              	rrf	??___flmul+3,f
  9298  02F4' 0C95'              	rrf	??___flmul+2,f
  9299  02F5' 0C94'              	rrf	??___flmul+1,f
  9300  02F6' 0C93'              	rrf	??___flmul,f
  9301  02F7'                    u4060:
  9302  02F7' 0B97'              	decfsz	??___flmul+4,f
  9303  02F8' 2800'              	goto	u4065
  9304  02F9' 0816'              	movf	??___flmul+3,w
  9305  02FA' 00A2'              	movwf	___flmul@prod+3
  9306  02FB' 0815'              	movf	??___flmul+2,w
  9307  02FC' 00A1'              	movwf	___flmul@prod+2
  9308  02FD' 0814'              	movf	??___flmul+1,w
  9309  02FE' 00A0'              	movwf	___flmul@prod+1
  9310  02FF' 0813'              	movf	??___flmul,w
  9311  0300' 009F'              	movwf	___flmul@prod
  9312  0301'                    l2853:
  9313  0301' 3001               	movlw	1
  9314  0302' 07A3'              	addwf	___flmul@temp,f
  9315  0303' 1803               	skipnc
  9316  0304' 0AA4'              	incf	___flmul@temp+1,f
  9317  0305' 3000               	movlw	0
  9318  0306' 07A4'              	addwf	___flmul@temp+1,f
  9319  0307'                    l2855:
  9320  0307' 0824'              	movf	___flmul@temp+1,w
  9321  0308' 3A80               	xorlw	128
  9322  0309' 00FF               	movwf	btemp+1
  9323  030A' 3080               	movlw	128
  9324  030B' 027F               	subwf	btemp+1,w
  9325  030C' 1D03               	skipz
  9326  030D' 2800'              	goto	u4075
  9327  030E' 30FF               	movlw	255
  9328  030F' 0223'              	subwf	___flmul@temp,w
  9329  0310'                    u4075:
  9330  0310' 1C03               	skipc
  9331  0311' 2800'              	goto	u4071
  9332  0312' 2800'              	goto	u4070
  9333  0313'                    u4071:
  9334  0313' 2800'              	goto	l2859
  9335  0314'                    u4070:
  9336  0314'                    l2857:
  9337  0314' 307F               	movlw	127
  9338  0315' 1283               	bcf	3,5	;RP0=0, select bank0
  9339  0316' 1303               	bcf	3,6	;RP1=0, select bank0
  9340  0317' 00A2'              	movwf	___flmul@prod+3
  9341  0318' 3080               	movlw	128
  9342  0319' 00A1'              	movwf	___flmul@prod+2
  9343  031A' 3000               	movlw	0
  9344  031B' 00A0'              	movwf	___flmul@prod+1
  9345  031C' 3000               	movlw	0
  9346  031D' 009F'              	movwf	___flmul@prod
  9347  031E' 2800'              	goto	l857
  9348  031F'                    l2859:
  9349  031F' 1283               	bcf	3,5	;RP0=0, select bank0
  9350  0320' 1303               	bcf	3,6	;RP1=0, select bank0
  9351  0321' 0824'              	movf	___flmul@temp+1,w
  9352  0322' 3A80               	xorlw	128
  9353  0323' 00FF               	movwf	btemp+1
  9354  0324' 3080               	movlw	128
  9355  0325' 027F               	subwf	btemp+1,w
  9356  0326' 1D03               	skipz
  9357  0327' 2800'              	goto	u4085
  9358  0328' 3001               	movlw	1
  9359  0329' 0223'              	subwf	___flmul@temp,w
  9360  032A'                    u4085:
  9361  032A' 1803               	skipnc
  9362  032B' 2800'              	goto	u4081
  9363  032C' 2800'              	goto	u4080
  9364  032D'                    u4081:
  9365  032D' 2800'              	goto	l2865
  9366  032E'                    u4080:
  9367  032E'                    l2861:
  9368  032E' 3000               	movlw	0
  9369  032F' 1283               	bcf	3,5	;RP0=0, select bank0
  9370  0330' 1303               	bcf	3,6	;RP1=0, select bank0
  9371  0331' 00A2'              	movwf	___flmul@prod+3
  9372  0332' 3000               	movlw	0
  9373  0333' 00A1'              	movwf	___flmul@prod+2
  9374  0334' 3000               	movlw	0
  9375  0335' 00A0'              	movwf	___flmul@prod+1
  9376  0336' 3000               	movlw	0
  9377  0337' 009F'              	movwf	___flmul@prod
  9378  0338'                    l2863:
  9379  0338' 0198'              	clrf	___flmul@sign
  9380  0339' 2800'              	goto	l857
  9381  033A'                    l2865:
  9382  033A' 1283               	bcf	3,5	;RP0=0, select bank0
  9383  033B' 1303               	bcf	3,6	;RP1=0, select bank0
  9384  033C' 0823'              	movf	___flmul@temp,w
  9385  033D' 0093'              	movwf	??___flmul
  9386  033E' 0813'              	movf	??___flmul,w
  9387  033F' 009E'              	movwf	___flmul@bexp
  9388  0340' 30FF               	movlw	255
  9389  0341' 059F'              	andwf	___flmul@prod,f
  9390  0342' 30FF               	movlw	255
  9391  0343' 05A0'              	andwf	___flmul@prod+1,f
  9392  0344' 307F               	movlw	127
  9393  0345' 05A1'              	andwf	___flmul@prod+2,f
  9394  0346' 3000               	movlw	0
  9395  0347' 05A2'              	andwf	___flmul@prod+3,f
  9396  0348'                    l2867:
  9397  0348' 1C1E'              	btfss	___flmul@bexp,0
  9398  0349' 2800'              	goto	u4091
  9399  034A' 2800'              	goto	u4090
  9400  034B'                    u4091:
  9401  034B' 2800'              	goto	l2871
  9402  034C'                    u4090:
  9403  034C'                    l2869:
  9404  034C' 17A1'              	bsf	___flmul@prod+2,7
  9405  034D'                    l2871:
  9406  034D' 081E'              	movf	___flmul@bexp,w
  9407  034E' 0093'              	movwf	??___flmul
  9408  034F' 1003               	clrc
  9409  0350' 0C13'              	rrf	??___flmul,w
  9410  0351' 0094'              	movwf	??___flmul+1
  9411  0352' 0814'              	movf	??___flmul+1,w
  9412  0353' 00A2'              	movwf	___flmul@prod+3
  9413  0354'                    l857:
  9414  0354' 0818'              	movf	___flmul@sign,w
  9415  0355' 0093'              	movwf	??___flmul
  9416  0356' 0813'              	movf	??___flmul,w
  9417  0357' 04A2'              	iorwf	___flmul@prod+3,f
  9418  0358'                    l2873:
  9419  0358' 0822'              	movf	___flmul@prod+3,w
  9420  0359' 008E'              	movwf	?___flmul+3
  9421  035A' 0821'              	movf	___flmul@prod+2,w
  9422  035B' 008D'              	movwf	?___flmul+2
  9423  035C' 0820'              	movf	___flmul@prod+1,w
  9424  035D' 008C'              	movwf	?___flmul+1
  9425  035E' 081F'              	movf	___flmul@prod,w
  9426  035F' 008B'              	movwf	?___flmul
  9427  0360'                    l845:
  9428  0360' 0008               	return
  9429  0361'                    __end_of___flmul:
  9430                           
  9431                           	psect	text30
  9432  0000'                    __ptext30:	
  9433 ;; *************** function __Umul8_16 *****************
  9434 ;; Defined at:
  9435 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;  multiplier      1    wreg     unsigned char 
  9438 ;;  multiplicand    1    3[COMMON] unsigned char 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9441 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  9442 ;;  product         2    0[BANK0 ] unsigned int 
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  2    3[COMMON] unsigned int 
  9445 ;; Registers used:
  9446 ;;		wreg, status,2, status,0
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9452 ;;      Params:         2       0       0       0       0
  9453 ;;      Locals:         0       5       0       0       0
  9454 ;;      Temps:          2       0       0       0       0
  9455 ;;      Totals:         4       5       0       0       0
  9456 ;;Total ram usage:        9 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:    1
  9459 ;; This function calls:
  9460 ;;		Nothing
  9461 ;; This function is called by:
  9462 ;;		___flmul
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           
  9467                           ;psect for function __Umul8_16
  9468  0000'                    __Umul8_16:
  9469                           
  9470                           ;incstack = 0
  9471                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9472                           ;__Umul8_16@multiplier stored from wreg
  9473  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9474  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9475  0002' 0084'              	movwf	__Umul8_16@multiplier
  9476  0003'                    l2397:
  9477  0003' 0180'              	clrf	__Umul8_16@product
  9478  0004' 0181'              	clrf	__Umul8_16@product+1
  9479  0005'                    l2399:
  9480  0005' 0803'              	movf	__Umul8_16@multiplicand,w
  9481  0006' 0085'              	movwf	??__Umul8_16
  9482  0007' 0186'              	clrf	??__Umul8_16+1
  9483  0008' 0805'              	movf	??__Umul8_16,w
  9484  0009' 0082'              	movwf	__Umul8_16@word_mpld
  9485  000A' 0806'              	movf	??__Umul8_16+1,w
  9486  000B' 0083'              	movwf	__Umul8_16@word_mpld+1
  9487  000C'                    l2401:
  9488  000C' 1C04'              	btfss	__Umul8_16@multiplier,0
  9489  000D' 2800'              	goto	u2921
  9490  000E' 2800'              	goto	u2920
  9491  000F'                    u2921:
  9492  000F' 2800'              	goto	l864
  9493  0010'                    u2920:
  9494  0010'                    l2403:
  9495  0010' 0802'              	movf	__Umul8_16@word_mpld,w
  9496  0011' 0780'              	addwf	__Umul8_16@product,f
  9497  0012' 1803               	skipnc
  9498  0013' 0A81'              	incf	__Umul8_16@product+1,f
  9499  0014' 0803'              	movf	__Umul8_16@word_mpld+1,w
  9500  0015' 0781'              	addwf	__Umul8_16@product+1,f
  9501  0016'                    l864:
  9502  0016' 3001               	movlw	1
  9503  0017'                    u2935:
  9504  0017' 1003               	clrc
  9505  0018' 0D82'              	rlf	__Umul8_16@word_mpld,f
  9506  0019' 0D83'              	rlf	__Umul8_16@word_mpld+1,f
  9507  001A' 3EFF               	addlw	-1
  9508  001B' 1D03               	skipz
  9509  001C' 2800'              	goto	u2935
  9510  001D' 1003               	clrc
  9511  001E' 0C84'              	rrf	__Umul8_16@multiplier,f
  9512  001F'                    l2405:
  9513  001F' 0804'              	movf	__Umul8_16@multiplier,w
  9514  0020' 1D03               	btfss	3,2
  9515  0021' 2800'              	goto	u2941
  9516  0022' 2800'              	goto	u2940
  9517  0023'                    u2941:
  9518  0023' 2800'              	goto	l2401
  9519  0024'                    u2940:
  9520  0024'                    l2407:
  9521  0024' 0801'              	movf	__Umul8_16@product+1,w
  9522  0025' 0084'              	movwf	?__Umul8_16+1
  9523  0026' 0800'              	movf	__Umul8_16@product,w
  9524  0027' 0083'              	movwf	?__Umul8_16
  9525  0028'                    l866:
  9526  0028' 0008               	return
  9527  0029'                    __end_of__Umul8_16:
  9528                           
  9529                           	psect	text31
  9530  0000'                    __ptext31:	
  9531 ;; *************** function _Lcd_Write_String *****************
  9532 ;; Defined at:
  9533 ;;		line 67 in file "LCD.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;  a               2    6[COMMON] PTR unsigned char 
  9536 ;;		 -> STR_4(4), s(50), STR_1(17), 
  9537 ;; Auto vars:     Size  Location     Type
  9538 ;;  i               2    3[BANK0 ] int 
  9539 ;; Return value:  Size  Location     Type
  9540 ;;                  1    wreg      void 
  9541 ;; Registers used:
  9542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9543 ;; Tracked objects:
  9544 ;;		On entry : 0/0
  9545 ;;		On exit  : 0/0
  9546 ;;		Unchanged: 0/0
  9547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9548 ;;      Params:         2       0       0       0       0
  9549 ;;      Locals:         0       2       0       0       0
  9550 ;;      Temps:          0       3       0       0       0
  9551 ;;      Totals:         2       5       0       0       0
  9552 ;;Total ram usage:        7 bytes
  9553 ;; Hardware stack levels used:    1
  9554 ;; Hardware stack levels required when called:    3
  9555 ;; This function calls:
  9556 ;;		_Lcd_Write_Char
  9557 ;; This function is called by:
  9558 ;;		_main
  9559 ;; This function uses a non-reentrant model
  9560 ;;
  9561                           
  9562                           
  9563                           ;psect for function _Lcd_Write_String
  9564  0000'                    _Lcd_Write_String:
  9565  0000'                    l4257:	
  9566                           ;incstack = 0
  9567                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9568                           
  9569                           
  9570                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  9571  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9572  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9573  0002' 0183'              	clrf	Lcd_Write_String@i
  9574  0003' 0184'              	clrf	Lcd_Write_String@i+1
  9575  0004' 2800'              	goto	l4263
  9576  0005'                    l4259:
  9577                           
  9578                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  9579  0005' 0803'              	movf	Lcd_Write_String@i,w
  9580  0006' 0706'              	addwf	Lcd_Write_String@a,w
  9581  0007' 0081'              	movwf	??_Lcd_Write_String+1
  9582  0008' 0807'              	movf	Lcd_Write_String@a+1,w
  9583  0009' 0080'              	movwf	??_Lcd_Write_String
  9584  000A' 1803               	skipnc
  9585  000B' 0A80'              	incf	??_Lcd_Write_String,f
  9586  000C' 1F83'              	btfss	Lcd_Write_String@i,7
  9587  000D' 2800'              	goto	u7040
  9588  000E' 0380'              	decf	??_Lcd_Write_String,f
  9589  000F'                    u7040:
  9590  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  9591  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  9592  0011' 0800'              	movf	??_Lcd_Write_String,w
  9593  0012' 0082'              	movwf	??_Lcd_Write_String+2
  9594  0013' 0802'              	movf	??_Lcd_Write_String+2,w
  9595  0014' 00FF               	movwf	btemp+1
  9596  0015' 0801'              	movf	??_Lcd_Write_String+1,w
  9597  0016' 0084               	movwf	4
  9598  0017' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9599  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  9600  0021'                    l4261:
  9601  0021' 3001               	movlw	1
  9602  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  9603  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  9604  0024' 0783'              	addwf	Lcd_Write_String@i,f
  9605  0025' 1803               	skipnc
  9606  0026' 0A84'              	incf	Lcd_Write_String@i+1,f
  9607  0027' 3000               	movlw	0
  9608  0028' 0784'              	addwf	Lcd_Write_String@i+1,f
  9609  0029'                    l4263:
  9610  0029' 0803'              	movf	Lcd_Write_String@i,w
  9611  002A' 0706'              	addwf	Lcd_Write_String@a,w
  9612  002B' 0081'              	movwf	??_Lcd_Write_String+1
  9613  002C' 0807'              	movf	Lcd_Write_String@a+1,w
  9614  002D' 0080'              	movwf	??_Lcd_Write_String
  9615  002E' 1803               	skipnc
  9616  002F' 0A80'              	incf	??_Lcd_Write_String,f
  9617  0030' 1F83'              	btfss	Lcd_Write_String@i,7
  9618  0031' 2800'              	goto	u7050
  9619  0032' 0380'              	decf	??_Lcd_Write_String,f
  9620  0033'                    u7050:
  9621  0033' 1283               	bcf	3,5	;RP0=0, select bank0
  9622  0034' 1303               	bcf	3,6	;RP1=0, select bank0
  9623  0035' 0800'              	movf	??_Lcd_Write_String,w
  9624  0036' 0082'              	movwf	??_Lcd_Write_String+2
  9625  0037' 0802'              	movf	??_Lcd_Write_String+2,w
  9626  0038' 00FF               	movwf	btemp+1
  9627  0039' 0801'              	movf	??_Lcd_Write_String+1,w
  9628  003A' 0084               	movwf	4
  9629  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9630  0040' 3A00               	xorlw	0
  9631  0041' 1D03               	skipz
  9632  0042' 2800'              	goto	u7061
  9633  0043' 2800'              	goto	u7060
  9634  0044'                    u7061:
  9635  0044' 2800'              	goto	l4259
  9636  0045'                    u7060:
  9637  0045'                    l143:
  9638  0045' 0008               	return
  9639  0046'                    __end_of_Lcd_Write_String:
  9640                           
  9641                           	psect	text32
  9642  0000'                    __ptext32:	
  9643 ;; *************** function _Lcd_Write_Char *****************
  9644 ;; Defined at:
  9645 ;;		line 58 in file "LCD.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  a               1    wreg     unsigned char 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  a               1    5[COMMON] unsigned char 
  9650 ;; Return value:  Size  Location     Type
  9651 ;;                  1    wreg      void 
  9652 ;; Registers used:
  9653 ;;		wreg, status,2, status,0, pclath, cstack
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9659 ;;      Params:         0       0       0       0       0
  9660 ;;      Locals:         1       0       0       0       0
  9661 ;;      Temps:          1       0       0       0       0
  9662 ;;      Totals:         2       0       0       0       0
  9663 ;;Total ram usage:        2 bytes
  9664 ;; Hardware stack levels used:    1
  9665 ;; Hardware stack levels required when called:    2
  9666 ;; This function calls:
  9667 ;;		_Lcd_Port
  9668 ;; This function is called by:
  9669 ;;		_Lcd_Write_String
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           
  9674                           ;psect for function _Lcd_Write_Char
  9675  0000'                    _Lcd_Write_Char:
  9676                           
  9677                           ;incstack = 0
  9678                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9679                           ;Lcd_Write_Char@a stored from wreg
  9680  0000' 0085'              	movwf	Lcd_Write_Char@a
  9681  0001'                    l3925:
  9682                           
  9683                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  9684  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  9685  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  9686  0003' 1409               	bsf	9,0	;volatile
  9687  0004'                    l3927:
  9688                           
  9689                           ;LCD.c: 60:     Lcd_Port(a);
  9690  0004' 0805'              	movf	Lcd_Write_Char@a,w
  9691  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  9692  000A'                    l3929:
  9693                           
  9694                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
  9695  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  9696  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  9697  000C' 1489               	bsf	9,1	;volatile
  9698  000D'                    l3931:
  9699                           
  9700                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9701  000D' 301A               	movlw	26
  9702  000E' 0084'              	movwf	??_Lcd_Write_Char
  9703  000F'                    u7737:
  9704  000F' 0B84'              	decfsz	??_Lcd_Write_Char,f
  9705  0010' 2800'              	goto	u7737
  9706  0011' 0000               	nop
  9707  0012'                    l3933:
  9708                           
  9709                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
  9710  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  9711  0013' 1303               	bcf	3,6	;RP1=0, select bank0
  9712  0014' 1089               	bcf	9,1	;volatile
  9713  0015'                    l3935:
  9714                           
  9715                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9716  0015' 301A               	movlw	26
  9717  0016' 0084'              	movwf	??_Lcd_Write_Char
  9718  0017'                    u7747:
  9719  0017' 0B84'              	decfsz	??_Lcd_Write_Char,f
  9720  0018' 2800'              	goto	u7747
  9721  0019' 0000               	nop
  9722  001A'                    l137:
  9723  001A' 0008               	return
  9724  001B'                    __end_of_Lcd_Write_Char:
  9725                           
  9726                           	psect	text33
  9727  0000'                    __ptext33:	
  9728 ;; *************** function _Lcd_Set_Cursor *****************
  9729 ;; Defined at:
  9730 ;;		line 33 in file "LCD.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  a               1    wreg     unsigned char 
  9733 ;;  b               1    7[COMMON] unsigned char 
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;  a               1    1[BANK0 ] unsigned char 
  9736 ;;  temp            1    2[BANK0 ] unsigned char 
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2, status,0, pclath, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9746 ;;      Params:         1       0       0       0       0
  9747 ;;      Locals:         0       2       0       0       0
  9748 ;;      Temps:          0       1       0       0       0
  9749 ;;      Totals:         1       3       0       0       0
  9750 ;;Total ram usage:        4 bytes
  9751 ;; Hardware stack levels used:    1
  9752 ;; Hardware stack levels required when called:    3
  9753 ;; This function calls:
  9754 ;;		_Lcd_Cmd
  9755 ;; This function is called by:
  9756 ;;		_main
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           
  9761                           ;psect for function _Lcd_Set_Cursor
  9762  0000'                    _Lcd_Set_Cursor:
  9763                           
  9764                           ;incstack = 0
  9765                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9766                           ;Lcd_Set_Cursor@a stored from wreg
  9767  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9768  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9769  0002' 0081'              	movwf	Lcd_Set_Cursor@a
  9770  0003'                    l4245:
  9771                           
  9772                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
  9773  0003' 0301'              	decf	Lcd_Set_Cursor@a,w
  9774  0004' 1D03               	btfss	3,2
  9775  0005' 2800'              	goto	u7021
  9776  0006' 2800'              	goto	u7020
  9777  0007'                    u7021:
  9778  0007' 2800'              	goto	l4251
  9779  0008'                    u7020:
  9780  0008'                    l4247:
  9781                           
  9782                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  9783  0008' 0807'              	movf	Lcd_Set_Cursor@b,w
  9784  0009' 3E7F               	addlw	127
  9785  000A' 0080'              	movwf	??_Lcd_Set_Cursor
  9786  000B' 0800'              	movf	??_Lcd_Set_Cursor,w
  9787  000C' 0082'              	movwf	Lcd_Set_Cursor@temp
  9788  000D'                    l4249:
  9789                           
  9790                           ;LCD.c: 37:         Lcd_Cmd(temp);
  9791  000D' 0802'              	movf	Lcd_Set_Cursor@temp,w
  9792  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9793                           
  9794                           ;LCD.c: 38:     } else if (a == 2) {
  9795  0013' 2800'              	goto	l131
  9796  0014'                    l4251:
  9797  0014' 3002               	movlw	2
  9798  0015' 0601'              	xorwf	Lcd_Set_Cursor@a,w
  9799  0016' 1D03               	btfss	3,2
  9800  0017' 2800'              	goto	u7031
  9801  0018' 2800'              	goto	u7030
  9802  0019'                    u7031:
  9803  0019' 2800'              	goto	l131
  9804  001A'                    u7030:
  9805  001A'                    l4253:
  9806                           
  9807                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  9808  001A' 0807'              	movf	Lcd_Set_Cursor@b,w
  9809  001B' 3EBF               	addlw	191
  9810  001C' 0080'              	movwf	??_Lcd_Set_Cursor
  9811  001D' 0800'              	movf	??_Lcd_Set_Cursor,w
  9812  001E' 0082'              	movwf	Lcd_Set_Cursor@temp
  9813  001F'                    l4255:
  9814                           
  9815                           ;LCD.c: 40:         Lcd_Cmd(temp);
  9816  001F' 0802'              	movf	Lcd_Set_Cursor@temp,w
  9817  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9818  0025'                    l131:
  9819  0025' 0008               	return
  9820  0026'                    __end_of_Lcd_Set_Cursor:
  9821                           
  9822                           	psect	text34
  9823  0000'                    __ptext34:	
  9824 ;; *************** function _Lcd_Init *****************
  9825 ;; Defined at:
  9826 ;;		line 44 in file "LCD.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;		None
  9829 ;; Auto vars:     Size  Location     Type
  9830 ;;		None
  9831 ;; Return value:  Size  Location     Type
  9832 ;;                  1    wreg      void 
  9833 ;; Registers used:
  9834 ;;		wreg, status,2, status,0, pclath, cstack
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9840 ;;      Params:         0       0       0       0       0
  9841 ;;      Locals:         0       0       0       0       0
  9842 ;;      Temps:          0       2       0       0       0
  9843 ;;      Totals:         0       2       0       0       0
  9844 ;;Total ram usage:        2 bytes
  9845 ;; Hardware stack levels used:    1
  9846 ;; Hardware stack levels required when called:    3
  9847 ;; This function calls:
  9848 ;;		_Lcd_Cmd
  9849 ;;		_Lcd_Port
  9850 ;; This function is called by:
  9851 ;;		_main
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           
  9856                           ;psect for function _Lcd_Init
  9857  0000'                    _Lcd_Init:
  9858  0000'                    l4233:	
  9859                           ;incstack = 0
  9860                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9861                           
  9862                           
  9863                           ;LCD.c: 45:     Lcd_Port(0x00);
  9864  0000' 3000               	movlw	0
  9865  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  9866  0006'                    l4235:
  9867                           
  9868                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9869  0006' 3034               	movlw	52
  9870  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  9871  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  9872  0009' 0081'              	movwf	??_Lcd_Init+1
  9873  000A' 30F1               	movlw	241
  9874  000B' 0080'              	movwf	??_Lcd_Init
  9875  000C'                    u7757:
  9876  000C' 0B80'              	decfsz	??_Lcd_Init,f
  9877  000D' 2800'              	goto	u7757
  9878  000E' 0B81'              	decfsz	??_Lcd_Init+1,f
  9879  000F' 2800'              	goto	u7757
  9880  0010'                    l4237:
  9881                           
  9882                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
  9883  0010' 303F               	movlw	63
  9884  0011' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9885                           
  9886                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9887  0016' 301A               	movlw	26
  9888  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  9889  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  9890  0019' 0081'              	movwf	??_Lcd_Init+1
  9891  001A' 30F7               	movlw	247
  9892  001B' 0080'              	movwf	??_Lcd_Init
  9893  001C'                    u7767:
  9894  001C' 0B80'              	decfsz	??_Lcd_Init,f
  9895  001D' 2800'              	goto	u7767
  9896  001E' 0B81'              	decfsz	??_Lcd_Init+1,f
  9897  001F' 2800'              	goto	u7767
  9898  0020' 2800'              	nop2
  9899  0021'                    l4239:
  9900                           
  9901                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  9902  0021' 303F               	movlw	63
  9903  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9904  0027'                    l4241:
  9905                           
  9906                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9907  0027' 3084               	movlw	132
  9908  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  9909  0029' 1303               	bcf	3,6	;RP1=0, select bank0
  9910  002A' 0080'              	movwf	??_Lcd_Init
  9911  002B'                    u7777:
  9912  002B' 0B80'              	decfsz	??_Lcd_Init,f
  9913  002C' 2800'              	goto	u7777
  9914  002D' 0000               	nop
  9915                           
  9916                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  9917  002E' 303F               	movlw	63
  9918  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9919                           
  9920                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  9921  0034' 3038               	movlw	56
  9922  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9923                           
  9924                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  9925  003A' 300C               	movlw	12
  9926  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9927                           
  9928                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  9929  0040' 3006               	movlw	6
  9930  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9931  0046'                    l134:
  9932  0046' 0008               	return
  9933  0047'                    __end_of_Lcd_Init:
  9934                           
  9935                           	psect	text35
  9936  0000'                    __ptext35:	
  9937 ;; *************** function _Lcd_Clear *****************
  9938 ;; Defined at:
  9939 ;;		line 28 in file "LCD.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;		None
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;		None
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  1    wreg      void 
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0, pclath, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9953 ;;      Params:         0       0       0       0       0
  9954 ;;      Locals:         0       0       0       0       0
  9955 ;;      Temps:          0       0       0       0       0
  9956 ;;      Totals:         0       0       0       0       0
  9957 ;;Total ram usage:        0 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    3
  9960 ;; This function calls:
  9961 ;;		_Lcd_Cmd
  9962 ;; This function is called by:
  9963 ;;		_main
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           
  9968                           ;psect for function _Lcd_Clear
  9969  0000'                    _Lcd_Clear:
  9970  0000'                    l4243:	
  9971                           ;incstack = 0
  9972                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9973                           
  9974                           
  9975                           ;LCD.c: 29:     Lcd_Cmd(0);
  9976  0000' 3000               	movlw	0
  9977  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9978                           
  9979                           ;LCD.c: 30:     Lcd_Cmd(1);
  9980  0006' 3001               	movlw	1
  9981  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  9982  000C'                    l125:
  9983  000C' 0008               	return
  9984  000D'                    __end_of_Lcd_Clear:
  9985                           
  9986                           	psect	text36
  9987  0000'                    __ptext36:	
  9988 ;; *************** function _Lcd_Cmd *****************
  9989 ;; Defined at:
  9990 ;;		line 20 in file "LCD.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  a               1    wreg     unsigned char 
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  a               1    6[COMMON] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  1    wreg      void 
  9997 ;; Registers used:
  9998 ;;		wreg, status,2, status,0, pclath, cstack
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10004 ;;      Params:         0       0       0       0       0
 10005 ;;      Locals:         1       0       0       0       0
 10006 ;;      Temps:          2       0       0       0       0
 10007 ;;      Totals:         3       0       0       0       0
 10008 ;;Total ram usage:        3 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:    2
 10011 ;; This function calls:
 10012 ;;		_Lcd_Port
 10013 ;; This function is called by:
 10014 ;;		_Lcd_Clear
 10015 ;;		_Lcd_Set_Cursor
 10016 ;;		_Lcd_Init
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           
 10021                           ;psect for function _Lcd_Cmd
 10022  0000'                    _Lcd_Cmd:
 10023                           
 10024                           ;incstack = 0
 10025                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10026                           ;Lcd_Cmd@a stored from wreg
 10027  0000' 0086'              	movwf	Lcd_Cmd@a
 10028  0001'                    l3915:
 10029                           
 10030                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
 10031  0001' 1283               	bcf	3,5	;RP0=0, select bank0
 10032  0002' 1303               	bcf	3,6	;RP1=0, select bank0
 10033  0003' 1009               	bcf	9,0	;volatile
 10034  0004'                    l3917:
 10035                           
 10036                           ;LCD.c: 22:     Lcd_Port(a);
 10037  0004' 0806'              	movf	Lcd_Cmd@a,w
 10038  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
 10039  000A'                    l3919:
 10040                           
 10041                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
 10042  000A' 1283               	bcf	3,5	;RP0=0, select bank0
 10043  000B' 1303               	bcf	3,6	;RP1=0, select bank0
 10044  000C' 1489               	bsf	9,1	;volatile
 10045  000D'                    l3921:
 10046                           
 10047                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10048  000D' 300B               	movlw	11
 10049  000E' 0085'              	movwf	??_Lcd_Cmd+1
 10050  000F' 3062               	movlw	98
 10051  0010' 0084'              	movwf	??_Lcd_Cmd
 10052  0011'                    u7787:
 10053  0011' 0B84'              	decfsz	??_Lcd_Cmd,f
 10054  0012' 2800'              	goto	u7787
 10055  0013' 0B85'              	decfsz	??_Lcd_Cmd+1,f
 10056  0014' 2800'              	goto	u7787
 10057  0015' 0000               	nop
 10058  0016'                    l3923:
 10059                           
 10060                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
 10061  0016' 1283               	bcf	3,5	;RP0=0, select bank0
 10062  0017' 1303               	bcf	3,6	;RP1=0, select bank0
 10063  0018' 1089               	bcf	9,1	;volatile
 10064  0019'                    l122:
 10065  0019' 0008               	return
 10066  001A'                    __end_of_Lcd_Cmd:
 10067                           
 10068                           	psect	text37
 10069  0000'                    __ptext37:	
 10070 ;; *************** function _Lcd_Port *****************
 10071 ;; Defined at:
 10072 ;;		line 16 in file "LCD.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;  a               1    wreg     unsigned char 
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;  a               1    3[COMMON] unsigned char 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      void 
 10079 ;; Registers used:
 10080 ;;		wreg
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10086 ;;      Params:         0       0       0       0       0
 10087 ;;      Locals:         1       0       0       0       0
 10088 ;;      Temps:          0       0       0       0       0
 10089 ;;      Totals:         1       0       0       0       0
 10090 ;;Total ram usage:        1 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    1
 10093 ;; This function calls:
 10094 ;;		Nothing
 10095 ;; This function is called by:
 10096 ;;		_Lcd_Cmd
 10097 ;;		_Lcd_Init
 10098 ;;		_Lcd_Write_Char
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           
 10103                           ;psect for function _Lcd_Port
 10104  0000'                    _Lcd_Port:
 10105                           
 10106                           ;incstack = 0
 10107                           ; Regs used in _Lcd_Port: [wreg]
 10108                           ;Lcd_Port@a stored from wreg
 10109  0000' 0083'              	movwf	Lcd_Port@a
 10110  0001'                    l3783:
 10111                           
 10112                           ;LCD.c: 17:     PORTD = a;
 10113  0001' 0803'              	movf	Lcd_Port@a,w
 10114  0002' 1283               	bcf	3,5	;RP0=0, select bank0
 10115  0003' 1303               	bcf	3,6	;RP1=0, select bank0
 10116  0004' 0088               	movwf	8	;volatile
 10117  0005'                    l119:
 10118  0005' 0008               	return
 10119  0006'                    __end_of_Lcd_Port:
 10120                           
 10121                           	psect	text38
 10122  0000'                    __ptext38:	
 10123 ;; *************** function _Config_USARTT *****************
 10124 ;; Defined at:
 10125 ;;		line 11 in file "USART.c"
 10126 ;; Parameters:    Size  Location     Type
 10127 ;;		None
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;		None
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10139 ;;      Params:         0       0       0       0       0
 10140 ;;      Locals:         0       0       0       0       0
 10141 ;;      Temps:          0       0       0       0       0
 10142 ;;      Totals:         0       0       0       0       0
 10143 ;;Total ram usage:        0 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    1
 10146 ;; This function calls:
 10147 ;;		Nothing
 10148 ;; This function is called by:
 10149 ;;		_main
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152                           
 10153                           
 10154                           ;psect for function _Config_USARTT
 10155  0000'                    _Config_USARTT:
 10156  0000'                    l3289:	
 10157                           ;incstack = 0
 10158                           ; Regs used in _Config_USARTT: [wreg]
 10159                           
 10160                           
 10161                           ;USART.c: 12:     TXSTAbits.SYNC = 0;
 10162  0000' 1683               	bsf	3,5	;RP0=1, select bank1
 10163  0001' 1303               	bcf	3,6	;RP1=0, select bank1
 10164  0002' 1218               	bcf	24,4	;volatile
 10165                           
 10166                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
 10167  0003' 1698               	bsf	24,5	;volatile
 10168                           
 10169                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
 10170  0004' 1118               	bcf	24,2	;volatile
 10171                           
 10172                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
 10173  0005' 1683               	bsf	3,5	;RP0=1, select bank3
 10174  0006' 1703               	bsf	3,6	;RP1=1, select bank3
 10175  0007' 1587               	bsf	7,3	;volatile
 10176  0008'                    l3291:
 10177                           
 10178                           ;USART.c: 16:     SPBRG = 25;
 10179  0008' 3019               	movlw	25
 10180  0009' 1683               	bsf	3,5	;RP0=1, select bank1
 10181  000A' 1303               	bcf	3,6	;RP1=0, select bank1
 10182  000B' 0099               	movwf	25	;volatile
 10183  000C'                    l3293:
 10184                           
 10185                           ;USART.c: 17:     RCSTAbits.SPEN = 1;
 10186  000C' 1283               	bcf	3,5	;RP0=0, select bank0
 10187  000D' 1303               	bcf	3,6	;RP1=0, select bank0
 10188  000E' 1798               	bsf	24,7	;volatile
 10189  000F'                    l3295:
 10190                           
 10191                           ;USART.c: 18:     INTCONbits.GIE = 1;
 10192  000F' 178B               	bsf	11,7	;volatile
 10193  0010'                    l162:
 10194  0010' 0008               	return
 10195  0011'                    __end_of_Config_USARTT:
 10196                           
 10197                           	psect	text39
 10198  0000'                    __ptext39:	
 10199 ;; *************** function _ISR *****************
 10200 ;; Defined at:
 10201 ;;		line 223 in file "main.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;		None
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;		None
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  1    wreg      void 
 10208 ;; Registers used:
 10209 ;;		wreg
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10215 ;;      Params:         0       0       0       0       0
 10216 ;;      Locals:         0       0       0       0       0
 10217 ;;      Temps:          3       0       0       0       0
 10218 ;;      Totals:         3       0       0       0       0
 10219 ;;Total ram usage:        3 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; This function calls:
 10222 ;;		Nothing
 10223 ;; This function is called by:
 10224 ;;		Interrupt level 1
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           
 10229                           ;psect for function _ISR
 10230  0000'                    _ISR:
 10231  0000'                    i1l3735:
 10232                           
 10233                           ;main.c: 224:     if (PIR1bits.RCIF == 1) {
 10234  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10235  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10236  0002' 1E8C               	btfss	12,5	;volatile
 10237  0003' 2800'              	goto	u576_21
 10238  0004' 2800'              	goto	u576_20
 10239  0005'                    u576_21:
 10240  0005' 2800'              	goto	i1l110
 10241  0006'                    u576_20:
 10242  0006'                    i1l3737:
 10243                           
 10244                           ;main.c: 225:         if (RCSTAbits.OERR == 1) {
 10245  0006' 1C98               	btfss	24,1	;volatile
 10246  0007' 2800'              	goto	u577_21
 10247  0008' 2800'              	goto	u577_20
 10248  0009'                    u577_21:
 10249  0009' 2800'              	goto	i1l3743
 10250  000A'                    u577_20:
 10251  000A'                    i1l3739:
 10252                           
 10253                           ;main.c: 226:             RCSTAbits.CREN = 0;
 10254  000A' 1218               	bcf	24,4	;volatile
 10255  000B'                    i1l3741:
 10256                           
 10257                           ;main.c: 227:             _delay((unsigned long)((300)*(8000000/4000000.0)));
 10258  000B' 30C7               	movlw	199
 10259  000C' 0080'              	movwf	??_ISR
 10260  000D'                    u779_27:
 10261  000D' 0B80'              	decfsz	??_ISR,f
 10262  000E' 2800'              	goto	u779_27
 10263  000F' 2800'              	nop2
 10264                           
 10265                           ;main.c: 228:         } else {
 10266  0010' 2800'              	goto	i1l110
 10267  0011'                    i1l3743:
 10268                           
 10269                           ;main.c: 229:             recibido = RCREG;
 10270  0011' 081A               	movf	26,w	;volatile
 10271  0012' 0080'              	movwf	??_ISR
 10272  0013' 0800'              	movf	??_ISR,w
 10273  0014' 1683               	bsf	3,5	;RP0=1, select bank1
 10274  0015' 1303               	bcf	3,6	;RP1=0, select bank1
 10275  0016' 0080'              	movwf	_recibido^(0+128)
 10276  0017'                    i1l110:
 10277  0017' 0802'              	movf	??_ISR+2,w
 10278  0018' 008A               	movwf	10
 10279  0019' 0E01'              	swapf	??_ISR+1,w
 10280  001A' 0083               	movwf	3
 10281  001B' 0EFE               	swapf	btemp,f
 10282  001C' 0E7E               	swapf	btemp,w
 10283  001D' 0009               	retfie
 10284  001E'                    __end_of_ISR:
 10285  007E                     btemp	set	126	;btemp
 10286  007E                     wtemp0	set	126
 10287                           
 10288                           	psect	intentry
 10289  0000'                    __pintentry:	
 10290                           ;incstack = 0
 10291                           ; Regs used in _ISR: [wreg]
 10292                           
 10293  0000'                    interrupt_function:
 10294  007E                     saved_w	set	btemp
 10295  0000' 00FE               	movwf	btemp
 10296  0001' 0E03               	swapf	3,w
 10297  0002' 0081'              	movwf	??_ISR+1
 10298  0003' 080A               	movf	10,w
 10299  0004' 0082'              	movwf	??_ISR+2
 10300  0005' 120A' 118A' 2800'  	ljmp	_ISR
 10301                           
 10302                           	psect	config
 10303                           
 10304                           ;Config register CONFIG1 @ 0x2007
 10305                           ;	Oscillator Selection bits
 10306                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
 10307                           ;	Watchdog Timer Enable bit
 10308                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10309                           ;	Power-up Timer Enable bit
 10310                           ;	PWRTE = OFF, PWRT disabled
 10311                           ;	RE3/MCLR pin function select bit
 10312                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10313                           ;	Code Protection bit
 10314                           ;	CP = OFF, Program memory code protection is disabled
 10315                           ;	Data Code Protection bit
 10316                           ;	CPD = OFF, Data memory code protection is disabled
 10317                           ;	Brown Out Reset Selection bits
 10318                           ;	BOREN = OFF, BOR disabled
 10319                           ;	Internal External Switchover bit
 10320                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10321                           ;	Fail-Safe Clock Monitor Enabled bit
 10322                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10323                           ;	Low Voltage Programming Enable bit
 10324                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10325                           ;	In-Circuit Debugger Mode bit
 10326                           ;	DEBUG = 0x1, unprogrammed default
 10327  2007                     	org	8199
 10328  2007  20D5               	dw	8405
 10329                           
 10330                           ;Config register CONFIG2 @ 0x2008
 10331                           ;	Brown-out Reset Selection bit
 10332                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10333                           ;	Flash Program Memory Self Write Enable bits
 10334                           ;	WRT = OFF, Write protection off
 10335  2008                     	org	8200
 10336  2008  3FFF               	dw	16383
 10337                           
 10338                           	psect	text1_split_1
 10339  0000'                    u7200:
 10340  0000'                    l4367:
 10341  0000' 1683               	bsf	3,5	;RP0=1, select bank1
 10342  0001' 1303               	bcf	3,6	;RP1=0, select bank1
 10343  0002' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10344  0003' 1283               	bcf	3,5	;RP0=0, select bank0
 10345  0004' 1303               	bcf	3,6	;RP1=0, select bank0
 10346  0005' 0083'              	movwf	___fleq@ff1+3
 10347  0006' 1683               	bsf	3,5	;RP0=1, select bank1
 10348  0007' 1303               	bcf	3,6	;RP1=0, select bank1
 10349  0008' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10350  0009' 1283               	bcf	3,5	;RP0=0, select bank0
 10351  000A' 1303               	bcf	3,6	;RP1=0, select bank0
 10352  000B' 0082'              	movwf	___fleq@ff1+2
 10353  000C' 1683               	bsf	3,5	;RP0=1, select bank1
 10354  000D' 1303               	bcf	3,6	;RP1=0, select bank1
 10355  000E' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10356  000F' 1283               	bcf	3,5	;RP0=0, select bank0
 10357  0010' 1303               	bcf	3,6	;RP1=0, select bank0
 10358  0011' 0081'              	movwf	___fleq@ff1+1
 10359  0012' 1683               	bsf	3,5	;RP0=1, select bank1
 10360  0013' 1303               	bcf	3,6	;RP1=0, select bank1
 10361  0014' 0800'              	movf	sprintf@fval^(0+128),w
 10362  0015' 1283               	bcf	3,5	;RP0=0, select bank0
 10363  0016' 1303               	bcf	3,6	;RP1=0, select bank0
 10364  0017' 0080'              	movwf	___fleq@ff1
 10365  0018' 3000               	movlw	0
 10366  0019' 0087'              	movwf	___fleq@ff2+3
 10367  001A' 3000               	movlw	0
 10368  001B' 0086'              	movwf	___fleq@ff2+2
 10369  001C' 3000               	movlw	0
 10370  001D' 0085'              	movwf	___fleq@ff2+1
 10371  001E' 3000               	movlw	0
 10372  001F' 0084'              	movwf	___fleq@ff2
 10373  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
 10374  0025' 1803               	btfsc	3,0
 10375  0026' 2800'              	goto	u7211
 10376  0027' 2800'              	goto	u7210
 10377  0028'                    u7211:
 10378  0028' 2800'              	goto	l4387
 10379  0029'                    u7210:
 10380  0029'                    l4369:
 10381  0029' 1683               	bsf	3,5	;RP0=1, select bank1
 10382  002A' 1303               	bcf	3,6	;RP1=0, select bank1
 10383  002B' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10384  002C' 1283               	bcf	3,5	;RP0=0, select bank0
 10385  002D' 1303               	bcf	3,6	;RP1=0, select bank0
 10386  002E' 00BB'              	movwf	___fltol@f1+3
 10387  002F' 1683               	bsf	3,5	;RP0=1, select bank1
 10388  0030' 1303               	bcf	3,6	;RP1=0, select bank1
 10389  0031' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10390  0032' 1283               	bcf	3,5	;RP0=0, select bank0
 10391  0033' 1303               	bcf	3,6	;RP1=0, select bank0
 10392  0034' 00BA'              	movwf	___fltol@f1+2
 10393  0035' 1683               	bsf	3,5	;RP0=1, select bank1
 10394  0036' 1303               	bcf	3,6	;RP1=0, select bank1
 10395  0037' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10396  0038' 1283               	bcf	3,5	;RP0=0, select bank0
 10397  0039' 1303               	bcf	3,6	;RP1=0, select bank0
 10398  003A' 00B9'              	movwf	___fltol@f1+1
 10399  003B' 1683               	bsf	3,5	;RP0=1, select bank1
 10400  003C' 1303               	bcf	3,6	;RP1=0, select bank1
 10401  003D' 0800'              	movf	sprintf@fval^(0+128),w
 10402  003E' 1283               	bcf	3,5	;RP0=0, select bank0
 10403  003F' 1303               	bcf	3,6	;RP1=0, select bank0
 10404  0040' 00B8'              	movwf	___fltol@f1
 10405  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 10406  0046' 1283               	bcf	3,5	;RP0=0, select bank0
 10407  0047' 1303               	bcf	3,6	;RP1=0, select bank0
 10408  0048' 083B'              	movf	?___fltol+3,w
 10409  0049' 043A'              	iorwf	?___fltol+2,w
 10410  004A' 0439'              	iorwf	?___fltol+1,w
 10411  004B' 0438'              	iorwf	?___fltol,w
 10412  004C' 1D03               	skipz
 10413  004D' 2800'              	goto	u7221
 10414  004E' 2800'              	goto	u7220
 10415  004F'                    u7221:
 10416  004F' 2800'              	goto	l4387
 10417  0050'                    u7220:
 10418  0050'                    l4371:
 10419  0050' 1683               	bsf	3,5	;RP0=1, select bank1
 10420  0051' 1303               	bcf	3,6	;RP1=0, select bank1
 10421  0052' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 10422  0053' 3A80               	xorlw	128
 10423  0054' 00FF               	movwf	btemp+1
 10424  0055' 3080               	movlw	128
 10425  0056' 027F               	subwf	btemp+1,w
 10426  0057' 1D03               	skipz
 10427  0058' 2800'              	goto	u7235
 10428  0059' 3002               	movlw	2
 10429  005A' 0200'              	subwf	sprintf@eexp^(0+128),w
 10430  005B'                    u7235:
 10431  005B' 1C03               	skipc
 10432  005C' 2800'              	goto	u7231
 10433  005D' 2800'              	goto	u7230
 10434  005E'                    u7231:
 10435  005E' 2800'              	goto	l4387
 10436  005F'                    u7230:
 10437  005F'                    l4373:
 10438                           
 10439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10440  005F' 1683               	bsf	3,5	;RP0=1, select bank1
 10441  0060' 1303               	bcf	3,6	;RP1=0, select bank1
 10442  0061' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 10443  0062' 1283               	bcf	3,5	;RP0=0, select bank0
 10444  0063' 1303               	bcf	3,6	;RP1=0, select bank0
 10445  0064' 0083'              	movwf	___flge@ff1+3
 10446  0065' 1683               	bsf	3,5	;RP0=1, select bank1
 10447  0066' 1303               	bcf	3,6	;RP1=0, select bank1
 10448  0067' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 10449  0068' 1283               	bcf	3,5	;RP0=0, select bank0
 10450  0069' 1303               	bcf	3,6	;RP1=0, select bank0
 10451  006A' 0082'              	movwf	___flge@ff1+2
 10452  006B' 1683               	bsf	3,5	;RP0=1, select bank1
 10453  006C' 1303               	bcf	3,6	;RP1=0, select bank1
 10454  006D' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 10455  006E' 1283               	bcf	3,5	;RP0=0, select bank0
 10456  006F' 1303               	bcf	3,6	;RP1=0, select bank0
 10457  0070' 0081'              	movwf	___flge@ff1+1
 10458  0071' 1683               	bsf	3,5	;RP0=1, select bank1
 10459  0072' 1303               	bcf	3,6	;RP1=0, select bank1
 10460  0073' 0800'              	movf	sprintf@tmpval^(0+128),w
 10461  0074' 1283               	bcf	3,5	;RP0=0, select bank0
 10462  0075' 1303               	bcf	3,6	;RP1=0, select bank0
 10463  0076' 0080'              	movwf	___flge@ff1
 10464  0077' 3040               	movlw	64
 10465  0078' 0087'              	movwf	___flge@ff2+3
 10466  0079' 3089               	movlw	137
 10467  007A' 0086'              	movwf	___flge@ff2+2
 10468  007B' 3070               	movlw	112
 10469  007C' 0085'              	movwf	___flge@ff2+1
 10470  007D' 305F               	movlw	95
 10471  007E' 0084'              	movwf	___flge@ff2
 10472  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
 10473  0084' 1803               	btfsc	3,0
 10474  0085' 2800'              	goto	u7241
 10475  0086' 2800'              	goto	u7240
 10476  0087'                    u7241:
 10477  0087' 2800'              	goto	l4377
 10478  0088'                    u7240:
 10479  0088'                    l4375:
 10480                           
 10481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10482  0088' 30F7               	movlw	247
 10483  0089' 1683               	bsf	3,5	;RP0=1, select bank1
 10484  008A' 1303               	bcf	3,6	;RP1=0, select bank1
 10485  008B' 0780'              	addwf	sprintf@eexp^(0+128),f
 10486  008C' 1803               	skipnc
 10487  008D' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 10488  008E' 30FF               	movlw	255
 10489  008F' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 10490                           
 10491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10492  0090' 2800'              	goto	l4379
 10493  0091'                    l4377:
 10494                           
 10495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10496  0091' 30F8               	movlw	248
 10497  0092' 1683               	bsf	3,5	;RP0=1, select bank1
 10498  0093' 1303               	bcf	3,6	;RP1=0, select bank1
 10499  0094' 0780'              	addwf	sprintf@eexp^(0+128),f
 10500  0095' 1803               	skipnc
 10501  0096' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 10502  0097' 30FF               	movlw	255
 10503  0098' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 10504  0099'                    l4379:
 10505                           
 10506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10507  0099' 0800'              	movf	sprintf@eexp^(0+128),w
 10508  009A' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 10509  009F' 1283               	bcf	3,5	;RP0=0, select bank0
 10510  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
 10511  00A1' 0828'              	movf	?_scale+3,w
 10512  00A2' 1683               	bsf	3,5	;RP0=1, select bank1
 10513  00A3' 1303               	bcf	3,6	;RP1=0, select bank1
 10514  00A4' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 10515  00A5' 1283               	bcf	3,5	;RP0=0, select bank0
 10516  00A6' 1303               	bcf	3,6	;RP1=0, select bank0
 10517  00A7' 0827'              	movf	?_scale+2,w
 10518  00A8' 1683               	bsf	3,5	;RP0=1, select bank1
 10519  00A9' 1303               	bcf	3,6	;RP1=0, select bank1
 10520  00AA' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 10521  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
 10522  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
 10523  00AD' 0826'              	movf	?_scale+1,w
 10524  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
 10525  00AF' 1303               	bcf	3,6	;RP1=0, select bank1
 10526  00B0' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 10527  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
 10528  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
 10529  00B3' 0825'              	movf	?_scale,w
 10530  00B4' 1683               	bsf	3,5	;RP0=1, select bank1
 10531  00B5' 1303               	bcf	3,6	;RP1=0, select bank1
 10532  00B6' 0080'              	movwf	sprintf@tmpval^(0+128)
 10533  00B7'                    l4381:
 10534  00B7' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10535  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
 10536  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
 10537  00BA' 0083'              	movwf	__div_to_l_@f1+3
 10538  00BB' 1683               	bsf	3,5	;RP0=1, select bank1
 10539  00BC' 1303               	bcf	3,6	;RP1=0, select bank1
 10540  00BD' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10541  00BE' 1283               	bcf	3,5	;RP0=0, select bank0
 10542  00BF' 1303               	bcf	3,6	;RP1=0, select bank0
 10543  00C0' 0082'              	movwf	__div_to_l_@f1+2
 10544  00C1' 1683               	bsf	3,5	;RP0=1, select bank1
 10545  00C2' 1303               	bcf	3,6	;RP1=0, select bank1
 10546  00C3' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10547  00C4' 1283               	bcf	3,5	;RP0=0, select bank0
 10548  00C5' 1303               	bcf	3,6	;RP1=0, select bank0
 10549  00C6' 0081'              	movwf	__div_to_l_@f1+1
 10550  00C7' 1683               	bsf	3,5	;RP0=1, select bank1
 10551  00C8' 1303               	bcf	3,6	;RP1=0, select bank1
 10552  00C9' 0800'              	movf	sprintf@fval^(0+128),w
 10553  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
 10554  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
 10555  00CC' 0080'              	movwf	__div_to_l_@f1
 10556  00CD' 1683               	bsf	3,5	;RP0=1, select bank1
 10557  00CE' 1303               	bcf	3,6	;RP1=0, select bank1
 10558  00CF' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 10559  00D0' 1283               	bcf	3,5	;RP0=0, select bank0
 10560  00D1' 1303               	bcf	3,6	;RP1=0, select bank0
 10561  00D2' 0087'              	movwf	__div_to_l_@f2+3
 10562  00D3' 1683               	bsf	3,5	;RP0=1, select bank1
 10563  00D4' 1303               	bcf	3,6	;RP1=0, select bank1
 10564  00D5' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 10565  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
 10566  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
 10567  00D8' 0086'              	movwf	__div_to_l_@f2+2
 10568  00D9' 1683               	bsf	3,5	;RP0=1, select bank1
 10569  00DA' 1303               	bcf	3,6	;RP1=0, select bank1
 10570  00DB' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 10571  00DC' 1283               	bcf	3,5	;RP0=0, select bank0
 10572  00DD' 1303               	bcf	3,6	;RP1=0, select bank0
 10573  00DE' 0085'              	movwf	__div_to_l_@f2+1
 10574  00DF' 1683               	bsf	3,5	;RP0=1, select bank1
 10575  00E0' 1303               	bcf	3,6	;RP1=0, select bank1
 10576  00E1' 0800'              	movf	sprintf@tmpval^(0+128),w
 10577  00E2' 1283               	bcf	3,5	;RP0=0, select bank0
 10578  00E3' 1303               	bcf	3,6	;RP1=0, select bank0
 10579  00E4' 0084'              	movwf	__div_to_l_@f2
 10580  00E5' 120A' 118A' 2000' 120A' 118A' 	fcall	__div_to_l_
 10581  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
 10582  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
 10583  00EC' 0803'              	movf	?__div_to_l_+3,w
 10584  00ED' 1683               	bsf	3,5	;RP0=1, select bank1
 10585  00EE' 1303               	bcf	3,6	;RP1=0, select bank1
 10586  00EF' 0080'              	movwf	(sprintf@val+3)^(0+128)
 10587  00F0' 1283               	bcf	3,5	;RP0=0, select bank0
 10588  00F1' 1303               	bcf	3,6	;RP1=0, select bank0
 10589  00F2' 0802'              	movf	?__div_to_l_+2,w
 10590  00F3' 1683               	bsf	3,5	;RP0=1, select bank1
 10591  00F4' 1303               	bcf	3,6	;RP1=0, select bank1
 10592  00F5' 0080'              	movwf	(sprintf@val+2)^(0+128)
 10593  00F6' 1283               	bcf	3,5	;RP0=0, select bank0
 10594  00F7' 1303               	bcf	3,6	;RP1=0, select bank0
 10595  00F8' 0801'              	movf	?__div_to_l_+1,w
 10596  00F9' 1683               	bsf	3,5	;RP0=1, select bank1
 10597  00FA' 1303               	bcf	3,6	;RP1=0, select bank1
 10598  00FB' 0080'              	movwf	(sprintf@val+1)^(0+128)
 10599  00FC' 1283               	bcf	3,5	;RP0=0, select bank0
 10600  00FD' 1303               	bcf	3,6	;RP1=0, select bank0
 10601  00FE' 0800'              	movf	?__div_to_l_,w
 10602  00FF' 1683               	bsf	3,5	;RP0=1, select bank1
 10603  0100' 1303               	bcf	3,6	;RP1=0, select bank1
 10604  0101' 0080'              	movwf	sprintf@val^(0+128)
 10605  0102'                    l4385:
 10606                           
 10607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10608  0102' 3000               	movlw	0
 10609  0103' 0080'              	movwf	(sprintf@fval+3)^(0+128)
 10610  0104' 3000               	movlw	0
 10611  0105' 0080'              	movwf	(sprintf@fval+2)^(0+128)
 10612  0106' 3000               	movlw	0
 10613  0107' 0080'              	movwf	(sprintf@fval+1)^(0+128)
 10614  0108' 3000               	movlw	0
 10615  0109' 0080'              	movwf	sprintf@fval^(0+128)
 10616                           
 10617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10618  010A' 2800'              	goto	l4393
 10619  010B'                    l4387:
 10620                           
 10621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10622  010B' 1683               	bsf	3,5	;RP0=1, select bank1
 10623  010C' 1303               	bcf	3,6	;RP1=0, select bank1
 10624  010D' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10625  010E' 1283               	bcf	3,5	;RP0=0, select bank0
 10626  010F' 1303               	bcf	3,6	;RP1=0, select bank0
 10627  0110' 00BB'              	movwf	___fltol@f1+3
 10628  0111' 1683               	bsf	3,5	;RP0=1, select bank1
 10629  0112' 1303               	bcf	3,6	;RP1=0, select bank1
 10630  0113' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10631  0114' 1283               	bcf	3,5	;RP0=0, select bank0
 10632  0115' 1303               	bcf	3,6	;RP1=0, select bank0
 10633  0116' 00BA'              	movwf	___fltol@f1+2
 10634  0117' 1683               	bsf	3,5	;RP0=1, select bank1
 10635  0118' 1303               	bcf	3,6	;RP1=0, select bank1
 10636  0119' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10637  011A' 1283               	bcf	3,5	;RP0=0, select bank0
 10638  011B' 1303               	bcf	3,6	;RP1=0, select bank0
 10639  011C' 00B9'              	movwf	___fltol@f1+1
 10640  011D' 1683               	bsf	3,5	;RP0=1, select bank1
 10641  011E' 1303               	bcf	3,6	;RP1=0, select bank1
 10642  011F' 0800'              	movf	sprintf@fval^(0+128),w
 10643  0120' 1283               	bcf	3,5	;RP0=0, select bank0
 10644  0121' 1303               	bcf	3,6	;RP1=0, select bank0
 10645  0122' 00B8'              	movwf	___fltol@f1
 10646  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 10647  0128' 1283               	bcf	3,5	;RP0=0, select bank0
 10648  0129' 1303               	bcf	3,6	;RP1=0, select bank0
 10649  012A' 083B'              	movf	?___fltol+3,w
 10650  012B' 1683               	bsf	3,5	;RP0=1, select bank1
 10651  012C' 1303               	bcf	3,6	;RP1=0, select bank1
 10652  012D' 0080'              	movwf	(sprintf@val+3)^(0+128)
 10653  012E' 1283               	bcf	3,5	;RP0=0, select bank0
 10654  012F' 1303               	bcf	3,6	;RP1=0, select bank0
 10655  0130' 083A'              	movf	?___fltol+2,w
 10656  0131' 1683               	bsf	3,5	;RP0=1, select bank1
 10657  0132' 1303               	bcf	3,6	;RP1=0, select bank1
 10658  0133' 0080'              	movwf	(sprintf@val+2)^(0+128)
 10659  0134' 1283               	bcf	3,5	;RP0=0, select bank0
 10660  0135' 1303               	bcf	3,6	;RP1=0, select bank0
 10661  0136' 0839'              	movf	?___fltol+1,w
 10662  0137' 1683               	bsf	3,5	;RP0=1, select bank1
 10663  0138' 1303               	bcf	3,6	;RP1=0, select bank1
 10664  0139' 0080'              	movwf	(sprintf@val+1)^(0+128)
 10665  013A' 1283               	bcf	3,5	;RP0=0, select bank0
 10666  013B' 1303               	bcf	3,6	;RP1=0, select bank0
 10667  013C' 0838'              	movf	?___fltol,w
 10668  013D' 1683               	bsf	3,5	;RP0=1, select bank1
 10669  013E' 1303               	bcf	3,6	;RP1=0, select bank1
 10670  013F' 0080'              	movwf	sprintf@val^(0+128)
 10671  0140'                    l4389:
 10672                           
 10673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10674  0140' 0800'              	movf	(sprintf@val+3)^(0+128),w
 10675  0141' 0086'              	movwf	___xxtofl@val+3
 10676  0142' 0800'              	movf	(sprintf@val+2)^(0+128),w
 10677  0143' 0085'              	movwf	___xxtofl@val+2
 10678  0144' 0800'              	movf	(sprintf@val+1)^(0+128),w
 10679  0145' 0084'              	movwf	___xxtofl@val+1
 10680  0146' 0800'              	movf	sprintf@val^(0+128),w
 10681  0147' 0083'              	movwf	___xxtofl@val
 10682  0148' 3000               	movlw	0
 10683  0149' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
 10684  014E' 0806'              	movf	?___xxtofl+3,w
 10685  014F' 1683               	bsf	3,5	;RP0=1, select bank1
 10686  0150' 1303               	bcf	3,6	;RP1=0, select bank1
 10687  0151' 0080'              	movwf	(___flsub@a+3)^(0+128)
 10688  0152' 0805'              	movf	?___xxtofl+2,w
 10689  0153' 0080'              	movwf	(___flsub@a+2)^(0+128)
 10690  0154' 0804'              	movf	?___xxtofl+1,w
 10691  0155' 0080'              	movwf	(___flsub@a+1)^(0+128)
 10692  0156' 0803'              	movf	?___xxtofl,w
 10693  0157' 0080'              	movwf	___flsub@a^(0+128)
 10694  0158' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 10695  0159' 0080'              	movwf	(___flsub@b+3)^(0+128)
 10696  015A' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 10697  015B' 0080'              	movwf	(___flsub@b+2)^(0+128)
 10698  015C' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 10699  015D' 0080'              	movwf	(___flsub@b+1)^(0+128)
 10700  015E' 0800'              	movf	sprintf@fval^(0+128),w
 10701  015F' 0080'              	movwf	___flsub@b^(0+128)
 10702  0160' 120A' 118A' 2000' 120A' 118A' 	fcall	___flsub
 10703  0165' 1683               	bsf	3,5	;RP0=1, select bank1
 10704  0166' 1303               	bcf	3,6	;RP1=0, select bank1
 10705  0167' 0800'              	movf	(?___flsub+3)^(0+128),w
 10706  0168' 0080'              	movwf	(sprintf@fval+3)^(0+128)
 10707  0169' 0800'              	movf	(?___flsub+2)^(0+128),w
 10708  016A' 0080'              	movwf	(sprintf@fval+2)^(0+128)
 10709  016B' 0800'              	movf	(?___flsub+1)^(0+128),w
 10710  016C' 0080'              	movwf	(sprintf@fval+1)^(0+128)
 10711  016D' 0800'              	movf	?___flsub^(0+128),w
 10712  016E' 0080'              	movwf	sprintf@fval^(0+128)
 10713  016F'                    l4391:
 10714                           
 10715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10716  016F' 0180'              	clrf	sprintf@eexp^(0+128)
 10717  0170' 0180'              	clrf	(sprintf@eexp+1)^(0+128)
 10718  0171'                    l4393:
 10719                           
 10720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10721  0171' 0180'              	clrf	sprintf@c^(0+128)
 10722  0172' 0A80'              	incf	sprintf@c^(0+128),f
 10723  0173'                    l4399:
 10724                           
 10725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10726  0173' 0800'              	movf	sprintf@c^(0+128),w
 10727  0174' 0080'              	movwf	??_sprintf^(0+128)
 10728  0175' 3001               	movlw	1
 10729  0176'                    u7255:
 10730  0176' 1003               	clrc
 10731  0177' 0D80'              	rlf	??_sprintf^(0+128),f
 10732  0178' 3EFF               	addlw	-1
 10733  0179' 1D03               	skipz
 10734  017A' 2800'              	goto	u7255
 10735  017B' 1003               	clrc
 10736  017C' 0D00'              	rlf	??_sprintf^(0+128),w
 10737  017D' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10738  017E' 0084               	movwf	4
 10739  017F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10740  0184' 0080'              	movwf	(??_sprintf+1)^(0+128)
 10741  0185' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10742  018A' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 10743  018B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10744  0190' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 10745  0191' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10746  0196' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 10747  0197' 0800'              	movf	(??_sprintf+4)^(0+128),w
 10748  0198' 0200'              	subwf	(sprintf@val+3)^(0+128),w
 10749  0199' 1D03               	skipz
 10750  019A' 2800'              	goto	u7265
 10751  019B' 0800'              	movf	(??_sprintf+3)^(0+128),w
 10752  019C' 0200'              	subwf	(sprintf@val+2)^(0+128),w
 10753  019D' 1D03               	skipz
 10754  019E' 2800'              	goto	u7265
 10755  019F' 0800'              	movf	(??_sprintf+2)^(0+128),w
 10756  01A0' 0200'              	subwf	(sprintf@val+1)^(0+128),w
 10757  01A1' 1D03               	skipz
 10758  01A2' 2800'              	goto	u7265
 10759  01A3' 0800'              	movf	(??_sprintf+1)^(0+128),w
 10760  01A4' 0200'              	subwf	sprintf@val^(0+128),w
 10761  01A5'                    u7265:
 10762  01A5' 1803               	skipnc
 10763  01A6' 2800'              	goto	u7261
 10764  01A7' 2800'              	goto	u7260
 10765  01A8'                    u7261:
 10766  01A8' 2800'              	goto	l4403
 10767  01A9'                    u7260:
 10768  01A9' 2800'              	goto	l4405
 10769  01AA'                    l4403:
 10770  01AA' 3001               	movlw	1
 10771  01AB' 0080'              	movwf	??_sprintf^(0+128)
 10772  01AC' 0800'              	movf	??_sprintf^(0+128),w
 10773  01AD' 0780'              	addwf	sprintf@c^(0+128),f
 10774  01AE' 300A               	movlw	10
 10775  01AF' 0600'              	xorwf	sprintf@c^(0+128),w
 10776  01B0' 1D03               	btfss	3,2
 10777  01B1' 2800'              	goto	u7271
 10778  01B2' 2800'              	goto	u7270
 10779  01B3'                    u7271:
 10780  01B3' 2800'              	goto	l4399
 10781  01B4'                    u7270:
 10782  01B4'                    l4405:
 10783                           
 10784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10785  01B4' 0800'              	movf	sprintf@c^(0+128),w
 10786  01B5' 0700'              	addwf	sprintf@prec^(0+128),w
 10787  01B6' 0080'              	movwf	??_sprintf^(0+128)
 10788  01B7' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 10789  01B8' 1803               	skipnc
 10790  01B9' 0A00'              	incf	(sprintf@prec+1)^(0+128),w
 10791  01BA' 0081'              	movwf	(??_sprintf^(0+128)+1)
 10792  01BB' 0800'              	movf	sprintf@eexp^(0+128),w
 10793  01BC' 0700'              	addwf	??_sprintf^(0+128),w
 10794  01BD' 0080'              	movwf	(??_sprintf+2)^(0+128)
 10795  01BE' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 10796  01BF' 1803               	skipnc
 10797  01C0' 0A00'              	incf	(sprintf@eexp+1)^(0+128),w
 10798  01C1' 0700'              	addwf	(??_sprintf+1)^(0+128),w
 10799  01C2' 0080'              	movwf	(??_sprintf+3)^(0+128)
 10800  01C3' 0800'              	movf	(??_sprintf+2)^(0+128),w
 10801  01C4' 0280'              	subwf	sprintf@width^(0+128),f
 10802  01C5' 0800'              	movf	(??_sprintf+3)^(0+128),w
 10803  01C6' 1C03               	skipc
 10804  01C7' 0380'              	decf	(sprintf@width+1)^(0+128),f
 10805  01C8' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 10806                           
 10807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10808  01C9' 0800'              	movf	sprintf@prec^(0+128),w
 10809  01CA' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 10810  01CB' 1903               	btfsc	3,2
 10811  01CC' 2800'              	goto	u7281
 10812  01CD' 2800'              	goto	u7280
 10813  01CE'                    u7281:
 10814  01CE' 2800'              	goto	l4409
 10815  01CF'                    u7280:
 10816  01CF'                    l4407:
 10817                           
 10818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10819  01CF' 30FF               	movlw	255
 10820  01D0' 0780'              	addwf	sprintf@width^(0+128),f
 10821  01D1' 1803               	skipnc
 10822  01D2' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 10823  01D3' 30FF               	movlw	255
 10824  01D4' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 10825  01D5'                    l4409:
 10826                           
 10827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10828  01D5' 3003               	movlw	3
 10829  01D6' 0500'              	andwf	sprintf@flag^(0+128),w
 10830  01D7' 0080'              	movwf	??_sprintf^(0+128)
 10831  01D8' 3000               	movlw	0
 10832  01D9' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 10833  01DA' 0080'              	movwf	(??_sprintf+1)^(0+128)
 10834  01DB' 0800'              	movf	??_sprintf^(0+128),w
 10835  01DC' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 10836  01DD' 1903               	btfsc	3,2
 10837  01DE' 2800'              	goto	u7291
 10838  01DF' 2800'              	goto	u7290
 10839  01E0'                    u7291:
 10840  01E0' 2800'              	goto	l4419
 10841  01E1'                    u7290:
 10842  01E1'                    l4411:
 10843                           
 10844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10845  01E1' 30FF               	movlw	255
 10846  01E2' 0780'              	addwf	sprintf@width^(0+128),f
 10847  01E3' 1803               	skipnc
 10848  01E4' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 10849  01E5' 30FF               	movlw	255
 10850  01E6' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 10851  01E7' 2800'              	goto	l4419
 10852  01E8'                    l4413:
 10853                           
 10854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10855  01E8' 3020               	movlw	32
 10856  01E9' 1683               	bsf	3,5	;RP0=1, select bank1
 10857  01EA' 1303               	bcf	3,6	;RP1=0, select bank1
 10858  01EB' 0080'              	movwf	??_sprintf^(0+128)
 10859  01EC' 0800'              	movf	sprintf@sp^(0+128),w
 10860  01ED' 0084               	movwf	4
 10861  01EE' 0800'              	movf	??_sprintf^(0+128),w
 10862  01EF' 1783               	bsf	3,7	;select IRP bank2
 10863  01F0' 0080               	movwf	0
 10864  01F1'                    l4415:
 10865  01F1' 3001               	movlw	1
 10866  01F2' 0080'              	movwf	??_sprintf^(0+128)
 10867  01F3' 0800'              	movf	??_sprintf^(0+128),w
 10868  01F4' 0780'              	addwf	sprintf@sp^(0+128),f
 10869  01F5' 2800'              	goto	l4411
 10870  01F6'                    l4419:
 10871                           
 10872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10873  01F6' 0800'              	movf	(sprintf@width+1)^(0+128),w
 10874  01F7' 3A80               	xorlw	128
 10875  01F8' 00FF               	movwf	btemp+1
 10876  01F9' 3080               	movlw	128
 10877  01FA' 027F               	subwf	btemp+1,w
 10878  01FB' 1D03               	skipz
 10879  01FC' 2800'              	goto	u7305
 10880  01FD' 3001               	movlw	1
 10881  01FE' 0200'              	subwf	sprintf@width^(0+128),w
 10882  01FF'                    u7305:
 10883  01FF' 1803               	skipnc
 10884  0200' 2800'              	goto	u7301
 10885  0201' 2800'              	goto	u7300
 10886  0202'                    u7301:
 10887  0202' 2800'              	goto	l4413
 10888  0203'                    u7300:
 10889  0203'                    l4421:
 10890                           
 10891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10892  0203' 3003               	movlw	3
 10893  0204' 1683               	bsf	3,5	;RP0=1, select bank1
 10894  0205' 1303               	bcf	3,6	;RP1=0, select bank1
 10895  0206' 0500'              	andwf	sprintf@flag^(0+128),w
 10896  0207' 0080'              	movwf	??_sprintf^(0+128)
 10897  0208' 3000               	movlw	0
 10898  0209' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 10899  020A' 0080'              	movwf	(??_sprintf+1)^(0+128)
 10900  020B' 0800'              	movf	??_sprintf^(0+128),w
 10901  020C' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 10902  020D' 1903               	btfsc	3,2
 10903  020E' 2800'              	goto	u7311
 10904  020F' 2800'              	goto	u7310
 10905  0210'                    u7311:
 10906  0210' 2800'              	goto	l381
 10907  0211'                    u7310:
 10908  0211'                    l4423:
 10909                           
 10910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10911  0211' 302D               	movlw	45
 10912  0212' 0080'              	movwf	??_sprintf^(0+128)
 10913  0213' 0800'              	movf	sprintf@sp^(0+128),w
 10914  0214' 0084               	movwf	4
 10915  0215' 0800'              	movf	??_sprintf^(0+128),w
 10916  0216' 1783               	bsf	3,7	;select IRP bank2
 10917  0217' 0080               	movwf	0
 10918  0218'                    l4425:
 10919  0218' 3001               	movlw	1
 10920  0219' 0080'              	movwf	??_sprintf^(0+128)
 10921  021A' 0800'              	movf	??_sprintf^(0+128),w
 10922  021B' 0780'              	addwf	sprintf@sp^(0+128),f
 10923  021C' 2800'              	goto	l381
 10924  021D'                    l4427:
 10925                           
 10926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10927  021D' 0800'              	movf	sprintf@c^(0+128),w
 10928  021E' 0080'              	movwf	??_sprintf^(0+128)
 10929  021F' 3001               	movlw	1
 10930  0220'                    u7325:
 10931  0220' 1003               	clrc
 10932  0221' 0D80'              	rlf	??_sprintf^(0+128),f
 10933  0222' 3EFF               	addlw	-1
 10934  0223' 1D03               	skipz
 10935  0224' 2800'              	goto	u7325
 10936  0225' 1003               	clrc
 10937  0226' 0D00'              	rlf	??_sprintf^(0+128),w
 10938  0227' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10939  0228' 0084               	movwf	4
 10940  0229' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10941  022E' 1283               	bcf	3,5	;RP0=0, select bank0
 10942  022F' 1303               	bcf	3,6	;RP1=0, select bank0
 10943  0230' 0080'              	movwf	___lldiv@divisor
 10944  0231' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10945  0236' 0081'              	movwf	___lldiv@divisor+1
 10946  0237' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10947  023C' 0082'              	movwf	___lldiv@divisor+2
 10948  023D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 10949  0242' 0083'              	movwf	___lldiv@divisor+3
 10950  0243' 1683               	bsf	3,5	;RP0=1, select bank1
 10951  0244' 1303               	bcf	3,6	;RP1=0, select bank1
 10952  0245' 0800'              	movf	(sprintf@val+3)^(0+128),w
 10953  0246' 1283               	bcf	3,5	;RP0=0, select bank0
 10954  0247' 1303               	bcf	3,6	;RP1=0, select bank0
 10955  0248' 0087'              	movwf	___lldiv@dividend+3
 10956  0249' 1683               	bsf	3,5	;RP0=1, select bank1
 10957  024A' 1303               	bcf	3,6	;RP1=0, select bank1
 10958  024B' 0800'              	movf	(sprintf@val+2)^(0+128),w
 10959  024C' 1283               	bcf	3,5	;RP0=0, select bank0
 10960  024D' 1303               	bcf	3,6	;RP1=0, select bank0
 10961  024E' 0086'              	movwf	___lldiv@dividend+2
 10962  024F' 1683               	bsf	3,5	;RP0=1, select bank1
 10963  0250' 1303               	bcf	3,6	;RP1=0, select bank1
 10964  0251' 0800'              	movf	(sprintf@val+1)^(0+128),w
 10965  0252' 1283               	bcf	3,5	;RP0=0, select bank0
 10966  0253' 1303               	bcf	3,6	;RP1=0, select bank0
 10967  0254' 0085'              	movwf	___lldiv@dividend+1
 10968  0255' 1683               	bsf	3,5	;RP0=1, select bank1
 10969  0256' 1303               	bcf	3,6	;RP1=0, select bank1
 10970  0257' 0800'              	movf	sprintf@val^(0+128),w
 10971  0258' 1283               	bcf	3,5	;RP0=0, select bank0
 10972  0259' 1303               	bcf	3,6	;RP1=0, select bank0
 10973  025A' 0084'              	movwf	___lldiv@dividend
 10974  025B' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 10975  0260' 1283               	bcf	3,5	;RP0=0, select bank0
 10976  0261' 1303               	bcf	3,6	;RP1=0, select bank0
 10977  0262' 0803'              	movf	?___lldiv+3,w
 10978  0263' 1683               	bsf	3,5	;RP0=1, select bank1
 10979  0264' 1303               	bcf	3,6	;RP1=0, select bank1
 10980  0265' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 10981  0266' 1283               	bcf	3,5	;RP0=0, select bank0
 10982  0267' 1303               	bcf	3,6	;RP1=0, select bank0
 10983  0268' 0802'              	movf	?___lldiv+2,w
 10984  0269' 1683               	bsf	3,5	;RP0=1, select bank1
 10985  026A' 1303               	bcf	3,6	;RP1=0, select bank1
 10986  026B' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 10987  026C' 1283               	bcf	3,5	;RP0=0, select bank0
 10988  026D' 1303               	bcf	3,6	;RP1=0, select bank0
 10989  026E' 0801'              	movf	?___lldiv+1,w
 10990  026F' 1683               	bsf	3,5	;RP0=1, select bank1
 10991  0270' 1303               	bcf	3,6	;RP1=0, select bank1
 10992  0271' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 10993  0272' 1283               	bcf	3,5	;RP0=0, select bank0
 10994  0273' 1303               	bcf	3,6	;RP1=0, select bank0
 10995  0274' 0800'              	movf	?___lldiv,w
 10996  0275' 1683               	bsf	3,5	;RP0=1, select bank1
 10997  0276' 1303               	bcf	3,6	;RP1=0, select bank1
 10998  0277' 0080'              	movwf	sprintf@tmpval^(0+128)
 10999  0278'                    l4429:
 11000                           
 11001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 11002  0278' 3000               	movlw	0
 11003  0279' 1283               	bcf	3,5	;RP0=0, select bank0
 11004  027A' 1303               	bcf	3,6	;RP1=0, select bank0
 11005  027B' 0090'              	movwf	___llmod@divisor+3
 11006  027C' 3000               	movlw	0
 11007  027D' 008F'              	movwf	___llmod@divisor+2
 11008  027E' 3000               	movlw	0
 11009  027F' 008E'              	movwf	___llmod@divisor+1
 11010  0280' 300A               	movlw	10
 11011  0281' 008D'              	movwf	___llmod@divisor
 11012  0282' 1683               	bsf	3,5	;RP0=1, select bank1
 11013  0283' 1303               	bcf	3,6	;RP1=0, select bank1
 11014  0284' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11015  0285' 1283               	bcf	3,5	;RP0=0, select bank0
 11016  0286' 1303               	bcf	3,6	;RP1=0, select bank0
 11017  0287' 0094'              	movwf	___llmod@dividend+3
 11018  0288' 1683               	bsf	3,5	;RP0=1, select bank1
 11019  0289' 1303               	bcf	3,6	;RP1=0, select bank1
 11020  028A' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11021  028B' 1283               	bcf	3,5	;RP0=0, select bank0
 11022  028C' 1303               	bcf	3,6	;RP1=0, select bank0
 11023  028D' 0093'              	movwf	___llmod@dividend+2
 11024  028E' 1683               	bsf	3,5	;RP0=1, select bank1
 11025  028F' 1303               	bcf	3,6	;RP1=0, select bank1
 11026  0290' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11027  0291' 1283               	bcf	3,5	;RP0=0, select bank0
 11028  0292' 1303               	bcf	3,6	;RP1=0, select bank0
 11029  0293' 0092'              	movwf	___llmod@dividend+1
 11030  0294' 1683               	bsf	3,5	;RP0=1, select bank1
 11031  0295' 1303               	bcf	3,6	;RP1=0, select bank1
 11032  0296' 0800'              	movf	sprintf@tmpval^(0+128),w
 11033  0297' 1283               	bcf	3,5	;RP0=0, select bank0
 11034  0298' 1303               	bcf	3,6	;RP1=0, select bank0
 11035  0299' 0091'              	movwf	___llmod@dividend
 11036  029A' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11037  029F' 1283               	bcf	3,5	;RP0=0, select bank0
 11038  02A0' 1303               	bcf	3,6	;RP1=0, select bank0
 11039  02A1' 0810'              	movf	?___llmod+3,w
 11040  02A2' 1683               	bsf	3,5	;RP0=1, select bank1
 11041  02A3' 1303               	bcf	3,6	;RP1=0, select bank1
 11042  02A4' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11043  02A5' 1283               	bcf	3,5	;RP0=0, select bank0
 11044  02A6' 1303               	bcf	3,6	;RP1=0, select bank0
 11045  02A7' 080F'              	movf	?___llmod+2,w
 11046  02A8' 1683               	bsf	3,5	;RP0=1, select bank1
 11047  02A9' 1303               	bcf	3,6	;RP1=0, select bank1
 11048  02AA' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11049  02AB' 1283               	bcf	3,5	;RP0=0, select bank0
 11050  02AC' 1303               	bcf	3,6	;RP1=0, select bank0
 11051  02AD' 080E'              	movf	?___llmod+1,w
 11052  02AE' 1683               	bsf	3,5	;RP0=1, select bank1
 11053  02AF' 1303               	bcf	3,6	;RP1=0, select bank1
 11054  02B0' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11055  02B1' 1283               	bcf	3,5	;RP0=0, select bank0
 11056  02B2' 1303               	bcf	3,6	;RP1=0, select bank0
 11057  02B3' 080D'              	movf	?___llmod,w
 11058  02B4' 1683               	bsf	3,5	;RP0=1, select bank1
 11059  02B5' 1303               	bcf	3,6	;RP1=0, select bank1
 11060  02B6' 0080'              	movwf	sprintf@tmpval^(0+128)
 11061  02B7'                    l4431:
 11062                           
 11063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11064  02B7' 0800'              	movf	sprintf@tmpval^(0+128),w
 11065  02B8' 3E30               	addlw	48
 11066  02B9' 0080'              	movwf	??_sprintf^(0+128)
 11067  02BA' 0800'              	movf	sprintf@sp^(0+128),w
 11068  02BB' 0084               	movwf	4
 11069  02BC' 0800'              	movf	??_sprintf^(0+128),w
 11070  02BD' 1783               	bsf	3,7	;select IRP bank2
 11071  02BE' 0080               	movwf	0
 11072  02BF' 3001               	movlw	1
 11073  02C0' 0080'              	movwf	??_sprintf^(0+128)
 11074  02C1' 0800'              	movf	??_sprintf^(0+128),w
 11075  02C2' 0780'              	addwf	sprintf@sp^(0+128),f
 11076  02C3'                    l381:	
 11077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 11078                           
 11079                           
 11080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11081  02C3' 3001               	movlw	1
 11082  02C4' 0280'              	subwf	sprintf@c^(0+128),f
 11083  02C5' 0A00'              	incf	sprintf@c^(0+128),w
 11084  02C6' 1D03               	btfss	3,2
 11085  02C7' 2800'              	goto	u7331
 11086  02C8' 2800'              	goto	u7330
 11087  02C9'                    u7331:
 11088  02C9' 2800'              	goto	l4427
 11089  02CA'                    u7330:
 11090  02CA' 2800'              	goto	l4439
 11091  02CB'                    l4433:
 11092                           
 11093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11094  02CB' 3030               	movlw	48
 11095  02CC' 1683               	bsf	3,5	;RP0=1, select bank1
 11096  02CD' 1303               	bcf	3,6	;RP1=0, select bank1
 11097  02CE' 0080'              	movwf	??_sprintf^(0+128)
 11098  02CF' 0800'              	movf	sprintf@sp^(0+128),w
 11099  02D0' 0084               	movwf	4
 11100  02D1' 0800'              	movf	??_sprintf^(0+128),w
 11101  02D2' 1783               	bsf	3,7	;select IRP bank2
 11102  02D3' 0080               	movwf	0
 11103  02D4'                    l4435:
 11104  02D4' 3001               	movlw	1
 11105  02D5' 0080'              	movwf	??_sprintf^(0+128)
 11106  02D6' 0800'              	movf	??_sprintf^(0+128),w
 11107  02D7' 0780'              	addwf	sprintf@sp^(0+128),f
 11108  02D8'                    l4437:
 11109                           
 11110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11111  02D8' 30FF               	movlw	255
 11112  02D9' 0780'              	addwf	sprintf@eexp^(0+128),f
 11113  02DA' 1803               	skipnc
 11114  02DB' 0A80'              	incf	(sprintf@eexp+1)^(0+128),f
 11115  02DC' 30FF               	movlw	255
 11116  02DD' 0780'              	addwf	(sprintf@eexp+1)^(0+128),f
 11117  02DE'                    l4439:
 11118                           
 11119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11120  02DE' 0800'              	movf	(sprintf@eexp+1)^(0+128),w
 11121  02DF' 3A80               	xorlw	128
 11122  02E0' 00FF               	movwf	btemp+1
 11123  02E1' 3080               	movlw	128
 11124  02E2' 027F               	subwf	btemp+1,w
 11125  02E3' 1D03               	skipz
 11126  02E4' 2800'              	goto	u7345
 11127  02E5' 3001               	movlw	1
 11128  02E6' 0200'              	subwf	sprintf@eexp^(0+128),w
 11129  02E7'                    u7345:
 11130  02E7' 1803               	skipnc
 11131  02E8' 2800'              	goto	u7341
 11132  02E9' 2800'              	goto	u7340
 11133  02EA'                    u7341:
 11134  02EA' 2800'              	goto	l4433
 11135  02EB'                    u7340:
 11136  02EB'                    l4441:
 11137                           
 11138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11139  02EB' 1683               	bsf	3,5	;RP0=1, select bank1
 11140  02EC' 1303               	bcf	3,6	;RP1=0, select bank1
 11141  02ED' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11142  02EE' 3A80               	xorlw	128
 11143  02EF' 00FF               	movwf	btemp+1
 11144  02F0' 3080               	movlw	128
 11145  02F1' 027F               	subwf	btemp+1,w
 11146  02F2' 1D03               	skipz
 11147  02F3' 2800'              	goto	u7355
 11148  02F4' 3009               	movlw	9
 11149  02F5' 0200'              	subwf	sprintf@prec^(0+128),w
 11150  02F6'                    u7355:
 11151  02F6' 1C03               	skipc
 11152  02F7' 2800'              	goto	u7351
 11153  02F8' 2800'              	goto	u7350
 11154  02F9'                    u7351:
 11155  02F9' 2800'              	goto	l4445
 11156  02FA'                    u7350:
 11157  02FA'                    l4443:
 11158                           
 11159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11160  02FA' 3008               	movlw	8
 11161  02FB' 1683               	bsf	3,5	;RP0=1, select bank1
 11162  02FC' 1303               	bcf	3,6	;RP1=0, select bank1
 11163  02FD' 0080'              	movwf	??_sprintf^(0+128)
 11164  02FE' 0800'              	movf	??_sprintf^(0+128),w
 11165  02FF' 0080'              	movwf	sprintf@c^(0+128)
 11166  0300' 2800'              	goto	l388
 11167  0301'                    l4445:
 11168                           
 11169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11170  0301' 1683               	bsf	3,5	;RP0=1, select bank1
 11171  0302' 1303               	bcf	3,6	;RP1=0, select bank1
 11172  0303' 0800'              	movf	sprintf@prec^(0+128),w
 11173  0304' 0080'              	movwf	??_sprintf^(0+128)
 11174  0305' 0800'              	movf	??_sprintf^(0+128),w
 11175  0306' 0080'              	movwf	sprintf@c^(0+128)
 11176  0307'                    l388:
 11177                           
 11178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11179  0307' 0800'              	movf	sprintf@c^(0+128),w
 11180  0308' 0080'              	movwf	??_sprintf^(0+128)
 11181  0309' 0181'              	clrf	(??_sprintf^(0+128)+1)
 11182  030A' 0800'              	movf	??_sprintf^(0+128),w
 11183  030B' 0280'              	subwf	sprintf@prec^(0+128),f
 11184  030C' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11185  030D' 1C03               	skipc
 11186  030E' 0380'              	decf	(sprintf@prec+1)^(0+128),f
 11187  030F' 0280'              	subwf	(sprintf@prec+1)^(0+128),f
 11188  0310'                    l4447:
 11189                           
 11190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11191  0310' 0800'              	movf	sprintf@c^(0+128),w
 11192  0311' 1903               	btfsc	3,2
 11193  0312' 2800'              	goto	u7361
 11194  0313' 2800'              	goto	u7360
 11195  0314'                    u7361:
 11196  0314' 2800'              	goto	l4453
 11197  0315'                    u7360:
 11198  0315'                    l4449:
 11199                           
 11200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11201  0315' 302E               	movlw	46
 11202  0316' 0080'              	movwf	??_sprintf^(0+128)
 11203  0317' 0800'              	movf	sprintf@sp^(0+128),w
 11204  0318' 0084               	movwf	4
 11205  0319' 0800'              	movf	??_sprintf^(0+128),w
 11206  031A' 1783               	bsf	3,7	;select IRP bank2
 11207  031B' 0080               	movwf	0
 11208  031C'                    l4451:
 11209  031C' 3001               	movlw	1
 11210  031D' 0080'              	movwf	??_sprintf^(0+128)
 11211  031E' 0800'              	movf	??_sprintf^(0+128),w
 11212  031F' 0780'              	addwf	sprintf@sp^(0+128),f
 11213  0320'                    l4453:
 11214                           
 11215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11216  0320' 0800'              	movf	sprintf@c^(0+128),w
 11217  0321' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 11218  0326' 1283               	bcf	3,5	;RP0=0, select bank0
 11219  0327' 1303               	bcf	3,6	;RP1=0, select bank0
 11220  0328' 0828'              	movf	?_scale+3,w
 11221  0329' 1683               	bsf	3,5	;RP0=1, select bank1
 11222  032A' 1303               	bcf	3,6	;RP1=0, select bank1
 11223  032B' 0080'              	movwf	(_sprintf$1273+3)^(0+128)
 11224  032C' 1283               	bcf	3,5	;RP0=0, select bank0
 11225  032D' 1303               	bcf	3,6	;RP1=0, select bank0
 11226  032E' 0827'              	movf	?_scale+2,w
 11227  032F' 1683               	bsf	3,5	;RP0=1, select bank1
 11228  0330' 1303               	bcf	3,6	;RP1=0, select bank1
 11229  0331' 0080'              	movwf	(_sprintf$1273+2)^(0+128)
 11230  0332' 1283               	bcf	3,5	;RP0=0, select bank0
 11231  0333' 1303               	bcf	3,6	;RP1=0, select bank0
 11232  0334' 0826'              	movf	?_scale+1,w
 11233  0335' 1683               	bsf	3,5	;RP0=1, select bank1
 11234  0336' 1303               	bcf	3,6	;RP1=0, select bank1
 11235  0337' 0080'              	movwf	(_sprintf$1273+1)^(0+128)
 11236  0338' 1283               	bcf	3,5	;RP0=0, select bank0
 11237  0339' 1303               	bcf	3,6	;RP1=0, select bank0
 11238  033A' 0825'              	movf	?_scale,w
 11239  033B' 1683               	bsf	3,5	;RP0=1, select bank1
 11240  033C' 1303               	bcf	3,6	;RP1=0, select bank1
 11241  033D' 0080'              	movwf	_sprintf$1273^(0+128)
 11242  033E'                    l4455:
 11243                           
 11244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11245  033E' 0800'              	movf	(_sprintf$1273+3)^(0+128),w
 11246  033F' 1283               	bcf	3,5	;RP0=0, select bank0
 11247  0340' 1303               	bcf	3,6	;RP1=0, select bank0
 11248  0341' 0092'              	movwf	___flmul@a+3
 11249  0342' 1683               	bsf	3,5	;RP0=1, select bank1
 11250  0343' 1303               	bcf	3,6	;RP1=0, select bank1
 11251  0344' 0800'              	movf	(_sprintf$1273+2)^(0+128),w
 11252  0345' 1283               	bcf	3,5	;RP0=0, select bank0
 11253  0346' 1303               	bcf	3,6	;RP1=0, select bank0
 11254  0347' 0091'              	movwf	___flmul@a+2
 11255  0348' 1683               	bsf	3,5	;RP0=1, select bank1
 11256  0349' 1303               	bcf	3,6	;RP1=0, select bank1
 11257  034A' 0800'              	movf	(_sprintf$1273+1)^(0+128),w
 11258  034B' 1283               	bcf	3,5	;RP0=0, select bank0
 11259  034C' 1303               	bcf	3,6	;RP1=0, select bank0
 11260  034D' 0090'              	movwf	___flmul@a+1
 11261  034E' 1683               	bsf	3,5	;RP0=1, select bank1
 11262  034F' 1303               	bcf	3,6	;RP1=0, select bank1
 11263  0350' 0800'              	movf	_sprintf$1273^(0+128),w
 11264  0351' 1283               	bcf	3,5	;RP0=0, select bank0
 11265  0352' 1303               	bcf	3,6	;RP1=0, select bank0
 11266  0353' 008F'              	movwf	___flmul@a
 11267  0354' 1683               	bsf	3,5	;RP0=1, select bank1
 11268  0355' 1303               	bcf	3,6	;RP1=0, select bank1
 11269  0356' 0800'              	movf	(sprintf@fval+3)^(0+128),w
 11270  0357' 1283               	bcf	3,5	;RP0=0, select bank0
 11271  0358' 1303               	bcf	3,6	;RP1=0, select bank0
 11272  0359' 008E'              	movwf	___flmul@b+3
 11273  035A' 1683               	bsf	3,5	;RP0=1, select bank1
 11274  035B' 1303               	bcf	3,6	;RP1=0, select bank1
 11275  035C' 0800'              	movf	(sprintf@fval+2)^(0+128),w
 11276  035D' 1283               	bcf	3,5	;RP0=0, select bank0
 11277  035E' 1303               	bcf	3,6	;RP1=0, select bank0
 11278  035F' 008D'              	movwf	___flmul@b+2
 11279  0360' 1683               	bsf	3,5	;RP0=1, select bank1
 11280  0361' 1303               	bcf	3,6	;RP1=0, select bank1
 11281  0362' 0800'              	movf	(sprintf@fval+1)^(0+128),w
 11282  0363' 1283               	bcf	3,5	;RP0=0, select bank0
 11283  0364' 1303               	bcf	3,6	;RP1=0, select bank0
 11284  0365' 008C'              	movwf	___flmul@b+1
 11285  0366' 1683               	bsf	3,5	;RP0=1, select bank1
 11286  0367' 1303               	bcf	3,6	;RP1=0, select bank1
 11287  0368' 0800'              	movf	sprintf@fval^(0+128),w
 11288  0369' 1283               	bcf	3,5	;RP0=0, select bank0
 11289  036A' 1303               	bcf	3,6	;RP1=0, select bank0
 11290  036B' 008B'              	movwf	___flmul@b
 11291  036C' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
 11292  0371' 1283               	bcf	3,5	;RP0=0, select bank0
 11293  0372' 1303               	bcf	3,6	;RP1=0, select bank0
 11294  0373' 080E'              	movf	?___flmul+3,w
 11295  0374' 00BB'              	movwf	___fltol@f1+3
 11296  0375' 080D'              	movf	?___flmul+2,w
 11297  0376' 00BA'              	movwf	___fltol@f1+2
 11298  0377' 080C'              	movf	?___flmul+1,w
 11299  0378' 00B9'              	movwf	___fltol@f1+1
 11300  0379' 080B'              	movf	?___flmul,w
 11301  037A' 00B8'              	movwf	___fltol@f1
 11302  037B' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 11303  0380' 1283               	bcf	3,5	;RP0=0, select bank0
 11304  0381' 1303               	bcf	3,6	;RP1=0, select bank0
 11305  0382' 083B'              	movf	?___fltol+3,w
 11306  0383' 1683               	bsf	3,5	;RP0=1, select bank1
 11307  0384' 1303               	bcf	3,6	;RP1=0, select bank1
 11308  0385' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11309  0386' 1283               	bcf	3,5	;RP0=0, select bank0
 11310  0387' 1303               	bcf	3,6	;RP1=0, select bank0
 11311  0388' 083A'              	movf	?___fltol+2,w
 11312  0389' 1683               	bsf	3,5	;RP0=1, select bank1
 11313  038A' 1303               	bcf	3,6	;RP1=0, select bank1
 11314  038B' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11315  038C' 1283               	bcf	3,5	;RP0=0, select bank0
 11316  038D' 1303               	bcf	3,6	;RP1=0, select bank0
 11317  038E' 0839'              	movf	?___fltol+1,w
 11318  038F' 1683               	bsf	3,5	;RP0=1, select bank1
 11319  0390' 1303               	bcf	3,6	;RP1=0, select bank1
 11320  0391' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11321  0392' 1283               	bcf	3,5	;RP0=0, select bank0
 11322  0393' 1303               	bcf	3,6	;RP1=0, select bank0
 11323  0394' 0838'              	movf	?___fltol,w
 11324  0395' 1683               	bsf	3,5	;RP0=1, select bank1
 11325  0396' 1303               	bcf	3,6	;RP1=0, select bank1
 11326  0397' 0080'              	movwf	sprintf@val^(0+128)
 11327                           
 11328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11329  0398' 2800'              	goto	l4465
 11330  0399'                    l4457:
 11331                           
 11332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11333  0399' 0800'              	movf	sprintf@c^(0+128),w
 11334  039A' 0080'              	movwf	??_sprintf^(0+128)
 11335  039B' 3001               	movlw	1
 11336  039C'                    u7375:
 11337  039C' 1003               	clrc
 11338  039D' 0D80'              	rlf	??_sprintf^(0+128),f
 11339  039E' 3EFF               	addlw	-1
 11340  039F' 1D03               	skipz
 11341  03A0' 2800'              	goto	u7375
 11342  03A1' 1003               	clrc
 11343  03A2' 0D00'              	rlf	??_sprintf^(0+128),w
 11344  03A3' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11345  03A4' 0084               	movwf	4
 11346  03A5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11347  03AA' 1283               	bcf	3,5	;RP0=0, select bank0
 11348  03AB' 1303               	bcf	3,6	;RP1=0, select bank0
 11349  03AC' 0080'              	movwf	___lldiv@divisor
 11350  03AD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11351  03B2' 0081'              	movwf	___lldiv@divisor+1
 11352  03B3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11353  03B8' 0082'              	movwf	___lldiv@divisor+2
 11354  03B9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11355  03BE' 0083'              	movwf	___lldiv@divisor+3
 11356  03BF' 1683               	bsf	3,5	;RP0=1, select bank1
 11357  03C0' 1303               	bcf	3,6	;RP1=0, select bank1
 11358  03C1' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11359  03C2' 1283               	bcf	3,5	;RP0=0, select bank0
 11360  03C3' 1303               	bcf	3,6	;RP1=0, select bank0
 11361  03C4' 0087'              	movwf	___lldiv@dividend+3
 11362  03C5' 1683               	bsf	3,5	;RP0=1, select bank1
 11363  03C6' 1303               	bcf	3,6	;RP1=0, select bank1
 11364  03C7' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11365  03C8' 1283               	bcf	3,5	;RP0=0, select bank0
 11366  03C9' 1303               	bcf	3,6	;RP1=0, select bank0
 11367  03CA' 0086'              	movwf	___lldiv@dividend+2
 11368  03CB' 1683               	bsf	3,5	;RP0=1, select bank1
 11369  03CC' 1303               	bcf	3,6	;RP1=0, select bank1
 11370  03CD' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11371  03CE' 1283               	bcf	3,5	;RP0=0, select bank0
 11372  03CF' 1303               	bcf	3,6	;RP1=0, select bank0
 11373  03D0' 0085'              	movwf	___lldiv@dividend+1
 11374  03D1' 1683               	bsf	3,5	;RP0=1, select bank1
 11375  03D2' 1303               	bcf	3,6	;RP1=0, select bank1
 11376  03D3' 0800'              	movf	sprintf@val^(0+128),w
 11377  03D4' 1283               	bcf	3,5	;RP0=0, select bank0
 11378  03D5' 1303               	bcf	3,6	;RP1=0, select bank0
 11379  03D6' 0084'              	movwf	___lldiv@dividend
 11380  03D7' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11381  03DC' 1283               	bcf	3,5	;RP0=0, select bank0
 11382  03DD' 1303               	bcf	3,6	;RP1=0, select bank0
 11383  03DE' 0803'              	movf	?___lldiv+3,w
 11384  03DF' 1683               	bsf	3,5	;RP0=1, select bank1
 11385  03E0' 1303               	bcf	3,6	;RP1=0, select bank1
 11386  03E1' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11387  03E2' 1283               	bcf	3,5	;RP0=0, select bank0
 11388  03E3' 1303               	bcf	3,6	;RP1=0, select bank0
 11389  03E4' 0802'              	movf	?___lldiv+2,w
 11390  03E5' 1683               	bsf	3,5	;RP0=1, select bank1
 11391  03E6' 1303               	bcf	3,6	;RP1=0, select bank1
 11392  03E7' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11393  03E8' 1283               	bcf	3,5	;RP0=0, select bank0
 11394  03E9' 1303               	bcf	3,6	;RP1=0, select bank0
 11395  03EA' 0801'              	movf	?___lldiv+1,w
 11396  03EB' 1683               	bsf	3,5	;RP0=1, select bank1
 11397  03EC' 1303               	bcf	3,6	;RP1=0, select bank1
 11398  03ED' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11399  03EE' 1283               	bcf	3,5	;RP0=0, select bank0
 11400  03EF' 1303               	bcf	3,6	;RP1=0, select bank0
 11401  03F0' 0800'              	movf	?___lldiv,w
 11402  03F1' 1683               	bsf	3,5	;RP0=1, select bank1
 11403  03F2' 1303               	bcf	3,6	;RP1=0, select bank1
 11404  03F3' 0080'              	movwf	sprintf@tmpval^(0+128)
 11405  03F4'                    l4459:
 11406                           
 11407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11408  03F4' 3000               	movlw	0
 11409  03F5' 1283               	bcf	3,5	;RP0=0, select bank0
 11410  03F6' 1303               	bcf	3,6	;RP1=0, select bank0
 11411  03F7' 0090'              	movwf	___llmod@divisor+3
 11412  03F8' 3000               	movlw	0
 11413  03F9' 008F'              	movwf	___llmod@divisor+2
 11414  03FA' 3000               	movlw	0
 11415  03FB' 008E'              	movwf	___llmod@divisor+1
 11416  03FC' 300A               	movlw	10
 11417  03FD' 008D'              	movwf	___llmod@divisor
 11418  03FE' 1683               	bsf	3,5	;RP0=1, select bank1
 11419  03FF' 1303               	bcf	3,6	;RP1=0, select bank1
 11420  0400' 0800'              	movf	(sprintf@tmpval+3)^(0+128),w
 11421  0401' 1283               	bcf	3,5	;RP0=0, select bank0
 11422  0402' 1303               	bcf	3,6	;RP1=0, select bank0
 11423  0403' 0094'              	movwf	___llmod@dividend+3
 11424  0404' 1683               	bsf	3,5	;RP0=1, select bank1
 11425  0405' 1303               	bcf	3,6	;RP1=0, select bank1
 11426  0406' 0800'              	movf	(sprintf@tmpval+2)^(0+128),w
 11427  0407' 1283               	bcf	3,5	;RP0=0, select bank0
 11428  0408' 1303               	bcf	3,6	;RP1=0, select bank0
 11429  0409' 0093'              	movwf	___llmod@dividend+2
 11430  040A' 1683               	bsf	3,5	;RP0=1, select bank1
 11431  040B' 1303               	bcf	3,6	;RP1=0, select bank1
 11432  040C' 0800'              	movf	(sprintf@tmpval+1)^(0+128),w
 11433  040D' 1283               	bcf	3,5	;RP0=0, select bank0
 11434  040E' 1303               	bcf	3,6	;RP1=0, select bank0
 11435  040F' 0092'              	movwf	___llmod@dividend+1
 11436  0410' 1683               	bsf	3,5	;RP0=1, select bank1
 11437  0411' 1303               	bcf	3,6	;RP1=0, select bank1
 11438  0412' 0800'              	movf	sprintf@tmpval^(0+128),w
 11439  0413' 1283               	bcf	3,5	;RP0=0, select bank0
 11440  0414' 1303               	bcf	3,6	;RP1=0, select bank0
 11441  0415' 0091'              	movwf	___llmod@dividend
 11442  0416' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11443  041B' 1283               	bcf	3,5	;RP0=0, select bank0
 11444  041C' 1303               	bcf	3,6	;RP1=0, select bank0
 11445  041D' 0810'              	movf	?___llmod+3,w
 11446  041E' 1683               	bsf	3,5	;RP0=1, select bank1
 11447  041F' 1303               	bcf	3,6	;RP1=0, select bank1
 11448  0420' 0080'              	movwf	(sprintf@tmpval+3)^(0+128)
 11449  0421' 1283               	bcf	3,5	;RP0=0, select bank0
 11450  0422' 1303               	bcf	3,6	;RP1=0, select bank0
 11451  0423' 080F'              	movf	?___llmod+2,w
 11452  0424' 1683               	bsf	3,5	;RP0=1, select bank1
 11453  0425' 1303               	bcf	3,6	;RP1=0, select bank1
 11454  0426' 0080'              	movwf	(sprintf@tmpval+2)^(0+128)
 11455  0427' 1283               	bcf	3,5	;RP0=0, select bank0
 11456  0428' 1303               	bcf	3,6	;RP1=0, select bank0
 11457  0429' 080E'              	movf	?___llmod+1,w
 11458  042A' 1683               	bsf	3,5	;RP0=1, select bank1
 11459  042B' 1303               	bcf	3,6	;RP1=0, select bank1
 11460  042C' 0080'              	movwf	(sprintf@tmpval+1)^(0+128)
 11461  042D' 1283               	bcf	3,5	;RP0=0, select bank0
 11462  042E' 1303               	bcf	3,6	;RP1=0, select bank0
 11463  042F' 080D'              	movf	?___llmod,w
 11464  0430' 1683               	bsf	3,5	;RP0=1, select bank1
 11465  0431' 1303               	bcf	3,6	;RP1=0, select bank1
 11466  0432' 0080'              	movwf	sprintf@tmpval^(0+128)
 11467  0433'                    l4461:
 11468                           
 11469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11470  0433' 0800'              	movf	sprintf@tmpval^(0+128),w
 11471  0434' 3E30               	addlw	48
 11472  0435' 0080'              	movwf	??_sprintf^(0+128)
 11473  0436' 0800'              	movf	sprintf@sp^(0+128),w
 11474  0437' 0084               	movwf	4
 11475  0438' 0800'              	movf	??_sprintf^(0+128),w
 11476  0439' 1783               	bsf	3,7	;select IRP bank2
 11477  043A' 0080               	movwf	0
 11478  043B' 3001               	movlw	1
 11479  043C' 0080'              	movwf	??_sprintf^(0+128)
 11480  043D' 0800'              	movf	??_sprintf^(0+128),w
 11481  043E' 0780'              	addwf	sprintf@sp^(0+128),f
 11482  043F'                    l4463:
 11483                           
 11484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11485  043F' 0800'              	movf	sprintf@c^(0+128),w
 11486  0440' 0080'              	movwf	??_sprintf^(0+128)
 11487  0441' 3001               	movlw	1
 11488  0442'                    u7385:
 11489  0442' 1003               	clrc
 11490  0443' 0D80'              	rlf	??_sprintf^(0+128),f
 11491  0444' 3EFF               	addlw	-1
 11492  0445' 1D03               	skipz
 11493  0446' 2800'              	goto	u7385
 11494  0447' 1003               	clrc
 11495  0448' 0D00'              	rlf	??_sprintf^(0+128),w
 11496  0449' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11497  044A' 0084               	movwf	4
 11498  044B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11499  0450' 1283               	bcf	3,5	;RP0=0, select bank0
 11500  0451' 1303               	bcf	3,6	;RP1=0, select bank0
 11501  0452' 008D'              	movwf	___llmod@divisor
 11502  0453' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11503  0458' 008E'              	movwf	___llmod@divisor+1
 11504  0459' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11505  045E' 008F'              	movwf	___llmod@divisor+2
 11506  045F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11507  0464' 0090'              	movwf	___llmod@divisor+3
 11508  0465' 1683               	bsf	3,5	;RP0=1, select bank1
 11509  0466' 1303               	bcf	3,6	;RP1=0, select bank1
 11510  0467' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11511  0468' 1283               	bcf	3,5	;RP0=0, select bank0
 11512  0469' 1303               	bcf	3,6	;RP1=0, select bank0
 11513  046A' 0094'              	movwf	___llmod@dividend+3
 11514  046B' 1683               	bsf	3,5	;RP0=1, select bank1
 11515  046C' 1303               	bcf	3,6	;RP1=0, select bank1
 11516  046D' 0800'              	movf	(sprintf@val+2)^(0+128),w
 11517  046E' 1283               	bcf	3,5	;RP0=0, select bank0
 11518  046F' 1303               	bcf	3,6	;RP1=0, select bank0
 11519  0470' 0093'              	movwf	___llmod@dividend+2
 11520  0471' 1683               	bsf	3,5	;RP0=1, select bank1
 11521  0472' 1303               	bcf	3,6	;RP1=0, select bank1
 11522  0473' 0800'              	movf	(sprintf@val+1)^(0+128),w
 11523  0474' 1283               	bcf	3,5	;RP0=0, select bank0
 11524  0475' 1303               	bcf	3,6	;RP1=0, select bank0
 11525  0476' 0092'              	movwf	___llmod@dividend+1
 11526  0477' 1683               	bsf	3,5	;RP0=1, select bank1
 11527  0478' 1303               	bcf	3,6	;RP1=0, select bank1
 11528  0479' 0800'              	movf	sprintf@val^(0+128),w
 11529  047A' 1283               	bcf	3,5	;RP0=0, select bank0
 11530  047B' 1303               	bcf	3,6	;RP1=0, select bank0
 11531  047C' 0091'              	movwf	___llmod@dividend
 11532  047D' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11533  0482' 1283               	bcf	3,5	;RP0=0, select bank0
 11534  0483' 1303               	bcf	3,6	;RP1=0, select bank0
 11535  0484' 0810'              	movf	?___llmod+3,w
 11536  0485' 1683               	bsf	3,5	;RP0=1, select bank1
 11537  0486' 1303               	bcf	3,6	;RP1=0, select bank1
 11538  0487' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11539  0488' 1283               	bcf	3,5	;RP0=0, select bank0
 11540  0489' 1303               	bcf	3,6	;RP1=0, select bank0
 11541  048A' 080F'              	movf	?___llmod+2,w
 11542  048B' 1683               	bsf	3,5	;RP0=1, select bank1
 11543  048C' 1303               	bcf	3,6	;RP1=0, select bank1
 11544  048D' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11545  048E' 1283               	bcf	3,5	;RP0=0, select bank0
 11546  048F' 1303               	bcf	3,6	;RP1=0, select bank0
 11547  0490' 080E'              	movf	?___llmod+1,w
 11548  0491' 1683               	bsf	3,5	;RP0=1, select bank1
 11549  0492' 1303               	bcf	3,6	;RP1=0, select bank1
 11550  0493' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11551  0494' 1283               	bcf	3,5	;RP0=0, select bank0
 11552  0495' 1303               	bcf	3,6	;RP1=0, select bank0
 11553  0496' 080D'              	movf	?___llmod,w
 11554  0497' 1683               	bsf	3,5	;RP0=1, select bank1
 11555  0498' 1303               	bcf	3,6	;RP1=0, select bank1
 11556  0499' 0080'              	movwf	sprintf@val^(0+128)
 11557  049A'                    l4465:
 11558                           
 11559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11560  049A' 3001               	movlw	1
 11561  049B' 0280'              	subwf	sprintf@c^(0+128),f
 11562  049C' 0A00'              	incf	sprintf@c^(0+128),w
 11563  049D' 1D03               	btfss	3,2
 11564  049E' 2800'              	goto	u7391
 11565  049F' 2800'              	goto	u7390
 11566  04A0'                    u7391:
 11567  04A0' 2800'              	goto	l4457
 11568  04A1'                    u7390:
 11569  04A1' 2800'              	goto	l4473
 11570  04A2'                    l4467:
 11571                           
 11572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11573  04A2' 3030               	movlw	48
 11574  04A3' 0080'              	movwf	??_sprintf^(0+128)
 11575  04A4' 0800'              	movf	sprintf@sp^(0+128),w
 11576  04A5' 0084               	movwf	4
 11577  04A6' 0800'              	movf	??_sprintf^(0+128),w
 11578  04A7' 1783               	bsf	3,7	;select IRP bank2
 11579  04A8' 0080               	movwf	0
 11580  04A9'                    l4469:
 11581  04A9' 3001               	movlw	1
 11582  04AA' 0080'              	movwf	??_sprintf^(0+128)
 11583  04AB' 0800'              	movf	??_sprintf^(0+128),w
 11584  04AC' 0780'              	addwf	sprintf@sp^(0+128),f
 11585  04AD'                    l4471:
 11586                           
 11587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11588  04AD' 30FF               	movlw	255
 11589  04AE' 0780'              	addwf	sprintf@prec^(0+128),f
 11590  04AF' 1803               	skipnc
 11591  04B0' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 11592  04B1' 30FF               	movlw	255
 11593  04B2' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 11594  04B3'                    l4473:
 11595                           
 11596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11597  04B3' 0800'              	movf	sprintf@prec^(0+128),w
 11598  04B4' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 11599  04B5' 1D03               	btfss	3,2
 11600  04B6' 2800'              	goto	u7401
 11601  04B7' 2800'              	goto	u7400
 11602  04B8'                    u7401:
 11603  04B8' 2800'              	goto	l4467
 11604  04B9'                    u7400:
 11605  04B9' 2800'              	goto	l4553
 11606  04BA'                    l4475:
 11607                           
 11608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11609  04BA' 0800'              	movf	sprintf@ap^(0+128),w
 11610  04BB' 0084               	movwf	4
 11611  04BC' 1383               	bcf	3,7	;select IRP bank0
 11612  04BD' 0800               	movf	0,w
 11613  04BE' 0080'              	movwf	??_sprintf^(0+128)
 11614  04BF' 0A84               	incf	4,f
 11615  04C0' 0800               	movf	0,w
 11616  04C1' 0081'              	movwf	(??_sprintf^(0+128)+1)
 11617  04C2' 0800'              	movf	??_sprintf^(0+128),w
 11618  04C3' 0080'              	movwf	sprintf@val^(0+128)
 11619  04C4' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11620  04C5' 0080'              	movwf	(sprintf@val+1)^(0+128)
 11621  04C6' 3000               	movlw	0
 11622  04C7' 1B80'              	btfsc	(sprintf@val+1)^(0+128),7
 11623  04C8' 30FF               	movlw	255
 11624  04C9' 0080'              	movwf	(sprintf@val+2)^(0+128)
 11625  04CA' 0080'              	movwf	(sprintf@val+3)^(0+128)
 11626  04CB'                    l4477:
 11627  04CB' 3002               	movlw	2
 11628  04CC' 0080'              	movwf	??_sprintf^(0+128)
 11629  04CD' 0800'              	movf	??_sprintf^(0+128),w
 11630  04CE' 0780'              	addwf	sprintf@ap^(0+128),f
 11631  04CF'                    l4479:
 11632                           
 11633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11634  04CF' 1F80'              	btfss	(sprintf@val+3)^(0+128),7
 11635  04D0' 2800'              	goto	u7411
 11636  04D1' 2800'              	goto	u7410
 11637  04D2'                    u7411:
 11638  04D2' 2800'              	goto	l4485
 11639  04D3'                    u7410:
 11640  04D3'                    l4481:
 11641                           
 11642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11643  04D3' 3003               	movlw	3
 11644  04D4' 0480'              	iorwf	sprintf@flag^(0+128),f
 11645  04D5' 3000               	movlw	0
 11646  04D6' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
 11647  04D7'                    l4483:
 11648                           
 11649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11650  04D7' 0980'              	comf	sprintf@val^(0+128),f
 11651  04D8' 0980'              	comf	(sprintf@val+1)^(0+128),f
 11652  04D9' 0980'              	comf	(sprintf@val+2)^(0+128),f
 11653  04DA' 0980'              	comf	(sprintf@val+3)^(0+128),f
 11654  04DB' 0A80'              	incf	sprintf@val^(0+128),f
 11655  04DC' 1903               	skipnz
 11656  04DD' 0A80'              	incf	(sprintf@val+1)^(0+128),f
 11657  04DE' 1903               	skipnz
 11658  04DF' 0A80'              	incf	(sprintf@val+2)^(0+128),f
 11659  04E0' 1903               	skipnz
 11660  04E1' 0A80'              	incf	(sprintf@val+3)^(0+128),f
 11661  04E2'                    l4485:
 11662                           
 11663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11664  04E2' 0800'              	movf	sprintf@prec^(0+128),w
 11665  04E3' 0400'              	iorwf	(sprintf@prec+1)^(0+128),w
 11666  04E4' 1D03               	btfss	3,2
 11667  04E5' 2800'              	goto	u7421
 11668  04E6' 2800'              	goto	u7420
 11669  04E7'                    u7421:
 11670  04E7' 2800'              	goto	l4491
 11671  04E8'                    u7420:
 11672  04E8'                    l4487:
 11673  04E8' 0800'              	movf	(sprintf@val+3)^(0+128),w
 11674  04E9' 0400'              	iorwf	(sprintf@val+2)^(0+128),w
 11675  04EA' 0400'              	iorwf	(sprintf@val+1)^(0+128),w
 11676  04EB' 0400'              	iorwf	sprintf@val^(0+128),w
 11677  04EC' 1D03               	skipz
 11678  04ED' 2800'              	goto	u7431
 11679  04EE' 2800'              	goto	u7430
 11680  04EF'                    u7431:
 11681  04EF' 2800'              	goto	l4491
 11682  04F0'                    u7430:
 11683  04F0'                    l4489:
 11684                           
 11685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11686  04F0' 3001               	movlw	1
 11687  04F1' 0780'              	addwf	sprintf@prec^(0+128),f
 11688  04F2' 1803               	skipnc
 11689  04F3' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 11690  04F4' 3000               	movlw	0
 11691  04F5' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 11692  04F6'                    l4491:
 11693                           
 11694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11695  04F6' 0180'              	clrf	sprintf@c^(0+128)
 11696  04F7' 0A80'              	incf	sprintf@c^(0+128),f
 11697  04F8'                    l4497:
 11698                           
 11699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11700  04F8' 0800'              	movf	sprintf@c^(0+128),w
 11701  04F9' 0080'              	movwf	??_sprintf^(0+128)
 11702  04FA' 3001               	movlw	1
 11703  04FB'                    u7445:
 11704  04FB' 1003               	clrc
 11705  04FC' 0D80'              	rlf	??_sprintf^(0+128),f
 11706  04FD' 3EFF               	addlw	-1
 11707  04FE' 1D03               	skipz
 11708  04FF' 2800'              	goto	u7445
 11709  0500' 1003               	clrc
 11710  0501' 0D00'              	rlf	??_sprintf^(0+128),w
 11711  0502' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11712  0503' 0084               	movwf	4
 11713  0504' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11714  0509' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11715  050A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11716  050F' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 11717  0510' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11718  0515' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 11719  0516' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11720  051B' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 11721  051C' 0800'              	movf	(??_sprintf+4)^(0+128),w
 11722  051D' 0200'              	subwf	(sprintf@val+3)^(0+128),w
 11723  051E' 1D03               	skipz
 11724  051F' 2800'              	goto	u7455
 11725  0520' 0800'              	movf	(??_sprintf+3)^(0+128),w
 11726  0521' 0200'              	subwf	(sprintf@val+2)^(0+128),w
 11727  0522' 1D03               	skipz
 11728  0523' 2800'              	goto	u7455
 11729  0524' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11730  0525' 0200'              	subwf	(sprintf@val+1)^(0+128),w
 11731  0526' 1D03               	skipz
 11732  0527' 2800'              	goto	u7455
 11733  0528' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11734  0529' 0200'              	subwf	sprintf@val^(0+128),w
 11735  052A'                    u7455:
 11736  052A' 1803               	skipnc
 11737  052B' 2800'              	goto	u7451
 11738  052C' 2800'              	goto	u7450
 11739  052D'                    u7451:
 11740  052D' 2800'              	goto	l4501
 11741  052E'                    u7450:
 11742  052E' 2800'              	goto	l4503
 11743  052F'                    l4501:
 11744  052F' 3001               	movlw	1
 11745  0530' 0080'              	movwf	??_sprintf^(0+128)
 11746  0531' 0800'              	movf	??_sprintf^(0+128),w
 11747  0532' 0780'              	addwf	sprintf@c^(0+128),f
 11748  0533' 300A               	movlw	10
 11749  0534' 0600'              	xorwf	sprintf@c^(0+128),w
 11750  0535' 1D03               	btfss	3,2
 11751  0536' 2800'              	goto	u7461
 11752  0537' 2800'              	goto	u7460
 11753  0538'                    u7461:
 11754  0538' 2800'              	goto	l4497
 11755  0539'                    u7460:
 11756  0539'                    l4503:
 11757                           
 11758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11759  0539' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11760  053A' 3A80               	xorlw	128
 11761  053B' 3C80               	sublw	128
 11762  053C' 1D03               	skipz
 11763  053D' 2800'              	goto	u7475
 11764  053E' 0800'              	movf	sprintf@prec^(0+128),w
 11765  053F' 0200'              	subwf	sprintf@c^(0+128),w
 11766  0540'                    u7475:
 11767  0540' 1803               	skipnc
 11768  0541' 2800'              	goto	u7471
 11769  0542' 2800'              	goto	u7470
 11770  0543'                    u7471:
 11771  0543' 2800'              	goto	l4507
 11772  0544'                    u7470:
 11773  0544'                    l4505:
 11774                           
 11775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11776  0544' 1683               	bsf	3,5	;RP0=1, select bank1
 11777  0545' 1303               	bcf	3,6	;RP1=0, select bank1
 11778  0546' 0800'              	movf	sprintf@prec^(0+128),w
 11779  0547' 0080'              	movwf	??_sprintf^(0+128)
 11780  0548' 0800'              	movf	??_sprintf^(0+128),w
 11781  0549' 0080'              	movwf	sprintf@c^(0+128)
 11782  054A' 2800'              	goto	l4511
 11783  054B'                    l4507:
 11784  054B' 1683               	bsf	3,5	;RP0=1, select bank1
 11785  054C' 1303               	bcf	3,6	;RP1=0, select bank1
 11786  054D' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11787  054E' 3A80               	xorlw	128
 11788  054F' 0080'              	movwf	??_sprintf^(0+128)
 11789  0550' 3080               	movlw	128
 11790  0551' 0200'              	subwf	??_sprintf^(0+128),w
 11791  0552' 1D03               	skipz
 11792  0553' 2800'              	goto	u7485
 11793  0554' 0800'              	movf	sprintf@c^(0+128),w
 11794  0555' 0200'              	subwf	sprintf@prec^(0+128),w
 11795  0556'                    u7485:
 11796  0556' 1803               	skipnc
 11797  0557' 2800'              	goto	u7481
 11798  0558' 2800'              	goto	u7480
 11799  0559'                    u7481:
 11800  0559' 2800'              	goto	l4511
 11801  055A'                    u7480:
 11802  055A'                    l4509:
 11803                           
 11804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11805  055A' 1683               	bsf	3,5	;RP0=1, select bank1
 11806  055B' 1303               	bcf	3,6	;RP1=0, select bank1
 11807  055C' 0800'              	movf	sprintf@c^(0+128),w
 11808  055D' 0080'              	movwf	??_sprintf^(0+128)
 11809  055E' 0181'              	clrf	(??_sprintf^(0+128)+1)
 11810  055F' 0800'              	movf	??_sprintf^(0+128),w
 11811  0560' 0080'              	movwf	sprintf@prec^(0+128)
 11812  0561' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11813  0562' 0080'              	movwf	(sprintf@prec+1)^(0+128)
 11814  0563'                    l4511:
 11815                           
 11816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11817  0563' 1683               	bsf	3,5	;RP0=1, select bank1
 11818  0564' 1303               	bcf	3,6	;RP1=0, select bank1
 11819  0565' 0800'              	movf	sprintf@width^(0+128),w
 11820  0566' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 11821  0567' 1903               	btfsc	3,2
 11822  0568' 2800'              	goto	u7491
 11823  0569' 2800'              	goto	u7490
 11824  056A'                    u7491:
 11825  056A' 2800'              	goto	l4517
 11826  056B'                    u7490:
 11827  056B'                    l4513:
 11828  056B' 3003               	movlw	3
 11829  056C' 0500'              	andwf	sprintf@flag^(0+128),w
 11830  056D' 0080'              	movwf	??_sprintf^(0+128)
 11831  056E' 3000               	movlw	0
 11832  056F' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 11833  0570' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11834  0571' 0800'              	movf	??_sprintf^(0+128),w
 11835  0572' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11836  0573' 1903               	btfsc	3,2
 11837  0574' 2800'              	goto	u7501
 11838  0575' 2800'              	goto	u7500
 11839  0576'                    u7501:
 11840  0576' 2800'              	goto	l4517
 11841  0577'                    u7500:
 11842  0577'                    l4515:
 11843                           
 11844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11845  0577' 30FF               	movlw	255
 11846  0578' 0780'              	addwf	sprintf@width^(0+128),f
 11847  0579' 1803               	skipnc
 11848  057A' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 11849  057B' 30FF               	movlw	255
 11850  057C' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 11851  057D'                    l4517:
 11852                           
 11853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11854  057D' 1F00'              	btfss	(sprintf@flag+1)^(0+128),6
 11855  057E' 2800'              	goto	u7511
 11856  057F' 2800'              	goto	u7510
 11857  0580'                    u7511:
 11858  0580' 2800'              	goto	l4525
 11859  0581'                    u7510:
 11860  0581'                    l4519:
 11861                           
 11862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11863  0581' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11864  0582' 3A80               	xorlw	128
 11865  0583' 0080'              	movwf	??_sprintf^(0+128)
 11866  0584' 0800'              	movf	(sprintf@width+1)^(0+128),w
 11867  0585' 3A80               	xorlw	128
 11868  0586' 0200'              	subwf	??_sprintf^(0+128),w
 11869  0587' 1D03               	skipz
 11870  0588' 2800'              	goto	u7525
 11871  0589' 0800'              	movf	sprintf@width^(0+128),w
 11872  058A' 0200'              	subwf	sprintf@prec^(0+128),w
 11873  058B'                    u7525:
 11874  058B' 1803               	skipnc
 11875  058C' 2800'              	goto	u7521
 11876  058D' 2800'              	goto	u7520
 11877  058E'                    u7521:
 11878  058E' 2800'              	goto	l4523
 11879  058F'                    u7520:
 11880  058F'                    l4521:
 11881                           
 11882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11883  058F' 1683               	bsf	3,5	;RP0=1, select bank1
 11884  0590' 1303               	bcf	3,6	;RP1=0, select bank1
 11885  0591' 0800'              	movf	sprintf@prec^(0+128),w
 11886  0592' 0280'              	subwf	sprintf@width^(0+128),f
 11887  0593' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 11888  0594' 1C03               	skipc
 11889  0595' 0380'              	decf	(sprintf@width+1)^(0+128),f
 11890  0596' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 11891  0597' 2800'              	goto	l4525
 11892  0598'                    l4523:
 11893                           
 11894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11895  0598' 1683               	bsf	3,5	;RP0=1, select bank1
 11896  0599' 1303               	bcf	3,6	;RP1=0, select bank1
 11897  059A' 0180'              	clrf	sprintf@width^(0+128)
 11898  059B' 0180'              	clrf	(sprintf@width+1)^(0+128)
 11899  059C'                    l4525:
 11900                           
 11901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11902  059C' 0800'              	movf	(sprintf@width+1)^(0+128),w
 11903  059D' 3A80               	xorlw	128
 11904  059E' 3C80               	sublw	128
 11905  059F' 1D03               	skipz
 11906  05A0' 2800'              	goto	u7535
 11907  05A1' 0800'              	movf	sprintf@width^(0+128),w
 11908  05A2' 0200'              	subwf	sprintf@c^(0+128),w
 11909  05A3'                    u7535:
 11910  05A3' 1803               	skipnc
 11911  05A4' 2800'              	goto	u7531
 11912  05A5' 2800'              	goto	u7530
 11913  05A6'                    u7531:
 11914  05A6' 2800'              	goto	l4529
 11915  05A7'                    u7530:
 11916  05A7'                    l4527:
 11917                           
 11918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11919  05A7' 1683               	bsf	3,5	;RP0=1, select bank1
 11920  05A8' 1303               	bcf	3,6	;RP1=0, select bank1
 11921  05A9' 0800'              	movf	sprintf@c^(0+128),w
 11922  05AA' 0080'              	movwf	??_sprintf^(0+128)
 11923  05AB' 0181'              	clrf	(??_sprintf^(0+128)+1)
 11924  05AC' 0800'              	movf	??_sprintf^(0+128),w
 11925  05AD' 0280'              	subwf	sprintf@width^(0+128),f
 11926  05AE' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11927  05AF' 1C03               	skipc
 11928  05B0' 0380'              	decf	(sprintf@width+1)^(0+128),f
 11929  05B1' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 11930  05B2' 2800'              	goto	l4531
 11931  05B3'                    l4529:
 11932                           
 11933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11934  05B3' 1683               	bsf	3,5	;RP0=1, select bank1
 11935  05B4' 1303               	bcf	3,6	;RP1=0, select bank1
 11936  05B5' 0180'              	clrf	sprintf@width^(0+128)
 11937  05B6' 0180'              	clrf	(sprintf@width+1)^(0+128)
 11938  05B7'                    l4531:
 11939                           
 11940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11941  05B7' 0800'              	movf	sprintf@width^(0+128),w
 11942  05B8' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 11943  05B9' 1903               	btfsc	3,2
 11944  05BA' 2800'              	goto	u7541
 11945  05BB' 2800'              	goto	u7540
 11946  05BC'                    u7541:
 11947  05BC' 2800'              	goto	l4539
 11948  05BD'                    u7540:
 11949  05BD'                    l4533:
 11950                           
 11951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11952  05BD' 3020               	movlw	32
 11953  05BE' 0080'              	movwf	??_sprintf^(0+128)
 11954  05BF' 0800'              	movf	sprintf@sp^(0+128),w
 11955  05C0' 0084               	movwf	4
 11956  05C1' 0800'              	movf	??_sprintf^(0+128),w
 11957  05C2' 1783               	bsf	3,7	;select IRP bank2
 11958  05C3' 0080               	movwf	0
 11959  05C4'                    l4535:
 11960  05C4' 3001               	movlw	1
 11961  05C5' 0080'              	movwf	??_sprintf^(0+128)
 11962  05C6' 0800'              	movf	??_sprintf^(0+128),w
 11963  05C7' 0780'              	addwf	sprintf@sp^(0+128),f
 11964  05C8'                    l4537:
 11965  05C8' 30FF               	movlw	255
 11966  05C9' 0780'              	addwf	sprintf@width^(0+128),f
 11967  05CA' 1803               	skipnc
 11968  05CB' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 11969  05CC' 30FF               	movlw	255
 11970  05CD' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 11971  05CE' 0800'              	movf	sprintf@width^(0+128),w
 11972  05CF' 0400'              	iorwf	(sprintf@width+1)^(0+128),w
 11973  05D0' 1D03               	btfss	3,2
 11974  05D1' 2800'              	goto	u7551
 11975  05D2' 2800'              	goto	u7550
 11976  05D3'                    u7551:
 11977  05D3' 2800'              	goto	l4533
 11978  05D4'                    u7550:
 11979  05D4'                    l4539:
 11980                           
 11981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11982  05D4' 3003               	movlw	3
 11983  05D5' 0500'              	andwf	sprintf@flag^(0+128),w
 11984  05D6' 0080'              	movwf	??_sprintf^(0+128)
 11985  05D7' 3000               	movlw	0
 11986  05D8' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 11987  05D9' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11988  05DA' 0800'              	movf	??_sprintf^(0+128),w
 11989  05DB' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11990  05DC' 1903               	btfsc	3,2
 11991  05DD' 2800'              	goto	u7561
 11992  05DE' 2800'              	goto	u7560
 11993  05DF'                    u7561:
 11994  05DF' 2800'              	goto	l4551
 11995  05E0'                    u7560:
 11996  05E0'                    l4541:
 11997                           
 11998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11999  05E0' 302D               	movlw	45
 12000  05E1' 0080'              	movwf	??_sprintf^(0+128)
 12001  05E2' 0800'              	movf	sprintf@sp^(0+128),w
 12002  05E3' 0084               	movwf	4
 12003  05E4' 0800'              	movf	??_sprintf^(0+128),w
 12004  05E5' 1783               	bsf	3,7	;select IRP bank2
 12005  05E6' 0080               	movwf	0
 12006  05E7'                    l4543:
 12007  05E7' 3001               	movlw	1
 12008  05E8' 0080'              	movwf	??_sprintf^(0+128)
 12009  05E9' 0800'              	movf	??_sprintf^(0+128),w
 12010  05EA' 0780'              	addwf	sprintf@sp^(0+128),f
 12011  05EB' 2800'              	goto	l4551
 12012  05EC'                    l4545:
 12013                           
 12014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 12015  05EC' 3000               	movlw	0
 12016  05ED' 1283               	bcf	3,5	;RP0=0, select bank0
 12017  05EE' 1303               	bcf	3,6	;RP1=0, select bank0
 12018  05EF' 0090'              	movwf	___llmod@divisor+3
 12019  05F0' 3000               	movlw	0
 12020  05F1' 008F'              	movwf	___llmod@divisor+2
 12021  05F2' 3000               	movlw	0
 12022  05F3' 008E'              	movwf	___llmod@divisor+1
 12023  05F4' 300A               	movlw	10
 12024  05F5' 008D'              	movwf	___llmod@divisor
 12025  05F6' 1683               	bsf	3,5	;RP0=1, select bank1
 12026  05F7' 1303               	bcf	3,6	;RP1=0, select bank1
 12027  05F8' 0800'              	movf	sprintf@prec^(0+128),w
 12028  05F9' 0080'              	movwf	??_sprintf^(0+128)
 12029  05FA' 3001               	movlw	1
 12030  05FB'                    u7575:
 12031  05FB' 1003               	clrc
 12032  05FC' 0D80'              	rlf	??_sprintf^(0+128),f
 12033  05FD' 3EFF               	addlw	-1
 12034  05FE' 1D03               	skipz
 12035  05FF' 2800'              	goto	u7575
 12036  0600' 1003               	clrc
 12037  0601' 0D00'              	rlf	??_sprintf^(0+128),w
 12038  0602' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12039  0603' 0084               	movwf	4
 12040  0604' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12041  0609' 1283               	bcf	3,5	;RP0=0, select bank0
 12042  060A' 1303               	bcf	3,6	;RP1=0, select bank0
 12043  060B' 0080'              	movwf	___lldiv@divisor
 12044  060C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12045  0611' 0081'              	movwf	___lldiv@divisor+1
 12046  0612' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12047  0617' 0082'              	movwf	___lldiv@divisor+2
 12048  0618' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12049  061D' 0083'              	movwf	___lldiv@divisor+3
 12050  061E' 1683               	bsf	3,5	;RP0=1, select bank1
 12051  061F' 1303               	bcf	3,6	;RP1=0, select bank1
 12052  0620' 0800'              	movf	(sprintf@val+3)^(0+128),w
 12053  0621' 1283               	bcf	3,5	;RP0=0, select bank0
 12054  0622' 1303               	bcf	3,6	;RP1=0, select bank0
 12055  0623' 0087'              	movwf	___lldiv@dividend+3
 12056  0624' 1683               	bsf	3,5	;RP0=1, select bank1
 12057  0625' 1303               	bcf	3,6	;RP1=0, select bank1
 12058  0626' 0800'              	movf	(sprintf@val+2)^(0+128),w
 12059  0627' 1283               	bcf	3,5	;RP0=0, select bank0
 12060  0628' 1303               	bcf	3,6	;RP1=0, select bank0
 12061  0629' 0086'              	movwf	___lldiv@dividend+2
 12062  062A' 1683               	bsf	3,5	;RP0=1, select bank1
 12063  062B' 1303               	bcf	3,6	;RP1=0, select bank1
 12064  062C' 0800'              	movf	(sprintf@val+1)^(0+128),w
 12065  062D' 1283               	bcf	3,5	;RP0=0, select bank0
 12066  062E' 1303               	bcf	3,6	;RP1=0, select bank0
 12067  062F' 0085'              	movwf	___lldiv@dividend+1
 12068  0630' 1683               	bsf	3,5	;RP0=1, select bank1
 12069  0631' 1303               	bcf	3,6	;RP1=0, select bank1
 12070  0632' 0800'              	movf	sprintf@val^(0+128),w
 12071  0633' 1283               	bcf	3,5	;RP0=0, select bank0
 12072  0634' 1303               	bcf	3,6	;RP1=0, select bank0
 12073  0635' 0084'              	movwf	___lldiv@dividend
 12074  0636' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 12075  063B' 1283               	bcf	3,5	;RP0=0, select bank0
 12076  063C' 1303               	bcf	3,6	;RP1=0, select bank0
 12077  063D' 0803'              	movf	?___lldiv+3,w
 12078  063E' 0094'              	movwf	___llmod@dividend+3
 12079  063F' 0802'              	movf	?___lldiv+2,w
 12080  0640' 0093'              	movwf	___llmod@dividend+2
 12081  0641' 0801'              	movf	?___lldiv+1,w
 12082  0642' 0092'              	movwf	___llmod@dividend+1
 12083  0643' 0800'              	movf	?___lldiv,w
 12084  0644' 0091'              	movwf	___llmod@dividend
 12085  0645' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 12086  064A' 1283               	bcf	3,5	;RP0=0, select bank0
 12087  064B' 1303               	bcf	3,6	;RP1=0, select bank0
 12088  064C' 080D'              	movf	?___llmod,w
 12089  064D' 3E30               	addlw	48
 12090  064E' 1683               	bsf	3,5	;RP0=1, select bank1
 12091  064F' 1303               	bcf	3,6	;RP1=0, select bank1
 12092  0650' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12093  0651' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12094  0652' 0080'              	movwf	sprintf@c^(0+128)
 12095  0653'                    l4547:
 12096                           
 12097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 12098  0653' 0800'              	movf	sprintf@c^(0+128),w
 12099  0654' 0080'              	movwf	??_sprintf^(0+128)
 12100  0655' 0800'              	movf	sprintf@sp^(0+128),w
 12101  0656' 0084               	movwf	4
 12102  0657' 0800'              	movf	??_sprintf^(0+128),w
 12103  0658' 1783               	bsf	3,7	;select IRP bank2
 12104  0659' 0080               	movwf	0
 12105  065A' 2800'              	goto	l4543
 12106  065B'                    l4551:
 12107                           
 12108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 12109  065B' 30FF               	movlw	255
 12110  065C' 0780'              	addwf	sprintf@prec^(0+128),f
 12111  065D' 1803               	skipnc
 12112  065E' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 12113  065F' 30FF               	movlw	255
 12114  0660' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 12115  0661' 0A00'              	incf	sprintf@prec^(0+128),w
 12116  0662' 1D03               	skipz
 12117  0663' 2800'              	goto	u7581
 12118  0664' 0A00'              	incf	(sprintf@prec+1)^(0+128),w
 12119  0665' 1D03               	btfss	3,2
 12120  0666' 2800'              	goto	u7581
 12121  0667' 2800'              	goto	u7580
 12122  0668'                    u7581:
 12123  0668' 2800'              	goto	l4545
 12124  0669'                    u7580:
 12125  0669'                    l4553:
 12126                           
 12127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 12128  0669' 3001               	movlw	1
 12129  066A' 0780'              	addwf	sprintf@f^(0+128),f
 12130  066B' 30FF               	movlw	-1
 12131  066C' 0700'              	addwf	sprintf@f^(0+128),w
 12132  066D' 0084               	movwf	4
 12133  066E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12134  0673' 0080'              	movwf	??_sprintf^(0+128)
 12135  0674' 0800'              	movf	??_sprintf^(0+128),w
 12136  0675' 0080'              	movwf	sprintf@c^(0+128)
 12137  0676' 0800'              	movf	sprintf@c^(0+128),w
 12138  0677' 1D03               	btfss	3,2
 12139  0678' 2800'              	goto	u7591
 12140  0679' 2800'              	goto	u7590
 12141  067A'                    u7591:
 12142  067A' 120A' 118A' 2800'  	goto	l4273
 12143  067D'                    u7590:
 12144  067D'                    l4555:
 12145                           
 12146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12147  067D' 0800'              	movf	sprintf@sp^(0+128),w
 12148  067E' 0084               	movwf	4
 12149  067F' 1783               	bsf	3,7	;select IRP bank2
 12150  0680' 0180               	clrf	0
 12151  0681'                    l418:
 12152  0681' 0008               	return
 12153  0682'                    __end_of_sprintf:

Data Sizes:
    Strings     38
    Constant    144
    Data        2
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      78
    BANK1            80     48      70
    BANK3            96      0      50
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_5(CODE[3]), STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> s(BANK3[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 50
		 -> STR_4(CODE[4]), s(BANK3[50]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flmul->___awmod
    ___flmul->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversor2->___flmul
    _conversor->___flmul
    ___flmul->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   49992
                                             45 BANK1      3     3      0
                      _Config_USARTT
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _conversor
                         _conversor2
                            _recibir
                              _setup
                            _spiInit
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   37161
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8544
                                             37 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6600
                                             37 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              4 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             56 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             57 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversor2                                           9     5      4    5474
                                             37 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _conversor                                            9     5      4    5474
                                             37 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     642
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     704
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_USARTT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_USARTT
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conversor
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _conversor2
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _recibir
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     30      46       7       87.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D1      12        0.0%
ABS                  0      0      D1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 00:46:04 2021

                        _k 0013                          _p 0000                          _s 0000  
                        _v 000C                          _x 0004                          pc 0002  
              _SSPSTATbits 0094                         l96 0015                         l99 005B  
             ___awdiv@sign 0008                         _vv 0008                         fsr 0004  
      ___wmul@multiplicand 0005        __Umul8_16@word_mpld 0002                        l102 005B  
                      l200 0015                        l122 0019                        l131 0025  
                      l203 0000                        l125 000C                        l134 0046  
                      l206 0006                        l119 0005                        l143 0045  
                      l137 001A                        l217 0008                        l209 0005  
                      l162 0010                        l422 0010                        l326 0362  
                      l183 000A                        l319 020C                        l424 002A  
                      l610 004F                        l418 0681                        l603 00B0  
                      l348 00C7                        l613 001E                        l621 000A  
                      l381 02C3                        l199 0010                        l608 001E  
                      l616 008A                        l632 0066                        l640 002E  
                      l609 003A                        l617 00A3                        l625 007B  
                      l458 0067                        l650 00AF                        l635 007B  
                      l643 007F                        l388 0307                        l902 0085  
                      l903 0091                        l639 00BC                        l575 0068  
                      l592 00BD                        l728 0045                        l753 010A  
                      l593 0022                        l770 01D5                        l762 0287  
                      l738 003B                        l851 02CC                        l755 00E1  
                      l780 021B                        l596 0080                        l588 005A  
                      l845 0360                        l749 0063                        l909 0011  
                      l774 01F9                        l678 0055                        l791 027B  
                      l783 0259                        l864 0016                        l792 0287  
                      l857 0354                        l866 0028                        l891 00BB  
                      l795 004F                        l895 0069                        l889 0024  
                      _ISR 0000                        fsr0 0004                        indf 0000  
             ___awmod@sign 0001               ___flmul@aexp 001D               ___flmul@bexp 001E  
             ___flmul@sign 0018               ___flmul@temp 0023               ___flmul@prod 001F  
                     ?_ISR 0000               ___fltol@exp1 0042                       l2401 000C  
                     l4001 001C                       l2403 0010                       l3211 0004  
                     l4011 0044                       l2405 001F                       l4101 0004  
                     l4021 0070                       l4013 0046                       l2407 0024  
                     l4103 0008                       l4023 0071                       l4015 004F  
                     l4007 002F                       l4201 0035                       l3145 0000  
                     l2601 0085                       l3209 0000                       l3161 002B  
                     l3153 0000                       l4121 0026                       l4113 0000  
                     l4105 0017                       l4041 00A4                       l4033 008B  
                     l4025 0079                       l4017 0058                       l4009 0035  
                     l4211 0060                       l4203 003A                       l3147 0008  
                     l2611 0099                       l2603 0089                       l3163 002C  
                     l3155 000D                       l4131 0059                       l4123 002F  
                     l4115 0012                       l4107 001E                       l4043 00B4  
                     l4027 0083                       l4035 009D                       l4019 0066  
                     l4221 0093                       l4213 0070                       l4205 0047  
                     l3261 0003                       l3333 0000                       l4141 0032  
                     l3149 000A                       l2701 020E                       l2613 009D  
                     l2605 008D                       l2621 00AD                       l3165 0034  
                     l4125 0041                       l4117 0015                       l4133 005F  
                     l4109 0024                       l4061 002B                       l4053 0016  
                     l4301 0086                       l4223 00A9                       l4215 007B  
                     l4207 004E                       l3271 000E                       l3263 0005  
                     l3335 0005                       l4143 004C                       l4151 0016  
                     l2711 0225                       l2703 0212                       l2631 00F0  
                     l2623 00AE                       l2615 00A1                       l2607 0091  
                     l2551 0012                       l2543 0000                       l3183 005B  
                     l3175 0042                       l3167 0036                       l3159 0016  
                     l4127 004F                       l4119 0022                       l4071 0062  
                     l4063 003C                       l4047 0000                       l4311 00C5  
                     l4303 009B                       l4241 0027                       l4233 0000  
                     l2801 015D                       l4225 00AE                       l4217 007F  
                     l4209 0052                       l3273 000F                       l3265 0006  
                     l3281 0008                       l4145 004E                       l4137 0000  
                     l4161 0066                       l4153 0032                       l2721 0263  
                     l2713 0233                       l2705 0218                       l2641 010E  
                     l2633 00F4                       l2625 00C5                       l2617 00A5  
                     l2609 0095                       l2553 0017                       l2561 0027  
                     l2545 0007                       l3185 006B                       l3169 003A  
                     l3177 0054                       l4129 0050                       l4073 0070  
                     l4065 003E                       l4049 000D                       l4321 00FD  
                     l4305 00AE                       l3291 0008                       l4243 0000  
                     l4235 0006                       l4251 0014                       l2811 01ED  
                     l2803 016D                       l4227 00B2                       l4219 0089  
                     l3275 0010                       l3267 0007                       l3259 0000  
                     l3283 000A                       l4139 0016                       l4163 00A0  
                     l4155 003A                       l2731 0277                       l2723 026B  
                     l2715 0237                       l2651 0137                       l2643 0113  
                     l2635 00F5                       l2627 00E5                       l2619 00A9  
                     l2571 0041                       l2563 002F                       l2555 001C  
                     l2547 000D                       l3187 0070                       l4171 000A  
                     l4075 0071                       l4067 0047                       l4059 0023  
                     l4411 01E1                       l4403 01AA                       l4331 0153  
                     l4323 0101                       l4315 00C9                       l4307 00B2  
                     l3293 000C                       l4237 0010                       l4253 001A  
                     l4245 0003                       l4261 0021                       l2397 0003  
                     l2821 0281                       l2813 01FD                       l2805 018A  
                     l2741 000D                       l4229 00B3                       l3277 0011  
                     l3269 000B                       l3285 000C                       l4165 00A2  
                     l4157 003E                       l4149 0000                       l2733 0282  
                     l2725 0270                       l2717 0255                       l2709 0220  
                     l2661 014B                       l2653 013B                       l2637 00FE  
                     l2629 00EE                       l2581 0058                       l2573 0045  
                     l2565 0034                       l2557 0024                       l2549 0011  
                     l4181 003E                       l4173 000D                       l4093 00A5  
                     l4085 008C                       l4077 007A                       l4069 0050  
                     l4501 052F                       l4421 0203                       l4413 01E8  
                     l4405 01B4                       l4341 0193                       l4333 0157  
                     l4325 010F                       l4317 00EB                       l4309 00C3  
                     l3295 000F                       l4239 0021                       l4255 001F  
                     l4247 0008                       l4263 0029                       l2399 0005  
                     l2831 02A6                       l2823 028F                       l2815 022A  
                     l2807 01A3                       l2751 0024                       l2743 0011  
                     l4191 0008                       l3287 000F                       l3279 0001  
                     l4159 0062                       l2735 0286                       l2727 0271  
                     l2719 025E                       l2671 01B3                       l2663 0154  
                     l2655 0144                       l2647 011C                       l2639 0102  
                     l2591 0071                       l2583 0059                       l2575 0046  
                     l2567 003A                       l2559 0025                       l4183 0047  
                     l4175 001A                       l4095 00B5                       l4079 0084  
                     l4087 009E                       l4511 0563                       l4503 0539  
                     l4431 02B7                       l4423 0211                       l4415 01F1  
                     l4407 01CF                       l4351 01F2                       l4343 01A6  
                     l4335 015B                       l4327 0113                       l4319 00F9  
                     l4271 0003                       l3289 0000                       l4249 000D  
                     l4257 0000                       l2841 02C9                       l2825 0298  
                     l2833 02AC                       l2817 0250                       l2809 01C0  
                     l2761 003D                       l2753 0026                       l2745 0012  
                     l2737 0000                       l4193 000C                       l4265 0003  
                     l2729 0275                       l2673 01B8                       l2657 0146  
                     l2649 0133                       l2665 0159                       l2593 0075  
                     l2577 004B                       l2585 005B                       l2569 003B  
                     l4177 001E                       l4185 004D                       l4169 0000  
                     l3801 001D                       l4521 058F                       l4513 056B  
                     l4505 0544                       l4441 02EB                       l4433 02CB  
                     l4425 0218                       l4409 01D5                       l4353 023D  
                     l4345 01C9                       l4337 0182                       l4361 029E  
                     l4329 013A                       l4281 0020                       l4273 000A  
                     l4601 007F                       l4259 0005                       l2851 02E8  
                     l2835 02B0                       l2827 029C                       l2819 0278  
                     l2771 0052                       l2763 003E                       l2755 002E  
                     l2747 0017                       l2739 0007                       l4195 001C  
                     l4267 0045                       l3299 0000                       l2691 0200  
                     l2683 01EB                       l2667 016F                       l2675 01C7  
                     l2659 014A                       l2595 0079                       l2587 0069  
                     l2579 0050                       l4179 0030                       l4099 0000  
                     l3811 0035                       l3803 0023                       l4531 05B7  
                     l4523 0598                       l4515 0577                       l4507 054B  
                     l4451 031C                       l4443 02FA                       l4435 02D4  
                     l4427 021D                       l4419 01F6                       l4371 0050  
                     l4363 02AD                       l4355 0264                       l4347 01CD  
                     l4339 018D                       l4291 0060                       l4283 0030  
                     l4275 0010                       l4611 00CC                       l4603 009F  
                     l2861 032E                       l2853 0301                       l2845 02D1  
                     l2837 02B1                       l2829 029D                       l2781 006D  
                     l2773 005A                       l2765 0043                       l2757 0033  
                     l2749 001C                       l4197 002C                       l4189 0003  
                     l3645 0001                       l2693 0202                       l2685 01F4  
                     l2677 01DD                       l2669 01AD                       l2597 007D  
                     l2589 006D                       l3901 0016                       l3813 0046  
                     l3805 0026                       l3821 005A                       l4541 05E0  
                     l4533 05BD                       l4525 059C                       l4517 057D  
                     l4509 055A                       l4461 0433                       l4453 0320  
                     l4445 0301                       l4437 02D8                       l4429 0278  
                     l4381 00B7                       l4373 005F                       l4365 02F4  
                     l4357 026D                       l4349 01D3                       l4285 0034  
                     l4293 0070                       l4277 0017                       l4621 00F1  
                     l4613 00D6                       l4605 00B1                       l2871 034D  
                     l2863 0338                       l2847 02D6                       l2855 0307  
                     l2839 02B5                       l2791 00EF                       l2783 007D  
                     l2775 005F                       l2767 0048                       l2759 0039  
                     l2695 0207                       l2687 01F8                       l2679 01E2  
                     l2599 0081                       l3903 001A                       l3911 0037  
                     l3823 005F                       l3815 004C                       l3807 002D  
                     l3831 0003                       l4543 05E7                       l4551 065B  
                     l4535 05C4                       l4527 05A7                       l4519 0581  
                     l4471 04AD                       l4463 043F                       l4455 033E  
                     l4447 0310                       l4439 02DE                       l4391 016F  
                     l4375 0088                       l4367 0000                       l4359 0296  
                     l4295 007E                       l4287 0049                       l4279 001C  
                     l4631 0143                       l4623 00F9                       l4615 00DA  
                     l4607 00BA                       l3921 000D                       l2873 0358  
                     l2865 033A                       l2857 0314                       l2849 02E4  
                     l2793 010B                       l2785 008A                       l2777 0064  
                     l2769 0050                       l2689 01FD                       l2697 0209  
                     l3905 0024                       l2961 0002                       l3825 0064  
                     l3817 004D                       l3809 0031                       l3841 0017  
                     l3833 0007                       l4545 05EC                       l4537 05C8  
                     l4529 05B3                       l4481 04D3                       l4473 04B3  
                     l4457 0399                       l4465 049A                       l4449 0315  
                     l4393 0171                       l4385 0102                       l4377 0091  
                     l4369 0029                       l4297 007F                       l4289 005C  
                     l4553 0669                       l4641 0172                       l4633 014B  
                     l4625 0119                       l4617 00E4                       l4609 00C9  
                     l3923 0016                       l3915 0001                       l3931 000D  
                     l2867 0348                       l2859 031F                       l2795 0127  
                     l2787 00A7                       l2699 020D                       l3907 002A  
                     l2963 0008                       l3819 0054                       l3851 002F  
                     l3843 001D                       l3835 000C                       l4547 0653  
                     l4539 05D4                       l4491 04F6                       l4483 04D7  
                     l4467 04A2                       l4459 03F4                       l4379 0099  
                     l4387 010B                       l4475 04BA                       l4555 067D  
                     l4299 0083                       l4651 019D                       l4643 017C  
                     l4635 0157                       l4627 012B                       l4619 00EE  
                     l4571 0000                       l3917 0004                       l3933 0012  
                     l3925 0001                       l2869 034C                       l2797 0130  
                     l2789 00C3                       l4565 0003                       l3909 0031  
                     l2965 000E                       l3861 0051                       l3853 0039  
                     l3845 0020                       l3837 000E                       l3829 0000  
                     l4485 04E2                       l4477 04CB                       l4469 04A9  
                     l4389 0140                       l4653 01A9                       l4645 0184  
                     l4637 0160                       l4629 0134                       l4581 002A  
                     l4573 0013                       l3783 0001                       l3919 000A  
                     l3935 0015                       l3927 0004                       l2799 0140  
                     l4567 0045                       l3871 000A                       l3951 01C9  
                     l2967 0010                       l2959 0001                       l3791 000C  
                     l3863 0056                       l3855 003F                       l3847 0027  
                     l3839 0012                       l4487 04E8                       l4479 04CF  
                     l4399 0173                       l4655 01C0                       l4647 0190  
                     l4639 016F                       l4591 004D                       l4583 0033  
                     l4575 0018                       l3929 000A                       l3881 002D  
                     l3873 000D                       l3945 0118                       l3937 0003  
                     l3793 000E                       l3785 0000                       l3857 0046  
                     l3849 002B                       l3961 0010                       l4497 04F8  
                     l4489 04F0                       l4657 01C9                       l4649 019A  
                     l4593 0057                       l4585 003D                       l4577 001D  
                     l2899 0000                       l3883 0033                       l3875 0014  
                     l3867 0000                       l3947 011E                       l3939 0009  
                     l3795 0012                       l3787 0003                       l3859 004C  
                     l3955 0003                       l4595 0061                       l4587 0040  
                     l4579 0022                       l3885 0034                       l3877 0018  
                     l3869 0004                       l3893 0000                       l3797 0017  
                     l3789 0007                       l3973 0189                       l3957 0007  
                     l4597 0064                       l4589 004A                       l3887 003B  
                     l3879 001C                       l3895 0006                       l3799 001B  
                     l3991 0336                       l3967 00FA                       l3959 0009  
                     l4599 0073                       l3889 0041                       l3897 000B  
                     l3985 02A7                       l3969 0101                       l3977 01B6  
                     l4689 00DD                       l3995 0000                       l3899 0012  
                     l3987 02AE                       l3979 01BD                       l3997 0013  
                     STR_1 00A0                       STR_2 00B1                       STR_3 00B8  
                     STR_4 00BF                       STR_5 00C3                       u4000 02B0  
                     u4001 02AF                       u4010 02B5                       u4011 02B4  
                     u4020 02C9                       u4100 0006                       u3300 003A  
                     u4021 02C8                       u4101 0005                       u3301 0039  
                     u4030 02D0                       u3310 0045                       u4031 02CF  
                     u3311 0044                       u4040 02D6                       u3400 00F4  
                     u3320 004B                       u4041 02D5                       u3401 00F3  
                     u3321 004A                       u4050 02E8                       u3330 0050  
                     u4051 02E7                       u3331 004F                       u4060 02F7  
                     u3500 016F                       u3420 010A                       u3340 0069  
                     u3501 016E                       u3421 0109                       u3341 0068  
                     u4070 0314                       u3430 010E                       u3350 006D  
                     u3270 0011                       u4071 0313                       u3511 0186  
                     u3503 016B                       u3431 010D                       u3415 00F7  
                     u3351 006C                       u3271 0010                       u4080 032E  
                     u3600 020D                       u3520 019A                       u3512 0187  
                     u3440 0113                       u3360 00C5                       u3280 0017  
                     u4081 032D                       u4065 02F2                       u3601 020C  
                     u3521 019B                       u3513 018C                       u3441 0112  
                     u3361 00C4                       u3281 0016                       u4090 034C  
                     u3610 0212                       u3530 01B8                       u3522 01A0  
                     u3514 018D                       u3370 00D0                       u3290 001C  
                     u6010 002D                       u4091 034B                       u4075 0310  
                     u3611 0211                       u3531 01B7                       u3523 01A1  
                     u3515 0192                       u3451 0125                       u3371 00CE  
                     u3291 001B                       u6011 002C                       u3700 0270  
                     u3620 0218                       u3540 01DD                       u3516 0193  
                     u3460 0137                       u3452 012C                       u3380 00D1  
                     u6100 0009                       u4085 032A                       u3701 026F  
                     u3621 0217                       u3541 01DC                       u3461 0136  
                     u3453 0133                       u3365 00C1                       u6005 001D  
                     u6101 0008                       u3710 0275                       u3630 021F  
                     u3550 01E2                       u3470 013B                       u3390 00E5  
                     u6030 0041                       u3711 0274                       u3631 021E  
                     u3551 01E1                       u3471 013A                       u3391 00E4  
                     u6031 0040                       u6015 0029                       u2920 0010  
                     u3800 0064                       u7000 00AE                       u5160 0008  
                     u3720 0286                       u3640 0225                       u3480 014A  
                     u6040 0006                       u4360 0008                       u2921 000F  
                     u3801 0063                       u7001 00AD                       u5161 0007  
                     u3721 0285                       u3641 0224                       u3481 0149  
                     u6025 0035                       u6041 0005                       u4361 0007  
                     u3730 0011                       u7010 00B2                       u3650 0237  
                     u3570 01F8                       u4370 000E                       u3811 00B5  
                     u3731 0010                       u7011 00B1                       u3651 0236  
                     u3571 01F7                       u6115 0026                       u4371 000D  
                     u7020 0008                       u2940 0024                       u3812 00BC  
                     u3740 0017                       u3660 0246                       u3580 01FD  
                     u6060 001A                       u6140 011E                       u7100 007E  
                     u7021 0007                       u2941 0023                       u3901 01DF  
                     u3821 00D1                       u3813 00C3                       u3741 0016  
                     u3581 01FC                       u3565 01ED                       u6061 0019  
                     u6141 011D                       u6125 0082                       u6205 0032  
                     u7101 007D                       u7030 001A                       u3902 01E6  
                     u3822 00D8                       u3750 001C                       u3670 0255  
                     u3590 0207                       u6070 0024                       u6310 02AE  
                     u6230 0101                       u7110 00C2                       u7031 0019  
                     u2935 0017                       u3911 020C                       u3903 01ED  
                     u3831 00FD                       u3823 00DF                       u3751 001B  
                     u3671 0254                       u3591 0206                       u3495 014D  
                     u6071 0023                       u6055 000C                       u6135 00D7  
                     u6311 02AD                       u6231 0100                       u6215 006E  
                     u7111 00C1                       u7040 000F                       u3920 0236  
                     u3912 0213                       u3832 0104                       u3760 003D  
                     u3680 025E                       u6400 007F                       u7200 0000  
                     u7120 00F9                       u3913 021A                       u3841 0119  
                     u3833 010B                       u3761 003C                       u3681 025D  
                     u3665 0241                       u6401 007E                       u6305 0266  
                     u6225 00B9                       u7201 0304                       u7121 00F6  
                     u7050 0033                       u3842 0120                       u3770 0043  
                     u3690 0263                       u6410 0083                       u6090 0037  
                     u7210 0029                       u7130 00FD                       u3931 0242  
                     u3843 0127                       u3771 0042                       u3691 0262  
                     u6411 0082                       u6091 0036                       u6075 0020  
                     u6155 013B                       u7211 0028                       u7131 00FC  
                     u7060 0045                       u3940 025E                       u3932 0249  
                     u3780 0048                       u6420 008A                       u6180 0007  
                     u7300 0203                       u7220 0050                       u7140 013A  
                     u7061 0044                       u3933 0250                       u3925 0231  
                     u3861 014F                       u3781 0047                       u6421 0089  
                     u6085 002B                       u6165 0188                       u6325 02C1  
                     u6245 0114                       u6181 0006                       u7301 0202  
                     u7221 004F                       u7205 02FF                       u7141 0139  
                     u3862 0156                       u3790 005F                       u4910 0053  
                     u6510 0062                       u6350 0013                       u6270 01BD  
                     u6190 0010                       u7310 0211                       u7230 005F  
                     u7150 0182                       u7070 0010                       u3951 026A  
                     u3871 017C                       u3863 015D                       u3855 0129  
                     u3791 005E                       u4911 0052                       u6511 0061  
                     u6351 0012                       u6175 01D4                       u6335 02FD  
                     u6271 01BC                       u6255 0150                       u6191 000F  
                     u7311 0210                       u7231 005E                       u7151 0181  
                     u7071 000F                       u3952 0271                       u3872 0183  
                     u4920 005A                       u6600 00B5                       u6440 009C  
                     u6360 002D                       u5800 0023                       u7400 04B9  
                     u7240 0088                       u7160 01CD                       u7080 0030  
                     u3953 0278                       u3945 0259                       u3873 018A  
                     u4921 0059                       u4905 0043                       u6601 00B4  
                     u6505 0049                       u6441 009B                       u6361 002C  
                     u5801 0022                       u6345 0339                       u6265 018C  
                     u7401 04B8                       u7305 01FF                       u7241 0087  
                     u7161 01CC                       u7081 002F                       u4850 0008  
                     u6610 0008                       u6530 0080                       u6450 00A3  
                     u7410 04D3                       u7330 02CA                       u7170 0264  
                     u7090 0070                       u3891 01B2                       u4851 0007  
                     u6611 0007                       u6531 007F                       u6515 005E  
                     u6451 00A2                       u6435 008C                       u7411 04D2  
                     u7331 02C9                       u7235 005B                       u7171 0263  
                     u7091 006F                       u3980 029C                       u3892 01B9  
                     u4940 006B                       u4860 000D                       u6540 0084  
                     u6380 0066                       u5820 0035                       u5900 001D  
                     u7500 0577                       u7420 04E8                       u7340 02EB  
                     u7260 01A9                       u7180 0296                       u3981 029B  
                     u3965 027A                       u3893 01C0                       u3885 018C  
                     u4941 006A                       u4861 000C                       u6541 0083  
                     u6525 0073                       u6381 0065                       u5821 0034  
                     u5901 001C                       u6285 01DF                       u7501 0576  
                     u7421 04E7                       u7341 02EA                       u7325 0220  
                     u7261 01A8                       u7181 0295                       u4950 0070  
                     u4870 0024                       u6710 005F                       u6550 008B  
                     u6470 00B4                       u7510 0581                       u7430 04F0  
                     u7350 02FA                       u7270 01B4                       u7190 02AD  
                     u3975 0291                       u4951 006F                       u4935 005D  
                     u6711 005E                       u6551 008A                       u6471 00B3  
                     u6375 0051                       u5815 0027                       u6295 021B  
                     u7511 0580                       u7431 04EF                       u7351 02F9  
                     u7271 01B3                       u7255 0176                       u7191 02AC  
                     u6720 0016                       u4880 003A                       u6640 0024  
                     u6480 000D                       u5840 0046                       u5920 002F  
                     u7520 058F                       u7360 0315                       u7280 01CF  
                     u7600 014B                       u6721 0015                       u6801 0075  
                     u4881 0039                       u6705 0051                       u6641 0023  
                     u6625 0011                       u6481 000C                       u6465 00A6  
                     u6385 0062                       u5841 0045                       u5921 002E  
                     u7521 058E                       u7361 0314                       u7345 02E7  
                     u7281 01CE                       u7265 01A5                       u7601 014A  
                     u6730 0032                       u6810 00A0                       u6802 0076  
                     u4890 0041                       u6650 0012                       u6570 009D  
                     u6490 0021                       u5930 0039                       u7530 05A7  
                     u7450 052E                       u7290 01E1                       u3995 029F  
                     u6731 0031                       u6811 009F                       u6803 007B  
                     u4891 0040                       u4875 001F                       u6651 0011  
                     u6635 0018                       u6571 009C                       u6491 0020  
                     u6395 0072                       u5835 0036                       u5931 0038  
                     u5915 0021                       u7531 05A6                       u7451 052D  
                     u7355 02F6                       u7291 01E0                       u7195 02A9  
                     u6900 002C                       u6740 004C                       u6804 007C  
                     u6820 000A                       u6580 00A4                       u5860 005A  
                     u5780 0007                       u7540 05BD                       u7460 0539  
                     u6901 002B                       u6741 004B                       u6805 0081  
                     u6821 0009                       u6581 00A3                       u6565 008D  
                     u5861 0059                       u5845 0042                       u5781 0006  
                     u7541 05BC                       u7525 058B                       u7461 0538  
                     u7445 04FB                       u6806 0082                       u6750 0016  
                     u6670 0026                       u5870 005F                       u5790 0012  
                     u5950 004C                       u7550 05D4                       u7470 0544  
                     u7390 04A1                       u6815 009C                       u6751 0015  
                     u6671 0025                       u5871 005E                       u5855 004E  
                     u5791 0011                       u5951 004B                       u5935 0035  
                     u7551 05D3                       u7535 05A3                       u7471 0543  
                     u7455 052A                       u7391 04A0                       u7375 039C  
                     u6920 004D                       u6760 0032                       u6840 001E  
                     u5960 0051                       u5880 0007                       u7560 05E0  
                     u7480 055A                       u6921 004C                       u6745 0048  
                     u6761 0031                       u6665 0017                       u6841 001D  
                     u5961 0050                       u5945 0040                       u5881 0006  
                     u7561 05DF                       u7481 0559                       u7385 0442  
                     u7617 0039                       u6770 003E                       u6690 0041  
                     u6850 0030                       u5970 000A                       u5890 0012  
                     u7490 056B                       u6915 003F                       u6771 003D  
                     u6691 0040                       u6851 002F                       u6835 000F  
                     u6595 00A7                       u5971 0009                       u5891 0011  
                     u7491 056A                       u7475 0540                       u7707 0178  
                     u7627 0046                       u6940 006F                       u7580 0669  
                     u6941 006E                       u6781 004D                       u6685 0028  
                     u7581 0668                       u7485 0556                       u7717 0196  
                     u7637 005D                       u6790 0066                       u6782 004E  
                     u6870 004D                       u5990 001C                       u7590 067D  
                     u6935 0061                       u6791 0065                       u6783 0053  
                     u6695 003D                       u6871 004C                       u6855 002C  
                     u5991 001B                       u7591 067A                       u7575 05FB  
                     u7727 01D1                       u7647 006C                       u6960 007F  
                     u6880 0008                       u6784 0054                       u7737 000F  
                     u6961 007E                       u6881 0007                       u6785 0059  
                     u6865 003F                       u5985 000E                       u7657 00C2  
                     u6970 0085                       u6890 000C                       u6786 005A  
                     u7747 0017                       u6971 0084                       u6955 0074  
                     u6891 000B                       u7667 00D2                       u6980 0089  
                     u7757 000C                       u6981 0088                       u7677 00EA  
                     u6990 009E                       u7767 001C                       u7687 013C  
                     u7777 002B                       u7697 0168                       u7787 0011  
                     u6995 0099                       _TRMT 04C1          ?_Lcd_Write_String 0006  
                     _flag 0001                       _main 0000                       btemp 007E  
                     start 0000*        ??_Lcd_Write_String 0000               _sprintf$1273 0012  
          __end_of_Lcd_Cmd 001A                      ??_ISR 0000              ___fltol@sign1 0041  
          __end_of___fladd 0288                      ?_main 0000            __end_of___awdiv 0069  
          __end_of___flneg 000B            __end_of___awmod 005B            __end_of___flmul 0361  
          __end_of___flsub 0050            __end_of___fltol 007C                      _ANSEL 0188  
          __end_of___lldiv 0068            ___awdiv@divisor 0002            __end_of___llmod 0056  
          __end_of___lwdiv 0046                      i1l110 0017            __end_of___lwmod 003C  
          ___awdiv@counter 0007                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0026                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
          __end_of_dpowers 00A0                      _count 0012                      _scale 0000  
          __end_of_isdigit 0012            __end_of_recibir 000B                      _setup 0000  
                    _turno 0000                      pclath 000A            __end_of_spiInit 0016  
          __end_of_spiRead 0009                      status 0003                      wtemp0 007E  
          __end_of_sprintf 0682           __end_of_Lcd_Init 0047           __end_of_Lcd_Port 0006  
          __initialization 0000               __end_of_main 01DC                     ??_main 002D  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0011  
                   ?_scale 0025           ___awdiv@dividend 0004                     ?_setup 0000  
                   i1l3741 000B                     i1l3743 0011                     i1l3735 0000  
                   i1l3737 0006                     i1l3739 000A                     u576_20 0006  
                   u576_21 0005                  ??_Lcd_Cmd 0004                     u577_20 000A  
                   u577_21 0009                     u779_27 000D    __size_of_Lcd_Write_Char 001B  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPBUF 0013  
                   _SSPCON 0014           __end_of___xxtofl 00BC           __end_of__powers_ 0044  
                   ___flge 0000                     ___fleq 0000                  ??___fladd 0041  
                   ___wmul 0000                  ??___awdiv 0006                  ??___flneg 0007  
                ??___awmod 0007                  ??___flmul 0013                  ??___flsub 0008  
                ??___fltol 003C                  ??___lldiv 0003                  ??___llmod 0004  
                ??___lwdiv 0005                  ??___lwmod 0007                     _fround 0000  
         ___awdiv@quotient 0009            ___awmod@divisor 0003                     _valorA 0014  
                   _valorC 0000                     _valorT 0015            ___awmod@counter 0000  
             conversor@val 002D               __pdataCOMMON 0000                  ??_isdigit 0003  
       __size_of__Umul8_16 0029                  ??_recibir 0003                     saved_w 007E  
         __end_of_spiWrite 0006                  ??_spiInit 0006                  ??_spiRead 0003  
                ??_sprintf 000D            Lcd_Set_Cursor@a 0001            Lcd_Set_Cursor@b 0007  
               ___flge@ff1 0000                 ___flge@ff2 0004               ___xxtofl@arg 0006  
             ___xxtofl@exp 0005               ___xxtofl@val 0003                 ___fleq@ff1 0000  
               ___fleq@ff2 0004    __end_of__initialization 0020                 ___flneg@f1 0003  
        __end_of_Lcd_Clear 000D                 ___fltol@f1 0038      __end_of_Config_USARTT 0011  
           __pcstackCOMMON 0000              __end_of_scale 0363              __end_of_setup 0016  
           _Lcd_Set_Cursor 0000                 __div_to_l_ 0000                  ?_Lcd_Init 0000  
                ?_Lcd_Port 0000            __div_to_l_@exp1 000D            __div_to_l_@cntr 000C  
                  ??_scale 0029            __div_to_l_@quot 0008               sprintf@width 0019  
                  ??_setup 0003         __size_of_conversor 005C                 __pbssBANK0 0000  
               __pbssBANK1 0000                 __pbssBANK3 0000              __div_to_l_@f1 0000  
            __div_to_l_@f2 0004          __end_of__Umul8_16 0029                 __pmaintext 0000  
                  ?___flge 0000                    ?___fleq 0000                    ?___wmul 0003  
               __pintentry 0000    __size_of_spiReceiveWait 0007                    ?_fround 0025  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0026                  ?___xxtofl 0003  
               ??_Lcd_Init 0000                 ??_Lcd_Port 0003                    _SSPSTAT 0094  
               __stringtab 0000             _Lcd_Write_Char 0000                    _Lcd_Cmd 0000  
               _conversor2 0000          __end_of__npowers_ 0078                 _scale$1272 0033  
                ?_spiWrite 0000            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 0000                    ___awdiv 0000                    ___flneg 0000  
                  ___awmod 0000                    ___flmul 0000                    ___flsub 0000  
                  ___fltol 0000                    ___lldiv 0000            __size_of___wmul 002B  
                  ___llmod 0000                    ___lwdiv 0000                    ___lwmod 0000  
        __end_of_conversor 005C            __size_of_fround 020D            ?_Lcd_Set_Cursor 0007  
                  __ptext1 0000                    __ptext2 0000                    __ptext3 0000  
                  __ptext4 0000                    __ptext5 0000                    __ptext6 0000  
                  __ptext7 0000                    __ptext8 0000                    __ptext9 0000  
             __size_of_ISR 001E                ?__div_to_l_ 0000                    _enviado 0010  
                  _dpowers 0078                    _isdigit 0000                 ??___xxtofl 0000  
                  _recibir 0000           ___awmod@dividend 0005                    _spiInit 0000  
                  _spiRead 0000                    _retorno 0000              conversor2@val 002D  
                  _sprintf 0000                    clrloop0 0001     __end_of_Lcd_Write_Char 001B  
     end_of_initialization 0020            ___lldiv@divisor 0000            ___lldiv@counter 000C  
                _RCSTAbits 0018                 ??_spiWrite 0003                    psplit$0 F0038  
                Lcd_Port@a 0003             __tdiv_to_l_@f1 0000             __tdiv_to_l_@f2 0004  
            ??__tdiv_to_l_ 0003                  _PORTCbits 0007                  _PORTEbits 0009  
              ___fladd@grs 004C              ___xxtofl@sign 0004                spiWrite@dat 0003  
          ?_Lcd_Write_Char 0000          Lcd_Write_String@a 0006          Lcd_Write_String@i 0003  
              ___flmul@grs 0019                ?_conversor2 0025                  _TXSTAbits 0098  
      __size_of__div_to_l_ 00BE                  _Lcd_Clear 0000             _spiReceiveWait 0000  
           __end_of___flge 00A4             __end_of___fleq 0050             __end_of___wmul 002B  
         _Lcd_Write_String 0000              __pidataCOMMON 0000          pnum$text1_split_1 0038  
              _BAUDCTLbits 0187             __end_of_fround 020D        start_initialization 0000  
              __end_of_ISR 001E        __end_of__tdiv_to_l_ 00BD          __size_of_Lcd_Init 0047  
        __size_of_Lcd_Port 0006            ___llmod@divisor 000D            ___llmod@counter 0005  
   __end_of_spiReceiveWait 0007                 ?_Lcd_Clear 0000                   ??___flge 0003  
                 ??___fleq 0003                   ??___wmul 0007                  __Umul8_16 0000  
          Lcd_Write_Char@a 0005                   ??_fround 0029              sprintf@tmpval 001B  
                ___fladd@a 003D                  ___fladd@b 0039        __size_of_conversor2 005C  
               fround@prec 0038                  ___flmul@a 000F                  ___flmul@b 000B  
              __pbssCOMMON 0000                  ___flsub@a 0000                  ___flsub@b 0004  
                ___latbits 0002              __pcstackBANK0 0000              __pcstackBANK1 0000  
   __size_of_Config_USARTT 0011          __size_of___xxtofl 00BC               _isdigit$1087 0003  
                 ?_Lcd_Cmd 0000                sprintf@flag 0017                sprintf@eexp 0023  
              sprintf@fval 0025                sprintf@prec 002A           ___lwdiv@dividend 0003  
          ?_spiReceiveWait 0000           ??_Lcd_Set_Cursor 0000                   ?___fladd 0039  
                 ?___awdiv 0002                   ?___flneg 0003                   ?___awmod 0003  
                 ?___flmul 000B                   ?___flsub 0000                   ?___fltol 0038  
                 ?___lldiv 0000                   ?___llmod 000D                  __npowers_ 0044  
               ?__Umul8_16 0003                   ?___lwdiv 0001                   ?___lwmod 0003  
        __size_of_spiWrite 0006                  __pstrings 0000                __tdiv_to_l_ 0000  
             ??__div_to_l_ 0003                  _conversor 0000                   ?_isdigit 0000  
                 ?_recibir 0000                   ?_spiInit 0003                   ?_spiRead 0000  
         ___lwdiv@quotient 0007                   ?_sprintf 0008             __size_of_scale 0363  
           __size_of_setup 0016       spiInit@sTransmitEdge 0005          interrupt_function 0000  
           ___wmul@product 0000                  clear_ram0 0000                   _PIE1bits 008C  
       spiInit@sDataSample 0003                   Lcd_Cmd@a 0006                   _PIR1bits 000C  
       __end_of__div_to_l_ 00BE              _Config_USARTT 0000                ??_Lcd_Clear 0007  
              __stringbase 000F          ___wmul@multiplier 0003                 ?_conversor 0025  
         ??_Lcd_Write_Char 0004                   _Lcd_Init 0000                   _Lcd_Port 0000  
 __end_of_Lcd_Write_String 0046               ??_conversor2 0029           __size_of_Lcd_Cmd 001A  
           ?_Config_USARTT 0000                ??__Umul8_16 0005           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 005B  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003C                _fround$1270 0034                _fround$1271 0030  
       __end_of__stringtab 0010                 sprintf@val 001F         __end_of_conversor2 005C  
                 ___xxtofl 0000           __size_of_isdigit 0012           __size_of_recibir 000B  
          ___lwdiv@divisor 0001            ___lwdiv@counter 0006                   __ptext10 0000  
                 __ptext11 0000                   __ptext20 0000                   __ptext12 0000  
                 __ptext21 0000                   __ptext13 0000                   __ptext30 0000  
                 __ptext22 0000                   __ptext14 0000                   __ptext31 0000  
                 __ptext23 0000                   __ptext15 0000                   __ptext32 0000  
                 __ptext24 0000                   __ptext16 0000                   __ptext33 0000  
                 __ptext25 0000                   __ptext17 0000                   __ptext34 0000  
                 __ptext26 0000                   __ptext18 0000                   __ptext35 0000  
                 __ptext27 0000                   __ptext19 0000                   __ptext36 0000  
                 __ptext28 0000                   __ptext37 0000                   __ptext29 0000  
                 __ptext38 0000                   __ptext39 0000           __size_of_spiInit 0016  
         __size_of_spiRead 0009                   __powers_ 0010           __size_of_sprintf 0000  
            __size_of_main 01DC                  pnum$text1 000F                   _recibido 0011  
                 _spiWrite 0000               spiInit@sType 0006          spiInit@sClockIdle 0004  
              ??_conversor 0029                 _INTCONbits 000B                   isdigit@c 0004  
                 scale@scl 0037                   intlevel1 0000*                 sprintf@ap 0016  
         __tdiv_to_l_@exp1 000D           __tdiv_to_l_@cntr 000C                  sprintf@sp 0029  
         __tdiv_to_l_@quot 0008           ___lwmod@dividend 0005           ___lldiv@dividend 0004  
         ??_spiReceiveWait 0003            ??_Config_USARTT 0003                  stringcode 000A  
       Lcd_Set_Cursor@temp 0002               ?__tdiv_to_l_ 0000     __Umul8_16@multiplicand 0003  
                 sprintf@c 002C                   sprintf@f 0008           ___lldiv@quotient 0008  
          ___lwmod@divisor 0003            ___lwmod@counter 0000                   stringdir 000A  
                 stringtab 0000              ___fladd@signs 0049               ___fladd@aexp 004A  
             ___fladd@bexp 004B       __Umul8_16@multiplier 0004          __Umul8_16@product 0000  
