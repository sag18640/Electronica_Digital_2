

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 01:15:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F887 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  0088                     	;# 
   134  0089                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  009F                     	;# 
   157  0105                     	;# 
   158  0107                     	;# 
   159  0108                     	;# 
   160  0109                     	;# 
   161  010C                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0185                     	;# 
   167  0187                     	;# 
   168  0188                     	;# 
   169  0189                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  0088                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  008F                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  0105                     	;# 
   236  0107                     	;# 
   237  0108                     	;# 
   238  0109                     	;# 
   239  010C                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  010E                     	;# 
   243  010F                     	;# 
   244  0185                     	;# 
   245  0187                     	;# 
   246  0188                     	;# 
   247  0189                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001D                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  0088                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0095                     	;# 
   303  0096                     	;# 
   304  0097                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009A                     	;# 
   308  009B                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  009F                     	;# 
   313  0105                     	;# 
   314  0107                     	;# 
   315  0108                     	;# 
   316  0109                     	;# 
   317  010C                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  0185                     	;# 
   323  0187                     	;# 
   324  0188                     	;# 
   325  0189                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0008                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000D                     	;# 
   342  000E                     	;# 
   343  000E                     	;# 
   344  000F                     	;# 
   345  0010                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0013                     	;# 
   349  0014                     	;# 
   350  0015                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  001A                     	;# 
   357  001B                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001D                     	;# 
   361  001E                     	;# 
   362  001F                     	;# 
   363  0081                     	;# 
   364  0085                     	;# 
   365  0086                     	;# 
   366  0087                     	;# 
   367  0088                     	;# 
   368  0089                     	;# 
   369  008C                     	;# 
   370  008D                     	;# 
   371  008E                     	;# 
   372  008F                     	;# 
   373  0090                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0093                     	;# 
   379  0094                     	;# 
   380  0095                     	;# 
   381  0096                     	;# 
   382  0097                     	;# 
   383  0098                     	;# 
   384  0099                     	;# 
   385  009A                     	;# 
   386  009B                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  009F                     	;# 
   391  0105                     	;# 
   392  0107                     	;# 
   393  0108                     	;# 
   394  0109                     	;# 
   395  010C                     	;# 
   396  010C                     	;# 
   397  010D                     	;# 
   398  010E                     	;# 
   399  010F                     	;# 
   400  0185                     	;# 
   401  0187                     	;# 
   402  0188                     	;# 
   403  0189                     	;# 
   404  018C                     	;# 
   405  018D                     	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0008                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000D                     	;# 
   420  000E                     	;# 
   421  000E                     	;# 
   422  000F                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001D                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  0081                     	;# 
   442  0085                     	;# 
   443  0086                     	;# 
   444  0087                     	;# 
   445  0088                     	;# 
   446  0089                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  0105                     	;# 
   470  0107                     	;# 
   471  0108                     	;# 
   472  0109                     	;# 
   473  010C                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  0185                     	;# 
   479  0187                     	;# 
   480  0188                     	;# 
   481  0189                     	;# 
   482  018C                     	;# 
   483  018D                     	;# 
   484                           
   485                           	psect	idataCOMMON
   486  1003                     __pidataCOMMON:
   487                           
   488                           ;initializer for _turno
   489  1003  3401               	retlw	1
   490                           
   491                           ;initializer for _flag
   492  1004  3401               	retlw	1
   493                           
   494                           	psect	strings
   495  1800                     __pstrings:
   496  1800                     stringtab:
   497  1800                     __stringtab:
   498                           
   499                           ;	String table - string pointers are 1 byte each
   500  1800  1BFF               	btfsc	btemp+1,7
   501  1801  280A               	ljmp	stringcode
   502  1802  1383               	bcf	3,7
   503  1803  187F               	btfsc	btemp+1,0
   504  1804  1783               	bsf	3,7
   505  1805  0800               	movf	0,w
   506  1806  0A84               	incf	4,f
   507  1807  1903               	skipnz
   508  1808  0AFF               	incf	btemp+1,f
   509  1809  0008               	return
   510  180A                     stringcode:
   511  180A                     stringdir:
   512  180A  3018               	movlw	high stringdir
   513  180B  008A               	movwf	10
   514  180C  0804               	movf	4,w
   515  180D  0A84               	incf	4,f
   516  180E  0782               	addwf	2,f
   517  180F                     __stringbase:
   518  180F  3400               	retlw	0
   519  1810                     __end_of__stringtab:
   520  1810                     __powers_:
   521  1810  3400               	retlw	0
   522  1811  3400               	retlw	0
   523  1812  3480               	retlw	128
   524  1813  343F               	retlw	63
   525  1814  3400               	retlw	0
   526  1815  3400               	retlw	0
   527  1816  3420               	retlw	32
   528  1817  3441               	retlw	65
   529  1818  3400               	retlw	0
   530  1819  3400               	retlw	0
   531  181A  34C8               	retlw	200
   532  181B  3442               	retlw	66
   533  181C  3400               	retlw	0
   534  181D  3400               	retlw	0
   535  181E  347A               	retlw	122
   536  181F  3444               	retlw	68
   537  1820  3400               	retlw	0
   538  1821  3440               	retlw	64
   539  1822  341C               	retlw	28
   540  1823  3446               	retlw	70
   541  1824  3400               	retlw	0
   542  1825  3450               	retlw	80
   543  1826  34C3               	retlw	195
   544  1827  3447               	retlw	71
   545  1828  3400               	retlw	0
   546  1829  3424               	retlw	36
   547  182A  3474               	retlw	116
   548  182B  3449               	retlw	73
   549  182C  3480               	retlw	128
   550  182D  3496               	retlw	150
   551  182E  3418               	retlw	24
   552  182F  344B               	retlw	75
   553  1830  3420               	retlw	32
   554  1831  34BC               	retlw	188
   555  1832  34BE               	retlw	190
   556  1833  344C               	retlw	76
   557  1834  3428               	retlw	40
   558  1835  346B               	retlw	107
   559  1836  346E               	retlw	110
   560  1837  344E               	retlw	78
   561  1838  34F9               	retlw	249
   562  1839  3402               	retlw	2
   563  183A  3415               	retlw	21
   564  183B  3450               	retlw	80
   565  183C  34EC               	retlw	236
   566  183D  3478               	retlw	120
   567  183E  34AD               	retlw	173
   568  183F  3460               	retlw	96
   569  1840  34CA               	retlw	202
   570  1841  34F2               	retlw	242
   571  1842  3449               	retlw	73
   572  1843  3471               	retlw	113
   573  1844                     __end_of__powers_:
   574  1844                     __npowers_:
   575  1844  3400               	retlw	0
   576  1845  3400               	retlw	0
   577  1846  3480               	retlw	128
   578  1847  343F               	retlw	63
   579  1848  34CD               	retlw	205
   580  1849  34CC               	retlw	204
   581  184A  34CC               	retlw	204
   582  184B  343D               	retlw	61
   583  184C  340A               	retlw	10
   584  184D  34D7               	retlw	215
   585  184E  3423               	retlw	35
   586  184F  343C               	retlw	60
   587  1850  346F               	retlw	111
   588  1851  3412               	retlw	18
   589  1852  3483               	retlw	131
   590  1853  343A               	retlw	58
   591  1854  3417               	retlw	23
   592  1855  34B7               	retlw	183
   593  1856  34D1               	retlw	209
   594  1857  3438               	retlw	56
   595  1858  34AC               	retlw	172
   596  1859  34C5               	retlw	197
   597  185A  3427               	retlw	39
   598  185B  3437               	retlw	55
   599  185C  34BD               	retlw	189
   600  185D  3437               	retlw	55
   601  185E  3486               	retlw	134
   602  185F  3435               	retlw	53
   603  1860  3495               	retlw	149
   604  1861  34BF               	retlw	191
   605  1862  34D6               	retlw	214
   606  1863  3433               	retlw	51
   607  1864  3477               	retlw	119
   608  1865  34CC               	retlw	204
   609  1866  342B               	retlw	43
   610  1867  3432               	retlw	50
   611  1868  345F               	retlw	95
   612  1869  3470               	retlw	112
   613  186A  3489               	retlw	137
   614  186B  3430               	retlw	48
   615  186C  34FF               	retlw	255
   616  186D  34E6               	retlw	230
   617  186E  34DB               	retlw	219
   618  186F  342E               	retlw	46
   619  1870  3408               	retlw	8
   620  1871  34E5               	retlw	229
   621  1872  343C               	retlw	60
   622  1873  341E               	retlw	30
   623  1874  3460               	retlw	96
   624  1875  3442               	retlw	66
   625  1876  34A2               	retlw	162
   626  1877  340D               	retlw	13
   627  1878                     __end_of__npowers_:
   628  1878                     _dpowers:
   629  1878  3401               	retlw	1
   630  1879  3400               	retlw	0
   631  187A  3400               	retlw	0
   632  187B  3400               	retlw	0
   633  187C  340A               	retlw	10
   634  187D  3400               	retlw	0
   635  187E  3400               	retlw	0
   636  187F  3400               	retlw	0
   637  1880  3464               	retlw	100
   638  1881  3400               	retlw	0
   639  1882  3400               	retlw	0
   640  1883  3400               	retlw	0
   641  1884  34E8               	retlw	232
   642  1885  3403               	retlw	3
   643  1886  3400               	retlw	0
   644  1887  3400               	retlw	0
   645  1888  3410               	retlw	16
   646  1889  3427               	retlw	39
   647  188A  3400               	retlw	0
   648  188B  3400               	retlw	0
   649  188C  34A0               	retlw	160
   650  188D  3486               	retlw	134
   651  188E  3401               	retlw	1
   652  188F  3400               	retlw	0
   653  1890  3440               	retlw	64
   654  1891  3442               	retlw	66
   655  1892  340F               	retlw	15
   656  1893  3400               	retlw	0
   657  1894  3480               	retlw	128
   658  1895  3496               	retlw	150
   659  1896  3498               	retlw	152
   660  1897  3400               	retlw	0
   661  1898  3400               	retlw	0
   662  1899  34E1               	retlw	225
   663  189A  34F5               	retlw	245
   664  189B  3405               	retlw	5
   665  189C  3400               	retlw	0
   666  189D  34CA               	retlw	202
   667  189E  349A               	retlw	154
   668  189F  343B               	retlw	59
   669  18A0                     __end_of_dpowers:
   670  0013                     _SSPBUF	set	19
   671  0014                     _SSPCON	set	20
   672  0019                     _TXREG	set	25
   673  000B                     _INTCONbits	set	11
   674  0009                     _PORTEbits	set	9
   675  001A                     _RCREG	set	26
   676  0018                     _RCSTAbits	set	24
   677  000C                     _PIR1bits	set	12
   678  0006                     _PORTB	set	6
   679  0009                     _PORTE	set	9
   680  0008                     _PORTD	set	8
   681  0007                     _PORTC	set	7
   682  0005                     _PORTA	set	5
   683  0006                     _PORTBbits	set	6
   684  0094                     _SSPSTATbits	set	148
   685  0094                     _SSPSTAT	set	148
   686  008C                     _PIE1bits	set	140
   687  0099                     _SPBRG	set	153
   688  0098                     _TXSTAbits	set	152
   689  0086                     _TRISB	set	134
   690  0089                     _TRISE	set	137
   691  0087                     _TRISC	set	135
   692  0088                     _TRISD	set	136
   693  04C1                     _TRMT	set	1217
   694  0187                     _BAUDCTLbits	set	391
   695  0188                     _ANSEL	set	392
   696  18A0                     STR_1:
   697  18A0  3453               	retlw	83	;'S'
   698  18A1  3431               	retlw	49	;'1'
   699  18A2  343A               	retlw	58	;':'
   700  18A3  3420               	retlw	32	;' '
   701  18A4  3420               	retlw	32	;' '
   702  18A5  3420               	retlw	32	;' '
   703  18A6  3453               	retlw	83	;'S'
   704  18A7  3432               	retlw	50	;'2'
   705  18A8  343A               	retlw	58	;':'
   706  18A9  3420               	retlw	32	;' '
   707  18AA  3420               	retlw	32	;' '
   708  18AB  3420               	retlw	32	;' '
   709  18AC  3420               	retlw	32	;' '
   710  18AD  3453               	retlw	83	;'S'
   711  18AE  3433               	retlw	51	;'3'
   712  18AF  343A               	retlw	58	;':'
   713  18B0  3400               	retlw	0
   714  18B1                     STR_2:
   715  18B1  3425               	retlw	37	;'%'
   716  18B2  3433               	retlw	51	;'3'
   717  18B3  342E               	retlw	46	;'.'
   718  18B4  3432               	retlw	50	;'2'
   719  18B5  3466               	retlw	102	;'f'
   720  18B6  3456               	retlw	86	;'V'
   721  18B7  3400               	retlw	0
   722  18B8                     STR_3:
   723  18B8  3425               	retlw	37	;'%'
   724  18B9  3464               	retlw	100	;'d'
   725  18BA  3400               	retlw	0
   726  18B1                     
   727                           	psect	cinit
   728  000F                     start_initialization:	
   729                           ; #config settings
   730                           
   731  000F                     __initialization:
   732                           
   733                           ; Initialize objects allocated to COMMON
   734  000F  160A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   735  0014  00F8               	movwf	__pdataCOMMON& (0+127)
   736  0015  160A  118A  2004  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   737  001A  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   738                           
   739                           ; Clear objects allocated to BANK1
   740  001B  1383               	bcf	3,7	;select IRP bank0
   741  001C  30CD               	movlw	low __pbssBANK1
   742  001D  0084               	movwf	4
   743  001E  30EE               	movlw	low (__pbssBANK1+33)
   744  001F  160A  158A  2131  120A  118A  	fcall	clear_ram0
   745                           
   746                           ; Clear objects allocated to BANK0
   747  0024  01ED               	clrf	__pbssBANK0& (0+127)
   748                           
   749                           ; Clear objects allocated to COMMON
   750  0025  01FA               	clrf	__pbssCOMMON& (0+127)
   751  0026                     end_of_initialization:	
   752                           ;End of C runtime variable initialization code
   753                           
   754  0026                     __end_of__initialization:
   755  0026  0183               	clrf	3
   756  0027  160A  158A  2E75   	ljmp	_main	;jump to C main() function
   757                           
   758                           	psect	bssCOMMON
   759  007A                     __pbssCOMMON:
   760  007A                     _retorno:
   761  007A                     	ds	1
   762                           
   763                           	psect	dataCOMMON
   764  0078                     __pdataCOMMON:
   765  0078                     _turno:
   766  0078                     	ds	1
   767  0079                     _flag:
   768  0079                     	ds	1
   769                           
   770                           	psect	bssBANK0
   771  006D                     __pbssBANK0:
   772  006D                     _valor0:
   773  006D                     	ds	1
   774                           
   775                           	psect	bssBANK1
   776  00CD                     __pbssBANK1:
   777  00CD                     _x:
   778  00CD                     	ds	4
   779  00D1                     _v:
   780  00D1                     	ds	4
   781  00D5                     _enviado:
   782  00D5                     	ds	1
   783  00D6                     _recibido:
   784  00D6                     	ds	1
   785  00D7                     _count:
   786  00D7                     	ds	1
   787  00D8                     _valor2:
   788  00D8                     	ds	1
   789  00D9                     _valor1:
   790  00D9                     	ds	1
   791  00DA                     _s:
   792  00DA                     	ds	20
   793                           
   794                           	psect	clrtext
   795  1931                     clear_ram0:	
   796                           ;	Called with FSR containing the base address, and
   797                           ;	W with the last address+1
   798                           
   799  1931  0064               	clrwdt	;clear the watchdog before getting into this loop
   800  1932                     clrloop0:
   801  1932  0180               	clrf	0	;clear RAM location pointed to by FSR
   802  1933  0A84               	incf	4,f	;increment pointer
   803  1934  0604               	xorwf	4,w	;XOR with final address
   804  1935  1903               	btfsc	3,2	;have we reached the end yet?
   805  1936  3400               	retlw	0	;all done for this memory range, return
   806  1937  0604               	xorwf	4,w	;XOR again to restore value
   807  1938  2932               	goto	clrloop0	;do the next byte
   808                           
   809                           	psect	cstackBANK3
   810  0190                     __pcstackBANK3:
   811  0190                     ??_main:
   812                           
   813                           ; 1 bytes @ 0x0
   814  0190                     	ds	3
   815                           
   816                           	psect	cstackBANK1
   817  00A0                     __pcstackBANK1:
   818  00A0                     ?___flsub:
   819  00A0                     ___flsub@a:	
   820                           ; 4 bytes @ 0x0
   821                           
   822                           
   823                           ; 4 bytes @ 0x0
   824  00A0                     	ds	4
   825  00A4                     ___flsub@b:
   826                           
   827                           ; 4 bytes @ 0x4
   828  00A4                     	ds	4
   829  00A8                     ?_sprintf:
   830  00A8                     sprintf@f:	
   831                           ; 2 bytes @ 0x8
   832                           
   833                           
   834                           ; 1 bytes @ 0x8
   835  00A8                     	ds	5
   836  00AD                     ??_sprintf:
   837                           
   838                           ; 1 bytes @ 0xD
   839  00AD                     	ds	5
   840  00B2                     _sprintf$1261:
   841                           
   842                           ; 4 bytes @ 0x12
   843  00B2                     	ds	4
   844  00B6                     sprintf@ap:
   845                           
   846                           ; 1 bytes @ 0x16
   847  00B6                     	ds	1
   848  00B7                     sprintf@flag:
   849                           
   850                           ; 2 bytes @ 0x17
   851  00B7                     	ds	2
   852  00B9                     sprintf@width:
   853                           
   854                           ; 2 bytes @ 0x19
   855  00B9                     	ds	2
   856  00BB                     sprintf@tmpval:
   857                           
   858                           ; 4 bytes @ 0x1B
   859  00BB                     	ds	4
   860  00BF                     sprintf@val:
   861                           
   862                           ; 4 bytes @ 0x1F
   863  00BF                     	ds	4
   864  00C3                     sprintf@eexp:
   865                           
   866                           ; 2 bytes @ 0x23
   867  00C3                     	ds	2
   868  00C5                     sprintf@fval:
   869                           
   870                           ; 4 bytes @ 0x25
   871  00C5                     	ds	4
   872  00C9                     sprintf@sp:
   873                           
   874                           ; 1 bytes @ 0x29
   875  00C9                     	ds	1
   876  00CA                     sprintf@prec:
   877                           
   878                           ; 2 bytes @ 0x2A
   879  00CA                     	ds	2
   880  00CC                     sprintf@c:
   881                           
   882                           ; 1 bytes @ 0x2C
   883  00CC                     	ds	1
   884                           
   885                           	psect	cstackCOMMON
   886  0070                     __pcstackCOMMON:
   887  0070                     ?_isdigit:
   888  0070                     ?_setup:	
   889                           ; 1 bit 
   890                           
   891  0070                     ?_Config_USARTT:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_recibir:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_Lcd_Init:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_Lcd_Clear:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_spiWrite:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ?_spiRead:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_main:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ?_ISR:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ??_ISR:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_Lcd_Port:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_Lcd_Cmd:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_Lcd_Write_Char:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_spiReceiveWait:	
   928                           ; 1 bytes @ 0x0
   929                           
   930                           
   931                           ; 1 bytes @ 0x0
   932  0070                     	ds	3
   933  0073                     ??_setup:
   934  0073                     ??_Config_USARTT:	
   935                           ; 1 bytes @ 0x3
   936                           
   937  0073                     ??_recibir:	
   938                           ; 1 bytes @ 0x3
   939                           
   940  0073                     ?_spiInit:	
   941                           ; 1 bytes @ 0x3
   942                           
   943  0073                     ??_spiWrite:	
   944                           ; 1 bytes @ 0x3
   945                           
   946  0073                     ??_spiRead:	
   947                           ; 1 bytes @ 0x3
   948                           
   949  0073                     ??_isdigit:	
   950                           ; 1 bytes @ 0x3
   951                           
   952  0073                     ??__tdiv_to_l_:	
   953                           ; 1 bytes @ 0x3
   954                           
   955  0073                     ??__div_to_l_:	
   956                           ; 1 bytes @ 0x3
   957                           
   958  0073                     ??_Lcd_Port:	
   959                           ; 1 bytes @ 0x3
   960                           
   961  0073                     ??_spiReceiveWait:	
   962                           ; 1 bytes @ 0x3
   963                           
   964  0073                     ??___lldiv:	
   965                           ; 1 bytes @ 0x3
   966                           
   967  0073                     ??___fleq:	
   968                           ; 1 bytes @ 0x3
   969                           
   970  0073                     ??___flge:	
   971                           ; 1 bytes @ 0x3
   972                           
   973  0073                     ?__Umul8_16:	
   974                           ; 1 bytes @ 0x3
   975                           
   976  0073                     ?___wmul:	
   977                           ; 2 bytes @ 0x3
   978                           
   979  0073                     ?___awmod:	
   980                           ; 2 bytes @ 0x3
   981                           
   982  0073                     ?___lwmod:	
   983                           ; 2 bytes @ 0x3
   984                           
   985  0073                     ?___flneg:	
   986                           ; 2 bytes @ 0x3
   987                           
   988  0073                     ?___xxtofl:	
   989                           ; 4 bytes @ 0x3
   990                           
   991  0073                     Lcd_Port@a:	
   992                           ; 4 bytes @ 0x3
   993                           
   994  0073                     spiInit@sDataSample:	
   995                           ; 1 bytes @ 0x3
   996                           
   997  0073                     spiWrite@dat:	
   998                           ; 1 bytes @ 0x3
   999                           
  1000  0073                     __Umul8_16@multiplicand:	
  1001                           ; 1 bytes @ 0x3
  1002                           
  1003  0073                     _isdigit$1075:	
  1004                           ; 1 bytes @ 0x3
  1005                           
  1006  0073                     ___wmul@multiplier:	
  1007                           ; 1 bytes @ 0x3
  1008                           
  1009  0073                     ___awmod@divisor:	
  1010                           ; 2 bytes @ 0x3
  1011                           
  1012  0073                     ___lwmod@divisor:	
  1013                           ; 2 bytes @ 0x3
  1014                           
  1015  0073                     ___flneg@f1:	
  1016                           ; 2 bytes @ 0x3
  1017                           
  1018  0073                     ___xxtofl@val:	
  1019                           ; 4 bytes @ 0x3
  1020                           
  1021                           
  1022                           ; 4 bytes @ 0x3
  1023  0073                     	ds	1
  1024  0074                     ??_Lcd_Cmd:
  1025  0074                     ??_Lcd_Write_Char:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028  0074                     ??___llmod:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031  0074                     spiInit@sClockIdle:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  0074                     isdigit@c:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037                           
  1038                           ; 1 bytes @ 0x4
  1039  0074                     	ds	1
  1040  0075                     ??__Umul8_16:
  1041  0075                     Lcd_Write_Char@a:	
  1042                           ; 1 bytes @ 0x5
  1043                           
  1044  0075                     spiInit@sTransmitEdge:	
  1045                           ; 1 bytes @ 0x5
  1046                           
  1047  0075                     ___llmod@counter:	
  1048                           ; 1 bytes @ 0x5
  1049                           
  1050  0075                     ___wmul@multiplicand:	
  1051                           ; 1 bytes @ 0x5
  1052                           
  1053  0075                     ___awmod@dividend:	
  1054                           ; 2 bytes @ 0x5
  1055                           
  1056  0075                     ___lwmod@dividend:	
  1057                           ; 2 bytes @ 0x5
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x5
  1061  0075                     	ds	1
  1062  0076                     ??_spiInit:
  1063  0076                     ?_Lcd_Write_String:	
  1064                           ; 1 bytes @ 0x6
  1065                           
  1066  0076                     Lcd_Cmd@a:	
  1067                           ; 1 bytes @ 0x6
  1068                           
  1069  0076                     spiInit@sType:	
  1070                           ; 1 bytes @ 0x6
  1071                           
  1072  0076                     Lcd_Write_String@a:	
  1073                           ; 1 bytes @ 0x6
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x6
  1077  0076                     	ds	1
  1078  0077                     ??_Lcd_Clear:
  1079  0077                     ?_Lcd_Set_Cursor:	
  1080                           ; 1 bytes @ 0x7
  1081                           
  1082  0077                     ??___wmul:	
  1083                           ; 1 bytes @ 0x7
  1084                           
  1085  0077                     ??___awmod:	
  1086                           ; 1 bytes @ 0x7
  1087                           
  1088  0077                     ??___flneg:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091  0077                     ??___lwmod:	
  1092                           ; 1 bytes @ 0x7
  1093                           
  1094  0077                     Lcd_Set_Cursor@b:	
  1095                           ; 1 bytes @ 0x7
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x7
  1099  0077                     	ds	1
  1100  0078                     ??___flsub:
  1101                           
  1102                           	psect	cstackBANK0
  1103  0020                     __pcstackBANK0:	
  1104                           ; 1 bytes @ 0x8
  1105                           
  1106  0020                     ?___fleq:
  1107  0020                     ?___flge:	
  1108                           ; 1 bit 
  1109                           
  1110  0020                     ??_Lcd_Init:	
  1111                           ; 1 bit 
  1112                           
  1113  0020                     ??_Lcd_Set_Cursor:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0020                     ??_Lcd_Write_String:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0020                     ??___xxtofl:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0020                     ?__tdiv_to_l_:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0020                     ?__div_to_l_:	
  1126                           ; 4 bytes @ 0x0
  1127                           
  1128  0020                     ?___lldiv:	
  1129                           ; 4 bytes @ 0x0
  1130                           
  1131  0020                     ___awmod@counter:	
  1132                           ; 4 bytes @ 0x0
  1133                           
  1134  0020                     ___lwmod@counter:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0020                     ___wmul@product:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0020                     __Umul8_16@product:	
  1141                           ; 2 bytes @ 0x0
  1142                           
  1143  0020                     ___lldiv@divisor:	
  1144                           ; 2 bytes @ 0x0
  1145                           
  1146  0020                     __div_to_l_@f1:	
  1147                           ; 4 bytes @ 0x0
  1148                           
  1149  0020                     ___fleq@ff1:	
  1150                           ; 4 bytes @ 0x0
  1151                           
  1152  0020                     ___flge@ff1:	
  1153                           ; 4 bytes @ 0x0
  1154                           
  1155  0020                     __tdiv_to_l_@f1:	
  1156                           ; 4 bytes @ 0x0
  1157                           
  1158                           
  1159                           ; 4 bytes @ 0x0
  1160  0020                     	ds	1
  1161  0021                     ?___lwdiv:
  1162  0021                     Lcd_Set_Cursor@a:	
  1163                           ; 2 bytes @ 0x1
  1164                           
  1165  0021                     ___awmod@sign:	
  1166                           ; 1 bytes @ 0x1
  1167                           
  1168  0021                     ___lwdiv@divisor:	
  1169                           ; 1 bytes @ 0x1
  1170                           
  1171                           
  1172                           ; 2 bytes @ 0x1
  1173  0021                     	ds	1
  1174  0022                     ?___awdiv:
  1175  0022                     Lcd_Set_Cursor@temp:	
  1176                           ; 2 bytes @ 0x2
  1177                           
  1178  0022                     ___awdiv@divisor:	
  1179                           ; 1 bytes @ 0x2
  1180                           
  1181  0022                     __Umul8_16@word_mpld:	
  1182                           ; 2 bytes @ 0x2
  1183                           
  1184                           
  1185                           ; 2 bytes @ 0x2
  1186  0022                     	ds	1
  1187  0023                     Lcd_Write_String@i:
  1188  0023                     ___lwdiv@dividend:	
  1189                           ; 2 bytes @ 0x3
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0x3
  1193  0023                     	ds	1
  1194  0024                     __Umul8_16@multiplier:
  1195  0024                     ___xxtofl@sign:	
  1196                           ; 1 bytes @ 0x4
  1197                           
  1198  0024                     ___awdiv@dividend:	
  1199                           ; 1 bytes @ 0x4
  1200                           
  1201  0024                     ___lldiv@dividend:	
  1202                           ; 2 bytes @ 0x4
  1203                           
  1204  0024                     __div_to_l_@f2:	
  1205                           ; 4 bytes @ 0x4
  1206                           
  1207  0024                     ___fleq@ff2:	
  1208                           ; 4 bytes @ 0x4
  1209                           
  1210  0024                     ___flge@ff2:	
  1211                           ; 4 bytes @ 0x4
  1212                           
  1213  0024                     __tdiv_to_l_@f2:	
  1214                           ; 4 bytes @ 0x4
  1215                           
  1216                           
  1217                           ; 4 bytes @ 0x4
  1218  0024                     	ds	1
  1219  0025                     ??___lwdiv:
  1220  0025                     ___xxtofl@exp:	
  1221                           ; 1 bytes @ 0x5
  1222                           
  1223                           
  1224                           ; 1 bytes @ 0x5
  1225  0025                     	ds	1
  1226  0026                     ??___awdiv:
  1227  0026                     ___lwdiv@counter:	
  1228                           ; 1 bytes @ 0x6
  1229                           
  1230  0026                     ___xxtofl@arg:	
  1231                           ; 1 bytes @ 0x6
  1232                           
  1233                           
  1234                           ; 4 bytes @ 0x6
  1235  0026                     	ds	1
  1236  0027                     ___awdiv@counter:
  1237  0027                     ___lwdiv@quotient:	
  1238                           ; 1 bytes @ 0x7
  1239                           
  1240                           
  1241                           ; 2 bytes @ 0x7
  1242  0027                     	ds	1
  1243  0028                     ___awdiv@sign:
  1244  0028                     ___lldiv@quotient:	
  1245                           ; 1 bytes @ 0x8
  1246                           
  1247  0028                     __div_to_l_@quot:	
  1248                           ; 4 bytes @ 0x8
  1249                           
  1250  0028                     __tdiv_to_l_@quot:	
  1251                           ; 4 bytes @ 0x8
  1252                           
  1253                           
  1254                           ; 4 bytes @ 0x8
  1255  0028                     	ds	1
  1256  0029                     ___awdiv@quotient:
  1257                           
  1258                           ; 2 bytes @ 0x9
  1259  0029                     	ds	2
  1260  002B                     ?___flmul:
  1261  002B                     ___flmul@b:	
  1262                           ; 4 bytes @ 0xB
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0xB
  1266  002B                     	ds	1
  1267  002C                     ___lldiv@counter:
  1268  002C                     __div_to_l_@cntr:	
  1269                           ; 1 bytes @ 0xC
  1270                           
  1271  002C                     __tdiv_to_l_@cntr:	
  1272                           ; 1 bytes @ 0xC
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0xC
  1276  002C                     	ds	1
  1277  002D                     ?___llmod:
  1278  002D                     __div_to_l_@exp1:	
  1279                           ; 4 bytes @ 0xD
  1280                           
  1281  002D                     __tdiv_to_l_@exp1:	
  1282                           ; 1 bytes @ 0xD
  1283                           
  1284  002D                     ___llmod@divisor:	
  1285                           ; 1 bytes @ 0xD
  1286                           
  1287                           
  1288                           ; 4 bytes @ 0xD
  1289  002D                     	ds	2
  1290  002F                     ___flmul@a:
  1291                           
  1292                           ; 4 bytes @ 0xF
  1293  002F                     	ds	2
  1294  0031                     ___llmod@dividend:
  1295                           
  1296                           ; 4 bytes @ 0x11
  1297  0031                     	ds	2
  1298  0033                     ??___flmul:
  1299                           
  1300                           ; 1 bytes @ 0x13
  1301  0033                     	ds	5
  1302  0038                     ___flmul@sign:
  1303                           
  1304                           ; 1 bytes @ 0x18
  1305  0038                     	ds	1
  1306  0039                     ___flmul@grs:
  1307                           
  1308                           ; 4 bytes @ 0x19
  1309  0039                     	ds	4
  1310  003D                     ___flmul@aexp:
  1311                           
  1312                           ; 1 bytes @ 0x1D
  1313  003D                     	ds	1
  1314  003E                     ___flmul@bexp:
  1315                           
  1316                           ; 1 bytes @ 0x1E
  1317  003E                     	ds	1
  1318  003F                     ___flmul@prod:
  1319                           
  1320                           ; 4 bytes @ 0x1F
  1321  003F                     	ds	4
  1322  0043                     ___flmul@temp:
  1323                           
  1324                           ; 2 bytes @ 0x23
  1325  0043                     	ds	2
  1326  0045                     ?_conversor:
  1327  0045                     ?_fround:	
  1328                           ; 4 bytes @ 0x25
  1329                           
  1330  0045                     ?_scale:	
  1331                           ; 4 bytes @ 0x25
  1332                           
  1333                           
  1334                           ; 4 bytes @ 0x25
  1335  0045                     	ds	4
  1336  0049                     ??_conversor:
  1337  0049                     ??_fround:	
  1338                           ; 1 bytes @ 0x29
  1339                           
  1340  0049                     ??_scale:	
  1341                           ; 1 bytes @ 0x29
  1342                           
  1343                           
  1344                           ; 1 bytes @ 0x29
  1345  0049                     	ds	4
  1346  004D                     conversor@val:
  1347                           
  1348                           ; 1 bytes @ 0x2D
  1349  004D                     	ds	3
  1350  0050                     _fround$1259:
  1351                           
  1352                           ; 4 bytes @ 0x30
  1353  0050                     	ds	3
  1354  0053                     _scale$1260:
  1355                           
  1356                           ; 4 bytes @ 0x33
  1357  0053                     	ds	1
  1358  0054                     _fround$1258:
  1359                           
  1360                           ; 4 bytes @ 0x34
  1361  0054                     	ds	3
  1362  0057                     scale@scl:
  1363                           
  1364                           ; 1 bytes @ 0x37
  1365  0057                     	ds	1
  1366  0058                     ?___fltol:
  1367  0058                     fround@prec:	
  1368                           ; 4 bytes @ 0x38
  1369                           
  1370  0058                     ___fltol@f1:	
  1371                           ; 1 bytes @ 0x38
  1372                           
  1373                           
  1374                           ; 4 bytes @ 0x38
  1375  0058                     	ds	1
  1376  0059                     ?___fladd:
  1377  0059                     ___fladd@b:	
  1378                           ; 4 bytes @ 0x39
  1379                           
  1380                           
  1381                           ; 4 bytes @ 0x39
  1382  0059                     	ds	3
  1383  005C                     ??___fltol:
  1384                           
  1385                           ; 1 bytes @ 0x3C
  1386  005C                     	ds	1
  1387  005D                     ___fladd@a:
  1388                           
  1389                           ; 4 bytes @ 0x3D
  1390  005D                     	ds	4
  1391  0061                     ??___fladd:
  1392  0061                     ___fltol@sign1:	
  1393                           ; 1 bytes @ 0x41
  1394                           
  1395                           
  1396                           ; 1 bytes @ 0x41
  1397  0061                     	ds	1
  1398  0062                     ___fltol@exp1:
  1399                           
  1400                           ; 1 bytes @ 0x42
  1401  0062                     	ds	7
  1402  0069                     ___fladd@signs:
  1403                           
  1404                           ; 1 bytes @ 0x49
  1405  0069                     	ds	1
  1406  006A                     ___fladd@aexp:
  1407                           
  1408                           ; 1 bytes @ 0x4A
  1409  006A                     	ds	1
  1410  006B                     ___fladd@bexp:
  1411                           
  1412                           ; 1 bytes @ 0x4B
  1413  006B                     	ds	1
  1414  006C                     ___fladd@grs:
  1415                           
  1416                           ; 1 bytes @ 0x4C
  1417  006C                     	ds	1
  1418                           
  1419                           	psect	maintext
  1420  1E75                     __pmaintext:	
  1421 ;;
  1422 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1423 ;;
  1424 ;; *************** function _main *****************
  1425 ;; Defined at:
  1426 ;;		line 64 in file "main.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : B00/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0
  1442 ;;      Temps:          0       0       0       3       0
  1443 ;;      Totals:         0       0       0       3       0
  1444 ;;Total ram usage:        3 bytes
  1445 ;; Hardware stack levels required when called:    5
  1446 ;; This function calls:
  1447 ;;		_Config_USARTT
  1448 ;;		_Lcd_Clear
  1449 ;;		_Lcd_Init
  1450 ;;		_Lcd_Set_Cursor
  1451 ;;		_Lcd_Write_String
  1452 ;;		_conversor
  1453 ;;		_recibir
  1454 ;;		_setup
  1455 ;;		_spiInit
  1456 ;;		_spiRead
  1457 ;;		_spiWrite
  1458 ;;		_sprintf
  1459 ;; This function is called by:
  1460 ;;		Startup code after reset
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _main
  1466  1E75                     _main:
  1467  1E75                     l4499:	
  1468                           ;incstack = 0
  1469                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1470                           
  1471                           
  1472                           ;main.c: 65:     setup();
  1473  1E75  160A  158A  2176  160A  158A  	fcall	_setup
  1474                           
  1475                           ;main.c: 66:     Config_USARTT();
  1476  1E7A  160A  158A  2165  160A  158A  	fcall	_Config_USARTT
  1477  1E7F                     l4501:
  1478                           
  1479                           ;main.c: 67:     recibir();
  1480  1E7F  160A  158A  2142  160A  158A  	fcall	_recibir
  1481  1E84                     l4503:
  1482                           
  1483                           ;main.c: 68:     Lcd_Init();
  1484  1E84  160A  158A  2315  160A  158A  	fcall	_Lcd_Init
  1485  1E89                     l4505:
  1486                           
  1487                           ;main.c: 69:     Lcd_Clear();
  1488  1E89  160A  158A  2158  160A  158A  	fcall	_Lcd_Clear
  1489  1E8E                     l4507:
  1490                           
  1491                           ;main.c: 70:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1492  1E8E  01F3               	clrf	spiInit@sDataSample
  1493  1E8F  01F4               	clrf	spiInit@sClockIdle
  1494  1E90  01F5               	clrf	spiInit@sTransmitEdge
  1495  1E91  3020               	movlw	32
  1496  1E92  120A  158A  2001  160A  158A  	fcall	_spiInit
  1497  1E97                     l4509:
  1498                           
  1499                           ;main.c: 71:     PORTBbits.RB0 = 1;
  1500  1E97  1283               	bcf	3,5	;RP0=0, select bank0
  1501  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  1502  1E99  1406               	bsf	6,0	;volatile
  1503  1E9A                     l4511:
  1504                           
  1505                           ;main.c: 72:     PORTBbits.RB1 = 1;
  1506  1E9A  1486               	bsf	6,1	;volatile
  1507  1E9B                     l4513:
  1508                           
  1509                           ;main.c: 73:     PORTBbits.RB2 = 1;
  1510  1E9B  1506               	bsf	6,2	;volatile
  1511  1E9C                     l4515:
  1512                           
  1513                           ;main.c: 75:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1514  1E9C  3006               	movlw	6
  1515  1E9D  1683               	bsf	3,5	;RP0=1, select bank3
  1516  1E9E  1703               	bsf	3,6	;RP1=1, select bank3
  1517  1E9F  0092               	movwf	(??_main^(0+384)+2)
  1518  1EA0  3013               	movlw	19
  1519  1EA1  0091               	movwf	(??_main^(0+384)+1)
  1520  1EA2  30AD               	movlw	173
  1521  1EA3  0090               	movwf	??_main^(0+384)
  1522  1EA4                     u7587:
  1523  1EA4  0B90               	decfsz	??_main^(0+384),f
  1524  1EA5  2EA4               	goto	u7587
  1525  1EA6  0B91               	decfsz	(??_main^(0+384)+1),f
  1526  1EA7  2EA4               	goto	u7587
  1527  1EA8  0B92               	decfsz	(??_main^(0+384)+2),f
  1528  1EA9  2EA4               	goto	u7587
  1529  1EAA                     l4517:
  1530                           
  1531                           ;main.c: 76:         PORTBbits.RB0 = 0;
  1532  1EAA  1283               	bcf	3,5	;RP0=0, select bank0
  1533  1EAB  1303               	bcf	3,6	;RP1=0, select bank0
  1534  1EAC  1006               	bcf	6,0	;volatile
  1535  1EAD                     l4519:
  1536                           
  1537                           ;main.c: 77:         PORTBbits.RB1 = 1;
  1538  1EAD  1486               	bsf	6,1	;volatile
  1539  1EAE                     l4521:
  1540                           
  1541                           ;main.c: 78:         PORTBbits.RB2 = 1;
  1542  1EAE  1506               	bsf	6,2	;volatile
  1543  1EAF                     l4523:
  1544                           
  1545                           ;main.c: 79:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1546  1EAF  3003               	movlw	3
  1547  1EB0  1683               	bsf	3,5	;RP0=1, select bank3
  1548  1EB1  1703               	bsf	3,6	;RP1=1, select bank3
  1549  1EB2  0091               	movwf	(??_main^(0+384)+1)
  1550  1EB3  3097               	movlw	151
  1551  1EB4  0090               	movwf	??_main^(0+384)
  1552  1EB5                     u7597:
  1553  1EB5  0B90               	decfsz	??_main^(0+384),f
  1554  1EB6  2EB5               	goto	u7597
  1555  1EB7  0B91               	decfsz	(??_main^(0+384)+1),f
  1556  1EB8  2EB5               	goto	u7597
  1557  1EB9                     l4525:
  1558                           
  1559                           ;main.c: 80:         spiWrite(PORTA);
  1560  1EB9  1283               	bcf	3,5	;RP0=0, select bank0
  1561  1EBA  1303               	bcf	3,6	;RP1=0, select bank0
  1562  1EBB  0805               	movf	5,w	;volatile
  1563  1EBC  160A  158A  2124  160A  158A  	fcall	_spiWrite
  1564  1EC1                     l4527:
  1565                           
  1566                           ;main.c: 81:         valor0 = spiRead();
  1567  1EC1  160A  158A  2139  160A  158A  	fcall	_spiRead
  1568  1EC6  1683               	bsf	3,5	;RP0=1, select bank3
  1569  1EC7  1703               	bsf	3,6	;RP1=1, select bank3
  1570  1EC8  0090               	movwf	??_main^(0+384)
  1571  1EC9  0810               	movf	??_main^(0+384),w
  1572  1ECA  1283               	bcf	3,5	;RP0=0, select bank0
  1573  1ECB  1303               	bcf	3,6	;RP1=0, select bank0
  1574  1ECC  00ED               	movwf	_valor0
  1575  1ECD                     l4529:
  1576                           
  1577                           ;main.c: 82:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1578  1ECD  3006               	movlw	6
  1579  1ECE  1683               	bsf	3,5	;RP0=1, select bank3
  1580  1ECF  1703               	bsf	3,6	;RP1=1, select bank3
  1581  1ED0  0092               	movwf	(??_main^(0+384)+2)
  1582  1ED1  3013               	movlw	19
  1583  1ED2  0091               	movwf	(??_main^(0+384)+1)
  1584  1ED3  30AD               	movlw	173
  1585  1ED4  0090               	movwf	??_main^(0+384)
  1586  1ED5                     u7607:
  1587  1ED5  0B90               	decfsz	??_main^(0+384),f
  1588  1ED6  2ED5               	goto	u7607
  1589  1ED7  0B91               	decfsz	(??_main^(0+384)+1),f
  1590  1ED8  2ED5               	goto	u7607
  1591  1ED9  0B92               	decfsz	(??_main^(0+384)+2),f
  1592  1EDA  2ED5               	goto	u7607
  1593  1EDB                     l4531:
  1594                           
  1595                           ;main.c: 84:         PORTBbits.RB0 = 1;
  1596  1EDB  1283               	bcf	3,5	;RP0=0, select bank0
  1597  1EDC  1303               	bcf	3,6	;RP1=0, select bank0
  1598  1EDD  1406               	bsf	6,0	;volatile
  1599  1EDE                     l4533:
  1600                           
  1601                           ;main.c: 85:         PORTBbits.RB1 = 1;
  1602  1EDE  1486               	bsf	6,1	;volatile
  1603  1EDF                     l4535:
  1604                           
  1605                           ;main.c: 86:         PORTBbits.RB2 = 0;
  1606  1EDF  1106               	bcf	6,2	;volatile
  1607  1EE0                     l4537:
  1608                           
  1609                           ;main.c: 87:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1610  1EE0  3003               	movlw	3
  1611  1EE1  1683               	bsf	3,5	;RP0=1, select bank3
  1612  1EE2  1703               	bsf	3,6	;RP1=1, select bank3
  1613  1EE3  0091               	movwf	(??_main^(0+384)+1)
  1614  1EE4  3097               	movlw	151
  1615  1EE5  0090               	movwf	??_main^(0+384)
  1616  1EE6                     u7617:
  1617  1EE6  0B90               	decfsz	??_main^(0+384),f
  1618  1EE7  2EE6               	goto	u7617
  1619  1EE8  0B91               	decfsz	(??_main^(0+384)+1),f
  1620  1EE9  2EE6               	goto	u7617
  1621  1EEA                     l4539:
  1622                           
  1623                           ;main.c: 88:         spiWrite(PORTA);
  1624  1EEA  1283               	bcf	3,5	;RP0=0, select bank0
  1625  1EEB  1303               	bcf	3,6	;RP1=0, select bank0
  1626  1EEC  0805               	movf	5,w	;volatile
  1627  1EED  160A  158A  2124  160A  158A  	fcall	_spiWrite
  1628  1EF2                     l4541:
  1629                           
  1630                           ;main.c: 89:         valor1 = spiRead();
  1631  1EF2  160A  158A  2139  160A  158A  	fcall	_spiRead
  1632  1EF7  1683               	bsf	3,5	;RP0=1, select bank3
  1633  1EF8  1703               	bsf	3,6	;RP1=1, select bank3
  1634  1EF9  0090               	movwf	??_main^(0+384)
  1635  1EFA  0810               	movf	??_main^(0+384),w
  1636  1EFB  1683               	bsf	3,5	;RP0=1, select bank1
  1637  1EFC  1303               	bcf	3,6	;RP1=0, select bank1
  1638  1EFD  00D9               	movwf	_valor1^(0+128)
  1639  1EFE                     l4543:
  1640                           
  1641                           ;main.c: 90:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1642  1EFE  3006               	movlw	6
  1643  1EFF  1683               	bsf	3,5	;RP0=1, select bank3
  1644  1F00  1703               	bsf	3,6	;RP1=1, select bank3
  1645  1F01  0092               	movwf	(??_main^(0+384)+2)
  1646  1F02  3013               	movlw	19
  1647  1F03  0091               	movwf	(??_main^(0+384)+1)
  1648  1F04  30AD               	movlw	173
  1649  1F05  0090               	movwf	??_main^(0+384)
  1650  1F06                     u7627:
  1651  1F06  0B90               	decfsz	??_main^(0+384),f
  1652  1F07  2F06               	goto	u7627
  1653  1F08  0B91               	decfsz	(??_main^(0+384)+1),f
  1654  1F09  2F06               	goto	u7627
  1655  1F0A  0B92               	decfsz	(??_main^(0+384)+2),f
  1656  1F0B  2F06               	goto	u7627
  1657  1F0C                     l4545:
  1658                           
  1659                           ;main.c: 91:         PORTBbits.RB0 = 1;
  1660  1F0C  1283               	bcf	3,5	;RP0=0, select bank0
  1661  1F0D  1303               	bcf	3,6	;RP1=0, select bank0
  1662  1F0E  1406               	bsf	6,0	;volatile
  1663  1F0F                     l4547:
  1664                           
  1665                           ;main.c: 92:         PORTBbits.RB1 = 0;
  1666  1F0F  1086               	bcf	6,1	;volatile
  1667  1F10                     l4549:
  1668                           
  1669                           ;main.c: 93:         PORTBbits.RB2 = 1;
  1670  1F10  1506               	bsf	6,2	;volatile
  1671  1F11                     l4551:
  1672                           
  1673                           ;main.c: 94:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1674  1F11  3003               	movlw	3
  1675  1F12  1683               	bsf	3,5	;RP0=1, select bank3
  1676  1F13  1703               	bsf	3,6	;RP1=1, select bank3
  1677  1F14  0091               	movwf	(??_main^(0+384)+1)
  1678  1F15  3097               	movlw	151
  1679  1F16  0090               	movwf	??_main^(0+384)
  1680  1F17                     u7637:
  1681  1F17  0B90               	decfsz	??_main^(0+384),f
  1682  1F18  2F17               	goto	u7637
  1683  1F19  0B91               	decfsz	(??_main^(0+384)+1),f
  1684  1F1A  2F17               	goto	u7637
  1685  1F1B                     l4553:
  1686                           
  1687                           ;main.c: 95:         spiWrite(PORTA);
  1688  1F1B  1283               	bcf	3,5	;RP0=0, select bank0
  1689  1F1C  1303               	bcf	3,6	;RP1=0, select bank0
  1690  1F1D  0805               	movf	5,w	;volatile
  1691  1F1E  160A  158A  2124  160A  158A  	fcall	_spiWrite
  1692  1F23                     l4555:
  1693                           
  1694                           ;main.c: 96:         valor2 = spiRead();
  1695  1F23  160A  158A  2139  160A  158A  	fcall	_spiRead
  1696  1F28  1683               	bsf	3,5	;RP0=1, select bank3
  1697  1F29  1703               	bsf	3,6	;RP1=1, select bank3
  1698  1F2A  0090               	movwf	??_main^(0+384)
  1699  1F2B  0810               	movf	??_main^(0+384),w
  1700  1F2C  1683               	bsf	3,5	;RP0=1, select bank1
  1701  1F2D  1303               	bcf	3,6	;RP1=0, select bank1
  1702  1F2E  00D8               	movwf	_valor2^(0+128)
  1703  1F2F                     l4557:
  1704                           
  1705                           ;main.c: 97:         _delay((unsigned long)((800)*(8000000/4000.0)));
  1706  1F2F  3009               	movlw	9
  1707  1F30  1683               	bsf	3,5	;RP0=1, select bank3
  1708  1F31  1703               	bsf	3,6	;RP1=1, select bank3
  1709  1F32  0092               	movwf	(??_main^(0+384)+2)
  1710  1F33  301E               	movlw	30
  1711  1F34  0091               	movwf	(??_main^(0+384)+1)
  1712  1F35  30E3               	movlw	227
  1713  1F36  0090               	movwf	??_main^(0+384)
  1714  1F37                     u7647:
  1715  1F37  0B90               	decfsz	??_main^(0+384),f
  1716  1F38  2F37               	goto	u7647
  1717  1F39  0B91               	decfsz	(??_main^(0+384)+1),f
  1718  1F3A  2F37               	goto	u7647
  1719  1F3B  0B92               	decfsz	(??_main^(0+384)+2),f
  1720  1F3C  2F37               	goto	u7647
  1721  1F3D  2F3E               	nop2
  1722                           
  1723                           ;main.c: 100:         Lcd_Set_Cursor(1, 1);
  1724  1F3E  01F7               	clrf	Lcd_Set_Cursor@b
  1725  1F3F  0AF7               	incf	Lcd_Set_Cursor@b,f
  1726  1F40  3001               	movlw	1
  1727  1F41  160A  158A  21D3  160A  158A  	fcall	_Lcd_Set_Cursor
  1728  1F46                     l4559:
  1729                           
  1730                           ;main.c: 101:         Lcd_Write_String("S1:   S2:    S3:");
  1731  1F46  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1732  1F47  00F6               	movwf	Lcd_Write_String@a
  1733  1F48  3080               	movlw	128
  1734  1F49  00F7               	movwf	Lcd_Write_String@a+1
  1735  1F4A  160A  158A  2289  160A  158A  	fcall	_Lcd_Write_String
  1736  1F4F                     l4561:
  1737                           
  1738                           ;main.c: 104:         Lcd_Set_Cursor(2, 1);
  1739  1F4F  01F7               	clrf	Lcd_Set_Cursor@b
  1740  1F50  0AF7               	incf	Lcd_Set_Cursor@b,f
  1741  1F51  3002               	movlw	2
  1742  1F52  160A  158A  21D3  160A  158A  	fcall	_Lcd_Set_Cursor
  1743  1F57                     l4563:
  1744                           
  1745                           ;main.c: 105:         v=conversor(valor2);
  1746  1F57  1683               	bsf	3,5	;RP0=1, select bank1
  1747  1F58  1303               	bcf	3,6	;RP1=0, select bank1
  1748  1F59  0858               	movf	_valor2^(0+128),w
  1749  1F5A  160A  118A  2005  160A  158A  	fcall	_conversor
  1750  1F5F  1283               	bcf	3,5	;RP0=0, select bank0
  1751  1F60  1303               	bcf	3,6	;RP1=0, select bank0
  1752  1F61  0848               	movf	?_conversor+3,w
  1753  1F62  1683               	bsf	3,5	;RP0=1, select bank1
  1754  1F63  1303               	bcf	3,6	;RP1=0, select bank1
  1755  1F64  00D4               	movwf	(_v+3)^(0+128)
  1756  1F65  1283               	bcf	3,5	;RP0=0, select bank0
  1757  1F66  1303               	bcf	3,6	;RP1=0, select bank0
  1758  1F67  0847               	movf	?_conversor+2,w
  1759  1F68  1683               	bsf	3,5	;RP0=1, select bank1
  1760  1F69  1303               	bcf	3,6	;RP1=0, select bank1
  1761  1F6A  00D3               	movwf	(_v+2)^(0+128)
  1762  1F6B  1283               	bcf	3,5	;RP0=0, select bank0
  1763  1F6C  1303               	bcf	3,6	;RP1=0, select bank0
  1764  1F6D  0846               	movf	?_conversor+1,w
  1765  1F6E  1683               	bsf	3,5	;RP0=1, select bank1
  1766  1F6F  1303               	bcf	3,6	;RP1=0, select bank1
  1767  1F70  00D2               	movwf	(_v+1)^(0+128)
  1768  1F71  1283               	bcf	3,5	;RP0=0, select bank0
  1769  1F72  1303               	bcf	3,6	;RP1=0, select bank0
  1770  1F73  0845               	movf	?_conversor,w
  1771  1F74  1683               	bsf	3,5	;RP0=1, select bank1
  1772  1F75  1303               	bcf	3,6	;RP1=0, select bank1
  1773  1F76  00D1               	movwf	_v^(0+128)
  1774  1F77                     l4565:
  1775                           
  1776                           ;main.c: 106:         sprintf(s, "%3.2fV", v);
  1777  1F77  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1778  1F78  1683               	bsf	3,5	;RP0=1, select bank3
  1779  1F79  1703               	bsf	3,6	;RP1=1, select bank3
  1780  1F7A  0090               	movwf	??_main^(0+384)
  1781  1F7B  0810               	movf	??_main^(0+384),w
  1782  1F7C  1683               	bsf	3,5	;RP0=1, select bank1
  1783  1F7D  1303               	bcf	3,6	;RP1=0, select bank1
  1784  1F7E  00A8               	movwf	sprintf@f^(0+128)
  1785  1F7F  0854               	movf	(_v+3)^(0+128),w
  1786  1F80  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1787  1F81  0853               	movf	(_v+2)^(0+128),w
  1788  1F82  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1789  1F83  0852               	movf	(_v+1)^(0+128),w
  1790  1F84  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1791  1F85  0851               	movf	_v^(0+128),w
  1792  1F86  00A9               	movwf	(?_sprintf^(0+128)+1)
  1793  1F87  30DA               	movlw	(low (_s| 0))& (0+255)
  1794  1F88  160A  118A  24F6  160A  158A  	fcall	_sprintf
  1795  1F8D                     l4567:
  1796                           
  1797                           ;main.c: 108:         Lcd_Write_String(s);
  1798  1F8D  30DA               	movlw	(low (_s| 0))& (0+255)
  1799  1F8E  00F6               	movwf	Lcd_Write_String@a
  1800  1F8F  3000               	movlw	0
  1801  1F90  00F7               	movwf	Lcd_Write_String@a+1
  1802  1F91  160A  158A  2289  160A  158A  	fcall	_Lcd_Write_String
  1803  1F96                     l4569:
  1804                           
  1805                           ;main.c: 110:         Lcd_Set_Cursor(2, 7);
  1806  1F96  3007               	movlw	7
  1807  1F97  1683               	bsf	3,5	;RP0=1, select bank3
  1808  1F98  1703               	bsf	3,6	;RP1=1, select bank3
  1809  1F99  0090               	movwf	??_main^(0+384)
  1810  1F9A  0810               	movf	??_main^(0+384),w
  1811  1F9B  00F7               	movwf	Lcd_Set_Cursor@b
  1812  1F9C  3002               	movlw	2
  1813  1F9D  160A  158A  21D3  160A  158A  	fcall	_Lcd_Set_Cursor
  1814  1FA2                     l4571:
  1815                           
  1816                           ;main.c: 111:         sprintf(s, "%d", valor1);
  1817  1FA2  30A9               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1818  1FA3  1683               	bsf	3,5	;RP0=1, select bank3
  1819  1FA4  1703               	bsf	3,6	;RP1=1, select bank3
  1820  1FA5  0090               	movwf	??_main^(0+384)
  1821  1FA6  0810               	movf	??_main^(0+384),w
  1822  1FA7  1683               	bsf	3,5	;RP0=1, select bank1
  1823  1FA8  1303               	bcf	3,6	;RP1=0, select bank1
  1824  1FA9  00A8               	movwf	sprintf@f^(0+128)
  1825  1FAA  0859               	movf	_valor1^(0+128),w
  1826  1FAB  1683               	bsf	3,5	;RP0=1, select bank3
  1827  1FAC  1703               	bsf	3,6	;RP1=1, select bank3
  1828  1FAD  0091               	movwf	(??_main+1)^(0+384)
  1829  1FAE  0192               	clrf	((??_main+1)^(0+384)+1)
  1830  1FAF  0811               	movf	(??_main+1)^(0+384),w
  1831  1FB0  1683               	bsf	3,5	;RP0=1, select bank1
  1832  1FB1  1303               	bcf	3,6	;RP1=0, select bank1
  1833  1FB2  00A9               	movwf	(?_sprintf^(0+128)+1)
  1834  1FB3  1683               	bsf	3,5	;RP0=1, select bank3
  1835  1FB4  1703               	bsf	3,6	;RP1=1, select bank3
  1836  1FB5  0812               	movf	(??_main+2)^(0+384),w
  1837  1FB6  1683               	bsf	3,5	;RP0=1, select bank1
  1838  1FB7  1303               	bcf	3,6	;RP1=0, select bank1
  1839  1FB8  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1840  1FB9  30DA               	movlw	(low (_s| 0))& (0+255)
  1841  1FBA  160A  118A  24F6  160A  158A  	fcall	_sprintf
  1842  1FBF                     l4573:
  1843                           
  1844                           ;main.c: 112:         Lcd_Write_String(s);
  1845  1FBF  30DA               	movlw	(low (_s| 0))& (0+255)
  1846  1FC0  00F6               	movwf	Lcd_Write_String@a
  1847  1FC1  3000               	movlw	0
  1848  1FC2  00F7               	movwf	Lcd_Write_String@a+1
  1849  1FC3  160A  158A  2289  160A  158A  	fcall	_Lcd_Write_String
  1850  1FC8                     l4575:
  1851                           
  1852                           ;main.c: 114:         sprintf(s, "%3.2fV", valor0);
  1853  1FC8  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1854  1FC9  1683               	bsf	3,5	;RP0=1, select bank3
  1855  1FCA  1703               	bsf	3,6	;RP1=1, select bank3
  1856  1FCB  0090               	movwf	??_main^(0+384)
  1857  1FCC  0810               	movf	??_main^(0+384),w
  1858  1FCD  1683               	bsf	3,5	;RP0=1, select bank1
  1859  1FCE  1303               	bcf	3,6	;RP1=0, select bank1
  1860  1FCF  00A8               	movwf	sprintf@f^(0+128)
  1861  1FD0  1283               	bcf	3,5	;RP0=0, select bank0
  1862  1FD1  1303               	bcf	3,6	;RP1=0, select bank0
  1863  1FD2  086D               	movf	_valor0,w
  1864  1FD3  1683               	bsf	3,5	;RP0=1, select bank3
  1865  1FD4  1703               	bsf	3,6	;RP1=1, select bank3
  1866  1FD5  0091               	movwf	(??_main+1)^(0+384)
  1867  1FD6  0192               	clrf	((??_main+1)^(0+384)+1)
  1868  1FD7  0811               	movf	(??_main+1)^(0+384),w
  1869  1FD8  1683               	bsf	3,5	;RP0=1, select bank1
  1870  1FD9  1303               	bcf	3,6	;RP1=0, select bank1
  1871  1FDA  00A9               	movwf	(?_sprintf^(0+128)+1)
  1872  1FDB  1683               	bsf	3,5	;RP0=1, select bank3
  1873  1FDC  1703               	bsf	3,6	;RP1=1, select bank3
  1874  1FDD  0812               	movf	(??_main+2)^(0+384),w
  1875  1FDE  1683               	bsf	3,5	;RP0=1, select bank1
  1876  1FDF  1303               	bcf	3,6	;RP1=0, select bank1
  1877  1FE0  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1878  1FE1  30DA               	movlw	(low (_s| 0))& (0+255)
  1879  1FE2  160A  118A  24F6  160A  158A  	fcall	_sprintf
  1880  1FE7                     l4577:
  1881                           
  1882                           ;main.c: 116:         Lcd_Set_Cursor(2, 14);
  1883  1FE7  300E               	movlw	14
  1884  1FE8  1683               	bsf	3,5	;RP0=1, select bank3
  1885  1FE9  1703               	bsf	3,6	;RP1=1, select bank3
  1886  1FEA  0090               	movwf	??_main^(0+384)
  1887  1FEB  0810               	movf	??_main^(0+384),w
  1888  1FEC  00F7               	movwf	Lcd_Set_Cursor@b
  1889  1FED  3002               	movlw	2
  1890  1FEE  160A  158A  21D3  160A  158A  	fcall	_Lcd_Set_Cursor
  1891  1FF3                     l4579:
  1892                           
  1893                           ;main.c: 117:         Lcd_Write_String(s);
  1894  1FF3  30DA               	movlw	(low (_s| 0))& (0+255)
  1895  1FF4  00F6               	movwf	Lcd_Write_String@a
  1896  1FF5  3000               	movlw	0
  1897  1FF6  00F7               	movwf	Lcd_Write_String@a+1
  1898  1FF7  160A  158A  2289  160A  158A  	fcall	_Lcd_Write_String
  1899  1FFC  2E9C               	goto	l4515
  1900  1FFD  120A  118A  280C   	ljmp	start
  1901  2000                     __end_of_main:
  1902                           
  1903                           	psect	text1
  1904  14F6                     __ptext1:	
  1905 ;; *************** function _sprintf *****************
  1906 ;; Defined at:
  1907 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  sp              1    wreg     PTR unsigned char 
  1910 ;;		 -> s(20), 
  1911 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1912 ;;		 -> STR_4(7), STR_3(3), STR_2(7), 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1915 ;;		 -> s(20), 
  1916 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1917 ;;  val             4   31[BANK1 ] unsigned long 
  1918 ;;  tmpval          4   27[BANK1 ] struct .
  1919 ;;  prec            2   42[BANK1 ] int 
  1920 ;;  eexp            2   35[BANK1 ] int 
  1921 ;;  width           2   25[BANK1 ] int 
  1922 ;;  flag            2   23[BANK1 ] unsigned short 
  1923 ;;  cp              2    0        PTR const unsigned char 
  1924 ;;  len             2    0        unsigned int 
  1925 ;;  c               1   44[BANK1 ] unsigned char 
  1926 ;;  ap              1   22[BANK1 ] PTR void [1]
  1927 ;;		 -> ?_sprintf(2), 
  1928 ;;  d               1    0        unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  2    8[BANK1 ] int 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1938 ;;      Params:         0       0       5       0       0
  1939 ;;      Locals:         0       0      27       0       0
  1940 ;;      Temps:          0       0       5       0       0
  1941 ;;      Totals:         0       0      37       0       0
  1942 ;;Total ram usage:       37 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    4
  1945 ;; This function calls:
  1946 ;;		___awdiv
  1947 ;;		___fladd
  1948 ;;		___fleq
  1949 ;;		___flge
  1950 ;;		___flmul
  1951 ;;		___flneg
  1952 ;;		___flsub
  1953 ;;		___fltol
  1954 ;;		___lldiv
  1955 ;;		___llmod
  1956 ;;		___wmul
  1957 ;;		___xxtofl
  1958 ;;		__div_to_l_
  1959 ;;		__tdiv_to_l_
  1960 ;;		_fround
  1961 ;;		_isdigit
  1962 ;;		_scale
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _sprintf
  1970  14F6                     _sprintf:
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1974                           ;sprintf@sp stored from wreg
  1975  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  1976  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  1977  14F8  00C9               	movwf	sprintf@sp^(0+128)
  1978  14F9                     l4205:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1981  14F9  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1982  14FA  00AD               	movwf	??_sprintf^(0+128)
  1983  14FB  082D               	movf	??_sprintf^(0+128),w
  1984  14FC  00B6               	movwf	sprintf@ap^(0+128)
  1985  14FD                     L1:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1988  14FD  120A  118A  2E93   	goto	l4487
  1989  1500                     l4207:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1992  1500  3025               	movlw	37
  1993  1501  064C               	xorwf	sprintf@c^(0+128),w
  1994  1502  1903               	btfsc	3,2
  1995  1503  2D05               	goto	u7051
  1996  1504  2D06               	goto	u7050
  1997  1505                     u7051:
  1998  1505  2D12               	goto	l4213
  1999  1506                     u7050:
  2000  1506                     l4209:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2003  1506  084C               	movf	sprintf@c^(0+128),w
  2004  1507  00AD               	movwf	??_sprintf^(0+128)
  2005  1508  0849               	movf	sprintf@sp^(0+128),w
  2006  1509  0084               	movwf	4
  2007  150A  082D               	movf	??_sprintf^(0+128),w
  2008  150B  1383               	bcf	3,7	;select IRP bank0
  2009  150C  0080               	movwf	0
  2010  150D                     l4211:
  2011  150D  3001               	movlw	1
  2012  150E  00AD               	movwf	??_sprintf^(0+128)
  2013  150F  082D               	movf	??_sprintf^(0+128),w
  2014  1510  07C9               	addwf	sprintf@sp^(0+128),f
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2017  1511  2CFD               	goto	L1
  2018  1512                     l4213:
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2021  1512  01B9               	clrf	sprintf@width^(0+128)
  2022  1513  01BA               	clrf	(sprintf@width+1)^(0+128)
  2023                           
  2024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2025  1514  01B7               	clrf	sprintf@flag^(0+128)
  2026  1515  01B8               	clrf	(sprintf@flag+1)^(0+128)
  2027  1516                     l4215:
  2028                           
  2029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2030  1516  0828               	movf	sprintf@f^(0+128),w
  2031  1517  0084               	movwf	4
  2032  1518  160A  158A  200A  160A  118A  	fcall	stringdir
  2033  151D  160A  158A  2188  160A  118A  	fcall	_isdigit
  2034  1522  1C03               	btfss	3,0
  2035  1523  2D25               	goto	u7061
  2036  1524  2D26               	goto	u7060
  2037  1525                     u7061:
  2038  1525  2D66               	goto	l4227
  2039  1526                     u7060:
  2040  1526                     l4217:
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2043  1526  1683               	bsf	3,5	;RP0=1, select bank1
  2044  1527  1303               	bcf	3,6	;RP1=0, select bank1
  2045  1528  01B9               	clrf	sprintf@width^(0+128)
  2046  1529  01BA               	clrf	(sprintf@width+1)^(0+128)
  2047  152A                     l4219:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2050  152A  300A               	movlw	10
  2051  152B  00F3               	movwf	___wmul@multiplier
  2052  152C  3000               	movlw	0
  2053  152D  00F4               	movwf	___wmul@multiplier+1
  2054  152E  1683               	bsf	3,5	;RP0=1, select bank1
  2055  152F  1303               	bcf	3,6	;RP1=0, select bank1
  2056  1530  083A               	movf	(sprintf@width+1)^(0+128),w
  2057  1531  00F6               	movwf	___wmul@multiplicand+1
  2058  1532  0839               	movf	sprintf@width^(0+128),w
  2059  1533  00F5               	movwf	___wmul@multiplicand
  2060  1534  160A  158A  2222  160A  118A  	fcall	___wmul
  2061  1539  0874               	movf	?___wmul+1,w
  2062  153A  1683               	bsf	3,5	;RP0=1, select bank1
  2063  153B  1303               	bcf	3,6	;RP1=0, select bank1
  2064  153C  00BA               	movwf	(sprintf@width+1)^(0+128)
  2065  153D  0873               	movf	?___wmul,w
  2066  153E  00B9               	movwf	sprintf@width^(0+128)
  2067  153F                     l4221:
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2070  153F  0828               	movf	sprintf@f^(0+128),w
  2071  1540  0084               	movwf	4
  2072  1541  160A  158A  200A  160A  118A  	fcall	stringdir
  2073  1546  3ED0               	addlw	208
  2074  1547  00AD               	movwf	??_sprintf^(0+128)
  2075  1548  30FF               	movlw	255
  2076  1549  1803               	skipnc
  2077  154A  3000               	movlw	0
  2078  154B  00AE               	movwf	(??_sprintf^(0+128)+1)
  2079  154C  082D               	movf	??_sprintf^(0+128),w
  2080  154D  07B9               	addwf	sprintf@width^(0+128),f
  2081  154E  1803               	skipnc
  2082  154F  0ABA               	incf	(sprintf@width+1)^(0+128),f
  2083  1550  082E               	movf	(??_sprintf+1)^(0+128),w
  2084  1551  07BA               	addwf	(sprintf@width+1)^(0+128),f
  2085  1552                     l4223:
  2086  1552  3001               	movlw	1
  2087  1553  00AD               	movwf	??_sprintf^(0+128)
  2088  1554  082D               	movf	??_sprintf^(0+128),w
  2089  1555  07A8               	addwf	sprintf@f^(0+128),f
  2090  1556                     l4225:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2093  1556  0828               	movf	sprintf@f^(0+128),w
  2094  1557  0084               	movwf	4
  2095  1558  160A  158A  200A  160A  118A  	fcall	stringdir
  2096  155D  160A  158A  2188  160A  118A  	fcall	_isdigit
  2097  1562  1803               	btfsc	3,0
  2098  1563  2D65               	goto	u7071
  2099  1564  2D66               	goto	u7070
  2100  1565                     u7071:
  2101  1565  2D2A               	goto	l4219
  2102  1566                     u7070:
  2103  1566                     l4227:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2106  1566  1683               	bsf	3,5	;RP0=1, select bank1
  2107  1567  1303               	bcf	3,6	;RP1=0, select bank1
  2108  1568  0828               	movf	sprintf@f^(0+128),w
  2109  1569  0084               	movwf	4
  2110  156A  160A  158A  200A  160A  118A  	fcall	stringdir
  2111  156F  3A2E               	xorlw	46
  2112  1570  1D03               	skipz
  2113  1571  2D73               	goto	u7081
  2114  1572  2D74               	goto	u7080
  2115  1573                     u7081:
  2116  1573  2DB9               	goto	l4243
  2117  1574                     u7080:
  2118  1574                     l4229:
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2121  1574  1738               	bsf	(sprintf@flag^(0+128)+1),6
  2122  1575                     l4231:
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2125  1575  3001               	movlw	1
  2126  1576  00AD               	movwf	??_sprintf^(0+128)
  2127  1577  082D               	movf	??_sprintf^(0+128),w
  2128  1578  07A8               	addwf	sprintf@f^(0+128),f
  2129  1579                     l4233:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2132  1579  01CA               	clrf	sprintf@prec^(0+128)
  2133  157A  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2136  157B  2DA8               	goto	l4241
  2137  157C                     l4235:
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2140  157C  300A               	movlw	10
  2141  157D  00F3               	movwf	___wmul@multiplier
  2142  157E  3000               	movlw	0
  2143  157F  00F4               	movwf	___wmul@multiplier+1
  2144  1580  1683               	bsf	3,5	;RP0=1, select bank1
  2145  1581  1303               	bcf	3,6	;RP1=0, select bank1
  2146  1582  084B               	movf	(sprintf@prec+1)^(0+128),w
  2147  1583  00F6               	movwf	___wmul@multiplicand+1
  2148  1584  084A               	movf	sprintf@prec^(0+128),w
  2149  1585  00F5               	movwf	___wmul@multiplicand
  2150  1586  160A  158A  2222  160A  118A  	fcall	___wmul
  2151  158B  0874               	movf	?___wmul+1,w
  2152  158C  1683               	bsf	3,5	;RP0=1, select bank1
  2153  158D  1303               	bcf	3,6	;RP1=0, select bank1
  2154  158E  00CB               	movwf	(sprintf@prec+1)^(0+128)
  2155  158F  0873               	movf	?___wmul,w
  2156  1590  00CA               	movwf	sprintf@prec^(0+128)
  2157  1591                     l4237:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2160  1591  0828               	movf	sprintf@f^(0+128),w
  2161  1592  0084               	movwf	4
  2162  1593  160A  158A  200A  160A  118A  	fcall	stringdir
  2163  1598  3ED0               	addlw	208
  2164  1599  00AD               	movwf	??_sprintf^(0+128)
  2165  159A  30FF               	movlw	255
  2166  159B  1803               	skipnc
  2167  159C  3000               	movlw	0
  2168  159D  00AE               	movwf	(??_sprintf^(0+128)+1)
  2169  159E  082D               	movf	??_sprintf^(0+128),w
  2170  159F  07CA               	addwf	sprintf@prec^(0+128),f
  2171  15A0  1803               	skipnc
  2172  15A1  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  2173  15A2  082E               	movf	(??_sprintf+1)^(0+128),w
  2174  15A3  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  2175  15A4                     l4239:
  2176  15A4  3001               	movlw	1
  2177  15A5  00AD               	movwf	??_sprintf^(0+128)
  2178  15A6  082D               	movf	??_sprintf^(0+128),w
  2179  15A7  07A8               	addwf	sprintf@f^(0+128),f
  2180  15A8                     l4241:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2183  15A8  0828               	movf	sprintf@f^(0+128),w
  2184  15A9  0084               	movwf	4
  2185  15AA  160A  158A  200A  160A  118A  	fcall	stringdir
  2186  15AF  160A  158A  2188  160A  118A  	fcall	_isdigit
  2187  15B4  1803               	btfsc	3,0
  2188  15B5  2DB7               	goto	u7091
  2189  15B6  2DB8               	goto	u7090
  2190  15B7                     u7091:
  2191  15B7  2D7C               	goto	l4235
  2192  15B8                     u7090:
  2193  15B8  2DBF               	goto	l4249
  2194  15B9                     l4243:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2197  15B9  01CA               	clrf	sprintf@prec^(0+128)
  2198  15BA  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2199  15BB                     l4245:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2202  15BB  1638               	bsf	(sprintf@flag^(0+128)+1),4
  2203  15BC  2DBF               	goto	l4249
  2204  15BD                     l334:	
  2205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2206                           
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2209  15BD  1538               	bsf	(sprintf@flag^(0+128)+1),2
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2212  15BE  2DE1               	goto	l4251
  2213  15BF                     l4249:
  2214  15BF  3001               	movlw	1
  2215  15C0  1683               	bsf	3,5	;RP0=1, select bank1
  2216  15C1  1303               	bcf	3,6	;RP1=0, select bank1
  2217  15C2  07A8               	addwf	sprintf@f^(0+128),f
  2218  15C3  30FF               	movlw	-1
  2219  15C4  0728               	addwf	sprintf@f^(0+128),w
  2220  15C5  0084               	movwf	4
  2221  15C6  160A  158A  200A  160A  118A  	fcall	stringdir
  2222  15CB  00CC               	movwf	sprintf@c^(0+128)
  2223  15CC  00AD               	movwf	??_sprintf^(0+128)
  2224  15CD  01AE               	clrf	(??_sprintf^(0+128)+1)
  2225                           
  2226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2227                           ; Switch size 1, requested type "simple"
  2228                           ; Number of cases is 1, Range of values is 0 to 0
  2229                           ; switch strategies available:
  2230                           ; Name         Instructions Cycles
  2231                           ; simple_byte            4     3 (average)
  2232                           ; direct_byte           11     8 (fixed)
  2233                           ; jumptable            260     6 (fixed)
  2234                           ;	Chosen strategy is simple_byte
  2235  15CE  082E               	movf	(??_sprintf+1)^(0+128),w
  2236  15CF  3A00               	xorlw	0	; case 0
  2237  15D0  1903               	skipnz
  2238  15D1  2DD3               	goto	l4611
  2239  15D2  2CFD               	goto	L1
  2240  15D3                     l4611:
  2241                           
  2242                           ; Switch size 1, requested type "simple"
  2243                           ; Number of cases is 4, Range of values is 0 to 105
  2244                           ; switch strategies available:
  2245                           ; Name         Instructions Cycles
  2246                           ; simple_byte           13     7 (average)
  2247                           ; jumptable            260     6 (fixed)
  2248                           ;	Chosen strategy is simple_byte
  2249  15D3  082D               	movf	??_sprintf^(0+128),w
  2250  15D4  3A00               	xorlw	0	; case 0
  2251  15D5  1903               	skipnz
  2252  15D6  2FFD               	goto	L3
  2253  15D7  3A64               	xorlw	100	; case 100
  2254  15D8  1903               	skipnz
  2255  15D9  2DE1               	goto	l4251
  2256  15DA  3A02               	xorlw	2	; case 102
  2257  15DB  1903               	skipnz
  2258  15DC  2DBD               	goto	l334
  2259  15DD  3A0F               	xorlw	15	; case 105
  2260  15DE  1903               	skipnz
  2261  15DF  2DE1               	goto	l4251
  2262  15E0  2CFD               	goto	L1
  2263  15E1                     l4251:
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2266  15E1  3000               	movlw	0
  2267  15E2  0537               	andwf	sprintf@flag^(0+128),w
  2268  15E3  00AD               	movwf	??_sprintf^(0+128)
  2269  15E4  3007               	movlw	7
  2270  15E5  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2271  15E6  00AE               	movwf	(??_sprintf+1)^(0+128)
  2272  15E7  082D               	movf	??_sprintf^(0+128),w
  2273  15E8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2274  15E9  1903               	btfsc	3,2
  2275  15EA  2DEC               	goto	u7101
  2276  15EB  2DEF               	goto	u7100
  2277  15EC                     u7101:
  2278  15EC  120A  118A  2CE4   	goto	l4409
  2279  15EF                     u7100:
  2280  15EF                     l4253:
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2283  15EF  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  2284  15F0  2DF2               	goto	u7111
  2285  15F1  2DF3               	goto	u7110
  2286  15F2                     u7111:
  2287  15F2  2DF7               	goto	l4257
  2288  15F3                     u7110:
  2289  15F3                     l4255:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2292  15F3  3006               	movlw	6
  2293  15F4  00CA               	movwf	sprintf@prec^(0+128)
  2294  15F5  3000               	movlw	0
  2295  15F6  00CB               	movwf	(sprintf@prec^(0+128)+1)
  2296  15F7                     l4257:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2299  15F7  0836               	movf	sprintf@ap^(0+128),w
  2300  15F8  0084               	movwf	4
  2301  15F9  1383               	bcf	3,7	;select IRP bank0
  2302  15FA  0800               	movf	0,w
  2303  15FB  00C5               	movwf	sprintf@fval^(0+128)
  2304  15FC  0A84               	incf	4,f
  2305  15FD  0800               	movf	0,w
  2306  15FE  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2307  15FF  0A84               	incf	4,f
  2308  1600  0800               	movf	0,w
  2309  1601  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2310  1602  0A84               	incf	4,f
  2311  1603  0800               	movf	0,w
  2312  1604  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2313  1605                     l4259:
  2314  1605  3004               	movlw	4
  2315  1606  00AD               	movwf	??_sprintf^(0+128)
  2316  1607  082D               	movf	??_sprintf^(0+128),w
  2317  1608  07B6               	addwf	sprintf@ap^(0+128),f
  2318  1609                     l4261:
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2321  1609  0848               	movf	(sprintf@fval+3)^(0+128),w
  2322  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2323  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2324  160C  00A3               	movwf	___flge@ff1+3
  2325  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2326  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2327  160F  0847               	movf	(sprintf@fval+2)^(0+128),w
  2328  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2329  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2330  1612  00A2               	movwf	___flge@ff1+2
  2331  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2332  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2333  1615  0846               	movf	(sprintf@fval+1)^(0+128),w
  2334  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2335  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2336  1618  00A1               	movwf	___flge@ff1+1
  2337  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2338  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2339  161B  0845               	movf	sprintf@fval^(0+128),w
  2340  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2341  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2342  161E  00A0               	movwf	___flge@ff1
  2343  161F  3000               	movlw	0
  2344  1620  00A7               	movwf	___flge@ff2+3
  2345  1621  3000               	movlw	0
  2346  1622  00A6               	movwf	___flge@ff2+2
  2347  1623  3000               	movlw	0
  2348  1624  00A5               	movwf	___flge@ff2+1
  2349  1625  3000               	movlw	0
  2350  1626  00A4               	movwf	___flge@ff2
  2351  1627  160A  158A  2515  160A  118A  	fcall	___flge
  2352  162C  1803               	btfsc	3,0
  2353  162D  2E2F               	goto	u7121
  2354  162E  2E30               	goto	u7120
  2355  162F                     u7121:
  2356  162F  2E4D               	goto	l4267
  2357  1630                     u7120:
  2358  1630                     l4263:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2361  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2362  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2363  1632  0848               	movf	(sprintf@fval+3)^(0+128),w
  2364  1633  00F6               	movwf	___flneg@f1+3
  2365  1634  0847               	movf	(sprintf@fval+2)^(0+128),w
  2366  1635  00F5               	movwf	___flneg@f1+2
  2367  1636  0846               	movf	(sprintf@fval+1)^(0+128),w
  2368  1637  00F4               	movwf	___flneg@f1+1
  2369  1638  0845               	movf	sprintf@fval^(0+128),w
  2370  1639  00F3               	movwf	___flneg@f1
  2371  163A  160A  158A  214D  160A  118A  	fcall	___flneg
  2372  163F  0876               	movf	?___flneg+3,w
  2373  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2374  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2375  1642  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2376  1643  0875               	movf	?___flneg+2,w
  2377  1644  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2378  1645  0874               	movf	?___flneg+1,w
  2379  1646  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2380  1647  0873               	movf	?___flneg,w
  2381  1648  00C5               	movwf	sprintf@fval^(0+128)
  2382  1649                     l4265:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2385  1649  3003               	movlw	3
  2386  164A  04B7               	iorwf	sprintf@flag^(0+128),f
  2387  164B  3000               	movlw	0
  2388  164C  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  2389  164D                     l4267:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2392  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2393  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2394  164F  01C3               	clrf	sprintf@eexp^(0+128)
  2395  1650  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2396  1651                     l4269:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2399  1651  0848               	movf	(sprintf@fval+3)^(0+128),w
  2400  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2401  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2402  1654  00A3               	movwf	___fleq@ff1+3
  2403  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2404  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2405  1657  0847               	movf	(sprintf@fval+2)^(0+128),w
  2406  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2407  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2408  165A  00A2               	movwf	___fleq@ff1+2
  2409  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2410  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2411  165D  0846               	movf	(sprintf@fval+1)^(0+128),w
  2412  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2413  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2414  1660  00A1               	movwf	___fleq@ff1+1
  2415  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2416  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2417  1663  0845               	movf	sprintf@fval^(0+128),w
  2418  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2419  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2420  1666  00A0               	movwf	___fleq@ff1
  2421  1667  3000               	movlw	0
  2422  1668  00A7               	movwf	___fleq@ff2+3
  2423  1669  3000               	movlw	0
  2424  166A  00A6               	movwf	___fleq@ff2+2
  2425  166B  3000               	movlw	0
  2426  166C  00A5               	movwf	___fleq@ff2+1
  2427  166D  3000               	movlw	0
  2428  166E  00A4               	movwf	___fleq@ff2
  2429  166F  160A  158A  235C  160A  118A  	fcall	___fleq
  2430  1674  1803               	btfsc	3,0
  2431  1675  2E77               	goto	u7131
  2432  1676  2E78               	goto	u7130
  2433  1677                     u7131:
  2434  1677  2F94               	goto	l4295
  2435  1678                     u7130:
  2436  1678                     l4271:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2439  1678  1003               	clrc
  2440  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2441  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2442  167B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2443  167C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2444  167D  3E82               	addlw	130
  2445  167E  00C3               	movwf	sprintf@eexp^(0+128)
  2446  167F  30FF               	movlw	255
  2447  1680  1803               	skipnc
  2448  1681  3000               	movlw	0
  2449  1682  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2450  1683                     l4273:
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2453  1683  30FF               	movlw	255
  2454  1684  07C3               	addwf	sprintf@eexp^(0+128),f
  2455  1685  1803               	skipnc
  2456  1686  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2457  1687  30FF               	movlw	255
  2458  1688  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2459  1689                     l4275:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2462  1689  3003               	movlw	3
  2463  168A  00F3               	movwf	___wmul@multiplier
  2464  168B  3000               	movlw	0
  2465  168C  00F4               	movwf	___wmul@multiplier+1
  2466  168D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2467  168E  00F6               	movwf	___wmul@multiplicand+1
  2468  168F  0843               	movf	sprintf@eexp^(0+128),w
  2469  1690  00F5               	movwf	___wmul@multiplicand
  2470  1691  160A  158A  2222  160A  118A  	fcall	___wmul
  2471  1696  0874               	movf	?___wmul+1,w
  2472  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2473  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2474  1699  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2475  169A  0873               	movf	?___wmul,w
  2476  169B  00C3               	movwf	sprintf@eexp^(0+128)
  2477  169C                     l4277:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2480  169C  300A               	movlw	10
  2481  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2482  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2483  169F  00A2               	movwf	___awdiv@divisor
  2484  16A0  3000               	movlw	0
  2485  16A1  00A3               	movwf	___awdiv@divisor+1
  2486  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2487  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2488  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2489  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2490  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2491  16A7  00A5               	movwf	___awdiv@dividend+1
  2492  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2493  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2494  16AA  0843               	movf	sprintf@eexp^(0+128),w
  2495  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2496  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2497  16AD  00A4               	movwf	___awdiv@dividend
  2498  16AE  120A  158A  2016  160A  118A  	fcall	___awdiv
  2499  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2500  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2501  16B5  0823               	movf	?___awdiv+1,w
  2502  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2503  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2504  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2505  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2506  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2507  16BB  0822               	movf	?___awdiv,w
  2508  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2509  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2510  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  2511  16BF                     l4279:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2514  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2515  16C0  2EC2               	goto	u7141
  2516  16C1  2EC3               	goto	u7140
  2517  16C2                     u7141:
  2518  16C2  2EC9               	goto	l4283
  2519  16C3                     u7140:
  2520  16C3                     l4281:
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2523  16C3  30FF               	movlw	255
  2524  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  2525  16C5  1803               	skipnc
  2526  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2527  16C7  30FF               	movlw	255
  2528  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2529  16C9                     l4283:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2532  16C9  0343               	decf	sprintf@eexp^(0+128),w
  2533  16CA  3AFF               	xorlw	255
  2534  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2535  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2536  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2537  16D2  0848               	movf	?_scale+3,w
  2538  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2539  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2540  16D5  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2541  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2542  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2543  16D8  0847               	movf	?_scale+2,w
  2544  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2545  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2546  16DB  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2547  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2548  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2549  16DE  0846               	movf	?_scale+1,w
  2550  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2551  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2552  16E1  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2553  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2554  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2555  16E4  0845               	movf	?_scale,w
  2556  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2557  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2558  16E7  00BB               	movwf	sprintf@tmpval^(0+128)
  2559  16E8                     l4285:
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2562  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2563  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2564  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2565  16EB  00AE               	movwf	___flmul@b+3
  2566  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2567  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2568  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  2569  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2570  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2571  16F1  00AD               	movwf	___flmul@b+2
  2572  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2573  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2574  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  2575  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2576  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2577  16F7  00AC               	movwf	___flmul@b+1
  2578  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2579  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2580  16FA  0845               	movf	sprintf@fval^(0+128),w
  2581  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2582  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2583  16FD  00AB               	movwf	___flmul@b
  2584  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2585  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2586  1700  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2587  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2588  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2589  1703  00B2               	movwf	___flmul@a+3
  2590  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2591  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2592  1706  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2593  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2594  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2595  1709  00B1               	movwf	___flmul@a+2
  2596  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2597  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2598  170C  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2599  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2600  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2601  170F  00B0               	movwf	___flmul@a+1
  2602  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2603  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2604  1712  083B               	movf	sprintf@tmpval^(0+128),w
  2605  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2606  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2607  1715  00AF               	movwf	___flmul@a
  2608  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2609  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2610  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2611  171D  082E               	movf	?___flmul+3,w
  2612  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2613  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2614  1720  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2615  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2616  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2617  1723  082D               	movf	?___flmul+2,w
  2618  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2619  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2620  1726  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2621  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2622  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2623  1729  082C               	movf	?___flmul+1,w
  2624  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2625  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2626  172C  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2627  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2628  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2629  172F  082B               	movf	?___flmul,w
  2630  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2631  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2632  1732  00BB               	movwf	sprintf@tmpval^(0+128)
  2633  1733                     l4287:
  2634                           
  2635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2636  1733  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2637  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2638  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2639  1736  00A3               	movwf	___flge@ff1+3
  2640  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2641  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2642  1739  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2643  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2644  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2645  173C  00A2               	movwf	___flge@ff1+2
  2646  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2647  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2648  173F  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2649  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2650  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2651  1742  00A1               	movwf	___flge@ff1+1
  2652  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2653  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2654  1745  083B               	movf	sprintf@tmpval^(0+128),w
  2655  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2656  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2657  1748  00A0               	movwf	___flge@ff1
  2658  1749  303F               	movlw	63
  2659  174A  00A7               	movwf	___flge@ff2+3
  2660  174B  3080               	movlw	128
  2661  174C  00A6               	movwf	___flge@ff2+2
  2662  174D  3000               	movlw	0
  2663  174E  00A5               	movwf	___flge@ff2+1
  2664  174F  3000               	movlw	0
  2665  1750  00A4               	movwf	___flge@ff2
  2666  1751  160A  158A  2515  160A  118A  	fcall	___flge
  2667  1756  1803               	btfsc	3,0
  2668  1757  2F59               	goto	u7151
  2669  1758  2F5A               	goto	u7150
  2670  1759                     u7151:
  2671  1759  2F63               	goto	l4291
  2672  175A                     u7150:
  2673  175A                     l4289:
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2676  175A  30FF               	movlw	255
  2677  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2678  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2679  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2680  175E  1803               	skipnc
  2681  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2682  1760  30FF               	movlw	255
  2683  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2684  1762  2F94               	goto	l4295
  2685  1763                     l4291:
  2686  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2687  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2688  1765  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2689  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2690  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2691  1768  00A3               	movwf	___flge@ff1+3
  2692  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2693  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2694  176B  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2695  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2696  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2697  176E  00A2               	movwf	___flge@ff1+2
  2698  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2699  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2700  1771  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2701  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2702  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2703  1774  00A1               	movwf	___flge@ff1+1
  2704  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2705  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2706  1777  083B               	movf	sprintf@tmpval^(0+128),w
  2707  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2708  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2709  177A  00A0               	movwf	___flge@ff1
  2710  177B  3041               	movlw	65
  2711  177C  00A7               	movwf	___flge@ff2+3
  2712  177D  3020               	movlw	32
  2713  177E  00A6               	movwf	___flge@ff2+2
  2714  177F  3000               	movlw	0
  2715  1780  00A5               	movwf	___flge@ff2+1
  2716  1781  3000               	movlw	0
  2717  1782  00A4               	movwf	___flge@ff2
  2718  1783  160A  158A  2515  160A  118A  	fcall	___flge
  2719  1788  1C03               	btfss	3,0
  2720  1789  2F8B               	goto	u7161
  2721  178A  2F8C               	goto	u7160
  2722  178B                     u7161:
  2723  178B  2F94               	goto	l4295
  2724  178C                     u7160:
  2725  178C                     l4293:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2728  178C  3001               	movlw	1
  2729  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2730  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2731  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2732  1790  1803               	skipnc
  2733  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2734  1792  3000               	movlw	0
  2735  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2736  1794                     l4295:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2739  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2740  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2741  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2742  1797  3A80               	xorlw	128
  2743  1798  00FF               	movwf	btemp+1
  2744  1799  3080               	movlw	128
  2745  179A  027F               	subwf	btemp+1,w
  2746  179B  1D03               	skipz
  2747  179C  2F9F               	goto	u7175
  2748  179D  300D               	movlw	13
  2749  179E  024A               	subwf	sprintf@prec^(0+128),w
  2750  179F                     u7175:
  2751  179F  1803               	skipnc
  2752  17A0  2FA2               	goto	u7171
  2753  17A1  2FA3               	goto	u7170
  2754  17A2                     u7171:
  2755  17A2  2FEA               	goto	l4299
  2756  17A3                     u7170:
  2757  17A3                     l4297:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2760  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2761  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2762  17A5  084A               	movf	sprintf@prec^(0+128),w
  2763  17A6  160A  118A  2061  160A  118A  	fcall	_fround
  2764  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2765  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2766  17AD  0848               	movf	?_fround+3,w
  2767  17AE  00DC               	movwf	___fladd@b+3
  2768  17AF  0847               	movf	?_fround+2,w
  2769  17B0  00DB               	movwf	___fladd@b+2
  2770  17B1  0846               	movf	?_fround+1,w
  2771  17B2  00DA               	movwf	___fladd@b+1
  2772  17B3  0845               	movf	?_fround,w
  2773  17B4  00D9               	movwf	___fladd@b
  2774  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2775  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2776  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2777  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2778  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2779  17BA  00E0               	movwf	___fladd@a+3
  2780  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2781  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2782  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2783  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2784  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2785  17C0  00DF               	movwf	___fladd@a+2
  2786  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2787  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2788  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2789  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2790  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2791  17C6  00DE               	movwf	___fladd@a+1
  2792  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2793  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2794  17C9  0845               	movf	sprintf@fval^(0+128),w
  2795  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2796  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2797  17CC  00DD               	movwf	___fladd@a
  2798  17CD  160A  118A  226E  160A  118A  	fcall	___fladd
  2799  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2800  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2801  17D4  085C               	movf	?___fladd+3,w
  2802  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2803  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2804  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2805  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2806  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2807  17DA  085B               	movf	?___fladd+2,w
  2808  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2809  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2810  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2811  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2812  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2813  17E0  085A               	movf	?___fladd+1,w
  2814  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2815  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2816  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2817  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2818  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2819  17E6  0859               	movf	?___fladd,w
  2820  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2821  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2822  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2823  17EA                     l4299:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2826  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2827  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2828  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2829  17ED  3A80               	xorlw	128
  2830  17EE  00FF               	movwf	btemp+1
  2831  17EF  3080               	movlw	128
  2832  17F0  027F               	subwf	btemp+1,w
  2833  17F1  1D03               	skipz
  2834  17F2  2FF5               	goto	u7185
  2835  17F3  300A               	movlw	10
  2836  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2837  17F5                     u7185:
  2838  17F5  1803               	skipnc
  2839  17F6  2FFA               	goto	u7181
  2840  17F7  120A  118A  282A   	goto	u7180
  2841  17FA                     u7181:
  2842  17FA  120A  118A  2889   	goto	l4307
  2843  17FD                     L3:
  2844  17FD                     L2:
  2845  17FD  120A  118A  2EA7   	ljmp	l4489
  2846                           
  2847                           	psect	text2
  2848  0C9D                     __ptext2:	
  2849 ;; *************** function _scale *****************
  2850 ;; Defined at:
  2851 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  scl             1    wreg     char 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  scl             1   55[BANK0 ] char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  4   37[BANK0 ] char 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2865 ;;      Params:         0       4       0       0       0
  2866 ;;      Locals:         0       5       0       0       0
  2867 ;;      Temps:          0      10       0       0       0
  2868 ;;      Totals:         0      19       0       0       0
  2869 ;;Total ram usage:       19 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    3
  2872 ;; This function calls:
  2873 ;;		___awdiv
  2874 ;;		___awmod
  2875 ;;		___flmul
  2876 ;; This function is called by:
  2877 ;;		_sprintf
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           
  2882                           ;psect for function _scale
  2883  0C9D                     _scale:
  2884                           
  2885                           ;incstack = 0
  2886                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2887                           ;scale@scl stored from wreg
  2888  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0C9F  00D7               	movwf	scale@scl
  2891  0CA0                     l3889:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2894  0CA0  1FD7               	btfss	scale@scl,7
  2895  0CA1  2CA3               	goto	u6161
  2896  0CA2  2CA4               	goto	u6160
  2897  0CA3                     u6161:
  2898  0CA3  2E53               	goto	l3911
  2899  0CA4                     u6160:
  2900  0CA4                     l3891:
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2903  0CA4  09D7               	comf	scale@scl,f
  2904  0CA5  0AD7               	incf	scale@scl,f
  2905  0CA6                     l3893:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2908  0CA6  0857               	movf	scale@scl,w
  2909  0CA7  3A80               	xorlw	128
  2910  0CA8  3E12               	addlw	-238
  2911  0CA9  1C03               	skipc
  2912  0CAA  2CAC               	goto	u6171
  2913  0CAB  2CAD               	goto	u6170
  2914  0CAC                     u6171:
  2915  0CAC  2D97               	goto	l3901
  2916  0CAD                     u6170:
  2917  0CAD                     l3895:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2920  0CAD  300A               	movlw	10
  2921  0CAE  00A2               	movwf	___awdiv@divisor
  2922  0CAF  3000               	movlw	0
  2923  0CB0  00A3               	movwf	___awdiv@divisor+1
  2924  0CB1  0857               	movf	scale@scl,w
  2925  0CB2  00F5               	movwf	___awmod@dividend
  2926  0CB3  01F6               	clrf	___awmod@dividend+1
  2927  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2928  0CB5  03F6               	decf	___awmod@dividend+1,f
  2929  0CB6  3064               	movlw	100
  2930  0CB7  00F3               	movwf	___awmod@divisor
  2931  0CB8  3000               	movlw	0
  2932  0CB9  00F4               	movwf	___awmod@divisor+1
  2933  0CBA  160A  158A  2452  120A  158A  	fcall	___awmod
  2934  0CBF  0874               	movf	?___awmod+1,w
  2935  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2937  0CC2  00A5               	movwf	___awdiv@dividend+1
  2938  0CC3  0873               	movf	?___awmod,w
  2939  0CC4  00A4               	movwf	___awdiv@dividend
  2940  0CC5  120A  158A  2016  120A  158A  	fcall	___awdiv
  2941  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0CCC  0822               	movf	?___awdiv,w
  2944  0CCD  00C9               	movwf	??_scale
  2945  0CCE  3001               	movlw	1
  2946  0CCF                     u6185:
  2947  0CCF  1003               	clrc
  2948  0CD0  0DC9               	rlf	??_scale,f
  2949  0CD1  3EFF               	addlw	-1
  2950  0CD2  1D03               	skipz
  2951  0CD3  2CCF               	goto	u6185
  2952  0CD4  1003               	clrc
  2953  0CD5  0D49               	rlf	??_scale,w
  2954  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2955  0CD7  0084               	movwf	4
  2956  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  2957  0CDD  00CA               	movwf	??_scale+1
  2958  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  2959  0CE3  00CB               	movwf	??_scale+2
  2960  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  2961  0CE9  00CC               	movwf	??_scale+3
  2962  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  2963  0CEF  00CD               	movwf	??_scale+4
  2964  0CF0  084D               	movf	??_scale+4,w
  2965  0CF1  00AE               	movwf	___flmul@b+3
  2966  0CF2  084C               	movf	??_scale+3,w
  2967  0CF3  00AD               	movwf	___flmul@b+2
  2968  0CF4  084B               	movf	??_scale+2,w
  2969  0CF5  00AC               	movwf	___flmul@b+1
  2970  0CF6  084A               	movf	??_scale+1,w
  2971  0CF7  00AB               	movwf	___flmul@b
  2972  0CF8  3064               	movlw	100
  2973  0CF9  00A2               	movwf	___awdiv@divisor
  2974  0CFA  3000               	movlw	0
  2975  0CFB  00A3               	movwf	___awdiv@divisor+1
  2976  0CFC  0857               	movf	scale@scl,w
  2977  0CFD  00A4               	movwf	___awdiv@dividend
  2978  0CFE  01A5               	clrf	___awdiv@dividend+1
  2979  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  2980  0D00  03A5               	decf	___awdiv@dividend+1,f
  2981  0D01  120A  158A  2016  120A  158A  	fcall	___awdiv
  2982  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2984  0D08  0822               	movf	?___awdiv,w
  2985  0D09  00CE               	movwf	??_scale+5
  2986  0D0A  3001               	movlw	1
  2987  0D0B                     u6195:
  2988  0D0B  1003               	clrc
  2989  0D0C  0DCE               	rlf	??_scale+5,f
  2990  0D0D  3EFF               	addlw	-1
  2991  0D0E  1D03               	skipz
  2992  0D0F  2D0B               	goto	u6195
  2993  0D10  1003               	clrc
  2994  0D11  0D4E               	rlf	??_scale+5,w
  2995  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2996  0D13  0084               	movwf	4
  2997  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  2998  0D19  00CF               	movwf	??_scale+6
  2999  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  3000  0D1F  00D0               	movwf	??_scale+7
  3001  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  3002  0D25  00D1               	movwf	??_scale+8
  3003  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  3004  0D2B  00D2               	movwf	??_scale+9
  3005  0D2C  0852               	movf	??_scale+9,w
  3006  0D2D  00B2               	movwf	___flmul@a+3
  3007  0D2E  0851               	movf	??_scale+8,w
  3008  0D2F  00B1               	movwf	___flmul@a+2
  3009  0D30  0850               	movf	??_scale+7,w
  3010  0D31  00B0               	movwf	___flmul@a+1
  3011  0D32  084F               	movf	??_scale+6,w
  3012  0D33  00AF               	movwf	___flmul@a
  3013  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3014  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3016  0D3B  082E               	movf	?___flmul+3,w
  3017  0D3C  00D6               	movwf	_scale$1260+3
  3018  0D3D  082D               	movf	?___flmul+2,w
  3019  0D3E  00D5               	movwf	_scale$1260+2
  3020  0D3F  082C               	movf	?___flmul+1,w
  3021  0D40  00D4               	movwf	_scale$1260+1
  3022  0D41  082B               	movf	?___flmul,w
  3023  0D42  00D3               	movwf	_scale$1260
  3024                           
  3025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3026  0D43  300A               	movlw	10
  3027  0D44  00F3               	movwf	___awmod@divisor
  3028  0D45  3000               	movlw	0
  3029  0D46  00F4               	movwf	___awmod@divisor+1
  3030  0D47  0857               	movf	scale@scl,w
  3031  0D48  00F5               	movwf	___awmod@dividend
  3032  0D49  01F6               	clrf	___awmod@dividend+1
  3033  0D4A  1BF5               	btfsc	___awmod@dividend,7
  3034  0D4B  03F6               	decf	___awmod@dividend+1,f
  3035  0D4C  160A  158A  2452  120A  158A  	fcall	___awmod
  3036  0D51  0873               	movf	?___awmod,w
  3037  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3039  0D54  00C9               	movwf	??_scale
  3040  0D55  3001               	movlw	1
  3041  0D56                     u6205:
  3042  0D56  1003               	clrc
  3043  0D57  0DC9               	rlf	??_scale,f
  3044  0D58  3EFF               	addlw	-1
  3045  0D59  1D03               	skipz
  3046  0D5A  2D56               	goto	u6205
  3047  0D5B  1003               	clrc
  3048  0D5C  0D49               	rlf	??_scale,w
  3049  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3050  0D5E  0084               	movwf	4
  3051  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  3052  0D64  00CA               	movwf	??_scale+1
  3053  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  3054  0D6A  00CB               	movwf	??_scale+2
  3055  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  3056  0D70  00CC               	movwf	??_scale+3
  3057  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  3058  0D76  00CD               	movwf	??_scale+4
  3059  0D77  084D               	movf	??_scale+4,w
  3060  0D78  00AE               	movwf	___flmul@b+3
  3061  0D79  084C               	movf	??_scale+3,w
  3062  0D7A  00AD               	movwf	___flmul@b+2
  3063  0D7B  084B               	movf	??_scale+2,w
  3064  0D7C  00AC               	movwf	___flmul@b+1
  3065  0D7D  084A               	movf	??_scale+1,w
  3066  0D7E  00AB               	movwf	___flmul@b
  3067  0D7F  0856               	movf	_scale$1260+3,w
  3068  0D80  00B2               	movwf	___flmul@a+3
  3069  0D81  0855               	movf	_scale$1260+2,w
  3070  0D82  00B1               	movwf	___flmul@a+2
  3071  0D83  0854               	movf	_scale$1260+1,w
  3072  0D84  00B0               	movwf	___flmul@a+1
  3073  0D85  0853               	movf	_scale$1260,w
  3074  0D86  00AF               	movwf	___flmul@a
  3075  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3076  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3077  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3078  0D8E  082E               	movf	?___flmul+3,w
  3079  0D8F  00C8               	movwf	?_scale+3
  3080  0D90  082D               	movf	?___flmul+2,w
  3081  0D91  00C7               	movwf	?_scale+2
  3082  0D92  082C               	movf	?___flmul+1,w
  3083  0D93  00C6               	movwf	?_scale+1
  3084  0D94  082B               	movf	?___flmul,w
  3085  0D95  00C5               	movwf	?_scale
  3086  0D96  2FFF               	goto	l312
  3087  0D97                     l3901:
  3088  0D97  0857               	movf	scale@scl,w
  3089  0D98  3A80               	xorlw	128
  3090  0D99  3E75               	addlw	-139
  3091  0D9A  1C03               	skipc
  3092  0D9B  2D9D               	goto	u6211
  3093  0D9C  2D9E               	goto	u6210
  3094  0D9D                     u6211:
  3095  0D9D  2E26               	goto	l3907
  3096  0D9E                     u6210:
  3097  0D9E                     l3903:
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3100  0D9E  300A               	movlw	10
  3101  0D9F  00F3               	movwf	___awmod@divisor
  3102  0DA0  3000               	movlw	0
  3103  0DA1  00F4               	movwf	___awmod@divisor+1
  3104  0DA2  0857               	movf	scale@scl,w
  3105  0DA3  00F5               	movwf	___awmod@dividend
  3106  0DA4  01F6               	clrf	___awmod@dividend+1
  3107  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3108  0DA6  03F6               	decf	___awmod@dividend+1,f
  3109  0DA7  160A  158A  2452  120A  158A  	fcall	___awmod
  3110  0DAC  0873               	movf	?___awmod,w
  3111  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0DAF  00C9               	movwf	??_scale
  3114  0DB0  3001               	movlw	1
  3115  0DB1                     u6225:
  3116  0DB1  1003               	clrc
  3117  0DB2  0DC9               	rlf	??_scale,f
  3118  0DB3  3EFF               	addlw	-1
  3119  0DB4  1D03               	skipz
  3120  0DB5  2DB1               	goto	u6225
  3121  0DB6  1003               	clrc
  3122  0DB7  0D49               	rlf	??_scale,w
  3123  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3124  0DB9  0084               	movwf	4
  3125  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  3126  0DBF  00CA               	movwf	??_scale+1
  3127  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  3128  0DC5  00CB               	movwf	??_scale+2
  3129  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  3130  0DCB  00CC               	movwf	??_scale+3
  3131  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  3132  0DD1  00CD               	movwf	??_scale+4
  3133  0DD2  084D               	movf	??_scale+4,w
  3134  0DD3  00AE               	movwf	___flmul@b+3
  3135  0DD4  084C               	movf	??_scale+3,w
  3136  0DD5  00AD               	movwf	___flmul@b+2
  3137  0DD6  084B               	movf	??_scale+2,w
  3138  0DD7  00AC               	movwf	___flmul@b+1
  3139  0DD8  084A               	movf	??_scale+1,w
  3140  0DD9  00AB               	movwf	___flmul@b
  3141  0DDA  300A               	movlw	10
  3142  0DDB  00A2               	movwf	___awdiv@divisor
  3143  0DDC  3000               	movlw	0
  3144  0DDD  00A3               	movwf	___awdiv@divisor+1
  3145  0DDE  0857               	movf	scale@scl,w
  3146  0DDF  00A4               	movwf	___awdiv@dividend
  3147  0DE0  01A5               	clrf	___awdiv@dividend+1
  3148  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  3149  0DE2  03A5               	decf	___awdiv@dividend+1,f
  3150  0DE3  120A  158A  2016  120A  158A  	fcall	___awdiv
  3151  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3152  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3153  0DEA  0822               	movf	?___awdiv,w
  3154  0DEB  00CE               	movwf	??_scale+5
  3155  0DEC  3001               	movlw	1
  3156  0DED                     u6235:
  3157  0DED  1003               	clrc
  3158  0DEE  0DCE               	rlf	??_scale+5,f
  3159  0DEF  3EFF               	addlw	-1
  3160  0DF0  1D03               	skipz
  3161  0DF1  2DED               	goto	u6235
  3162  0DF2  1003               	clrc
  3163  0DF3  0D4E               	rlf	??_scale+5,w
  3164  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3165  0DF5  0084               	movwf	4
  3166  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  3167  0DFB  00CF               	movwf	??_scale+6
  3168  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  3169  0E01  00D0               	movwf	??_scale+7
  3170  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  3171  0E07  00D1               	movwf	??_scale+8
  3172  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  3173  0E0D  00D2               	movwf	??_scale+9
  3174  0E0E  0852               	movf	??_scale+9,w
  3175  0E0F  00B2               	movwf	___flmul@a+3
  3176  0E10  0851               	movf	??_scale+8,w
  3177  0E11  00B1               	movwf	___flmul@a+2
  3178  0E12  0850               	movf	??_scale+7,w
  3179  0E13  00B0               	movwf	___flmul@a+1
  3180  0E14  084F               	movf	??_scale+6,w
  3181  0E15  00AF               	movwf	___flmul@a
  3182  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3183  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0E1D  082E               	movf	?___flmul+3,w
  3186  0E1E  00C8               	movwf	?_scale+3
  3187  0E1F  082D               	movf	?___flmul+2,w
  3188  0E20  00C7               	movwf	?_scale+2
  3189  0E21  082C               	movf	?___flmul+1,w
  3190  0E22  00C6               	movwf	?_scale+1
  3191  0E23  082B               	movf	?___flmul,w
  3192  0E24  00C5               	movwf	?_scale
  3193  0E25  2FFF               	goto	l312
  3194  0E26                     l3907:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3197  0E26  0857               	movf	scale@scl,w
  3198  0E27  00C9               	movwf	??_scale
  3199  0E28  3001               	movlw	1
  3200  0E29                     u6245:
  3201  0E29  1003               	clrc
  3202  0E2A  0DC9               	rlf	??_scale,f
  3203  0E2B  3EFF               	addlw	-1
  3204  0E2C  1D03               	skipz
  3205  0E2D  2E29               	goto	u6245
  3206  0E2E  1003               	clrc
  3207  0E2F  0D49               	rlf	??_scale,w
  3208  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3209  0E31  0084               	movwf	4
  3210  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  3211  0E37  00CA               	movwf	??_scale+1
  3212  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  3213  0E3D  00CB               	movwf	??_scale+2
  3214  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  3215  0E43  00CC               	movwf	??_scale+3
  3216  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  3217  0E49  00CD               	movwf	??_scale+4
  3218  0E4A  084D               	movf	??_scale+4,w
  3219  0E4B  00C8               	movwf	?_scale+3
  3220  0E4C  084C               	movf	??_scale+3,w
  3221  0E4D  00C7               	movwf	?_scale+2
  3222  0E4E  084B               	movf	??_scale+2,w
  3223  0E4F  00C6               	movwf	?_scale+1
  3224  0E50  084A               	movf	??_scale+1,w
  3225  0E51  00C5               	movwf	?_scale
  3226  0E52  2FFF               	goto	l312
  3227  0E53                     l3911:
  3228                           
  3229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3230  0E53  0857               	movf	scale@scl,w
  3231  0E54  3A80               	xorlw	128
  3232  0E55  3E12               	addlw	-238
  3233  0E56  1C03               	skipc
  3234  0E57  2E59               	goto	u6251
  3235  0E58  2E5A               	goto	u6250
  3236  0E59                     u6251:
  3237  0E59  2F44               	goto	l3919
  3238  0E5A                     u6250:
  3239  0E5A                     l3913:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3242  0E5A  300A               	movlw	10
  3243  0E5B  00A2               	movwf	___awdiv@divisor
  3244  0E5C  3000               	movlw	0
  3245  0E5D  00A3               	movwf	___awdiv@divisor+1
  3246  0E5E  0857               	movf	scale@scl,w
  3247  0E5F  00F5               	movwf	___awmod@dividend
  3248  0E60  01F6               	clrf	___awmod@dividend+1
  3249  0E61  1BF5               	btfsc	___awmod@dividend,7
  3250  0E62  03F6               	decf	___awmod@dividend+1,f
  3251  0E63  3064               	movlw	100
  3252  0E64  00F3               	movwf	___awmod@divisor
  3253  0E65  3000               	movlw	0
  3254  0E66  00F4               	movwf	___awmod@divisor+1
  3255  0E67  160A  158A  2452  120A  158A  	fcall	___awmod
  3256  0E6C  0874               	movf	?___awmod+1,w
  3257  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3259  0E6F  00A5               	movwf	___awdiv@dividend+1
  3260  0E70  0873               	movf	?___awmod,w
  3261  0E71  00A4               	movwf	___awdiv@dividend
  3262  0E72  120A  158A  2016  120A  158A  	fcall	___awdiv
  3263  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0E79  0822               	movf	?___awdiv,w
  3266  0E7A  00C9               	movwf	??_scale
  3267  0E7B  3001               	movlw	1
  3268  0E7C                     u6265:
  3269  0E7C  1003               	clrc
  3270  0E7D  0DC9               	rlf	??_scale,f
  3271  0E7E  3EFF               	addlw	-1
  3272  0E7F  1D03               	skipz
  3273  0E80  2E7C               	goto	u6265
  3274  0E81  1003               	clrc
  3275  0E82  0D49               	rlf	??_scale,w
  3276  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3277  0E84  0084               	movwf	4
  3278  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  3279  0E8A  00CA               	movwf	??_scale+1
  3280  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  3281  0E90  00CB               	movwf	??_scale+2
  3282  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  3283  0E96  00CC               	movwf	??_scale+3
  3284  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  3285  0E9C  00CD               	movwf	??_scale+4
  3286  0E9D  084D               	movf	??_scale+4,w
  3287  0E9E  00AE               	movwf	___flmul@b+3
  3288  0E9F  084C               	movf	??_scale+3,w
  3289  0EA0  00AD               	movwf	___flmul@b+2
  3290  0EA1  084B               	movf	??_scale+2,w
  3291  0EA2  00AC               	movwf	___flmul@b+1
  3292  0EA3  084A               	movf	??_scale+1,w
  3293  0EA4  00AB               	movwf	___flmul@b
  3294  0EA5  3064               	movlw	100
  3295  0EA6  00A2               	movwf	___awdiv@divisor
  3296  0EA7  3000               	movlw	0
  3297  0EA8  00A3               	movwf	___awdiv@divisor+1
  3298  0EA9  0857               	movf	scale@scl,w
  3299  0EAA  00A4               	movwf	___awdiv@dividend
  3300  0EAB  01A5               	clrf	___awdiv@dividend+1
  3301  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  3302  0EAD  03A5               	decf	___awdiv@dividend+1,f
  3303  0EAE  120A  158A  2016  120A  158A  	fcall	___awdiv
  3304  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0EB5  0822               	movf	?___awdiv,w
  3307  0EB6  00CE               	movwf	??_scale+5
  3308  0EB7  3001               	movlw	1
  3309  0EB8                     u6275:
  3310  0EB8  1003               	clrc
  3311  0EB9  0DCE               	rlf	??_scale+5,f
  3312  0EBA  3EFF               	addlw	-1
  3313  0EBB  1D03               	skipz
  3314  0EBC  2EB8               	goto	u6275
  3315  0EBD  1003               	clrc
  3316  0EBE  0D4E               	rlf	??_scale+5,w
  3317  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3318  0EC0  0084               	movwf	4
  3319  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  3320  0EC6  00CF               	movwf	??_scale+6
  3321  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  3322  0ECC  00D0               	movwf	??_scale+7
  3323  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  3324  0ED2  00D1               	movwf	??_scale+8
  3325  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  3326  0ED8  00D2               	movwf	??_scale+9
  3327  0ED9  0852               	movf	??_scale+9,w
  3328  0EDA  00B2               	movwf	___flmul@a+3
  3329  0EDB  0851               	movf	??_scale+8,w
  3330  0EDC  00B1               	movwf	___flmul@a+2
  3331  0EDD  0850               	movf	??_scale+7,w
  3332  0EDE  00B0               	movwf	___flmul@a+1
  3333  0EDF  084F               	movf	??_scale+6,w
  3334  0EE0  00AF               	movwf	___flmul@a
  3335  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3336  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0EE8  082E               	movf	?___flmul+3,w
  3339  0EE9  00D6               	movwf	_scale$1260+3
  3340  0EEA  082D               	movf	?___flmul+2,w
  3341  0EEB  00D5               	movwf	_scale$1260+2
  3342  0EEC  082C               	movf	?___flmul+1,w
  3343  0EED  00D4               	movwf	_scale$1260+1
  3344  0EEE  082B               	movf	?___flmul,w
  3345  0EEF  00D3               	movwf	_scale$1260
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3348  0EF0  300A               	movlw	10
  3349  0EF1  00F3               	movwf	___awmod@divisor
  3350  0EF2  3000               	movlw	0
  3351  0EF3  00F4               	movwf	___awmod@divisor+1
  3352  0EF4  0857               	movf	scale@scl,w
  3353  0EF5  00F5               	movwf	___awmod@dividend
  3354  0EF6  01F6               	clrf	___awmod@dividend+1
  3355  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3356  0EF8  03F6               	decf	___awmod@dividend+1,f
  3357  0EF9  160A  158A  2452  120A  158A  	fcall	___awmod
  3358  0EFE  0873               	movf	?___awmod,w
  3359  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3360  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3361  0F01  00C9               	movwf	??_scale
  3362  0F02  3001               	movlw	1
  3363  0F03                     u6285:
  3364  0F03  1003               	clrc
  3365  0F04  0DC9               	rlf	??_scale,f
  3366  0F05  3EFF               	addlw	-1
  3367  0F06  1D03               	skipz
  3368  0F07  2F03               	goto	u6285
  3369  0F08  1003               	clrc
  3370  0F09  0D49               	rlf	??_scale,w
  3371  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3372  0F0B  0084               	movwf	4
  3373  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3374  0F11  00CA               	movwf	??_scale+1
  3375  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3376  0F17  00CB               	movwf	??_scale+2
  3377  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3378  0F1D  00CC               	movwf	??_scale+3
  3379  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3380  0F23  00CD               	movwf	??_scale+4
  3381  0F24  084D               	movf	??_scale+4,w
  3382  0F25  00AE               	movwf	___flmul@b+3
  3383  0F26  084C               	movf	??_scale+3,w
  3384  0F27  00AD               	movwf	___flmul@b+2
  3385  0F28  084B               	movf	??_scale+2,w
  3386  0F29  00AC               	movwf	___flmul@b+1
  3387  0F2A  084A               	movf	??_scale+1,w
  3388  0F2B  00AB               	movwf	___flmul@b
  3389  0F2C  0856               	movf	_scale$1260+3,w
  3390  0F2D  00B2               	movwf	___flmul@a+3
  3391  0F2E  0855               	movf	_scale$1260+2,w
  3392  0F2F  00B1               	movwf	___flmul@a+2
  3393  0F30  0854               	movf	_scale$1260+1,w
  3394  0F31  00B0               	movwf	___flmul@a+1
  3395  0F32  0853               	movf	_scale$1260,w
  3396  0F33  00AF               	movwf	___flmul@a
  3397  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3398  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0F3B  082E               	movf	?___flmul+3,w
  3401  0F3C  00C8               	movwf	?_scale+3
  3402  0F3D  082D               	movf	?___flmul+2,w
  3403  0F3E  00C7               	movwf	?_scale+2
  3404  0F3F  082C               	movf	?___flmul+1,w
  3405  0F40  00C6               	movwf	?_scale+1
  3406  0F41  082B               	movf	?___flmul,w
  3407  0F42  00C5               	movwf	?_scale
  3408  0F43  2FFF               	goto	l312
  3409  0F44                     l3919:
  3410  0F44  0857               	movf	scale@scl,w
  3411  0F45  3A80               	xorlw	128
  3412  0F46  3E75               	addlw	-139
  3413  0F47  1C03               	skipc
  3414  0F48  2F4A               	goto	u6291
  3415  0F49  2F4B               	goto	u6290
  3416  0F4A                     u6291:
  3417  0F4A  2FD3               	goto	l3925
  3418  0F4B                     u6290:
  3419  0F4B                     l3921:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3422  0F4B  300A               	movlw	10
  3423  0F4C  00F3               	movwf	___awmod@divisor
  3424  0F4D  3000               	movlw	0
  3425  0F4E  00F4               	movwf	___awmod@divisor+1
  3426  0F4F  0857               	movf	scale@scl,w
  3427  0F50  00F5               	movwf	___awmod@dividend
  3428  0F51  01F6               	clrf	___awmod@dividend+1
  3429  0F52  1BF5               	btfsc	___awmod@dividend,7
  3430  0F53  03F6               	decf	___awmod@dividend+1,f
  3431  0F54  160A  158A  2452  120A  158A  	fcall	___awmod
  3432  0F59  0873               	movf	?___awmod,w
  3433  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0F5C  00C9               	movwf	??_scale
  3436  0F5D  3001               	movlw	1
  3437  0F5E                     u6305:
  3438  0F5E  1003               	clrc
  3439  0F5F  0DC9               	rlf	??_scale,f
  3440  0F60  3EFF               	addlw	-1
  3441  0F61  1D03               	skipz
  3442  0F62  2F5E               	goto	u6305
  3443  0F63  1003               	clrc
  3444  0F64  0D49               	rlf	??_scale,w
  3445  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3446  0F66  0084               	movwf	4
  3447  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  3448  0F6C  00CA               	movwf	??_scale+1
  3449  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3450  0F72  00CB               	movwf	??_scale+2
  3451  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  3452  0F78  00CC               	movwf	??_scale+3
  3453  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  3454  0F7E  00CD               	movwf	??_scale+4
  3455  0F7F  084D               	movf	??_scale+4,w
  3456  0F80  00AE               	movwf	___flmul@b+3
  3457  0F81  084C               	movf	??_scale+3,w
  3458  0F82  00AD               	movwf	___flmul@b+2
  3459  0F83  084B               	movf	??_scale+2,w
  3460  0F84  00AC               	movwf	___flmul@b+1
  3461  0F85  084A               	movf	??_scale+1,w
  3462  0F86  00AB               	movwf	___flmul@b
  3463  0F87  300A               	movlw	10
  3464  0F88  00A2               	movwf	___awdiv@divisor
  3465  0F89  3000               	movlw	0
  3466  0F8A  00A3               	movwf	___awdiv@divisor+1
  3467  0F8B  0857               	movf	scale@scl,w
  3468  0F8C  00A4               	movwf	___awdiv@dividend
  3469  0F8D  01A5               	clrf	___awdiv@dividend+1
  3470  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  3471  0F8F  03A5               	decf	___awdiv@dividend+1,f
  3472  0F90  120A  158A  2016  120A  158A  	fcall	___awdiv
  3473  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3474  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3475  0F97  0822               	movf	?___awdiv,w
  3476  0F98  00CE               	movwf	??_scale+5
  3477  0F99  3001               	movlw	1
  3478  0F9A                     u6315:
  3479  0F9A  1003               	clrc
  3480  0F9B  0DCE               	rlf	??_scale+5,f
  3481  0F9C  3EFF               	addlw	-1
  3482  0F9D  1D03               	skipz
  3483  0F9E  2F9A               	goto	u6315
  3484  0F9F  1003               	clrc
  3485  0FA0  0D4E               	rlf	??_scale+5,w
  3486  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3487  0FA2  0084               	movwf	4
  3488  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3489  0FA8  00CF               	movwf	??_scale+6
  3490  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3491  0FAE  00D0               	movwf	??_scale+7
  3492  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  3493  0FB4  00D1               	movwf	??_scale+8
  3494  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  3495  0FBA  00D2               	movwf	??_scale+9
  3496  0FBB  0852               	movf	??_scale+9,w
  3497  0FBC  00B2               	movwf	___flmul@a+3
  3498  0FBD  0851               	movf	??_scale+8,w
  3499  0FBE  00B1               	movwf	___flmul@a+2
  3500  0FBF  0850               	movf	??_scale+7,w
  3501  0FC0  00B0               	movwf	___flmul@a+1
  3502  0FC1  084F               	movf	??_scale+6,w
  3503  0FC2  00AF               	movwf	___flmul@a
  3504  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3505  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3506  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3507  0FCA  082E               	movf	?___flmul+3,w
  3508  0FCB  00C8               	movwf	?_scale+3
  3509  0FCC  082D               	movf	?___flmul+2,w
  3510  0FCD  00C7               	movwf	?_scale+2
  3511  0FCE  082C               	movf	?___flmul+1,w
  3512  0FCF  00C6               	movwf	?_scale+1
  3513  0FD0  082B               	movf	?___flmul,w
  3514  0FD1  00C5               	movwf	?_scale
  3515  0FD2  2FFF               	goto	l312
  3516  0FD3                     l3925:
  3517                           
  3518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3519  0FD3  0857               	movf	scale@scl,w
  3520  0FD4  00C9               	movwf	??_scale
  3521  0FD5  3001               	movlw	1
  3522  0FD6                     u6325:
  3523  0FD6  1003               	clrc
  3524  0FD7  0DC9               	rlf	??_scale,f
  3525  0FD8  3EFF               	addlw	-1
  3526  0FD9  1D03               	skipz
  3527  0FDA  2FD6               	goto	u6325
  3528  0FDB  1003               	clrc
  3529  0FDC  0D49               	rlf	??_scale,w
  3530  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3531  0FDE  0084               	movwf	4
  3532  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  3533  0FE4  00CA               	movwf	??_scale+1
  3534  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  3535  0FEA  00CB               	movwf	??_scale+2
  3536  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  3537  0FF0  00CC               	movwf	??_scale+3
  3538  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  3539  0FF6  00CD               	movwf	??_scale+4
  3540  0FF7  084D               	movf	??_scale+4,w
  3541  0FF8  00C8               	movwf	?_scale+3
  3542  0FF9  084C               	movf	??_scale+3,w
  3543  0FFA  00C7               	movwf	?_scale+2
  3544  0FFB  084B               	movf	??_scale+2,w
  3545  0FFC  00C6               	movwf	?_scale+1
  3546  0FFD  084A               	movf	??_scale+1,w
  3547  0FFE  00C5               	movwf	?_scale
  3548  0FFF                     l312:
  3549  0FFF  0008               	return
  3550  1000                     __end_of_scale:
  3551                           
  3552                           	psect	text3
  3553  1C52                     __ptext3:	
  3554 ;; *************** function ___awmod *****************
  3555 ;; Defined at:
  3556 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  divisor         2    3[COMMON] int 
  3559 ;;  dividend        2    5[COMMON] int 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  sign            1    1[BANK0 ] unsigned char 
  3562 ;;  counter         1    0[BANK0 ] unsigned char 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  2    3[COMMON] int 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2, status,0
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3572 ;;      Params:         4       0       0       0       0
  3573 ;;      Locals:         0       2       0       0       0
  3574 ;;      Temps:          1       0       0       0       0
  3575 ;;      Totals:         5       2       0       0       0
  3576 ;;Total ram usage:        7 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    1
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_scale
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function ___awmod
  3588  1C52                     ___awmod:
  3589  1C52                     l3763:	
  3590                           ;incstack = 0
  3591                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3592                           
  3593  1C52  1283               	bcf	3,5	;RP0=0, select bank0
  3594  1C53  1303               	bcf	3,6	;RP1=0, select bank0
  3595  1C54  01A1               	clrf	___awmod@sign
  3596  1C55                     l3765:
  3597  1C55  1FF6               	btfss	___awmod@dividend+1,7
  3598  1C56  2C58               	goto	u5861
  3599  1C57  2C59               	goto	u5860
  3600  1C58                     u5861:
  3601  1C58  2C60               	goto	l3771
  3602  1C59                     u5860:
  3603  1C59                     l3767:
  3604  1C59  09F5               	comf	___awmod@dividend,f
  3605  1C5A  09F6               	comf	___awmod@dividend+1,f
  3606  1C5B  0AF5               	incf	___awmod@dividend,f
  3607  1C5C  1903               	skipnz
  3608  1C5D  0AF6               	incf	___awmod@dividend+1,f
  3609  1C5E                     l3769:
  3610  1C5E  01A1               	clrf	___awmod@sign
  3611  1C5F  0AA1               	incf	___awmod@sign,f
  3612  1C60                     l3771:
  3613  1C60  1FF4               	btfss	___awmod@divisor+1,7
  3614  1C61  2C63               	goto	u5871
  3615  1C62  2C64               	goto	u5870
  3616  1C63                     u5871:
  3617  1C63  2C69               	goto	l3775
  3618  1C64                     u5870:
  3619  1C64                     l3773:
  3620  1C64  09F3               	comf	___awmod@divisor,f
  3621  1C65  09F4               	comf	___awmod@divisor+1,f
  3622  1C66  0AF3               	incf	___awmod@divisor,f
  3623  1C67  1903               	skipnz
  3624  1C68  0AF4               	incf	___awmod@divisor+1,f
  3625  1C69                     l3775:
  3626  1C69  0873               	movf	___awmod@divisor,w
  3627  1C6A  0474               	iorwf	___awmod@divisor+1,w
  3628  1C6B  1903               	btfsc	3,2
  3629  1C6C  2C6E               	goto	u5881
  3630  1C6D  2C6F               	goto	u5880
  3631  1C6E                     u5881:
  3632  1C6E  2C9E               	goto	l3793
  3633  1C6F                     u5880:
  3634  1C6F                     l3777:
  3635  1C6F  01A0               	clrf	___awmod@counter
  3636  1C70  0AA0               	incf	___awmod@counter,f
  3637  1C71  2C7D               	goto	l3783
  3638  1C72                     l3779:
  3639  1C72  3001               	movlw	1
  3640  1C73                     u5895:
  3641  1C73  1003               	clrc
  3642  1C74  0DF3               	rlf	___awmod@divisor,f
  3643  1C75  0DF4               	rlf	___awmod@divisor+1,f
  3644  1C76  3EFF               	addlw	-1
  3645  1C77  1D03               	skipz
  3646  1C78  2C73               	goto	u5895
  3647  1C79                     l3781:
  3648  1C79  3001               	movlw	1
  3649  1C7A  00F7               	movwf	??___awmod
  3650  1C7B  0877               	movf	??___awmod,w
  3651  1C7C  07A0               	addwf	___awmod@counter,f
  3652  1C7D                     l3783:
  3653  1C7D  1FF4               	btfss	___awmod@divisor+1,7
  3654  1C7E  2C80               	goto	u5901
  3655  1C7F  2C81               	goto	u5900
  3656  1C80                     u5901:
  3657  1C80  2C72               	goto	l3779
  3658  1C81                     u5900:
  3659  1C81                     l3785:
  3660  1C81  0874               	movf	___awmod@divisor+1,w
  3661  1C82  0276               	subwf	___awmod@dividend+1,w
  3662  1C83  1D03               	skipz
  3663  1C84  2C87               	goto	u5915
  3664  1C85  0873               	movf	___awmod@divisor,w
  3665  1C86  0275               	subwf	___awmod@dividend,w
  3666  1C87                     u5915:
  3667  1C87  1C03               	skipc
  3668  1C88  2C8A               	goto	u5911
  3669  1C89  2C8B               	goto	u5910
  3670  1C8A                     u5911:
  3671  1C8A  2C91               	goto	l3789
  3672  1C8B                     u5910:
  3673  1C8B                     l3787:
  3674  1C8B  0873               	movf	___awmod@divisor,w
  3675  1C8C  02F5               	subwf	___awmod@dividend,f
  3676  1C8D  0874               	movf	___awmod@divisor+1,w
  3677  1C8E  1C03               	skipc
  3678  1C8F  03F6               	decf	___awmod@dividend+1,f
  3679  1C90  02F6               	subwf	___awmod@dividend+1,f
  3680  1C91                     l3789:
  3681  1C91  3001               	movlw	1
  3682  1C92                     u5925:
  3683  1C92  1003               	clrc
  3684  1C93  0CF4               	rrf	___awmod@divisor+1,f
  3685  1C94  0CF3               	rrf	___awmod@divisor,f
  3686  1C95  3EFF               	addlw	-1
  3687  1C96  1D03               	skipz
  3688  1C97  2C92               	goto	u5925
  3689  1C98                     l3791:
  3690  1C98  3001               	movlw	1
  3691  1C99  02A0               	subwf	___awmod@counter,f
  3692  1C9A  1D03               	btfss	3,2
  3693  1C9B  2C9D               	goto	u5931
  3694  1C9C  2C9E               	goto	u5930
  3695  1C9D                     u5931:
  3696  1C9D  2C81               	goto	l3785
  3697  1C9E                     u5930:
  3698  1C9E                     l3793:
  3699  1C9E  0821               	movf	___awmod@sign,w
  3700  1C9F  1903               	btfsc	3,2
  3701  1CA0  2CA2               	goto	u5941
  3702  1CA1  2CA3               	goto	u5940
  3703  1CA2                     u5941:
  3704  1CA2  2CA8               	goto	l3797
  3705  1CA3                     u5940:
  3706  1CA3                     l3795:
  3707  1CA3  09F5               	comf	___awmod@dividend,f
  3708  1CA4  09F6               	comf	___awmod@dividend+1,f
  3709  1CA5  0AF5               	incf	___awmod@dividend,f
  3710  1CA6  1903               	skipnz
  3711  1CA7  0AF6               	incf	___awmod@dividend+1,f
  3712  1CA8                     l3797:
  3713  1CA8  0876               	movf	___awmod@dividend+1,w
  3714  1CA9  00F4               	movwf	?___awmod+1
  3715  1CAA  0875               	movf	___awmod@dividend,w
  3716  1CAB  00F3               	movwf	?___awmod
  3717  1CAC                     l574:
  3718  1CAC  0008               	return
  3719  1CAD                     __end_of___awmod:
  3720                           
  3721                           	psect	text4
  3722  0816                     __ptext4:	
  3723 ;; *************** function ___awdiv *****************
  3724 ;; Defined at:
  3725 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  divisor         2    2[BANK0 ] int 
  3728 ;;  dividend        2    4[BANK0 ] int 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  quotient        2    9[BANK0 ] int 
  3731 ;;  sign            1    8[BANK0 ] unsigned char 
  3732 ;;  counter         1    7[BANK0 ] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2    2[BANK0 ] int 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       4       0       0       0
  3743 ;;      Locals:         0       4       0       0       0
  3744 ;;      Temps:          0       1       0       0       0
  3745 ;;      Totals:         0       9       0       0       0
  3746 ;;Total ram usage:        9 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    1
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_scale
  3753 ;;		_sprintf
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function ___awdiv
  3759  0816                     ___awdiv:
  3760  0816                     l3719:	
  3761                           ;incstack = 0
  3762                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3763                           
  3764  0816  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0817  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0818  01A8               	clrf	___awdiv@sign
  3767  0819                     l3721:
  3768  0819  1FA3               	btfss	___awdiv@divisor+1,7
  3769  081A  281C               	goto	u5761
  3770  081B  281D               	goto	u5760
  3771  081C                     u5761:
  3772  081C  2824               	goto	l3727
  3773  081D                     u5760:
  3774  081D                     l3723:
  3775  081D  09A2               	comf	___awdiv@divisor,f
  3776  081E  09A3               	comf	___awdiv@divisor+1,f
  3777  081F  0AA2               	incf	___awdiv@divisor,f
  3778  0820  1903               	skipnz
  3779  0821  0AA3               	incf	___awdiv@divisor+1,f
  3780  0822                     l3725:
  3781  0822  01A8               	clrf	___awdiv@sign
  3782  0823  0AA8               	incf	___awdiv@sign,f
  3783  0824                     l3727:
  3784  0824  1FA5               	btfss	___awdiv@dividend+1,7
  3785  0825  2827               	goto	u5771
  3786  0826  2828               	goto	u5770
  3787  0827                     u5771:
  3788  0827  2831               	goto	l3733
  3789  0828                     u5770:
  3790  0828                     l3729:
  3791  0828  09A4               	comf	___awdiv@dividend,f
  3792  0829  09A5               	comf	___awdiv@dividend+1,f
  3793  082A  0AA4               	incf	___awdiv@dividend,f
  3794  082B  1903               	skipnz
  3795  082C  0AA5               	incf	___awdiv@dividend+1,f
  3796  082D                     l3731:
  3797  082D  3001               	movlw	1
  3798  082E  00A6               	movwf	??___awdiv
  3799  082F  0826               	movf	??___awdiv,w
  3800  0830  06A8               	xorwf	___awdiv@sign,f
  3801  0831                     l3733:
  3802  0831  01A9               	clrf	___awdiv@quotient
  3803  0832  01AA               	clrf	___awdiv@quotient+1
  3804  0833                     l3735:
  3805  0833  0822               	movf	___awdiv@divisor,w
  3806  0834  0423               	iorwf	___awdiv@divisor+1,w
  3807  0835  1903               	btfsc	3,2
  3808  0836  2838               	goto	u5781
  3809  0837  2839               	goto	u5780
  3810  0838                     u5781:
  3811  0838  2870               	goto	l3755
  3812  0839                     u5780:
  3813  0839                     l3737:
  3814  0839  01A7               	clrf	___awdiv@counter
  3815  083A  0AA7               	incf	___awdiv@counter,f
  3816  083B  2847               	goto	l3743
  3817  083C                     l3739:
  3818  083C  3001               	movlw	1
  3819  083D                     u5795:
  3820  083D  1003               	clrc
  3821  083E  0DA2               	rlf	___awdiv@divisor,f
  3822  083F  0DA3               	rlf	___awdiv@divisor+1,f
  3823  0840  3EFF               	addlw	-1
  3824  0841  1D03               	skipz
  3825  0842  283D               	goto	u5795
  3826  0843                     l3741:
  3827  0843  3001               	movlw	1
  3828  0844  00A6               	movwf	??___awdiv
  3829  0845  0826               	movf	??___awdiv,w
  3830  0846  07A7               	addwf	___awdiv@counter,f
  3831  0847                     l3743:
  3832  0847  1FA3               	btfss	___awdiv@divisor+1,7
  3833  0848  284A               	goto	u5801
  3834  0849  284B               	goto	u5800
  3835  084A                     u5801:
  3836  084A  283C               	goto	l3739
  3837  084B                     u5800:
  3838  084B                     l3745:
  3839  084B  3001               	movlw	1
  3840  084C                     u5815:
  3841  084C  1003               	clrc
  3842  084D  0DA9               	rlf	___awdiv@quotient,f
  3843  084E  0DAA               	rlf	___awdiv@quotient+1,f
  3844  084F  3EFF               	addlw	-1
  3845  0850  1D03               	skipz
  3846  0851  284C               	goto	u5815
  3847  0852  0823               	movf	___awdiv@divisor+1,w
  3848  0853  0225               	subwf	___awdiv@dividend+1,w
  3849  0854  1D03               	skipz
  3850  0855  2858               	goto	u5825
  3851  0856  0822               	movf	___awdiv@divisor,w
  3852  0857  0224               	subwf	___awdiv@dividend,w
  3853  0858                     u5825:
  3854  0858  1C03               	skipc
  3855  0859  285B               	goto	u5821
  3856  085A  285C               	goto	u5820
  3857  085B                     u5821:
  3858  085B  2863               	goto	l3751
  3859  085C                     u5820:
  3860  085C                     l3747:
  3861  085C  0822               	movf	___awdiv@divisor,w
  3862  085D  02A4               	subwf	___awdiv@dividend,f
  3863  085E  0823               	movf	___awdiv@divisor+1,w
  3864  085F  1C03               	skipc
  3865  0860  03A5               	decf	___awdiv@dividend+1,f
  3866  0861  02A5               	subwf	___awdiv@dividend+1,f
  3867  0862                     l3749:
  3868  0862  1429               	bsf	___awdiv@quotient,0
  3869  0863                     l3751:
  3870  0863  3001               	movlw	1
  3871  0864                     u5835:
  3872  0864  1003               	clrc
  3873  0865  0CA3               	rrf	___awdiv@divisor+1,f
  3874  0866  0CA2               	rrf	___awdiv@divisor,f
  3875  0867  3EFF               	addlw	-1
  3876  0868  1D03               	skipz
  3877  0869  2864               	goto	u5835
  3878  086A                     l3753:
  3879  086A  3001               	movlw	1
  3880  086B  02A7               	subwf	___awdiv@counter,f
  3881  086C  1D03               	btfss	3,2
  3882  086D  286F               	goto	u5841
  3883  086E  2870               	goto	u5840
  3884  086F                     u5841:
  3885  086F  284B               	goto	l3745
  3886  0870                     u5840:
  3887  0870                     l3755:
  3888  0870  0828               	movf	___awdiv@sign,w
  3889  0871  1903               	btfsc	3,2
  3890  0872  2874               	goto	u5851
  3891  0873  2875               	goto	u5850
  3892  0874                     u5851:
  3893  0874  287A               	goto	l3759
  3894  0875                     u5850:
  3895  0875                     l3757:
  3896  0875  09A9               	comf	___awdiv@quotient,f
  3897  0876  09AA               	comf	___awdiv@quotient+1,f
  3898  0877  0AA9               	incf	___awdiv@quotient,f
  3899  0878  1903               	skipnz
  3900  0879  0AAA               	incf	___awdiv@quotient+1,f
  3901  087A                     l3759:
  3902  087A  082A               	movf	___awdiv@quotient+1,w
  3903  087B  00A3               	movwf	?___awdiv+1
  3904  087C  0829               	movf	___awdiv@quotient,w
  3905  087D  00A2               	movwf	?___awdiv
  3906  087E                     l561:
  3907  087E  0008               	return
  3908  087F                     __end_of___awdiv:
  3909                           
  3910                           	psect	text5
  3911  1988                     __ptext5:	
  3912 ;; *************** function _isdigit *****************
  3913 ;; Defined at:
  3914 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  c               1    wreg     unsigned char 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  c               1    4[COMMON] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;		None               void
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         0       0       0       0       0
  3929 ;;      Locals:         2       0       0       0       0
  3930 ;;      Temps:          0       0       0       0       0
  3931 ;;      Totals:         2       0       0       0       0
  3932 ;;Total ram usage:        2 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_sprintf
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function _isdigit
  3944  1988                     _isdigit:
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3948                           ;isdigit@c stored from wreg
  3949  1988  00F4               	movwf	isdigit@c
  3950  1989                     l2919:
  3951  1989  01F3               	clrf	_isdigit$1075
  3952  198A                     l2921:
  3953  198A  303A               	movlw	58
  3954  198B  0274               	subwf	isdigit@c,w
  3955  198C  1803               	skipnc
  3956  198D  298F               	goto	u4351
  3957  198E  2990               	goto	u4350
  3958  198F                     u4351:
  3959  198F  2998               	goto	l2927
  3960  1990                     u4350:
  3961  1990                     l2923:
  3962  1990  3030               	movlw	48
  3963  1991  0274               	subwf	isdigit@c,w
  3964  1992  1C03               	skipc
  3965  1993  2995               	goto	u4361
  3966  1994  2996               	goto	u4360
  3967  1995                     u4361:
  3968  1995  2998               	goto	l2927
  3969  1996                     u4360:
  3970  1996                     l2925:
  3971  1996  01F3               	clrf	_isdigit$1075
  3972  1997  0AF3               	incf	_isdigit$1075,f
  3973  1998                     l2927:
  3974  1998  0C73               	rrf	_isdigit$1075,w
  3975  1999                     l895:
  3976  1999  0008               	return
  3977  199A                     __end_of_isdigit:
  3978                           
  3979                           	psect	text6
  3980  1061                     __ptext6:	
  3981 ;; *************** function _fround *****************
  3982 ;; Defined at:
  3983 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  prec            1    wreg     unsigned char 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  prec            1   56[BANK0 ] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  4   37[BANK0 ] unsigned char 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3997 ;;      Params:         0       4       0       0       0
  3998 ;;      Locals:         0       9       0       0       0
  3999 ;;      Temps:          0       7       0       0       0
  4000 ;;      Totals:         0      20       0       0       0
  4001 ;;Total ram usage:       20 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    3
  4004 ;; This function calls:
  4005 ;;		___flmul
  4006 ;;		___lwdiv
  4007 ;;		___lwmod
  4008 ;; This function is called by:
  4009 ;;		_sprintf
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           
  4014                           ;psect for function _fround
  4015  1061                     _fround:
  4016                           
  4017                           ;incstack = 0
  4018                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4019                           ;fround@prec stored from wreg
  4020  1061  1283               	bcf	3,5	;RP0=0, select bank0
  4021  1062  1303               	bcf	3,6	;RP1=0, select bank0
  4022  1063  00D8               	movwf	fround@prec
  4023  1064                     l3871:
  4024                           
  4025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4026  1064  306E               	movlw	110
  4027  1065  0258               	subwf	fround@prec,w
  4028  1066  1C03               	skipc
  4029  1067  2869               	goto	u6081
  4030  1068  286A               	goto	u6080
  4031  1069                     u6081:
  4032  1069  2979               	goto	l3879
  4033  106A                     u6080:
  4034  106A                     l3873:
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4037  106A  303F               	movlw	63
  4038  106B  00AE               	movwf	___flmul@b+3
  4039  106C  3000               	movlw	0
  4040  106D  00AD               	movwf	___flmul@b+2
  4041  106E  3000               	movlw	0
  4042  106F  00AC               	movwf	___flmul@b+1
  4043  1070  3000               	movlw	0
  4044  1071  00AB               	movwf	___flmul@b
  4045  1072  3064               	movlw	100
  4046  1073  00A1               	movwf	___lwdiv@divisor
  4047  1074  3000               	movlw	0
  4048  1075  00A2               	movwf	___lwdiv@divisor+1
  4049  1076  0858               	movf	fround@prec,w
  4050  1077  00C9               	movwf	??_fround
  4051  1078  01CA               	clrf	??_fround+1
  4052  1079  0849               	movf	??_fround,w
  4053  107A  00A3               	movwf	___lwdiv@dividend
  4054  107B  084A               	movf	??_fround+1,w
  4055  107C  00A4               	movwf	___lwdiv@dividend+1
  4056  107D  160A  158A  22CF  160A  118A  	fcall	___lwdiv
  4057  1082  1283               	bcf	3,5	;RP0=0, select bank0
  4058  1083  1303               	bcf	3,6	;RP1=0, select bank0
  4059  1084  0821               	movf	?___lwdiv,w
  4060  1085  00CB               	movwf	??_fround+2
  4061  1086  3001               	movlw	1
  4062  1087                     u6095:
  4063  1087  1003               	clrc
  4064  1088  0DCB               	rlf	??_fround+2,f
  4065  1089  3EFF               	addlw	-1
  4066  108A  1D03               	skipz
  4067  108B  2887               	goto	u6095
  4068  108C  1003               	clrc
  4069  108D  0D4B               	rlf	??_fround+2,w
  4070  108E  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4071  108F  0084               	movwf	4
  4072  1090  160A  158A  200A  160A  118A  	fcall	stringdir
  4073  1095  00CC               	movwf	??_fround+3
  4074  1096  160A  158A  200A  160A  118A  	fcall	stringdir
  4075  109B  00CD               	movwf	??_fround+4
  4076  109C  160A  158A  200A  160A  118A  	fcall	stringdir
  4077  10A1  00CE               	movwf	??_fround+5
  4078  10A2  160A  158A  200A  160A  118A  	fcall	stringdir
  4079  10A7  00CF               	movwf	??_fround+6
  4080  10A8  084F               	movf	??_fround+6,w
  4081  10A9  00B2               	movwf	___flmul@a+3
  4082  10AA  084E               	movf	??_fround+5,w
  4083  10AB  00B1               	movwf	___flmul@a+2
  4084  10AC  084D               	movf	??_fround+4,w
  4085  10AD  00B0               	movwf	___flmul@a+1
  4086  10AE  084C               	movf	??_fround+3,w
  4087  10AF  00AF               	movwf	___flmul@a
  4088  10B0  120A  158A  213C  160A  118A  	fcall	___flmul
  4089  10B5  1283               	bcf	3,5	;RP0=0, select bank0
  4090  10B6  1303               	bcf	3,6	;RP1=0, select bank0
  4091  10B7  082E               	movf	?___flmul+3,w
  4092  10B8  00D7               	movwf	_fround$1258+3
  4093  10B9  082D               	movf	?___flmul+2,w
  4094  10BA  00D6               	movwf	_fround$1258+2
  4095  10BB  082C               	movf	?___flmul+1,w
  4096  10BC  00D5               	movwf	_fround$1258+1
  4097  10BD  082B               	movf	?___flmul,w
  4098  10BE  00D4               	movwf	_fround$1258
  4099                           
  4100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4101  10BF  300A               	movlw	10
  4102  10C0  00A1               	movwf	___lwdiv@divisor
  4103  10C1  3000               	movlw	0
  4104  10C2  00A2               	movwf	___lwdiv@divisor+1
  4105  10C3  0858               	movf	fround@prec,w
  4106  10C4  00C9               	movwf	??_fround
  4107  10C5  01CA               	clrf	??_fround+1
  4108  10C6  0849               	movf	??_fround,w
  4109  10C7  00F5               	movwf	___lwmod@dividend
  4110  10C8  084A               	movf	??_fround+1,w
  4111  10C9  00F6               	movwf	___lwmod@dividend+1
  4112  10CA  3064               	movlw	100
  4113  10CB  00F3               	movwf	___lwmod@divisor
  4114  10CC  3000               	movlw	0
  4115  10CD  00F4               	movwf	___lwmod@divisor+1
  4116  10CE  160A  158A  224D  160A  118A  	fcall	___lwmod
  4117  10D3  0874               	movf	?___lwmod+1,w
  4118  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  4119  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  4120  10D6  00A4               	movwf	___lwdiv@dividend+1
  4121  10D7  0873               	movf	?___lwmod,w
  4122  10D8  00A3               	movwf	___lwdiv@dividend
  4123  10D9  160A  158A  22CF  160A  118A  	fcall	___lwdiv
  4124  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  4125  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  4126  10E0  0821               	movf	?___lwdiv,w
  4127  10E1  00CB               	movwf	??_fround+2
  4128  10E2  3001               	movlw	1
  4129  10E3                     u6105:
  4130  10E3  1003               	clrc
  4131  10E4  0DCB               	rlf	??_fround+2,f
  4132  10E5  3EFF               	addlw	-1
  4133  10E6  1D03               	skipz
  4134  10E7  28E3               	goto	u6105
  4135  10E8  1003               	clrc
  4136  10E9  0D4B               	rlf	??_fround+2,w
  4137  10EA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4138  10EB  0084               	movwf	4
  4139  10EC  160A  158A  200A  160A  118A  	fcall	stringdir
  4140  10F1  00CC               	movwf	??_fround+3
  4141  10F2  160A  158A  200A  160A  118A  	fcall	stringdir
  4142  10F7  00CD               	movwf	??_fround+4
  4143  10F8  160A  158A  200A  160A  118A  	fcall	stringdir
  4144  10FD  00CE               	movwf	??_fround+5
  4145  10FE  160A  158A  200A  160A  118A  	fcall	stringdir
  4146  1103  00CF               	movwf	??_fround+6
  4147  1104  084F               	movf	??_fround+6,w
  4148  1105  00AE               	movwf	___flmul@b+3
  4149  1106  084E               	movf	??_fround+5,w
  4150  1107  00AD               	movwf	___flmul@b+2
  4151  1108  084D               	movf	??_fround+4,w
  4152  1109  00AC               	movwf	___flmul@b+1
  4153  110A  084C               	movf	??_fround+3,w
  4154  110B  00AB               	movwf	___flmul@b
  4155  110C  0857               	movf	_fround$1258+3,w
  4156  110D  00B2               	movwf	___flmul@a+3
  4157  110E  0856               	movf	_fround$1258+2,w
  4158  110F  00B1               	movwf	___flmul@a+2
  4159  1110  0855               	movf	_fround$1258+1,w
  4160  1111  00B0               	movwf	___flmul@a+1
  4161  1112  0854               	movf	_fround$1258,w
  4162  1113  00AF               	movwf	___flmul@a
  4163  1114  120A  158A  213C  160A  118A  	fcall	___flmul
  4164  1119  1283               	bcf	3,5	;RP0=0, select bank0
  4165  111A  1303               	bcf	3,6	;RP1=0, select bank0
  4166  111B  082E               	movf	?___flmul+3,w
  4167  111C  00D3               	movwf	_fround$1259+3
  4168  111D  082D               	movf	?___flmul+2,w
  4169  111E  00D2               	movwf	_fround$1259+2
  4170  111F  082C               	movf	?___flmul+1,w
  4171  1120  00D1               	movwf	_fround$1259+1
  4172  1121  082B               	movf	?___flmul,w
  4173  1122  00D0               	movwf	_fround$1259
  4174                           
  4175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4176  1123  300A               	movlw	10
  4177  1124  00F3               	movwf	___lwmod@divisor
  4178  1125  3000               	movlw	0
  4179  1126  00F4               	movwf	___lwmod@divisor+1
  4180  1127  0858               	movf	fround@prec,w
  4181  1128  00C9               	movwf	??_fround
  4182  1129  01CA               	clrf	??_fround+1
  4183  112A  0849               	movf	??_fround,w
  4184  112B  00F5               	movwf	___lwmod@dividend
  4185  112C  084A               	movf	??_fround+1,w
  4186  112D  00F6               	movwf	___lwmod@dividend+1
  4187  112E  160A  158A  224D  160A  118A  	fcall	___lwmod
  4188  1133  0873               	movf	?___lwmod,w
  4189  1134  1283               	bcf	3,5	;RP0=0, select bank0
  4190  1135  1303               	bcf	3,6	;RP1=0, select bank0
  4191  1136  00CB               	movwf	??_fround+2
  4192  1137  3001               	movlw	1
  4193  1138                     u6115:
  4194  1138  1003               	clrc
  4195  1139  0DCB               	rlf	??_fround+2,f
  4196  113A  3EFF               	addlw	-1
  4197  113B  1D03               	skipz
  4198  113C  2938               	goto	u6115
  4199  113D  1003               	clrc
  4200  113E  0D4B               	rlf	??_fround+2,w
  4201  113F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4202  1140  0084               	movwf	4
  4203  1141  160A  158A  200A  160A  118A  	fcall	stringdir
  4204  1146  00CC               	movwf	??_fround+3
  4205  1147  160A  158A  200A  160A  118A  	fcall	stringdir
  4206  114C  00CD               	movwf	??_fround+4
  4207  114D  160A  158A  200A  160A  118A  	fcall	stringdir
  4208  1152  00CE               	movwf	??_fround+5
  4209  1153  160A  158A  200A  160A  118A  	fcall	stringdir
  4210  1158  00CF               	movwf	??_fround+6
  4211  1159  084F               	movf	??_fround+6,w
  4212  115A  00AE               	movwf	___flmul@b+3
  4213  115B  084E               	movf	??_fround+5,w
  4214  115C  00AD               	movwf	___flmul@b+2
  4215  115D  084D               	movf	??_fround+4,w
  4216  115E  00AC               	movwf	___flmul@b+1
  4217  115F  084C               	movf	??_fround+3,w
  4218  1160  00AB               	movwf	___flmul@b
  4219  1161  0853               	movf	_fround$1259+3,w
  4220  1162  00B2               	movwf	___flmul@a+3
  4221  1163  0852               	movf	_fround$1259+2,w
  4222  1164  00B1               	movwf	___flmul@a+2
  4223  1165  0851               	movf	_fround$1259+1,w
  4224  1166  00B0               	movwf	___flmul@a+1
  4225  1167  0850               	movf	_fround$1259,w
  4226  1168  00AF               	movwf	___flmul@a
  4227  1169  120A  158A  213C  160A  118A  	fcall	___flmul
  4228  116E  1283               	bcf	3,5	;RP0=0, select bank0
  4229  116F  1303               	bcf	3,6	;RP1=0, select bank0
  4230  1170  082E               	movf	?___flmul+3,w
  4231  1171  00C8               	movwf	?_fround+3
  4232  1172  082D               	movf	?___flmul+2,w
  4233  1173  00C7               	movwf	?_fround+2
  4234  1174  082C               	movf	?___flmul+1,w
  4235  1175  00C6               	movwf	?_fround+1
  4236  1176  082B               	movf	?___flmul,w
  4237  1177  00C5               	movwf	?_fround
  4238  1178  2A6D               	goto	l305
  4239  1179                     l3879:
  4240  1179  300B               	movlw	11
  4241  117A  0258               	subwf	fround@prec,w
  4242  117B  1C03               	skipc
  4243  117C  297E               	goto	u6121
  4244  117D  297F               	goto	u6120
  4245  117E                     u6121:
  4246  117E  2A2A               	goto	l3885
  4247  117F                     u6120:
  4248  117F                     l3881:
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4251  117F  303F               	movlw	63
  4252  1180  00AE               	movwf	___flmul@b+3
  4253  1181  3000               	movlw	0
  4254  1182  00AD               	movwf	___flmul@b+2
  4255  1183  3000               	movlw	0
  4256  1184  00AC               	movwf	___flmul@b+1
  4257  1185  3000               	movlw	0
  4258  1186  00AB               	movwf	___flmul@b
  4259  1187  300A               	movlw	10
  4260  1188  00A1               	movwf	___lwdiv@divisor
  4261  1189  3000               	movlw	0
  4262  118A  00A2               	movwf	___lwdiv@divisor+1
  4263  118B  0858               	movf	fround@prec,w
  4264  118C  00C9               	movwf	??_fround
  4265  118D  01CA               	clrf	??_fround+1
  4266  118E  0849               	movf	??_fround,w
  4267  118F  00A3               	movwf	___lwdiv@dividend
  4268  1190  084A               	movf	??_fround+1,w
  4269  1191  00A4               	movwf	___lwdiv@dividend+1
  4270  1192  160A  158A  22CF  160A  118A  	fcall	___lwdiv
  4271  1197  1283               	bcf	3,5	;RP0=0, select bank0
  4272  1198  1303               	bcf	3,6	;RP1=0, select bank0
  4273  1199  0821               	movf	?___lwdiv,w
  4274  119A  00CB               	movwf	??_fround+2
  4275  119B  3001               	movlw	1
  4276  119C                     u6135:
  4277  119C  1003               	clrc
  4278  119D  0DCB               	rlf	??_fround+2,f
  4279  119E  3EFF               	addlw	-1
  4280  119F  1D03               	skipz
  4281  11A0  299C               	goto	u6135
  4282  11A1  1003               	clrc
  4283  11A2  0D4B               	rlf	??_fround+2,w
  4284  11A3  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4285  11A4  0084               	movwf	4
  4286  11A5  160A  158A  200A  160A  118A  	fcall	stringdir
  4287  11AA  00CC               	movwf	??_fround+3
  4288  11AB  160A  158A  200A  160A  118A  	fcall	stringdir
  4289  11B0  00CD               	movwf	??_fround+4
  4290  11B1  160A  158A  200A  160A  118A  	fcall	stringdir
  4291  11B6  00CE               	movwf	??_fround+5
  4292  11B7  160A  158A  200A  160A  118A  	fcall	stringdir
  4293  11BC  00CF               	movwf	??_fround+6
  4294  11BD  084F               	movf	??_fround+6,w
  4295  11BE  00B2               	movwf	___flmul@a+3
  4296  11BF  084E               	movf	??_fround+5,w
  4297  11C0  00B1               	movwf	___flmul@a+2
  4298  11C1  084D               	movf	??_fround+4,w
  4299  11C2  00B0               	movwf	___flmul@a+1
  4300  11C3  084C               	movf	??_fround+3,w
  4301  11C4  00AF               	movwf	___flmul@a
  4302  11C5  120A  158A  213C  160A  118A  	fcall	___flmul
  4303  11CA  1283               	bcf	3,5	;RP0=0, select bank0
  4304  11CB  1303               	bcf	3,6	;RP1=0, select bank0
  4305  11CC  082E               	movf	?___flmul+3,w
  4306  11CD  00D7               	movwf	_fround$1258+3
  4307  11CE  082D               	movf	?___flmul+2,w
  4308  11CF  00D6               	movwf	_fround$1258+2
  4309  11D0  082C               	movf	?___flmul+1,w
  4310  11D1  00D5               	movwf	_fround$1258+1
  4311  11D2  082B               	movf	?___flmul,w
  4312  11D3  00D4               	movwf	_fround$1258
  4313                           
  4314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4315  11D4  300A               	movlw	10
  4316  11D5  00F3               	movwf	___lwmod@divisor
  4317  11D6  3000               	movlw	0
  4318  11D7  00F4               	movwf	___lwmod@divisor+1
  4319  11D8  0858               	movf	fround@prec,w
  4320  11D9  00C9               	movwf	??_fround
  4321  11DA  01CA               	clrf	??_fround+1
  4322  11DB  0849               	movf	??_fround,w
  4323  11DC  00F5               	movwf	___lwmod@dividend
  4324  11DD  084A               	movf	??_fround+1,w
  4325  11DE  00F6               	movwf	___lwmod@dividend+1
  4326  11DF  160A  158A  224D  160A  118A  	fcall	___lwmod
  4327  11E4  0873               	movf	?___lwmod,w
  4328  11E5  1283               	bcf	3,5	;RP0=0, select bank0
  4329  11E6  1303               	bcf	3,6	;RP1=0, select bank0
  4330  11E7  00CB               	movwf	??_fround+2
  4331  11E8  3001               	movlw	1
  4332  11E9                     u6145:
  4333  11E9  1003               	clrc
  4334  11EA  0DCB               	rlf	??_fround+2,f
  4335  11EB  3EFF               	addlw	-1
  4336  11EC  1D03               	skipz
  4337  11ED  29E9               	goto	u6145
  4338  11EE  1003               	clrc
  4339  11EF  0D4B               	rlf	??_fround+2,w
  4340  11F0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4341  11F1  0084               	movwf	4
  4342  11F2  160A  158A  200A  160A  118A  	fcall	stringdir
  4343  11F7  00CC               	movwf	??_fround+3
  4344  11F8  160A  158A  200A  160A  118A  	fcall	stringdir
  4345  11FD  00CD               	movwf	??_fround+4
  4346  11FE  160A  158A  200A  160A  118A  	fcall	stringdir
  4347  1203  00CE               	movwf	??_fround+5
  4348  1204  160A  158A  200A  160A  118A  	fcall	stringdir
  4349  1209  00CF               	movwf	??_fround+6
  4350  120A  084F               	movf	??_fround+6,w
  4351  120B  00AE               	movwf	___flmul@b+3
  4352  120C  084E               	movf	??_fround+5,w
  4353  120D  00AD               	movwf	___flmul@b+2
  4354  120E  084D               	movf	??_fround+4,w
  4355  120F  00AC               	movwf	___flmul@b+1
  4356  1210  084C               	movf	??_fround+3,w
  4357  1211  00AB               	movwf	___flmul@b
  4358  1212  0857               	movf	_fround$1258+3,w
  4359  1213  00B2               	movwf	___flmul@a+3
  4360  1214  0856               	movf	_fround$1258+2,w
  4361  1215  00B1               	movwf	___flmul@a+2
  4362  1216  0855               	movf	_fround$1258+1,w
  4363  1217  00B0               	movwf	___flmul@a+1
  4364  1218  0854               	movf	_fround$1258,w
  4365  1219  00AF               	movwf	___flmul@a
  4366  121A  120A  158A  213C  160A  118A  	fcall	___flmul
  4367  121F  1283               	bcf	3,5	;RP0=0, select bank0
  4368  1220  1303               	bcf	3,6	;RP1=0, select bank0
  4369  1221  082E               	movf	?___flmul+3,w
  4370  1222  00C8               	movwf	?_fround+3
  4371  1223  082D               	movf	?___flmul+2,w
  4372  1224  00C7               	movwf	?_fround+2
  4373  1225  082C               	movf	?___flmul+1,w
  4374  1226  00C6               	movwf	?_fround+1
  4375  1227  082B               	movf	?___flmul,w
  4376  1228  00C5               	movwf	?_fround
  4377  1229  2A6D               	goto	l305
  4378  122A                     l3885:
  4379                           
  4380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4381  122A  303F               	movlw	63
  4382  122B  00AE               	movwf	___flmul@b+3
  4383  122C  3000               	movlw	0
  4384  122D  00AD               	movwf	___flmul@b+2
  4385  122E  3000               	movlw	0
  4386  122F  00AC               	movwf	___flmul@b+1
  4387  1230  3000               	movlw	0
  4388  1231  00AB               	movwf	___flmul@b
  4389  1232  0858               	movf	fround@prec,w
  4390  1233  00C9               	movwf	??_fround
  4391  1234  3001               	movlw	1
  4392  1235                     u6155:
  4393  1235  1003               	clrc
  4394  1236  0DC9               	rlf	??_fround,f
  4395  1237  3EFF               	addlw	-1
  4396  1238  1D03               	skipz
  4397  1239  2A35               	goto	u6155
  4398  123A  1003               	clrc
  4399  123B  0D49               	rlf	??_fround,w
  4400  123C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4401  123D  0084               	movwf	4
  4402  123E  160A  158A  200A  160A  118A  	fcall	stringdir
  4403  1243  00CA               	movwf	??_fround+1
  4404  1244  160A  158A  200A  160A  118A  	fcall	stringdir
  4405  1249  00CB               	movwf	??_fround+2
  4406  124A  160A  158A  200A  160A  118A  	fcall	stringdir
  4407  124F  00CC               	movwf	??_fround+3
  4408  1250  160A  158A  200A  160A  118A  	fcall	stringdir
  4409  1255  00CD               	movwf	??_fround+4
  4410  1256  084D               	movf	??_fround+4,w
  4411  1257  00B2               	movwf	___flmul@a+3
  4412  1258  084C               	movf	??_fround+3,w
  4413  1259  00B1               	movwf	___flmul@a+2
  4414  125A  084B               	movf	??_fround+2,w
  4415  125B  00B0               	movwf	___flmul@a+1
  4416  125C  084A               	movf	??_fround+1,w
  4417  125D  00AF               	movwf	___flmul@a
  4418  125E  120A  158A  213C  160A  118A  	fcall	___flmul
  4419  1263  1283               	bcf	3,5	;RP0=0, select bank0
  4420  1264  1303               	bcf	3,6	;RP1=0, select bank0
  4421  1265  082E               	movf	?___flmul+3,w
  4422  1266  00C8               	movwf	?_fround+3
  4423  1267  082D               	movf	?___flmul+2,w
  4424  1268  00C7               	movwf	?_fround+2
  4425  1269  082C               	movf	?___flmul+1,w
  4426  126A  00C6               	movwf	?_fround+1
  4427  126B  082B               	movf	?___flmul,w
  4428  126C  00C5               	movwf	?_fround
  4429  126D                     l305:
  4430  126D  0008               	return
  4431  126E                     __end_of_fround:
  4432                           
  4433                           	psect	text7
  4434  1A4D                     __ptext7:	
  4435 ;; *************** function ___lwmod *****************
  4436 ;; Defined at:
  4437 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  divisor         2    3[COMMON] unsigned int 
  4440 ;;  dividend        2    5[COMMON] unsigned int 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  counter         1    0[BANK0 ] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  2    3[COMMON] unsigned int 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4452 ;;      Params:         4       0       0       0       0
  4453 ;;      Locals:         0       1       0       0       0
  4454 ;;      Temps:          1       0       0       0       0
  4455 ;;      Totals:         5       1       0       0       0
  4456 ;;Total ram usage:        6 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    1
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_fround
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           
  4467                           ;psect for function ___lwmod
  4468  1A4D                     ___lwmod:
  4469  1A4D                     l3827:	
  4470                           ;incstack = 0
  4471                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4472                           
  4473  1A4D  0873               	movf	___lwmod@divisor,w
  4474  1A4E  0474               	iorwf	___lwmod@divisor+1,w
  4475  1A4F  1903               	btfsc	3,2
  4476  1A50  2A52               	goto	u6021
  4477  1A51  2A53               	goto	u6020
  4478  1A52                     u6021:
  4479  1A52  2A84               	goto	l3845
  4480  1A53                     u6020:
  4481  1A53                     l3829:
  4482  1A53  1283               	bcf	3,5	;RP0=0, select bank0
  4483  1A54  1303               	bcf	3,6	;RP1=0, select bank0
  4484  1A55  01A0               	clrf	___lwmod@counter
  4485  1A56  0AA0               	incf	___lwmod@counter,f
  4486  1A57  2A63               	goto	l3835
  4487  1A58                     l3831:
  4488  1A58  3001               	movlw	1
  4489  1A59                     u6035:
  4490  1A59  1003               	clrc
  4491  1A5A  0DF3               	rlf	___lwmod@divisor,f
  4492  1A5B  0DF4               	rlf	___lwmod@divisor+1,f
  4493  1A5C  3EFF               	addlw	-1
  4494  1A5D  1D03               	skipz
  4495  1A5E  2A59               	goto	u6035
  4496  1A5F                     l3833:
  4497  1A5F  3001               	movlw	1
  4498  1A60  00F7               	movwf	??___lwmod
  4499  1A61  0877               	movf	??___lwmod,w
  4500  1A62  07A0               	addwf	___lwmod@counter,f
  4501  1A63                     l3835:
  4502  1A63  1FF4               	btfss	___lwmod@divisor+1,7
  4503  1A64  2A66               	goto	u6041
  4504  1A65  2A67               	goto	u6040
  4505  1A66                     u6041:
  4506  1A66  2A58               	goto	l3831
  4507  1A67                     u6040:
  4508  1A67                     l3837:
  4509  1A67  0874               	movf	___lwmod@divisor+1,w
  4510  1A68  0276               	subwf	___lwmod@dividend+1,w
  4511  1A69  1D03               	skipz
  4512  1A6A  2A6D               	goto	u6055
  4513  1A6B  0873               	movf	___lwmod@divisor,w
  4514  1A6C  0275               	subwf	___lwmod@dividend,w
  4515  1A6D                     u6055:
  4516  1A6D  1C03               	skipc
  4517  1A6E  2A70               	goto	u6051
  4518  1A6F  2A71               	goto	u6050
  4519  1A70                     u6051:
  4520  1A70  2A77               	goto	l3841
  4521  1A71                     u6050:
  4522  1A71                     l3839:
  4523  1A71  0873               	movf	___lwmod@divisor,w
  4524  1A72  02F5               	subwf	___lwmod@dividend,f
  4525  1A73  0874               	movf	___lwmod@divisor+1,w
  4526  1A74  1C03               	skipc
  4527  1A75  03F6               	decf	___lwmod@dividend+1,f
  4528  1A76  02F6               	subwf	___lwmod@dividend+1,f
  4529  1A77                     l3841:
  4530  1A77  3001               	movlw	1
  4531  1A78                     u6065:
  4532  1A78  1003               	clrc
  4533  1A79  0CF4               	rrf	___lwmod@divisor+1,f
  4534  1A7A  0CF3               	rrf	___lwmod@divisor,f
  4535  1A7B  3EFF               	addlw	-1
  4536  1A7C  1D03               	skipz
  4537  1A7D  2A78               	goto	u6065
  4538  1A7E                     l3843:
  4539  1A7E  3001               	movlw	1
  4540  1A7F  02A0               	subwf	___lwmod@counter,f
  4541  1A80  1D03               	btfss	3,2
  4542  1A81  2A83               	goto	u6071
  4543  1A82  2A84               	goto	u6070
  4544  1A83                     u6071:
  4545  1A83  2A67               	goto	l3837
  4546  1A84                     u6070:
  4547  1A84                     l3845:
  4548  1A84  0876               	movf	___lwmod@dividend+1,w
  4549  1A85  00F4               	movwf	?___lwmod+1
  4550  1A86  0875               	movf	___lwmod@dividend,w
  4551  1A87  00F3               	movwf	?___lwmod
  4552  1A88                     l724:
  4553  1A88  0008               	return
  4554  1A89                     __end_of___lwmod:
  4555                           
  4556                           	psect	text8
  4557  1ACF                     __ptext8:	
  4558 ;; *************** function ___lwdiv *****************
  4559 ;; Defined at:
  4560 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  divisor         2    1[BANK0 ] unsigned int 
  4563 ;;  dividend        2    3[BANK0 ] unsigned int 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  quotient        2    7[BANK0 ] unsigned int 
  4566 ;;  counter         1    6[BANK0 ] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  2    1[BANK0 ] unsigned int 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4576 ;;      Params:         0       4       0       0       0
  4577 ;;      Locals:         0       3       0       0       0
  4578 ;;      Temps:          0       1       0       0       0
  4579 ;;      Totals:         0       8       0       0       0
  4580 ;;Total ram usage:        8 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    1
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_fround
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function ___lwdiv
  4592  1ACF                     ___lwdiv:
  4593  1ACF                     l3801:	
  4594                           ;incstack = 0
  4595                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4596                           
  4597  1ACF  1283               	bcf	3,5	;RP0=0, select bank0
  4598  1AD0  1303               	bcf	3,6	;RP1=0, select bank0
  4599  1AD1  01A7               	clrf	___lwdiv@quotient
  4600  1AD2  01A8               	clrf	___lwdiv@quotient+1
  4601  1AD3                     l3803:
  4602  1AD3  0821               	movf	___lwdiv@divisor,w
  4603  1AD4  0422               	iorwf	___lwdiv@divisor+1,w
  4604  1AD5  1903               	btfsc	3,2
  4605  1AD6  2AD8               	goto	u5951
  4606  1AD7  2AD9               	goto	u5950
  4607  1AD8                     u5951:
  4608  1AD8  2B10               	goto	l3823
  4609  1AD9                     u5950:
  4610  1AD9                     l3805:
  4611  1AD9  01A6               	clrf	___lwdiv@counter
  4612  1ADA  0AA6               	incf	___lwdiv@counter,f
  4613  1ADB  2AE7               	goto	l3811
  4614  1ADC                     l3807:
  4615  1ADC  3001               	movlw	1
  4616  1ADD                     u5965:
  4617  1ADD  1003               	clrc
  4618  1ADE  0DA1               	rlf	___lwdiv@divisor,f
  4619  1ADF  0DA2               	rlf	___lwdiv@divisor+1,f
  4620  1AE0  3EFF               	addlw	-1
  4621  1AE1  1D03               	skipz
  4622  1AE2  2ADD               	goto	u5965
  4623  1AE3                     l3809:
  4624  1AE3  3001               	movlw	1
  4625  1AE4  00A5               	movwf	??___lwdiv
  4626  1AE5  0825               	movf	??___lwdiv,w
  4627  1AE6  07A6               	addwf	___lwdiv@counter,f
  4628  1AE7                     l3811:
  4629  1AE7  1FA2               	btfss	___lwdiv@divisor+1,7
  4630  1AE8  2AEA               	goto	u5971
  4631  1AE9  2AEB               	goto	u5970
  4632  1AEA                     u5971:
  4633  1AEA  2ADC               	goto	l3807
  4634  1AEB                     u5970:
  4635  1AEB                     l3813:
  4636  1AEB  3001               	movlw	1
  4637  1AEC                     u5985:
  4638  1AEC  1003               	clrc
  4639  1AED  0DA7               	rlf	___lwdiv@quotient,f
  4640  1AEE  0DA8               	rlf	___lwdiv@quotient+1,f
  4641  1AEF  3EFF               	addlw	-1
  4642  1AF0  1D03               	skipz
  4643  1AF1  2AEC               	goto	u5985
  4644  1AF2  0822               	movf	___lwdiv@divisor+1,w
  4645  1AF3  0224               	subwf	___lwdiv@dividend+1,w
  4646  1AF4  1D03               	skipz
  4647  1AF5  2AF8               	goto	u5995
  4648  1AF6  0821               	movf	___lwdiv@divisor,w
  4649  1AF7  0223               	subwf	___lwdiv@dividend,w
  4650  1AF8                     u5995:
  4651  1AF8  1C03               	skipc
  4652  1AF9  2AFB               	goto	u5991
  4653  1AFA  2AFC               	goto	u5990
  4654  1AFB                     u5991:
  4655  1AFB  2B03               	goto	l3819
  4656  1AFC                     u5990:
  4657  1AFC                     l3815:
  4658  1AFC  0821               	movf	___lwdiv@divisor,w
  4659  1AFD  02A3               	subwf	___lwdiv@dividend,f
  4660  1AFE  0822               	movf	___lwdiv@divisor+1,w
  4661  1AFF  1C03               	skipc
  4662  1B00  03A4               	decf	___lwdiv@dividend+1,f
  4663  1B01  02A4               	subwf	___lwdiv@dividend+1,f
  4664  1B02                     l3817:
  4665  1B02  1427               	bsf	___lwdiv@quotient,0
  4666  1B03                     l3819:
  4667  1B03  3001               	movlw	1
  4668  1B04                     u6005:
  4669  1B04  1003               	clrc
  4670  1B05  0CA2               	rrf	___lwdiv@divisor+1,f
  4671  1B06  0CA1               	rrf	___lwdiv@divisor,f
  4672  1B07  3EFF               	addlw	-1
  4673  1B08  1D03               	skipz
  4674  1B09  2B04               	goto	u6005
  4675  1B0A                     l3821:
  4676  1B0A  3001               	movlw	1
  4677  1B0B  02A6               	subwf	___lwdiv@counter,f
  4678  1B0C  1D03               	btfss	3,2
  4679  1B0D  2B0F               	goto	u6011
  4680  1B0E  2B10               	goto	u6010
  4681  1B0F                     u6011:
  4682  1B0F  2AEB               	goto	l3813
  4683  1B10                     u6010:
  4684  1B10                     l3823:
  4685  1B10  0828               	movf	___lwdiv@quotient+1,w
  4686  1B11  00A2               	movwf	?___lwdiv+1
  4687  1B12  0827               	movf	___lwdiv@quotient,w
  4688  1B13  00A1               	movwf	?___lwdiv
  4689  1B14                     l714:
  4690  1B14  0008               	return
  4691  1B15                     __end_of___lwdiv:
  4692                           
  4693                           	psect	text9
  4694  087F                     __ptext9:	
  4695 ;; *************** function __tdiv_to_l_ *****************
  4696 ;; Defined at:
  4697 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  f1              4    0[BANK0 ] float 
  4700 ;;  f2              4    4[BANK0 ] float 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  quot            4    8[BANK0 ] unsigned long 
  4703 ;;  exp1            1   13[BANK0 ] unsigned char 
  4704 ;;  cntr            1   12[BANK0 ] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  4    0[BANK0 ] unsigned long 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4714 ;;      Params:         0       8       0       0       0
  4715 ;;      Locals:         0       6       0       0       0
  4716 ;;      Temps:          4       0       0       0       0
  4717 ;;      Totals:         4      14       0       0       0
  4718 ;;Total ram usage:       18 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    1
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_sprintf
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function __tdiv_to_l_
  4730  087F                     __tdiv_to_l_:
  4731  087F                     l3929:	
  4732                           ;incstack = 0
  4733                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4734                           
  4735  087F  1283               	bcf	3,5	;RP0=0, select bank0
  4736  0880  1303               	bcf	3,6	;RP1=0, select bank0
  4737  0881  0820               	movf	__tdiv_to_l_@f1,w
  4738  0882  00F3               	movwf	??__tdiv_to_l_
  4739  0883  0821               	movf	__tdiv_to_l_@f1+1,w
  4740  0884  00F4               	movwf	??__tdiv_to_l_+1
  4741  0885  0822               	movf	__tdiv_to_l_@f1+2,w
  4742  0886  00F5               	movwf	??__tdiv_to_l_+2
  4743  0887  1003               	clrc
  4744  0888  0D74               	rlf	??__tdiv_to_l_+1,w
  4745  0889  0D75               	rlf	??__tdiv_to_l_+2,w
  4746  088A  00F6               	movwf	??__tdiv_to_l_+3
  4747  088B  0876               	movf	??__tdiv_to_l_+3,w
  4748  088C  00AD               	movwf	__tdiv_to_l_@exp1
  4749  088D  082D               	movf	__tdiv_to_l_@exp1,w
  4750  088E  1D03               	btfss	3,2
  4751  088F  2891               	goto	u6331
  4752  0890  2892               	goto	u6330
  4753  0891                     u6331:
  4754  0891  289B               	goto	l3935
  4755  0892                     u6330:
  4756  0892                     l3931:
  4757  0892  3000               	movlw	0
  4758  0893  00A3               	movwf	?__tdiv_to_l_+3
  4759  0894  3000               	movlw	0
  4760  0895  00A2               	movwf	?__tdiv_to_l_+2
  4761  0896  3000               	movlw	0
  4762  0897  00A1               	movwf	?__tdiv_to_l_+1
  4763  0898  3000               	movlw	0
  4764  0899  00A0               	movwf	?__tdiv_to_l_
  4765  089A  293B               	goto	l625
  4766  089B                     l3935:
  4767  089B  0824               	movf	__tdiv_to_l_@f2,w
  4768  089C  00F3               	movwf	??__tdiv_to_l_
  4769  089D  0825               	movf	__tdiv_to_l_@f2+1,w
  4770  089E  00F4               	movwf	??__tdiv_to_l_+1
  4771  089F  0826               	movf	__tdiv_to_l_@f2+2,w
  4772  08A0  00F5               	movwf	??__tdiv_to_l_+2
  4773  08A1  1003               	clrc
  4774  08A2  0D74               	rlf	??__tdiv_to_l_+1,w
  4775  08A3  0D75               	rlf	??__tdiv_to_l_+2,w
  4776  08A4  00F6               	movwf	??__tdiv_to_l_+3
  4777  08A5  0876               	movf	??__tdiv_to_l_+3,w
  4778  08A6  00AC               	movwf	__tdiv_to_l_@cntr
  4779  08A7  082C               	movf	__tdiv_to_l_@cntr,w
  4780  08A8  1D03               	btfss	3,2
  4781  08A9  28AB               	goto	u6341
  4782  08AA  28AC               	goto	u6340
  4783  08AB                     u6341:
  4784  08AB  28AD               	goto	l626
  4785  08AC                     u6340:
  4786  08AC  2892               	goto	l3931
  4787  08AD                     l626:
  4788  08AD  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4789  08AE                     l3941:
  4790  08AE  30FF               	movlw	255
  4791  08AF  05A0               	andwf	__tdiv_to_l_@f1,f
  4792  08B0  30FF               	movlw	255
  4793  08B1  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4794  08B2  3000               	movlw	0
  4795  08B3  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4796  08B4                     l3943:
  4797  08B4  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4798  08B5  30FF               	movlw	255
  4799  08B6  05A4               	andwf	__tdiv_to_l_@f2,f
  4800  08B7  30FF               	movlw	255
  4801  08B8  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4802  08B9  3000               	movlw	0
  4803  08BA  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4804  08BB  3000               	movlw	0
  4805  08BC  00AB               	movwf	__tdiv_to_l_@quot+3
  4806  08BD  3000               	movlw	0
  4807  08BE  00AA               	movwf	__tdiv_to_l_@quot+2
  4808  08BF  3000               	movlw	0
  4809  08C0  00A9               	movwf	__tdiv_to_l_@quot+1
  4810  08C1  3000               	movlw	0
  4811  08C2  00A8               	movwf	__tdiv_to_l_@quot
  4812  08C3                     l3945:
  4813  08C3  307F               	movlw	127
  4814  08C4  02AD               	subwf	__tdiv_to_l_@exp1,f
  4815  08C5                     l3947:
  4816  08C5  3098               	movlw	152
  4817  08C6  072C               	addwf	__tdiv_to_l_@cntr,w
  4818  08C7  00F3               	movwf	??__tdiv_to_l_
  4819  08C8  0873               	movf	??__tdiv_to_l_,w
  4820  08C9  02AD               	subwf	__tdiv_to_l_@exp1,f
  4821  08CA  3018               	movlw	24
  4822  08CB  00F3               	movwf	??__tdiv_to_l_
  4823  08CC  0873               	movf	??__tdiv_to_l_,w
  4824  08CD  00AC               	movwf	__tdiv_to_l_@cntr
  4825  08CE                     l3949:
  4826  08CE  3001               	movlw	1
  4827  08CF  00F3               	movwf	??__tdiv_to_l_
  4828  08D0                     u6355:
  4829  08D0  1003               	clrc
  4830  08D1  0DA8               	rlf	__tdiv_to_l_@quot,f
  4831  08D2  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4832  08D3  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4833  08D4  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4834  08D5  0BF3               	decfsz	??__tdiv_to_l_,f
  4835  08D6  28D0               	goto	u6355
  4836  08D7                     l3951:
  4837  08D7  0826               	movf	__tdiv_to_l_@f2+2,w
  4838  08D8  0222               	subwf	__tdiv_to_l_@f1+2,w
  4839  08D9  1D03               	skipz
  4840  08DA  28E1               	goto	u6365
  4841  08DB  0825               	movf	__tdiv_to_l_@f2+1,w
  4842  08DC  0221               	subwf	__tdiv_to_l_@f1+1,w
  4843  08DD  1D03               	skipz
  4844  08DE  28E1               	goto	u6365
  4845  08DF  0824               	movf	__tdiv_to_l_@f2,w
  4846  08E0  0220               	subwf	__tdiv_to_l_@f1,w
  4847  08E1                     u6365:
  4848  08E1  1C03               	skipc
  4849  08E2  28E4               	goto	u6361
  4850  08E3  28E5               	goto	u6360
  4851  08E4                     u6361:
  4852  08E4  28F0               	goto	l3957
  4853  08E5                     u6360:
  4854  08E5                     l3953:
  4855  08E5  0824               	movf	__tdiv_to_l_@f2,w
  4856  08E6  02A0               	subwf	__tdiv_to_l_@f1,f
  4857  08E7  0825               	movf	__tdiv_to_l_@f2+1,w
  4858  08E8  1C03               	skipc
  4859  08E9  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4860  08EA  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4861  08EB  0826               	movf	__tdiv_to_l_@f2+2,w
  4862  08EC  1C03               	skipc
  4863  08ED  0A26               	incf	__tdiv_to_l_@f2+2,w
  4864  08EE  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4865  08EF                     l3955:
  4866  08EF  1428               	bsf	__tdiv_to_l_@quot,0
  4867  08F0                     l3957:
  4868  08F0  3001               	movlw	1
  4869  08F1                     u6375:
  4870  08F1  1003               	clrc
  4871  08F2  0DA0               	rlf	__tdiv_to_l_@f1,f
  4872  08F3  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4873  08F4  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4874  08F5  3EFF               	addlw	-1
  4875  08F6  1D03               	skipz
  4876  08F7  28F1               	goto	u6375
  4877  08F8                     l3959:
  4878  08F8  3001               	movlw	1
  4879  08F9  02AC               	subwf	__tdiv_to_l_@cntr,f
  4880  08FA  1D03               	btfss	3,2
  4881  08FB  28FD               	goto	u6381
  4882  08FC  28FE               	goto	u6380
  4883  08FD                     u6381:
  4884  08FD  28CE               	goto	l3949
  4885  08FE                     u6380:
  4886  08FE                     l629:
  4887  08FE  1FAD               	btfss	__tdiv_to_l_@exp1,7
  4888  08FF  2901               	goto	u6391
  4889  0900  2902               	goto	u6390
  4890  0901                     u6391:
  4891  0901  291C               	goto	l3969
  4892  0902                     u6390:
  4893  0902                     l3961:
  4894  0902  082D               	movf	__tdiv_to_l_@exp1,w
  4895  0903  3A80               	xorlw	128
  4896  0904  3E97               	addlw	151
  4897  0905  1803               	skipnc
  4898  0906  2908               	goto	u6401
  4899  0907  2909               	goto	u6400
  4900  0908                     u6401:
  4901  0908  290A               	goto	l3967
  4902  0909                     u6400:
  4903  0909  2892               	goto	l3931
  4904  090A                     l3967:
  4905  090A  3001               	movlw	1
  4906  090B                     u6415:
  4907  090B  1003               	clrc
  4908  090C  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  4909  090D  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  4910  090E  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  4911  090F  0CA8               	rrf	__tdiv_to_l_@quot,f
  4912  0910  3EFF               	addlw	-1
  4913  0911  1D03               	skipz
  4914  0912  290B               	goto	u6415
  4915  0913  3001               	movlw	1
  4916  0914  00F3               	movwf	??__tdiv_to_l_
  4917  0915  0873               	movf	??__tdiv_to_l_,w
  4918  0916  07AD               	addwf	__tdiv_to_l_@exp1,f
  4919  0917  1D03               	btfss	3,2
  4920  0918  291A               	goto	u6421
  4921  0919  291B               	goto	u6420
  4922  091A                     u6421:
  4923  091A  290A               	goto	l3967
  4924  091B                     u6420:
  4925  091B  2933               	goto	l3977
  4926  091C                     l3969:
  4927  091C  3018               	movlw	24
  4928  091D  022D               	subwf	__tdiv_to_l_@exp1,w
  4929  091E  1C03               	skipc
  4930  091F  2921               	goto	u6431
  4931  0920  2922               	goto	u6430
  4932  0921                     u6431:
  4933  0921  292E               	goto	l636
  4934  0922                     u6430:
  4935  0922  2892               	goto	l3931
  4936  0923                     l3975:
  4937  0923  3001               	movlw	1
  4938  0924  00F3               	movwf	??__tdiv_to_l_
  4939  0925                     u6445:
  4940  0925  1003               	clrc
  4941  0926  0DA8               	rlf	__tdiv_to_l_@quot,f
  4942  0927  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4943  0928  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4944  0929  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4945  092A  0BF3               	decfsz	??__tdiv_to_l_,f
  4946  092B  2925               	goto	u6445
  4947  092C  3001               	movlw	1
  4948  092D  02AD               	subwf	__tdiv_to_l_@exp1,f
  4949  092E                     l636:
  4950  092E  082D               	movf	__tdiv_to_l_@exp1,w
  4951  092F  1D03               	btfss	3,2
  4952  0930  2932               	goto	u6451
  4953  0931  2933               	goto	u6450
  4954  0932                     u6451:
  4955  0932  2923               	goto	l3975
  4956  0933                     u6450:
  4957  0933                     l3977:
  4958  0933  082B               	movf	__tdiv_to_l_@quot+3,w
  4959  0934  00A3               	movwf	?__tdiv_to_l_+3
  4960  0935  082A               	movf	__tdiv_to_l_@quot+2,w
  4961  0936  00A2               	movwf	?__tdiv_to_l_+2
  4962  0937  0829               	movf	__tdiv_to_l_@quot+1,w
  4963  0938  00A1               	movwf	?__tdiv_to_l_+1
  4964  0939  0828               	movf	__tdiv_to_l_@quot,w
  4965  093A  00A0               	movwf	?__tdiv_to_l_
  4966  093B                     l625:
  4967  093B  0008               	return
  4968  093C                     __end_of__tdiv_to_l_:
  4969                           
  4970                           	psect	text10
  4971  06AC                     __ptext10:	
  4972 ;; *************** function __div_to_l_ *****************
  4973 ;; Defined at:
  4974 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  f1              4    0[BANK0 ] unsigned long 
  4977 ;;  f2              4    4[BANK0 ] unsigned long 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  quot            4    8[BANK0 ] unsigned long 
  4980 ;;  exp1            1   13[BANK0 ] unsigned char 
  4981 ;;  cntr            1   12[BANK0 ] unsigned char 
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  4    0[BANK0 ] unsigned long 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4991 ;;      Params:         0       8       0       0       0
  4992 ;;      Locals:         0       6       0       0       0
  4993 ;;      Temps:          1       0       0       0       0
  4994 ;;      Totals:         1      14       0       0       0
  4995 ;;Total ram usage:       15 bytes
  4996 ;; Hardware stack levels used:    1
  4997 ;; Hardware stack levels required when called:    1
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		_sprintf
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           
  5006                           ;psect for function __div_to_l_
  5007  06AC                     __div_to_l_:
  5008  06AC                     l3981:	
  5009                           ;incstack = 0
  5010                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5011                           
  5012  06AC  1003               	clrc
  5013  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  5014  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  5015  06AF  0D22               	rlf	__div_to_l_@f1+2,w
  5016  06B0  0D23               	rlf	__div_to_l_@f1+3,w
  5017  06B1  00F3               	movwf	??__div_to_l_
  5018  06B2  0873               	movf	??__div_to_l_,w
  5019  06B3  00AD               	movwf	__div_to_l_@exp1
  5020  06B4  082D               	movf	__div_to_l_@exp1,w
  5021  06B5  1D03               	btfss	3,2
  5022  06B6  2EB8               	goto	u6461
  5023  06B7  2EB9               	goto	u6460
  5024  06B8                     u6461:
  5025  06B8  2EC2               	goto	l3987
  5026  06B9                     u6460:
  5027  06B9                     l3983:
  5028  06B9  3000               	movlw	0
  5029  06BA  00A3               	movwf	?__div_to_l_+3
  5030  06BB  3000               	movlw	0
  5031  06BC  00A2               	movwf	?__div_to_l_+2
  5032  06BD  3000               	movlw	0
  5033  06BE  00A1               	movwf	?__div_to_l_+1
  5034  06BF  3000               	movlw	0
  5035  06C0  00A0               	movwf	?__div_to_l_
  5036  06C1  2F69               	goto	l578
  5037  06C2                     l3987:
  5038  06C2  1003               	clrc
  5039  06C3  0D26               	rlf	__div_to_l_@f2+2,w
  5040  06C4  0D27               	rlf	__div_to_l_@f2+3,w
  5041  06C5  00F3               	movwf	??__div_to_l_
  5042  06C6  0873               	movf	??__div_to_l_,w
  5043  06C7  00AC               	movwf	__div_to_l_@cntr
  5044  06C8  082C               	movf	__div_to_l_@cntr,w
  5045  06C9  1D03               	btfss	3,2
  5046  06CA  2ECC               	goto	u6471
  5047  06CB  2ECD               	goto	u6470
  5048  06CC                     u6471:
  5049  06CC  2ECE               	goto	l579
  5050  06CD                     u6470:
  5051  06CD  2EB9               	goto	l3983
  5052  06CE                     l579:
  5053  06CE  17A2               	bsf	__div_to_l_@f1+2,7
  5054  06CF                     l3993:
  5055  06CF  30FF               	movlw	255
  5056  06D0  05A0               	andwf	__div_to_l_@f1,f
  5057  06D1  30FF               	movlw	255
  5058  06D2  05A1               	andwf	__div_to_l_@f1+1,f
  5059  06D3  30FF               	movlw	255
  5060  06D4  05A2               	andwf	__div_to_l_@f1+2,f
  5061  06D5  3000               	movlw	0
  5062  06D6  05A3               	andwf	__div_to_l_@f1+3,f
  5063  06D7                     l3995:
  5064  06D7  17A6               	bsf	__div_to_l_@f2+2,7
  5065  06D8  30FF               	movlw	255
  5066  06D9  05A4               	andwf	__div_to_l_@f2,f
  5067  06DA  30FF               	movlw	255
  5068  06DB  05A5               	andwf	__div_to_l_@f2+1,f
  5069  06DC  30FF               	movlw	255
  5070  06DD  05A6               	andwf	__div_to_l_@f2+2,f
  5071  06DE  3000               	movlw	0
  5072  06DF  05A7               	andwf	__div_to_l_@f2+3,f
  5073  06E0  3000               	movlw	0
  5074  06E1  00AB               	movwf	__div_to_l_@quot+3
  5075  06E2  3000               	movlw	0
  5076  06E3  00AA               	movwf	__div_to_l_@quot+2
  5077  06E4  3000               	movlw	0
  5078  06E5  00A9               	movwf	__div_to_l_@quot+1
  5079  06E6  3000               	movlw	0
  5080  06E7  00A8               	movwf	__div_to_l_@quot
  5081  06E8                     l3997:
  5082  06E8  307F               	movlw	127
  5083  06E9  02AD               	subwf	__div_to_l_@exp1,f
  5084  06EA                     l3999:
  5085  06EA  30A0               	movlw	160
  5086  06EB  072C               	addwf	__div_to_l_@cntr,w
  5087  06EC  00F3               	movwf	??__div_to_l_
  5088  06ED  0873               	movf	??__div_to_l_,w
  5089  06EE  02AD               	subwf	__div_to_l_@exp1,f
  5090  06EF  3020               	movlw	32
  5091  06F0  00F3               	movwf	??__div_to_l_
  5092  06F1  0873               	movf	??__div_to_l_,w
  5093  06F2  00AC               	movwf	__div_to_l_@cntr
  5094  06F3                     l4001:
  5095  06F3  3001               	movlw	1
  5096  06F4  00F3               	movwf	??__div_to_l_
  5097  06F5                     u6485:
  5098  06F5  1003               	clrc
  5099  06F6  0DA8               	rlf	__div_to_l_@quot,f
  5100  06F7  0DA9               	rlf	__div_to_l_@quot+1,f
  5101  06F8  0DAA               	rlf	__div_to_l_@quot+2,f
  5102  06F9  0DAB               	rlf	__div_to_l_@quot+3,f
  5103  06FA  0BF3               	decfsz	??__div_to_l_,f
  5104  06FB  2EF5               	goto	u6485
  5105  06FC                     l4003:
  5106  06FC  0827               	movf	__div_to_l_@f2+3,w
  5107  06FD  0223               	subwf	__div_to_l_@f1+3,w
  5108  06FE  1D03               	skipz
  5109  06FF  2F0A               	goto	u6495
  5110  0700  0826               	movf	__div_to_l_@f2+2,w
  5111  0701  0222               	subwf	__div_to_l_@f1+2,w
  5112  0702  1D03               	skipz
  5113  0703  2F0A               	goto	u6495
  5114  0704  0825               	movf	__div_to_l_@f2+1,w
  5115  0705  0221               	subwf	__div_to_l_@f1+1,w
  5116  0706  1D03               	skipz
  5117  0707  2F0A               	goto	u6495
  5118  0708  0824               	movf	__div_to_l_@f2,w
  5119  0709  0220               	subwf	__div_to_l_@f1,w
  5120  070A                     u6495:
  5121  070A  1C03               	skipc
  5122  070B  2F0D               	goto	u6491
  5123  070C  2F0E               	goto	u6490
  5124  070D                     u6491:
  5125  070D  2F1D               	goto	l4009
  5126  070E                     u6490:
  5127  070E                     l4005:
  5128  070E  0824               	movf	__div_to_l_@f2,w
  5129  070F  02A0               	subwf	__div_to_l_@f1,f
  5130  0710  0825               	movf	__div_to_l_@f2+1,w
  5131  0711  1C03               	skipc
  5132  0712  0F25               	incfsz	__div_to_l_@f2+1,w
  5133  0713  02A1               	subwf	__div_to_l_@f1+1,f
  5134  0714  0826               	movf	__div_to_l_@f2+2,w
  5135  0715  1C03               	skipc
  5136  0716  0F26               	incfsz	__div_to_l_@f2+2,w
  5137  0717  02A2               	subwf	__div_to_l_@f1+2,f
  5138  0718  0827               	movf	__div_to_l_@f2+3,w
  5139  0719  1C03               	skipc
  5140  071A  0F27               	incfsz	__div_to_l_@f2+3,w
  5141  071B  02A3               	subwf	__div_to_l_@f1+3,f
  5142  071C                     l4007:
  5143  071C  1428               	bsf	__div_to_l_@quot,0
  5144  071D                     l4009:
  5145  071D  3001               	movlw	1
  5146  071E  00F3               	movwf	??__div_to_l_
  5147  071F                     u6505:
  5148  071F  1003               	clrc
  5149  0720  0DA0               	rlf	__div_to_l_@f1,f
  5150  0721  0DA1               	rlf	__div_to_l_@f1+1,f
  5151  0722  0DA2               	rlf	__div_to_l_@f1+2,f
  5152  0723  0DA3               	rlf	__div_to_l_@f1+3,f
  5153  0724  0BF3               	decfsz	??__div_to_l_,f
  5154  0725  2F1F               	goto	u6505
  5155  0726                     l4011:
  5156  0726  3001               	movlw	1
  5157  0727  02AC               	subwf	__div_to_l_@cntr,f
  5158  0728  1D03               	btfss	3,2
  5159  0729  2F2B               	goto	u6511
  5160  072A  2F2C               	goto	u6510
  5161  072B                     u6511:
  5162  072B  2EF3               	goto	l4001
  5163  072C                     u6510:
  5164  072C                     l582:
  5165  072C  1FAD               	btfss	__div_to_l_@exp1,7
  5166  072D  2F2F               	goto	u6521
  5167  072E  2F30               	goto	u6520
  5168  072F                     u6521:
  5169  072F  2F4A               	goto	l4021
  5170  0730                     u6520:
  5171  0730                     l4013:
  5172  0730  082D               	movf	__div_to_l_@exp1,w
  5173  0731  3A80               	xorlw	128
  5174  0732  3E9F               	addlw	159
  5175  0733  1803               	skipnc
  5176  0734  2F36               	goto	u6531
  5177  0735  2F37               	goto	u6530
  5178  0736                     u6531:
  5179  0736  2F38               	goto	l4019
  5180  0737                     u6530:
  5181  0737  2EB9               	goto	l3983
  5182  0738                     l4019:
  5183  0738  3001               	movlw	1
  5184  0739                     u6545:
  5185  0739  1003               	clrc
  5186  073A  0CAB               	rrf	__div_to_l_@quot+3,f
  5187  073B  0CAA               	rrf	__div_to_l_@quot+2,f
  5188  073C  0CA9               	rrf	__div_to_l_@quot+1,f
  5189  073D  0CA8               	rrf	__div_to_l_@quot,f
  5190  073E  3EFF               	addlw	-1
  5191  073F  1D03               	skipz
  5192  0740  2F39               	goto	u6545
  5193  0741  3001               	movlw	1
  5194  0742  00F3               	movwf	??__div_to_l_
  5195  0743  0873               	movf	??__div_to_l_,w
  5196  0744  07AD               	addwf	__div_to_l_@exp1,f
  5197  0745  1D03               	btfss	3,2
  5198  0746  2F48               	goto	u6551
  5199  0747  2F49               	goto	u6550
  5200  0748                     u6551:
  5201  0748  2F38               	goto	l4019
  5202  0749                     u6550:
  5203  0749  2F61               	goto	l4029
  5204  074A                     l4021:
  5205  074A  3020               	movlw	32
  5206  074B  022D               	subwf	__div_to_l_@exp1,w
  5207  074C  1C03               	skipc
  5208  074D  2F4F               	goto	u6561
  5209  074E  2F50               	goto	u6560
  5210  074F                     u6561:
  5211  074F  2F5C               	goto	l589
  5212  0750                     u6560:
  5213  0750  2EB9               	goto	l3983
  5214  0751                     l4027:
  5215  0751  3001               	movlw	1
  5216  0752  00F3               	movwf	??__div_to_l_
  5217  0753                     u6575:
  5218  0753  1003               	clrc
  5219  0754  0DA8               	rlf	__div_to_l_@quot,f
  5220  0755  0DA9               	rlf	__div_to_l_@quot+1,f
  5221  0756  0DAA               	rlf	__div_to_l_@quot+2,f
  5222  0757  0DAB               	rlf	__div_to_l_@quot+3,f
  5223  0758  0BF3               	decfsz	??__div_to_l_,f
  5224  0759  2F53               	goto	u6575
  5225  075A  3001               	movlw	1
  5226  075B  02AD               	subwf	__div_to_l_@exp1,f
  5227  075C                     l589:
  5228  075C  082D               	movf	__div_to_l_@exp1,w
  5229  075D  1D03               	btfss	3,2
  5230  075E  2F60               	goto	u6581
  5231  075F  2F61               	goto	u6580
  5232  0760                     u6581:
  5233  0760  2F51               	goto	l4027
  5234  0761                     u6580:
  5235  0761                     l4029:
  5236  0761  082B               	movf	__div_to_l_@quot+3,w
  5237  0762  00A3               	movwf	?__div_to_l_+3
  5238  0763  082A               	movf	__div_to_l_@quot+2,w
  5239  0764  00A2               	movwf	?__div_to_l_+2
  5240  0765  0829               	movf	__div_to_l_@quot+1,w
  5241  0766  00A1               	movwf	?__div_to_l_+1
  5242  0767  0828               	movf	__div_to_l_@quot,w
  5243  0768  00A0               	movwf	?__div_to_l_
  5244  0769                     l578:
  5245  0769  0008               	return
  5246  076A                     __end_of__div_to_l_:
  5247                           
  5248                           	psect	text11
  5249  1A22                     __ptext11:	
  5250 ;; *************** function ___wmul *****************
  5251 ;; Defined at:
  5252 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  multiplier      2    3[COMMON] unsigned int 
  5255 ;;  multiplicand    2    5[COMMON] unsigned int 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  product         2    0[BANK0 ] unsigned int 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  2    3[COMMON] unsigned int 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2, status,0
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5267 ;;      Params:         4       0       0       0       0
  5268 ;;      Locals:         0       2       0       0       0
  5269 ;;      Temps:          0       0       0       0       0
  5270 ;;      Totals:         4       2       0       0       0
  5271 ;;Total ram usage:        6 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    1
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_sprintf
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function ___wmul
  5283  1A22                     ___wmul:
  5284  1A22                     l4033:	
  5285                           ;incstack = 0
  5286                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5287                           
  5288  1A22  1283               	bcf	3,5	;RP0=0, select bank0
  5289  1A23  1303               	bcf	3,6	;RP1=0, select bank0
  5290  1A24  01A0               	clrf	___wmul@product
  5291  1A25  01A1               	clrf	___wmul@product+1
  5292  1A26                     l4035:
  5293  1A26  1C73               	btfss	___wmul@multiplier,0
  5294  1A27  2A29               	goto	u6591
  5295  1A28  2A2A               	goto	u6590
  5296  1A29                     u6591:
  5297  1A29  2A32               	goto	l408
  5298  1A2A                     u6590:
  5299  1A2A                     l4037:
  5300  1A2A  0875               	movf	___wmul@multiplicand,w
  5301  1A2B  1283               	bcf	3,5	;RP0=0, select bank0
  5302  1A2C  1303               	bcf	3,6	;RP1=0, select bank0
  5303  1A2D  07A0               	addwf	___wmul@product,f
  5304  1A2E  1803               	skipnc
  5305  1A2F  0AA1               	incf	___wmul@product+1,f
  5306  1A30  0876               	movf	___wmul@multiplicand+1,w
  5307  1A31  07A1               	addwf	___wmul@product+1,f
  5308  1A32                     l408:
  5309  1A32  3001               	movlw	1
  5310  1A33                     u6605:
  5311  1A33  1003               	clrc
  5312  1A34  0DF5               	rlf	___wmul@multiplicand,f
  5313  1A35  0DF6               	rlf	___wmul@multiplicand+1,f
  5314  1A36  3EFF               	addlw	-1
  5315  1A37  1D03               	skipz
  5316  1A38  2A33               	goto	u6605
  5317  1A39                     l4039:
  5318  1A39  3001               	movlw	1
  5319  1A3A                     u6615:
  5320  1A3A  1003               	clrc
  5321  1A3B  0CF4               	rrf	___wmul@multiplier+1,f
  5322  1A3C  0CF3               	rrf	___wmul@multiplier,f
  5323  1A3D  3EFF               	addlw	-1
  5324  1A3E  1D03               	skipz
  5325  1A3F  2A3A               	goto	u6615
  5326  1A40                     l4041:
  5327  1A40  0873               	movf	___wmul@multiplier,w
  5328  1A41  0474               	iorwf	___wmul@multiplier+1,w
  5329  1A42  1D03               	btfss	3,2
  5330  1A43  2A45               	goto	u6621
  5331  1A44  2A46               	goto	u6620
  5332  1A45                     u6621:
  5333  1A45  2A26               	goto	l4035
  5334  1A46                     u6620:
  5335  1A46                     l4043:
  5336  1A46  1283               	bcf	3,5	;RP0=0, select bank0
  5337  1A47  1303               	bcf	3,6	;RP1=0, select bank0
  5338  1A48  0821               	movf	___wmul@product+1,w
  5339  1A49  00F4               	movwf	?___wmul+1
  5340  1A4A  0820               	movf	___wmul@product,w
  5341  1A4B  00F3               	movwf	?___wmul
  5342  1A4C                     l410:
  5343  1A4C  0008               	return
  5344  1A4D                     __end_of___wmul:
  5345                           
  5346                           	psect	text12
  5347  1BFC                     __ptext12:	
  5348 ;; *************** function ___llmod *****************
  5349 ;; Defined at:
  5350 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  divisor         4   13[BANK0 ] unsigned long 
  5353 ;;  dividend        4   17[BANK0 ] unsigned long 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  counter         1    5[COMMON] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  4   13[BANK0 ] unsigned long 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5365 ;;      Params:         0       8       0       0       0
  5366 ;;      Locals:         1       0       0       0       0
  5367 ;;      Temps:          1       0       0       0       0
  5368 ;;      Totals:         2       8       0       0       0
  5369 ;;Total ram usage:       10 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    1
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_sprintf
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           
  5380                           ;psect for function ___llmod
  5381  1BFC                     ___llmod:
  5382  1BFC                     l4103:	
  5383                           ;incstack = 0
  5384                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5385                           
  5386  1BFC  1283               	bcf	3,5	;RP0=0, select bank0
  5387  1BFD  1303               	bcf	3,6	;RP1=0, select bank0
  5388  1BFE  0830               	movf	___llmod@divisor+3,w
  5389  1BFF  042F               	iorwf	___llmod@divisor+2,w
  5390  1C00  042E               	iorwf	___llmod@divisor+1,w
  5391  1C01  042D               	iorwf	___llmod@divisor,w
  5392  1C02  1903               	skipnz
  5393  1C03  2C05               	goto	u6801
  5394  1C04  2C06               	goto	u6800
  5395  1C05                     u6801:
  5396  1C05  2C49               	goto	l4119
  5397  1C06                     u6800:
  5398  1C06                     l4105:
  5399  1C06  01F5               	clrf	___llmod@counter
  5400  1C07  0AF5               	incf	___llmod@counter,f
  5401  1C08  2C16               	goto	l4109
  5402  1C09                     l4107:
  5403  1C09  3001               	movlw	1
  5404  1C0A  00F4               	movwf	??___llmod
  5405  1C0B                     u6815:
  5406  1C0B  1003               	clrc
  5407  1C0C  0DAD               	rlf	___llmod@divisor,f
  5408  1C0D  0DAE               	rlf	___llmod@divisor+1,f
  5409  1C0E  0DAF               	rlf	___llmod@divisor+2,f
  5410  1C0F  0DB0               	rlf	___llmod@divisor+3,f
  5411  1C10  0BF4               	decfsz	??___llmod,f
  5412  1C11  2C0B               	goto	u6815
  5413  1C12  3001               	movlw	1
  5414  1C13  00F4               	movwf	??___llmod
  5415  1C14  0874               	movf	??___llmod,w
  5416  1C15  07F5               	addwf	___llmod@counter,f
  5417  1C16                     l4109:
  5418  1C16  1FB0               	btfss	___llmod@divisor+3,7
  5419  1C17  2C19               	goto	u6821
  5420  1C18  2C1A               	goto	u6820
  5421  1C19                     u6821:
  5422  1C19  2C09               	goto	l4107
  5423  1C1A                     u6820:
  5424  1C1A                     l4111:
  5425  1C1A  0830               	movf	___llmod@divisor+3,w
  5426  1C1B  0234               	subwf	___llmod@dividend+3,w
  5427  1C1C  1D03               	skipz
  5428  1C1D  2C28               	goto	u6835
  5429  1C1E  082F               	movf	___llmod@divisor+2,w
  5430  1C1F  0233               	subwf	___llmod@dividend+2,w
  5431  1C20  1D03               	skipz
  5432  1C21  2C28               	goto	u6835
  5433  1C22  082E               	movf	___llmod@divisor+1,w
  5434  1C23  0232               	subwf	___llmod@dividend+1,w
  5435  1C24  1D03               	skipz
  5436  1C25  2C28               	goto	u6835
  5437  1C26  082D               	movf	___llmod@divisor,w
  5438  1C27  0231               	subwf	___llmod@dividend,w
  5439  1C28                     u6835:
  5440  1C28  1C03               	skipc
  5441  1C29  2C2B               	goto	u6831
  5442  1C2A  2C2C               	goto	u6830
  5443  1C2B                     u6831:
  5444  1C2B  2C3A               	goto	l4115
  5445  1C2C                     u6830:
  5446  1C2C                     l4113:
  5447  1C2C  082D               	movf	___llmod@divisor,w
  5448  1C2D  02B1               	subwf	___llmod@dividend,f
  5449  1C2E  082E               	movf	___llmod@divisor+1,w
  5450  1C2F  1C03               	skipc
  5451  1C30  0F2E               	incfsz	___llmod@divisor+1,w
  5452  1C31  02B2               	subwf	___llmod@dividend+1,f
  5453  1C32  082F               	movf	___llmod@divisor+2,w
  5454  1C33  1C03               	skipc
  5455  1C34  0F2F               	incfsz	___llmod@divisor+2,w
  5456  1C35  02B3               	subwf	___llmod@dividend+2,f
  5457  1C36  0830               	movf	___llmod@divisor+3,w
  5458  1C37  1C03               	skipc
  5459  1C38  0F30               	incfsz	___llmod@divisor+3,w
  5460  1C39  02B4               	subwf	___llmod@dividend+3,f
  5461  1C3A                     l4115:
  5462  1C3A  3001               	movlw	1
  5463  1C3B                     u6845:
  5464  1C3B  1003               	clrc
  5465  1C3C  0CB0               	rrf	___llmod@divisor+3,f
  5466  1C3D  0CAF               	rrf	___llmod@divisor+2,f
  5467  1C3E  0CAE               	rrf	___llmod@divisor+1,f
  5468  1C3F  0CAD               	rrf	___llmod@divisor,f
  5469  1C40  3EFF               	addlw	-1
  5470  1C41  1D03               	skipz
  5471  1C42  2C3B               	goto	u6845
  5472  1C43                     l4117:
  5473  1C43  3001               	movlw	1
  5474  1C44  02F5               	subwf	___llmod@counter,f
  5475  1C45  1D03               	btfss	3,2
  5476  1C46  2C48               	goto	u6851
  5477  1C47  2C49               	goto	u6850
  5478  1C48                     u6851:
  5479  1C48  2C1A               	goto	l4111
  5480  1C49                     u6850:
  5481  1C49                     l4119:
  5482  1C49  0834               	movf	___llmod@dividend+3,w
  5483  1C4A  00B0               	movwf	?___llmod+3
  5484  1C4B  0833               	movf	___llmod@dividend+2,w
  5485  1C4C  00AF               	movwf	?___llmod+2
  5486  1C4D  0832               	movf	___llmod@dividend+1,w
  5487  1C4E  00AE               	movwf	?___llmod+1
  5488  1C4F  0831               	movf	___llmod@dividend,w
  5489  1C50  00AD               	movwf	?___llmod
  5490  1C51                     l664:
  5491  1C51  0008               	return
  5492  1C52                     __end_of___llmod:
  5493                           
  5494                           	psect	text13
  5495  1CAD                     __ptext13:	
  5496 ;; *************** function ___lldiv *****************
  5497 ;; Defined at:
  5498 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  divisor         4    0[BANK0 ] unsigned long 
  5501 ;;  dividend        4    4[BANK0 ] unsigned long 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  quotient        4    8[BANK0 ] unsigned long 
  5504 ;;  counter         1   12[BANK0 ] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  4    0[BANK0 ] unsigned long 
  5507 ;; Registers used:
  5508 ;;		wreg, status,2, status,0
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5514 ;;      Params:         0       8       0       0       0
  5515 ;;      Locals:         0       5       0       0       0
  5516 ;;      Temps:          1       0       0       0       0
  5517 ;;      Totals:         1      13       0       0       0
  5518 ;;Total ram usage:       14 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:    1
  5521 ;; This function calls:
  5522 ;;		Nothing
  5523 ;; This function is called by:
  5524 ;;		_sprintf
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           
  5529                           ;psect for function ___lldiv
  5530  1CAD                     ___lldiv:
  5531  1CAD                     l4047:	
  5532                           ;incstack = 0
  5533                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5534                           
  5535  1CAD  3000               	movlw	0
  5536  1CAE  1283               	bcf	3,5	;RP0=0, select bank0
  5537  1CAF  1303               	bcf	3,6	;RP1=0, select bank0
  5538  1CB0  00AB               	movwf	___lldiv@quotient+3
  5539  1CB1  3000               	movlw	0
  5540  1CB2  00AA               	movwf	___lldiv@quotient+2
  5541  1CB3  3000               	movlw	0
  5542  1CB4  00A9               	movwf	___lldiv@quotient+1
  5543  1CB5  3000               	movlw	0
  5544  1CB6  00A8               	movwf	___lldiv@quotient
  5545  1CB7  0823               	movf	___lldiv@divisor+3,w
  5546  1CB8  0422               	iorwf	___lldiv@divisor+2,w
  5547  1CB9  0421               	iorwf	___lldiv@divisor+1,w
  5548  1CBA  0420               	iorwf	___lldiv@divisor,w
  5549  1CBB  1903               	skipnz
  5550  1CBC  2CBE               	goto	u6631
  5551  1CBD  2CBF               	goto	u6630
  5552  1CBE                     u6631:
  5553  1CBE  2D0C               	goto	l4067
  5554  1CBF                     u6630:
  5555  1CBF                     l4049:
  5556  1CBF  01AC               	clrf	___lldiv@counter
  5557  1CC0  0AAC               	incf	___lldiv@counter,f
  5558  1CC1  2CCF               	goto	l4053
  5559  1CC2                     l4051:
  5560  1CC2  3001               	movlw	1
  5561  1CC3  00F3               	movwf	??___lldiv
  5562  1CC4                     u6645:
  5563  1CC4  1003               	clrc
  5564  1CC5  0DA0               	rlf	___lldiv@divisor,f
  5565  1CC6  0DA1               	rlf	___lldiv@divisor+1,f
  5566  1CC7  0DA2               	rlf	___lldiv@divisor+2,f
  5567  1CC8  0DA3               	rlf	___lldiv@divisor+3,f
  5568  1CC9  0BF3               	decfsz	??___lldiv,f
  5569  1CCA  2CC4               	goto	u6645
  5570  1CCB  3001               	movlw	1
  5571  1CCC  00F3               	movwf	??___lldiv
  5572  1CCD  0873               	movf	??___lldiv,w
  5573  1CCE  07AC               	addwf	___lldiv@counter,f
  5574  1CCF                     l4053:
  5575  1CCF  1FA3               	btfss	___lldiv@divisor+3,7
  5576  1CD0  2CD2               	goto	u6651
  5577  1CD1  2CD3               	goto	u6650
  5578  1CD2                     u6651:
  5579  1CD2  2CC2               	goto	l4051
  5580  1CD3                     u6650:
  5581  1CD3                     l4055:
  5582  1CD3  3001               	movlw	1
  5583  1CD4  00F3               	movwf	??___lldiv
  5584  1CD5                     u6665:
  5585  1CD5  1003               	clrc
  5586  1CD6  0DA8               	rlf	___lldiv@quotient,f
  5587  1CD7  0DA9               	rlf	___lldiv@quotient+1,f
  5588  1CD8  0DAA               	rlf	___lldiv@quotient+2,f
  5589  1CD9  0DAB               	rlf	___lldiv@quotient+3,f
  5590  1CDA  0BF3               	decfsz	??___lldiv,f
  5591  1CDB  2CD5               	goto	u6665
  5592  1CDC                     l4057:
  5593  1CDC  0823               	movf	___lldiv@divisor+3,w
  5594  1CDD  0227               	subwf	___lldiv@dividend+3,w
  5595  1CDE  1D03               	skipz
  5596  1CDF  2CEA               	goto	u6675
  5597  1CE0  0822               	movf	___lldiv@divisor+2,w
  5598  1CE1  0226               	subwf	___lldiv@dividend+2,w
  5599  1CE2  1D03               	skipz
  5600  1CE3  2CEA               	goto	u6675
  5601  1CE4  0821               	movf	___lldiv@divisor+1,w
  5602  1CE5  0225               	subwf	___lldiv@dividend+1,w
  5603  1CE6  1D03               	skipz
  5604  1CE7  2CEA               	goto	u6675
  5605  1CE8  0820               	movf	___lldiv@divisor,w
  5606  1CE9  0224               	subwf	___lldiv@dividend,w
  5607  1CEA                     u6675:
  5608  1CEA  1C03               	skipc
  5609  1CEB  2CED               	goto	u6671
  5610  1CEC  2CEE               	goto	u6670
  5611  1CED                     u6671:
  5612  1CED  2CFD               	goto	l4063
  5613  1CEE                     u6670:
  5614  1CEE                     l4059:
  5615  1CEE  0820               	movf	___lldiv@divisor,w
  5616  1CEF  02A4               	subwf	___lldiv@dividend,f
  5617  1CF0  0821               	movf	___lldiv@divisor+1,w
  5618  1CF1  1C03               	skipc
  5619  1CF2  0F21               	incfsz	___lldiv@divisor+1,w
  5620  1CF3  02A5               	subwf	___lldiv@dividend+1,f
  5621  1CF4  0822               	movf	___lldiv@divisor+2,w
  5622  1CF5  1C03               	skipc
  5623  1CF6  0F22               	incfsz	___lldiv@divisor+2,w
  5624  1CF7  02A6               	subwf	___lldiv@dividend+2,f
  5625  1CF8  0823               	movf	___lldiv@divisor+3,w
  5626  1CF9  1C03               	skipc
  5627  1CFA  0F23               	incfsz	___lldiv@divisor+3,w
  5628  1CFB  02A7               	subwf	___lldiv@dividend+3,f
  5629  1CFC                     l4061:
  5630  1CFC  1428               	bsf	___lldiv@quotient,0
  5631  1CFD                     l4063:
  5632  1CFD  3001               	movlw	1
  5633  1CFE                     u6685:
  5634  1CFE  1003               	clrc
  5635  1CFF  0CA3               	rrf	___lldiv@divisor+3,f
  5636  1D00  0CA2               	rrf	___lldiv@divisor+2,f
  5637  1D01  0CA1               	rrf	___lldiv@divisor+1,f
  5638  1D02  0CA0               	rrf	___lldiv@divisor,f
  5639  1D03  3EFF               	addlw	-1
  5640  1D04  1D03               	skipz
  5641  1D05  2CFE               	goto	u6685
  5642  1D06                     l4065:
  5643  1D06  3001               	movlw	1
  5644  1D07  02AC               	subwf	___lldiv@counter,f
  5645  1D08  1D03               	btfss	3,2
  5646  1D09  2D0B               	goto	u6691
  5647  1D0A  2D0C               	goto	u6690
  5648  1D0B                     u6691:
  5649  1D0B  2CD3               	goto	l4055
  5650  1D0C                     u6690:
  5651  1D0C                     l4067:
  5652  1D0C  082B               	movf	___lldiv@quotient+3,w
  5653  1D0D  00A3               	movwf	?___lldiv+3
  5654  1D0E  082A               	movf	___lldiv@quotient+2,w
  5655  1D0F  00A2               	movwf	?___lldiv+2
  5656  1D10  0829               	movf	___lldiv@quotient+1,w
  5657  1D11  00A1               	movwf	?___lldiv+1
  5658  1D12  0828               	movf	___lldiv@quotient,w
  5659  1D13  00A0               	movwf	?___lldiv
  5660  1D14                     l444:
  5661  1D14  0008               	return
  5662  1D15                     __end_of___lldiv:
  5663                           
  5664                           	psect	text14
  5665  076A                     __ptext14:	
  5666 ;; *************** function ___fltol *****************
  5667 ;; Defined at:
  5668 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  f1              4   56[BANK0 ] unsigned long 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  exp1            1   66[BANK0 ] unsigned char 
  5673 ;;  sign1           1   65[BANK0 ] unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  4   56[BANK0 ] long 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5683 ;;      Params:         0       4       0       0       0
  5684 ;;      Locals:         0       2       0       0       0
  5685 ;;      Temps:          0       5       0       0       0
  5686 ;;      Totals:         0      11       0       0       0
  5687 ;;Total ram usage:       11 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    1
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_sprintf
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           
  5698                           ;psect for function ___fltol
  5699  076A                     ___fltol:
  5700  076A                     l3113:	
  5701                           ;incstack = 0
  5702                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5703                           
  5704  076A  1003               	clrc
  5705  076B  1283               	bcf	3,5	;RP0=0, select bank0
  5706  076C  1303               	bcf	3,6	;RP1=0, select bank0
  5707  076D  0D5A               	rlf	___fltol@f1+2,w
  5708  076E  0D5B               	rlf	___fltol@f1+3,w
  5709  076F  00DC               	movwf	??___fltol
  5710  0770  085C               	movf	??___fltol,w
  5711  0771  00E2               	movwf	___fltol@exp1
  5712  0772  0862               	movf	___fltol@exp1,w
  5713  0773  1D03               	btfss	3,2
  5714  0774  2F76               	goto	u4851
  5715  0775  2F77               	goto	u4850
  5716  0776                     u4851:
  5717  0776  2F80               	goto	l3119
  5718  0777                     u4850:
  5719  0777                     l3115:
  5720  0777  3000               	movlw	0
  5721  0778  00DB               	movwf	?___fltol+3
  5722  0779  3000               	movlw	0
  5723  077A  00DA               	movwf	?___fltol+2
  5724  077B  3000               	movlw	0
  5725  077C  00D9               	movwf	?___fltol+1
  5726  077D  3000               	movlw	0
  5727  077E  00D8               	movwf	?___fltol
  5728  077F  2FE5               	goto	l611
  5729  0780                     l3119:
  5730  0780  0858               	movf	___fltol@f1,w
  5731  0781  00DC               	movwf	??___fltol
  5732  0782  0859               	movf	___fltol@f1+1,w
  5733  0783  00DD               	movwf	??___fltol+1
  5734  0784  085A               	movf	___fltol@f1+2,w
  5735  0785  00DE               	movwf	??___fltol+2
  5736  0786  085B               	movf	___fltol@f1+3,w
  5737  0787  00DF               	movwf	??___fltol+3
  5738  0788  301F               	movlw	31
  5739  0789                     u4865:
  5740  0789  1003               	clrc
  5741  078A  0CDF               	rrf	??___fltol+3,f
  5742  078B  0CDE               	rrf	??___fltol+2,f
  5743  078C  0CDD               	rrf	??___fltol+1,f
  5744  078D  0CDC               	rrf	??___fltol,f
  5745  078E                     u4860:
  5746  078E  3EFF               	addlw	-1
  5747  078F  1D03               	skipz
  5748  0790  2F89               	goto	u4865
  5749  0791  085C               	movf	??___fltol,w
  5750  0792  00E0               	movwf	??___fltol+4
  5751  0793  0860               	movf	??___fltol+4,w
  5752  0794  00E1               	movwf	___fltol@sign1
  5753  0795                     l3121:
  5754  0795  17DA               	bsf	___fltol@f1+2,7
  5755  0796                     l3123:
  5756  0796  30FF               	movlw	255
  5757  0797  05D8               	andwf	___fltol@f1,f
  5758  0798  30FF               	movlw	255
  5759  0799  05D9               	andwf	___fltol@f1+1,f
  5760  079A  30FF               	movlw	255
  5761  079B  05DA               	andwf	___fltol@f1+2,f
  5762  079C  3000               	movlw	0
  5763  079D  05DB               	andwf	___fltol@f1+3,f
  5764  079E                     l3125:
  5765  079E  3096               	movlw	150
  5766  079F  02E2               	subwf	___fltol@exp1,f
  5767  07A0                     l3127:
  5768  07A0  1FE2               	btfss	___fltol@exp1,7
  5769  07A1  2FA3               	goto	u4871
  5770  07A2  2FA4               	goto	u4870
  5771  07A3                     u4871:
  5772  07A3  2FBE               	goto	l3137
  5773  07A4                     u4870:
  5774  07A4                     l3129:
  5775  07A4  0862               	movf	___fltol@exp1,w
  5776  07A5  3A80               	xorlw	128
  5777  07A6  3E97               	addlw	151
  5778  07A7  1803               	skipnc
  5779  07A8  2FAA               	goto	u4881
  5780  07A9  2FAB               	goto	u4880
  5781  07AA                     u4881:
  5782  07AA  2FAC               	goto	l3135
  5783  07AB                     u4880:
  5784  07AB  2F77               	goto	l3115
  5785  07AC                     l3135:
  5786  07AC  3001               	movlw	1
  5787  07AD                     u4895:
  5788  07AD  1003               	clrc
  5789  07AE  0CDB               	rrf	___fltol@f1+3,f
  5790  07AF  0CDA               	rrf	___fltol@f1+2,f
  5791  07B0  0CD9               	rrf	___fltol@f1+1,f
  5792  07B1  0CD8               	rrf	___fltol@f1,f
  5793  07B2  3EFF               	addlw	-1
  5794  07B3  1D03               	skipz
  5795  07B4  2FAD               	goto	u4895
  5796  07B5  3001               	movlw	1
  5797  07B6  00DC               	movwf	??___fltol
  5798  07B7  085C               	movf	??___fltol,w
  5799  07B8  07E2               	addwf	___fltol@exp1,f
  5800  07B9  1D03               	btfss	3,2
  5801  07BA  2FBC               	goto	u4901
  5802  07BB  2FBD               	goto	u4900
  5803  07BC                     u4901:
  5804  07BC  2FAC               	goto	l3135
  5805  07BD                     u4900:
  5806  07BD  2FD5               	goto	l3145
  5807  07BE                     l3137:
  5808  07BE  3020               	movlw	32
  5809  07BF  0262               	subwf	___fltol@exp1,w
  5810  07C0  1C03               	skipc
  5811  07C1  2FC3               	goto	u4911
  5812  07C2  2FC4               	goto	u4910
  5813  07C3                     u4911:
  5814  07C3  2FD0               	goto	l618
  5815  07C4                     u4910:
  5816  07C4  2F77               	goto	l3115
  5817  07C5                     l3143:
  5818  07C5  3001               	movlw	1
  5819  07C6  00DC               	movwf	??___fltol
  5820  07C7                     u4925:
  5821  07C7  1003               	clrc
  5822  07C8  0DD8               	rlf	___fltol@f1,f
  5823  07C9  0DD9               	rlf	___fltol@f1+1,f
  5824  07CA  0DDA               	rlf	___fltol@f1+2,f
  5825  07CB  0DDB               	rlf	___fltol@f1+3,f
  5826  07CC  0BDC               	decfsz	??___fltol,f
  5827  07CD  2FC7               	goto	u4925
  5828  07CE  3001               	movlw	1
  5829  07CF  02E2               	subwf	___fltol@exp1,f
  5830  07D0                     l618:
  5831  07D0  0862               	movf	___fltol@exp1,w
  5832  07D1  1D03               	btfss	3,2
  5833  07D2  2FD4               	goto	u4931
  5834  07D3  2FD5               	goto	u4930
  5835  07D4                     u4931:
  5836  07D4  2FC5               	goto	l3143
  5837  07D5                     u4930:
  5838  07D5                     l3145:
  5839  07D5  0861               	movf	___fltol@sign1,w
  5840  07D6  1903               	btfsc	3,2
  5841  07D7  2FD9               	goto	u4941
  5842  07D8  2FDA               	goto	u4940
  5843  07D9                     u4941:
  5844  07D9  2FE5               	goto	l621
  5845  07DA                     u4940:
  5846  07DA                     l3147:
  5847  07DA  09D8               	comf	___fltol@f1,f
  5848  07DB  09D9               	comf	___fltol@f1+1,f
  5849  07DC  09DA               	comf	___fltol@f1+2,f
  5850  07DD  09DB               	comf	___fltol@f1+3,f
  5851  07DE  0AD8               	incf	___fltol@f1,f
  5852  07DF  1903               	skipnz
  5853  07E0  0AD9               	incf	___fltol@f1+1,f
  5854  07E1  1903               	skipnz
  5855  07E2  0ADA               	incf	___fltol@f1+2,f
  5856  07E3  1903               	skipnz
  5857  07E4  0ADB               	incf	___fltol@f1+3,f
  5858  07E5                     l621:
  5859  07E5                     l611:
  5860  07E5  0008               	return
  5861  07E6                     __end_of___fltol:
  5862                           
  5863                           	psect	text15
  5864  1BAC                     __ptext15:	
  5865 ;; *************** function ___flsub *****************
  5866 ;; Defined at:
  5867 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  a               4    0[BANK1 ] long 
  5870 ;;  b               4    4[BANK1 ] long 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;		None
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  4    0[BANK1 ] long 
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5882 ;;      Params:         0       0       8       0       0
  5883 ;;      Locals:         0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0
  5885 ;;      Totals:         0       0       8       0       0
  5886 ;;Total ram usage:        8 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    2
  5889 ;; This function calls:
  5890 ;;		___fladd
  5891 ;; This function is called by:
  5892 ;;		_sprintf
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           
  5897                           ;psect for function ___flsub
  5898  1BAC                     ___flsub:
  5899  1BAC                     l3169:	
  5900                           ;incstack = 0
  5901                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5902                           
  5903  1BAC  3080               	movlw	128
  5904  1BAD  1683               	bsf	3,5	;RP0=1, select bank1
  5905  1BAE  1303               	bcf	3,6	;RP1=0, select bank1
  5906  1BAF  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5907  1BB0                     l3171:
  5908  1BB0  0827               	movf	(___flsub@b+3)^(0+128),w
  5909  1BB1  1283               	bcf	3,5	;RP0=0, select bank0
  5910  1BB2  1303               	bcf	3,6	;RP1=0, select bank0
  5911  1BB3  00DC               	movwf	___fladd@b+3
  5912  1BB4  1683               	bsf	3,5	;RP0=1, select bank1
  5913  1BB5  1303               	bcf	3,6	;RP1=0, select bank1
  5914  1BB6  0826               	movf	(___flsub@b+2)^(0+128),w
  5915  1BB7  1283               	bcf	3,5	;RP0=0, select bank0
  5916  1BB8  1303               	bcf	3,6	;RP1=0, select bank0
  5917  1BB9  00DB               	movwf	___fladd@b+2
  5918  1BBA  1683               	bsf	3,5	;RP0=1, select bank1
  5919  1BBB  1303               	bcf	3,6	;RP1=0, select bank1
  5920  1BBC  0825               	movf	(___flsub@b+1)^(0+128),w
  5921  1BBD  1283               	bcf	3,5	;RP0=0, select bank0
  5922  1BBE  1303               	bcf	3,6	;RP1=0, select bank0
  5923  1BBF  00DA               	movwf	___fladd@b+1
  5924  1BC0  1683               	bsf	3,5	;RP0=1, select bank1
  5925  1BC1  1303               	bcf	3,6	;RP1=0, select bank1
  5926  1BC2  0824               	movf	___flsub@b^(0+128),w
  5927  1BC3  1283               	bcf	3,5	;RP0=0, select bank0
  5928  1BC4  1303               	bcf	3,6	;RP1=0, select bank0
  5929  1BC5  00D9               	movwf	___fladd@b
  5930  1BC6  1683               	bsf	3,5	;RP0=1, select bank1
  5931  1BC7  1303               	bcf	3,6	;RP1=0, select bank1
  5932  1BC8  0823               	movf	(___flsub@a+3)^(0+128),w
  5933  1BC9  1283               	bcf	3,5	;RP0=0, select bank0
  5934  1BCA  1303               	bcf	3,6	;RP1=0, select bank0
  5935  1BCB  00E0               	movwf	___fladd@a+3
  5936  1BCC  1683               	bsf	3,5	;RP0=1, select bank1
  5937  1BCD  1303               	bcf	3,6	;RP1=0, select bank1
  5938  1BCE  0822               	movf	(___flsub@a+2)^(0+128),w
  5939  1BCF  1283               	bcf	3,5	;RP0=0, select bank0
  5940  1BD0  1303               	bcf	3,6	;RP1=0, select bank0
  5941  1BD1  00DF               	movwf	___fladd@a+2
  5942  1BD2  1683               	bsf	3,5	;RP0=1, select bank1
  5943  1BD3  1303               	bcf	3,6	;RP1=0, select bank1
  5944  1BD4  0821               	movf	(___flsub@a+1)^(0+128),w
  5945  1BD5  1283               	bcf	3,5	;RP0=0, select bank0
  5946  1BD6  1303               	bcf	3,6	;RP1=0, select bank0
  5947  1BD7  00DE               	movwf	___fladd@a+1
  5948  1BD8  1683               	bsf	3,5	;RP0=1, select bank1
  5949  1BD9  1303               	bcf	3,6	;RP1=0, select bank1
  5950  1BDA  0820               	movf	___flsub@a^(0+128),w
  5951  1BDB  1283               	bcf	3,5	;RP0=0, select bank0
  5952  1BDC  1303               	bcf	3,6	;RP1=0, select bank0
  5953  1BDD  00DD               	movwf	___fladd@a
  5954  1BDE  160A  118A  226E  160A  158A  	fcall	___fladd
  5955  1BE3  1283               	bcf	3,5	;RP0=0, select bank0
  5956  1BE4  1303               	bcf	3,6	;RP1=0, select bank0
  5957  1BE5  085C               	movf	?___fladd+3,w
  5958  1BE6  1683               	bsf	3,5	;RP0=1, select bank1
  5959  1BE7  1303               	bcf	3,6	;RP1=0, select bank1
  5960  1BE8  00A3               	movwf	(?___flsub+3)^(0+128)
  5961  1BE9  1283               	bcf	3,5	;RP0=0, select bank0
  5962  1BEA  1303               	bcf	3,6	;RP1=0, select bank0
  5963  1BEB  085B               	movf	?___fladd+2,w
  5964  1BEC  1683               	bsf	3,5	;RP0=1, select bank1
  5965  1BED  1303               	bcf	3,6	;RP1=0, select bank1
  5966  1BEE  00A2               	movwf	(?___flsub+2)^(0+128)
  5967  1BEF  1283               	bcf	3,5	;RP0=0, select bank0
  5968  1BF0  1303               	bcf	3,6	;RP1=0, select bank0
  5969  1BF1  085A               	movf	?___fladd+1,w
  5970  1BF2  1683               	bsf	3,5	;RP0=1, select bank1
  5971  1BF3  1303               	bcf	3,6	;RP1=0, select bank1
  5972  1BF4  00A1               	movwf	(?___flsub+1)^(0+128)
  5973  1BF5  1283               	bcf	3,5	;RP0=0, select bank0
  5974  1BF6  1303               	bcf	3,6	;RP1=0, select bank0
  5975  1BF7  0859               	movf	?___fladd,w
  5976  1BF8  1683               	bsf	3,5	;RP0=1, select bank1
  5977  1BF9  1303               	bcf	3,6	;RP1=0, select bank1
  5978  1BFA  00A0               	movwf	?___flsub^(0+128)
  5979  1BFB                     l781:
  5980  1BFB  0008               	return
  5981  1BFC                     __end_of___flsub:
  5982                           
  5983                           	psect	text16
  5984  126E                     __ptext16:	
  5985 ;; *************** function ___fladd *****************
  5986 ;; Defined at:
  5987 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  b               4   57[BANK0 ] long 
  5990 ;;  a               4   61[BANK0 ] long 
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;  grs             1   76[BANK0 ] unsigned char 
  5993 ;;  bexp            1   75[BANK0 ] unsigned char 
  5994 ;;  aexp            1   74[BANK0 ] unsigned char 
  5995 ;;  signs           1   73[BANK0 ] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  4   57[BANK0 ] unsigned char 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0, btemp+1
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6005 ;;      Params:         0       8       0       0       0
  6006 ;;      Locals:         0       4       0       0       0
  6007 ;;      Temps:          0       8       0       0       0
  6008 ;;      Totals:         0      20       0       0       0
  6009 ;;Total ram usage:       20 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    1
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		_sprintf
  6016 ;;		___flsub
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           
  6021                           ;psect for function ___fladd
  6022  126E                     ___fladd:
  6023  126E                     l2503:	
  6024                           ;incstack = 0
  6025                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6026                           
  6027  126E  1283               	bcf	3,5	;RP0=0, select bank0
  6028  126F  1303               	bcf	3,6	;RP1=0, select bank0
  6029  1270  085C               	movf	___fladd@b+3,w
  6030  1271  3980               	andlw	128
  6031  1272  00E1               	movwf	??___fladd
  6032  1273  0861               	movf	??___fladd,w
  6033  1274  00E9               	movwf	___fladd@signs
  6034  1275                     l2505:
  6035  1275  085C               	movf	___fladd@b+3,w
  6036  1276  00E1               	movwf	??___fladd
  6037  1277  0761               	addwf	??___fladd,w
  6038  1278  00E2               	movwf	??___fladd+1
  6039  1279  0862               	movf	??___fladd+1,w
  6040  127A  00EB               	movwf	___fladd@bexp
  6041  127B                     l2507:
  6042  127B  1FDB               	btfss	___fladd@b+2,7
  6043  127C  2A7E               	goto	u3261
  6044  127D  2A7F               	goto	u3260
  6045  127E                     u3261:
  6046  127E  2A80               	goto	l2511
  6047  127F                     u3260:
  6048  127F                     l2509:
  6049  127F  146B               	bsf	___fladd@bexp,0
  6050  1280                     l2511:
  6051  1280  086B               	movf	___fladd@bexp,w
  6052  1281  1903               	btfsc	3,2
  6053  1282  2A84               	goto	u3271
  6054  1283  2A85               	goto	u3270
  6055  1284                     u3271:
  6056  1284  2A95               	goto	l2521
  6057  1285                     u3270:
  6058  1285                     l2513:
  6059  1285  0A6B               	incf	___fladd@bexp,w
  6060  1286  1D03               	btfss	3,2
  6061  1287  2A89               	goto	u3281
  6062  1288  2A8A               	goto	u3280
  6063  1289                     u3281:
  6064  1289  2A92               	goto	l2517
  6065  128A                     u3280:
  6066  128A                     l2515:
  6067  128A  3000               	movlw	0
  6068  128B  00DC               	movwf	___fladd@b+3
  6069  128C  3000               	movlw	0
  6070  128D  00DB               	movwf	___fladd@b+2
  6071  128E  3000               	movlw	0
  6072  128F  00DA               	movwf	___fladd@b+1
  6073  1290  3000               	movlw	0
  6074  1291  00D9               	movwf	___fladd@b
  6075  1292                     l2517:
  6076  1292  17DB               	bsf	___fladd@b+2,7
  6077  1293                     l2519:
  6078  1293  01DC               	clrf	___fladd@b+3
  6079  1294  2A9D               	goto	l2523
  6080  1295                     l2521:
  6081  1295  3000               	movlw	0
  6082  1296  00DC               	movwf	___fladd@b+3
  6083  1297  3000               	movlw	0
  6084  1298  00DB               	movwf	___fladd@b+2
  6085  1299  3000               	movlw	0
  6086  129A  00DA               	movwf	___fladd@b+1
  6087  129B  3000               	movlw	0
  6088  129C  00D9               	movwf	___fladd@b
  6089  129D                     l2523:
  6090  129D  0860               	movf	___fladd@a+3,w
  6091  129E  3980               	andlw	128
  6092  129F  00E1               	movwf	??___fladd
  6093  12A0  0861               	movf	??___fladd,w
  6094  12A1  00EA               	movwf	___fladd@aexp
  6095  12A2                     l2525:
  6096  12A2  086A               	movf	___fladd@aexp,w
  6097  12A3  0669               	xorwf	___fladd@signs,w
  6098  12A4  1903               	skipnz
  6099  12A5  2AA7               	goto	u3291
  6100  12A6  2AA8               	goto	u3290
  6101  12A7                     u3291:
  6102  12A7  2AA9               	goto	l2529
  6103  12A8                     u3290:
  6104  12A8                     l2527:
  6105  12A8  1769               	bsf	___fladd@signs,6
  6106  12A9                     l2529:
  6107  12A9  0860               	movf	___fladd@a+3,w
  6108  12AA  00E1               	movwf	??___fladd
  6109  12AB  0761               	addwf	??___fladd,w
  6110  12AC  00E2               	movwf	??___fladd+1
  6111  12AD  0862               	movf	??___fladd+1,w
  6112  12AE  00EA               	movwf	___fladd@aexp
  6113  12AF                     l2531:
  6114  12AF  1FDF               	btfss	___fladd@a+2,7
  6115  12B0  2AB2               	goto	u3301
  6116  12B1  2AB3               	goto	u3300
  6117  12B2                     u3301:
  6118  12B2  2AB4               	goto	l2535
  6119  12B3                     u3300:
  6120  12B3                     l2533:
  6121  12B3  146A               	bsf	___fladd@aexp,0
  6122  12B4                     l2535:
  6123  12B4  086A               	movf	___fladd@aexp,w
  6124  12B5  1903               	btfsc	3,2
  6125  12B6  2AB8               	goto	u3311
  6126  12B7  2AB9               	goto	u3310
  6127  12B8                     u3311:
  6128  12B8  2AC9               	goto	l2545
  6129  12B9                     u3310:
  6130  12B9                     l2537:
  6131  12B9  0A6A               	incf	___fladd@aexp,w
  6132  12BA  1D03               	btfss	3,2
  6133  12BB  2ABD               	goto	u3321
  6134  12BC  2ABE               	goto	u3320
  6135  12BD                     u3321:
  6136  12BD  2AC6               	goto	l2541
  6137  12BE                     u3320:
  6138  12BE                     l2539:
  6139  12BE  3000               	movlw	0
  6140  12BF  00E0               	movwf	___fladd@a+3
  6141  12C0  3000               	movlw	0
  6142  12C1  00DF               	movwf	___fladd@a+2
  6143  12C2  3000               	movlw	0
  6144  12C3  00DE               	movwf	___fladd@a+1
  6145  12C4  3000               	movlw	0
  6146  12C5  00DD               	movwf	___fladd@a
  6147  12C6                     l2541:
  6148  12C6  17DF               	bsf	___fladd@a+2,7
  6149  12C7                     l2543:
  6150  12C7  01E0               	clrf	___fladd@a+3
  6151  12C8  2AD1               	goto	l735
  6152  12C9                     l2545:
  6153  12C9  3000               	movlw	0
  6154  12CA  00E0               	movwf	___fladd@a+3
  6155  12CB  3000               	movlw	0
  6156  12CC  00DF               	movwf	___fladd@a+2
  6157  12CD  3000               	movlw	0
  6158  12CE  00DE               	movwf	___fladd@a+1
  6159  12CF  3000               	movlw	0
  6160  12D0  00DD               	movwf	___fladd@a
  6161  12D1                     l735:
  6162  12D1  086B               	movf	___fladd@bexp,w
  6163  12D2  026A               	subwf	___fladd@aexp,w
  6164  12D3  1803               	skipnc
  6165  12D4  2AD6               	goto	u3331
  6166  12D5  2AD7               	goto	u3330
  6167  12D6                     u3331:
  6168  12D6  2B1B               	goto	l2581
  6169  12D7                     u3330:
  6170  12D7                     l2547:
  6171  12D7  1F69               	btfss	___fladd@signs,6
  6172  12D8  2ADA               	goto	u3341
  6173  12D9  2ADB               	goto	u3340
  6174  12DA                     u3341:
  6175  12DA  2ADF               	goto	l2551
  6176  12DB                     u3340:
  6177  12DB                     l2549:
  6178  12DB  3080               	movlw	128
  6179  12DC  00E1               	movwf	??___fladd
  6180  12DD  0861               	movf	??___fladd,w
  6181  12DE  06E9               	xorwf	___fladd@signs,f
  6182  12DF                     l2551:
  6183  12DF  086B               	movf	___fladd@bexp,w
  6184  12E0  00E1               	movwf	??___fladd
  6185  12E1  0861               	movf	??___fladd,w
  6186  12E2  00EC               	movwf	___fladd@grs
  6187  12E3                     l2553:
  6188  12E3  086A               	movf	___fladd@aexp,w
  6189  12E4  00E1               	movwf	??___fladd
  6190  12E5  0861               	movf	??___fladd,w
  6191  12E6  00EB               	movwf	___fladd@bexp
  6192  12E7                     l2555:
  6193  12E7  086C               	movf	___fladd@grs,w
  6194  12E8  00E1               	movwf	??___fladd
  6195  12E9  0861               	movf	??___fladd,w
  6196  12EA  00EA               	movwf	___fladd@aexp
  6197  12EB                     l2557:
  6198  12EB  0859               	movf	___fladd@b,w
  6199  12EC  00E1               	movwf	??___fladd
  6200  12ED  0861               	movf	??___fladd,w
  6201  12EE  00EC               	movwf	___fladd@grs
  6202  12EF                     l2559:
  6203  12EF  085D               	movf	___fladd@a,w
  6204  12F0  00E1               	movwf	??___fladd
  6205  12F1  0861               	movf	??___fladd,w
  6206  12F2  00D9               	movwf	___fladd@b
  6207  12F3                     l2561:
  6208  12F3  086C               	movf	___fladd@grs,w
  6209  12F4  00E1               	movwf	??___fladd
  6210  12F5  0861               	movf	??___fladd,w
  6211  12F6  00DD               	movwf	___fladd@a
  6212  12F7                     l2563:
  6213  12F7  085A               	movf	___fladd@b+1,w
  6214  12F8  00E1               	movwf	??___fladd
  6215  12F9  0861               	movf	??___fladd,w
  6216  12FA  00EC               	movwf	___fladd@grs
  6217  12FB                     l2565:
  6218  12FB  085E               	movf	___fladd@a+1,w
  6219  12FC  00E1               	movwf	??___fladd
  6220  12FD  0861               	movf	??___fladd,w
  6221  12FE  00DA               	movwf	___fladd@b+1
  6222  12FF                     l2567:
  6223  12FF  086C               	movf	___fladd@grs,w
  6224  1300  00E1               	movwf	??___fladd
  6225  1301  0861               	movf	??___fladd,w
  6226  1302  00DE               	movwf	___fladd@a+1
  6227  1303                     l2569:
  6228  1303  085B               	movf	___fladd@b+2,w
  6229  1304  00E1               	movwf	??___fladd
  6230  1305  0861               	movf	??___fladd,w
  6231  1306  00EC               	movwf	___fladd@grs
  6232  1307                     l2571:
  6233  1307  085F               	movf	___fladd@a+2,w
  6234  1308  00E1               	movwf	??___fladd
  6235  1309  0861               	movf	??___fladd,w
  6236  130A  00DB               	movwf	___fladd@b+2
  6237  130B                     l2573:
  6238  130B  086C               	movf	___fladd@grs,w
  6239  130C  00E1               	movwf	??___fladd
  6240  130D  0861               	movf	??___fladd,w
  6241  130E  00DF               	movwf	___fladd@a+2
  6242  130F                     l2575:
  6243  130F  085C               	movf	___fladd@b+3,w
  6244  1310  00E1               	movwf	??___fladd
  6245  1311  0861               	movf	??___fladd,w
  6246  1312  00EC               	movwf	___fladd@grs
  6247  1313                     l2577:
  6248  1313  0860               	movf	___fladd@a+3,w
  6249  1314  00E1               	movwf	??___fladd
  6250  1315  0861               	movf	??___fladd,w
  6251  1316  00DC               	movwf	___fladd@b+3
  6252  1317                     l2579:
  6253  1317  086C               	movf	___fladd@grs,w
  6254  1318  00E1               	movwf	??___fladd
  6255  1319  0861               	movf	??___fladd,w
  6256  131A  00E0               	movwf	___fladd@a+3
  6257  131B                     l2581:
  6258  131B  01EC               	clrf	___fladd@grs
  6259  131C                     l2583:
  6260  131C  086A               	movf	___fladd@aexp,w
  6261  131D  00E1               	movwf	??___fladd
  6262  131E  01E2               	clrf	??___fladd+1
  6263  131F  0862               	movf	??___fladd+1,w
  6264  1320  00E4               	movwf	??___fladd+3
  6265  1321  086B               	movf	___fladd@bexp,w
  6266  1322  0261               	subwf	??___fladd,w
  6267  1323  00E3               	movwf	??___fladd+2
  6268  1324  1C03               	skipc
  6269  1325  03E4               	decf	??___fladd+3,f
  6270  1326  0864               	movf	??___fladd+3,w
  6271  1327  3A80               	xorlw	128
  6272  1328  00FF               	movwf	btemp+1
  6273  1329  3080               	movlw	128
  6274  132A  027F               	subwf	btemp+1,w
  6275  132B  1D03               	skipz
  6276  132C  2B2F               	goto	u3355
  6277  132D  301A               	movlw	26
  6278  132E  0263               	subwf	??___fladd+2,w
  6279  132F                     u3355:
  6280  132F  1C03               	skipc
  6281  1330  2B32               	goto	u3351
  6282  1331  2B33               	goto	u3350
  6283  1332                     u3351:
  6284  1332  2B70               	goto	l2599
  6285  1333                     u3350:
  6286  1333                     l2585:
  6287  1333  1283               	bcf	3,5	;RP0=0, select bank0
  6288  1334  1303               	bcf	3,6	;RP1=0, select bank0
  6289  1335  085C               	movf	___fladd@b+3,w
  6290  1336  045B               	iorwf	___fladd@b+2,w
  6291  1337  045A               	iorwf	___fladd@b+1,w
  6292  1338  0459               	iorwf	___fladd@b,w
  6293  1339  1D03               	skipz
  6294  133A  2B3C               	goto	u3361
  6295  133B  2B3E               	goto	u3360
  6296  133C                     u3361:
  6297  133C  3001               	movlw	1
  6298  133D  2B3F               	goto	u3370
  6299  133E                     u3360:
  6300  133E  3000               	movlw	0
  6301  133F                     u3370:
  6302  133F  00E1               	movwf	??___fladd
  6303  1340  0861               	movf	??___fladd,w
  6304  1341  00EC               	movwf	___fladd@grs
  6305  1342  3000               	movlw	0
  6306  1343  00DC               	movwf	___fladd@b+3
  6307  1344  3000               	movlw	0
  6308  1345  00DB               	movwf	___fladd@b+2
  6309  1346  3000               	movlw	0
  6310  1347  00DA               	movwf	___fladd@b+1
  6311  1348  3000               	movlw	0
  6312  1349  00D9               	movwf	___fladd@b
  6313  134A  086A               	movf	___fladd@aexp,w
  6314  134B  00E1               	movwf	??___fladd
  6315  134C  0861               	movf	??___fladd,w
  6316  134D  00EB               	movwf	___fladd@bexp
  6317  134E  2B78               	goto	l739
  6318  134F                     l741:
  6319  134F  1C6C               	btfss	___fladd@grs,0
  6320  1350  2B52               	goto	u3381
  6321  1351  2B53               	goto	u3380
  6322  1352                     u3381:
  6323  1352  2B5C               	goto	l2589
  6324  1353                     u3380:
  6325  1353                     l2587:
  6326  1353  086C               	movf	___fladd@grs,w
  6327  1354  00E1               	movwf	??___fladd
  6328  1355  1003               	clrc
  6329  1356  0C61               	rrf	??___fladd,w
  6330  1357  3801               	iorlw	1
  6331  1358  00E2               	movwf	??___fladd+1
  6332  1359  0862               	movf	??___fladd+1,w
  6333  135A  00EC               	movwf	___fladd@grs
  6334  135B  2B5E               	goto	l2591
  6335  135C                     l2589:
  6336  135C  1003               	clrc
  6337  135D  0CEC               	rrf	___fladd@grs,f
  6338  135E                     l2591:
  6339  135E  1C59               	btfss	___fladd@b,0
  6340  135F  2B61               	goto	u3391
  6341  1360  2B62               	goto	u3390
  6342  1361                     u3391:
  6343  1361  2B63               	goto	l2595
  6344  1362                     u3390:
  6345  1362                     l2593:
  6346  1362  17EC               	bsf	___fladd@grs,7
  6347  1363                     l2595:
  6348  1363  3001               	movlw	1
  6349  1364  00E1               	movwf	??___fladd
  6350  1365                     u3405:
  6351  1365  0D5C               	rlf	___fladd@b+3,w
  6352  1366  0CDC               	rrf	___fladd@b+3,f
  6353  1367  0CDB               	rrf	___fladd@b+2,f
  6354  1368  0CDA               	rrf	___fladd@b+1,f
  6355  1369  0CD9               	rrf	___fladd@b,f
  6356  136A  0BE1               	decfsz	??___fladd& (0+127),f
  6357  136B  2B65               	goto	u3405
  6358  136C                     l2597:
  6359  136C  3001               	movlw	1
  6360  136D  00E1               	movwf	??___fladd
  6361  136E  0861               	movf	??___fladd,w
  6362  136F  07EB               	addwf	___fladd@bexp,f
  6363  1370                     l2599:
  6364  1370  1283               	bcf	3,5	;RP0=0, select bank0
  6365  1371  1303               	bcf	3,6	;RP1=0, select bank0
  6366  1372  086A               	movf	___fladd@aexp,w
  6367  1373  026B               	subwf	___fladd@bexp,w
  6368  1374  1C03               	skipc
  6369  1375  2B77               	goto	u3411
  6370  1376  2B78               	goto	u3410
  6371  1377                     u3411:
  6372  1377  2B4F               	goto	l741
  6373  1378                     u3410:
  6374  1378                     l739:
  6375  1378  1B69               	btfsc	___fladd@signs,6
  6376  1379  2B7B               	goto	u3421
  6377  137A  2B7C               	goto	u3420
  6378  137B                     u3421:
  6379  137B  2BC7               	goto	l2625
  6380  137C                     u3420:
  6381  137C                     l2601:
  6382  137C  086B               	movf	___fladd@bexp,w
  6383  137D  1D03               	btfss	3,2
  6384  137E  2B80               	goto	u3431
  6385  137F  2B81               	goto	u3430
  6386  1380                     u3431:
  6387  1380  2B8A               	goto	l2607
  6388  1381                     u3430:
  6389  1381                     l2603:
  6390  1381  3000               	movlw	0
  6391  1382  00DC               	movwf	?___fladd+3
  6392  1383  3000               	movlw	0
  6393  1384  00DB               	movwf	?___fladd+2
  6394  1385  3000               	movlw	0
  6395  1386  00DA               	movwf	?___fladd+1
  6396  1387  3000               	movlw	0
  6397  1388  00D9               	movwf	?___fladd
  6398  1389  2CF5               	goto	l748
  6399  138A                     l2607:
  6400  138A  085D               	movf	___fladd@a,w
  6401  138B  07D9               	addwf	___fladd@b,f
  6402  138C  085E               	movf	___fladd@a+1,w
  6403  138D  1103               	clrz
  6404  138E  1803               	skipnc
  6405  138F  3E01               	addlw	1
  6406  1390  1903               	skipnz
  6407  1391  2B93               	goto	u3441
  6408  1392  07DA               	addwf	___fladd@b+1,f
  6409  1393                     u3441:
  6410  1393  085F               	movf	___fladd@a+2,w
  6411  1394  1103               	clrz
  6412  1395  1803               	skipnc
  6413  1396  3E01               	addlw	1
  6414  1397  1903               	skipnz
  6415  1398  2B9A               	goto	u3442
  6416  1399  07DB               	addwf	___fladd@b+2,f
  6417  139A                     u3442:
  6418  139A  0860               	movf	___fladd@a+3,w
  6419  139B  1103               	clrz
  6420  139C  1803               	skipnc
  6421  139D  3E01               	addlw	1
  6422  139E  1903               	skipnz
  6423  139F  2BA1               	goto	u3443
  6424  13A0  07DC               	addwf	___fladd@b+3,f
  6425  13A1                     u3443:
  6426  13A1                     l2609:
  6427  13A1  1C5C               	btfss	___fladd@b+3,0
  6428  13A2  2BA4               	goto	u3451
  6429  13A3  2BA5               	goto	u3450
  6430  13A4                     u3451:
  6431  13A4  2C7B               	goto	l2659
  6432  13A5                     u3450:
  6433  13A5                     l2611:
  6434  13A5  1C6C               	btfss	___fladd@grs,0
  6435  13A6  2BA8               	goto	u3461
  6436  13A7  2BA9               	goto	u3460
  6437  13A8                     u3461:
  6438  13A8  2BB2               	goto	l2615
  6439  13A9                     u3460:
  6440  13A9                     l2613:
  6441  13A9  086C               	movf	___fladd@grs,w
  6442  13AA  00E1               	movwf	??___fladd
  6443  13AB  1003               	clrc
  6444  13AC  0C61               	rrf	??___fladd,w
  6445  13AD  3801               	iorlw	1
  6446  13AE  00E2               	movwf	??___fladd+1
  6447  13AF  0862               	movf	??___fladd+1,w
  6448  13B0  00EC               	movwf	___fladd@grs
  6449  13B1  2BB4               	goto	l2617
  6450  13B2                     l2615:
  6451  13B2  1003               	clrc
  6452  13B3  0CEC               	rrf	___fladd@grs,f
  6453  13B4                     l2617:
  6454  13B4  1C59               	btfss	___fladd@b,0
  6455  13B5  2BB7               	goto	u3471
  6456  13B6  2BB8               	goto	u3470
  6457  13B7                     u3471:
  6458  13B7  2BB9               	goto	l2621
  6459  13B8                     u3470:
  6460  13B8                     l2619:
  6461  13B8  17EC               	bsf	___fladd@grs,7
  6462  13B9                     l2621:
  6463  13B9  3001               	movlw	1
  6464  13BA  00E1               	movwf	??___fladd
  6465  13BB                     u3485:
  6466  13BB  0D5C               	rlf	___fladd@b+3,w
  6467  13BC  0CDC               	rrf	___fladd@b+3,f
  6468  13BD  0CDB               	rrf	___fladd@b+2,f
  6469  13BE  0CDA               	rrf	___fladd@b+1,f
  6470  13BF  0CD9               	rrf	___fladd@b,f
  6471  13C0  0BE1               	decfsz	??___fladd& (0+127),f
  6472  13C1  2BBB               	goto	u3485
  6473  13C2                     l2623:
  6474  13C2  3001               	movlw	1
  6475  13C3  00E1               	movwf	??___fladd
  6476  13C4  0861               	movf	??___fladd,w
  6477  13C5  07EB               	addwf	___fladd@bexp,f
  6478  13C6  2C7B               	goto	l2659
  6479  13C7                     l2625:
  6480  13C7  085C               	movf	___fladd@b+3,w
  6481  13C8  3A80               	xorlw	128
  6482  13C9  00FF               	movwf	btemp+1
  6483  13CA  0860               	movf	___fladd@a+3,w
  6484  13CB  3A80               	xorlw	128
  6485  13CC  027F               	subwf	btemp+1,w
  6486  13CD  1D03               	skipz
  6487  13CE  2BD9               	goto	u3493
  6488  13CF  085F               	movf	___fladd@a+2,w
  6489  13D0  025B               	subwf	___fladd@b+2,w
  6490  13D1  1D03               	skipz
  6491  13D2  2BD9               	goto	u3493
  6492  13D3  085E               	movf	___fladd@a+1,w
  6493  13D4  025A               	subwf	___fladd@b+1,w
  6494  13D5  1D03               	skipz
  6495  13D6  2BD9               	goto	u3493
  6496  13D7  085D               	movf	___fladd@a,w
  6497  13D8  0259               	subwf	___fladd@b,w
  6498  13D9                     u3493:
  6499  13D9  1803               	skipnc
  6500  13DA  2BDC               	goto	u3491
  6501  13DB  2BDD               	goto	u3490
  6502  13DC                     u3491:
  6503  13DC  2C35               	goto	l2635
  6504  13DD                     u3490:
  6505  13DD                     l2627:
  6506  13DD  30FF               	movlw	255
  6507  13DE  00E1               	movwf	??___fladd
  6508  13DF  30FF               	movlw	255
  6509  13E0  00E2               	movwf	??___fladd+1
  6510  13E1  30FF               	movlw	255
  6511  13E2  00E3               	movwf	??___fladd+2
  6512  13E3  30FF               	movlw	255
  6513  13E4  00E4               	movwf	??___fladd+3
  6514  13E5  085D               	movf	___fladd@a,w
  6515  13E6  00E5               	movwf	??___fladd+4
  6516  13E7  085E               	movf	___fladd@a+1,w
  6517  13E8  00E6               	movwf	??___fladd+5
  6518  13E9  085F               	movf	___fladd@a+2,w
  6519  13EA  00E7               	movwf	??___fladd+6
  6520  13EB  0860               	movf	___fladd@a+3,w
  6521  13EC  00E8               	movwf	??___fladd+7
  6522  13ED  0859               	movf	___fladd@b,w
  6523  13EE  02E5               	subwf	??___fladd+4,f
  6524  13EF  085A               	movf	___fladd@b+1,w
  6525  13F0  1C03               	skipc
  6526  13F1  0F5A               	incfsz	___fladd@b+1,w
  6527  13F2  2BF4               	goto	u3501
  6528  13F3  2BF5               	goto	u3502
  6529  13F4                     u3501:
  6530  13F4  02E6               	subwf	??___fladd+5,f
  6531  13F5                     u3502:
  6532  13F5  085B               	movf	___fladd@b+2,w
  6533  13F6  1C03               	skipc
  6534  13F7  0F5B               	incfsz	___fladd@b+2,w
  6535  13F8  2BFA               	goto	u3503
  6536  13F9  2BFB               	goto	u3504
  6537  13FA                     u3503:
  6538  13FA  02E7               	subwf	??___fladd+6,f
  6539  13FB                     u3504:
  6540  13FB  085C               	movf	___fladd@b+3,w
  6541  13FC  1C03               	skipc
  6542  13FD  0F5C               	incfsz	___fladd@b+3,w
  6543  13FE  2C00               	goto	u3505
  6544  13FF  2C01               	goto	u3506
  6545  1400                     u3505:
  6546  1400  02E8               	subwf	??___fladd+7,f
  6547  1401                     u3506:
  6548  1401  0865               	movf	??___fladd+4,w
  6549  1402  07E1               	addwf	??___fladd,f
  6550  1403  0866               	movf	??___fladd+5,w
  6551  1404  1803               	skipnc
  6552  1405  0F66               	incfsz	??___fladd+5,w
  6553  1406  2C08               	goto	u3510
  6554  1407  2C09               	goto	u3511
  6555  1408                     u3510:
  6556  1408  07E2               	addwf	??___fladd+1,f
  6557  1409                     u3511:
  6558  1409  0867               	movf	??___fladd+6,w
  6559  140A  1803               	skipnc
  6560  140B  0F67               	incfsz	??___fladd+6,w
  6561  140C  2C0E               	goto	u3512
  6562  140D  2C0F               	goto	u3513
  6563  140E                     u3512:
  6564  140E  07E3               	addwf	??___fladd+2,f
  6565  140F                     u3513:
  6566  140F  0868               	movf	??___fladd+7,w
  6567  1410  1803               	skipnc
  6568  1411  0A68               	incf	??___fladd+7,w
  6569  1412  07E4               	addwf	??___fladd+3,f
  6570  1413  0864               	movf	??___fladd+3,w
  6571  1414  00DC               	movwf	___fladd@b+3
  6572  1415  0863               	movf	??___fladd+2,w
  6573  1416  00DB               	movwf	___fladd@b+2
  6574  1417  0862               	movf	??___fladd+1,w
  6575  1418  00DA               	movwf	___fladd@b+1
  6576  1419  0861               	movf	??___fladd,w
  6577  141A  00D9               	movwf	___fladd@b
  6578  141B                     l2629:
  6579  141B  3080               	movlw	128
  6580  141C  00E1               	movwf	??___fladd
  6581  141D  0861               	movf	??___fladd,w
  6582  141E  06E9               	xorwf	___fladd@signs,f
  6583  141F  09EC               	comf	___fladd@grs,f
  6584  1420  0AEC               	incf	___fladd@grs,f
  6585  1421                     l2631:
  6586  1421  086C               	movf	___fladd@grs,w
  6587  1422  1D03               	btfss	3,2
  6588  1423  2C25               	goto	u3521
  6589  1424  2C26               	goto	u3520
  6590  1425                     u3521:
  6591  1425  2C43               	goto	l756
  6592  1426                     u3520:
  6593  1426                     l2633:
  6594  1426  3001               	movlw	1
  6595  1427  07D9               	addwf	___fladd@b,f
  6596  1428  3000               	movlw	0
  6597  1429  1803               	skipnc
  6598  142A  3001               	movlw	1
  6599  142B  07DA               	addwf	___fladd@b+1,f
  6600  142C  3000               	movlw	0
  6601  142D  1803               	skipnc
  6602  142E  3001               	movlw	1
  6603  142F  07DB               	addwf	___fladd@b+2,f
  6604  1430  3000               	movlw	0
  6605  1431  1803               	skipnc
  6606  1432  3001               	movlw	1
  6607  1433  07DC               	addwf	___fladd@b+3,f
  6608  1434  2C43               	goto	l756
  6609  1435                     l2635:
  6610  1435  085D               	movf	___fladd@a,w
  6611  1436  02D9               	subwf	___fladd@b,f
  6612  1437  085E               	movf	___fladd@a+1,w
  6613  1438  1C03               	skipc
  6614  1439  0F5E               	incfsz	___fladd@a+1,w
  6615  143A  02DA               	subwf	___fladd@b+1,f
  6616  143B  085F               	movf	___fladd@a+2,w
  6617  143C  1C03               	skipc
  6618  143D  0F5F               	incfsz	___fladd@a+2,w
  6619  143E  02DB               	subwf	___fladd@b+2,f
  6620  143F  0860               	movf	___fladd@a+3,w
  6621  1440  1C03               	skipc
  6622  1441  0F60               	incfsz	___fladd@a+3,w
  6623  1442  02DC               	subwf	___fladd@b+3,f
  6624  1443                     l756:
  6625  1443  085C               	movf	___fladd@b+3,w
  6626  1444  045B               	iorwf	___fladd@b+2,w
  6627  1445  045A               	iorwf	___fladd@b+1,w
  6628  1446  0459               	iorwf	___fladd@b,w
  6629  1447  1D03               	skipz
  6630  1448  2C4A               	goto	u3531
  6631  1449  2C4B               	goto	u3530
  6632  144A                     u3531:
  6633  144A  2C77               	goto	l2657
  6634  144B                     u3530:
  6635  144B                     l2637:
  6636  144B  086C               	movf	___fladd@grs,w
  6637  144C  1D03               	btfss	3,2
  6638  144D  2C4F               	goto	u3541
  6639  144E  2C50               	goto	u3540
  6640  144F                     u3541:
  6641  144F  2C77               	goto	l2657
  6642  1450                     u3540:
  6643  1450                     l2639:
  6644  1450  3000               	movlw	0
  6645  1451  00DC               	movwf	?___fladd+3
  6646  1452  3000               	movlw	0
  6647  1453  00DB               	movwf	?___fladd+2
  6648  1454  3000               	movlw	0
  6649  1455  00DA               	movwf	?___fladd+1
  6650  1456  3000               	movlw	0
  6651  1457  00D9               	movwf	?___fladd
  6652  1458  2CF5               	goto	l748
  6653  1459                     l2643:
  6654  1459  3001               	movlw	1
  6655  145A  00E1               	movwf	??___fladd
  6656  145B                     u3555:
  6657  145B  1003               	clrc
  6658  145C  0DD9               	rlf	___fladd@b,f
  6659  145D  0DDA               	rlf	___fladd@b+1,f
  6660  145E  0DDB               	rlf	___fladd@b+2,f
  6661  145F  0DDC               	rlf	___fladd@b+3,f
  6662  1460  0BE1               	decfsz	??___fladd,f
  6663  1461  2C5B               	goto	u3555
  6664  1462                     l2645:
  6665  1462  1FEC               	btfss	___fladd@grs,7
  6666  1463  2C65               	goto	u3561
  6667  1464  2C66               	goto	u3560
  6668  1465                     u3561:
  6669  1465  2C67               	goto	l760
  6670  1466                     u3560:
  6671  1466                     l2647:
  6672  1466  1459               	bsf	___fladd@b,0
  6673  1467                     l760:
  6674  1467  1C6C               	btfss	___fladd@grs,0
  6675  1468  2C6A               	goto	u3571
  6676  1469  2C6B               	goto	u3570
  6677  146A                     u3571:
  6678  146A  2C6E               	goto	l2651
  6679  146B                     u3570:
  6680  146B                     l2649:
  6681  146B  1403               	setc
  6682  146C  0DEC               	rlf	___fladd@grs,f
  6683  146D  2C70               	goto	l2653
  6684  146E                     l2651:
  6685  146E  1003               	clrc
  6686  146F  0DEC               	rlf	___fladd@grs,f
  6687  1470                     l2653:
  6688  1470  086B               	movf	___fladd@bexp,w
  6689  1471  1903               	btfsc	3,2
  6690  1472  2C74               	goto	u3581
  6691  1473  2C75               	goto	u3580
  6692  1474                     u3581:
  6693  1474  2C77               	goto	l2657
  6694  1475                     u3580:
  6695  1475                     l2655:
  6696  1475  3001               	movlw	1
  6697  1476  02EB               	subwf	___fladd@bexp,f
  6698  1477                     l2657:
  6699  1477  1FDB               	btfss	___fladd@b+2,7
  6700  1478  2C7A               	goto	u3591
  6701  1479  2C7B               	goto	u3590
  6702  147A                     u3591:
  6703  147A  2C59               	goto	l2643
  6704  147B                     u3590:
  6705  147B                     l2659:
  6706  147B  01EA               	clrf	___fladd@aexp
  6707  147C                     l2661:
  6708  147C  1FEC               	btfss	___fladd@grs,7
  6709  147D  2C7F               	goto	u3601
  6710  147E  2C80               	goto	u3600
  6711  147F                     u3601:
  6712  147F  2C8E               	goto	l2669
  6713  1480                     u3600:
  6714  1480                     l2663:
  6715  1480  086C               	movf	___fladd@grs,w
  6716  1481  397F               	andlw	127
  6717  1482  1903               	btfsc	3,2
  6718  1483  2C85               	goto	u3611
  6719  1484  2C86               	goto	u3610
  6720  1485                     u3611:
  6721  1485  2C89               	goto	l766
  6722  1486                     u3610:
  6723  1486                     l2665:
  6724  1486  01EA               	clrf	___fladd@aexp
  6725  1487  0AEA               	incf	___fladd@aexp,f
  6726  1488  2C8E               	goto	l2669
  6727  1489                     l766:
  6728  1489  1C59               	btfss	___fladd@b,0
  6729  148A  2C8C               	goto	u3621
  6730  148B  2C8D               	goto	u3620
  6731  148C                     u3621:
  6732  148C  2C8E               	goto	l2669
  6733  148D                     u3620:
  6734  148D  2C86               	goto	l2665
  6735  148E                     l2669:
  6736  148E  086A               	movf	___fladd@aexp,w
  6737  148F  1903               	btfsc	3,2
  6738  1490  2C92               	goto	u3631
  6739  1491  2C93               	goto	u3630
  6740  1492                     u3631:
  6741  1492  2CC7               	goto	l769
  6742  1493                     u3630:
  6743  1493                     l2671:
  6744  1493  3001               	movlw	1
  6745  1494  07D9               	addwf	___fladd@b,f
  6746  1495  3000               	movlw	0
  6747  1496  1803               	skipnc
  6748  1497  3001               	movlw	1
  6749  1498  07DA               	addwf	___fladd@b+1,f
  6750  1499  3000               	movlw	0
  6751  149A  1803               	skipnc
  6752  149B  3001               	movlw	1
  6753  149C  07DB               	addwf	___fladd@b+2,f
  6754  149D  3000               	movlw	0
  6755  149E  1803               	skipnc
  6756  149F  3001               	movlw	1
  6757  14A0  07DC               	addwf	___fladd@b+3,f
  6758  14A1                     l2673:
  6759  14A1  1C5C               	btfss	___fladd@b+3,0
  6760  14A2  2CA4               	goto	u3641
  6761  14A3  2CA5               	goto	u3640
  6762  14A4                     u3641:
  6763  14A4  2CC7               	goto	l769
  6764  14A5                     u3640:
  6765  14A5                     l2675:
  6766  14A5  0859               	movf	___fladd@b,w
  6767  14A6  00E1               	movwf	??___fladd
  6768  14A7  085A               	movf	___fladd@b+1,w
  6769  14A8  00E2               	movwf	??___fladd+1
  6770  14A9  085B               	movf	___fladd@b+2,w
  6771  14AA  00E3               	movwf	??___fladd+2
  6772  14AB  085C               	movf	___fladd@b+3,w
  6773  14AC  00E4               	movwf	??___fladd+3
  6774  14AD  3001               	movlw	1
  6775  14AE  00E5               	movwf	??___fladd+4
  6776  14AF                     u3655:
  6777  14AF  0D64               	rlf	??___fladd+3,w
  6778  14B0  0CE4               	rrf	??___fladd+3,f
  6779  14B1  0CE3               	rrf	??___fladd+2,f
  6780  14B2  0CE2               	rrf	??___fladd+1,f
  6781  14B3  0CE1               	rrf	??___fladd,f
  6782  14B4                     u3650:
  6783  14B4  0BE5               	decfsz	??___fladd+4,f
  6784  14B5  2CAF               	goto	u3655
  6785  14B6  0864               	movf	??___fladd+3,w
  6786  14B7  00DC               	movwf	___fladd@b+3
  6787  14B8  0863               	movf	??___fladd+2,w
  6788  14B9  00DB               	movwf	___fladd@b+2
  6789  14BA  0862               	movf	??___fladd+1,w
  6790  14BB  00DA               	movwf	___fladd@b+1
  6791  14BC  0861               	movf	??___fladd,w
  6792  14BD  00D9               	movwf	___fladd@b
  6793  14BE  0A6B               	incf	___fladd@bexp,w
  6794  14BF  1903               	btfsc	3,2
  6795  14C0  2CC2               	goto	u3661
  6796  14C1  2CC3               	goto	u3660
  6797  14C2                     u3661:
  6798  14C2  2CC7               	goto	l769
  6799  14C3                     u3660:
  6800  14C3                     l2677:
  6801  14C3  3001               	movlw	1
  6802  14C4  00E1               	movwf	??___fladd
  6803  14C5  0861               	movf	??___fladd,w
  6804  14C6  07EB               	addwf	___fladd@bexp,f
  6805  14C7                     l769:
  6806  14C7  0A6B               	incf	___fladd@bexp,w
  6807  14C8  1903               	btfsc	3,2
  6808  14C9  2CCB               	goto	u3671
  6809  14CA  2CCC               	goto	u3670
  6810  14CB                     u3671:
  6811  14CB  2CD1               	goto	l2681
  6812  14CC                     u3670:
  6813  14CC                     l2679:
  6814  14CC  086B               	movf	___fladd@bexp,w
  6815  14CD  1D03               	btfss	3,2
  6816  14CE  2CD0               	goto	u3681
  6817  14CF  2CD1               	goto	u3680
  6818  14D0                     u3681:
  6819  14D0  2CDF               	goto	l2687
  6820  14D1                     u3680:
  6821  14D1                     l2681:
  6822  14D1  3000               	movlw	0
  6823  14D2  00DC               	movwf	___fladd@b+3
  6824  14D3  3000               	movlw	0
  6825  14D4  00DB               	movwf	___fladd@b+2
  6826  14D5  3000               	movlw	0
  6827  14D6  00DA               	movwf	___fladd@b+1
  6828  14D7  3000               	movlw	0
  6829  14D8  00D9               	movwf	___fladd@b
  6830  14D9                     l2683:
  6831  14D9  086B               	movf	___fladd@bexp,w
  6832  14DA  1D03               	btfss	3,2
  6833  14DB  2CDD               	goto	u3691
  6834  14DC  2CDE               	goto	u3690
  6835  14DD                     u3691:
  6836  14DD  2CDF               	goto	l2687
  6837  14DE                     u3690:
  6838  14DE                     l2685:
  6839  14DE  01E9               	clrf	___fladd@signs
  6840  14DF                     l2687:
  6841  14DF  1C6B               	btfss	___fladd@bexp,0
  6842  14E0  2CE2               	goto	u3701
  6843  14E1  2CE3               	goto	u3700
  6844  14E2                     u3701:
  6845  14E2  2CE5               	goto	l2691
  6846  14E3                     u3700:
  6847  14E3                     l2689:
  6848  14E3  17DB               	bsf	___fladd@b+2,7
  6849  14E4  2CE9               	goto	l777
  6850  14E5                     l2691:
  6851  14E5  307F               	movlw	127
  6852  14E6  00E1               	movwf	??___fladd
  6853  14E7  0861               	movf	??___fladd,w
  6854  14E8  05DB               	andwf	___fladd@b+2,f
  6855  14E9                     l777:
  6856  14E9  086B               	movf	___fladd@bexp,w
  6857  14EA  00E1               	movwf	??___fladd
  6858  14EB  1003               	clrc
  6859  14EC  0C61               	rrf	??___fladd,w
  6860  14ED  00E2               	movwf	??___fladd+1
  6861  14EE  0862               	movf	??___fladd+1,w
  6862  14EF  00DC               	movwf	___fladd@b+3
  6863  14F0                     l2693:
  6864  14F0  1FE9               	btfss	___fladd@signs,7
  6865  14F1  2CF3               	goto	u3711
  6866  14F2  2CF4               	goto	u3710
  6867  14F3                     u3711:
  6868  14F3  2CF5               	goto	l778
  6869  14F4                     u3710:
  6870  14F4                     l2695:
  6871  14F4  17DC               	bsf	___fladd@b+3,7
  6872  14F5                     l778:
  6873  14F5                     l748:
  6874  14F5  0008               	return
  6875  14F6                     __end_of___fladd:
  6876                           
  6877                           	psect	text17
  6878  194D                     __ptext17:	
  6879 ;; *************** function ___flneg *****************
  6880 ;; Defined at:
  6881 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  f1              4    3[COMMON] unsigned char 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;		None
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  4    3[COMMON] unsigned char 
  6888 ;; Registers used:
  6889 ;;		wreg
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6895 ;;      Params:         4       0       0       0       0
  6896 ;;      Locals:         0       0       0       0       0
  6897 ;;      Temps:          0       0       0       0       0
  6898 ;;      Totals:         4       0       0       0       0
  6899 ;;Total ram usage:        4 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:    1
  6902 ;; This function calls:
  6903 ;;		Nothing
  6904 ;; This function is called by:
  6905 ;;		_sprintf
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           
  6910                           ;psect for function ___flneg
  6911  194D                     ___flneg:
  6912  194D                     l3105:	
  6913                           ;incstack = 0
  6914                           ; Regs used in ___flneg: [wreg]
  6915                           
  6916  194D  0876               	movf	___flneg@f1+3,w
  6917  194E  0475               	iorwf	___flneg@f1+2,w
  6918  194F  0474               	iorwf	___flneg@f1+1,w
  6919  1950  0473               	iorwf	___flneg@f1,w
  6920  1951  1903               	skipnz
  6921  1952  2954               	goto	u4841
  6922  1953  2955               	goto	u4840
  6923  1954                     u4841:
  6924  1954  2957               	goto	l3109
  6925  1955                     u4840:
  6926  1955                     l3107:
  6927  1955  3080               	movlw	128
  6928  1956  06F6               	xorwf	___flneg@f1+3,f
  6929  1957                     l3109:
  6930  1957                     l607:
  6931  1957  0008               	return
  6932  1958                     __end_of___flneg:
  6933                           
  6934                           	psect	text18
  6935  1D15                     __ptext18:	
  6936 ;; *************** function ___flge *****************
  6937 ;; Defined at:
  6938 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  ff1             4    0[BANK0 ] unsigned char 
  6941 ;;  ff2             4    4[BANK0 ] unsigned char 
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;		None               void
  6946 ;; Registers used:
  6947 ;;		wreg, status,2, status,0
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6953 ;;      Params:         0       8       0       0       0
  6954 ;;      Locals:         0       0       0       0       0
  6955 ;;      Temps:          4       0       0       0       0
  6956 ;;      Totals:         4       8       0       0       0
  6957 ;;Total ram usage:       12 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    1
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_sprintf
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           
  6968                           ;psect for function ___flge
  6969  1D15                     ___flge:
  6970  1D15                     l4083:	
  6971                           ;incstack = 0
  6972                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6973                           
  6974  1D15  3000               	movlw	0
  6975  1D16  1283               	bcf	3,5	;RP0=0, select bank0
  6976  1D17  1303               	bcf	3,6	;RP1=0, select bank0
  6977  1D18  0520               	andwf	___flge@ff1,w
  6978  1D19  00F3               	movwf	??___flge
  6979  1D1A  3000               	movlw	0
  6980  1D1B  0521               	andwf	___flge@ff1+1,w
  6981  1D1C  00F4               	movwf	??___flge+1
  6982  1D1D  3080               	movlw	128
  6983  1D1E  0522               	andwf	___flge@ff1+2,w
  6984  1D1F  00F5               	movwf	??___flge+2
  6985  1D20  307F               	movlw	127
  6986  1D21  0523               	andwf	___flge@ff1+3,w
  6987  1D22  00F6               	movwf	??___flge+3
  6988  1D23  0876               	movf	??___flge+3,w
  6989  1D24  0475               	iorwf	??___flge+2,w
  6990  1D25  0474               	iorwf	??___flge+1,w
  6991  1D26  0473               	iorwf	??___flge,w
  6992  1D27  1D03               	skipz
  6993  1D28  2D2A               	goto	u6731
  6994  1D29  2D2B               	goto	u6730
  6995  1D2A                     u6731:
  6996  1D2A  2D33               	goto	l599
  6997  1D2B                     u6730:
  6998  1D2B                     l4085:
  6999  1D2B  3000               	movlw	0
  7000  1D2C  00A3               	movwf	___flge@ff1+3
  7001  1D2D  3000               	movlw	0
  7002  1D2E  00A2               	movwf	___flge@ff1+2
  7003  1D2F  3000               	movlw	0
  7004  1D30  00A1               	movwf	___flge@ff1+1
  7005  1D31  3000               	movlw	0
  7006  1D32  00A0               	movwf	___flge@ff1
  7007  1D33                     l599:
  7008  1D33  3000               	movlw	0
  7009  1D34  0524               	andwf	___flge@ff2,w
  7010  1D35  00F3               	movwf	??___flge
  7011  1D36  3000               	movlw	0
  7012  1D37  0525               	andwf	___flge@ff2+1,w
  7013  1D38  00F4               	movwf	??___flge+1
  7014  1D39  3080               	movlw	128
  7015  1D3A  0526               	andwf	___flge@ff2+2,w
  7016  1D3B  00F5               	movwf	??___flge+2
  7017  1D3C  307F               	movlw	127
  7018  1D3D  0527               	andwf	___flge@ff2+3,w
  7019  1D3E  00F6               	movwf	??___flge+3
  7020  1D3F  0876               	movf	??___flge+3,w
  7021  1D40  0475               	iorwf	??___flge+2,w
  7022  1D41  0474               	iorwf	??___flge+1,w
  7023  1D42  0473               	iorwf	??___flge,w
  7024  1D43  1D03               	skipz
  7025  1D44  2D46               	goto	u6741
  7026  1D45  2D47               	goto	u6740
  7027  1D46                     u6741:
  7028  1D46  2D4F               	goto	l4089
  7029  1D47                     u6740:
  7030  1D47                     l4087:
  7031  1D47  3000               	movlw	0
  7032  1D48  00A7               	movwf	___flge@ff2+3
  7033  1D49  3000               	movlw	0
  7034  1D4A  00A6               	movwf	___flge@ff2+2
  7035  1D4B  3000               	movlw	0
  7036  1D4C  00A5               	movwf	___flge@ff2+1
  7037  1D4D  3000               	movlw	0
  7038  1D4E  00A4               	movwf	___flge@ff2
  7039  1D4F                     l4089:
  7040  1D4F  1FA3               	btfss	___flge@ff1+3,7
  7041  1D50  2D52               	goto	u6751
  7042  1D51  2D53               	goto	u6750
  7043  1D52                     u6751:
  7044  1D52  2D77               	goto	l4093
  7045  1D53                     u6750:
  7046  1D53                     l4091:
  7047  1D53  3000               	movlw	0
  7048  1D54  00F3               	movwf	??___flge
  7049  1D55  3000               	movlw	0
  7050  1D56  00F4               	movwf	??___flge+1
  7051  1D57  3000               	movlw	0
  7052  1D58  00F5               	movwf	??___flge+2
  7053  1D59  3080               	movlw	128
  7054  1D5A  00F6               	movwf	??___flge+3
  7055  1D5B  0820               	movf	___flge@ff1,w
  7056  1D5C  02F3               	subwf	??___flge,f
  7057  1D5D  0821               	movf	___flge@ff1+1,w
  7058  1D5E  1C03               	skipc
  7059  1D5F  0F21               	incfsz	___flge@ff1+1,w
  7060  1D60  2D62               	goto	u6761
  7061  1D61  2D63               	goto	u6762
  7062  1D62                     u6761:
  7063  1D62  02F4               	subwf	??___flge+1,f
  7064  1D63                     u6762:
  7065  1D63  0822               	movf	___flge@ff1+2,w
  7066  1D64  1C03               	skipc
  7067  1D65  0F22               	incfsz	___flge@ff1+2,w
  7068  1D66  2D68               	goto	u6763
  7069  1D67  2D69               	goto	u6764
  7070  1D68                     u6763:
  7071  1D68  02F5               	subwf	??___flge+2,f
  7072  1D69                     u6764:
  7073  1D69  0823               	movf	___flge@ff1+3,w
  7074  1D6A  1C03               	skipc
  7075  1D6B  0F23               	incfsz	___flge@ff1+3,w
  7076  1D6C  2D6E               	goto	u6765
  7077  1D6D  2D6F               	goto	u6766
  7078  1D6E                     u6765:
  7079  1D6E  02F6               	subwf	??___flge+3,f
  7080  1D6F                     u6766:
  7081  1D6F  0876               	movf	??___flge+3,w
  7082  1D70  00A3               	movwf	___flge@ff1+3
  7083  1D71  0875               	movf	??___flge+2,w
  7084  1D72  00A2               	movwf	___flge@ff1+2
  7085  1D73  0874               	movf	??___flge+1,w
  7086  1D74  00A1               	movwf	___flge@ff1+1
  7087  1D75  0873               	movf	??___flge,w
  7088  1D76  00A0               	movwf	___flge@ff1
  7089  1D77                     l4093:
  7090  1D77  1FA7               	btfss	___flge@ff2+3,7
  7091  1D78  2D7A               	goto	u6771
  7092  1D79  2D7B               	goto	u6770
  7093  1D7A                     u6771:
  7094  1D7A  2D9F               	goto	l602
  7095  1D7B                     u6770:
  7096  1D7B                     l4095:
  7097  1D7B  3000               	movlw	0
  7098  1D7C  00F3               	movwf	??___flge
  7099  1D7D  3000               	movlw	0
  7100  1D7E  00F4               	movwf	??___flge+1
  7101  1D7F  3000               	movlw	0
  7102  1D80  00F5               	movwf	??___flge+2
  7103  1D81  3080               	movlw	128
  7104  1D82  00F6               	movwf	??___flge+3
  7105  1D83  0824               	movf	___flge@ff2,w
  7106  1D84  02F3               	subwf	??___flge,f
  7107  1D85  0825               	movf	___flge@ff2+1,w
  7108  1D86  1C03               	skipc
  7109  1D87  0F25               	incfsz	___flge@ff2+1,w
  7110  1D88  2D8A               	goto	u6781
  7111  1D89  2D8B               	goto	u6782
  7112  1D8A                     u6781:
  7113  1D8A  02F4               	subwf	??___flge+1,f
  7114  1D8B                     u6782:
  7115  1D8B  0826               	movf	___flge@ff2+2,w
  7116  1D8C  1C03               	skipc
  7117  1D8D  0F26               	incfsz	___flge@ff2+2,w
  7118  1D8E  2D90               	goto	u6783
  7119  1D8F  2D91               	goto	u6784
  7120  1D90                     u6783:
  7121  1D90  02F5               	subwf	??___flge+2,f
  7122  1D91                     u6784:
  7123  1D91  0827               	movf	___flge@ff2+3,w
  7124  1D92  1C03               	skipc
  7125  1D93  0F27               	incfsz	___flge@ff2+3,w
  7126  1D94  2D96               	goto	u6785
  7127  1D95  2D97               	goto	u6786
  7128  1D96                     u6785:
  7129  1D96  02F6               	subwf	??___flge+3,f
  7130  1D97                     u6786:
  7131  1D97  0876               	movf	??___flge+3,w
  7132  1D98  00A7               	movwf	___flge@ff2+3
  7133  1D99  0875               	movf	??___flge+2,w
  7134  1D9A  00A6               	movwf	___flge@ff2+2
  7135  1D9B  0874               	movf	??___flge+1,w
  7136  1D9C  00A5               	movwf	___flge@ff2+1
  7137  1D9D  0873               	movf	??___flge,w
  7138  1D9E  00A4               	movwf	___flge@ff2
  7139  1D9F                     l602:
  7140  1D9F  3080               	movlw	128
  7141  1DA0  06A3               	xorwf	___flge@ff1+3,f
  7142  1DA1  3080               	movlw	128
  7143  1DA2  06A7               	xorwf	___flge@ff2+3,f
  7144  1DA3  0827               	movf	___flge@ff2+3,w
  7145  1DA4  0223               	subwf	___flge@ff1+3,w
  7146  1DA5  1D03               	skipz
  7147  1DA6  2DB1               	goto	u6795
  7148  1DA7  0826               	movf	___flge@ff2+2,w
  7149  1DA8  0222               	subwf	___flge@ff1+2,w
  7150  1DA9  1D03               	skipz
  7151  1DAA  2DB1               	goto	u6795
  7152  1DAB  0825               	movf	___flge@ff2+1,w
  7153  1DAC  0221               	subwf	___flge@ff1+1,w
  7154  1DAD  1D03               	skipz
  7155  1DAE  2DB1               	goto	u6795
  7156  1DAF  0824               	movf	___flge@ff2,w
  7157  1DB0  0220               	subwf	___flge@ff1,w
  7158  1DB1                     u6795:
  7159  1DB1  1803               	skipnc
  7160  1DB2  2DB4               	goto	u6791
  7161  1DB3  2DB5               	goto	u6790
  7162  1DB4                     u6791:
  7163  1DB4  2DB7               	goto	l4099
  7164  1DB5                     u6790:
  7165  1DB5                     l4097:
  7166  1DB5  1003               	clrc
  7167  1DB6  2DB8               	goto	l603
  7168  1DB7                     l4099:
  7169  1DB7  1403               	setc
  7170  1DB8                     l603:
  7171  1DB8  0008               	return
  7172  1DB9                     __end_of___flge:
  7173                           
  7174                           	psect	text19
  7175  1B5C                     __ptext19:	
  7176 ;; *************** function ___fleq *****************
  7177 ;; Defined at:
  7178 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  ff1             4    0[BANK0 ] unsigned char 
  7181 ;;  ff2             4    4[BANK0 ] unsigned char 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;		None
  7184 ;; Return value:  Size  Location     Type
  7185 ;;		None               void
  7186 ;; Registers used:
  7187 ;;		wreg, status,2, status,0
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7193 ;;      Params:         0       8       0       0       0
  7194 ;;      Locals:         0       0       0       0       0
  7195 ;;      Temps:          4       0       0       0       0
  7196 ;;      Totals:         4       8       0       0       0
  7197 ;;Total ram usage:       12 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:    1
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_sprintf
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           
  7208                           ;psect for function ___fleq
  7209  1B5C                     ___fleq:
  7210  1B5C                     l4071:	
  7211                           ;incstack = 0
  7212                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7213                           
  7214  1B5C  3000               	movlw	0
  7215  1B5D  1283               	bcf	3,5	;RP0=0, select bank0
  7216  1B5E  1303               	bcf	3,6	;RP1=0, select bank0
  7217  1B5F  0520               	andwf	___fleq@ff1,w
  7218  1B60  00F3               	movwf	??___fleq
  7219  1B61  3000               	movlw	0
  7220  1B62  0521               	andwf	___fleq@ff1+1,w
  7221  1B63  00F4               	movwf	??___fleq+1
  7222  1B64  3080               	movlw	128
  7223  1B65  0522               	andwf	___fleq@ff1+2,w
  7224  1B66  00F5               	movwf	??___fleq+2
  7225  1B67  307F               	movlw	127
  7226  1B68  0523               	andwf	___fleq@ff1+3,w
  7227  1B69  00F6               	movwf	??___fleq+3
  7228  1B6A  0876               	movf	??___fleq+3,w
  7229  1B6B  0475               	iorwf	??___fleq+2,w
  7230  1B6C  0474               	iorwf	??___fleq+1,w
  7231  1B6D  0473               	iorwf	??___fleq,w
  7232  1B6E  1D03               	skipz
  7233  1B6F  2B71               	goto	u6701
  7234  1B70  2B72               	goto	u6700
  7235  1B71                     u6701:
  7236  1B71  2B7A               	goto	l594
  7237  1B72                     u6700:
  7238  1B72                     l4073:
  7239  1B72  3000               	movlw	0
  7240  1B73  00A3               	movwf	___fleq@ff1+3
  7241  1B74  3000               	movlw	0
  7242  1B75  00A2               	movwf	___fleq@ff1+2
  7243  1B76  3000               	movlw	0
  7244  1B77  00A1               	movwf	___fleq@ff1+1
  7245  1B78  3000               	movlw	0
  7246  1B79  00A0               	movwf	___fleq@ff1
  7247  1B7A                     l594:
  7248  1B7A  3000               	movlw	0
  7249  1B7B  0524               	andwf	___fleq@ff2,w
  7250  1B7C  00F3               	movwf	??___fleq
  7251  1B7D  3000               	movlw	0
  7252  1B7E  0525               	andwf	___fleq@ff2+1,w
  7253  1B7F  00F4               	movwf	??___fleq+1
  7254  1B80  3080               	movlw	128
  7255  1B81  0526               	andwf	___fleq@ff2+2,w
  7256  1B82  00F5               	movwf	??___fleq+2
  7257  1B83  307F               	movlw	127
  7258  1B84  0527               	andwf	___fleq@ff2+3,w
  7259  1B85  00F6               	movwf	??___fleq+3
  7260  1B86  0876               	movf	??___fleq+3,w
  7261  1B87  0475               	iorwf	??___fleq+2,w
  7262  1B88  0474               	iorwf	??___fleq+1,w
  7263  1B89  0473               	iorwf	??___fleq,w
  7264  1B8A  1D03               	skipz
  7265  1B8B  2B8D               	goto	u6711
  7266  1B8C  2B8E               	goto	u6710
  7267  1B8D                     u6711:
  7268  1B8D  2B96               	goto	l595
  7269  1B8E                     u6710:
  7270  1B8E                     l4075:
  7271  1B8E  3000               	movlw	0
  7272  1B8F  00A7               	movwf	___fleq@ff2+3
  7273  1B90  3000               	movlw	0
  7274  1B91  00A6               	movwf	___fleq@ff2+2
  7275  1B92  3000               	movlw	0
  7276  1B93  00A5               	movwf	___fleq@ff2+1
  7277  1B94  3000               	movlw	0
  7278  1B95  00A4               	movwf	___fleq@ff2
  7279  1B96                     l595:
  7280  1B96  0827               	movf	___fleq@ff2+3,w
  7281  1B97  0623               	xorwf	___fleq@ff1+3,w
  7282  1B98  1D03               	skipz
  7283  1B99  2BA4               	goto	u6725
  7284  1B9A  0826               	movf	___fleq@ff2+2,w
  7285  1B9B  0622               	xorwf	___fleq@ff1+2,w
  7286  1B9C  1D03               	skipz
  7287  1B9D  2BA4               	goto	u6725
  7288  1B9E  0825               	movf	___fleq@ff2+1,w
  7289  1B9F  0621               	xorwf	___fleq@ff1+1,w
  7290  1BA0  1D03               	skipz
  7291  1BA1  2BA4               	goto	u6725
  7292  1BA2  0824               	movf	___fleq@ff2,w
  7293  1BA3  0620               	xorwf	___fleq@ff1,w
  7294  1BA4                     u6725:
  7295  1BA4  1903               	skipnz
  7296  1BA5  2BA7               	goto	u6721
  7297  1BA6  2BA8               	goto	u6720
  7298  1BA7                     u6721:
  7299  1BA7  2BAA               	goto	l4079
  7300  1BA8                     u6720:
  7301  1BA8                     l4077:
  7302  1BA8  1003               	clrc
  7303  1BA9  2BAB               	goto	l596
  7304  1BAA                     l4079:
  7305  1BAA  1403               	setc
  7306  1BAB                     l596:
  7307  1BAB  0008               	return
  7308  1BAC                     __end_of___fleq:
  7309                           
  7310                           	psect	text20
  7311  1924                     __ptext20:	
  7312 ;; *************** function _spiWrite *****************
  7313 ;; Defined at:
  7314 ;;		line 35 in file "SPI.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;  dat             1    wreg     unsigned char 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  dat             1    3[COMMON] unsigned char 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  1    wreg      void 
  7321 ;; Registers used:
  7322 ;;		wreg
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7328 ;;      Params:         0       0       0       0       0
  7329 ;;      Locals:         1       0       0       0       0
  7330 ;;      Temps:          0       0       0       0       0
  7331 ;;      Totals:         1       0       0       0       0
  7332 ;;Total ram usage:        1 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; Hardware stack levels required when called:    1
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_main
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           
  7343                           ;psect for function _spiWrite
  7344  1924                     _spiWrite:
  7345                           
  7346                           ;incstack = 0
  7347                           ; Regs used in _spiWrite: [wreg]
  7348                           ;spiWrite@dat stored from wreg
  7349  1924  00F3               	movwf	spiWrite@dat
  7350  1925                     l3259:
  7351                           
  7352                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  7353  1925  0873               	movf	spiWrite@dat,w
  7354  1926  1283               	bcf	3,5	;RP0=0, select bank0
  7355  1927  1303               	bcf	3,6	;RP1=0, select bank0
  7356  1928  0093               	movwf	19	;volatile
  7357  1929                     l195:
  7358  1929  0008               	return
  7359  192A                     __end_of_spiWrite:
  7360                           
  7361                           	psect	text21
  7362  1939                     __ptext21:	
  7363 ;; *************** function _spiRead *****************
  7364 ;; Defined at:
  7365 ;;		line 48 in file "SPI.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;		None
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;		None
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      unsigned char 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0, pclath, cstack
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7379 ;;      Params:         0       0       0       0       0
  7380 ;;      Locals:         0       0       0       0       0
  7381 ;;      Temps:          0       0       0       0       0
  7382 ;;      Totals:         0       0       0       0       0
  7383 ;;Total ram usage:        0 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    2
  7386 ;; This function calls:
  7387 ;;		_spiReceiveWait
  7388 ;; This function is called by:
  7389 ;;		_main
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           
  7394                           ;psect for function _spiRead
  7395  1939                     _spiRead:
  7396  1939                     l3261:	
  7397                           ;incstack = 0
  7398                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  7399                           
  7400                           
  7401                           ;SPI.c: 50:     spiReceiveWait();
  7402  1939  160A  158A  212A  160A  158A  	fcall	_spiReceiveWait
  7403  193E                     l3263:
  7404                           
  7405                           ;SPI.c: 51:     return(SSPBUF);
  7406  193E  1283               	bcf	3,5	;RP0=0, select bank0
  7407  193F  1303               	bcf	3,6	;RP1=0, select bank0
  7408  1940  0813               	movf	19,w	;volatile
  7409  1941                     l203:
  7410  1941  0008               	return
  7411  1942                     __end_of_spiRead:
  7412                           
  7413                           	psect	text22
  7414  192A                     __ptext22:	
  7415 ;; *************** function _spiReceiveWait *****************
  7416 ;; Defined at:
  7417 ;;		line 30 in file "SPI.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;		None
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;		None
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  1    wreg      void 
  7424 ;; Registers used:
  7425 ;;		None
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7431 ;;      Params:         0       0       0       0       0
  7432 ;;      Locals:         0       0       0       0       0
  7433 ;;      Temps:          0       0       0       0       0
  7434 ;;      Totals:         0       0       0       0       0
  7435 ;;Total ram usage:        0 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; Hardware stack levels required when called:    1
  7438 ;; This function calls:
  7439 ;;		Nothing
  7440 ;; This function is called by:
  7441 ;;		_spiRead
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           
  7446                           ;psect for function _spiReceiveWait
  7447  192A                     _spiReceiveWait:
  7448  192A                     l2859:	
  7449                           ;incstack = 0
  7450                           ; Regs used in _spiReceiveWait: []
  7451                           
  7452  192A                     l189:	
  7453                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  7454                           
  7455  192A  1683               	bsf	3,5	;RP0=1, select bank1
  7456  192B  1303               	bcf	3,6	;RP1=0, select bank1
  7457  192C  1C14               	btfss	20,0	;volatile
  7458  192D  292F               	goto	u4091
  7459  192E  2930               	goto	u4090
  7460  192F                     u4091:
  7461  192F  292A               	goto	l189
  7462  1930                     u4090:
  7463  1930                     l192:
  7464  1930  0008               	return
  7465  1931                     __end_of_spiReceiveWait:
  7466                           
  7467                           	psect	text23
  7468  0801                     __ptext23:	
  7469 ;; *************** function _spiInit *****************
  7470 ;; Defined at:
  7471 ;;		line 13 in file "SPI.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  sType           1    wreg     enum E1264
  7474 ;;  sDataSample     1    3[COMMON] enum E1272
  7475 ;;  sClockIdle      1    4[COMMON] enum E1276
  7476 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  sType           1    6[COMMON] enum E1264
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7488 ;;      Params:         3       0       0       0       0
  7489 ;;      Locals:         1       0       0       0       0
  7490 ;;      Temps:          0       0       0       0       0
  7491 ;;      Totals:         4       0       0       0       0
  7492 ;;Total ram usage:        4 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    1
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_main
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           
  7503                           ;psect for function _spiInit
  7504  0801                     _spiInit:
  7505                           
  7506                           ;incstack = 0
  7507                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  7508                           ;spiInit@sType stored from wreg
  7509  0801  00F6               	movwf	spiInit@sType
  7510  0802                     l3253:
  7511                           
  7512                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 16:     if(sType & 0b00000
      +                          100)
  7513  0802  1D76               	btfss	spiInit@sType,2
  7514  0803  2805               	goto	u5151
  7515  0804  2806               	goto	u5150
  7516  0805                     u5151:
  7517  0805  280B               	goto	l3257
  7518  0806                     u5150:
  7519  0806                     l3255:
  7520                           
  7521                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
  7522  0806  0875               	movf	spiInit@sTransmitEdge,w
  7523  0807  1683               	bsf	3,5	;RP0=1, select bank1
  7524  0808  1303               	bcf	3,6	;RP1=0, select bank1
  7525  0809  0094               	movwf	20	;volatile
  7526                           
  7527                           ;SPI.c: 20:     }
  7528  080A  2810               	goto	l185
  7529  080B                     l3257:
  7530                           
  7531                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  7532  080B  0873               	movf	spiInit@sDataSample,w
  7533  080C  0475               	iorwf	spiInit@sTransmitEdge,w
  7534  080D  1683               	bsf	3,5	;RP0=1, select bank1
  7535  080E  1303               	bcf	3,6	;RP1=0, select bank1
  7536  080F  0094               	movwf	20	;volatile
  7537  0810                     l185:	
  7538                           ;SPI.c: 25:     }
  7539                           
  7540                           
  7541                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
  7542  0810  0876               	movf	spiInit@sType,w
  7543  0811  0474               	iorwf	spiInit@sClockIdle,w
  7544  0812  1283               	bcf	3,5	;RP0=0, select bank0
  7545  0813  1303               	bcf	3,6	;RP1=0, select bank0
  7546  0814  0094               	movwf	20	;volatile
  7547  0815                     l186:
  7548  0815  0008               	return
  7549  0816                     __end_of_spiInit:
  7550                           
  7551                           	psect	text24
  7552  1976                     __ptext24:	
  7553 ;; *************** function _setup *****************
  7554 ;; Defined at:
  7555 ;;		line 131 in file "main.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;		None
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      void 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7569 ;;      Params:         0       0       0       0       0
  7570 ;;      Locals:         0       0       0       0       0
  7571 ;;      Temps:          0       0       0       0       0
  7572 ;;      Totals:         0       0       0       0       0
  7573 ;;Total ram usage:        0 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    1
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_main
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           
  7584                           ;psect for function _setup
  7585  1976                     _setup:
  7586  1976                     l3219:	
  7587                           ;incstack = 0
  7588                           ; Regs used in _setup: [wreg+status,2]
  7589                           
  7590                           
  7591                           ;main.c: 132:     TRISD = 0b00000000;
  7592  1976  1683               	bsf	3,5	;RP0=1, select bank1
  7593  1977  1303               	bcf	3,6	;RP1=0, select bank1
  7594  1978  0188               	clrf	8	;volatile
  7595  1979                     l3221:
  7596                           
  7597                           ;main.c: 133:     TRISC = 0b10010000;
  7598  1979  3090               	movlw	144
  7599  197A  0087               	movwf	7	;volatile
  7600  197B                     l3223:
  7601                           
  7602                           ;main.c: 134:     TRISE = 0b00000000;
  7603  197B  0189               	clrf	9	;volatile
  7604  197C                     l3225:
  7605                           
  7606                           ;main.c: 135:     TRISB = 0b00000000;
  7607  197C  0186               	clrf	6	;volatile
  7608  197D                     l3227:
  7609                           
  7610                           ;main.c: 136:     ANSEL = 0b00000011;
  7611  197D  3003               	movlw	3
  7612  197E  1683               	bsf	3,5	;RP0=1, select bank3
  7613  197F  1703               	bsf	3,6	;RP1=1, select bank3
  7614  1980  0088               	movwf	8	;volatile
  7615                           
  7616                           ;main.c: 137:     PORTC = 0;
  7617  1981  1283               	bcf	3,5	;RP0=0, select bank0
  7618  1982  1303               	bcf	3,6	;RP1=0, select bank0
  7619  1983  0187               	clrf	7	;volatile
  7620                           
  7621                           ;main.c: 138:     PORTD = 0;
  7622  1984  0188               	clrf	8	;volatile
  7623                           
  7624                           ;main.c: 139:     PORTE = 0;
  7625  1985  0189               	clrf	9	;volatile
  7626                           
  7627                           ;main.c: 140:     PORTB = 0;
  7628  1986  0186               	clrf	6	;volatile
  7629  1987                     l89:
  7630  1987  0008               	return
  7631  1988                     __end_of_setup:
  7632                           
  7633                           	psect	text25
  7634  1942                     __ptext25:	
  7635 ;; *************** function _recibir *****************
  7636 ;; Defined at:
  7637 ;;		line 40 in file "USART.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;		None
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;		None
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  1    wreg      void 
  7644 ;; Registers used:
  7645 ;;		None
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7651 ;;      Params:         0       0       0       0       0
  7652 ;;      Locals:         0       0       0       0       0
  7653 ;;      Temps:          0       0       0       0       0
  7654 ;;      Totals:         0       0       0       0       0
  7655 ;;Total ram usage:        0 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    1
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_main
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           
  7666                           ;psect for function _recibir
  7667  1942                     _recibir:
  7668  1942                     l3239:	
  7669                           ;incstack = 0
  7670                           ; Regs used in _recibir: []
  7671                           
  7672                           
  7673                           ;USART.c: 41:     RCSTAbits.CREN = 1;
  7674  1942  1283               	bcf	3,5	;RP0=0, select bank0
  7675  1943  1303               	bcf	3,6	;RP1=0, select bank0
  7676  1944  1618               	bsf	24,4	;volatile
  7677                           
  7678                           ;USART.c: 42:     RCSTAbits.FERR = 0;
  7679  1945  1118               	bcf	24,2	;volatile
  7680                           
  7681                           ;USART.c: 43:     PIE1bits.RCIE = 1;
  7682  1946  1683               	bsf	3,5	;RP0=1, select bank1
  7683  1947  1303               	bcf	3,6	;RP1=0, select bank1
  7684  1948  168C               	bsf	12,5	;volatile
  7685                           
  7686                           ;USART.c: 44:     RCSTAbits.OERR = 0;
  7687  1949  1283               	bcf	3,5	;RP0=0, select bank0
  7688  194A  1303               	bcf	3,6	;RP1=0, select bank0
  7689  194B  1098               	bcf	24,1	;volatile
  7690  194C                     l173:
  7691  194C  0008               	return
  7692  194D                     __end_of_recibir:
  7693                           
  7694                           	psect	text26
  7695  1005                     __ptext26:	
  7696 ;; *************** function _conversor *****************
  7697 ;; Defined at:
  7698 ;;		line 148 in file "main.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;  val             1    wreg     unsigned char 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;  val             1   45[BANK0 ] unsigned char 
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  4   37[BANK0 ] unsigned char 
  7705 ;; Registers used:
  7706 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7712 ;;      Params:         0       4       0       0       0
  7713 ;;      Locals:         0       1       0       0       0
  7714 ;;      Temps:          0       4       0       0       0
  7715 ;;      Totals:         0       9       0       0       0
  7716 ;;Total ram usage:        9 bytes
  7717 ;; Hardware stack levels used:    1
  7718 ;; Hardware stack levels required when called:    3
  7719 ;; This function calls:
  7720 ;;		___flmul
  7721 ;;		___xxtofl
  7722 ;; This function is called by:
  7723 ;;		_main
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           
  7728                           ;psect for function _conversor
  7729  1005                     _conversor:
  7730                           
  7731                           ;incstack = 0
  7732                           ; Regs used in _conversor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7733                           ;conversor@val stored from wreg
  7734  1005  1283               	bcf	3,5	;RP0=0, select bank0
  7735  1006  1303               	bcf	3,6	;RP1=0, select bank0
  7736  1007  00CD               	movwf	conversor@val
  7737  1008                     l4199:
  7738                           
  7739                           ;main.c: 149:     x = 0.0195 * val;
  7740  1008  303C               	movlw	60
  7741  1009  00AE               	movwf	___flmul@b+3
  7742  100A  309F               	movlw	159
  7743  100B  00AD               	movwf	___flmul@b+2
  7744  100C  30BE               	movlw	190
  7745  100D  00AC               	movwf	___flmul@b+1
  7746  100E  3077               	movlw	119
  7747  100F  00AB               	movwf	___flmul@b
  7748  1010  084D               	movf	conversor@val,w
  7749  1011  00C9               	movwf	??_conversor
  7750  1012  01CA               	clrf	??_conversor+1
  7751  1013  01CB               	clrf	??_conversor+2
  7752  1014  01CC               	clrf	??_conversor+3
  7753  1015  084C               	movf	??_conversor+3,w
  7754  1016  00F6               	movwf	___xxtofl@val+3
  7755  1017  084B               	movf	??_conversor+2,w
  7756  1018  00F5               	movwf	___xxtofl@val+2
  7757  1019  084A               	movf	??_conversor+1,w
  7758  101A  00F4               	movwf	___xxtofl@val+1
  7759  101B  0849               	movf	??_conversor,w
  7760  101C  00F3               	movwf	___xxtofl@val
  7761  101D  3001               	movlw	1
  7762  101E  160A  158A  25B9  160A  118A  	fcall	___xxtofl
  7763  1023  0876               	movf	?___xxtofl+3,w
  7764  1024  1283               	bcf	3,5	;RP0=0, select bank0
  7765  1025  1303               	bcf	3,6	;RP1=0, select bank0
  7766  1026  00B2               	movwf	___flmul@a+3
  7767  1027  0875               	movf	?___xxtofl+2,w
  7768  1028  00B1               	movwf	___flmul@a+2
  7769  1029  0874               	movf	?___xxtofl+1,w
  7770  102A  00B0               	movwf	___flmul@a+1
  7771  102B  0873               	movf	?___xxtofl,w
  7772  102C  00AF               	movwf	___flmul@a
  7773  102D  120A  158A  213C  160A  118A  	fcall	___flmul
  7774  1032  1283               	bcf	3,5	;RP0=0, select bank0
  7775  1033  1303               	bcf	3,6	;RP1=0, select bank0
  7776  1034  082E               	movf	?___flmul+3,w
  7777  1035  1683               	bsf	3,5	;RP0=1, select bank1
  7778  1036  1303               	bcf	3,6	;RP1=0, select bank1
  7779  1037  00D0               	movwf	(_x+3)^(0+128)
  7780  1038  1283               	bcf	3,5	;RP0=0, select bank0
  7781  1039  1303               	bcf	3,6	;RP1=0, select bank0
  7782  103A  082D               	movf	?___flmul+2,w
  7783  103B  1683               	bsf	3,5	;RP0=1, select bank1
  7784  103C  1303               	bcf	3,6	;RP1=0, select bank1
  7785  103D  00CF               	movwf	(_x+2)^(0+128)
  7786  103E  1283               	bcf	3,5	;RP0=0, select bank0
  7787  103F  1303               	bcf	3,6	;RP1=0, select bank0
  7788  1040  082C               	movf	?___flmul+1,w
  7789  1041  1683               	bsf	3,5	;RP0=1, select bank1
  7790  1042  1303               	bcf	3,6	;RP1=0, select bank1
  7791  1043  00CE               	movwf	(_x+1)^(0+128)
  7792  1044  1283               	bcf	3,5	;RP0=0, select bank0
  7793  1045  1303               	bcf	3,6	;RP1=0, select bank0
  7794  1046  082B               	movf	?___flmul,w
  7795  1047  1683               	bsf	3,5	;RP0=1, select bank1
  7796  1048  1303               	bcf	3,6	;RP1=0, select bank1
  7797  1049  00CD               	movwf	_x^(0+128)
  7798  104A                     l4201:
  7799                           
  7800                           ;main.c: 150:     return (x);
  7801  104A  0850               	movf	(_x+3)^(0+128),w
  7802  104B  1283               	bcf	3,5	;RP0=0, select bank0
  7803  104C  1303               	bcf	3,6	;RP1=0, select bank0
  7804  104D  00C8               	movwf	?_conversor+3
  7805  104E  1683               	bsf	3,5	;RP0=1, select bank1
  7806  104F  1303               	bcf	3,6	;RP1=0, select bank1
  7807  1050  084F               	movf	(_x+2)^(0+128),w
  7808  1051  1283               	bcf	3,5	;RP0=0, select bank0
  7809  1052  1303               	bcf	3,6	;RP1=0, select bank0
  7810  1053  00C7               	movwf	?_conversor+2
  7811  1054  1683               	bsf	3,5	;RP0=1, select bank1
  7812  1055  1303               	bcf	3,6	;RP1=0, select bank1
  7813  1056  084E               	movf	(_x+1)^(0+128),w
  7814  1057  1283               	bcf	3,5	;RP0=0, select bank0
  7815  1058  1303               	bcf	3,6	;RP1=0, select bank0
  7816  1059  00C6               	movwf	?_conversor+1
  7817  105A  1683               	bsf	3,5	;RP0=1, select bank1
  7818  105B  1303               	bcf	3,6	;RP1=0, select bank1
  7819  105C  084D               	movf	_x^(0+128),w
  7820  105D  1283               	bcf	3,5	;RP0=0, select bank0
  7821  105E  1303               	bcf	3,6	;RP1=0, select bank0
  7822  105F  00C5               	movwf	?_conversor
  7823  1060                     l92:
  7824  1060  0008               	return
  7825  1061                     __end_of_conversor:
  7826                           
  7827                           	psect	text27
  7828  1DB9                     __ptext27:	
  7829 ;; *************** function ___xxtofl *****************
  7830 ;; Defined at:
  7831 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  sign            1    wreg     unsigned char 
  7834 ;;  val             4    3[COMMON] long 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  sign            1    4[BANK0 ] unsigned char 
  7837 ;;  arg             4    6[BANK0 ] unsigned long 
  7838 ;;  exp             1    5[BANK0 ] unsigned char 
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  4    3[COMMON] unsigned char 
  7841 ;; Registers used:
  7842 ;;		wreg, status,2, status,0
  7843 ;; Tracked objects:
  7844 ;;		On entry : 0/0
  7845 ;;		On exit  : 0/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7848 ;;      Params:         4       0       0       0       0
  7849 ;;      Locals:         0       6       0       0       0
  7850 ;;      Temps:          0       4       0       0       0
  7851 ;;      Totals:         4      10       0       0       0
  7852 ;;Total ram usage:       14 bytes
  7853 ;; Hardware stack levels used:    1
  7854 ;; Hardware stack levels required when called:    1
  7855 ;; This function calls:
  7856 ;;		Nothing
  7857 ;; This function is called by:
  7858 ;;		_conversor
  7859 ;;		_sprintf
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           
  7864                           ;psect for function ___xxtofl
  7865  1DB9                     ___xxtofl:
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7869                           ;___xxtofl@sign stored from wreg
  7870  1DB9  1283               	bcf	3,5	;RP0=0, select bank0
  7871  1DBA  1303               	bcf	3,6	;RP1=0, select bank0
  7872  1DBB  00A4               	movwf	___xxtofl@sign
  7873  1DBC                     l4123:
  7874  1DBC  0824               	movf	___xxtofl@sign,w
  7875  1DBD  1903               	btfsc	3,2
  7876  1DBE  2DC0               	goto	u6861
  7877  1DBF  2DC1               	goto	u6860
  7878  1DC0                     u6861:
  7879  1DC0  2DD5               	goto	l4129
  7880  1DC1                     u6860:
  7881  1DC1                     l4125:
  7882  1DC1  1FF6               	btfss	___xxtofl@val+3,7
  7883  1DC2  2DC4               	goto	u6871
  7884  1DC3  2DC5               	goto	u6870
  7885  1DC4                     u6871:
  7886  1DC4  2DD5               	goto	l4129
  7887  1DC5                     u6870:
  7888  1DC5                     l4127:
  7889  1DC5  0973               	comf	___xxtofl@val,w
  7890  1DC6  00A6               	movwf	___xxtofl@arg
  7891  1DC7  0974               	comf	___xxtofl@val+1,w
  7892  1DC8  00A7               	movwf	___xxtofl@arg+1
  7893  1DC9  0975               	comf	___xxtofl@val+2,w
  7894  1DCA  00A8               	movwf	___xxtofl@arg+2
  7895  1DCB  0976               	comf	___xxtofl@val+3,w
  7896  1DCC  00A9               	movwf	___xxtofl@arg+3
  7897  1DCD  0AA6               	incf	___xxtofl@arg,f
  7898  1DCE  1903               	skipnz
  7899  1DCF  0AA7               	incf	___xxtofl@arg+1,f
  7900  1DD0  1903               	skipnz
  7901  1DD1  0AA8               	incf	___xxtofl@arg+2,f
  7902  1DD2  1903               	skipnz
  7903  1DD3  0AA9               	incf	___xxtofl@arg+3,f
  7904  1DD4  2DDD               	goto	l875
  7905  1DD5                     l4129:
  7906  1DD5  0876               	movf	___xxtofl@val+3,w
  7907  1DD6  00A9               	movwf	___xxtofl@arg+3
  7908  1DD7  0875               	movf	___xxtofl@val+2,w
  7909  1DD8  00A8               	movwf	___xxtofl@arg+2
  7910  1DD9  0874               	movf	___xxtofl@val+1,w
  7911  1DDA  00A7               	movwf	___xxtofl@arg+1
  7912  1DDB  0873               	movf	___xxtofl@val,w
  7913  1DDC  00A6               	movwf	___xxtofl@arg
  7914  1DDD                     l875:
  7915  1DDD  0876               	movf	___xxtofl@val+3,w
  7916  1DDE  0475               	iorwf	___xxtofl@val+2,w
  7917  1DDF  0474               	iorwf	___xxtofl@val+1,w
  7918  1DE0  0473               	iorwf	___xxtofl@val,w
  7919  1DE1  1D03               	skipz
  7920  1DE2  2DE4               	goto	u6881
  7921  1DE3  2DE5               	goto	u6880
  7922  1DE4                     u6881:
  7923  1DE4  2DEE               	goto	l4135
  7924  1DE5                     u6880:
  7925  1DE5                     l4131:
  7926  1DE5  3000               	movlw	0
  7927  1DE6  00F6               	movwf	?___xxtofl+3
  7928  1DE7  3000               	movlw	0
  7929  1DE8  00F5               	movwf	?___xxtofl+2
  7930  1DE9  3000               	movlw	0
  7931  1DEA  00F4               	movwf	?___xxtofl+1
  7932  1DEB  3000               	movlw	0
  7933  1DEC  00F3               	movwf	?___xxtofl
  7934  1DED  2E74               	goto	l877
  7935  1DEE                     l4135:
  7936  1DEE  3096               	movlw	150
  7937  1DEF  00A0               	movwf	??___xxtofl
  7938  1DF0  0820               	movf	??___xxtofl,w
  7939  1DF1  00A5               	movwf	___xxtofl@exp
  7940  1DF2  2E00               	goto	l4139
  7941  1DF3                     l4137:
  7942  1DF3  3001               	movlw	1
  7943  1DF4  00A0               	movwf	??___xxtofl
  7944  1DF5  0820               	movf	??___xxtofl,w
  7945  1DF6  07A5               	addwf	___xxtofl@exp,f
  7946  1DF7  3001               	movlw	1
  7947  1DF8                     u6895:
  7948  1DF8  1003               	clrc
  7949  1DF9  0CA9               	rrf	___xxtofl@arg+3,f
  7950  1DFA  0CA8               	rrf	___xxtofl@arg+2,f
  7951  1DFB  0CA7               	rrf	___xxtofl@arg+1,f
  7952  1DFC  0CA6               	rrf	___xxtofl@arg,f
  7953  1DFD  3EFF               	addlw	-1
  7954  1DFE  1D03               	skipz
  7955  1DFF  2DF8               	goto	u6895
  7956  1E00                     l4139:
  7957  1E00  30FE               	movlw	254
  7958  1E01  0529               	andwf	___xxtofl@arg+3,w
  7959  1E02  1D03               	btfss	3,2
  7960  1E03  2E05               	goto	u6901
  7961  1E04  2E06               	goto	u6900
  7962  1E05                     u6901:
  7963  1E05  2DF3               	goto	l4137
  7964  1E06                     u6900:
  7965  1E06  2E22               	goto	l881
  7966  1E07                     l4141:
  7967  1E07  3001               	movlw	1
  7968  1E08  00A0               	movwf	??___xxtofl
  7969  1E09  0820               	movf	??___xxtofl,w
  7970  1E0A  07A5               	addwf	___xxtofl@exp,f
  7971  1E0B                     l4143:
  7972  1E0B  3001               	movlw	1
  7973  1E0C  07A6               	addwf	___xxtofl@arg,f
  7974  1E0D  3000               	movlw	0
  7975  1E0E  1803               	skipnc
  7976  1E0F  3001               	movlw	1
  7977  1E10  07A7               	addwf	___xxtofl@arg+1,f
  7978  1E11  3000               	movlw	0
  7979  1E12  1803               	skipnc
  7980  1E13  3001               	movlw	1
  7981  1E14  07A8               	addwf	___xxtofl@arg+2,f
  7982  1E15  3000               	movlw	0
  7983  1E16  1803               	skipnc
  7984  1E17  3001               	movlw	1
  7985  1E18  07A9               	addwf	___xxtofl@arg+3,f
  7986  1E19                     l4145:
  7987  1E19  3001               	movlw	1
  7988  1E1A                     u6915:
  7989  1E1A  1003               	clrc
  7990  1E1B  0CA9               	rrf	___xxtofl@arg+3,f
  7991  1E1C  0CA8               	rrf	___xxtofl@arg+2,f
  7992  1E1D  0CA7               	rrf	___xxtofl@arg+1,f
  7993  1E1E  0CA6               	rrf	___xxtofl@arg,f
  7994  1E1F  3EFF               	addlw	-1
  7995  1E20  1D03               	skipz
  7996  1E21  2E1A               	goto	u6915
  7997  1E22                     l881:
  7998  1E22  30FF               	movlw	255
  7999  1E23  0529               	andwf	___xxtofl@arg+3,w
  8000  1E24  1D03               	btfss	3,2
  8001  1E25  2E27               	goto	u6921
  8002  1E26  2E28               	goto	u6920
  8003  1E27                     u6921:
  8004  1E27  2E07               	goto	l4141
  8005  1E28                     u6920:
  8006  1E28  2E34               	goto	l4149
  8007  1E29                     l4147:
  8008  1E29  3001               	movlw	1
  8009  1E2A  02A5               	subwf	___xxtofl@exp,f
  8010  1E2B  3001               	movlw	1
  8011  1E2C  00A0               	movwf	??___xxtofl
  8012  1E2D                     u6935:
  8013  1E2D  1003               	clrc
  8014  1E2E  0DA6               	rlf	___xxtofl@arg,f
  8015  1E2F  0DA7               	rlf	___xxtofl@arg+1,f
  8016  1E30  0DA8               	rlf	___xxtofl@arg+2,f
  8017  1E31  0DA9               	rlf	___xxtofl@arg+3,f
  8018  1E32  0BA0               	decfsz	??___xxtofl,f
  8019  1E33  2E2D               	goto	u6935
  8020  1E34                     l4149:
  8021  1E34  1BA8               	btfsc	___xxtofl@arg+2,7
  8022  1E35  2E37               	goto	u6941
  8023  1E36  2E38               	goto	u6940
  8024  1E37                     u6941:
  8025  1E37  2E3E               	goto	l888
  8026  1E38                     u6940:
  8027  1E38                     l4151:
  8028  1E38  3002               	movlw	2
  8029  1E39  0225               	subwf	___xxtofl@exp,w
  8030  1E3A  1803               	skipnc
  8031  1E3B  2E3D               	goto	u6951
  8032  1E3C  2E3E               	goto	u6950
  8033  1E3D                     u6951:
  8034  1E3D  2E29               	goto	l4147
  8035  1E3E                     u6950:
  8036  1E3E                     l888:
  8037  1E3E  1825               	btfsc	___xxtofl@exp,0
  8038  1E3F  2E41               	goto	u6961
  8039  1E40  2E42               	goto	u6960
  8040  1E41                     u6961:
  8041  1E41  2E4A               	goto	l889
  8042  1E42                     u6960:
  8043  1E42                     l4153:
  8044  1E42  30FF               	movlw	255
  8045  1E43  05A6               	andwf	___xxtofl@arg,f
  8046  1E44  30FF               	movlw	255
  8047  1E45  05A7               	andwf	___xxtofl@arg+1,f
  8048  1E46  307F               	movlw	127
  8049  1E47  05A8               	andwf	___xxtofl@arg+2,f
  8050  1E48  30FF               	movlw	255
  8051  1E49  05A9               	andwf	___xxtofl@arg+3,f
  8052  1E4A                     l889:
  8053  1E4A  1003               	clrc
  8054  1E4B  0CA5               	rrf	___xxtofl@exp,f
  8055  1E4C                     l4155:
  8056  1E4C  0825               	movf	___xxtofl@exp,w
  8057  1E4D  00A0               	movwf	??___xxtofl
  8058  1E4E  01A1               	clrf	??___xxtofl+1
  8059  1E4F  01A2               	clrf	??___xxtofl+2
  8060  1E50  01A3               	clrf	??___xxtofl+3
  8061  1E51  3018               	movlw	24
  8062  1E52                     u6975:
  8063  1E52  1003               	clrc
  8064  1E53  0DA0               	rlf	??___xxtofl,f
  8065  1E54  0DA1               	rlf	??___xxtofl+1,f
  8066  1E55  0DA2               	rlf	??___xxtofl+2,f
  8067  1E56  0DA3               	rlf	??___xxtofl+3,f
  8068  1E57                     u6970:
  8069  1E57  3EFF               	addlw	-1
  8070  1E58  1D03               	skipz
  8071  1E59  2E52               	goto	u6975
  8072  1E5A  0820               	movf	??___xxtofl,w
  8073  1E5B  04A6               	iorwf	___xxtofl@arg,f
  8074  1E5C  0821               	movf	??___xxtofl+1,w
  8075  1E5D  04A7               	iorwf	___xxtofl@arg+1,f
  8076  1E5E  0822               	movf	??___xxtofl+2,w
  8077  1E5F  04A8               	iorwf	___xxtofl@arg+2,f
  8078  1E60  0823               	movf	??___xxtofl+3,w
  8079  1E61  04A9               	iorwf	___xxtofl@arg+3,f
  8080  1E62                     l4157:
  8081  1E62  0824               	movf	___xxtofl@sign,w
  8082  1E63  1903               	btfsc	3,2
  8083  1E64  2E66               	goto	u6981
  8084  1E65  2E67               	goto	u6980
  8085  1E66                     u6981:
  8086  1E66  2E6C               	goto	l4163
  8087  1E67                     u6980:
  8088  1E67                     l4159:
  8089  1E67  1FF6               	btfss	___xxtofl@val+3,7
  8090  1E68  2E6A               	goto	u6991
  8091  1E69  2E6B               	goto	u6990
  8092  1E6A                     u6991:
  8093  1E6A  2E6C               	goto	l4163
  8094  1E6B                     u6990:
  8095  1E6B                     l4161:
  8096  1E6B  17A9               	bsf	___xxtofl@arg+3,7
  8097  1E6C                     l4163:
  8098  1E6C  0829               	movf	___xxtofl@arg+3,w
  8099  1E6D  00F6               	movwf	?___xxtofl+3
  8100  1E6E  0828               	movf	___xxtofl@arg+2,w
  8101  1E6F  00F5               	movwf	?___xxtofl+2
  8102  1E70  0827               	movf	___xxtofl@arg+1,w
  8103  1E71  00F4               	movwf	?___xxtofl+1
  8104  1E72  0826               	movf	___xxtofl@arg,w
  8105  1E73  00F3               	movwf	?___xxtofl
  8106  1E74                     l877:
  8107  1E74  0008               	return
  8108  1E75                     __end_of___xxtofl:
  8109                           
  8110                           	psect	text28
  8111  093C                     __ptext28:	
  8112 ;; *************** function ___flmul *****************
  8113 ;; Defined at:
  8114 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  b               4   11[BANK0 ] unsigned char 
  8117 ;;  a               4   15[BANK0 ] unsigned char 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  prod            4   31[BANK0 ] struct .
  8120 ;;  grs             4   25[BANK0 ] unsigned long 
  8121 ;;  temp            2   35[BANK0 ] struct .
  8122 ;;  bexp            1   30[BANK0 ] unsigned char 
  8123 ;;  aexp            1   29[BANK0 ] unsigned char 
  8124 ;;  sign            1   24[BANK0 ] unsigned char 
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  4   11[BANK0 ] unsigned char 
  8127 ;; Registers used:
  8128 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8134 ;;      Params:         0       8       0       0       0
  8135 ;;      Locals:         0      13       0       0       0
  8136 ;;      Temps:          0       5       0       0       0
  8137 ;;      Totals:         0      26       0       0       0
  8138 ;;Total ram usage:       26 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; Hardware stack levels required when called:    2
  8141 ;; This function calls:
  8142 ;;		__Umul8_16
  8143 ;; This function is called by:
  8144 ;;		_conversor
  8145 ;;		_fround
  8146 ;;		_scale
  8147 ;;		_sprintf
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           
  8152                           ;psect for function ___flmul
  8153  093C                     ___flmul:
  8154  093C                     l2697:	
  8155                           ;incstack = 0
  8156                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8157                           
  8158  093C  1283               	bcf	3,5	;RP0=0, select bank0
  8159  093D  1303               	bcf	3,6	;RP1=0, select bank0
  8160  093E  082E               	movf	___flmul@b+3,w
  8161  093F  3980               	andlw	128
  8162  0940  00B3               	movwf	??___flmul
  8163  0941  0833               	movf	??___flmul,w
  8164  0942  00B8               	movwf	___flmul@sign
  8165  0943                     l2699:
  8166  0943  082E               	movf	___flmul@b+3,w
  8167  0944  00B3               	movwf	??___flmul
  8168  0945  0733               	addwf	??___flmul,w
  8169  0946  00B4               	movwf	??___flmul+1
  8170  0947  0834               	movf	??___flmul+1,w
  8171  0948  00BE               	movwf	___flmul@bexp
  8172  0949                     l2701:
  8173  0949  1FAD               	btfss	___flmul@b+2,7
  8174  094A  294C               	goto	u3721
  8175  094B  294D               	goto	u3720
  8176  094C                     u3721:
  8177  094C  294E               	goto	l2705
  8178  094D                     u3720:
  8179  094D                     l2703:
  8180  094D  143E               	bsf	___flmul@bexp,0
  8181  094E                     l2705:
  8182  094E  083E               	movf	___flmul@bexp,w
  8183  094F  1903               	btfsc	3,2
  8184  0950  2952               	goto	u3731
  8185  0951  2953               	goto	u3730
  8186  0952                     u3731:
  8187  0952  2962               	goto	l2713
  8188  0953                     u3730:
  8189  0953                     l2707:
  8190  0953  0A3E               	incf	___flmul@bexp,w
  8191  0954  1D03               	btfss	3,2
  8192  0955  2957               	goto	u3741
  8193  0956  2958               	goto	u3740
  8194  0957                     u3741:
  8195  0957  2960               	goto	l2711
  8196  0958                     u3740:
  8197  0958                     l2709:
  8198  0958  3000               	movlw	0
  8199  0959  00AE               	movwf	___flmul@b+3
  8200  095A  3000               	movlw	0
  8201  095B  00AD               	movwf	___flmul@b+2
  8202  095C  3000               	movlw	0
  8203  095D  00AC               	movwf	___flmul@b+1
  8204  095E  3000               	movlw	0
  8205  095F  00AB               	movwf	___flmul@b
  8206  0960                     l2711:
  8207  0960  17AD               	bsf	___flmul@b+2,7
  8208  0961  296A               	goto	l2715
  8209  0962                     l2713:
  8210  0962  3000               	movlw	0
  8211  0963  00AE               	movwf	___flmul@b+3
  8212  0964  3000               	movlw	0
  8213  0965  00AD               	movwf	___flmul@b+2
  8214  0966  3000               	movlw	0
  8215  0967  00AC               	movwf	___flmul@b+1
  8216  0968  3000               	movlw	0
  8217  0969  00AB               	movwf	___flmul@b
  8218  096A                     l2715:
  8219  096A  0832               	movf	___flmul@a+3,w
  8220  096B  3980               	andlw	128
  8221  096C  00B3               	movwf	??___flmul
  8222  096D  0833               	movf	??___flmul,w
  8223  096E  06B8               	xorwf	___flmul@sign,f
  8224  096F                     l2717:
  8225  096F  0832               	movf	___flmul@a+3,w
  8226  0970  00B3               	movwf	??___flmul
  8227  0971  0733               	addwf	??___flmul,w
  8228  0972  00B4               	movwf	??___flmul+1
  8229  0973  0834               	movf	??___flmul+1,w
  8230  0974  00BD               	movwf	___flmul@aexp
  8231  0975                     l2719:
  8232  0975  1FB1               	btfss	___flmul@a+2,7
  8233  0976  2978               	goto	u3751
  8234  0977  2979               	goto	u3750
  8235  0978                     u3751:
  8236  0978  297A               	goto	l2723
  8237  0979                     u3750:
  8238  0979                     l2721:
  8239  0979  143D               	bsf	___flmul@aexp,0
  8240  097A                     l2723:
  8241  097A  083D               	movf	___flmul@aexp,w
  8242  097B  1903               	btfsc	3,2
  8243  097C  297E               	goto	u3761
  8244  097D  297F               	goto	u3760
  8245  097E                     u3761:
  8246  097E  298E               	goto	l2731
  8247  097F                     u3760:
  8248  097F                     l2725:
  8249  097F  0A3D               	incf	___flmul@aexp,w
  8250  0980  1D03               	btfss	3,2
  8251  0981  2983               	goto	u3771
  8252  0982  2984               	goto	u3770
  8253  0983                     u3771:
  8254  0983  298C               	goto	l2729
  8255  0984                     u3770:
  8256  0984                     l2727:
  8257  0984  3000               	movlw	0
  8258  0985  00B2               	movwf	___flmul@a+3
  8259  0986  3000               	movlw	0
  8260  0987  00B1               	movwf	___flmul@a+2
  8261  0988  3000               	movlw	0
  8262  0989  00B0               	movwf	___flmul@a+1
  8263  098A  3000               	movlw	0
  8264  098B  00AF               	movwf	___flmul@a
  8265  098C                     l2729:
  8266  098C  17B1               	bsf	___flmul@a+2,7
  8267  098D  2996               	goto	l2733
  8268  098E                     l2731:
  8269  098E  3000               	movlw	0
  8270  098F  00B2               	movwf	___flmul@a+3
  8271  0990  3000               	movlw	0
  8272  0991  00B1               	movwf	___flmul@a+2
  8273  0992  3000               	movlw	0
  8274  0993  00B0               	movwf	___flmul@a+1
  8275  0994  3000               	movlw	0
  8276  0995  00AF               	movwf	___flmul@a
  8277  0996                     l2733:
  8278  0996  083D               	movf	___flmul@aexp,w
  8279  0997  1903               	btfsc	3,2
  8280  0998  299A               	goto	u3781
  8281  0999  299B               	goto	u3780
  8282  099A                     u3781:
  8283  099A  29A0               	goto	l2737
  8284  099B                     u3780:
  8285  099B                     l2735:
  8286  099B  083E               	movf	___flmul@bexp,w
  8287  099C  1D03               	btfss	3,2
  8288  099D  299F               	goto	u3791
  8289  099E  29A0               	goto	u3790
  8290  099F                     u3791:
  8291  099F  29A9               	goto	l2741
  8292  09A0                     u3790:
  8293  09A0                     l2737:
  8294  09A0  3000               	movlw	0
  8295  09A1  00AE               	movwf	?___flmul+3
  8296  09A2  3000               	movlw	0
  8297  09A3  00AD               	movwf	?___flmul+2
  8298  09A4  3000               	movlw	0
  8299  09A5  00AC               	movwf	?___flmul+1
  8300  09A6  3000               	movlw	0
  8301  09A7  00AB               	movwf	?___flmul
  8302  09A8  2C9C               	goto	l831
  8303  09A9                     l2741:
  8304  09A9  082B               	movf	___flmul@b,w
  8305  09AA  00B3               	movwf	??___flmul
  8306  09AB  0833               	movf	??___flmul,w
  8307  09AC  00F3               	movwf	__Umul8_16@multiplicand
  8308  09AD  0831               	movf	___flmul@a+2,w
  8309  09AE  160A  158A  21F9  120A  158A  	fcall	__Umul8_16
  8310  09B3  0874               	movf	?__Umul8_16+1,w
  8311  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  8312  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  8313  09B6  00C4               	movwf	___flmul@temp+1
  8314  09B7  0873               	movf	?__Umul8_16,w
  8315  09B8  00C3               	movwf	___flmul@temp
  8316  09B9                     l2743:
  8317  09B9  0843               	movf	___flmul@temp,w
  8318  09BA  00B3               	movwf	??___flmul
  8319  09BB  01B4               	clrf	??___flmul+1
  8320  09BC  01B5               	clrf	??___flmul+2
  8321  09BD  01B6               	clrf	??___flmul+3
  8322  09BE  0836               	movf	??___flmul+3,w
  8323  09BF  00BC               	movwf	___flmul@grs+3
  8324  09C0  0835               	movf	??___flmul+2,w
  8325  09C1  00BB               	movwf	___flmul@grs+2
  8326  09C2  0834               	movf	??___flmul+1,w
  8327  09C3  00BA               	movwf	___flmul@grs+1
  8328  09C4  0833               	movf	??___flmul,w
  8329  09C5  00B9               	movwf	___flmul@grs
  8330  09C6                     l2745:
  8331  09C6  0844               	movf	___flmul@temp+1,w
  8332  09C7  00B3               	movwf	??___flmul
  8333  09C8  01B4               	clrf	??___flmul+1
  8334  09C9  01B5               	clrf	??___flmul+2
  8335  09CA  01B6               	clrf	??___flmul+3
  8336  09CB  0836               	movf	??___flmul+3,w
  8337  09CC  00C2               	movwf	___flmul@prod+3
  8338  09CD  0835               	movf	??___flmul+2,w
  8339  09CE  00C1               	movwf	___flmul@prod+2
  8340  09CF  0834               	movf	??___flmul+1,w
  8341  09D0  00C0               	movwf	___flmul@prod+1
  8342  09D1  0833               	movf	??___flmul,w
  8343  09D2  00BF               	movwf	___flmul@prod
  8344  09D3  082C               	movf	___flmul@b+1,w
  8345  09D4  00B3               	movwf	??___flmul
  8346  09D5  0833               	movf	??___flmul,w
  8347  09D6  00F3               	movwf	__Umul8_16@multiplicand
  8348  09D7  0830               	movf	___flmul@a+1,w
  8349  09D8  160A  158A  21F9  120A  158A  	fcall	__Umul8_16
  8350  09DD  0874               	movf	?__Umul8_16+1,w
  8351  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  8352  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  8353  09E0  00C4               	movwf	___flmul@temp+1
  8354  09E1  0873               	movf	?__Umul8_16,w
  8355  09E2  00C3               	movwf	___flmul@temp
  8356  09E3                     l2747:
  8357  09E3  0843               	movf	___flmul@temp,w
  8358  09E4  00B3               	movwf	??___flmul
  8359  09E5  01B4               	clrf	??___flmul+1
  8360  09E6  01B5               	clrf	??___flmul+2
  8361  09E7  01B6               	clrf	??___flmul+3
  8362  09E8  0833               	movf	??___flmul,w
  8363  09E9  07B9               	addwf	___flmul@grs,f
  8364  09EA  0834               	movf	??___flmul+1,w
  8365  09EB  1103               	clrz
  8366  09EC  1803               	skipnc
  8367  09ED  3E01               	addlw	1
  8368  09EE  1903               	skipnz
  8369  09EF  29F1               	goto	u3801
  8370  09F0  07BA               	addwf	___flmul@grs+1,f
  8371  09F1                     u3801:
  8372  09F1  0835               	movf	??___flmul+2,w
  8373  09F2  1103               	clrz
  8374  09F3  1803               	skipnc
  8375  09F4  3E01               	addlw	1
  8376  09F5  1903               	skipnz
  8377  09F6  29F8               	goto	u3802
  8378  09F7  07BB               	addwf	___flmul@grs+2,f
  8379  09F8                     u3802:
  8380  09F8  0836               	movf	??___flmul+3,w
  8381  09F9  1103               	clrz
  8382  09FA  1803               	skipnc
  8383  09FB  3E01               	addlw	1
  8384  09FC  1903               	skipnz
  8385  09FD  29FF               	goto	u3803
  8386  09FE  07BC               	addwf	___flmul@grs+3,f
  8387  09FF                     u3803:
  8388  09FF                     l2749:
  8389  09FF  0844               	movf	___flmul@temp+1,w
  8390  0A00  00B3               	movwf	??___flmul
  8391  0A01  01B4               	clrf	??___flmul+1
  8392  0A02  01B5               	clrf	??___flmul+2
  8393  0A03  01B6               	clrf	??___flmul+3
  8394  0A04  0833               	movf	??___flmul,w
  8395  0A05  07BF               	addwf	___flmul@prod,f
  8396  0A06  0834               	movf	??___flmul+1,w
  8397  0A07  1103               	clrz
  8398  0A08  1803               	skipnc
  8399  0A09  3E01               	addlw	1
  8400  0A0A  1903               	skipnz
  8401  0A0B  2A0D               	goto	u3811
  8402  0A0C  07C0               	addwf	___flmul@prod+1,f
  8403  0A0D                     u3811:
  8404  0A0D  0835               	movf	??___flmul+2,w
  8405  0A0E  1103               	clrz
  8406  0A0F  1803               	skipnc
  8407  0A10  3E01               	addlw	1
  8408  0A11  1903               	skipnz
  8409  0A12  2A14               	goto	u3812
  8410  0A13  07C1               	addwf	___flmul@prod+2,f
  8411  0A14                     u3812:
  8412  0A14  0836               	movf	??___flmul+3,w
  8413  0A15  1103               	clrz
  8414  0A16  1803               	skipnc
  8415  0A17  3E01               	addlw	1
  8416  0A18  1903               	skipnz
  8417  0A19  2A1B               	goto	u3813
  8418  0A1A  07C2               	addwf	___flmul@prod+3,f
  8419  0A1B                     u3813:
  8420  0A1B  082D               	movf	___flmul@b+2,w
  8421  0A1C  00B3               	movwf	??___flmul
  8422  0A1D  0833               	movf	??___flmul,w
  8423  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  8424  0A1F  082F               	movf	___flmul@a,w
  8425  0A20  160A  158A  21F9  120A  158A  	fcall	__Umul8_16
  8426  0A25  0874               	movf	?__Umul8_16+1,w
  8427  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8428  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8429  0A28  00C4               	movwf	___flmul@temp+1
  8430  0A29  0873               	movf	?__Umul8_16,w
  8431  0A2A  00C3               	movwf	___flmul@temp
  8432  0A2B                     l2751:
  8433  0A2B  0843               	movf	___flmul@temp,w
  8434  0A2C  00B3               	movwf	??___flmul
  8435  0A2D  01B4               	clrf	??___flmul+1
  8436  0A2E  01B5               	clrf	??___flmul+2
  8437  0A2F  01B6               	clrf	??___flmul+3
  8438  0A30  0833               	movf	??___flmul,w
  8439  0A31  07B9               	addwf	___flmul@grs,f
  8440  0A32  0834               	movf	??___flmul+1,w
  8441  0A33  1103               	clrz
  8442  0A34  1803               	skipnc
  8443  0A35  3E01               	addlw	1
  8444  0A36  1903               	skipnz
  8445  0A37  2A39               	goto	u3821
  8446  0A38  07BA               	addwf	___flmul@grs+1,f
  8447  0A39                     u3821:
  8448  0A39  0835               	movf	??___flmul+2,w
  8449  0A3A  1103               	clrz
  8450  0A3B  1803               	skipnc
  8451  0A3C  3E01               	addlw	1
  8452  0A3D  1903               	skipnz
  8453  0A3E  2A40               	goto	u3822
  8454  0A3F  07BB               	addwf	___flmul@grs+2,f
  8455  0A40                     u3822:
  8456  0A40  0836               	movf	??___flmul+3,w
  8457  0A41  1103               	clrz
  8458  0A42  1803               	skipnc
  8459  0A43  3E01               	addlw	1
  8460  0A44  1903               	skipnz
  8461  0A45  2A47               	goto	u3823
  8462  0A46  07BC               	addwf	___flmul@grs+3,f
  8463  0A47                     u3823:
  8464  0A47                     l2753:
  8465  0A47  0844               	movf	___flmul@temp+1,w
  8466  0A48  00B3               	movwf	??___flmul
  8467  0A49  01B4               	clrf	??___flmul+1
  8468  0A4A  01B5               	clrf	??___flmul+2
  8469  0A4B  01B6               	clrf	??___flmul+3
  8470  0A4C  0833               	movf	??___flmul,w
  8471  0A4D  07BF               	addwf	___flmul@prod,f
  8472  0A4E  0834               	movf	??___flmul+1,w
  8473  0A4F  1103               	clrz
  8474  0A50  1803               	skipnc
  8475  0A51  3E01               	addlw	1
  8476  0A52  1903               	skipnz
  8477  0A53  2A55               	goto	u3831
  8478  0A54  07C0               	addwf	___flmul@prod+1,f
  8479  0A55                     u3831:
  8480  0A55  0835               	movf	??___flmul+2,w
  8481  0A56  1103               	clrz
  8482  0A57  1803               	skipnc
  8483  0A58  3E01               	addlw	1
  8484  0A59  1903               	skipnz
  8485  0A5A  2A5C               	goto	u3832
  8486  0A5B  07C1               	addwf	___flmul@prod+2,f
  8487  0A5C                     u3832:
  8488  0A5C  0836               	movf	??___flmul+3,w
  8489  0A5D  1103               	clrz
  8490  0A5E  1803               	skipnc
  8491  0A5F  3E01               	addlw	1
  8492  0A60  1903               	skipnz
  8493  0A61  2A63               	goto	u3833
  8494  0A62  07C2               	addwf	___flmul@prod+3,f
  8495  0A63                     u3833:
  8496  0A63                     l2755:
  8497  0A63  3008               	movlw	8
  8498  0A64  00B3               	movwf	??___flmul
  8499  0A65                     u3845:
  8500  0A65  1003               	clrc
  8501  0A66  0DB9               	rlf	___flmul@grs,f
  8502  0A67  0DBA               	rlf	___flmul@grs+1,f
  8503  0A68  0DBB               	rlf	___flmul@grs+2,f
  8504  0A69  0DBC               	rlf	___flmul@grs+3,f
  8505  0A6A  0BB3               	decfsz	??___flmul,f
  8506  0A6B  2A65               	goto	u3845
  8507  0A6C                     l2757:
  8508  0A6C  082C               	movf	___flmul@b+1,w
  8509  0A6D  00B3               	movwf	??___flmul
  8510  0A6E  0833               	movf	??___flmul,w
  8511  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  8512  0A70  082F               	movf	___flmul@a,w
  8513  0A71  160A  158A  21F9  120A  158A  	fcall	__Umul8_16
  8514  0A76  0874               	movf	?__Umul8_16+1,w
  8515  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8516  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8517  0A79  00C4               	movwf	___flmul@temp+1
  8518  0A7A  0873               	movf	?__Umul8_16,w
  8519  0A7B  00C3               	movwf	___flmul@temp
  8520  0A7C                     l2759:
  8521  0A7C  0843               	movf	___flmul@temp,w
  8522  0A7D  00B3               	movwf	??___flmul
  8523  0A7E  0844               	movf	___flmul@temp+1,w
  8524  0A7F  00B4               	movwf	??___flmul+1
  8525  0A80  01B5               	clrf	??___flmul+2
  8526  0A81  01B6               	clrf	??___flmul+3
  8527  0A82  0833               	movf	??___flmul,w
  8528  0A83  07B9               	addwf	___flmul@grs,f
  8529  0A84  0834               	movf	??___flmul+1,w
  8530  0A85  1103               	clrz
  8531  0A86  1803               	skipnc
  8532  0A87  3E01               	addlw	1
  8533  0A88  1903               	skipnz
  8534  0A89  2A8B               	goto	u3851
  8535  0A8A  07BA               	addwf	___flmul@grs+1,f
  8536  0A8B                     u3851:
  8537  0A8B  0835               	movf	??___flmul+2,w
  8538  0A8C  1103               	clrz
  8539  0A8D  1803               	skipnc
  8540  0A8E  3E01               	addlw	1
  8541  0A8F  1903               	skipnz
  8542  0A90  2A92               	goto	u3852
  8543  0A91  07BB               	addwf	___flmul@grs+2,f
  8544  0A92                     u3852:
  8545  0A92  0836               	movf	??___flmul+3,w
  8546  0A93  1103               	clrz
  8547  0A94  1803               	skipnc
  8548  0A95  3E01               	addlw	1
  8549  0A96  1903               	skipnz
  8550  0A97  2A99               	goto	u3853
  8551  0A98  07BC               	addwf	___flmul@grs+3,f
  8552  0A99                     u3853:
  8553  0A99                     l2761:
  8554  0A99  082B               	movf	___flmul@b,w
  8555  0A9A  00B3               	movwf	??___flmul
  8556  0A9B  0833               	movf	??___flmul,w
  8557  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  8558  0A9D  0830               	movf	___flmul@a+1,w
  8559  0A9E  160A  158A  21F9  120A  158A  	fcall	__Umul8_16
  8560  0AA3  0874               	movf	?__Umul8_16+1,w
  8561  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8562  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8563  0AA6  00C4               	movwf	___flmul@temp+1
  8564  0AA7  0873               	movf	?__Umul8_16,w
  8565  0AA8  00C3               	movwf	___flmul@temp
  8566  0AA9                     l2763:
  8567  0AA9  0843               	movf	___flmul@temp,w
  8568  0AAA  00B3               	movwf	??___flmul
  8569  0AAB  0844               	movf	___flmul@temp+1,w
  8570  0AAC  00B4               	movwf	??___flmul+1
  8571  0AAD  01B5               	clrf	??___flmul+2
  8572  0AAE  01B6               	clrf	??___flmul+3
  8573  0AAF  0833               	movf	??___flmul,w
  8574  0AB0  07B9               	addwf	___flmul@grs,f
  8575  0AB1  0834               	movf	??___flmul+1,w
  8576  0AB2  1103               	clrz
  8577  0AB3  1803               	skipnc
  8578  0AB4  3E01               	addlw	1
  8579  0AB5  1903               	skipnz
  8580  0AB6  2AB8               	goto	u3861
  8581  0AB7  07BA               	addwf	___flmul@grs+1,f
  8582  0AB8                     u3861:
  8583  0AB8  0835               	movf	??___flmul+2,w
  8584  0AB9  1103               	clrz
  8585  0ABA  1803               	skipnc
  8586  0ABB  3E01               	addlw	1
  8587  0ABC  1903               	skipnz
  8588  0ABD  2ABF               	goto	u3862
  8589  0ABE  07BB               	addwf	___flmul@grs+2,f
  8590  0ABF                     u3862:
  8591  0ABF  0836               	movf	??___flmul+3,w
  8592  0AC0  1103               	clrz
  8593  0AC1  1803               	skipnc
  8594  0AC2  3E01               	addlw	1
  8595  0AC3  1903               	skipnz
  8596  0AC4  2AC6               	goto	u3863
  8597  0AC5  07BC               	addwf	___flmul@grs+3,f
  8598  0AC6                     u3863:
  8599  0AC6                     l2765:
  8600  0AC6  3008               	movlw	8
  8601  0AC7  00B3               	movwf	??___flmul
  8602  0AC8                     u3875:
  8603  0AC8  1003               	clrc
  8604  0AC9  0DB9               	rlf	___flmul@grs,f
  8605  0ACA  0DBA               	rlf	___flmul@grs+1,f
  8606  0ACB  0DBB               	rlf	___flmul@grs+2,f
  8607  0ACC  0DBC               	rlf	___flmul@grs+3,f
  8608  0ACD  0BB3               	decfsz	??___flmul,f
  8609  0ACE  2AC8               	goto	u3875
  8610  0ACF  082B               	movf	___flmul@b,w
  8611  0AD0  00B3               	movwf	??___flmul
  8612  0AD1  0833               	movf	??___flmul,w
  8613  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8614  0AD3  082F               	movf	___flmul@a,w
  8615  0AD4  160A  158A  21F9  120A  158A  	fcall	__Umul8_16
  8616  0AD9  0874               	movf	?__Umul8_16+1,w
  8617  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8618  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8619  0ADC  00C4               	movwf	___flmul@temp+1
  8620  0ADD  0873               	movf	?__Umul8_16,w
  8621  0ADE  00C3               	movwf	___flmul@temp
  8622  0ADF                     l2767:
  8623  0ADF  0843               	movf	___flmul@temp,w
  8624  0AE0  00B3               	movwf	??___flmul
  8625  0AE1  0844               	movf	___flmul@temp+1,w
  8626  0AE2  00B4               	movwf	??___flmul+1
  8627  0AE3  01B5               	clrf	??___flmul+2
  8628  0AE4  01B6               	clrf	??___flmul+3
  8629  0AE5  0833               	movf	??___flmul,w
  8630  0AE6  07B9               	addwf	___flmul@grs,f
  8631  0AE7  0834               	movf	??___flmul+1,w
  8632  0AE8  1103               	clrz
  8633  0AE9  1803               	skipnc
  8634  0AEA  3E01               	addlw	1
  8635  0AEB  1903               	skipnz
  8636  0AEC  2AEE               	goto	u3881
  8637  0AED  07BA               	addwf	___flmul@grs+1,f
  8638  0AEE                     u3881:
  8639  0AEE  0835               	movf	??___flmul+2,w
  8640  0AEF  1103               	clrz
  8641  0AF0  1803               	skipnc
  8642  0AF1  3E01               	addlw	1
  8643  0AF2  1903               	skipnz
  8644  0AF3  2AF5               	goto	u3882
  8645  0AF4  07BB               	addwf	___flmul@grs+2,f
  8646  0AF5                     u3882:
  8647  0AF5  0836               	movf	??___flmul+3,w
  8648  0AF6  1103               	clrz
  8649  0AF7  1803               	skipnc
  8650  0AF8  3E01               	addlw	1
  8651  0AF9  1903               	skipnz
  8652  0AFA  2AFC               	goto	u3883
  8653  0AFB  07BC               	addwf	___flmul@grs+3,f
  8654  0AFC                     u3883:
  8655  0AFC                     l2769:
  8656  0AFC  082C               	movf	___flmul@b+1,w
  8657  0AFD  00B3               	movwf	??___flmul
  8658  0AFE  0833               	movf	??___flmul,w
  8659  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  8660  0B00  0831               	movf	___flmul@a+2,w
  8661  0B01  160A  158A  21F9  120A  158A  	fcall	__Umul8_16
  8662  0B06  0874               	movf	?__Umul8_16+1,w
  8663  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8664  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8665  0B09  00C4               	movwf	___flmul@temp+1
  8666  0B0A  0873               	movf	?__Umul8_16,w
  8667  0B0B  00C3               	movwf	___flmul@temp
  8668  0B0C  0843               	movf	___flmul@temp,w
  8669  0B0D  00B3               	movwf	??___flmul
  8670  0B0E  0844               	movf	___flmul@temp+1,w
  8671  0B0F  00B4               	movwf	??___flmul+1
  8672  0B10  01B5               	clrf	??___flmul+2
  8673  0B11  01B6               	clrf	??___flmul+3
  8674  0B12  0833               	movf	??___flmul,w
  8675  0B13  07BF               	addwf	___flmul@prod,f
  8676  0B14  0834               	movf	??___flmul+1,w
  8677  0B15  1103               	clrz
  8678  0B16  1803               	skipnc
  8679  0B17  3E01               	addlw	1
  8680  0B18  1903               	skipnz
  8681  0B19  2B1B               	goto	u3891
  8682  0B1A  07C0               	addwf	___flmul@prod+1,f
  8683  0B1B                     u3891:
  8684  0B1B  0835               	movf	??___flmul+2,w
  8685  0B1C  1103               	clrz
  8686  0B1D  1803               	skipnc
  8687  0B1E  3E01               	addlw	1
  8688  0B1F  1903               	skipnz
  8689  0B20  2B22               	goto	u3892
  8690  0B21  07C1               	addwf	___flmul@prod+2,f
  8691  0B22                     u3892:
  8692  0B22  0836               	movf	??___flmul+3,w
  8693  0B23  1103               	clrz
  8694  0B24  1803               	skipnc
  8695  0B25  3E01               	addlw	1
  8696  0B26  1903               	skipnz
  8697  0B27  2B29               	goto	u3893
  8698  0B28  07C2               	addwf	___flmul@prod+3,f
  8699  0B29                     u3893:
  8700  0B29                     l2771:
  8701  0B29  082D               	movf	___flmul@b+2,w
  8702  0B2A  00B3               	movwf	??___flmul
  8703  0B2B  0833               	movf	??___flmul,w
  8704  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  8705  0B2D  0830               	movf	___flmul@a+1,w
  8706  0B2E  160A  158A  21F9  120A  158A  	fcall	__Umul8_16
  8707  0B33  0874               	movf	?__Umul8_16+1,w
  8708  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8709  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8710  0B36  00C4               	movwf	___flmul@temp+1
  8711  0B37  0873               	movf	?__Umul8_16,w
  8712  0B38  00C3               	movwf	___flmul@temp
  8713  0B39                     l2773:
  8714  0B39  0843               	movf	___flmul@temp,w
  8715  0B3A  00B3               	movwf	??___flmul
  8716  0B3B  0844               	movf	___flmul@temp+1,w
  8717  0B3C  00B4               	movwf	??___flmul+1
  8718  0B3D  01B5               	clrf	??___flmul+2
  8719  0B3E  01B6               	clrf	??___flmul+3
  8720  0B3F  0833               	movf	??___flmul,w
  8721  0B40  07BF               	addwf	___flmul@prod,f
  8722  0B41  0834               	movf	??___flmul+1,w
  8723  0B42  1103               	clrz
  8724  0B43  1803               	skipnc
  8725  0B44  3E01               	addlw	1
  8726  0B45  1903               	skipnz
  8727  0B46  2B48               	goto	u3901
  8728  0B47  07C0               	addwf	___flmul@prod+1,f
  8729  0B48                     u3901:
  8730  0B48  0835               	movf	??___flmul+2,w
  8731  0B49  1103               	clrz
  8732  0B4A  1803               	skipnc
  8733  0B4B  3E01               	addlw	1
  8734  0B4C  1903               	skipnz
  8735  0B4D  2B4F               	goto	u3902
  8736  0B4E  07C1               	addwf	___flmul@prod+2,f
  8737  0B4F                     u3902:
  8738  0B4F  0836               	movf	??___flmul+3,w
  8739  0B50  1103               	clrz
  8740  0B51  1803               	skipnc
  8741  0B52  3E01               	addlw	1
  8742  0B53  1903               	skipnz
  8743  0B54  2B56               	goto	u3903
  8744  0B55  07C2               	addwf	___flmul@prod+3,f
  8745  0B56                     u3903:
  8746  0B56  082D               	movf	___flmul@b+2,w
  8747  0B57  00B3               	movwf	??___flmul
  8748  0B58  0833               	movf	??___flmul,w
  8749  0B59  00F3               	movwf	__Umul8_16@multiplicand
  8750  0B5A  0831               	movf	___flmul@a+2,w
  8751  0B5B  160A  158A  21F9  120A  158A  	fcall	__Umul8_16
  8752  0B60  0874               	movf	?__Umul8_16+1,w
  8753  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8754  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8755  0B63  00C4               	movwf	___flmul@temp+1
  8756  0B64  0873               	movf	?__Umul8_16,w
  8757  0B65  00C3               	movwf	___flmul@temp
  8758  0B66                     l2775:
  8759  0B66  0843               	movf	___flmul@temp,w
  8760  0B67  00B3               	movwf	??___flmul
  8761  0B68  0844               	movf	___flmul@temp+1,w
  8762  0B69  00B4               	movwf	??___flmul+1
  8763  0B6A  01B5               	clrf	??___flmul+2
  8764  0B6B  01B6               	clrf	??___flmul+3
  8765  0B6C  3008               	movlw	8
  8766  0B6D                     u3915:
  8767  0B6D  1003               	clrc
  8768  0B6E  0DB3               	rlf	??___flmul,f
  8769  0B6F  0DB4               	rlf	??___flmul+1,f
  8770  0B70  0DB5               	rlf	??___flmul+2,f
  8771  0B71  0DB6               	rlf	??___flmul+3,f
  8772  0B72                     u3910:
  8773  0B72  3EFF               	addlw	-1
  8774  0B73  1D03               	skipz
  8775  0B74  2B6D               	goto	u3915
  8776  0B75  0833               	movf	??___flmul,w
  8777  0B76  07BF               	addwf	___flmul@prod,f
  8778  0B77  0834               	movf	??___flmul+1,w
  8779  0B78  1103               	clrz
  8780  0B79  1803               	skipnc
  8781  0B7A  3E01               	addlw	1
  8782  0B7B  1903               	skipnz
  8783  0B7C  2B7E               	goto	u3921
  8784  0B7D  07C0               	addwf	___flmul@prod+1,f
  8785  0B7E                     u3921:
  8786  0B7E  0835               	movf	??___flmul+2,w
  8787  0B7F  1103               	clrz
  8788  0B80  1803               	skipnc
  8789  0B81  3E01               	addlw	1
  8790  0B82  1903               	skipnz
  8791  0B83  2B85               	goto	u3922
  8792  0B84  07C1               	addwf	___flmul@prod+2,f
  8793  0B85                     u3922:
  8794  0B85  0836               	movf	??___flmul+3,w
  8795  0B86  1103               	clrz
  8796  0B87  1803               	skipnc
  8797  0B88  3E01               	addlw	1
  8798  0B89  1903               	skipnz
  8799  0B8A  2B8C               	goto	u3923
  8800  0B8B  07C2               	addwf	___flmul@prod+3,f
  8801  0B8C                     u3923:
  8802  0B8C                     l2777:
  8803  0B8C  0839               	movf	___flmul@grs,w
  8804  0B8D  00B3               	movwf	??___flmul
  8805  0B8E  083A               	movf	___flmul@grs+1,w
  8806  0B8F  00B4               	movwf	??___flmul+1
  8807  0B90  083B               	movf	___flmul@grs+2,w
  8808  0B91  00B5               	movwf	??___flmul+2
  8809  0B92  083C               	movf	___flmul@grs+3,w
  8810  0B93  00B6               	movwf	??___flmul+3
  8811  0B94  3018               	movlw	24
  8812  0B95                     u3935:
  8813  0B95  1003               	clrc
  8814  0B96  0CB6               	rrf	??___flmul+3,f
  8815  0B97  0CB5               	rrf	??___flmul+2,f
  8816  0B98  0CB4               	rrf	??___flmul+1,f
  8817  0B99  0CB3               	rrf	??___flmul,f
  8818  0B9A                     u3930:
  8819  0B9A  3EFF               	addlw	-1
  8820  0B9B  1D03               	skipz
  8821  0B9C  2B95               	goto	u3935
  8822  0B9D  0833               	movf	??___flmul,w
  8823  0B9E  07BF               	addwf	___flmul@prod,f
  8824  0B9F  0834               	movf	??___flmul+1,w
  8825  0BA0  1103               	clrz
  8826  0BA1  1803               	skipnc
  8827  0BA2  3E01               	addlw	1
  8828  0BA3  1903               	skipnz
  8829  0BA4  2BA6               	goto	u3941
  8830  0BA5  07C0               	addwf	___flmul@prod+1,f
  8831  0BA6                     u3941:
  8832  0BA6  0835               	movf	??___flmul+2,w
  8833  0BA7  1103               	clrz
  8834  0BA8  1803               	skipnc
  8835  0BA9  3E01               	addlw	1
  8836  0BAA  1903               	skipnz
  8837  0BAB  2BAD               	goto	u3942
  8838  0BAC  07C1               	addwf	___flmul@prod+2,f
  8839  0BAD                     u3942:
  8840  0BAD  0836               	movf	??___flmul+3,w
  8841  0BAE  1103               	clrz
  8842  0BAF  1803               	skipnc
  8843  0BB0  3E01               	addlw	1
  8844  0BB1  1903               	skipnz
  8845  0BB2  2BB4               	goto	u3943
  8846  0BB3  07C2               	addwf	___flmul@prod+3,f
  8847  0BB4                     u3943:
  8848  0BB4                     l2779:
  8849  0BB4  3008               	movlw	8
  8850  0BB5  00B3               	movwf	??___flmul
  8851  0BB6                     u3955:
  8852  0BB6  1003               	clrc
  8853  0BB7  0DB9               	rlf	___flmul@grs,f
  8854  0BB8  0DBA               	rlf	___flmul@grs+1,f
  8855  0BB9  0DBB               	rlf	___flmul@grs+2,f
  8856  0BBA  0DBC               	rlf	___flmul@grs+3,f
  8857  0BBB  0BB3               	decfsz	??___flmul,f
  8858  0BBC  2BB6               	goto	u3955
  8859  0BBD                     l2781:
  8860  0BBD  083E               	movf	___flmul@bexp,w
  8861  0BBE  073D               	addwf	___flmul@aexp,w
  8862  0BBF  00B3               	movwf	??___flmul
  8863  0BC0  01B4               	clrf	??___flmul+1
  8864  0BC1  0DB4               	rlf	??___flmul+1,f
  8865  0BC2  0833               	movf	??___flmul,w
  8866  0BC3  3E82               	addlw	130
  8867  0BC4  00C3               	movwf	___flmul@temp
  8868  0BC5  0834               	movf	??___flmul+1,w
  8869  0BC6  1803               	skipnc
  8870  0BC7  3E01               	addlw	1
  8871  0BC8  3EFF               	addlw	255
  8872  0BC9  00C4               	movwf	___flmul@temp+1
  8873  0BCA  2BE8               	goto	l2793
  8874  0BCB                     l2783:
  8875  0BCB  3001               	movlw	1
  8876  0BCC  00B3               	movwf	??___flmul
  8877  0BCD                     u3965:
  8878  0BCD  1003               	clrc
  8879  0BCE  0DBF               	rlf	___flmul@prod,f
  8880  0BCF  0DC0               	rlf	___flmul@prod+1,f
  8881  0BD0  0DC1               	rlf	___flmul@prod+2,f
  8882  0BD1  0DC2               	rlf	___flmul@prod+3,f
  8883  0BD2  0BB3               	decfsz	??___flmul,f
  8884  0BD3  2BCD               	goto	u3965
  8885  0BD4                     l2785:
  8886  0BD4  1FBC               	btfss	___flmul@grs+3,7
  8887  0BD5  2BD7               	goto	u3971
  8888  0BD6  2BD8               	goto	u3970
  8889  0BD7                     u3971:
  8890  0BD7  2BD9               	goto	l2789
  8891  0BD8                     u3970:
  8892  0BD8                     l2787:
  8893  0BD8  143F               	bsf	___flmul@prod,0
  8894  0BD9                     l2789:
  8895  0BD9  3001               	movlw	1
  8896  0BDA  00B3               	movwf	??___flmul
  8897  0BDB                     u3985:
  8898  0BDB  1003               	clrc
  8899  0BDC  0DB9               	rlf	___flmul@grs,f
  8900  0BDD  0DBA               	rlf	___flmul@grs+1,f
  8901  0BDE  0DBB               	rlf	___flmul@grs+2,f
  8902  0BDF  0DBC               	rlf	___flmul@grs+3,f
  8903  0BE0  0BB3               	decfsz	??___flmul,f
  8904  0BE1  2BDB               	goto	u3985
  8905  0BE2                     l2791:
  8906  0BE2  30FF               	movlw	255
  8907  0BE3  07C3               	addwf	___flmul@temp,f
  8908  0BE4  1803               	skipnc
  8909  0BE5  0AC4               	incf	___flmul@temp+1,f
  8910  0BE6  30FF               	movlw	255
  8911  0BE7  07C4               	addwf	___flmul@temp+1,f
  8912  0BE8                     l2793:
  8913  0BE8  1FC1               	btfss	___flmul@prod+2,7
  8914  0BE9  2BEB               	goto	u3991
  8915  0BEA  2BEC               	goto	u3990
  8916  0BEB                     u3991:
  8917  0BEB  2BCB               	goto	l2783
  8918  0BEC                     u3990:
  8919  0BEC                     l2795:
  8920  0BEC  01BD               	clrf	___flmul@aexp
  8921  0BED                     l2797:
  8922  0BED  1FBC               	btfss	___flmul@grs+3,7
  8923  0BEE  2BF0               	goto	u4001
  8924  0BEF  2BF1               	goto	u4000
  8925  0BF0                     u4001:
  8926  0BF0  2C0D               	goto	l2805
  8927  0BF1                     u4000:
  8928  0BF1                     l2799:
  8929  0BF1  30FF               	movlw	255
  8930  0BF2  0539               	andwf	___flmul@grs,w
  8931  0BF3  00B3               	movwf	??___flmul
  8932  0BF4  30FF               	movlw	255
  8933  0BF5  053A               	andwf	___flmul@grs+1,w
  8934  0BF6  00B4               	movwf	??___flmul+1
  8935  0BF7  30FF               	movlw	255
  8936  0BF8  053B               	andwf	___flmul@grs+2,w
  8937  0BF9  00B5               	movwf	??___flmul+2
  8938  0BFA  307F               	movlw	127
  8939  0BFB  053C               	andwf	___flmul@grs+3,w
  8940  0BFC  00B6               	movwf	??___flmul+3
  8941  0BFD  0836               	movf	??___flmul+3,w
  8942  0BFE  0435               	iorwf	??___flmul+2,w
  8943  0BFF  0434               	iorwf	??___flmul+1,w
  8944  0C00  0433               	iorwf	??___flmul,w
  8945  0C01  1903               	skipnz
  8946  0C02  2C04               	goto	u4011
  8947  0C03  2C05               	goto	u4010
  8948  0C04                     u4011:
  8949  0C04  2C08               	goto	l837
  8950  0C05                     u4010:
  8951  0C05                     l2801:
  8952  0C05  01BD               	clrf	___flmul@aexp
  8953  0C06  0ABD               	incf	___flmul@aexp,f
  8954  0C07  2C0D               	goto	l2805
  8955  0C08                     l837:
  8956  0C08  1C3F               	btfss	___flmul@prod,0
  8957  0C09  2C0B               	goto	u4021
  8958  0C0A  2C0C               	goto	u4020
  8959  0C0B                     u4021:
  8960  0C0B  2C0D               	goto	l2805
  8961  0C0C                     u4020:
  8962  0C0C  2C05               	goto	l2801
  8963  0C0D                     l2805:
  8964  0C0D  083D               	movf	___flmul@aexp,w
  8965  0C0E  1903               	btfsc	3,2
  8966  0C0F  2C11               	goto	u4031
  8967  0C10  2C12               	goto	u4030
  8968  0C11                     u4031:
  8969  0C11  2C43               	goto	l2815
  8970  0C12                     u4030:
  8971  0C12                     l2807:
  8972  0C12  3001               	movlw	1
  8973  0C13  07BF               	addwf	___flmul@prod,f
  8974  0C14  3000               	movlw	0
  8975  0C15  1803               	skipnc
  8976  0C16  3001               	movlw	1
  8977  0C17  07C0               	addwf	___flmul@prod+1,f
  8978  0C18  3000               	movlw	0
  8979  0C19  1803               	skipnc
  8980  0C1A  3001               	movlw	1
  8981  0C1B  07C1               	addwf	___flmul@prod+2,f
  8982  0C1C  3000               	movlw	0
  8983  0C1D  1803               	skipnc
  8984  0C1E  3001               	movlw	1
  8985  0C1F  07C2               	addwf	___flmul@prod+3,f
  8986  0C20                     l2809:
  8987  0C20  1C42               	btfss	___flmul@prod+3,0
  8988  0C21  2C23               	goto	u4041
  8989  0C22  2C24               	goto	u4040
  8990  0C23                     u4041:
  8991  0C23  2C43               	goto	l2815
  8992  0C24                     u4040:
  8993  0C24                     l2811:
  8994  0C24  083F               	movf	___flmul@prod,w
  8995  0C25  00B3               	movwf	??___flmul
  8996  0C26  0840               	movf	___flmul@prod+1,w
  8997  0C27  00B4               	movwf	??___flmul+1
  8998  0C28  0841               	movf	___flmul@prod+2,w
  8999  0C29  00B5               	movwf	??___flmul+2
  9000  0C2A  0842               	movf	___flmul@prod+3,w
  9001  0C2B  00B6               	movwf	??___flmul+3
  9002  0C2C  3001               	movlw	1
  9003  0C2D  00B7               	movwf	??___flmul+4
  9004  0C2E                     u4055:
  9005  0C2E  0D36               	rlf	??___flmul+3,w
  9006  0C2F  0CB6               	rrf	??___flmul+3,f
  9007  0C30  0CB5               	rrf	??___flmul+2,f
  9008  0C31  0CB4               	rrf	??___flmul+1,f
  9009  0C32  0CB3               	rrf	??___flmul,f
  9010  0C33                     u4050:
  9011  0C33  0BB7               	decfsz	??___flmul+4,f
  9012  0C34  2C2E               	goto	u4055
  9013  0C35  0836               	movf	??___flmul+3,w
  9014  0C36  00C2               	movwf	___flmul@prod+3
  9015  0C37  0835               	movf	??___flmul+2,w
  9016  0C38  00C1               	movwf	___flmul@prod+2
  9017  0C39  0834               	movf	??___flmul+1,w
  9018  0C3A  00C0               	movwf	___flmul@prod+1
  9019  0C3B  0833               	movf	??___flmul,w
  9020  0C3C  00BF               	movwf	___flmul@prod
  9021  0C3D                     l2813:
  9022  0C3D  3001               	movlw	1
  9023  0C3E  07C3               	addwf	___flmul@temp,f
  9024  0C3F  1803               	skipnc
  9025  0C40  0AC4               	incf	___flmul@temp+1,f
  9026  0C41  3000               	movlw	0
  9027  0C42  07C4               	addwf	___flmul@temp+1,f
  9028  0C43                     l2815:
  9029  0C43  0844               	movf	___flmul@temp+1,w
  9030  0C44  3A80               	xorlw	128
  9031  0C45  00FF               	movwf	btemp+1
  9032  0C46  3080               	movlw	128
  9033  0C47  027F               	subwf	btemp+1,w
  9034  0C48  1D03               	skipz
  9035  0C49  2C4C               	goto	u4065
  9036  0C4A  30FF               	movlw	255
  9037  0C4B  0243               	subwf	___flmul@temp,w
  9038  0C4C                     u4065:
  9039  0C4C  1C03               	skipc
  9040  0C4D  2C4F               	goto	u4061
  9041  0C4E  2C50               	goto	u4060
  9042  0C4F                     u4061:
  9043  0C4F  2C5B               	goto	l2819
  9044  0C50                     u4060:
  9045  0C50                     l2817:
  9046  0C50  307F               	movlw	127
  9047  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  9048  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  9049  0C53  00C2               	movwf	___flmul@prod+3
  9050  0C54  3080               	movlw	128
  9051  0C55  00C1               	movwf	___flmul@prod+2
  9052  0C56  3000               	movlw	0
  9053  0C57  00C0               	movwf	___flmul@prod+1
  9054  0C58  3000               	movlw	0
  9055  0C59  00BF               	movwf	___flmul@prod
  9056  0C5A  2C90               	goto	l843
  9057  0C5B                     l2819:
  9058  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  9059  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  9060  0C5D  0844               	movf	___flmul@temp+1,w
  9061  0C5E  3A80               	xorlw	128
  9062  0C5F  00FF               	movwf	btemp+1
  9063  0C60  3080               	movlw	128
  9064  0C61  027F               	subwf	btemp+1,w
  9065  0C62  1D03               	skipz
  9066  0C63  2C66               	goto	u4075
  9067  0C64  3001               	movlw	1
  9068  0C65  0243               	subwf	___flmul@temp,w
  9069  0C66                     u4075:
  9070  0C66  1803               	skipnc
  9071  0C67  2C69               	goto	u4071
  9072  0C68  2C6A               	goto	u4070
  9073  0C69                     u4071:
  9074  0C69  2C76               	goto	l2825
  9075  0C6A                     u4070:
  9076  0C6A                     l2821:
  9077  0C6A  3000               	movlw	0
  9078  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  9079  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  9080  0C6D  00C2               	movwf	___flmul@prod+3
  9081  0C6E  3000               	movlw	0
  9082  0C6F  00C1               	movwf	___flmul@prod+2
  9083  0C70  3000               	movlw	0
  9084  0C71  00C0               	movwf	___flmul@prod+1
  9085  0C72  3000               	movlw	0
  9086  0C73  00BF               	movwf	___flmul@prod
  9087  0C74                     l2823:
  9088  0C74  01B8               	clrf	___flmul@sign
  9089  0C75  2C90               	goto	l843
  9090  0C76                     l2825:
  9091  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  9092  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  9093  0C78  0843               	movf	___flmul@temp,w
  9094  0C79  00B3               	movwf	??___flmul
  9095  0C7A  0833               	movf	??___flmul,w
  9096  0C7B  00BE               	movwf	___flmul@bexp
  9097  0C7C  30FF               	movlw	255
  9098  0C7D  05BF               	andwf	___flmul@prod,f
  9099  0C7E  30FF               	movlw	255
  9100  0C7F  05C0               	andwf	___flmul@prod+1,f
  9101  0C80  307F               	movlw	127
  9102  0C81  05C1               	andwf	___flmul@prod+2,f
  9103  0C82  3000               	movlw	0
  9104  0C83  05C2               	andwf	___flmul@prod+3,f
  9105  0C84                     l2827:
  9106  0C84  1C3E               	btfss	___flmul@bexp,0
  9107  0C85  2C87               	goto	u4081
  9108  0C86  2C88               	goto	u4080
  9109  0C87                     u4081:
  9110  0C87  2C89               	goto	l2831
  9111  0C88                     u4080:
  9112  0C88                     l2829:
  9113  0C88  17C1               	bsf	___flmul@prod+2,7
  9114  0C89                     l2831:
  9115  0C89  083E               	movf	___flmul@bexp,w
  9116  0C8A  00B3               	movwf	??___flmul
  9117  0C8B  1003               	clrc
  9118  0C8C  0C33               	rrf	??___flmul,w
  9119  0C8D  00B4               	movwf	??___flmul+1
  9120  0C8E  0834               	movf	??___flmul+1,w
  9121  0C8F  00C2               	movwf	___flmul@prod+3
  9122  0C90                     l843:
  9123  0C90  0838               	movf	___flmul@sign,w
  9124  0C91  00B3               	movwf	??___flmul
  9125  0C92  0833               	movf	??___flmul,w
  9126  0C93  04C2               	iorwf	___flmul@prod+3,f
  9127  0C94                     l2833:
  9128  0C94  0842               	movf	___flmul@prod+3,w
  9129  0C95  00AE               	movwf	?___flmul+3
  9130  0C96  0841               	movf	___flmul@prod+2,w
  9131  0C97  00AD               	movwf	?___flmul+2
  9132  0C98  0840               	movf	___flmul@prod+1,w
  9133  0C99  00AC               	movwf	?___flmul+1
  9134  0C9A  083F               	movf	___flmul@prod,w
  9135  0C9B  00AB               	movwf	?___flmul
  9136  0C9C                     l831:
  9137  0C9C  0008               	return
  9138  0C9D                     __end_of___flmul:
  9139                           
  9140                           	psect	text29
  9141  19F9                     __ptext29:	
  9142 ;; *************** function __Umul8_16 *****************
  9143 ;; Defined at:
  9144 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  multiplier      1    wreg     unsigned char 
  9147 ;;  multiplicand    1    3[COMMON] unsigned char 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9150 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  9151 ;;  product         2    0[BANK0 ] unsigned int 
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  2    3[COMMON] unsigned int 
  9154 ;; Registers used:
  9155 ;;		wreg, status,2, status,0
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9161 ;;      Params:         2       0       0       0       0
  9162 ;;      Locals:         0       5       0       0       0
  9163 ;;      Temps:          2       0       0       0       0
  9164 ;;      Totals:         4       5       0       0       0
  9165 ;;Total ram usage:        9 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; Hardware stack levels required when called:    1
  9168 ;; This function calls:
  9169 ;;		Nothing
  9170 ;; This function is called by:
  9171 ;;		___flmul
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           
  9176                           ;psect for function __Umul8_16
  9177  19F9                     __Umul8_16:
  9178                           
  9179                           ;incstack = 0
  9180                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9181                           ;__Umul8_16@multiplier stored from wreg
  9182  19F9  1283               	bcf	3,5	;RP0=0, select bank0
  9183  19FA  1303               	bcf	3,6	;RP1=0, select bank0
  9184  19FB  00A4               	movwf	__Umul8_16@multiplier
  9185  19FC                     l2357:
  9186  19FC  01A0               	clrf	__Umul8_16@product
  9187  19FD  01A1               	clrf	__Umul8_16@product+1
  9188  19FE                     l2359:
  9189  19FE  0873               	movf	__Umul8_16@multiplicand,w
  9190  19FF  00F5               	movwf	??__Umul8_16
  9191  1A00  01F6               	clrf	??__Umul8_16+1
  9192  1A01  0875               	movf	??__Umul8_16,w
  9193  1A02  00A2               	movwf	__Umul8_16@word_mpld
  9194  1A03  0876               	movf	??__Umul8_16+1,w
  9195  1A04  00A3               	movwf	__Umul8_16@word_mpld+1
  9196  1A05                     l2361:
  9197  1A05  1C24               	btfss	__Umul8_16@multiplier,0
  9198  1A06  2A08               	goto	u2911
  9199  1A07  2A09               	goto	u2910
  9200  1A08                     u2911:
  9201  1A08  2A0F               	goto	l850
  9202  1A09                     u2910:
  9203  1A09                     l2363:
  9204  1A09  0822               	movf	__Umul8_16@word_mpld,w
  9205  1A0A  07A0               	addwf	__Umul8_16@product,f
  9206  1A0B  1803               	skipnc
  9207  1A0C  0AA1               	incf	__Umul8_16@product+1,f
  9208  1A0D  0823               	movf	__Umul8_16@word_mpld+1,w
  9209  1A0E  07A1               	addwf	__Umul8_16@product+1,f
  9210  1A0F                     l850:
  9211  1A0F  3001               	movlw	1
  9212  1A10                     u2925:
  9213  1A10  1003               	clrc
  9214  1A11  0DA2               	rlf	__Umul8_16@word_mpld,f
  9215  1A12  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9216  1A13  3EFF               	addlw	-1
  9217  1A14  1D03               	skipz
  9218  1A15  2A10               	goto	u2925
  9219  1A16  1003               	clrc
  9220  1A17  0CA4               	rrf	__Umul8_16@multiplier,f
  9221  1A18                     l2365:
  9222  1A18  0824               	movf	__Umul8_16@multiplier,w
  9223  1A19  1D03               	btfss	3,2
  9224  1A1A  2A1C               	goto	u2931
  9225  1A1B  2A1D               	goto	u2930
  9226  1A1C                     u2931:
  9227  1A1C  2A05               	goto	l2361
  9228  1A1D                     u2930:
  9229  1A1D                     l2367:
  9230  1A1D  0821               	movf	__Umul8_16@product+1,w
  9231  1A1E  00F4               	movwf	?__Umul8_16+1
  9232  1A1F  0820               	movf	__Umul8_16@product,w
  9233  1A20  00F3               	movwf	?__Umul8_16
  9234  1A21                     l852:
  9235  1A21  0008               	return
  9236  1A22                     __end_of__Umul8_16:
  9237                           
  9238                           	psect	text30
  9239  1A89                     __ptext30:	
  9240 ;; *************** function _Lcd_Write_String *****************
  9241 ;; Defined at:
  9242 ;;		line 67 in file "LCD.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  a               2    6[COMMON] PTR unsigned char 
  9245 ;;		 -> s(20), STR_1(17), 
  9246 ;; Auto vars:     Size  Location     Type
  9247 ;;  i               2    3[BANK0 ] int 
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  1    wreg      void 
  9250 ;; Registers used:
  9251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9257 ;;      Params:         2       0       0       0       0
  9258 ;;      Locals:         0       2       0       0       0
  9259 ;;      Temps:          0       3       0       0       0
  9260 ;;      Totals:         2       5       0       0       0
  9261 ;;Total ram usage:        7 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; Hardware stack levels required when called:    3
  9264 ;; This function calls:
  9265 ;;		_Lcd_Write_Char
  9266 ;; This function is called by:
  9267 ;;		_main
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           
  9272                           ;psect for function _Lcd_Write_String
  9273  1A89                     _Lcd_Write_String:
  9274  1A89                     l4191:	
  9275                           ;incstack = 0
  9276                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9277                           
  9278                           
  9279                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  9280  1A89  1283               	bcf	3,5	;RP0=0, select bank0
  9281  1A8A  1303               	bcf	3,6	;RP1=0, select bank0
  9282  1A8B  01A3               	clrf	Lcd_Write_String@i
  9283  1A8C  01A4               	clrf	Lcd_Write_String@i+1
  9284  1A8D  2AB2               	goto	l4197
  9285  1A8E                     l4193:
  9286                           
  9287                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  9288  1A8E  0823               	movf	Lcd_Write_String@i,w
  9289  1A8F  0776               	addwf	Lcd_Write_String@a,w
  9290  1A90  00A1               	movwf	??_Lcd_Write_String+1
  9291  1A91  0877               	movf	Lcd_Write_String@a+1,w
  9292  1A92  00A0               	movwf	??_Lcd_Write_String
  9293  1A93  1803               	skipnc
  9294  1A94  0AA0               	incf	??_Lcd_Write_String,f
  9295  1A95  1FA3               	btfss	Lcd_Write_String@i,7
  9296  1A96  2A98               	goto	u7020
  9297  1A97  03A0               	decf	??_Lcd_Write_String,f
  9298  1A98                     u7020:
  9299  1A98  1283               	bcf	3,5	;RP0=0, select bank0
  9300  1A99  1303               	bcf	3,6	;RP1=0, select bank0
  9301  1A9A  0820               	movf	??_Lcd_Write_String,w
  9302  1A9B  00A2               	movwf	??_Lcd_Write_String+2
  9303  1A9C  0822               	movf	??_Lcd_Write_String+2,w
  9304  1A9D  00FF               	movwf	btemp+1
  9305  1A9E  0821               	movf	??_Lcd_Write_String+1,w
  9306  1A9F  0084               	movwf	4
  9307  1AA0  160A  158A  2000  160A  158A  	fcall	stringtab
  9308  1AA5  160A  158A  219A  160A  158A  	fcall	_Lcd_Write_Char
  9309  1AAA                     l4195:
  9310  1AAA  3001               	movlw	1
  9311  1AAB  1283               	bcf	3,5	;RP0=0, select bank0
  9312  1AAC  1303               	bcf	3,6	;RP1=0, select bank0
  9313  1AAD  07A3               	addwf	Lcd_Write_String@i,f
  9314  1AAE  1803               	skipnc
  9315  1AAF  0AA4               	incf	Lcd_Write_String@i+1,f
  9316  1AB0  3000               	movlw	0
  9317  1AB1  07A4               	addwf	Lcd_Write_String@i+1,f
  9318  1AB2                     l4197:
  9319  1AB2  0823               	movf	Lcd_Write_String@i,w
  9320  1AB3  0776               	addwf	Lcd_Write_String@a,w
  9321  1AB4  00A1               	movwf	??_Lcd_Write_String+1
  9322  1AB5  0877               	movf	Lcd_Write_String@a+1,w
  9323  1AB6  00A0               	movwf	??_Lcd_Write_String
  9324  1AB7  1803               	skipnc
  9325  1AB8  0AA0               	incf	??_Lcd_Write_String,f
  9326  1AB9  1FA3               	btfss	Lcd_Write_String@i,7
  9327  1ABA  2ABC               	goto	u7030
  9328  1ABB  03A0               	decf	??_Lcd_Write_String,f
  9329  1ABC                     u7030:
  9330  1ABC  1283               	bcf	3,5	;RP0=0, select bank0
  9331  1ABD  1303               	bcf	3,6	;RP1=0, select bank0
  9332  1ABE  0820               	movf	??_Lcd_Write_String,w
  9333  1ABF  00A2               	movwf	??_Lcd_Write_String+2
  9334  1AC0  0822               	movf	??_Lcd_Write_String+2,w
  9335  1AC1  00FF               	movwf	btemp+1
  9336  1AC2  0821               	movf	??_Lcd_Write_String+1,w
  9337  1AC3  0084               	movwf	4
  9338  1AC4  160A  158A  2000  160A  158A  	fcall	stringtab
  9339  1AC9  3A00               	xorlw	0
  9340  1ACA  1D03               	skipz
  9341  1ACB  2ACD               	goto	u7041
  9342  1ACC  2ACE               	goto	u7040
  9343  1ACD                     u7041:
  9344  1ACD  2A8E               	goto	l4193
  9345  1ACE                     u7040:
  9346  1ACE                     l133:
  9347  1ACE  0008               	return
  9348  1ACF                     __end_of_Lcd_Write_String:
  9349                           
  9350                           	psect	text31
  9351  199A                     __ptext31:	
  9352 ;; *************** function _Lcd_Write_Char *****************
  9353 ;; Defined at:
  9354 ;;		line 58 in file "LCD.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;  a               1    wreg     unsigned char 
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;  a               1    5[COMMON] unsigned char 
  9359 ;; Return value:  Size  Location     Type
  9360 ;;                  1    wreg      void 
  9361 ;; Registers used:
  9362 ;;		wreg, status,2, status,0, pclath, cstack
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9368 ;;      Params:         0       0       0       0       0
  9369 ;;      Locals:         1       0       0       0       0
  9370 ;;      Temps:          1       0       0       0       0
  9371 ;;      Totals:         2       0       0       0       0
  9372 ;;Total ram usage:        2 bytes
  9373 ;; Hardware stack levels used:    1
  9374 ;; Hardware stack levels required when called:    2
  9375 ;; This function calls:
  9376 ;;		_Lcd_Port
  9377 ;; This function is called by:
  9378 ;;		_Lcd_Write_String
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382                           
  9383                           ;psect for function _Lcd_Write_Char
  9384  199A                     _Lcd_Write_Char:
  9385                           
  9386                           ;incstack = 0
  9387                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9388                           ;Lcd_Write_Char@a stored from wreg
  9389  199A  00F5               	movwf	Lcd_Write_Char@a
  9390  199B                     l3859:
  9391                           
  9392                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  9393  199B  1283               	bcf	3,5	;RP0=0, select bank0
  9394  199C  1303               	bcf	3,6	;RP1=0, select bank0
  9395  199D  1409               	bsf	9,0	;volatile
  9396  199E                     l3861:
  9397                           
  9398                           ;LCD.c: 60:     Lcd_Port(a);
  9399  199E  0875               	movf	Lcd_Write_Char@a,w
  9400  199F  160A  158A  211E  160A  158A  	fcall	_Lcd_Port
  9401  19A4                     l3863:
  9402                           
  9403                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
  9404  19A4  1283               	bcf	3,5	;RP0=0, select bank0
  9405  19A5  1303               	bcf	3,6	;RP1=0, select bank0
  9406  19A6  1489               	bsf	9,1	;volatile
  9407  19A7                     l3865:
  9408                           
  9409                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9410  19A7  301A               	movlw	26
  9411  19A8  00F4               	movwf	??_Lcd_Write_Char
  9412  19A9                     u7657:
  9413  19A9  0BF4               	decfsz	??_Lcd_Write_Char,f
  9414  19AA  29A9               	goto	u7657
  9415  19AB  0000               	nop
  9416  19AC                     l3867:
  9417                           
  9418                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
  9419  19AC  1283               	bcf	3,5	;RP0=0, select bank0
  9420  19AD  1303               	bcf	3,6	;RP1=0, select bank0
  9421  19AE  1089               	bcf	9,1	;volatile
  9422  19AF                     l3869:
  9423                           
  9424                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9425  19AF  301A               	movlw	26
  9426  19B0  00F4               	movwf	??_Lcd_Write_Char
  9427  19B1                     u7667:
  9428  19B1  0BF4               	decfsz	??_Lcd_Write_Char,f
  9429  19B2  29B1               	goto	u7667
  9430  19B3  0000               	nop
  9431  19B4                     l127:
  9432  19B4  0008               	return
  9433  19B5                     __end_of_Lcd_Write_Char:
  9434                           
  9435                           	psect	text32
  9436  19D3                     __ptext32:	
  9437 ;; *************** function _Lcd_Set_Cursor *****************
  9438 ;; Defined at:
  9439 ;;		line 33 in file "LCD.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  a               1    wreg     unsigned char 
  9442 ;;  b               1    7[COMMON] unsigned char 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  a               1    1[BANK0 ] unsigned char 
  9445 ;;  temp            1    2[BANK0 ] unsigned char 
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  1    wreg      void 
  9448 ;; Registers used:
  9449 ;;		wreg, status,2, status,0, pclath, cstack
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9455 ;;      Params:         1       0       0       0       0
  9456 ;;      Locals:         0       2       0       0       0
  9457 ;;      Temps:          0       1       0       0       0
  9458 ;;      Totals:         1       3       0       0       0
  9459 ;;Total ram usage:        4 bytes
  9460 ;; Hardware stack levels used:    1
  9461 ;; Hardware stack levels required when called:    3
  9462 ;; This function calls:
  9463 ;;		_Lcd_Cmd
  9464 ;; This function is called by:
  9465 ;;		_main
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           
  9470                           ;psect for function _Lcd_Set_Cursor
  9471  19D3                     _Lcd_Set_Cursor:
  9472                           
  9473                           ;incstack = 0
  9474                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9475                           ;Lcd_Set_Cursor@a stored from wreg
  9476  19D3  1283               	bcf	3,5	;RP0=0, select bank0
  9477  19D4  1303               	bcf	3,6	;RP1=0, select bank0
  9478  19D5  00A1               	movwf	Lcd_Set_Cursor@a
  9479  19D6                     l4179:
  9480                           
  9481                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
  9482  19D6  0321               	decf	Lcd_Set_Cursor@a,w
  9483  19D7  1D03               	btfss	3,2
  9484  19D8  29DA               	goto	u7001
  9485  19D9  29DB               	goto	u7000
  9486  19DA                     u7001:
  9487  19DA  29E7               	goto	l4185
  9488  19DB                     u7000:
  9489  19DB                     l4181:
  9490                           
  9491                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  9492  19DB  0877               	movf	Lcd_Set_Cursor@b,w
  9493  19DC  3E7F               	addlw	127
  9494  19DD  00A0               	movwf	??_Lcd_Set_Cursor
  9495  19DE  0820               	movf	??_Lcd_Set_Cursor,w
  9496  19DF  00A2               	movwf	Lcd_Set_Cursor@temp
  9497  19E0                     l4183:
  9498                           
  9499                           ;LCD.c: 37:         Lcd_Cmd(temp);
  9500  19E0  0822               	movf	Lcd_Set_Cursor@temp,w
  9501  19E1  120A  118A  27E6  160A  158A  	fcall	_Lcd_Cmd
  9502                           
  9503                           ;LCD.c: 38:     } else if (a == 2) {
  9504  19E6  29F8               	goto	l121
  9505  19E7                     l4185:
  9506  19E7  3002               	movlw	2
  9507  19E8  0621               	xorwf	Lcd_Set_Cursor@a,w
  9508  19E9  1D03               	btfss	3,2
  9509  19EA  29EC               	goto	u7011
  9510  19EB  29ED               	goto	u7010
  9511  19EC                     u7011:
  9512  19EC  29F8               	goto	l121
  9513  19ED                     u7010:
  9514  19ED                     l4187:
  9515                           
  9516                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  9517  19ED  0877               	movf	Lcd_Set_Cursor@b,w
  9518  19EE  3EBF               	addlw	191
  9519  19EF  00A0               	movwf	??_Lcd_Set_Cursor
  9520  19F0  0820               	movf	??_Lcd_Set_Cursor,w
  9521  19F1  00A2               	movwf	Lcd_Set_Cursor@temp
  9522  19F2                     l4189:
  9523                           
  9524                           ;LCD.c: 40:         Lcd_Cmd(temp);
  9525  19F2  0822               	movf	Lcd_Set_Cursor@temp,w
  9526  19F3  120A  118A  27E6  160A  158A  	fcall	_Lcd_Cmd
  9527  19F8                     l121:
  9528  19F8  0008               	return
  9529  19F9                     __end_of_Lcd_Set_Cursor:
  9530                           
  9531                           	psect	text33
  9532  1B15                     __ptext33:	
  9533 ;; *************** function _Lcd_Init *****************
  9534 ;; Defined at:
  9535 ;;		line 44 in file "LCD.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;		None
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;		None
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  1    wreg      void 
  9542 ;; Registers used:
  9543 ;;		wreg, status,2, status,0, pclath, cstack
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9549 ;;      Params:         0       0       0       0       0
  9550 ;;      Locals:         0       0       0       0       0
  9551 ;;      Temps:          0       2       0       0       0
  9552 ;;      Totals:         0       2       0       0       0
  9553 ;;Total ram usage:        2 bytes
  9554 ;; Hardware stack levels used:    1
  9555 ;; Hardware stack levels required when called:    3
  9556 ;; This function calls:
  9557 ;;		_Lcd_Cmd
  9558 ;;		_Lcd_Port
  9559 ;; This function is called by:
  9560 ;;		_main
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           
  9565                           ;psect for function _Lcd_Init
  9566  1B15                     _Lcd_Init:
  9567  1B15                     l4167:	
  9568                           ;incstack = 0
  9569                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9570                           
  9571                           
  9572                           ;LCD.c: 45:     Lcd_Port(0x00);
  9573  1B15  3000               	movlw	0
  9574  1B16  160A  158A  211E  160A  158A  	fcall	_Lcd_Port
  9575  1B1B                     l4169:
  9576                           
  9577                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9578  1B1B  3034               	movlw	52
  9579  1B1C  1283               	bcf	3,5	;RP0=0, select bank0
  9580  1B1D  1303               	bcf	3,6	;RP1=0, select bank0
  9581  1B1E  00A1               	movwf	??_Lcd_Init+1
  9582  1B1F  30F1               	movlw	241
  9583  1B20  00A0               	movwf	??_Lcd_Init
  9584  1B21                     u7677:
  9585  1B21  0BA0               	decfsz	??_Lcd_Init,f
  9586  1B22  2B21               	goto	u7677
  9587  1B23  0BA1               	decfsz	??_Lcd_Init+1,f
  9588  1B24  2B21               	goto	u7677
  9589  1B25                     l4171:
  9590                           
  9591                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
  9592  1B25  303F               	movlw	63
  9593  1B26  120A  118A  27E6  160A  158A  	fcall	_Lcd_Cmd
  9594                           
  9595                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9596  1B2B  301A               	movlw	26
  9597  1B2C  1283               	bcf	3,5	;RP0=0, select bank0
  9598  1B2D  1303               	bcf	3,6	;RP1=0, select bank0
  9599  1B2E  00A1               	movwf	??_Lcd_Init+1
  9600  1B2F  30F7               	movlw	247
  9601  1B30  00A0               	movwf	??_Lcd_Init
  9602  1B31                     u7687:
  9603  1B31  0BA0               	decfsz	??_Lcd_Init,f
  9604  1B32  2B31               	goto	u7687
  9605  1B33  0BA1               	decfsz	??_Lcd_Init+1,f
  9606  1B34  2B31               	goto	u7687
  9607  1B35  2B36               	nop2
  9608  1B36                     l4173:
  9609                           
  9610                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  9611  1B36  303F               	movlw	63
  9612  1B37  120A  118A  27E6  160A  158A  	fcall	_Lcd_Cmd
  9613  1B3C                     l4175:
  9614                           
  9615                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9616  1B3C  3084               	movlw	132
  9617  1B3D  1283               	bcf	3,5	;RP0=0, select bank0
  9618  1B3E  1303               	bcf	3,6	;RP1=0, select bank0
  9619  1B3F  00A0               	movwf	??_Lcd_Init
  9620  1B40                     u7697:
  9621  1B40  0BA0               	decfsz	??_Lcd_Init,f
  9622  1B41  2B40               	goto	u7697
  9623  1B42  0000               	nop
  9624                           
  9625                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  9626  1B43  303F               	movlw	63
  9627  1B44  120A  118A  27E6  160A  158A  	fcall	_Lcd_Cmd
  9628                           
  9629                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  9630  1B49  3038               	movlw	56
  9631  1B4A  120A  118A  27E6  160A  158A  	fcall	_Lcd_Cmd
  9632                           
  9633                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  9634  1B4F  300C               	movlw	12
  9635  1B50  120A  118A  27E6  160A  158A  	fcall	_Lcd_Cmd
  9636                           
  9637                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  9638  1B55  3006               	movlw	6
  9639  1B56  120A  118A  27E6  160A  158A  	fcall	_Lcd_Cmd
  9640  1B5B                     l124:
  9641  1B5B  0008               	return
  9642  1B5C                     __end_of_Lcd_Init:
  9643                           
  9644                           	psect	text34
  9645  1958                     __ptext34:	
  9646 ;; *************** function _Lcd_Clear *****************
  9647 ;; Defined at:
  9648 ;;		line 28 in file "LCD.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;		None
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;		None
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg, status,2, status,0, pclath, cstack
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9662 ;;      Params:         0       0       0       0       0
  9663 ;;      Locals:         0       0       0       0       0
  9664 ;;      Temps:          0       0       0       0       0
  9665 ;;      Totals:         0       0       0       0       0
  9666 ;;Total ram usage:        0 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; Hardware stack levels required when called:    3
  9669 ;; This function calls:
  9670 ;;		_Lcd_Cmd
  9671 ;; This function is called by:
  9672 ;;		_main
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           
  9677                           ;psect for function _Lcd_Clear
  9678  1958                     _Lcd_Clear:
  9679  1958                     l4177:	
  9680                           ;incstack = 0
  9681                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9682                           
  9683                           
  9684                           ;LCD.c: 29:     Lcd_Cmd(0);
  9685  1958  3000               	movlw	0
  9686  1959  120A  118A  27E6  160A  158A  	fcall	_Lcd_Cmd
  9687                           
  9688                           ;LCD.c: 30:     Lcd_Cmd(1);
  9689  195E  3001               	movlw	1
  9690  195F  120A  118A  27E6  160A  158A  	fcall	_Lcd_Cmd
  9691  1964                     l115:
  9692  1964  0008               	return
  9693  1965                     __end_of_Lcd_Clear:
  9694                           
  9695                           	psect	text35
  9696  07E6                     __ptext35:	
  9697 ;; *************** function _Lcd_Cmd *****************
  9698 ;; Defined at:
  9699 ;;		line 20 in file "LCD.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  a               1    wreg     unsigned char 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  a               1    6[COMMON] unsigned char 
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  1    wreg      void 
  9706 ;; Registers used:
  9707 ;;		wreg, status,2, status,0, pclath, cstack
  9708 ;; Tracked objects:
  9709 ;;		On entry : 0/0
  9710 ;;		On exit  : 0/0
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9713 ;;      Params:         0       0       0       0       0
  9714 ;;      Locals:         1       0       0       0       0
  9715 ;;      Temps:          2       0       0       0       0
  9716 ;;      Totals:         3       0       0       0       0
  9717 ;;Total ram usage:        3 bytes
  9718 ;; Hardware stack levels used:    1
  9719 ;; Hardware stack levels required when called:    2
  9720 ;; This function calls:
  9721 ;;		_Lcd_Port
  9722 ;; This function is called by:
  9723 ;;		_Lcd_Clear
  9724 ;;		_Lcd_Set_Cursor
  9725 ;;		_Lcd_Init
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           
  9730                           ;psect for function _Lcd_Cmd
  9731  07E6                     _Lcd_Cmd:
  9732                           
  9733                           ;incstack = 0
  9734                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9735                           ;Lcd_Cmd@a stored from wreg
  9736  07E6  00F6               	movwf	Lcd_Cmd@a
  9737  07E7                     l3849:
  9738                           
  9739                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
  9740  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  9741  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  9742  07E9  1009               	bcf	9,0	;volatile
  9743  07EA                     l3851:
  9744                           
  9745                           ;LCD.c: 22:     Lcd_Port(a);
  9746  07EA  0876               	movf	Lcd_Cmd@a,w
  9747  07EB  160A  158A  211E  120A  118A  	fcall	_Lcd_Port
  9748  07F0                     l3853:
  9749                           
  9750                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
  9751  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  9752  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  9753  07F2  1489               	bsf	9,1	;volatile
  9754  07F3                     l3855:
  9755                           
  9756                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9757  07F3  300B               	movlw	11
  9758  07F4  00F5               	movwf	??_Lcd_Cmd+1
  9759  07F5  3062               	movlw	98
  9760  07F6  00F4               	movwf	??_Lcd_Cmd
  9761  07F7                     u7707:
  9762  07F7  0BF4               	decfsz	??_Lcd_Cmd,f
  9763  07F8  2FF7               	goto	u7707
  9764  07F9  0BF5               	decfsz	??_Lcd_Cmd+1,f
  9765  07FA  2FF7               	goto	u7707
  9766  07FB  0000               	nop
  9767  07FC                     l3857:
  9768                           
  9769                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
  9770  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  9771  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  9772  07FE  1089               	bcf	9,1	;volatile
  9773  07FF                     l112:
  9774  07FF  0008               	return
  9775  0800                     __end_of_Lcd_Cmd:
  9776                           
  9777                           	psect	text36
  9778  191E                     __ptext36:	
  9779 ;; *************** function _Lcd_Port *****************
  9780 ;; Defined at:
  9781 ;;		line 16 in file "LCD.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  a               1    wreg     unsigned char 
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;  a               1    3[COMMON] unsigned char 
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  1    wreg      void 
  9788 ;; Registers used:
  9789 ;;		wreg
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9795 ;;      Params:         0       0       0       0       0
  9796 ;;      Locals:         1       0       0       0       0
  9797 ;;      Temps:          0       0       0       0       0
  9798 ;;      Totals:         1       0       0       0       0
  9799 ;;Total ram usage:        1 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:    1
  9802 ;; This function calls:
  9803 ;;		Nothing
  9804 ;; This function is called by:
  9805 ;;		_Lcd_Cmd
  9806 ;;		_Lcd_Init
  9807 ;;		_Lcd_Write_Char
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           
  9812                           ;psect for function _Lcd_Port
  9813  191E                     _Lcd_Port:
  9814                           
  9815                           ;incstack = 0
  9816                           ; Regs used in _Lcd_Port: [wreg]
  9817                           ;Lcd_Port@a stored from wreg
  9818  191E  00F3               	movwf	Lcd_Port@a
  9819  191F                     l3717:
  9820                           
  9821                           ;LCD.c: 17:     PORTD = a;
  9822  191F  0873               	movf	Lcd_Port@a,w
  9823  1920  1283               	bcf	3,5	;RP0=0, select bank0
  9824  1921  1303               	bcf	3,6	;RP1=0, select bank0
  9825  1922  0088               	movwf	8	;volatile
  9826  1923                     l109:
  9827  1923  0008               	return
  9828  1924                     __end_of_Lcd_Port:
  9829                           
  9830                           	psect	text37
  9831  1965                     __ptext37:	
  9832 ;; *************** function _Config_USARTT *****************
  9833 ;; Defined at:
  9834 ;;		line 11 in file "USART.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;		None
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;		None
  9839 ;; Return value:  Size  Location     Type
  9840 ;;                  1    wreg      void 
  9841 ;; Registers used:
  9842 ;;		wreg
  9843 ;; Tracked objects:
  9844 ;;		On entry : 0/0
  9845 ;;		On exit  : 0/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9848 ;;      Params:         0       0       0       0       0
  9849 ;;      Locals:         0       0       0       0       0
  9850 ;;      Temps:          0       0       0       0       0
  9851 ;;      Totals:         0       0       0       0       0
  9852 ;;Total ram usage:        0 bytes
  9853 ;; Hardware stack levels used:    1
  9854 ;; Hardware stack levels required when called:    1
  9855 ;; This function calls:
  9856 ;;		Nothing
  9857 ;; This function is called by:
  9858 ;;		_main
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           
  9863                           ;psect for function _Config_USARTT
  9864  1965                     _Config_USARTT:
  9865  1965                     l3229:	
  9866                           ;incstack = 0
  9867                           ; Regs used in _Config_USARTT: [wreg]
  9868                           
  9869                           
  9870                           ;USART.c: 12:     TXSTAbits.SYNC = 0;
  9871  1965  1683               	bsf	3,5	;RP0=1, select bank1
  9872  1966  1303               	bcf	3,6	;RP1=0, select bank1
  9873  1967  1218               	bcf	24,4	;volatile
  9874                           
  9875                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  9876  1968  1698               	bsf	24,5	;volatile
  9877                           
  9878                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  9879  1969  1118               	bcf	24,2	;volatile
  9880                           
  9881                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  9882  196A  1683               	bsf	3,5	;RP0=1, select bank3
  9883  196B  1703               	bsf	3,6	;RP1=1, select bank3
  9884  196C  1587               	bsf	7,3	;volatile
  9885  196D                     l3231:
  9886                           
  9887                           ;USART.c: 16:     SPBRG = 25;
  9888  196D  3019               	movlw	25
  9889  196E  1683               	bsf	3,5	;RP0=1, select bank1
  9890  196F  1303               	bcf	3,6	;RP1=0, select bank1
  9891  1970  0099               	movwf	25	;volatile
  9892  1971                     l3233:
  9893                           
  9894                           ;USART.c: 17:     RCSTAbits.SPEN = 1;
  9895  1971  1283               	bcf	3,5	;RP0=0, select bank0
  9896  1972  1303               	bcf	3,6	;RP1=0, select bank0
  9897  1973  1798               	bsf	24,7	;volatile
  9898  1974                     l3235:
  9899                           
  9900                           ;USART.c: 18:     INTCONbits.GIE = 1;
  9901  1974  178B               	bsf	11,7	;volatile
  9902  1975                     l152:
  9903  1975  0008               	return
  9904  1976                     __end_of_Config_USARTT:
  9905                           
  9906                           	psect	text38
  9907  19B5                     __ptext38:	
  9908 ;; *************** function _ISR *****************
  9909 ;; Defined at:
  9910 ;;		line 158 in file "main.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;		None
  9913 ;; Auto vars:     Size  Location     Type
  9914 ;;		None
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  1    wreg      void 
  9917 ;; Registers used:
  9918 ;;		wreg
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9924 ;;      Params:         0       0       0       0       0
  9925 ;;      Locals:         0       0       0       0       0
  9926 ;;      Temps:          3       0       0       0       0
  9927 ;;      Totals:         3       0       0       0       0
  9928 ;;Total ram usage:        3 bytes
  9929 ;; Hardware stack levels used:    1
  9930 ;; This function calls:
  9931 ;;		Nothing
  9932 ;; This function is called by:
  9933 ;;		Interrupt level 1
  9934 ;; This function uses a non-reentrant model
  9935 ;;
  9936                           
  9937                           
  9938                           ;psect for function _ISR
  9939  19B5                     _ISR:
  9940  19B5                     i1l3669:
  9941                           
  9942                           ;main.c: 159:     if (PIR1bits.RCIF == 1) {
  9943  19B5  1283               	bcf	3,5	;RP0=0, select bank0
  9944  19B6  1303               	bcf	3,6	;RP1=0, select bank0
  9945  19B7  1E8C               	btfss	12,5	;volatile
  9946  19B8  29BA               	goto	u574_21
  9947  19B9  29BB               	goto	u574_20
  9948  19BA                     u574_21:
  9949  19BA  29CC               	goto	i1l100
  9950  19BB                     u574_20:
  9951  19BB                     i1l3671:
  9952                           
  9953                           ;main.c: 160:         if (RCSTAbits.OERR == 1) {
  9954  19BB  1C98               	btfss	24,1	;volatile
  9955  19BC  29BE               	goto	u575_21
  9956  19BD  29BF               	goto	u575_20
  9957  19BE                     u575_21:
  9958  19BE  29C6               	goto	i1l3677
  9959  19BF                     u575_20:
  9960  19BF                     i1l3673:
  9961                           
  9962                           ;main.c: 161:             RCSTAbits.CREN = 0;
  9963  19BF  1218               	bcf	24,4	;volatile
  9964  19C0                     i1l3675:
  9965                           
  9966                           ;main.c: 162:             _delay((unsigned long)((300)*(8000000/4000000.0)));
  9967  19C0  30C7               	movlw	199
  9968  19C1  00F0               	movwf	??_ISR
  9969  19C2                     u771_27:
  9970  19C2  0BF0               	decfsz	??_ISR,f
  9971  19C3  29C2               	goto	u771_27
  9972  19C4  29C5               	nop2
  9973                           
  9974                           ;main.c: 163:         } else {
  9975  19C5  29CC               	goto	i1l100
  9976  19C6                     i1l3677:
  9977                           
  9978                           ;main.c: 164:             recibido = RCREG;
  9979  19C6  081A               	movf	26,w	;volatile
  9980  19C7  00F0               	movwf	??_ISR
  9981  19C8  0870               	movf	??_ISR,w
  9982  19C9  1683               	bsf	3,5	;RP0=1, select bank1
  9983  19CA  1303               	bcf	3,6	;RP1=0, select bank1
  9984  19CB  00D6               	movwf	_recibido^(0+128)
  9985  19CC                     i1l100:
  9986  19CC  0872               	movf	??_ISR+2,w
  9987  19CD  008A               	movwf	10
  9988  19CE  0E71               	swapf	??_ISR+1,w
  9989  19CF  0083               	movwf	3
  9990  19D0  0EFE               	swapf	btemp,f
  9991  19D1  0E7E               	swapf	btemp,w
  9992  19D2  0009               	retfie
  9993  19D3                     __end_of_ISR:
  9994  007E                     btemp	set	126	;btemp
  9995  007E                     wtemp0	set	126
  9996                           
  9997                           	psect	intentry
  9998  0004                     __pintentry:	
  9999                           ;incstack = 0
 10000                           ; Regs used in _ISR: [wreg]
 10001                           
 10002  0004                     interrupt_function:
 10003  007E                     saved_w	set	btemp
 10004  0004  00FE               	movwf	btemp
 10005  0005  0E03               	swapf	3,w
 10006  0006  00F1               	movwf	??_ISR+1
 10007  0007  080A               	movf	10,w
 10008  0008  00F2               	movwf	??_ISR+2
 10009  0009  160A  158A  29B5   	ljmp	_ISR
 10010                           
 10011                           	psect	config
 10012                           
 10013                           ;Config register CONFIG1 @ 0x2007
 10014                           ;	Oscillator Selection bits
 10015                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
 10016                           ;	Watchdog Timer Enable bit
 10017                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10018                           ;	Power-up Timer Enable bit
 10019                           ;	PWRTE = OFF, PWRT disabled
 10020                           ;	RE3/MCLR pin function select bit
 10021                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10022                           ;	Code Protection bit
 10023                           ;	CP = OFF, Program memory code protection is disabled
 10024                           ;	Data Code Protection bit
 10025                           ;	CPD = OFF, Data memory code protection is disabled
 10026                           ;	Brown Out Reset Selection bits
 10027                           ;	BOREN = OFF, BOR disabled
 10028                           ;	Internal External Switchover bit
 10029                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10030                           ;	Fail-Safe Clock Monitor Enabled bit
 10031                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10032                           ;	Low Voltage Programming Enable bit
 10033                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10034                           ;	In-Circuit Debugger Mode bit
 10035                           ;	DEBUG = 0x1, unprogrammed default
 10036  2007                     	org	8199
 10037  2007  20D5               	dw	8405
 10038                           
 10039                           ;Config register CONFIG2 @ 0x2008
 10040                           ;	Brown-out Reset Selection bit
 10041                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10042                           ;	Flash Program Memory Self Write Enable bits
 10043                           ;	WRT = OFF, Write protection off
 10044  2008                     	org	8200
 10045  2008  3FFF               	dw	16383
 10046                           
 10047                           	psect	text1_split_1
 10048  002A                     u7180:
 10049  002A                     l4301:
 10050  002A  1683               	bsf	3,5	;RP0=1, select bank1
 10051  002B  1303               	bcf	3,6	;RP1=0, select bank1
 10052  002C  0848               	movf	(sprintf@fval+3)^(0+128),w
 10053  002D  1283               	bcf	3,5	;RP0=0, select bank0
 10054  002E  1303               	bcf	3,6	;RP1=0, select bank0
 10055  002F  00A3               	movwf	___fleq@ff1+3
 10056  0030  1683               	bsf	3,5	;RP0=1, select bank1
 10057  0031  1303               	bcf	3,6	;RP1=0, select bank1
 10058  0032  0847               	movf	(sprintf@fval+2)^(0+128),w
 10059  0033  1283               	bcf	3,5	;RP0=0, select bank0
 10060  0034  1303               	bcf	3,6	;RP1=0, select bank0
 10061  0035  00A2               	movwf	___fleq@ff1+2
 10062  0036  1683               	bsf	3,5	;RP0=1, select bank1
 10063  0037  1303               	bcf	3,6	;RP1=0, select bank1
 10064  0038  0846               	movf	(sprintf@fval+1)^(0+128),w
 10065  0039  1283               	bcf	3,5	;RP0=0, select bank0
 10066  003A  1303               	bcf	3,6	;RP1=0, select bank0
 10067  003B  00A1               	movwf	___fleq@ff1+1
 10068  003C  1683               	bsf	3,5	;RP0=1, select bank1
 10069  003D  1303               	bcf	3,6	;RP1=0, select bank1
 10070  003E  0845               	movf	sprintf@fval^(0+128),w
 10071  003F  1283               	bcf	3,5	;RP0=0, select bank0
 10072  0040  1303               	bcf	3,6	;RP1=0, select bank0
 10073  0041  00A0               	movwf	___fleq@ff1
 10074  0042  3000               	movlw	0
 10075  0043  00A7               	movwf	___fleq@ff2+3
 10076  0044  3000               	movlw	0
 10077  0045  00A6               	movwf	___fleq@ff2+2
 10078  0046  3000               	movlw	0
 10079  0047  00A5               	movwf	___fleq@ff2+1
 10080  0048  3000               	movlw	0
 10081  0049  00A4               	movwf	___fleq@ff2
 10082  004A  160A  158A  235C  120A  118A  	fcall	___fleq
 10083  004F  1803               	btfsc	3,0
 10084  0050  2852               	goto	u7191
 10085  0051  2853               	goto	u7190
 10086  0052                     u7191:
 10087  0052  2935               	goto	l4321
 10088  0053                     u7190:
 10089  0053                     l4303:
 10090  0053  1683               	bsf	3,5	;RP0=1, select bank1
 10091  0054  1303               	bcf	3,6	;RP1=0, select bank1
 10092  0055  0848               	movf	(sprintf@fval+3)^(0+128),w
 10093  0056  1283               	bcf	3,5	;RP0=0, select bank0
 10094  0057  1303               	bcf	3,6	;RP1=0, select bank0
 10095  0058  00DB               	movwf	___fltol@f1+3
 10096  0059  1683               	bsf	3,5	;RP0=1, select bank1
 10097  005A  1303               	bcf	3,6	;RP1=0, select bank1
 10098  005B  0847               	movf	(sprintf@fval+2)^(0+128),w
 10099  005C  1283               	bcf	3,5	;RP0=0, select bank0
 10100  005D  1303               	bcf	3,6	;RP1=0, select bank0
 10101  005E  00DA               	movwf	___fltol@f1+2
 10102  005F  1683               	bsf	3,5	;RP0=1, select bank1
 10103  0060  1303               	bcf	3,6	;RP1=0, select bank1
 10104  0061  0846               	movf	(sprintf@fval+1)^(0+128),w
 10105  0062  1283               	bcf	3,5	;RP0=0, select bank0
 10106  0063  1303               	bcf	3,6	;RP1=0, select bank0
 10107  0064  00D9               	movwf	___fltol@f1+1
 10108  0065  1683               	bsf	3,5	;RP0=1, select bank1
 10109  0066  1303               	bcf	3,6	;RP1=0, select bank1
 10110  0067  0845               	movf	sprintf@fval^(0+128),w
 10111  0068  1283               	bcf	3,5	;RP0=0, select bank0
 10112  0069  1303               	bcf	3,6	;RP1=0, select bank0
 10113  006A  00D8               	movwf	___fltol@f1
 10114  006B  120A  118A  276A  120A  118A  	fcall	___fltol
 10115  0070  1283               	bcf	3,5	;RP0=0, select bank0
 10116  0071  1303               	bcf	3,6	;RP1=0, select bank0
 10117  0072  085B               	movf	?___fltol+3,w
 10118  0073  045A               	iorwf	?___fltol+2,w
 10119  0074  0459               	iorwf	?___fltol+1,w
 10120  0075  0458               	iorwf	?___fltol,w
 10121  0076  1D03               	skipz
 10122  0077  2879               	goto	u7201
 10123  0078  287A               	goto	u7200
 10124  0079                     u7201:
 10125  0079  2935               	goto	l4321
 10126  007A                     u7200:
 10127  007A                     l4305:
 10128  007A  1683               	bsf	3,5	;RP0=1, select bank1
 10129  007B  1303               	bcf	3,6	;RP1=0, select bank1
 10130  007C  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10131  007D  3A80               	xorlw	128
 10132  007E  00FF               	movwf	btemp+1
 10133  007F  3080               	movlw	128
 10134  0080  027F               	subwf	btemp+1,w
 10135  0081  1D03               	skipz
 10136  0082  2885               	goto	u7215
 10137  0083  3002               	movlw	2
 10138  0084  0243               	subwf	sprintf@eexp^(0+128),w
 10139  0085                     u7215:
 10140  0085  1C03               	skipc
 10141  0086  2888               	goto	u7211
 10142  0087  2889               	goto	u7210
 10143  0088                     u7211:
 10144  0088  2935               	goto	l4321
 10145  0089                     u7210:
 10146  0089                     l4307:
 10147                           
 10148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10149  0089  1683               	bsf	3,5	;RP0=1, select bank1
 10150  008A  1303               	bcf	3,6	;RP1=0, select bank1
 10151  008B  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10152  008C  1283               	bcf	3,5	;RP0=0, select bank0
 10153  008D  1303               	bcf	3,6	;RP1=0, select bank0
 10154  008E  00A3               	movwf	___flge@ff1+3
 10155  008F  1683               	bsf	3,5	;RP0=1, select bank1
 10156  0090  1303               	bcf	3,6	;RP1=0, select bank1
 10157  0091  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10158  0092  1283               	bcf	3,5	;RP0=0, select bank0
 10159  0093  1303               	bcf	3,6	;RP1=0, select bank0
 10160  0094  00A2               	movwf	___flge@ff1+2
 10161  0095  1683               	bsf	3,5	;RP0=1, select bank1
 10162  0096  1303               	bcf	3,6	;RP1=0, select bank1
 10163  0097  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10164  0098  1283               	bcf	3,5	;RP0=0, select bank0
 10165  0099  1303               	bcf	3,6	;RP1=0, select bank0
 10166  009A  00A1               	movwf	___flge@ff1+1
 10167  009B  1683               	bsf	3,5	;RP0=1, select bank1
 10168  009C  1303               	bcf	3,6	;RP1=0, select bank1
 10169  009D  083B               	movf	sprintf@tmpval^(0+128),w
 10170  009E  1283               	bcf	3,5	;RP0=0, select bank0
 10171  009F  1303               	bcf	3,6	;RP1=0, select bank0
 10172  00A0  00A0               	movwf	___flge@ff1
 10173  00A1  3040               	movlw	64
 10174  00A2  00A7               	movwf	___flge@ff2+3
 10175  00A3  3089               	movlw	137
 10176  00A4  00A6               	movwf	___flge@ff2+2
 10177  00A5  3070               	movlw	112
 10178  00A6  00A5               	movwf	___flge@ff2+1
 10179  00A7  305F               	movlw	95
 10180  00A8  00A4               	movwf	___flge@ff2
 10181  00A9  160A  158A  2515  120A  118A  	fcall	___flge
 10182  00AE  1803               	btfsc	3,0
 10183  00AF  28B1               	goto	u7221
 10184  00B0  28B2               	goto	u7220
 10185  00B1                     u7221:
 10186  00B1  28BB               	goto	l4311
 10187  00B2                     u7220:
 10188  00B2                     l4309:
 10189                           
 10190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10191  00B2  30F7               	movlw	247
 10192  00B3  1683               	bsf	3,5	;RP0=1, select bank1
 10193  00B4  1303               	bcf	3,6	;RP1=0, select bank1
 10194  00B5  07C3               	addwf	sprintf@eexp^(0+128),f
 10195  00B6  1803               	skipnc
 10196  00B7  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10197  00B8  30FF               	movlw	255
 10198  00B9  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10199                           
 10200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10201  00BA  28C3               	goto	l4313
 10202  00BB                     l4311:
 10203                           
 10204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10205  00BB  30F8               	movlw	248
 10206  00BC  1683               	bsf	3,5	;RP0=1, select bank1
 10207  00BD  1303               	bcf	3,6	;RP1=0, select bank1
 10208  00BE  07C3               	addwf	sprintf@eexp^(0+128),f
 10209  00BF  1803               	skipnc
 10210  00C0  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10211  00C1  30FF               	movlw	255
 10212  00C2  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10213  00C3                     l4313:
 10214                           
 10215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10216  00C3  0843               	movf	sprintf@eexp^(0+128),w
 10217  00C4  120A  158A  249D  120A  118A  	fcall	_scale
 10218  00C9  1283               	bcf	3,5	;RP0=0, select bank0
 10219  00CA  1303               	bcf	3,6	;RP1=0, select bank0
 10220  00CB  0848               	movf	?_scale+3,w
 10221  00CC  1683               	bsf	3,5	;RP0=1, select bank1
 10222  00CD  1303               	bcf	3,6	;RP1=0, select bank1
 10223  00CE  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10224  00CF  1283               	bcf	3,5	;RP0=0, select bank0
 10225  00D0  1303               	bcf	3,6	;RP1=0, select bank0
 10226  00D1  0847               	movf	?_scale+2,w
 10227  00D2  1683               	bsf	3,5	;RP0=1, select bank1
 10228  00D3  1303               	bcf	3,6	;RP1=0, select bank1
 10229  00D4  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10230  00D5  1283               	bcf	3,5	;RP0=0, select bank0
 10231  00D6  1303               	bcf	3,6	;RP1=0, select bank0
 10232  00D7  0846               	movf	?_scale+1,w
 10233  00D8  1683               	bsf	3,5	;RP0=1, select bank1
 10234  00D9  1303               	bcf	3,6	;RP1=0, select bank1
 10235  00DA  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10236  00DB  1283               	bcf	3,5	;RP0=0, select bank0
 10237  00DC  1303               	bcf	3,6	;RP1=0, select bank0
 10238  00DD  0845               	movf	?_scale,w
 10239  00DE  1683               	bsf	3,5	;RP0=1, select bank1
 10240  00DF  1303               	bcf	3,6	;RP1=0, select bank1
 10241  00E0  00BB               	movwf	sprintf@tmpval^(0+128)
 10242  00E1                     l4315:
 10243  00E1  0848               	movf	(sprintf@fval+3)^(0+128),w
 10244  00E2  1283               	bcf	3,5	;RP0=0, select bank0
 10245  00E3  1303               	bcf	3,6	;RP1=0, select bank0
 10246  00E4  00A3               	movwf	__div_to_l_@f1+3
 10247  00E5  1683               	bsf	3,5	;RP0=1, select bank1
 10248  00E6  1303               	bcf	3,6	;RP1=0, select bank1
 10249  00E7  0847               	movf	(sprintf@fval+2)^(0+128),w
 10250  00E8  1283               	bcf	3,5	;RP0=0, select bank0
 10251  00E9  1303               	bcf	3,6	;RP1=0, select bank0
 10252  00EA  00A2               	movwf	__div_to_l_@f1+2
 10253  00EB  1683               	bsf	3,5	;RP0=1, select bank1
 10254  00EC  1303               	bcf	3,6	;RP1=0, select bank1
 10255  00ED  0846               	movf	(sprintf@fval+1)^(0+128),w
 10256  00EE  1283               	bcf	3,5	;RP0=0, select bank0
 10257  00EF  1303               	bcf	3,6	;RP1=0, select bank0
 10258  00F0  00A1               	movwf	__div_to_l_@f1+1
 10259  00F1  1683               	bsf	3,5	;RP0=1, select bank1
 10260  00F2  1303               	bcf	3,6	;RP1=0, select bank1
 10261  00F3  0845               	movf	sprintf@fval^(0+128),w
 10262  00F4  1283               	bcf	3,5	;RP0=0, select bank0
 10263  00F5  1303               	bcf	3,6	;RP1=0, select bank0
 10264  00F6  00A0               	movwf	__div_to_l_@f1
 10265  00F7  1683               	bsf	3,5	;RP0=1, select bank1
 10266  00F8  1303               	bcf	3,6	;RP1=0, select bank1
 10267  00F9  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10268  00FA  1283               	bcf	3,5	;RP0=0, select bank0
 10269  00FB  1303               	bcf	3,6	;RP1=0, select bank0
 10270  00FC  00A7               	movwf	__div_to_l_@f2+3
 10271  00FD  1683               	bsf	3,5	;RP0=1, select bank1
 10272  00FE  1303               	bcf	3,6	;RP1=0, select bank1
 10273  00FF  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10274  0100  1283               	bcf	3,5	;RP0=0, select bank0
 10275  0101  1303               	bcf	3,6	;RP1=0, select bank0
 10276  0102  00A6               	movwf	__div_to_l_@f2+2
 10277  0103  1683               	bsf	3,5	;RP0=1, select bank1
 10278  0104  1303               	bcf	3,6	;RP1=0, select bank1
 10279  0105  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10280  0106  1283               	bcf	3,5	;RP0=0, select bank0
 10281  0107  1303               	bcf	3,6	;RP1=0, select bank0
 10282  0108  00A5               	movwf	__div_to_l_@f2+1
 10283  0109  1683               	bsf	3,5	;RP0=1, select bank1
 10284  010A  1303               	bcf	3,6	;RP1=0, select bank1
 10285  010B  083B               	movf	sprintf@tmpval^(0+128),w
 10286  010C  1283               	bcf	3,5	;RP0=0, select bank0
 10287  010D  1303               	bcf	3,6	;RP1=0, select bank0
 10288  010E  00A4               	movwf	__div_to_l_@f2
 10289  010F  120A  118A  26AC  120A  118A  	fcall	__div_to_l_
 10290  0114  1283               	bcf	3,5	;RP0=0, select bank0
 10291  0115  1303               	bcf	3,6	;RP1=0, select bank0
 10292  0116  0823               	movf	?__div_to_l_+3,w
 10293  0117  1683               	bsf	3,5	;RP0=1, select bank1
 10294  0118  1303               	bcf	3,6	;RP1=0, select bank1
 10295  0119  00C2               	movwf	(sprintf@val+3)^(0+128)
 10296  011A  1283               	bcf	3,5	;RP0=0, select bank0
 10297  011B  1303               	bcf	3,6	;RP1=0, select bank0
 10298  011C  0822               	movf	?__div_to_l_+2,w
 10299  011D  1683               	bsf	3,5	;RP0=1, select bank1
 10300  011E  1303               	bcf	3,6	;RP1=0, select bank1
 10301  011F  00C1               	movwf	(sprintf@val+2)^(0+128)
 10302  0120  1283               	bcf	3,5	;RP0=0, select bank0
 10303  0121  1303               	bcf	3,6	;RP1=0, select bank0
 10304  0122  0821               	movf	?__div_to_l_+1,w
 10305  0123  1683               	bsf	3,5	;RP0=1, select bank1
 10306  0124  1303               	bcf	3,6	;RP1=0, select bank1
 10307  0125  00C0               	movwf	(sprintf@val+1)^(0+128)
 10308  0126  1283               	bcf	3,5	;RP0=0, select bank0
 10309  0127  1303               	bcf	3,6	;RP1=0, select bank0
 10310  0128  0820               	movf	?__div_to_l_,w
 10311  0129  1683               	bsf	3,5	;RP0=1, select bank1
 10312  012A  1303               	bcf	3,6	;RP1=0, select bank1
 10313  012B  00BF               	movwf	sprintf@val^(0+128)
 10314  012C                     l4319:
 10315                           
 10316                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10317  012C  3000               	movlw	0
 10318  012D  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10319  012E  3000               	movlw	0
 10320  012F  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10321  0130  3000               	movlw	0
 10322  0131  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10323  0132  3000               	movlw	0
 10324  0133  00C5               	movwf	sprintf@fval^(0+128)
 10325                           
 10326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10327  0134  299B               	goto	l4327
 10328  0135                     l4321:
 10329                           
 10330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10331  0135  1683               	bsf	3,5	;RP0=1, select bank1
 10332  0136  1303               	bcf	3,6	;RP1=0, select bank1
 10333  0137  0848               	movf	(sprintf@fval+3)^(0+128),w
 10334  0138  1283               	bcf	3,5	;RP0=0, select bank0
 10335  0139  1303               	bcf	3,6	;RP1=0, select bank0
 10336  013A  00DB               	movwf	___fltol@f1+3
 10337  013B  1683               	bsf	3,5	;RP0=1, select bank1
 10338  013C  1303               	bcf	3,6	;RP1=0, select bank1
 10339  013D  0847               	movf	(sprintf@fval+2)^(0+128),w
 10340  013E  1283               	bcf	3,5	;RP0=0, select bank0
 10341  013F  1303               	bcf	3,6	;RP1=0, select bank0
 10342  0140  00DA               	movwf	___fltol@f1+2
 10343  0141  1683               	bsf	3,5	;RP0=1, select bank1
 10344  0142  1303               	bcf	3,6	;RP1=0, select bank1
 10345  0143  0846               	movf	(sprintf@fval+1)^(0+128),w
 10346  0144  1283               	bcf	3,5	;RP0=0, select bank0
 10347  0145  1303               	bcf	3,6	;RP1=0, select bank0
 10348  0146  00D9               	movwf	___fltol@f1+1
 10349  0147  1683               	bsf	3,5	;RP0=1, select bank1
 10350  0148  1303               	bcf	3,6	;RP1=0, select bank1
 10351  0149  0845               	movf	sprintf@fval^(0+128),w
 10352  014A  1283               	bcf	3,5	;RP0=0, select bank0
 10353  014B  1303               	bcf	3,6	;RP1=0, select bank0
 10354  014C  00D8               	movwf	___fltol@f1
 10355  014D  120A  118A  276A  120A  118A  	fcall	___fltol
 10356  0152  1283               	bcf	3,5	;RP0=0, select bank0
 10357  0153  1303               	bcf	3,6	;RP1=0, select bank0
 10358  0154  085B               	movf	?___fltol+3,w
 10359  0155  1683               	bsf	3,5	;RP0=1, select bank1
 10360  0156  1303               	bcf	3,6	;RP1=0, select bank1
 10361  0157  00C2               	movwf	(sprintf@val+3)^(0+128)
 10362  0158  1283               	bcf	3,5	;RP0=0, select bank0
 10363  0159  1303               	bcf	3,6	;RP1=0, select bank0
 10364  015A  085A               	movf	?___fltol+2,w
 10365  015B  1683               	bsf	3,5	;RP0=1, select bank1
 10366  015C  1303               	bcf	3,6	;RP1=0, select bank1
 10367  015D  00C1               	movwf	(sprintf@val+2)^(0+128)
 10368  015E  1283               	bcf	3,5	;RP0=0, select bank0
 10369  015F  1303               	bcf	3,6	;RP1=0, select bank0
 10370  0160  0859               	movf	?___fltol+1,w
 10371  0161  1683               	bsf	3,5	;RP0=1, select bank1
 10372  0162  1303               	bcf	3,6	;RP1=0, select bank1
 10373  0163  00C0               	movwf	(sprintf@val+1)^(0+128)
 10374  0164  1283               	bcf	3,5	;RP0=0, select bank0
 10375  0165  1303               	bcf	3,6	;RP1=0, select bank0
 10376  0166  0858               	movf	?___fltol,w
 10377  0167  1683               	bsf	3,5	;RP0=1, select bank1
 10378  0168  1303               	bcf	3,6	;RP1=0, select bank1
 10379  0169  00BF               	movwf	sprintf@val^(0+128)
 10380  016A                     l4323:
 10381                           
 10382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10383  016A  0842               	movf	(sprintf@val+3)^(0+128),w
 10384  016B  00F6               	movwf	___xxtofl@val+3
 10385  016C  0841               	movf	(sprintf@val+2)^(0+128),w
 10386  016D  00F5               	movwf	___xxtofl@val+2
 10387  016E  0840               	movf	(sprintf@val+1)^(0+128),w
 10388  016F  00F4               	movwf	___xxtofl@val+1
 10389  0170  083F               	movf	sprintf@val^(0+128),w
 10390  0171  00F3               	movwf	___xxtofl@val
 10391  0172  3000               	movlw	0
 10392  0173  160A  158A  25B9  120A  118A  	fcall	___xxtofl
 10393  0178  0876               	movf	?___xxtofl+3,w
 10394  0179  1683               	bsf	3,5	;RP0=1, select bank1
 10395  017A  1303               	bcf	3,6	;RP1=0, select bank1
 10396  017B  00A3               	movwf	(___flsub@a+3)^(0+128)
 10397  017C  0875               	movf	?___xxtofl+2,w
 10398  017D  00A2               	movwf	(___flsub@a+2)^(0+128)
 10399  017E  0874               	movf	?___xxtofl+1,w
 10400  017F  00A1               	movwf	(___flsub@a+1)^(0+128)
 10401  0180  0873               	movf	?___xxtofl,w
 10402  0181  00A0               	movwf	___flsub@a^(0+128)
 10403  0182  0848               	movf	(sprintf@fval+3)^(0+128),w
 10404  0183  00A7               	movwf	(___flsub@b+3)^(0+128)
 10405  0184  0847               	movf	(sprintf@fval+2)^(0+128),w
 10406  0185  00A6               	movwf	(___flsub@b+2)^(0+128)
 10407  0186  0846               	movf	(sprintf@fval+1)^(0+128),w
 10408  0187  00A5               	movwf	(___flsub@b+1)^(0+128)
 10409  0188  0845               	movf	sprintf@fval^(0+128),w
 10410  0189  00A4               	movwf	___flsub@b^(0+128)
 10411  018A  160A  158A  23AC  120A  118A  	fcall	___flsub
 10412  018F  1683               	bsf	3,5	;RP0=1, select bank1
 10413  0190  1303               	bcf	3,6	;RP1=0, select bank1
 10414  0191  0823               	movf	(?___flsub+3)^(0+128),w
 10415  0192  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10416  0193  0822               	movf	(?___flsub+2)^(0+128),w
 10417  0194  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10418  0195  0821               	movf	(?___flsub+1)^(0+128),w
 10419  0196  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10420  0197  0820               	movf	?___flsub^(0+128),w
 10421  0198  00C5               	movwf	sprintf@fval^(0+128)
 10422  0199                     l4325:
 10423                           
 10424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10425  0199  01C3               	clrf	sprintf@eexp^(0+128)
 10426  019A  01C4               	clrf	(sprintf@eexp+1)^(0+128)
 10427  019B                     l4327:
 10428                           
 10429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10430  019B  01CC               	clrf	sprintf@c^(0+128)
 10431  019C  0ACC               	incf	sprintf@c^(0+128),f
 10432  019D                     l4333:
 10433                           
 10434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10435  019D  084C               	movf	sprintf@c^(0+128),w
 10436  019E  00AD               	movwf	??_sprintf^(0+128)
 10437  019F  3001               	movlw	1
 10438  01A0                     u7235:
 10439  01A0  1003               	clrc
 10440  01A1  0DAD               	rlf	??_sprintf^(0+128),f
 10441  01A2  3EFF               	addlw	-1
 10442  01A3  1D03               	skipz
 10443  01A4  29A0               	goto	u7235
 10444  01A5  1003               	clrc
 10445  01A6  0D2D               	rlf	??_sprintf^(0+128),w
 10446  01A7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10447  01A8  0084               	movwf	4
 10448  01A9  160A  158A  200A  120A  118A  	fcall	stringdir
 10449  01AE  00AE               	movwf	(??_sprintf+1)^(0+128)
 10450  01AF  160A  158A  200A  120A  118A  	fcall	stringdir
 10451  01B4  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 10452  01B5  160A  158A  200A  120A  118A  	fcall	stringdir
 10453  01BA  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 10454  01BB  160A  158A  200A  120A  118A  	fcall	stringdir
 10455  01C0  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 10456  01C1  0831               	movf	(??_sprintf+4)^(0+128),w
 10457  01C2  0242               	subwf	(sprintf@val+3)^(0+128),w
 10458  01C3  1D03               	skipz
 10459  01C4  29CF               	goto	u7245
 10460  01C5  0830               	movf	(??_sprintf+3)^(0+128),w
 10461  01C6  0241               	subwf	(sprintf@val+2)^(0+128),w
 10462  01C7  1D03               	skipz
 10463  01C8  29CF               	goto	u7245
 10464  01C9  082F               	movf	(??_sprintf+2)^(0+128),w
 10465  01CA  0240               	subwf	(sprintf@val+1)^(0+128),w
 10466  01CB  1D03               	skipz
 10467  01CC  29CF               	goto	u7245
 10468  01CD  082E               	movf	(??_sprintf+1)^(0+128),w
 10469  01CE  023F               	subwf	sprintf@val^(0+128),w
 10470  01CF                     u7245:
 10471  01CF  1803               	skipnc
 10472  01D0  29D2               	goto	u7241
 10473  01D1  29D3               	goto	u7240
 10474  01D2                     u7241:
 10475  01D2  29D4               	goto	l4337
 10476  01D3                     u7240:
 10477  01D3  29DE               	goto	l4339
 10478  01D4                     l4337:
 10479  01D4  3001               	movlw	1
 10480  01D5  00AD               	movwf	??_sprintf^(0+128)
 10481  01D6  082D               	movf	??_sprintf^(0+128),w
 10482  01D7  07CC               	addwf	sprintf@c^(0+128),f
 10483  01D8  300A               	movlw	10
 10484  01D9  064C               	xorwf	sprintf@c^(0+128),w
 10485  01DA  1D03               	btfss	3,2
 10486  01DB  29DD               	goto	u7251
 10487  01DC  29DE               	goto	u7250
 10488  01DD                     u7251:
 10489  01DD  299D               	goto	l4333
 10490  01DE                     u7250:
 10491  01DE                     l4339:
 10492                           
 10493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10494  01DE  084C               	movf	sprintf@c^(0+128),w
 10495  01DF  074A               	addwf	sprintf@prec^(0+128),w
 10496  01E0  00AD               	movwf	??_sprintf^(0+128)
 10497  01E1  084B               	movf	(sprintf@prec+1)^(0+128),w
 10498  01E2  1803               	skipnc
 10499  01E3  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 10500  01E4  00AE               	movwf	(??_sprintf^(0+128)+1)
 10501  01E5  0843               	movf	sprintf@eexp^(0+128),w
 10502  01E6  072D               	addwf	??_sprintf^(0+128),w
 10503  01E7  00AF               	movwf	(??_sprintf+2)^(0+128)
 10504  01E8  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10505  01E9  1803               	skipnc
 10506  01EA  0A44               	incf	(sprintf@eexp+1)^(0+128),w
 10507  01EB  072E               	addwf	(??_sprintf+1)^(0+128),w
 10508  01EC  00B0               	movwf	(??_sprintf+3)^(0+128)
 10509  01ED  082F               	movf	(??_sprintf+2)^(0+128),w
 10510  01EE  02B9               	subwf	sprintf@width^(0+128),f
 10511  01EF  0830               	movf	(??_sprintf+3)^(0+128),w
 10512  01F0  1C03               	skipc
 10513  01F1  03BA               	decf	(sprintf@width+1)^(0+128),f
 10514  01F2  02BA               	subwf	(sprintf@width+1)^(0+128),f
 10515                           
 10516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10517  01F3  084A               	movf	sprintf@prec^(0+128),w
 10518  01F4  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10519  01F5  1903               	btfsc	3,2
 10520  01F6  29F8               	goto	u7261
 10521  01F7  29F9               	goto	u7260
 10522  01F8                     u7261:
 10523  01F8  29FF               	goto	l4343
 10524  01F9                     u7260:
 10525  01F9                     l4341:
 10526                           
 10527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10528  01F9  30FF               	movlw	255
 10529  01FA  07B9               	addwf	sprintf@width^(0+128),f
 10530  01FB  1803               	skipnc
 10531  01FC  0ABA               	incf	(sprintf@width+1)^(0+128),f
 10532  01FD  30FF               	movlw	255
 10533  01FE  07BA               	addwf	(sprintf@width+1)^(0+128),f
 10534  01FF                     l4343:
 10535                           
 10536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10537  01FF  3003               	movlw	3
 10538  0200  0537               	andwf	sprintf@flag^(0+128),w
 10539  0201  00AD               	movwf	??_sprintf^(0+128)
 10540  0202  3000               	movlw	0
 10541  0203  0538               	andwf	(sprintf@flag+1)^(0+128),w
 10542  0204  00AE               	movwf	(??_sprintf+1)^(0+128)
 10543  0205  082D               	movf	??_sprintf^(0+128),w
 10544  0206  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10545  0207  1903               	btfsc	3,2
 10546  0208  2A0A               	goto	u7271
 10547  0209  2A0B               	goto	u7270
 10548  020A                     u7271:
 10549  020A  2A20               	goto	l4353
 10550  020B                     u7270:
 10551  020B                     l4345:
 10552                           
 10553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10554  020B  30FF               	movlw	255
 10555  020C  07B9               	addwf	sprintf@width^(0+128),f
 10556  020D  1803               	skipnc
 10557  020E  0ABA               	incf	(sprintf@width+1)^(0+128),f
 10558  020F  30FF               	movlw	255
 10559  0210  07BA               	addwf	(sprintf@width+1)^(0+128),f
 10560  0211  2A20               	goto	l4353
 10561  0212                     l4347:
 10562                           
 10563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10564  0212  3020               	movlw	32
 10565  0213  1683               	bsf	3,5	;RP0=1, select bank1
 10566  0214  1303               	bcf	3,6	;RP1=0, select bank1
 10567  0215  00AD               	movwf	??_sprintf^(0+128)
 10568  0216  0849               	movf	sprintf@sp^(0+128),w
 10569  0217  0084               	movwf	4
 10570  0218  082D               	movf	??_sprintf^(0+128),w
 10571  0219  1383               	bcf	3,7	;select IRP bank0
 10572  021A  0080               	movwf	0
 10573  021B                     l4349:
 10574  021B  3001               	movlw	1
 10575  021C  00AD               	movwf	??_sprintf^(0+128)
 10576  021D  082D               	movf	??_sprintf^(0+128),w
 10577  021E  07C9               	addwf	sprintf@sp^(0+128),f
 10578  021F  2A0B               	goto	l4345
 10579  0220                     l4353:
 10580                           
 10581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10582  0220  083A               	movf	(sprintf@width+1)^(0+128),w
 10583  0221  3A80               	xorlw	128
 10584  0222  00FF               	movwf	btemp+1
 10585  0223  3080               	movlw	128
 10586  0224  027F               	subwf	btemp+1,w
 10587  0225  1D03               	skipz
 10588  0226  2A29               	goto	u7285
 10589  0227  3001               	movlw	1
 10590  0228  0239               	subwf	sprintf@width^(0+128),w
 10591  0229                     u7285:
 10592  0229  1803               	skipnc
 10593  022A  2A2C               	goto	u7281
 10594  022B  2A2D               	goto	u7280
 10595  022C                     u7281:
 10596  022C  2A12               	goto	l4347
 10597  022D                     u7280:
 10598  022D                     l4355:
 10599                           
 10600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10601  022D  3003               	movlw	3
 10602  022E  1683               	bsf	3,5	;RP0=1, select bank1
 10603  022F  1303               	bcf	3,6	;RP1=0, select bank1
 10604  0230  0537               	andwf	sprintf@flag^(0+128),w
 10605  0231  00AD               	movwf	??_sprintf^(0+128)
 10606  0232  3000               	movlw	0
 10607  0233  0538               	andwf	(sprintf@flag+1)^(0+128),w
 10608  0234  00AE               	movwf	(??_sprintf+1)^(0+128)
 10609  0235  082D               	movf	??_sprintf^(0+128),w
 10610  0236  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10611  0237  1903               	btfsc	3,2
 10612  0238  2A3A               	goto	u7291
 10613  0239  2A3B               	goto	u7290
 10614  023A                     u7291:
 10615  023A  2AED               	goto	l367
 10616  023B                     u7290:
 10617  023B                     l4357:
 10618                           
 10619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10620  023B  302D               	movlw	45
 10621  023C  00AD               	movwf	??_sprintf^(0+128)
 10622  023D  0849               	movf	sprintf@sp^(0+128),w
 10623  023E  0084               	movwf	4
 10624  023F  082D               	movf	??_sprintf^(0+128),w
 10625  0240  1383               	bcf	3,7	;select IRP bank0
 10626  0241  0080               	movwf	0
 10627  0242                     l4359:
 10628  0242  3001               	movlw	1
 10629  0243  00AD               	movwf	??_sprintf^(0+128)
 10630  0244  082D               	movf	??_sprintf^(0+128),w
 10631  0245  07C9               	addwf	sprintf@sp^(0+128),f
 10632  0246  2AED               	goto	l367
 10633  0247                     l4361:
 10634                           
 10635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10636  0247  084C               	movf	sprintf@c^(0+128),w
 10637  0248  00AD               	movwf	??_sprintf^(0+128)
 10638  0249  3001               	movlw	1
 10639  024A                     u7305:
 10640  024A  1003               	clrc
 10641  024B  0DAD               	rlf	??_sprintf^(0+128),f
 10642  024C  3EFF               	addlw	-1
 10643  024D  1D03               	skipz
 10644  024E  2A4A               	goto	u7305
 10645  024F  1003               	clrc
 10646  0250  0D2D               	rlf	??_sprintf^(0+128),w
 10647  0251  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10648  0252  0084               	movwf	4
 10649  0253  160A  158A  200A  120A  118A  	fcall	stringdir
 10650  0258  1283               	bcf	3,5	;RP0=0, select bank0
 10651  0259  1303               	bcf	3,6	;RP1=0, select bank0
 10652  025A  00A0               	movwf	___lldiv@divisor
 10653  025B  160A  158A  200A  120A  118A  	fcall	stringdir
 10654  0260  00A1               	movwf	___lldiv@divisor+1
 10655  0261  160A  158A  200A  120A  118A  	fcall	stringdir
 10656  0266  00A2               	movwf	___lldiv@divisor+2
 10657  0267  160A  158A  200A  120A  118A  	fcall	stringdir
 10658  026C  00A3               	movwf	___lldiv@divisor+3
 10659  026D  1683               	bsf	3,5	;RP0=1, select bank1
 10660  026E  1303               	bcf	3,6	;RP1=0, select bank1
 10661  026F  0842               	movf	(sprintf@val+3)^(0+128),w
 10662  0270  1283               	bcf	3,5	;RP0=0, select bank0
 10663  0271  1303               	bcf	3,6	;RP1=0, select bank0
 10664  0272  00A7               	movwf	___lldiv@dividend+3
 10665  0273  1683               	bsf	3,5	;RP0=1, select bank1
 10666  0274  1303               	bcf	3,6	;RP1=0, select bank1
 10667  0275  0841               	movf	(sprintf@val+2)^(0+128),w
 10668  0276  1283               	bcf	3,5	;RP0=0, select bank0
 10669  0277  1303               	bcf	3,6	;RP1=0, select bank0
 10670  0278  00A6               	movwf	___lldiv@dividend+2
 10671  0279  1683               	bsf	3,5	;RP0=1, select bank1
 10672  027A  1303               	bcf	3,6	;RP1=0, select bank1
 10673  027B  0840               	movf	(sprintf@val+1)^(0+128),w
 10674  027C  1283               	bcf	3,5	;RP0=0, select bank0
 10675  027D  1303               	bcf	3,6	;RP1=0, select bank0
 10676  027E  00A5               	movwf	___lldiv@dividend+1
 10677  027F  1683               	bsf	3,5	;RP0=1, select bank1
 10678  0280  1303               	bcf	3,6	;RP1=0, select bank1
 10679  0281  083F               	movf	sprintf@val^(0+128),w
 10680  0282  1283               	bcf	3,5	;RP0=0, select bank0
 10681  0283  1303               	bcf	3,6	;RP1=0, select bank0
 10682  0284  00A4               	movwf	___lldiv@dividend
 10683  0285  160A  158A  24AD  120A  118A  	fcall	___lldiv
 10684  028A  1283               	bcf	3,5	;RP0=0, select bank0
 10685  028B  1303               	bcf	3,6	;RP1=0, select bank0
 10686  028C  0823               	movf	?___lldiv+3,w
 10687  028D  1683               	bsf	3,5	;RP0=1, select bank1
 10688  028E  1303               	bcf	3,6	;RP1=0, select bank1
 10689  028F  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10690  0290  1283               	bcf	3,5	;RP0=0, select bank0
 10691  0291  1303               	bcf	3,6	;RP1=0, select bank0
 10692  0292  0822               	movf	?___lldiv+2,w
 10693  0293  1683               	bsf	3,5	;RP0=1, select bank1
 10694  0294  1303               	bcf	3,6	;RP1=0, select bank1
 10695  0295  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10696  0296  1283               	bcf	3,5	;RP0=0, select bank0
 10697  0297  1303               	bcf	3,6	;RP1=0, select bank0
 10698  0298  0821               	movf	?___lldiv+1,w
 10699  0299  1683               	bsf	3,5	;RP0=1, select bank1
 10700  029A  1303               	bcf	3,6	;RP1=0, select bank1
 10701  029B  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10702  029C  1283               	bcf	3,5	;RP0=0, select bank0
 10703  029D  1303               	bcf	3,6	;RP1=0, select bank0
 10704  029E  0820               	movf	?___lldiv,w
 10705  029F  1683               	bsf	3,5	;RP0=1, select bank1
 10706  02A0  1303               	bcf	3,6	;RP1=0, select bank1
 10707  02A1  00BB               	movwf	sprintf@tmpval^(0+128)
 10708  02A2                     l4363:
 10709                           
 10710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10711  02A2  3000               	movlw	0
 10712  02A3  1283               	bcf	3,5	;RP0=0, select bank0
 10713  02A4  1303               	bcf	3,6	;RP1=0, select bank0
 10714  02A5  00B0               	movwf	___llmod@divisor+3
 10715  02A6  3000               	movlw	0
 10716  02A7  00AF               	movwf	___llmod@divisor+2
 10717  02A8  3000               	movlw	0
 10718  02A9  00AE               	movwf	___llmod@divisor+1
 10719  02AA  300A               	movlw	10
 10720  02AB  00AD               	movwf	___llmod@divisor
 10721  02AC  1683               	bsf	3,5	;RP0=1, select bank1
 10722  02AD  1303               	bcf	3,6	;RP1=0, select bank1
 10723  02AE  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10724  02AF  1283               	bcf	3,5	;RP0=0, select bank0
 10725  02B0  1303               	bcf	3,6	;RP1=0, select bank0
 10726  02B1  00B4               	movwf	___llmod@dividend+3
 10727  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10728  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10729  02B4  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10730  02B5  1283               	bcf	3,5	;RP0=0, select bank0
 10731  02B6  1303               	bcf	3,6	;RP1=0, select bank0
 10732  02B7  00B3               	movwf	___llmod@dividend+2
 10733  02B8  1683               	bsf	3,5	;RP0=1, select bank1
 10734  02B9  1303               	bcf	3,6	;RP1=0, select bank1
 10735  02BA  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10736  02BB  1283               	bcf	3,5	;RP0=0, select bank0
 10737  02BC  1303               	bcf	3,6	;RP1=0, select bank0
 10738  02BD  00B2               	movwf	___llmod@dividend+1
 10739  02BE  1683               	bsf	3,5	;RP0=1, select bank1
 10740  02BF  1303               	bcf	3,6	;RP1=0, select bank1
 10741  02C0  083B               	movf	sprintf@tmpval^(0+128),w
 10742  02C1  1283               	bcf	3,5	;RP0=0, select bank0
 10743  02C2  1303               	bcf	3,6	;RP1=0, select bank0
 10744  02C3  00B1               	movwf	___llmod@dividend
 10745  02C4  160A  158A  23FC  120A  118A  	fcall	___llmod
 10746  02C9  1283               	bcf	3,5	;RP0=0, select bank0
 10747  02CA  1303               	bcf	3,6	;RP1=0, select bank0
 10748  02CB  0830               	movf	?___llmod+3,w
 10749  02CC  1683               	bsf	3,5	;RP0=1, select bank1
 10750  02CD  1303               	bcf	3,6	;RP1=0, select bank1
 10751  02CE  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10752  02CF  1283               	bcf	3,5	;RP0=0, select bank0
 10753  02D0  1303               	bcf	3,6	;RP1=0, select bank0
 10754  02D1  082F               	movf	?___llmod+2,w
 10755  02D2  1683               	bsf	3,5	;RP0=1, select bank1
 10756  02D3  1303               	bcf	3,6	;RP1=0, select bank1
 10757  02D4  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10758  02D5  1283               	bcf	3,5	;RP0=0, select bank0
 10759  02D6  1303               	bcf	3,6	;RP1=0, select bank0
 10760  02D7  082E               	movf	?___llmod+1,w
 10761  02D8  1683               	bsf	3,5	;RP0=1, select bank1
 10762  02D9  1303               	bcf	3,6	;RP1=0, select bank1
 10763  02DA  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10764  02DB  1283               	bcf	3,5	;RP0=0, select bank0
 10765  02DC  1303               	bcf	3,6	;RP1=0, select bank0
 10766  02DD  082D               	movf	?___llmod,w
 10767  02DE  1683               	bsf	3,5	;RP0=1, select bank1
 10768  02DF  1303               	bcf	3,6	;RP1=0, select bank1
 10769  02E0  00BB               	movwf	sprintf@tmpval^(0+128)
 10770  02E1                     l4365:
 10771                           
 10772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10773  02E1  083B               	movf	sprintf@tmpval^(0+128),w
 10774  02E2  3E30               	addlw	48
 10775  02E3  00AD               	movwf	??_sprintf^(0+128)
 10776  02E4  0849               	movf	sprintf@sp^(0+128),w
 10777  02E5  0084               	movwf	4
 10778  02E6  082D               	movf	??_sprintf^(0+128),w
 10779  02E7  1383               	bcf	3,7	;select IRP bank0
 10780  02E8  0080               	movwf	0
 10781  02E9  3001               	movlw	1
 10782  02EA  00AD               	movwf	??_sprintf^(0+128)
 10783  02EB  082D               	movf	??_sprintf^(0+128),w
 10784  02EC  07C9               	addwf	sprintf@sp^(0+128),f
 10785  02ED                     l367:	
 10786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10787                           
 10788                           
 10789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10790  02ED  3001               	movlw	1
 10791  02EE  02CC               	subwf	sprintf@c^(0+128),f
 10792  02EF  0A4C               	incf	sprintf@c^(0+128),w
 10793  02F0  1D03               	btfss	3,2
 10794  02F1  2AF3               	goto	u7311
 10795  02F2  2AF4               	goto	u7310
 10796  02F3                     u7311:
 10797  02F3  2A47               	goto	l4361
 10798  02F4                     u7310:
 10799  02F4  2B08               	goto	l4373
 10800  02F5                     l4367:
 10801                           
 10802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10803  02F5  3030               	movlw	48
 10804  02F6  1683               	bsf	3,5	;RP0=1, select bank1
 10805  02F7  1303               	bcf	3,6	;RP1=0, select bank1
 10806  02F8  00AD               	movwf	??_sprintf^(0+128)
 10807  02F9  0849               	movf	sprintf@sp^(0+128),w
 10808  02FA  0084               	movwf	4
 10809  02FB  082D               	movf	??_sprintf^(0+128),w
 10810  02FC  1383               	bcf	3,7	;select IRP bank0
 10811  02FD  0080               	movwf	0
 10812  02FE                     l4369:
 10813  02FE  3001               	movlw	1
 10814  02FF  00AD               	movwf	??_sprintf^(0+128)
 10815  0300  082D               	movf	??_sprintf^(0+128),w
 10816  0301  07C9               	addwf	sprintf@sp^(0+128),f
 10817  0302                     l4371:
 10818                           
 10819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10820  0302  30FF               	movlw	255
 10821  0303  07C3               	addwf	sprintf@eexp^(0+128),f
 10822  0304  1803               	skipnc
 10823  0305  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10824  0306  30FF               	movlw	255
 10825  0307  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10826  0308                     l4373:
 10827                           
 10828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10829  0308  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10830  0309  3A80               	xorlw	128
 10831  030A  00FF               	movwf	btemp+1
 10832  030B  3080               	movlw	128
 10833  030C  027F               	subwf	btemp+1,w
 10834  030D  1D03               	skipz
 10835  030E  2B11               	goto	u7325
 10836  030F  3001               	movlw	1
 10837  0310  0243               	subwf	sprintf@eexp^(0+128),w
 10838  0311                     u7325:
 10839  0311  1803               	skipnc
 10840  0312  2B14               	goto	u7321
 10841  0313  2B15               	goto	u7320
 10842  0314                     u7321:
 10843  0314  2AF5               	goto	l4367
 10844  0315                     u7320:
 10845  0315                     l4375:
 10846                           
 10847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10848  0315  1683               	bsf	3,5	;RP0=1, select bank1
 10849  0316  1303               	bcf	3,6	;RP1=0, select bank1
 10850  0317  084B               	movf	(sprintf@prec+1)^(0+128),w
 10851  0318  3A80               	xorlw	128
 10852  0319  00FF               	movwf	btemp+1
 10853  031A  3080               	movlw	128
 10854  031B  027F               	subwf	btemp+1,w
 10855  031C  1D03               	skipz
 10856  031D  2B20               	goto	u7335
 10857  031E  3009               	movlw	9
 10858  031F  024A               	subwf	sprintf@prec^(0+128),w
 10859  0320                     u7335:
 10860  0320  1C03               	skipc
 10861  0321  2B23               	goto	u7331
 10862  0322  2B24               	goto	u7330
 10863  0323                     u7331:
 10864  0323  2B2B               	goto	l4379
 10865  0324                     u7330:
 10866  0324                     l4377:
 10867                           
 10868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10869  0324  3008               	movlw	8
 10870  0325  1683               	bsf	3,5	;RP0=1, select bank1
 10871  0326  1303               	bcf	3,6	;RP1=0, select bank1
 10872  0327  00AD               	movwf	??_sprintf^(0+128)
 10873  0328  082D               	movf	??_sprintf^(0+128),w
 10874  0329  00CC               	movwf	sprintf@c^(0+128)
 10875  032A  2B31               	goto	l374
 10876  032B                     l4379:
 10877                           
 10878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10879  032B  1683               	bsf	3,5	;RP0=1, select bank1
 10880  032C  1303               	bcf	3,6	;RP1=0, select bank1
 10881  032D  084A               	movf	sprintf@prec^(0+128),w
 10882  032E  00AD               	movwf	??_sprintf^(0+128)
 10883  032F  082D               	movf	??_sprintf^(0+128),w
 10884  0330  00CC               	movwf	sprintf@c^(0+128)
 10885  0331                     l374:
 10886                           
 10887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10888  0331  084C               	movf	sprintf@c^(0+128),w
 10889  0332  00AD               	movwf	??_sprintf^(0+128)
 10890  0333  01AE               	clrf	(??_sprintf^(0+128)+1)
 10891  0334  082D               	movf	??_sprintf^(0+128),w
 10892  0335  02CA               	subwf	sprintf@prec^(0+128),f
 10893  0336  082E               	movf	(??_sprintf+1)^(0+128),w
 10894  0337  1C03               	skipc
 10895  0338  03CB               	decf	(sprintf@prec+1)^(0+128),f
 10896  0339  02CB               	subwf	(sprintf@prec+1)^(0+128),f
 10897  033A                     l4381:
 10898                           
 10899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10900  033A  084C               	movf	sprintf@c^(0+128),w
 10901  033B  1903               	btfsc	3,2
 10902  033C  2B3E               	goto	u7341
 10903  033D  2B3F               	goto	u7340
 10904  033E                     u7341:
 10905  033E  2B4A               	goto	l4387
 10906  033F                     u7340:
 10907  033F                     l4383:
 10908                           
 10909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10910  033F  302E               	movlw	46
 10911  0340  00AD               	movwf	??_sprintf^(0+128)
 10912  0341  0849               	movf	sprintf@sp^(0+128),w
 10913  0342  0084               	movwf	4
 10914  0343  082D               	movf	??_sprintf^(0+128),w
 10915  0344  1383               	bcf	3,7	;select IRP bank0
 10916  0345  0080               	movwf	0
 10917  0346                     l4385:
 10918  0346  3001               	movlw	1
 10919  0347  00AD               	movwf	??_sprintf^(0+128)
 10920  0348  082D               	movf	??_sprintf^(0+128),w
 10921  0349  07C9               	addwf	sprintf@sp^(0+128),f
 10922  034A                     l4387:
 10923                           
 10924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10925  034A  084C               	movf	sprintf@c^(0+128),w
 10926  034B  120A  158A  249D  120A  118A  	fcall	_scale
 10927  0350  1283               	bcf	3,5	;RP0=0, select bank0
 10928  0351  1303               	bcf	3,6	;RP1=0, select bank0
 10929  0352  0848               	movf	?_scale+3,w
 10930  0353  1683               	bsf	3,5	;RP0=1, select bank1
 10931  0354  1303               	bcf	3,6	;RP1=0, select bank1
 10932  0355  00B5               	movwf	(_sprintf$1261+3)^(0+128)
 10933  0356  1283               	bcf	3,5	;RP0=0, select bank0
 10934  0357  1303               	bcf	3,6	;RP1=0, select bank0
 10935  0358  0847               	movf	?_scale+2,w
 10936  0359  1683               	bsf	3,5	;RP0=1, select bank1
 10937  035A  1303               	bcf	3,6	;RP1=0, select bank1
 10938  035B  00B4               	movwf	(_sprintf$1261+2)^(0+128)
 10939  035C  1283               	bcf	3,5	;RP0=0, select bank0
 10940  035D  1303               	bcf	3,6	;RP1=0, select bank0
 10941  035E  0846               	movf	?_scale+1,w
 10942  035F  1683               	bsf	3,5	;RP0=1, select bank1
 10943  0360  1303               	bcf	3,6	;RP1=0, select bank1
 10944  0361  00B3               	movwf	(_sprintf$1261+1)^(0+128)
 10945  0362  1283               	bcf	3,5	;RP0=0, select bank0
 10946  0363  1303               	bcf	3,6	;RP1=0, select bank0
 10947  0364  0845               	movf	?_scale,w
 10948  0365  1683               	bsf	3,5	;RP0=1, select bank1
 10949  0366  1303               	bcf	3,6	;RP1=0, select bank1
 10950  0367  00B2               	movwf	_sprintf$1261^(0+128)
 10951  0368                     l4389:
 10952                           
 10953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10954  0368  0835               	movf	(_sprintf$1261+3)^(0+128),w
 10955  0369  1283               	bcf	3,5	;RP0=0, select bank0
 10956  036A  1303               	bcf	3,6	;RP1=0, select bank0
 10957  036B  00B2               	movwf	___flmul@a+3
 10958  036C  1683               	bsf	3,5	;RP0=1, select bank1
 10959  036D  1303               	bcf	3,6	;RP1=0, select bank1
 10960  036E  0834               	movf	(_sprintf$1261+2)^(0+128),w
 10961  036F  1283               	bcf	3,5	;RP0=0, select bank0
 10962  0370  1303               	bcf	3,6	;RP1=0, select bank0
 10963  0371  00B1               	movwf	___flmul@a+2
 10964  0372  1683               	bsf	3,5	;RP0=1, select bank1
 10965  0373  1303               	bcf	3,6	;RP1=0, select bank1
 10966  0374  0833               	movf	(_sprintf$1261+1)^(0+128),w
 10967  0375  1283               	bcf	3,5	;RP0=0, select bank0
 10968  0376  1303               	bcf	3,6	;RP1=0, select bank0
 10969  0377  00B0               	movwf	___flmul@a+1
 10970  0378  1683               	bsf	3,5	;RP0=1, select bank1
 10971  0379  1303               	bcf	3,6	;RP1=0, select bank1
 10972  037A  0832               	movf	_sprintf$1261^(0+128),w
 10973  037B  1283               	bcf	3,5	;RP0=0, select bank0
 10974  037C  1303               	bcf	3,6	;RP1=0, select bank0
 10975  037D  00AF               	movwf	___flmul@a
 10976  037E  1683               	bsf	3,5	;RP0=1, select bank1
 10977  037F  1303               	bcf	3,6	;RP1=0, select bank1
 10978  0380  0848               	movf	(sprintf@fval+3)^(0+128),w
 10979  0381  1283               	bcf	3,5	;RP0=0, select bank0
 10980  0382  1303               	bcf	3,6	;RP1=0, select bank0
 10981  0383  00AE               	movwf	___flmul@b+3
 10982  0384  1683               	bsf	3,5	;RP0=1, select bank1
 10983  0385  1303               	bcf	3,6	;RP1=0, select bank1
 10984  0386  0847               	movf	(sprintf@fval+2)^(0+128),w
 10985  0387  1283               	bcf	3,5	;RP0=0, select bank0
 10986  0388  1303               	bcf	3,6	;RP1=0, select bank0
 10987  0389  00AD               	movwf	___flmul@b+2
 10988  038A  1683               	bsf	3,5	;RP0=1, select bank1
 10989  038B  1303               	bcf	3,6	;RP1=0, select bank1
 10990  038C  0846               	movf	(sprintf@fval+1)^(0+128),w
 10991  038D  1283               	bcf	3,5	;RP0=0, select bank0
 10992  038E  1303               	bcf	3,6	;RP1=0, select bank0
 10993  038F  00AC               	movwf	___flmul@b+1
 10994  0390  1683               	bsf	3,5	;RP0=1, select bank1
 10995  0391  1303               	bcf	3,6	;RP1=0, select bank1
 10996  0392  0845               	movf	sprintf@fval^(0+128),w
 10997  0393  1283               	bcf	3,5	;RP0=0, select bank0
 10998  0394  1303               	bcf	3,6	;RP1=0, select bank0
 10999  0395  00AB               	movwf	___flmul@b
 11000  0396  120A  158A  213C  120A  118A  	fcall	___flmul
 11001  039B  1283               	bcf	3,5	;RP0=0, select bank0
 11002  039C  1303               	bcf	3,6	;RP1=0, select bank0
 11003  039D  082E               	movf	?___flmul+3,w
 11004  039E  00DB               	movwf	___fltol@f1+3
 11005  039F  082D               	movf	?___flmul+2,w
 11006  03A0  00DA               	movwf	___fltol@f1+2
 11007  03A1  082C               	movf	?___flmul+1,w
 11008  03A2  00D9               	movwf	___fltol@f1+1
 11009  03A3  082B               	movf	?___flmul,w
 11010  03A4  00D8               	movwf	___fltol@f1
 11011  03A5  120A  118A  276A  120A  118A  	fcall	___fltol
 11012  03AA  1283               	bcf	3,5	;RP0=0, select bank0
 11013  03AB  1303               	bcf	3,6	;RP1=0, select bank0
 11014  03AC  085B               	movf	?___fltol+3,w
 11015  03AD  1683               	bsf	3,5	;RP0=1, select bank1
 11016  03AE  1303               	bcf	3,6	;RP1=0, select bank1
 11017  03AF  00C2               	movwf	(sprintf@val+3)^(0+128)
 11018  03B0  1283               	bcf	3,5	;RP0=0, select bank0
 11019  03B1  1303               	bcf	3,6	;RP1=0, select bank0
 11020  03B2  085A               	movf	?___fltol+2,w
 11021  03B3  1683               	bsf	3,5	;RP0=1, select bank1
 11022  03B4  1303               	bcf	3,6	;RP1=0, select bank1
 11023  03B5  00C1               	movwf	(sprintf@val+2)^(0+128)
 11024  03B6  1283               	bcf	3,5	;RP0=0, select bank0
 11025  03B7  1303               	bcf	3,6	;RP1=0, select bank0
 11026  03B8  0859               	movf	?___fltol+1,w
 11027  03B9  1683               	bsf	3,5	;RP0=1, select bank1
 11028  03BA  1303               	bcf	3,6	;RP1=0, select bank1
 11029  03BB  00C0               	movwf	(sprintf@val+1)^(0+128)
 11030  03BC  1283               	bcf	3,5	;RP0=0, select bank0
 11031  03BD  1303               	bcf	3,6	;RP1=0, select bank0
 11032  03BE  0858               	movf	?___fltol,w
 11033  03BF  1683               	bsf	3,5	;RP0=1, select bank1
 11034  03C0  1303               	bcf	3,6	;RP1=0, select bank1
 11035  03C1  00BF               	movwf	sprintf@val^(0+128)
 11036                           
 11037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11038  03C2  2CC4               	goto	l4399
 11039  03C3                     l4391:
 11040                           
 11041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11042  03C3  084C               	movf	sprintf@c^(0+128),w
 11043  03C4  00AD               	movwf	??_sprintf^(0+128)
 11044  03C5  3001               	movlw	1
 11045  03C6                     u7355:
 11046  03C6  1003               	clrc
 11047  03C7  0DAD               	rlf	??_sprintf^(0+128),f
 11048  03C8  3EFF               	addlw	-1
 11049  03C9  1D03               	skipz
 11050  03CA  2BC6               	goto	u7355
 11051  03CB  1003               	clrc
 11052  03CC  0D2D               	rlf	??_sprintf^(0+128),w
 11053  03CD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11054  03CE  0084               	movwf	4
 11055  03CF  160A  158A  200A  120A  118A  	fcall	stringdir
 11056  03D4  1283               	bcf	3,5	;RP0=0, select bank0
 11057  03D5  1303               	bcf	3,6	;RP1=0, select bank0
 11058  03D6  00A0               	movwf	___lldiv@divisor
 11059  03D7  160A  158A  200A  120A  118A  	fcall	stringdir
 11060  03DC  00A1               	movwf	___lldiv@divisor+1
 11061  03DD  160A  158A  200A  120A  118A  	fcall	stringdir
 11062  03E2  00A2               	movwf	___lldiv@divisor+2
 11063  03E3  160A  158A  200A  120A  118A  	fcall	stringdir
 11064  03E8  00A3               	movwf	___lldiv@divisor+3
 11065  03E9  1683               	bsf	3,5	;RP0=1, select bank1
 11066  03EA  1303               	bcf	3,6	;RP1=0, select bank1
 11067  03EB  0842               	movf	(sprintf@val+3)^(0+128),w
 11068  03EC  1283               	bcf	3,5	;RP0=0, select bank0
 11069  03ED  1303               	bcf	3,6	;RP1=0, select bank0
 11070  03EE  00A7               	movwf	___lldiv@dividend+3
 11071  03EF  1683               	bsf	3,5	;RP0=1, select bank1
 11072  03F0  1303               	bcf	3,6	;RP1=0, select bank1
 11073  03F1  0841               	movf	(sprintf@val+2)^(0+128),w
 11074  03F2  1283               	bcf	3,5	;RP0=0, select bank0
 11075  03F3  1303               	bcf	3,6	;RP1=0, select bank0
 11076  03F4  00A6               	movwf	___lldiv@dividend+2
 11077  03F5  1683               	bsf	3,5	;RP0=1, select bank1
 11078  03F6  1303               	bcf	3,6	;RP1=0, select bank1
 11079  03F7  0840               	movf	(sprintf@val+1)^(0+128),w
 11080  03F8  1283               	bcf	3,5	;RP0=0, select bank0
 11081  03F9  1303               	bcf	3,6	;RP1=0, select bank0
 11082  03FA  00A5               	movwf	___lldiv@dividend+1
 11083  03FB  1683               	bsf	3,5	;RP0=1, select bank1
 11084  03FC  1303               	bcf	3,6	;RP1=0, select bank1
 11085  03FD  083F               	movf	sprintf@val^(0+128),w
 11086  03FE  1283               	bcf	3,5	;RP0=0, select bank0
 11087  03FF  1303               	bcf	3,6	;RP1=0, select bank0
 11088  0400  00A4               	movwf	___lldiv@dividend
 11089  0401  160A  158A  24AD  120A  118A  	fcall	___lldiv
 11090  0406  1283               	bcf	3,5	;RP0=0, select bank0
 11091  0407  1303               	bcf	3,6	;RP1=0, select bank0
 11092  0408  0823               	movf	?___lldiv+3,w
 11093  0409  1683               	bsf	3,5	;RP0=1, select bank1
 11094  040A  1303               	bcf	3,6	;RP1=0, select bank1
 11095  040B  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 11096  040C  1283               	bcf	3,5	;RP0=0, select bank0
 11097  040D  1303               	bcf	3,6	;RP1=0, select bank0
 11098  040E  0822               	movf	?___lldiv+2,w
 11099  040F  1683               	bsf	3,5	;RP0=1, select bank1
 11100  0410  1303               	bcf	3,6	;RP1=0, select bank1
 11101  0411  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 11102  0412  1283               	bcf	3,5	;RP0=0, select bank0
 11103  0413  1303               	bcf	3,6	;RP1=0, select bank0
 11104  0414  0821               	movf	?___lldiv+1,w
 11105  0415  1683               	bsf	3,5	;RP0=1, select bank1
 11106  0416  1303               	bcf	3,6	;RP1=0, select bank1
 11107  0417  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 11108  0418  1283               	bcf	3,5	;RP0=0, select bank0
 11109  0419  1303               	bcf	3,6	;RP1=0, select bank0
 11110  041A  0820               	movf	?___lldiv,w
 11111  041B  1683               	bsf	3,5	;RP0=1, select bank1
 11112  041C  1303               	bcf	3,6	;RP1=0, select bank1
 11113  041D  00BB               	movwf	sprintf@tmpval^(0+128)
 11114  041E                     l4393:
 11115                           
 11116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11117  041E  3000               	movlw	0
 11118  041F  1283               	bcf	3,5	;RP0=0, select bank0
 11119  0420  1303               	bcf	3,6	;RP1=0, select bank0
 11120  0421  00B0               	movwf	___llmod@divisor+3
 11121  0422  3000               	movlw	0
 11122  0423  00AF               	movwf	___llmod@divisor+2
 11123  0424  3000               	movlw	0
 11124  0425  00AE               	movwf	___llmod@divisor+1
 11125  0426  300A               	movlw	10
 11126  0427  00AD               	movwf	___llmod@divisor
 11127  0428  1683               	bsf	3,5	;RP0=1, select bank1
 11128  0429  1303               	bcf	3,6	;RP1=0, select bank1
 11129  042A  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 11130  042B  1283               	bcf	3,5	;RP0=0, select bank0
 11131  042C  1303               	bcf	3,6	;RP1=0, select bank0
 11132  042D  00B4               	movwf	___llmod@dividend+3
 11133  042E  1683               	bsf	3,5	;RP0=1, select bank1
 11134  042F  1303               	bcf	3,6	;RP1=0, select bank1
 11135  0430  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 11136  0431  1283               	bcf	3,5	;RP0=0, select bank0
 11137  0432  1303               	bcf	3,6	;RP1=0, select bank0
 11138  0433  00B3               	movwf	___llmod@dividend+2
 11139  0434  1683               	bsf	3,5	;RP0=1, select bank1
 11140  0435  1303               	bcf	3,6	;RP1=0, select bank1
 11141  0436  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 11142  0437  1283               	bcf	3,5	;RP0=0, select bank0
 11143  0438  1303               	bcf	3,6	;RP1=0, select bank0
 11144  0439  00B2               	movwf	___llmod@dividend+1
 11145  043A  1683               	bsf	3,5	;RP0=1, select bank1
 11146  043B  1303               	bcf	3,6	;RP1=0, select bank1
 11147  043C  083B               	movf	sprintf@tmpval^(0+128),w
 11148  043D  1283               	bcf	3,5	;RP0=0, select bank0
 11149  043E  1303               	bcf	3,6	;RP1=0, select bank0
 11150  043F  00B1               	movwf	___llmod@dividend
 11151  0440  160A  158A  23FC  120A  118A  	fcall	___llmod
 11152  0445  1283               	bcf	3,5	;RP0=0, select bank0
 11153  0446  1303               	bcf	3,6	;RP1=0, select bank0
 11154  0447  0830               	movf	?___llmod+3,w
 11155  0448  1683               	bsf	3,5	;RP0=1, select bank1
 11156  0449  1303               	bcf	3,6	;RP1=0, select bank1
 11157  044A  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 11158  044B  1283               	bcf	3,5	;RP0=0, select bank0
 11159  044C  1303               	bcf	3,6	;RP1=0, select bank0
 11160  044D  082F               	movf	?___llmod+2,w
 11161  044E  1683               	bsf	3,5	;RP0=1, select bank1
 11162  044F  1303               	bcf	3,6	;RP1=0, select bank1
 11163  0450  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 11164  0451  1283               	bcf	3,5	;RP0=0, select bank0
 11165  0452  1303               	bcf	3,6	;RP1=0, select bank0
 11166  0453  082E               	movf	?___llmod+1,w
 11167  0454  1683               	bsf	3,5	;RP0=1, select bank1
 11168  0455  1303               	bcf	3,6	;RP1=0, select bank1
 11169  0456  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 11170  0457  1283               	bcf	3,5	;RP0=0, select bank0
 11171  0458  1303               	bcf	3,6	;RP1=0, select bank0
 11172  0459  082D               	movf	?___llmod,w
 11173  045A  1683               	bsf	3,5	;RP0=1, select bank1
 11174  045B  1303               	bcf	3,6	;RP1=0, select bank1
 11175  045C  00BB               	movwf	sprintf@tmpval^(0+128)
 11176  045D                     l4395:
 11177                           
 11178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11179  045D  083B               	movf	sprintf@tmpval^(0+128),w
 11180  045E  3E30               	addlw	48
 11181  045F  00AD               	movwf	??_sprintf^(0+128)
 11182  0460  0849               	movf	sprintf@sp^(0+128),w
 11183  0461  0084               	movwf	4
 11184  0462  082D               	movf	??_sprintf^(0+128),w
 11185  0463  1383               	bcf	3,7	;select IRP bank0
 11186  0464  0080               	movwf	0
 11187  0465  3001               	movlw	1
 11188  0466  00AD               	movwf	??_sprintf^(0+128)
 11189  0467  082D               	movf	??_sprintf^(0+128),w
 11190  0468  07C9               	addwf	sprintf@sp^(0+128),f
 11191  0469                     l4397:
 11192                           
 11193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11194  0469  084C               	movf	sprintf@c^(0+128),w
 11195  046A  00AD               	movwf	??_sprintf^(0+128)
 11196  046B  3001               	movlw	1
 11197  046C                     u7365:
 11198  046C  1003               	clrc
 11199  046D  0DAD               	rlf	??_sprintf^(0+128),f
 11200  046E  3EFF               	addlw	-1
 11201  046F  1D03               	skipz
 11202  0470  2C6C               	goto	u7365
 11203  0471  1003               	clrc
 11204  0472  0D2D               	rlf	??_sprintf^(0+128),w
 11205  0473  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11206  0474  0084               	movwf	4
 11207  0475  160A  158A  200A  120A  118A  	fcall	stringdir
 11208  047A  1283               	bcf	3,5	;RP0=0, select bank0
 11209  047B  1303               	bcf	3,6	;RP1=0, select bank0
 11210  047C  00AD               	movwf	___llmod@divisor
 11211  047D  160A  158A  200A  120A  118A  	fcall	stringdir
 11212  0482  00AE               	movwf	___llmod@divisor+1
 11213  0483  160A  158A  200A  120A  118A  	fcall	stringdir
 11214  0488  00AF               	movwf	___llmod@divisor+2
 11215  0489  160A  158A  200A  120A  118A  	fcall	stringdir
 11216  048E  00B0               	movwf	___llmod@divisor+3
 11217  048F  1683               	bsf	3,5	;RP0=1, select bank1
 11218  0490  1303               	bcf	3,6	;RP1=0, select bank1
 11219  0491  0842               	movf	(sprintf@val+3)^(0+128),w
 11220  0492  1283               	bcf	3,5	;RP0=0, select bank0
 11221  0493  1303               	bcf	3,6	;RP1=0, select bank0
 11222  0494  00B4               	movwf	___llmod@dividend+3
 11223  0495  1683               	bsf	3,5	;RP0=1, select bank1
 11224  0496  1303               	bcf	3,6	;RP1=0, select bank1
 11225  0497  0841               	movf	(sprintf@val+2)^(0+128),w
 11226  0498  1283               	bcf	3,5	;RP0=0, select bank0
 11227  0499  1303               	bcf	3,6	;RP1=0, select bank0
 11228  049A  00B3               	movwf	___llmod@dividend+2
 11229  049B  1683               	bsf	3,5	;RP0=1, select bank1
 11230  049C  1303               	bcf	3,6	;RP1=0, select bank1
 11231  049D  0840               	movf	(sprintf@val+1)^(0+128),w
 11232  049E  1283               	bcf	3,5	;RP0=0, select bank0
 11233  049F  1303               	bcf	3,6	;RP1=0, select bank0
 11234  04A0  00B2               	movwf	___llmod@dividend+1
 11235  04A1  1683               	bsf	3,5	;RP0=1, select bank1
 11236  04A2  1303               	bcf	3,6	;RP1=0, select bank1
 11237  04A3  083F               	movf	sprintf@val^(0+128),w
 11238  04A4  1283               	bcf	3,5	;RP0=0, select bank0
 11239  04A5  1303               	bcf	3,6	;RP1=0, select bank0
 11240  04A6  00B1               	movwf	___llmod@dividend
 11241  04A7  160A  158A  23FC  120A  118A  	fcall	___llmod
 11242  04AC  1283               	bcf	3,5	;RP0=0, select bank0
 11243  04AD  1303               	bcf	3,6	;RP1=0, select bank0
 11244  04AE  0830               	movf	?___llmod+3,w
 11245  04AF  1683               	bsf	3,5	;RP0=1, select bank1
 11246  04B0  1303               	bcf	3,6	;RP1=0, select bank1
 11247  04B1  00C2               	movwf	(sprintf@val+3)^(0+128)
 11248  04B2  1283               	bcf	3,5	;RP0=0, select bank0
 11249  04B3  1303               	bcf	3,6	;RP1=0, select bank0
 11250  04B4  082F               	movf	?___llmod+2,w
 11251  04B5  1683               	bsf	3,5	;RP0=1, select bank1
 11252  04B6  1303               	bcf	3,6	;RP1=0, select bank1
 11253  04B7  00C1               	movwf	(sprintf@val+2)^(0+128)
 11254  04B8  1283               	bcf	3,5	;RP0=0, select bank0
 11255  04B9  1303               	bcf	3,6	;RP1=0, select bank0
 11256  04BA  082E               	movf	?___llmod+1,w
 11257  04BB  1683               	bsf	3,5	;RP0=1, select bank1
 11258  04BC  1303               	bcf	3,6	;RP1=0, select bank1
 11259  04BD  00C0               	movwf	(sprintf@val+1)^(0+128)
 11260  04BE  1283               	bcf	3,5	;RP0=0, select bank0
 11261  04BF  1303               	bcf	3,6	;RP1=0, select bank0
 11262  04C0  082D               	movf	?___llmod,w
 11263  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 11264  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 11265  04C3  00BF               	movwf	sprintf@val^(0+128)
 11266  04C4                     l4399:
 11267                           
 11268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11269  04C4  3001               	movlw	1
 11270  04C5  02CC               	subwf	sprintf@c^(0+128),f
 11271  04C6  0A4C               	incf	sprintf@c^(0+128),w
 11272  04C7  1D03               	btfss	3,2
 11273  04C8  2CCA               	goto	u7371
 11274  04C9  2CCB               	goto	u7370
 11275  04CA                     u7371:
 11276  04CA  2BC3               	goto	l4391
 11277  04CB                     u7370:
 11278  04CB  2CDD               	goto	l4407
 11279  04CC                     l4401:
 11280                           
 11281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11282  04CC  3030               	movlw	48
 11283  04CD  00AD               	movwf	??_sprintf^(0+128)
 11284  04CE  0849               	movf	sprintf@sp^(0+128),w
 11285  04CF  0084               	movwf	4
 11286  04D0  082D               	movf	??_sprintf^(0+128),w
 11287  04D1  1383               	bcf	3,7	;select IRP bank0
 11288  04D2  0080               	movwf	0
 11289  04D3                     l4403:
 11290  04D3  3001               	movlw	1
 11291  04D4  00AD               	movwf	??_sprintf^(0+128)
 11292  04D5  082D               	movf	??_sprintf^(0+128),w
 11293  04D6  07C9               	addwf	sprintf@sp^(0+128),f
 11294  04D7                     l4405:
 11295                           
 11296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11297  04D7  30FF               	movlw	255
 11298  04D8  07CA               	addwf	sprintf@prec^(0+128),f
 11299  04D9  1803               	skipnc
 11300  04DA  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11301  04DB  30FF               	movlw	255
 11302  04DC  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11303  04DD                     l4407:
 11304                           
 11305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11306  04DD  084A               	movf	sprintf@prec^(0+128),w
 11307  04DE  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11308  04DF  1D03               	btfss	3,2
 11309  04E0  2CE2               	goto	u7381
 11310  04E1  2CE3               	goto	u7380
 11311  04E2                     u7381:
 11312  04E2  2CCC               	goto	l4401
 11313  04E3                     u7380:
 11314  04E3  2E93               	goto	l4487
 11315  04E4                     l4409:
 11316                           
 11317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11318  04E4  0836               	movf	sprintf@ap^(0+128),w
 11319  04E5  0084               	movwf	4
 11320  04E6  1383               	bcf	3,7	;select IRP bank0
 11321  04E7  0800               	movf	0,w
 11322  04E8  00AD               	movwf	??_sprintf^(0+128)
 11323  04E9  0A84               	incf	4,f
 11324  04EA  0800               	movf	0,w
 11325  04EB  00AE               	movwf	(??_sprintf^(0+128)+1)
 11326  04EC  082D               	movf	??_sprintf^(0+128),w
 11327  04ED  00BF               	movwf	sprintf@val^(0+128)
 11328  04EE  082E               	movf	(??_sprintf+1)^(0+128),w
 11329  04EF  00C0               	movwf	(sprintf@val+1)^(0+128)
 11330  04F0  3000               	movlw	0
 11331  04F1  1BC0               	btfsc	(sprintf@val+1)^(0+128),7
 11332  04F2  30FF               	movlw	255
 11333  04F3  00C1               	movwf	(sprintf@val+2)^(0+128)
 11334  04F4  00C2               	movwf	(sprintf@val+3)^(0+128)
 11335  04F5                     l4411:
 11336  04F5  3002               	movlw	2
 11337  04F6  00AD               	movwf	??_sprintf^(0+128)
 11338  04F7  082D               	movf	??_sprintf^(0+128),w
 11339  04F8  07B6               	addwf	sprintf@ap^(0+128),f
 11340  04F9                     l4413:
 11341                           
 11342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11343  04F9  1FC2               	btfss	(sprintf@val+3)^(0+128),7
 11344  04FA  2CFC               	goto	u7391
 11345  04FB  2CFD               	goto	u7390
 11346  04FC                     u7391:
 11347  04FC  2D0C               	goto	l4419
 11348  04FD                     u7390:
 11349  04FD                     l4415:
 11350                           
 11351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11352  04FD  3003               	movlw	3
 11353  04FE  04B7               	iorwf	sprintf@flag^(0+128),f
 11354  04FF  3000               	movlw	0
 11355  0500  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
 11356  0501                     l4417:
 11357                           
 11358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11359  0501  09BF               	comf	sprintf@val^(0+128),f
 11360  0502  09C0               	comf	(sprintf@val+1)^(0+128),f
 11361  0503  09C1               	comf	(sprintf@val+2)^(0+128),f
 11362  0504  09C2               	comf	(sprintf@val+3)^(0+128),f
 11363  0505  0ABF               	incf	sprintf@val^(0+128),f
 11364  0506  1903               	skipnz
 11365  0507  0AC0               	incf	(sprintf@val+1)^(0+128),f
 11366  0508  1903               	skipnz
 11367  0509  0AC1               	incf	(sprintf@val+2)^(0+128),f
 11368  050A  1903               	skipnz
 11369  050B  0AC2               	incf	(sprintf@val+3)^(0+128),f
 11370  050C                     l4419:
 11371                           
 11372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11373  050C  084A               	movf	sprintf@prec^(0+128),w
 11374  050D  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11375  050E  1D03               	btfss	3,2
 11376  050F  2D11               	goto	u7401
 11377  0510  2D12               	goto	u7400
 11378  0511                     u7401:
 11379  0511  2D20               	goto	l4425
 11380  0512                     u7400:
 11381  0512                     l4421:
 11382  0512  0842               	movf	(sprintf@val+3)^(0+128),w
 11383  0513  0441               	iorwf	(sprintf@val+2)^(0+128),w
 11384  0514  0440               	iorwf	(sprintf@val+1)^(0+128),w
 11385  0515  043F               	iorwf	sprintf@val^(0+128),w
 11386  0516  1D03               	skipz
 11387  0517  2D19               	goto	u7411
 11388  0518  2D1A               	goto	u7410
 11389  0519                     u7411:
 11390  0519  2D20               	goto	l4425
 11391  051A                     u7410:
 11392  051A                     l4423:
 11393                           
 11394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11395  051A  3001               	movlw	1
 11396  051B  07CA               	addwf	sprintf@prec^(0+128),f
 11397  051C  1803               	skipnc
 11398  051D  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11399  051E  3000               	movlw	0
 11400  051F  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11401  0520                     l4425:
 11402                           
 11403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11404  0520  01CC               	clrf	sprintf@c^(0+128)
 11405  0521  0ACC               	incf	sprintf@c^(0+128),f
 11406  0522                     l4431:
 11407                           
 11408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11409  0522  084C               	movf	sprintf@c^(0+128),w
 11410  0523  00AD               	movwf	??_sprintf^(0+128)
 11411  0524  3001               	movlw	1
 11412  0525                     u7425:
 11413  0525  1003               	clrc
 11414  0526  0DAD               	rlf	??_sprintf^(0+128),f
 11415  0527  3EFF               	addlw	-1
 11416  0528  1D03               	skipz
 11417  0529  2D25               	goto	u7425
 11418  052A  1003               	clrc
 11419  052B  0D2D               	rlf	??_sprintf^(0+128),w
 11420  052C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11421  052D  0084               	movwf	4
 11422  052E  160A  158A  200A  120A  118A  	fcall	stringdir
 11423  0533  00AE               	movwf	(??_sprintf+1)^(0+128)
 11424  0534  160A  158A  200A  120A  118A  	fcall	stringdir
 11425  0539  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 11426  053A  160A  158A  200A  120A  118A  	fcall	stringdir
 11427  053F  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 11428  0540  160A  158A  200A  120A  118A  	fcall	stringdir
 11429  0545  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 11430  0546  0831               	movf	(??_sprintf+4)^(0+128),w
 11431  0547  0242               	subwf	(sprintf@val+3)^(0+128),w
 11432  0548  1D03               	skipz
 11433  0549  2D54               	goto	u7435
 11434  054A  0830               	movf	(??_sprintf+3)^(0+128),w
 11435  054B  0241               	subwf	(sprintf@val+2)^(0+128),w
 11436  054C  1D03               	skipz
 11437  054D  2D54               	goto	u7435
 11438  054E  082F               	movf	(??_sprintf+2)^(0+128),w
 11439  054F  0240               	subwf	(sprintf@val+1)^(0+128),w
 11440  0550  1D03               	skipz
 11441  0551  2D54               	goto	u7435
 11442  0552  082E               	movf	(??_sprintf+1)^(0+128),w
 11443  0553  023F               	subwf	sprintf@val^(0+128),w
 11444  0554                     u7435:
 11445  0554  1803               	skipnc
 11446  0555  2D57               	goto	u7431
 11447  0556  2D58               	goto	u7430
 11448  0557                     u7431:
 11449  0557  2D59               	goto	l4435
 11450  0558                     u7430:
 11451  0558  2D63               	goto	l4437
 11452  0559                     l4435:
 11453  0559  3001               	movlw	1
 11454  055A  00AD               	movwf	??_sprintf^(0+128)
 11455  055B  082D               	movf	??_sprintf^(0+128),w
 11456  055C  07CC               	addwf	sprintf@c^(0+128),f
 11457  055D  300A               	movlw	10
 11458  055E  064C               	xorwf	sprintf@c^(0+128),w
 11459  055F  1D03               	btfss	3,2
 11460  0560  2D62               	goto	u7441
 11461  0561  2D63               	goto	u7440
 11462  0562                     u7441:
 11463  0562  2D22               	goto	l4431
 11464  0563                     u7440:
 11465  0563                     l4437:
 11466                           
 11467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11468  0563  084B               	movf	(sprintf@prec+1)^(0+128),w
 11469  0564  3A80               	xorlw	128
 11470  0565  3C80               	sublw	128
 11471  0566  1D03               	skipz
 11472  0567  2D6A               	goto	u7455
 11473  0568  084A               	movf	sprintf@prec^(0+128),w
 11474  0569  024C               	subwf	sprintf@c^(0+128),w
 11475  056A                     u7455:
 11476  056A  1803               	skipnc
 11477  056B  2D6D               	goto	u7451
 11478  056C  2D6E               	goto	u7450
 11479  056D                     u7451:
 11480  056D  2D75               	goto	l4441
 11481  056E                     u7450:
 11482  056E                     l4439:
 11483                           
 11484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11485  056E  1683               	bsf	3,5	;RP0=1, select bank1
 11486  056F  1303               	bcf	3,6	;RP1=0, select bank1
 11487  0570  084A               	movf	sprintf@prec^(0+128),w
 11488  0571  00AD               	movwf	??_sprintf^(0+128)
 11489  0572  082D               	movf	??_sprintf^(0+128),w
 11490  0573  00CC               	movwf	sprintf@c^(0+128)
 11491  0574  2D8D               	goto	l4445
 11492  0575                     l4441:
 11493  0575  1683               	bsf	3,5	;RP0=1, select bank1
 11494  0576  1303               	bcf	3,6	;RP1=0, select bank1
 11495  0577  084B               	movf	(sprintf@prec+1)^(0+128),w
 11496  0578  3A80               	xorlw	128
 11497  0579  00AD               	movwf	??_sprintf^(0+128)
 11498  057A  3080               	movlw	128
 11499  057B  022D               	subwf	??_sprintf^(0+128),w
 11500  057C  1D03               	skipz
 11501  057D  2D80               	goto	u7465
 11502  057E  084C               	movf	sprintf@c^(0+128),w
 11503  057F  024A               	subwf	sprintf@prec^(0+128),w
 11504  0580                     u7465:
 11505  0580  1803               	skipnc
 11506  0581  2D83               	goto	u7461
 11507  0582  2D84               	goto	u7460
 11508  0583                     u7461:
 11509  0583  2D8D               	goto	l4445
 11510  0584                     u7460:
 11511  0584                     l4443:
 11512                           
 11513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11514  0584  1683               	bsf	3,5	;RP0=1, select bank1
 11515  0585  1303               	bcf	3,6	;RP1=0, select bank1
 11516  0586  084C               	movf	sprintf@c^(0+128),w
 11517  0587  00AD               	movwf	??_sprintf^(0+128)
 11518  0588  01AE               	clrf	(??_sprintf^(0+128)+1)
 11519  0589  082D               	movf	??_sprintf^(0+128),w
 11520  058A  00CA               	movwf	sprintf@prec^(0+128)
 11521  058B  082E               	movf	(??_sprintf+1)^(0+128),w
 11522  058C  00CB               	movwf	(sprintf@prec+1)^(0+128)
 11523  058D                     l4445:
 11524                           
 11525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11526  058D  1683               	bsf	3,5	;RP0=1, select bank1
 11527  058E  1303               	bcf	3,6	;RP1=0, select bank1
 11528  058F  0839               	movf	sprintf@width^(0+128),w
 11529  0590  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11530  0591  1903               	btfsc	3,2
 11531  0592  2D94               	goto	u7471
 11532  0593  2D95               	goto	u7470
 11533  0594                     u7471:
 11534  0594  2DA7               	goto	l4451
 11535  0595                     u7470:
 11536  0595                     l4447:
 11537  0595  3003               	movlw	3
 11538  0596  0537               	andwf	sprintf@flag^(0+128),w
 11539  0597  00AD               	movwf	??_sprintf^(0+128)
 11540  0598  3000               	movlw	0
 11541  0599  0538               	andwf	(sprintf@flag+1)^(0+128),w
 11542  059A  00AE               	movwf	(??_sprintf+1)^(0+128)
 11543  059B  082D               	movf	??_sprintf^(0+128),w
 11544  059C  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11545  059D  1903               	btfsc	3,2
 11546  059E  2DA0               	goto	u7481
 11547  059F  2DA1               	goto	u7480
 11548  05A0                     u7481:
 11549  05A0  2DA7               	goto	l4451
 11550  05A1                     u7480:
 11551  05A1                     l4449:
 11552                           
 11553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11554  05A1  30FF               	movlw	255
 11555  05A2  07B9               	addwf	sprintf@width^(0+128),f
 11556  05A3  1803               	skipnc
 11557  05A4  0ABA               	incf	(sprintf@width+1)^(0+128),f
 11558  05A5  30FF               	movlw	255
 11559  05A6  07BA               	addwf	(sprintf@width+1)^(0+128),f
 11560  05A7                     l4451:
 11561                           
 11562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11563  05A7  1F38               	btfss	(sprintf@flag+1)^(0+128),6
 11564  05A8  2DAA               	goto	u7491
 11565  05A9  2DAB               	goto	u7490
 11566  05AA                     u7491:
 11567  05AA  2DC6               	goto	l4459
 11568  05AB                     u7490:
 11569  05AB                     l4453:
 11570                           
 11571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11572  05AB  084B               	movf	(sprintf@prec+1)^(0+128),w
 11573  05AC  3A80               	xorlw	128
 11574  05AD  00AD               	movwf	??_sprintf^(0+128)
 11575  05AE  083A               	movf	(sprintf@width+1)^(0+128),w
 11576  05AF  3A80               	xorlw	128
 11577  05B0  022D               	subwf	??_sprintf^(0+128),w
 11578  05B1  1D03               	skipz
 11579  05B2  2DB5               	goto	u7505
 11580  05B3  0839               	movf	sprintf@width^(0+128),w
 11581  05B4  024A               	subwf	sprintf@prec^(0+128),w
 11582  05B5                     u7505:
 11583  05B5  1803               	skipnc
 11584  05B6  2DB8               	goto	u7501
 11585  05B7  2DB9               	goto	u7500
 11586  05B8                     u7501:
 11587  05B8  2DC2               	goto	l4457
 11588  05B9                     u7500:
 11589  05B9                     l4455:
 11590                           
 11591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11592  05B9  1683               	bsf	3,5	;RP0=1, select bank1
 11593  05BA  1303               	bcf	3,6	;RP1=0, select bank1
 11594  05BB  084A               	movf	sprintf@prec^(0+128),w
 11595  05BC  02B9               	subwf	sprintf@width^(0+128),f
 11596  05BD  084B               	movf	(sprintf@prec+1)^(0+128),w
 11597  05BE  1C03               	skipc
 11598  05BF  03BA               	decf	(sprintf@width+1)^(0+128),f
 11599  05C0  02BA               	subwf	(sprintf@width+1)^(0+128),f
 11600  05C1  2DC6               	goto	l4459
 11601  05C2                     l4457:
 11602                           
 11603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11604  05C2  1683               	bsf	3,5	;RP0=1, select bank1
 11605  05C3  1303               	bcf	3,6	;RP1=0, select bank1
 11606  05C4  01B9               	clrf	sprintf@width^(0+128)
 11607  05C5  01BA               	clrf	(sprintf@width+1)^(0+128)
 11608  05C6                     l4459:
 11609                           
 11610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11611  05C6  083A               	movf	(sprintf@width+1)^(0+128),w
 11612  05C7  3A80               	xorlw	128
 11613  05C8  3C80               	sublw	128
 11614  05C9  1D03               	skipz
 11615  05CA  2DCD               	goto	u7515
 11616  05CB  0839               	movf	sprintf@width^(0+128),w
 11617  05CC  024C               	subwf	sprintf@c^(0+128),w
 11618  05CD                     u7515:
 11619  05CD  1803               	skipnc
 11620  05CE  2DD0               	goto	u7511
 11621  05CF  2DD1               	goto	u7510
 11622  05D0                     u7511:
 11623  05D0  2DDD               	goto	l4463
 11624  05D1                     u7510:
 11625  05D1                     l4461:
 11626                           
 11627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11628  05D1  1683               	bsf	3,5	;RP0=1, select bank1
 11629  05D2  1303               	bcf	3,6	;RP1=0, select bank1
 11630  05D3  084C               	movf	sprintf@c^(0+128),w
 11631  05D4  00AD               	movwf	??_sprintf^(0+128)
 11632  05D5  01AE               	clrf	(??_sprintf^(0+128)+1)
 11633  05D6  082D               	movf	??_sprintf^(0+128),w
 11634  05D7  02B9               	subwf	sprintf@width^(0+128),f
 11635  05D8  082E               	movf	(??_sprintf+1)^(0+128),w
 11636  05D9  1C03               	skipc
 11637  05DA  03BA               	decf	(sprintf@width+1)^(0+128),f
 11638  05DB  02BA               	subwf	(sprintf@width+1)^(0+128),f
 11639  05DC  2DE1               	goto	l4465
 11640  05DD                     l4463:
 11641                           
 11642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11643  05DD  1683               	bsf	3,5	;RP0=1, select bank1
 11644  05DE  1303               	bcf	3,6	;RP1=0, select bank1
 11645  05DF  01B9               	clrf	sprintf@width^(0+128)
 11646  05E0  01BA               	clrf	(sprintf@width+1)^(0+128)
 11647  05E1                     l4465:
 11648                           
 11649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11650  05E1  0839               	movf	sprintf@width^(0+128),w
 11651  05E2  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11652  05E3  1903               	btfsc	3,2
 11653  05E4  2DE6               	goto	u7521
 11654  05E5  2DE7               	goto	u7520
 11655  05E6                     u7521:
 11656  05E6  2DFE               	goto	l4473
 11657  05E7                     u7520:
 11658  05E7                     l4467:
 11659                           
 11660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11661  05E7  3020               	movlw	32
 11662  05E8  00AD               	movwf	??_sprintf^(0+128)
 11663  05E9  0849               	movf	sprintf@sp^(0+128),w
 11664  05EA  0084               	movwf	4
 11665  05EB  082D               	movf	??_sprintf^(0+128),w
 11666  05EC  1383               	bcf	3,7	;select IRP bank0
 11667  05ED  0080               	movwf	0
 11668  05EE                     l4469:
 11669  05EE  3001               	movlw	1
 11670  05EF  00AD               	movwf	??_sprintf^(0+128)
 11671  05F0  082D               	movf	??_sprintf^(0+128),w
 11672  05F1  07C9               	addwf	sprintf@sp^(0+128),f
 11673  05F2                     l4471:
 11674  05F2  30FF               	movlw	255
 11675  05F3  07B9               	addwf	sprintf@width^(0+128),f
 11676  05F4  1803               	skipnc
 11677  05F5  0ABA               	incf	(sprintf@width+1)^(0+128),f
 11678  05F6  30FF               	movlw	255
 11679  05F7  07BA               	addwf	(sprintf@width+1)^(0+128),f
 11680  05F8  0839               	movf	sprintf@width^(0+128),w
 11681  05F9  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11682  05FA  1D03               	btfss	3,2
 11683  05FB  2DFD               	goto	u7531
 11684  05FC  2DFE               	goto	u7530
 11685  05FD                     u7531:
 11686  05FD  2DE7               	goto	l4467
 11687  05FE                     u7530:
 11688  05FE                     l4473:
 11689                           
 11690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11691  05FE  3003               	movlw	3
 11692  05FF  0537               	andwf	sprintf@flag^(0+128),w
 11693  0600  00AD               	movwf	??_sprintf^(0+128)
 11694  0601  3000               	movlw	0
 11695  0602  0538               	andwf	(sprintf@flag+1)^(0+128),w
 11696  0603  00AE               	movwf	(??_sprintf+1)^(0+128)
 11697  0604  082D               	movf	??_sprintf^(0+128),w
 11698  0605  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11699  0606  1903               	btfsc	3,2
 11700  0607  2E09               	goto	u7541
 11701  0608  2E0A               	goto	u7540
 11702  0609                     u7541:
 11703  0609  2E85               	goto	l4485
 11704  060A                     u7540:
 11705  060A                     l4475:
 11706                           
 11707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11708  060A  302D               	movlw	45
 11709  060B  00AD               	movwf	??_sprintf^(0+128)
 11710  060C  0849               	movf	sprintf@sp^(0+128),w
 11711  060D  0084               	movwf	4
 11712  060E  082D               	movf	??_sprintf^(0+128),w
 11713  060F  1383               	bcf	3,7	;select IRP bank0
 11714  0610  0080               	movwf	0
 11715  0611                     l4477:
 11716  0611  3001               	movlw	1
 11717  0612  00AD               	movwf	??_sprintf^(0+128)
 11718  0613  082D               	movf	??_sprintf^(0+128),w
 11719  0614  07C9               	addwf	sprintf@sp^(0+128),f
 11720  0615  2E85               	goto	l4485
 11721  0616                     l4479:
 11722                           
 11723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11724  0616  3000               	movlw	0
 11725  0617  1283               	bcf	3,5	;RP0=0, select bank0
 11726  0618  1303               	bcf	3,6	;RP1=0, select bank0
 11727  0619  00B0               	movwf	___llmod@divisor+3
 11728  061A  3000               	movlw	0
 11729  061B  00AF               	movwf	___llmod@divisor+2
 11730  061C  3000               	movlw	0
 11731  061D  00AE               	movwf	___llmod@divisor+1
 11732  061E  300A               	movlw	10
 11733  061F  00AD               	movwf	___llmod@divisor
 11734  0620  1683               	bsf	3,5	;RP0=1, select bank1
 11735  0621  1303               	bcf	3,6	;RP1=0, select bank1
 11736  0622  084A               	movf	sprintf@prec^(0+128),w
 11737  0623  00AD               	movwf	??_sprintf^(0+128)
 11738  0624  3001               	movlw	1
 11739  0625                     u7555:
 11740  0625  1003               	clrc
 11741  0626  0DAD               	rlf	??_sprintf^(0+128),f
 11742  0627  3EFF               	addlw	-1
 11743  0628  1D03               	skipz
 11744  0629  2E25               	goto	u7555
 11745  062A  1003               	clrc
 11746  062B  0D2D               	rlf	??_sprintf^(0+128),w
 11747  062C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11748  062D  0084               	movwf	4
 11749  062E  160A  158A  200A  120A  118A  	fcall	stringdir
 11750  0633  1283               	bcf	3,5	;RP0=0, select bank0
 11751  0634  1303               	bcf	3,6	;RP1=0, select bank0
 11752  0635  00A0               	movwf	___lldiv@divisor
 11753  0636  160A  158A  200A  120A  118A  	fcall	stringdir
 11754  063B  00A1               	movwf	___lldiv@divisor+1
 11755  063C  160A  158A  200A  120A  118A  	fcall	stringdir
 11756  0641  00A2               	movwf	___lldiv@divisor+2
 11757  0642  160A  158A  200A  120A  118A  	fcall	stringdir
 11758  0647  00A3               	movwf	___lldiv@divisor+3
 11759  0648  1683               	bsf	3,5	;RP0=1, select bank1
 11760  0649  1303               	bcf	3,6	;RP1=0, select bank1
 11761  064A  0842               	movf	(sprintf@val+3)^(0+128),w
 11762  064B  1283               	bcf	3,5	;RP0=0, select bank0
 11763  064C  1303               	bcf	3,6	;RP1=0, select bank0
 11764  064D  00A7               	movwf	___lldiv@dividend+3
 11765  064E  1683               	bsf	3,5	;RP0=1, select bank1
 11766  064F  1303               	bcf	3,6	;RP1=0, select bank1
 11767  0650  0841               	movf	(sprintf@val+2)^(0+128),w
 11768  0651  1283               	bcf	3,5	;RP0=0, select bank0
 11769  0652  1303               	bcf	3,6	;RP1=0, select bank0
 11770  0653  00A6               	movwf	___lldiv@dividend+2
 11771  0654  1683               	bsf	3,5	;RP0=1, select bank1
 11772  0655  1303               	bcf	3,6	;RP1=0, select bank1
 11773  0656  0840               	movf	(sprintf@val+1)^(0+128),w
 11774  0657  1283               	bcf	3,5	;RP0=0, select bank0
 11775  0658  1303               	bcf	3,6	;RP1=0, select bank0
 11776  0659  00A5               	movwf	___lldiv@dividend+1
 11777  065A  1683               	bsf	3,5	;RP0=1, select bank1
 11778  065B  1303               	bcf	3,6	;RP1=0, select bank1
 11779  065C  083F               	movf	sprintf@val^(0+128),w
 11780  065D  1283               	bcf	3,5	;RP0=0, select bank0
 11781  065E  1303               	bcf	3,6	;RP1=0, select bank0
 11782  065F  00A4               	movwf	___lldiv@dividend
 11783  0660  160A  158A  24AD  120A  118A  	fcall	___lldiv
 11784  0665  1283               	bcf	3,5	;RP0=0, select bank0
 11785  0666  1303               	bcf	3,6	;RP1=0, select bank0
 11786  0667  0823               	movf	?___lldiv+3,w
 11787  0668  00B4               	movwf	___llmod@dividend+3
 11788  0669  0822               	movf	?___lldiv+2,w
 11789  066A  00B3               	movwf	___llmod@dividend+2
 11790  066B  0821               	movf	?___lldiv+1,w
 11791  066C  00B2               	movwf	___llmod@dividend+1
 11792  066D  0820               	movf	?___lldiv,w
 11793  066E  00B1               	movwf	___llmod@dividend
 11794  066F  160A  158A  23FC  120A  118A  	fcall	___llmod
 11795  0674  1283               	bcf	3,5	;RP0=0, select bank0
 11796  0675  1303               	bcf	3,6	;RP1=0, select bank0
 11797  0676  082D               	movf	?___llmod,w
 11798  0677  3E30               	addlw	48
 11799  0678  1683               	bsf	3,5	;RP0=1, select bank1
 11800  0679  1303               	bcf	3,6	;RP1=0, select bank1
 11801  067A  00AE               	movwf	(??_sprintf+1)^(0+128)
 11802  067B  082E               	movf	(??_sprintf+1)^(0+128),w
 11803  067C  00CC               	movwf	sprintf@c^(0+128)
 11804  067D                     l4481:
 11805                           
 11806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11807  067D  084C               	movf	sprintf@c^(0+128),w
 11808  067E  00AD               	movwf	??_sprintf^(0+128)
 11809  067F  0849               	movf	sprintf@sp^(0+128),w
 11810  0680  0084               	movwf	4
 11811  0681  082D               	movf	??_sprintf^(0+128),w
 11812  0682  1383               	bcf	3,7	;select IRP bank0
 11813  0683  0080               	movwf	0
 11814  0684  2E11               	goto	l4477
 11815  0685                     l4485:
 11816                           
 11817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11818  0685  30FF               	movlw	255
 11819  0686  07CA               	addwf	sprintf@prec^(0+128),f
 11820  0687  1803               	skipnc
 11821  0688  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11822  0689  30FF               	movlw	255
 11823  068A  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11824  068B  0A4A               	incf	sprintf@prec^(0+128),w
 11825  068C  1D03               	skipz
 11826  068D  2E92               	goto	u7561
 11827  068E  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 11828  068F  1D03               	btfss	3,2
 11829  0690  2E92               	goto	u7561
 11830  0691  2E93               	goto	u7560
 11831  0692                     u7561:
 11832  0692  2E16               	goto	l4479
 11833  0693                     u7560:
 11834  0693                     l4487:
 11835                           
 11836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11837  0693  3001               	movlw	1
 11838  0694  07A8               	addwf	sprintf@f^(0+128),f
 11839  0695  30FF               	movlw	-1
 11840  0696  0728               	addwf	sprintf@f^(0+128),w
 11841  0697  0084               	movwf	4
 11842  0698  160A  158A  200A  120A  118A  	fcall	stringdir
 11843  069D  00AD               	movwf	??_sprintf^(0+128)
 11844  069E  082D               	movf	??_sprintf^(0+128),w
 11845  069F  00CC               	movwf	sprintf@c^(0+128)
 11846  06A0  084C               	movf	sprintf@c^(0+128),w
 11847  06A1  1D03               	btfss	3,2
 11848  06A2  2EA4               	goto	u7571
 11849  06A3  2EA7               	goto	u7570
 11850  06A4                     u7571:
 11851  06A4  160A  118A  2D00   	goto	l4207
 11852  06A7                     u7570:
 11853  06A7                     l4489:
 11854                           
 11855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11856  06A7  0849               	movf	sprintf@sp^(0+128),w
 11857  06A8  0084               	movwf	4
 11858  06A9  1383               	bcf	3,7	;select IRP bank0
 11859  06AA  0180               	clrf	0
 11860  06AB                     l404:
 11861  06AB  0008               	return
 11862  06AC                     __end_of_sprintf:

Data Sizes:
    Strings     27
    Constant    144
    Data        2
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      78
    BANK1            80     45      78
    BANK3            96      3       3
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), STR_3(CODE[3]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> s(BANK1[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flmul->___awmod
    ___flmul->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversor->___flmul
    ___flmul->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   43550
                                              0 BANK3      3     3      0
                      _Config_USARTT
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _conversor
                            _recibir
                              _setup
                            _spiInit
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   36615
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8392
                                             37 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6448
                                             37 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              4 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             56 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             57 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conversor                                            9     5      4    5232
                                             37 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     552
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_USARTT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_USARTT
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conversor
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _recibir
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      3       3       9        3.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2D      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AA      12        0.0%
ABS                  0      0      AA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 01:15:28 2021

                        _s 00DA                          _v 00D1                          _x 00CD  
                        pc 0002                _SSPSTATbits 0094                         l92 1060  
                       l89 1987               ___awdiv@sign 0028                         fsr 0004  
      ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022                        l112 07FF  
                      l121 19F8                        l115 1964                        l203 1941  
                      l124 1B5B                        l109 1923                        l133 1ACE  
                      l127 19B4                        l152 1975                        l312 0FFF  
                      l305 126D                        l410 1A4C                        l404 06AB  
                      l173 194C                        l334 15BD                        l192 1930  
                      l408 1A32                        l185 0810                        l186 0815  
                      l602 1D9F                        l195 1929                        l603 1DB8  
                      l611 07E5                        l444 1D14                        l189 192A  
                      l621 07E5                        l374 0331                        l607 1957  
                      l367 02ED                        l625 093B                        l561 087E  
                      l618 07D0                        l626 08AD                        l714 1B14  
                      l636 092E                        l724 1A88                        l741 134F  
                      l629 08FE                        l582 072C                        l574 1CAC  
                      l831 0C9C                        l735 12D1                        l760 1467  
                      l664 1C51                        l850 1A0F                        l594 1B7A  
                      l578 0769                        l843 0C90                        l595 1B96  
                      l739 1378                        l579 06CE                        l852 1A21  
                      l596 1BAB                        l756 1443                        l748 14F5  
                      l837 0C08                        l781 1BFB                        l589 075C  
                      l766 1489                        l599 1D33                        l881 1E22  
                      l777 14E9                        l769 14C7                        l778 14F5  
                      l875 1DDD                        l877 1E74                        l895 1999  
                      l888 1E3E                        l889 1E4A                        _ISR 19B5  
                      fsr0 0004                        indf 0000               ___awmod@sign 0021  
             ___flmul@aexp 003D               ___flmul@bexp 003E               ___flmul@sign 0038  
             ___flmul@temp 0043               ___flmul@prod 003F                       ?_ISR 0070  
             ___fltol@exp1 0062                       l3105 194D                       l3121 0795  
                     l3113 076A                       l4001 06F3                       l3107 1955  
                     l3123 0796                       l3115 0777                       l4011 0726  
                     l4003 06FC                       l3221 1979                       l3109 1957  
                     l3125 079E                       l4013 0730                       l4021 074A  
                     l4005 070E                       l3231 196D                       l3223 197B  
                     l2511 1280                       l2503 126E                       l3143 07C5  
                     l3135 07AC                       l3127 07A0                       l3119 0780  
                     l4111 1C1A                       l4103 1BFC                       l4007 071C  
                     l3233 1971                       l2361 1A05                       l4201 104A  
                     l3225 197C                       l2601 137C                       l2513 1285  
                     l2521 1295                       l2505 1275                       l3145 07D5  
                     l3129 07A4                       l3137 07BE                       l4113 1C2C  
                     l4105 1C06                       l4041 1A40                       l4033 1A22  
                     l4009 071D                       l3235 1974                       l2363 1A09  
                     l4131 1DE5                       l4123 1DBC                       l3227 197D  
                     l3219 1976                       l2611 13A5                       l2603 1381  
                     l2531 12AF                       l2523 129D                       l2515 128A  
                     l2507 127B                       l3171 1BB0                       l3147 07DA  
                     l4051 1CC2                       l4115 1C3A                       l4107 1C09  
                     l4043 1A46                       l4035 1A26                       l4027 0751  
                     l4019 0738                       l4211 150D                       l3229 1965  
                     l2365 1A18                       l2357 19FC                       l2701 0949  
                     l4141 1E07                       l4125 1DC1                       l3253 0802  
                     l3261 1939                       l2621 13B9                       l2613 13A9  
                     l2541 12C6                       l2533 12B3                       l2525 12A2  
                     l2517 1292                       l2509 127F                       l4061 1CFC  
                     l4053 1CCF                       l4117 1C43                       l4109 1C16  
                     l4037 1A2A                       l4029 0761                       l4301 002A  
                     l4221 153F                       l4213 1512                       l4205 14F9  
                     l2367 1A1D                       l2359 19FE                       l2711 0960  
                     l2703 094D                       l4151 1E38                       l4143 1E0B  
                     l4135 1DEE                       l4127 1DC5                       l3239 1942  
                     l3255 0806                       l3263 193E                       l4071 1B5C  
                     l2631 1421                       l2623 13C2                       l2615 13B2  
                     l2607 138A                       l2551 12DF                       l2543 12C7  
                     l2535 12B4                       l2527 12A8                       l2519 1293  
                     l4063 1CFD                       l4055 1CD3                       l4047 1CAD  
                     l4119 1C49                       l4039 1A39                       l4311 00BB  
                     l4303 0053                       l4231 1575                       l4223 1552  
                     l4215 1516                       l4207 1500                       l2801 0C05  
                     l2721 0979                       l2713 0962                       l2705 094E  
                     l4161 1E6B                       l4153 1E42                       l4145 1E19  
                     l4137 1DF3                       l4129 1DD5                       l3257 080B  
                     l4073 1B72                       l2633 1426                       l2617 13B4  
                     l2609 13A1                       l2625 13C7                       l2561 12F3  
                     l2553 12E3                       l2537 12B9                       l2545 12C9  
                     l2529 12A9                       l3169 1BAC                       l4065 1D06  
                     l4057 1CDC                       l4049 1CBF                       l4401 04CC  
                     l4313 00C3                       l4305 007A                       l4321 0135  
                     l4241 15A8                       l4233 1579                       l4225 1556  
                     l4217 1526                       l4209 1506                       l4171 1B25  
                     l2811 0C24                       l2731 098E                       l2723 097A  
                     l2715 096A                       l2707 0953                       l4163 1E6C  
                     l4155 1E4C                       l4147 1E29                       l4139 1E00  
                     l3259 1925                       l4075 1B8E                       l4091 1D53  
                     l4083 1D15                       l2651 146E                       l2643 1459  
                     l2627 13DD                       l2635 1435                       l2619 13B8  
                     l2571 1307                       l2563 12F7                       l2555 12E7  
                     l2547 12D7                       l2539 12BE                       l4059 1CEE  
                     l4067 1D0C                       l4411 04F5                       l4403 04D3  
                     l4323 016A                       l4315 00E1                       l4307 0089  
                     l4251 15E1                       l4235 157C                       l4243 15B9  
                     l4219 152A                       l4227 1566                       l4173 1B36  
                     l4181 19DB                       l2821 0C6A                       l2813 0C3D  
                     l2805 0C0D                       l2741 09A9                       l2733 0996  
                     l2725 097F                       l2717 096F                       l2709 0958  
                     l4157 1E62                       l4149 1E34                       l4077 1BA8  
                     l4093 1D77                       l4085 1D2B                       l2661 147C  
                     l2653 1470                       l2645 1462                       l2637 144B  
                     l2629 141B                       l2573 130B                       l2565 12FB  
                     l2557 12EB                       l2549 12DB                       l2581 131B  
                     l4421 0512                       l4413 04F9                       l4405 04D7  
                     l4341 01F9                       l4333 019D                       l4325 0199  
                     l4309 00B2                       l4261 1609                       l4253 15EF  
                     l4245 15BB                       l4237 1591                       l4229 1574  
                     l4501 1E7F                       l4175 1B3C                       l4167 1B15  
                     l4183 19E0                       l4191 1A89                       l2831 0C89  
                     l2823 0C74                       l2807 0C12                       l2815 0C43  
                     l2751 0A2B                       l2743 09B9                       l2735 099B  
                     l2727 0984                       l2719 0975                       l4159 1E67  
                     l4079 1BAA                       l4095 1D7B                       l4087 1D47  
                     l2671 1493                       l2663 1480                       l2655 1475  
                     l2647 1466                       l2639 1450                       l2591 135E  
                     l2583 131C                       l2575 130F                       l2567 12FF  
                     l2559 12EF                       l4431 0522                       l4423 051A  
                     l4415 04FD                       l4407 04DD                       l4343 01FF  
                     l4327 019B                       l4319 012C                       l4271 1678  
                     l4263 1630                       l4255 15F3                       l4239 15A4  
                     l4511 1E9A                       l4503 1E84                       l4177 1958  
                     l4169 1B1B                       l4185 19E7                       l4193 1A8E  
                     l2833 0C94                       l2825 0C76                       l2817 0C50  
                     l2809 0C20                       l2761 0A99                       l2753 0A47  
                     l2745 09C6                       l2737 09A0                       l2729 098C  
                     l4097 1DB5                       l4089 1D4F                       l2681 14D1  
                     l2673 14A1                       l2665 1486                       l2649 146B  
                     l2657 1477                       l2593 1362                       l2585 1333  
                     l2577 1313                       l2569 1303                       l3801 1ACF  
                     l2921 198A                       l3721 0819                       l4441 0575  
                     l4425 0520                       l4417 0501                       l4361 0247  
                     l4345 020B                       l4353 0220                       l4337 01D4  
                     l4281 16C3                       l4273 1683                       l4265 1649  
                     l4257 15F7                       l4409 04E4                       l4249 15BF  
                     l4521 1EAE                       l4513 1E9B                       l4505 1E89  
                     l4187 19ED                       l4179 19D6                       l4195 1AAA  
                     l2827 0C84                       l2819 0C5B                       l2771 0B29  
                     l2763 0AA9                       l2755 0A63                       l2747 09E3  
                     l4099 1DB7                       l2691 14E5                       l2683 14D9  
                     l2675 14A5                       l2659 147B                       l2595 1363  
                     l2587 1353                       l2579 1317                       l3811 1AE7  
                     l3803 1AD3                       l2923 1990                       l3731 082D  
                     l3723 081D                       l4451 05A7                       l4443 0584  
                     l4435 0559                       l4419 050C                       l4371 0302  
                     l4363 02A2                       l4355 022D                       l4347 0212  
                     l4339 01DE                       l4291 1763                       l4283 16C9  
                     l4275 1689                       l4267 164D                       l4259 1605  
                     l4611 15D3                       l4531 1EDB                       l4523 1EAF  
                     l4515 1E9C                       l4507 1E8E                       l3717 191F  
                     l4189 19F2                       l4197 1AB2                       l2829 0C88  
                     l2781 0BBD                       l2773 0B39                       l2765 0AC6  
                     l2757 0A6C                       l2749 09FF                       l2693 14F0  
                     l2685 14DE                       l2677 14C3                       l2669 148E  
                     l2597 136C                       l2589 135C                       l3821 1B0A  
                     l3813 1AEB                       l3805 1AD9                       l2925 1996  
                     l3741 0843                       l3733 0831                       l3725 0822  
                     l3901 0D97                       l4461 05D1                       l4453 05AB  
                     l4445 058D                       l4437 0563                       l4381 033A  
                     l4373 0308                       l4365 02E1                       l4357 023B  
                     l4349 021B                       l4293 178C                       l4285 16E8  
                     l4277 169C                       l4269 1651                       l4541 1EF2  
                     l4533 1EDE                       l4525 1EB9                       l4517 1EAA  
                     l4509 1E97                       l2791 0BE2                       l2783 0BCB  
                     l2775 0B66                       l2767 0ADF                       l2759 0A7C  
                     l4199 1008                       l2695 14F4                       l2687 14DF  
                     l2679 14CC                       l2599 1370                       l3815 1AFC  
                     l3807 1ADC                       l3823 1B10                       l3831 1A58  
                     l2927 1998                       l2919 1989                       l3751 0863  
                     l3743 0847                       l3735 0833                       l3727 0824  
                     l3719 0816                       l3903 0D9E                       l3911 0E53  
                     l4471 05F2                       l4463 05DD                       l4455 05B9  
                     l4447 0595                       l4439 056E                       l4391 03C3  
                     l4383 033F                       l4375 0315                       l4367 02F5  
                     l4359 0242                       l4287 1733                       l4279 16BF  
                     l4295 1794                       l4551 1F11                       l4543 1EFE  
                     l4535 1EDF                       l4527 1EC1                       l4519 1EAD  
                     l2785 0BD4                       l2793 0BE8                       l2777 0B8C  
                     l2769 0AFC                       l2697 093C                       l2689 14E3  
                     l3817 1B02                       l3809 1AE3                       l3841 1A77  
                     l3833 1A5F                       l3753 086A                       l3745 084B  
                     l3737 0839                       l3729 0828                       l3921 0F4B  
                     l3913 0E5A                       l4481 067D                       l4473 05FE  
                     l4465 05E1                       l4457 05C2                       l4449 05A1  
                     l4393 041E                       l4385 0346                       l4377 0324  
                     l4369 02FE                       l4297 17A3                       l4289 175A  
                     l4561 1F4F                       l4553 1F1B                       l4545 1F0C  
                     l4537 1EE0                       l4529 1ECD                       l3851 07EA  
                     l2795 0BEC                       l2787 0BD8                       l2779 0BB4  
                     l2699 0943                       l2859 192A                       l3931 0892  
                     l3819 1B03                       l3843 1A7E                       l3835 1A63  
                     l3827 1A4D                       l3747 085C                       l3739 083C  
                     l3755 0870                       l3771 1C60                       l3763 1C52  
                     l3907 0E26                       l4475 060A                       l4467 05E7  
                     l4459 05C6                       l4395 045D                       l4387 034A  
                     l4379 032B                       l4299 17EA                       l4571 1FA2  
                     l4563 1F57                       l4555 1F23                       l4547 1F0F  
                     l4539 1EEA                       l3853 07F0                       l3861 199E  
                     l2797 0BED                       l2789 0BD9                       l3941 08AE  
                     l3837 1A67                       l3829 1A53                       l3845 1A84  
                     l3757 0875                       l3749 0862                       l3781 1C79  
                     l3773 1C64                       l3765 1C55                       l3925 0FD3  
                     l4477 0611                       l4485 0685                       l4469 05EE  
                     l4397 0469                       l4389 0368                       l4573 1FBF  
                     l4565 1F77                       l4557 1F2F                       l4549 1F10  
                     l3855 07F3                       l3863 19A4                       l2799 0BF1  
                     l3951 08D7                       l3943 08B4                       l3935 089B  
                     l3839 1A71                       l3871 1064                       l3759 087A  
                     l3791 1C98                       l3783 1C7D                       l3775 1C69  
                     l3767 1C59                       l3919 0F44                       l4479 0616  
                     l4399 04C4                       l4487 0693                       l4575 1FC8  
                     l4567 1F8D                       l4559 1F46                       l3857 07FC  
                     l3849 07E7                       l3865 19A7                       l3961 0902  
                     l3953 08E5                       l3945 08C3                       l3929 087F  
                     l3881 117F                       l3873 106A                       l3785 1C81  
                     l3777 1C6F                       l3793 1C9E                       l3769 1C5E  
                     l4489 06A7                       l4577 1FE7                       l4569 1F96  
                     l3867 19AC                       l3859 199B                       l3955 08EF  
                     l3947 08C5                       l3795 1CA3                       l3787 1C8B  
                     l3779 1C72                       l3891 0CA4                       l4579 1FF3  
                     l4499 1E75                       l3869 19AF                       l3981 06AC  
                     l3957 08F0                       l3949 08CE                       l3885 122A  
                     l3797 1CA8                       l3789 1C91                       l3893 0CA6  
                     l3983 06B9                       l3975 0923                       l3967 090A  
                     l3959 08F8                       l3879 1179                       l3895 0CAD  
                     l3993 06CF                       l3977 0933                       l3969 091C  
                     l3889 0CA0                       l3995 06D7                       l3987 06C2  
                     l3997 06E8                       l3999 06EA                       STR_1 18A0  
                     STR_2 18B1                       STR_3 18B8                       STR_4 18B1  
                     u4000 0BF1                       u4001 0BF0                       u4010 0C05  
                     u4011 0C04                       u4020 0C0C                       u3300 12B3  
                     u4021 0C0B                       u3301 12B2                       u4030 0C12  
                     u3310 12B9                       u4031 0C11                       u3311 12B8  
                     u4040 0C24                       u3320 12BE                       u4041 0C23  
                     u3321 12BD                       u4050 0C33                       u3410 1378  
                     u3330 12D7                       u3411 1377                       u3331 12D6  
                     u4060 0C50                       u3420 137C                       u3340 12DB  
                     u3260 127F                       u4061 0C4F                       u3501 13F4  
                     u3421 137B                       u3405 1365                       u3341 12DA  
                     u3261 127E                       u4070 0C6A                       u3510 1408  
                     u3502 13F5                       u3430 1381                       u3350 1333  
                     u3270 1285                       u4071 0C69                       u4055 0C2E  
                     u3511 1409                       u3503 13FA                       u3431 1380  
                     u3351 1332                       u3271 1284                       u4080 0C88  
                     u3600 1480                       u3520 1426                       u3512 140E  
                     u3504 13FB                       u3360 133E                       u3280 128A  
                     u4081 0C87                       u4065 0C4C                       u3601 147F  
                     u3521 1425                       u3513 140F                       u3505 1400  
                     u3441 1393                       u3361 133C                       u3281 1289  
                     u4090 1930                       u3610 1486                       u3530 144B  
                     u3506 1401                       u3450 13A5                       u3442 139A  
                     u3370 133F                       u3290 12A8                       u6010 1B10  
                     u4075 0C66                       u4091 192F                       u3611 1485  
                     u3531 144A                       u3451 13A4                       u3443 13A1  
                     u3355 132F                       u3291 12A7                       u6011 1B0F  
                     u3700 14E3                       u3620 148D                       u3540 1450  
                     u3460 13A9                       u3380 1353                       u6020 1A53  
                     u3701 14E2                       u3621 148C                       u3541 144F  
                     u3461 13A8                       u3381 1352                       u6005 1B04  
                     u6021 1A52                       u2910 1A09                       u5150 0806  
                     u3710 14F4                       u3630 1493                       u3470 13B8  
                     u3390 1362                       u4350 1990                       u2911 1A08  
                     u5151 0805                       u3711 14F3                       u3631 1492  
                     u3471 13B7                       u3391 1361                       u4351 198F  
                     u7000 19DB                       u3720 094D                       u3640 14A5  
                     u3560 1466                       u6040 1A67                       u6120 117F  
                     u4360 1996                       u7001 19DA                       u3801 09F1  
                     u3721 094C                       u3641 14A4                       u3561 1465  
                     u6041 1A66                       u6121 117E                       u6105 10E3  
                     u4361 1995                       u7010 19ED                       u2930 1A1D  
                     u3802 09F8                       u3730 0953                       u3650 14B4  
                     u3570 146B                       u3490 13DD                       u6050 1A71  
                     u6210 0D9E                       u7011 19EC                       u2931 1A1C  
                     u3811 0A0D                       u3803 09FF                       u3731 0952  
                     u3571 146A                       u3555 145B                       u3491 13DC  
                     u6051 1A70                       u6035 1A59                       u6115 1138  
                     u6211 0D9D                       u7020 1A98                       u3812 0A14  
                     u3740 0958                       u3660 14C3                       u3580 1475  
                     u7100 15EF                       u2925 1A10                       u3901 0B48  
                     u3821 0A39                       u3813 0A1B                       u3741 0957  
                     u3661 14C2                       u3581 1474                       u3493 13D9  
                     u3485 13BB                       u6205 0D56                       u7101 15EC  
                     u7030 1ABC                       u3910 0B72                       u3902 0B4F  
                     u3822 0A40                       u3750 0979                       u3670 14CC  
                     u3590 147B                       u6070 1A84                       u7110 15F3  
                     u3903 0B56                       u3831 0A55                       u3823 0A47  
                     u3751 0978                       u3671 14CB                       u3655 14AF  
                     u3591 147A                       u6071 1A83                       u6055 1A6D  
                     u6135 119C                       u7111 15F2                       u7040 1ACE  
                     u3832 0A5C                       u3760 097F                       u3680 14D1  
                     u6400 0909                       u6080 106A                       u6160 0CA4  
                     u7200 007A                       u7120 1630                       u7041 1ACD  
                     u3921 0B7E                       u3833 0A63                       u3761 097E  
                     u3681 14D0                       u6401 0908                       u6065 1A78  
                     u6145 11E9                       u6081 1069                       u6305 0F5E  
                     u6225 0DB1                       u6161 0CA3                       u7201 0079  
                     u7121 162F                       u3930 0B9A                       u3922 0B85  
                     u3770 0984                       u3690 14DE                       u6330 0892  
                     u6250 0E5A                       u6170 0CAD                       u7210 0089  
                     u7130 1678                       u7050 1506                       u3923 0B8C  
                     u3915 0B6D                       u3851 0A8B                       u3771 0983  
                     u3691 14DD                       u6331 0891                       u6155 1235  
                     u6315 0F9A                       u6251 0E59                       u6235 0DED  
                     u6171 0CAC                       u7211 0088                       u7131 1677  
                     u7051 1505                       u3852 0A92                       u3780 099B  
                     u4900 07BD                       u6420 091B                       u6340 08AC  
                     u7220 00B2                       u7140 16C3                       u7060 1526  
                     u3941 0BA6                       u3861 0AB8                       u3853 0A99  
                     u3845 0A65                       u3781 099A                       u4901 07BC  
                     u6421 091A                       u6341 08AB                       u6325 0FD6  
                     u6245 0E29                       u7221 00B1                       u7141 16C2  
                     u7061 1525                       u3942 0BAD                       u3862 0ABF  
                     u3790 09A0                       u4910 07C4                       u6510 072C  
                     u6430 0922                       u7310 02F4                       u7150 175A  
                     u7070 1566                       u3943 0BB4                       u3935 0B95  
                     u3863 0AC6                       u3791 099F                       u4911 07C3  
                     u6511 072B                       u6431 0921                       u6415 090B  
                     u6095 1087                       u7311 02F3                       u7215 0085  
                     u7151 1759                       u7071 1565                       u4840 1955  
                     u6520 0730                       u6360 08E5                       u5800 084B  
                     u7400 0512                       u7320 0315                       u7240 01D3  
                     u7160 178C                       u7080 1574                       u3881 0AEE  
                     u4841 1954                       u6521 072F                       u6505 071F  
                     u6361 08E4                       u5801 084A                       u6265 0E7C  
                     u6185 0CCF                       u7401 0511                       u7321 0314  
                     u7305 024A                       u7241 01D2                       u7161 178B  
                     u7081 1573                       u3970 0BD8                       u3882 0AF5  
                     u4930 07D5                       u4850 0777                       u6530 0737  
                     u6450 0933                       u6290 0F4B                       u7410 051A  
                     u7330 0324                       u7250 01DE                       u7170 17A3  
                     u7090 15B8                       u3971 0BD7                       u3955 0BB6  
                     u3891 0B1B                       u3883 0AFC                       u3875 0AC8  
                     u4931 07D4                       u4851 0776                       u6531 0736  
                     u6451 0932                       u6355 08D0                       u6291 0F4A  
                     u6275 0EB8                       u6195 0D0B                       u7411 0519  
                     u7331 0323                       u7251 01DD                       u7235 01A0  
                     u7171 17A2                       u7091 15B7                       u3892 0B22  
                     u6700 1B72                       u4940 07DA                       u4860 078E  
                     u6620 1A46                       u6460 06B9                       u6380 08FE  
                     u5820 085C                       u5900 1C81                       u7500 05B9  
                     u7340 033F                       u7260 01F9                       u7180 002A  
                     u3965 0BCD                       u3893 0B29                       u6701 1B71  
                     u4941 07D9                       u4925 07C7                       u6621 1A45  
                     u6605 1A33                       u6461 06B8                       u6445 0925  
                     u6381 08FD                       u6365 08E1                       u5821 085B  
                     u5901 1C80                       u6285 0F03                       u7501 05B8  
                     u7341 033E                       u7325 0311                       u7261 01F8  
                     u7245 01CF                       u7181 17FA                       u3990 0BEC  
                     u6710 1B8E                       u4870 07A4                       u6630 1CBF  
                     u6550 0749                       u6470 06CD                       u6390 0902  
                     u5910 1C8B                       u7510 05D1                       u7430 0558  
                     u7270 020B                       u7190 0053                       u3991 0BEB  
                     u6711 1B8D                       u4871 07A3                       u6631 1CBE  
                     u6615 1A3A                       u6551 0748                       u6471 06CC  
                     u6391 0901                       u6375 08F1                       u5815 084C  
                     u5911 1C8A                       u7511 05D0                       u7431 0557  
                     u7335 0320                       u7271 020A                       u7191 0052  
                     u7175 179F                       u6720 1BA8                       u4880 07AB  
                     u6800 1C06                       u6560 0750                       u5840 0870  
                     u5760 081D                       u7520 05E7                       u7440 0563  
                     u7280 022D                       u3985 0BDB                       u6721 1BA7  
                     u4881 07AA                       u4865 0789                       u6801 1C05  
                     u6561 074F                       u6545 0739                       u5841 086F  
                     u5825 0858                       u5761 081C                       u7521 05E6  
                     u7505 05B5                       u7441 0562                       u7425 0525  
                     u7281 022C                       u7185 17F5                       u6730 1D2B  
                     u6650 1CD3                       u6490 070E                       u5850 0875  
                     u5770 0828                       u5930 1C9E                       u7530 05FE  
                     u7450 056E                       u7370 04CB                       u7290 023B  
                     u6731 1D2A                       u6651 1CD2                       u6491 070D  
                     u5851 0874                       u5835 0864                       u5771 0827  
                     u5931 1C9D                       u5915 1C87                       u7531 05FD  
                     u7515 05CD                       u7451 056D                       u7435 0554  
                     u7371 04CA                       u7355 03C6                       u7291 023A  
                     u6900 1E06                       u6740 1D47                       u6820 1C1A  
                     u6580 0761                       u5780 0839                       u5940 1CA3  
                     u5860 1C59                       u7540 060A                       u7460 0584  
                     u7380 04E3                       u6901 1E05                       u6725 1BA4  
                     u6741 1D46                       u6645 1CC4                       u6821 1C19  
                     u6581 0760                       u6485 06F5                       u5781 0838  
                     u5941 1CA2                       u5925 1C92                       u5861 1C58  
                     u7541 0609                       u7461 0583                       u7381 04E2  
                     u7365 046C                       u7285 0229                       u6750 1D53  
                     u6670 1CEE                       u6830 1C2C                       u6590 1A2A  
                     u5950 1AD9                       u5870 1C64                       u7470 0595  
                     u7390 04FD                       u6751 1D52                       u4895 07AD  
                     u6671 1CED                       u6831 1C2B                       u6815 1C0B  
                     u6591 1A29                       u6575 0753                       u6495 070A  
                     u5951 1AD8                       u5871 1C63                       u7471 0594  
                     u7455 056A                       u7391 04FC                       u7607 1ED5  
                     u6920 1E28                       u5880 1C6F                       u7560 0693  
                     u7480 05A1                       u6921 1E27                       u6761 1D62  
                     u6665 1CD5                       u5881 1C6E                       u7561 0692  
                     u7481 05A0                       u7465 0580                       u7617 1EE6  
                     u6770 1D7B                       u6762 1D63                       u6690 1D0C  
                     u6850 1C49                       u5970 1AEB                       u7570 06A7  
                     u7490 05AB                       u7707 07F7                       u6915 1E1A  
                     u6771 1D7A                       u6763 1D68                       u6691 1D0B  
                     u6675 1CEA                       u6851 1C48                       u6835 1C28  
                     u5971 1AEA                       u5795 083D                       u7571 06A4  
                     u7555 0625                       u7491 05AA                       u7627 1F06  
                     u6940 1E38                       u6860 1DC1                       u6764 1D69  
                     u6941 1E37                       u6861 1DC0                       u6781 1D8A  
                     u6765 1D6E                       u6685 1CFE                       u6845 1C3B  
                     u5965 1ADD                       u7637 1F17                       u6950 1E3E  
                     u6870 1DC5                       u6790 1DB5                       u6782 1D8B  
                     u6766 1D6F                       u5990 1AFC                       u6951 1E3D  
                     u6935 1E2D                       u6871 1DC4                       u6791 1DB4  
                     u6783 1D90                       u5991 1AFB                       u5895 1C73  
                     u7647 1F37                       u6960 1E42                       u6880 1DE5  
                     u6784 1D91                       u7657 19A9                       u6961 1E41  
                     u6881 1DE4                       u6785 1D96                       u5985 1AEC  
                     u6970 1E57                       u6786 1D97                       u7667 19B1  
                     u6795 1DB1                       u5995 1AF8                       u7587 1EA4  
                     u6980 1E67                       u7677 1B21                       u6981 1E66  
                     u7597 1EB5                       u6990 1E6B                       u7687 1B31  
                     u6991 1E6A                       u6975 1E52                       u6895 1DF8  
                     u7697 1B40                       _TRMT 04C1          ?_Lcd_Write_String 0076  
                     _flag 0079                       _main 1E75                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0020               _sprintf$1261 00B2  
          __end_of_Lcd_Cmd 0800                      ??_ISR 0070              ___fltol@sign1 0061  
          __end_of___fladd 14F6                      ?_main 0070            __end_of___awdiv 087F  
          __end_of___flneg 1958            __end_of___awmod 1CAD            __end_of___flmul 0C9D  
          __end_of___flsub 1BFC            __end_of___fltol 07E6                      _ANSEL 0188  
          __end_of___lldiv 1D15            ___awdiv@divisor 0022            __end_of___llmod 1C52  
          __end_of___lwdiv 1B15                      i1l100 19CC            __end_of___lwmod 1A89  
          ___awdiv@counter 0027                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0026  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019            __end_of_dpowers 18A0  
                    _count 00D7                      _scale 0C9D            __end_of_isdigit 199A  
          __end_of_recibir 194D                      _setup 1976                      _turno 0078  
                    pclath 000A            __end_of_spiInit 0816            __end_of_spiRead 1942  
                    status 0003                      wtemp0 007E            __end_of_sprintf 06AC  
         __end_of_Lcd_Init 1B5C           __end_of_Lcd_Port 1924            __initialization 000F  
             __end_of_main 2000                     ??_main 0190         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0031                     ?_scale 0045  
         ___awdiv@dividend 0024                     ?_setup 0070                     i1l3671 19BB  
                   i1l3673 19BF                     i1l3675 19C0                     i1l3677 19C6  
                   i1l3669 19B5                     u574_20 19BB                     u574_21 19BA  
                   u575_20 19BF                     u575_21 19BE                  ??_Lcd_Cmd 0074  
                   u771_27 19C2    __size_of_Lcd_Write_Char 001B                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 1E75           __end_of__powers_ 1844  
                   ___flge 1D15                     ___fleq 1B5C                  ??___fladd 0061  
                   ___wmul 1A22                  ??___awdiv 0026                  ??___flneg 0077  
                ??___awmod 0077                  ??___flmul 0033                  ??___flsub 0078  
                ??___fltol 005C                  ??___lldiv 0073                  ??___llmod 0074  
                ??___lwdiv 0025                  ??___lwmod 0077                     _fround 1061  
         ___awdiv@quotient 0029            ___awmod@divisor 0073                     _valor0 006D  
                   _valor1 00D9                     _valor2 00D8            ___awmod@counter 0020  
             conversor@val 004D               __pdataCOMMON 0078                  ??_isdigit 0073  
       __size_of__Umul8_16 0029                  ??_recibir 0073                     saved_w 007E  
         __end_of_spiWrite 192A                  ??_spiInit 0076                  ??_spiRead 0073  
                ??_sprintf 00AD            Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0077  
               ___flge@ff1 0020                 ___flge@ff2 0024               ___xxtofl@arg 0026  
             ___xxtofl@exp 0025               ___xxtofl@val 0073                 ___fleq@ff1 0020  
               ___fleq@ff2 0024    __end_of__initialization 0026                 ___flneg@f1 0073  
        __end_of_Lcd_Clear 1965                 ___fltol@f1 0058      __end_of_Config_USARTT 1976  
           __pcstackCOMMON 0070              __end_of_scale 1000              __end_of_setup 1988  
           _Lcd_Set_Cursor 19D3                 __div_to_l_ 06AC                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 002D            __div_to_l_@cntr 002C  
                  ??_scale 0049            __div_to_l_@quot 0028               sprintf@width 00B9  
                  ??_setup 0073         __size_of_conversor 005C                 __pbssBANK0 006D  
               __pbssBANK1 00CD              __div_to_l_@f1 0020              __div_to_l_@f2 0024  
        __end_of__Umul8_16 1A22                 __pmaintext 1E75                    ?___flge 0020  
                  ?___fleq 0020                    ?___wmul 0073                 __pintentry 0004  
  __size_of_spiReceiveWait 0007                    ?_fround 0045  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 19F9                  ?___xxtofl 0073                 ??_Lcd_Init 0020  
               ??_Lcd_Port 0073                    _SSPSTAT 0094                 __stringtab 1800  
           _Lcd_Write_Char 199A                    _Lcd_Cmd 07E6          __end_of__npowers_ 1878  
               _scale$1260 0053                  ?_spiWrite 0070            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 126E                    ___awdiv 0816  
                  ___flneg 194D                    ___awmod 1C52                    ___flmul 093C  
                  ___flsub 1BAC                    ___fltol 076A                    ___lldiv 1CAD  
          __size_of___wmul 002B                    ___llmod 1BFC                    ___lwdiv 1ACF  
                  ___lwmod 1A4D          __end_of_conversor 1061            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0077                    __ptext1 14F6                    __ptext2 0C9D  
                  __ptext3 1C52                    __ptext4 0816                    __ptext5 1988  
                  __ptext6 1061                    __ptext7 1A4D                    __ptext8 1ACF  
                  __ptext9 087F               __size_of_ISR 001E                ?__div_to_l_ 0020  
                  _enviado 00D5                    _dpowers 1878                    _isdigit 1988  
               ??___xxtofl 0020                    _recibir 1942           ___awmod@dividend 0075  
                  _spiInit 0801                    _spiRead 1939                    _retorno 007A  
                  _sprintf 14F6                    clrloop0 1932     __end_of_Lcd_Write_Char 19B5  
     end_of_initialization 0026            ___lldiv@divisor 0020            ___lldiv@counter 002C  
                _RCSTAbits 0018                 ??_spiWrite 0073                    psplit$0 F0037  
                Lcd_Port@a 0073             __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024  
            ??__tdiv_to_l_ 0073                  _PORTBbits 0006                  _PORTEbits 0009  
              ___fladd@grs 006C              ___xxtofl@sign 0024                spiWrite@dat 0073  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0023  
              ___flmul@grs 0039                  _TXSTAbits 0098        __size_of__div_to_l_ 00BE  
                _Lcd_Clear 1958             _spiReceiveWait 192A             __end_of___flge 1DB9  
           __end_of___fleq 1BAC             __end_of___wmul 1A4D           _Lcd_Write_String 1A89  
            __pidataCOMMON 1003          pnum$text1_split_1 0037                _BAUDCTLbits 0187  
           __end_of_fround 126E        start_initialization 000F                __end_of_ISR 19D3  
      __end_of__tdiv_to_l_ 093C          __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006  
          ___llmod@divisor 002D            ___llmod@counter 0075     __end_of_spiReceiveWait 1931  
               ?_Lcd_Clear 0070                   ??___flge 0073                   ??___fleq 0073  
                 ??___wmul 0077                  __Umul8_16 19F9            Lcd_Write_Char@a 0075  
                 ??_fround 0049              sprintf@tmpval 00BB                  ___fladd@a 005D  
                ___fladd@b 0059                 fround@prec 0058                  ___flmul@a 002F  
                ___flmul@b 002B                __pbssCOMMON 007A                  ___flsub@a 00A0  
                ___flsub@b 00A4                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0              __pcstackBANK3 0190     __size_of_Config_USARTT 0011  
        __size_of___xxtofl 00BC               _isdigit$1075 0073                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B7                sprintf@eexp 00C3                sprintf@fval 00C5  
              sprintf@prec 00CA           ___lwdiv@dividend 0023            ?_spiReceiveWait 0070  
         ??_Lcd_Set_Cursor 0020                   ?___fladd 0059                   ?___awdiv 0022  
                 ?___flneg 0073                   ?___awmod 0073                   ?___flmul 002B  
                 ?___flsub 00A0                   ?___fltol 0058                   ?___lldiv 0020  
                 ?___llmod 002D                  __npowers_ 1844                 ?__Umul8_16 0073  
                 ?___lwdiv 0021                   ?___lwmod 0073          __size_of_spiWrite 0006  
                __pstrings 1800                __tdiv_to_l_ 087F               ??__div_to_l_ 0073  
                _conversor 1005                   ?_isdigit 0070                   ?_recibir 0070  
                 ?_spiInit 0073                   ?_spiRead 0070           ___lwdiv@quotient 0027  
                 ?_sprintf 00A8             __size_of_scale 0363             __size_of_setup 0012  
     spiInit@sTransmitEdge 0075          interrupt_function 0004             ___wmul@product 0020  
                clear_ram0 1931                   _PIE1bits 008C         spiInit@sDataSample 0073  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C         __end_of__div_to_l_ 076A  
            _Config_USARTT 1965                ??_Lcd_Clear 0077                __stringbase 180F  
        ___wmul@multiplier 0073                 ?_conversor 0045           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 1B15                   _Lcd_Port 191E   __end_of_Lcd_Write_String 1ACF  
         __size_of_Lcd_Cmd 001A             ?_Config_USARTT 0070                ??__Umul8_16 0075  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 005B           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003C                _fround$1258 0054  
              _fround$1259 0050         __end_of__stringtab 1810                 sprintf@val 00BF  
                 ___xxtofl 1DB9           __size_of_isdigit 0012           __size_of_recibir 000B  
          ___lwdiv@divisor 0021            ___lwdiv@counter 0026                   __ptext10 06AC  
                 __ptext11 1A22                   __ptext20 1924                   __ptext12 1BFC  
                 __ptext21 1939                   __ptext13 1CAD                   __ptext30 1A89  
                 __ptext22 192A                   __ptext14 076A                   __ptext31 199A  
                 __ptext23 0801                   __ptext15 1BAC                   __ptext32 19D3  
                 __ptext24 1976                   __ptext16 126E                   __ptext33 1B15  
                 __ptext25 1942                   __ptext17 194D                   __ptext34 1958  
                 __ptext26 1005                   __ptext18 1D15                   __ptext35 07E6  
                 __ptext27 1DB9                   __ptext19 1B5C                   __ptext36 191E  
                 __ptext28 093C                   __ptext37 1965                   __ptext29 19F9  
                 __ptext38 19B5           __size_of_spiInit 0015           __size_of_spiRead 0009  
                 __powers_ 1810           __size_of_sprintf F1B6              __size_of_main 018B  
                pnum$text1 000F                   _recibido 00D6                   _spiWrite 1924  
             spiInit@sType 0076          spiInit@sClockIdle 0074                ??_conversor 0049  
               _INTCONbits 000B                   isdigit@c 0074                   scale@scl 0057  
                 intlevel1 0000                  sprintf@ap 00B6           __tdiv_to_l_@exp1 002D  
         __tdiv_to_l_@cntr 002C                  sprintf@sp 00C9           __tdiv_to_l_@quot 0028  
         ___lwmod@dividend 0075           ___lldiv@dividend 0024           ??_spiReceiveWait 0073  
          ??_Config_USARTT 0073                  stringcode 180A         Lcd_Set_Cursor@temp 0022  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0073                   sprintf@c 00CC  
                 sprintf@f 00A8           ___lldiv@quotient 0028            ___lwmod@divisor 0073  
          ___lwmod@counter 0020                   stringdir 180A                   stringtab 1800  
            ___fladd@signs 0069               ___fladd@aexp 006A               ___fladd@bexp 006B  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
