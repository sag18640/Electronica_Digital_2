

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 22:16:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289                           
   290                           	psect	idataCOMMON
   291  00D3                     __pidataCOMMON:
   292                           
   293                           ;initializer for _flag
   294  00D3  3401               	retlw	1
   295  0013                     _SSPBUF	set	19
   296  0014                     _SSPCON	set	20
   297  0006                     _PORTBbits	set	6
   298  000B                     _INTCONbits	set	11
   299  000C                     _PIR1bits	set	12
   300  000B                     _INTCON	set	11
   301  0009                     _PORTE	set	9
   302  0007                     _PORTC	set	7
   303  0006                     _PORTB	set	6
   304  0008                     _PORTD	set	8
   305  0094                     _SSPSTAT	set	148
   306  0094                     _SSPSTATbits	set	148
   307  0096                     _IOCBbits	set	150
   308  0089                     _TRISE	set	137
   309  0086                     _TRISB	set	134
   310  0087                     _TRISC	set	135
   311  0088                     _TRISD	set	136
   312  0085                     _TRISAbits	set	133
   313  043B                     _TRISC3	set	1083
   314  043D                     _TRISC5	set	1085
   315                           
   316                           	psect	cinit
   317  000F                     start_initialization:	
   318                           ; #config settings
   319                           
   320  000F                     __initialization:
   321                           
   322                           ; Initialize objects allocated to COMMON
   323  000F  120A  118A  20D3  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   324  0014  00F8               	movwf	__pdataCOMMON& (0+127)
   325                           
   326                           ; Clear objects allocated to COMMON
   327  0015  01F5               	clrf	__pbssCOMMON& (0+127)
   328  0016  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   329  0017  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   330  0018                     end_of_initialization:	
   331                           ;End of C runtime variable initialization code
   332                           
   333  0018                     __end_of__initialization:
   334  0018  0183               	clrf	3
   335  0019  120A  118A  288D   	ljmp	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMMON
   338  0075                     __pbssCOMMON:
   339  0075                     _a:
   340  0075                     	ds	1
   341  0076                     _flag2:
   342  0076                     	ds	1
   343  0077                     _count:
   344  0077                     	ds	1
   345                           
   346                           	psect	dataCOMMON
   347  0078                     __pdataCOMMON:
   348  0078                     _flag:
   349  0078                     	ds	1
   350                           
   351                           	psect	cstackCOMMON
   352  0070                     __pcstackCOMMON:
   353  0070                     ?_setup:
   354  0070                     ?_spiRead:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??_spiRead:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_spiWrite:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ??_spiWrite:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_main:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_ISR:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ?_spiReceiveWait:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ??_spiReceiveWait:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     spiWrite@dat:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  0070                     	ds	1
   384  0071                     ??_ISR:
   385                           
   386                           ; 1 bytes @ 0x1
   387  0071                     	ds	3
   388  0074                     ??_setup:
   389  0074                     ??_spiInit:	
   390                           ; 1 bytes @ 0x4
   391                           
   392  0074                     spiInit@sType:	
   393                           ; 1 bytes @ 0x4
   394                           
   395                           
   396                           ; 1 bytes @ 0x4
   397  0074                     	ds	1
   398  0075                     ??_main:
   399                           
   400                           	psect	cstackBANK0
   401  0020                     __pcstackBANK0:	
   402                           ; 1 bytes @ 0x5
   403                           
   404  0020                     ?_spiInit:
   405  0020                     spiInit@sDataSample:	
   406                           ; 1 bytes @ 0x0
   407                           
   408                           
   409                           ; 1 bytes @ 0x0
   410  0020                     	ds	1
   411  0021                     spiInit@sClockIdle:
   412                           
   413                           ; 1 bytes @ 0x1
   414  0021                     	ds	1
   415  0022                     spiInit@sTransmitEdge:
   416                           
   417                           ; 1 bytes @ 0x2
   418  0022                     	ds	1
   419                           
   420                           	psect	maintext
   421  008D                     __pmaintext:	
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 53 in file "main.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, status,2, status,0, pclath, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : B00/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0
   443 ;;      Temps:          0       0       0       0       0
   444 ;;      Totals:         0       0       0       0       0
   445 ;;Total ram usage:        0 bytes
   446 ;; Hardware stack levels required when called:    4
   447 ;; This function calls:
   448 ;;		_setup
   449 ;;		_spiInit
   450 ;; This function is called by:
   451 ;;		Startup code after reset
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _main
   457  008D                     _main:
   458  008D                     l815:	
   459                           ;incstack = 0
   460                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   461                           
   462                           
   463                           ;main.c: 54:     setup();
   464  008D  120A  118A  20A8  120A  118A  	fcall	_setup
   465  0092                     l817:
   466                           
   467                           ;main.c: 55:     count = 0;
   468  0092  01F7               	clrf	_count
   469  0093                     l819:
   470                           
   471                           ;main.c: 56:     flag = 1;
   472  0093  01F8               	clrf	_flag
   473  0094  0AF8               	incf	_flag,f
   474  0095                     l821:
   475                           
   476                           ;main.c: 57:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   477  0095  1283               	bcf	3,5	;RP0=0, select bank0
   478  0096  1303               	bcf	3,6	;RP1=0, select bank0
   479  0097  01A0               	clrf	spiInit@sDataSample
   480  0098  01A1               	clrf	spiInit@sClockIdle
   481  0099  01A2               	clrf	spiInit@sTransmitEdge
   482  009A  3024               	movlw	36
   483  009B  120A  118A  206F  120A  118A  	fcall	_spiInit
   484  00A0                     l823:
   485                           
   486                           ;main.c: 61:         PORTD = count;
   487  00A0  0877               	movf	_count,w
   488  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   489  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   490  00A3  0088               	movwf	8	;volatile
   491  00A4  28A0               	goto	l823
   492  00A5  120A  118A  280C   	ljmp	start
   493  00A8                     __end_of_main:
   494                           
   495                           	psect	text1
   496  006F                     __ptext1:	
   497 ;; *************** function _spiInit *****************
   498 ;; Defined at:
   499 ;;		line 13 in file "SPI.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;  sType           1    wreg     enum E1264
   502 ;;  sDataSample     1    0[BANK0 ] enum E1272
   503 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   504 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  sType           1    4[COMMON] enum E1264
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       3       0       0       0
   517 ;;      Locals:         1       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0
   519 ;;      Totals:         1       3       0       0       0
   520 ;;Total ram usage:        4 bytes
   521 ;; Hardware stack levels used:    1
   522 ;; Hardware stack levels required when called:    3
   523 ;; This function calls:
   524 ;;		Nothing
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           
   531                           ;psect for function _spiInit
   532  006F                     _spiInit:
   533                           
   534                           ;incstack = 0
   535                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   536                           ;spiInit@sType stored from wreg
   537  006F  00F4               	movwf	spiInit@sType
   538  0070                     l805:
   539                           
   540                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   541  0070  1683               	bsf	3,5	;RP0=1, select bank1
   542  0071  1303               	bcf	3,6	;RP1=0, select bank1
   543  0072  1287               	bcf	7,5	;volatile
   544                           
   545                           ;SPI.c: 16:     if(sType & 0b00000100)
   546  0073  1D74               	btfss	spiInit@sType,2
   547  0074  2876               	goto	u131
   548  0075  2877               	goto	u130
   549  0076                     u131:
   550  0076  287F               	goto	l811
   551  0077                     u130:
   552  0077                     l807:
   553                           
   554                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   555  0077  1283               	bcf	3,5	;RP0=0, select bank0
   556  0078  1303               	bcf	3,6	;RP1=0, select bank0
   557  0079  0822               	movf	spiInit@sTransmitEdge,w
   558  007A  1683               	bsf	3,5	;RP0=1, select bank1
   559  007B  1303               	bcf	3,6	;RP1=0, select bank1
   560  007C  0094               	movwf	20	;volatile
   561  007D                     l809:
   562                           
   563                           ;SPI.c: 19:         TRISC3 = 1;
   564  007D  1587               	bsf	7,3	;volatile
   565                           
   566                           ;SPI.c: 20:     }
   567  007E  2887               	goto	l91
   568  007F                     l811:
   569                           
   570                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   571  007F  1283               	bcf	3,5	;RP0=0, select bank0
   572  0080  1303               	bcf	3,6	;RP1=0, select bank0
   573  0081  0820               	movf	spiInit@sDataSample,w
   574  0082  0422               	iorwf	spiInit@sTransmitEdge,w
   575  0083  1683               	bsf	3,5	;RP0=1, select bank1
   576  0084  1303               	bcf	3,6	;RP1=0, select bank1
   577  0085  0094               	movwf	20	;volatile
   578  0086                     l813:
   579                           
   580                           ;SPI.c: 24:         TRISC3 = 0;
   581  0086  1187               	bcf	7,3	;volatile
   582  0087                     l91:	
   583                           ;SPI.c: 25:     }
   584                           
   585                           
   586                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   587  0087  0874               	movf	spiInit@sType,w
   588  0088  1283               	bcf	3,5	;RP0=0, select bank0
   589  0089  1303               	bcf	3,6	;RP1=0, select bank0
   590  008A  0421               	iorwf	spiInit@sClockIdle,w
   591  008B  0094               	movwf	20	;volatile
   592  008C                     l92:
   593  008C  0008               	return
   594  008D                     __end_of_spiInit:
   595                           
   596                           	psect	text2
   597  00A8                     __ptext2:	
   598 ;; *************** function _setup *****************
   599 ;; Defined at:
   600 ;;		line 74 in file "main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    3
   621 ;; This function calls:
   622 ;;		Nothing
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _setup
   630  00A8                     _setup:
   631  00A8                     l703:	
   632                           ;incstack = 0
   633                           ; Regs used in _setup: [wreg+status,2]
   634                           
   635                           
   636                           ;main.c: 75:     TRISAbits.TRISA5 = 1;
   637  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   638  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   639  00AA  1685               	bsf	5,5	;volatile
   640  00AB                     l705:
   641                           
   642                           ;main.c: 77:     TRISD = 0b00000000;
   643  00AB  0188               	clrf	8	;volatile
   644  00AC                     l707:
   645                           
   646                           ;main.c: 78:     TRISC = 0b00011000;
   647  00AC  3018               	movlw	24
   648  00AD  0087               	movwf	7	;volatile
   649  00AE                     l709:
   650                           
   651                           ;main.c: 81:     TRISB = 0b11111110;
   652  00AE  30FE               	movlw	254
   653  00AF  0086               	movwf	6	;volatile
   654                           
   655                           ;main.c: 84:     TRISE = 0b00000000;
   656  00B0  0189               	clrf	9	;volatile
   657  00B1                     l711:
   658                           
   659                           ;main.c: 85:     IOCBbits.IOCB6 = 1;
   660  00B1  1716               	bsf	22,6	;volatile
   661  00B2                     l713:
   662                           
   663                           ;main.c: 86:     IOCBbits.IOCB7 = 1;
   664  00B2  1796               	bsf	22,7	;volatile
   665                           
   666                           ;main.c: 87:     PORTB = 0;
   667  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   668  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   669  00B5  0186               	clrf	6	;volatile
   670                           
   671                           ;main.c: 88:     PORTC = 0;
   672  00B6  0187               	clrf	7	;volatile
   673                           
   674                           ;main.c: 89:     PORTD = 0;
   675  00B7  0188               	clrf	8	;volatile
   676                           
   677                           ;main.c: 91:     PORTE = 0;
   678  00B8  0189               	clrf	9	;volatile
   679                           
   680                           ;main.c: 92:     flag2 = 0;
   681  00B9  01F6               	clrf	_flag2
   682  00BA                     l715:
   683                           
   684                           ;main.c: 93:     INTCON = 0b11101000;
   685  00BA  30E8               	movlw	232
   686  00BB  008B               	movwf	11	;volatile
   687  00BC                     l57:
   688  00BC  0008               	return
   689  00BD                     __end_of_setup:
   690                           
   691                           	psect	text3
   692  001C                     __ptext3:	
   693 ;; *************** function _ISR *****************
   694 ;; Defined at:
   695 ;;		line 101 in file "main.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0, pclath, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   709 ;;      Params:         0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0
   711 ;;      Temps:          3       0       0       0       0
   712 ;;      Totals:         3       0       0       0       0
   713 ;;Total ram usage:        3 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    2
   716 ;; This function calls:
   717 ;;		_spiRead
   718 ;;		_spiWrite
   719 ;; This function is called by:
   720 ;;		Interrupt level 1
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _ISR
   726  001C                     _ISR:
   727  001C                     i1l745:
   728                           
   729                           ;main.c: 102:     if (PIR1bits.SSPIF == 1 && SSPSTATbits.BF == 1) {
   730  001C  1283               	bcf	3,5	;RP0=0, select bank0
   731  001D  1303               	bcf	3,6	;RP1=0, select bank0
   732  001E  1D8C               	btfss	12,3	;volatile
   733  001F  2821               	goto	u3_21
   734  0020  2822               	goto	u3_20
   735  0021                     u3_21:
   736  0021  2839               	goto	i1l753
   737  0022                     u3_20:
   738  0022                     i1l747:
   739  0022  1683               	bsf	3,5	;RP0=1, select bank1
   740  0023  1303               	bcf	3,6	;RP1=0, select bank1
   741  0024  1C14               	btfss	20,0	;volatile
   742  0025  2827               	goto	u4_21
   743  0026  2828               	goto	u4_20
   744  0027                     u4_21:
   745  0027  2839               	goto	i1l753
   746  0028                     u4_20:
   747  0028                     i1l749:
   748                           
   749                           ;main.c: 104:         a = spiRead();
   750  0028  120A  118A  20BD  120A  118A  	fcall	_spiRead
   751  002D  00F1               	movwf	??_ISR
   752  002E  0871               	movf	??_ISR,w
   753  002F  00F5               	movwf	_a
   754                           
   755                           ;main.c: 105:         spiWrite(0x3F);
   756  0030  303F               	movlw	63
   757  0031  120A  118A  20CD  120A  118A  	fcall	_spiWrite
   758  0036                     i1l751:
   759                           
   760                           ;main.c: 106:         PIR1bits.SSPIF = 0;
   761  0036  1283               	bcf	3,5	;RP0=0, select bank0
   762  0037  1303               	bcf	3,6	;RP1=0, select bank0
   763  0038  118C               	bcf	12,3	;volatile
   764  0039                     i1l753:
   765                           
   766                           ;main.c: 110:     if (INTCONbits.RBIF == 1) {
   767  0039  1C0B               	btfss	11,0	;volatile
   768  003A  283C               	goto	u5_21
   769  003B  283D               	goto	u5_20
   770  003C                     u5_21:
   771  003C  2867               	goto	i1l777
   772  003D                     u5_20:
   773  003D                     i1l755:
   774                           
   775                           ;main.c: 111:         if (PORTBbits.RB6 == 0) {
   776  003D  1283               	bcf	3,5	;RP0=0, select bank0
   777  003E  1B06               	btfsc	6,6	;volatile
   778  003F  2841               	goto	u6_21
   779  0040  2842               	goto	u6_20
   780  0041                     u6_21:
   781  0041  2854               	goto	i1l64
   782  0042                     u6_20:
   783  0042  2849               	goto	i1l761
   784  0043                     i1l66:
   785                           
   786                           ;main.c: 113:                 if (PORTBbits.RB6 == 1) {
   787  0043  1F06               	btfss	6,6	;volatile
   788  0044  2846               	goto	u7_21
   789  0045  2847               	goto	u7_20
   790  0046                     u7_21:
   791  0046  2849               	goto	i1l761
   792  0047                     u7_20:
   793  0047                     i1l759:
   794                           
   795                           ;main.c: 114:                     flag2 = 1;
   796  0047  01F6               	clrf	_flag2
   797  0048  0AF6               	incf	_flag2,f
   798  0049                     i1l761:
   799                           
   800                           ;main.c: 112:             while (flag2 == 0) {
   801  0049  0876               	movf	_flag2,w
   802  004A  1903               	btfsc	3,2
   803  004B  284D               	goto	u8_21
   804  004C  284E               	goto	u8_20
   805  004D                     u8_21:
   806  004D  2843               	goto	i1l66
   807  004E                     u8_20:
   808  004E                     i1l763:
   809                           
   810                           ;main.c: 117:             flag2 = 0;
   811  004E  01F6               	clrf	_flag2
   812  004F                     i1l765:
   813                           
   814                           ;main.c: 118:             count++;
   815  004F  3001               	movlw	1
   816  0050  00F1               	movwf	??_ISR
   817  0051  0871               	movf	??_ISR,w
   818  0052  07F7               	addwf	_count,f
   819                           
   820                           ;main.c: 120:         } else if (PORTBbits.RB7 == 0) {
   821  0053  2867               	goto	i1l777
   822  0054                     i1l64:
   823  0054  1B86               	btfsc	6,7	;volatile
   824  0055  2857               	goto	u9_21
   825  0056  2858               	goto	u9_20
   826  0057                     u9_21:
   827  0057  2867               	goto	i1l777
   828  0058                     u9_20:
   829  0058  285F               	goto	i1l771
   830  0059                     i1l72:
   831                           
   832                           ;main.c: 122:                 if (PORTBbits.RB7 == 1) {
   833  0059  1F86               	btfss	6,7	;volatile
   834  005A  285C               	goto	u10_21
   835  005B  285D               	goto	u10_20
   836  005C                     u10_21:
   837  005C  285F               	goto	i1l771
   838  005D                     u10_20:
   839  005D                     i1l769:
   840                           
   841                           ;main.c: 123:                     flag2 = 1;
   842  005D  01F6               	clrf	_flag2
   843  005E  0AF6               	incf	_flag2,f
   844  005F                     i1l771:
   845                           
   846                           ;main.c: 121:             while (flag2 == 0) {
   847  005F  0876               	movf	_flag2,w
   848  0060  1903               	btfsc	3,2
   849  0061  2863               	goto	u11_21
   850  0062  2864               	goto	u11_20
   851  0063                     u11_21:
   852  0063  2859               	goto	i1l72
   853  0064                     u11_20:
   854  0064                     i1l773:
   855                           
   856                           ;main.c: 126:             flag2 = 0;
   857  0064  01F6               	clrf	_flag2
   858  0065                     i1l775:
   859                           
   860                           ;main.c: 127:             count--;
   861  0065  3001               	movlw	1
   862  0066  02F7               	subwf	_count,f
   863  0067                     i1l777:
   864                           
   865                           ;main.c: 131:     INTCONbits.RBIF = 0;
   866  0067  100B               	bcf	11,0	;volatile
   867  0068                     i1l75:
   868  0068  0873               	movf	??_ISR+2,w
   869  0069  008A               	movwf	10
   870  006A  0E72               	swapf	??_ISR+1,w
   871  006B  0083               	movwf	3
   872  006C  0EFE               	swapf	btemp,f
   873  006D  0E7E               	swapf	btemp,w
   874  006E  0009               	retfie
   875  006F                     __end_of_ISR:
   876                           
   877                           	psect	intentry
   878  0004                     __pintentry:	
   879                           ;incstack = 0
   880                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   881                           
   882  0004                     interrupt_function:
   883  007E                     saved_w	set	btemp
   884  0004  00FE               	movwf	btemp
   885  0005  0E03               	swapf	3,w
   886  0006  00F2               	movwf	??_ISR+1
   887  0007  080A               	movf	10,w
   888  0008  00F3               	movwf	??_ISR+2
   889  0009  120A  118A  281C   	ljmp	_ISR
   890                           
   891                           	psect	text4
   892  00CD                     __ptext4:	
   893 ;; *************** function _spiWrite *****************
   894 ;; Defined at:
   895 ;;		line 35 in file "SPI.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  dat             1    wreg     unsigned char 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  dat             1    0[COMMON] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         1       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0
   912 ;;      Totals:         1       0       0       0       0
   913 ;;Total ram usage:        1 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_ISR
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _spiWrite
   924  00CD                     _spiWrite:
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in _spiWrite: [wreg]
   928                           ;spiWrite@dat stored from wreg
   929  00CD  00F0               	movwf	spiWrite@dat
   930  00CE                     i1l733:
   931                           
   932                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   933  00CE  0870               	movf	spiWrite@dat,w
   934  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   935  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   936  00D1  0093               	movwf	19	;volatile
   937  00D2                     i1l101:
   938  00D2  0008               	return
   939  00D3                     __end_of_spiWrite:
   940                           
   941                           	psect	text5
   942  00BD                     __ptext5:	
   943 ;; *************** function _spiRead *****************
   944 ;; Defined at:
   945 ;;		line 48 in file "SPI.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      unsigned char 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0
   962 ;;      Totals:         0       0       0       0       0
   963 ;;Total ram usage:        0 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; Hardware stack levels required when called:    1
   966 ;; This function calls:
   967 ;;		_spiReceiveWait
   968 ;; This function is called by:
   969 ;;		_ISR
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _spiRead
   975  00BD                     _spiRead:
   976  00BD                     i1l727:	
   977                           ;incstack = 0
   978                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   979                           
   980                           
   981                           ;SPI.c: 50:     spiReceiveWait();
   982  00BD  120A  118A  20C6  120A  118A  	fcall	_spiReceiveWait
   983  00C2                     i1l729:
   984                           
   985                           ;SPI.c: 51:     return(SSPBUF);
   986  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   987  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   988  00C4  0813               	movf	19,w	;volatile
   989  00C5                     i1l109:
   990  00C5  0008               	return
   991  00C6                     __end_of_spiRead:
   992                           
   993                           	psect	text6
   994  00C6                     __ptext6:	
   995 ;; *************** function _spiReceiveWait *****************
   996 ;; Defined at:
   997 ;;		line 30 in file "SPI.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		None
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_spiRead
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _spiReceiveWait
  1026  00C6                     _spiReceiveWait:
  1027  00C6                     i1l701:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _spiReceiveWait: []
  1030                           
  1031  00C6                     i1l95:	
  1032                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  1033                           
  1034  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1035  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1036  00C8  1C14               	btfss	20,0	;volatile
  1037  00C9  28CB               	goto	u1_21
  1038  00CA  28CC               	goto	u1_20
  1039  00CB                     u1_21:
  1040  00CB  28C6               	goto	i1l95
  1041  00CC                     u1_20:
  1042  00CC                     i1l98:
  1043  00CC  0008               	return
  1044  00CD                     __end_of_spiReceiveWait:
  1045  007E                     btemp	set	126	;btemp
  1046  007E                     wtemp0	set	126
  1047                           
  1048                           	psect	config
  1049                           
  1050                           ;Config register CONFIG1 @ 0x2007
  1051                           ;	Oscillator Selection bits
  1052                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1053                           ;	Watchdog Timer Enable bit
  1054                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1055                           ;	Power-up Timer Enable bit
  1056                           ;	PWRTE = OFF, PWRT disabled
  1057                           ;	RE3/MCLR pin function select bit
  1058                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1059                           ;	Code Protection bit
  1060                           ;	CP = OFF, Program memory code protection is disabled
  1061                           ;	Data Code Protection bit
  1062                           ;	CPD = OFF, Data memory code protection is disabled
  1063                           ;	Brown Out Reset Selection bits
  1064                           ;	BOREN = OFF, BOR disabled
  1065                           ;	Internal External Switchover bit
  1066                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1067                           ;	Fail-Safe Clock Monitor Enabled bit
  1068                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1069                           ;	Low Voltage Programming Enable bit
  1070                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1071                           ;	In-Circuit Debugger Mode bit
  1072                           ;	DEBUG = 0x1, unprogrammed default
  1073  2007                     	org	8199
  1074  2007  20D5               	dw	8405
  1075                           
  1076                           ;Config register CONFIG2 @ 0x2008
  1077                           ;	Brown-out Reset Selection bit
  1078                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1079                           ;	Flash Program Memory Self Write Enable bits
  1080                           ;	WRT = OFF, Write protection off
  1081  2008                     	org	8200
  1082  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       3       5        3.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 22:16:37 2021

                      _a 0075              _SSPSTATbits 0094                       l57 00BC  
                     l91 0087                       l92 008C                      l711 00B1  
                    l703 00A8                      l713 00B2                      l705 00AB  
                    l715 00BA                      l707 00AC                      l811 007F  
                    l709 00AE                      l813 0086                      l805 0070  
                    l821 0095                      l807 0077                      l823 00A0  
                    l815 008D                      l809 007D                      l817 0092  
                    l819 0093                      u130 0077                      u131 0076  
                    _ISR 001C                     ?_ISR 0070                     i1l72 0059  
                   i1l64 0054                     i1l66 0043                     i1l75 0068  
                   i1l95 00C6                     i1l98 00CC                     u1_20 00CC  
                   u1_21 00CB                     u3_20 0022                     u3_21 0021  
                   u4_20 0028                     u4_21 0027                     u5_20 003D  
                   u5_21 003C                     u6_20 0042                     u6_21 0041  
                   u7_20 0047                     u7_21 0046                     u8_20 004E  
                   u8_21 004D                     u9_20 0058                     u9_21 0057  
                   _flag 0078                     _main 008D                     btemp 007E  
                   start 000C                    ??_ISR 0071                    ?_main 0070  
                  i1l101 00D2                    i1l109 00C5                    i1l701 00C6  
                  i1l733 00CE                    i1l727 00BD                    i1l751 0036  
                  i1l729 00C2                    i1l761 0049                    i1l753 0039  
                  i1l745 001C                    i1l771 005F                    i1l763 004E  
                  i1l755 003D                    i1l747 0022                    i1l773 0064  
                  i1l765 004F                    i1l749 0028                    i1l775 0065  
                  i1l759 0047                    i1l769 005D                    i1l777 0067  
                  u10_20 005D                    u10_21 005C                    u11_20 0064  
                  u11_21 0063                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _flag2 0076                    _count 0077                    _setup 00A8  
                  pclath 000A          __end_of_spiInit 008D          __end_of_spiRead 00C6  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00A8                   ??_main 0075                   ?_setup 0070  
                 _INTCON 000B                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013             __pdataCOMMON 0078  
                 saved_w 007E         __end_of_spiWrite 00D3                ??_spiInit 0074  
              ??_spiRead 0070  __end_of__initialization 0018           __pcstackCOMMON 0070  
          __end_of_setup 00BD                  ??_setup 0074               __pmaintext 008D  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 006F                  __ptext2 00A8  
                __ptext3 001C                  __ptext4 00CD                  __ptext5 00BD  
                __ptext6 00C6             __size_of_ISR 0053                  _spiInit 006F  
                _spiRead 00BD     end_of_initialization 0018               ??_spiWrite 0070  
              _PORTBbits 0006                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 00C6            __pidataCOMMON 00D3      start_initialization 000F  
            __end_of_ISR 006F   __end_of_spiReceiveWait 00CD              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0020                 ?_spiRead 0070  
         __size_of_setup 0015     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _IOCBbits 0096       spiInit@sDataSample 0020                 _PIR1bits 000C  
       __size_of_spiInit 001E         __size_of_spiRead 0009            __size_of_main 001B  
               _spiWrite 00CD             spiInit@sType 0074        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
