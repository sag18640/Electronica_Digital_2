

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 20:23:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289                           
   290                           	psect	idataCOMMON
   291  00BD                     __pidataCOMMON:
   292                           
   293                           ;initializer for _flag
   294  00BD  3401               	retlw	1
   295  0013                     _SSPBUF	set	19
   296  0014                     _SSPCON	set	20
   297  000C                     _PIR1bits	set	12
   298  0006                     _PORTBbits	set	6
   299  000B                     _INTCONbits	set	11
   300  000B                     _INTCON	set	11
   301  0006                     _PORTB	set	6
   302  0008                     _PORTD	set	8
   303  0063                     _SSPIF	set	99
   304  0094                     _SSPSTAT	set	148
   305  0094                     _SSPSTATbits	set	148
   306  0096                     _IOCBbits	set	150
   307  0087                     _TRISC	set	135
   308  0088                     _TRISD	set	136
   309  0085                     _TRISA	set	133
   310  0086                     _TRISB	set	134
   311  043B                     _TRISC3	set	1083
   312  043D                     _TRISC5	set	1085
   313  0463                     _SSPIE	set	1123
   314                           
   315                           	psect	cinit
   316  000F                     start_initialization:	
   317                           ; #config settings
   318                           
   319  000F                     __initialization:
   320                           
   321                           ; Initialize objects allocated to COMMON
   322  000F  120A  118A  20BD  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   323  0014  00F8               	movwf	__pdataCOMMON& (0+127)
   324                           
   325                           ; Clear objects allocated to COMMON
   326  0015  01F5               	clrf	__pbssCOMMON& (0+127)
   327  0016  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   328  0017  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   329  0018                     end_of_initialization:	
   330                           ;End of C runtime variable initialization code
   331                           
   332  0018                     __end_of__initialization:
   333  0018  0183               	clrf	3
   334  0019  120A  118A  2874   	ljmp	_main	;jump to C main() function
   335                           
   336                           	psect	bssCOMMON
   337  0075                     __pbssCOMMON:
   338  0075                     _valor_MSB:
   339  0075                     	ds	1
   340  0076                     _count2:
   341  0076                     	ds	1
   342  0077                     _count:
   343  0077                     	ds	1
   344                           
   345                           	psect	dataCOMMON
   346  0078                     __pdataCOMMON:
   347  0078                     _flag:
   348  0078                     	ds	1
   349                           
   350                           	psect	cstackCOMMON
   351  0070                     __pcstackCOMMON:
   352  0070                     ?_setup:
   353  0070                     ?_spiRead:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ??_spiRead:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_spiWrite:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ??_spiWrite:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_ISR:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_spiReceiveWait:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??_spiReceiveWait:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     spiWrite@dat:	
   378                           ; 1 bytes @ 0x0
   379                           
   380                           
   381                           ; 1 bytes @ 0x0
   382  0070                     	ds	1
   383  0071                     ??_ISR:
   384                           
   385                           ; 1 bytes @ 0x1
   386  0071                     	ds	3
   387  0074                     ??_setup:
   388  0074                     ??_spiInit:	
   389                           ; 1 bytes @ 0x4
   390                           
   391  0074                     spiInit@sType:	
   392                           ; 1 bytes @ 0x4
   393                           
   394                           
   395                           ; 1 bytes @ 0x4
   396  0074                     	ds	1
   397  0075                     ??_main:
   398                           
   399                           	psect	cstackBANK0
   400  0020                     __pcstackBANK0:	
   401                           ; 1 bytes @ 0x5
   402                           
   403  0020                     ?_spiInit:
   404  0020                     spiInit@sDataSample:	
   405                           ; 1 bytes @ 0x0
   406                           
   407                           
   408                           ; 1 bytes @ 0x0
   409  0020                     	ds	1
   410  0021                     spiInit@sClockIdle:
   411                           
   412                           ; 1 bytes @ 0x1
   413  0021                     	ds	1
   414  0022                     spiInit@sTransmitEdge:
   415                           
   416                           ; 1 bytes @ 0x2
   417  0022                     	ds	1
   418                           
   419                           	psect	maintext
   420  0074                     __pmaintext:	
   421 ;;
   422 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   423 ;;
   424 ;; *************** function _main *****************
   425 ;; Defined at:
   426 ;;		line 55 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, pclath, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : B00/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   440 ;;      Params:         0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels required when called:    4
   446 ;; This function calls:
   447 ;;		_setup
   448 ;;		_spiInit
   449 ;; This function is called by:
   450 ;;		Startup code after reset
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _main
   456  0074                     _main:
   457  0074                     l787:	
   458                           ;incstack = 0
   459                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   460                           
   461                           
   462                           ;main.c: 56:     setup();
   463  0074  120A  118A  208E  120A  118A  	fcall	_setup
   464                           
   465                           ;main.c: 57:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   466  0079  1283               	bcf	3,5	;RP0=0, select bank0
   467  007A  1303               	bcf	3,6	;RP1=0, select bank0
   468  007B  01A0               	clrf	spiInit@sDataSample
   469  007C  01A1               	clrf	spiInit@sClockIdle
   470  007D  01A2               	clrf	spiInit@sTransmitEdge
   471  007E  3024               	movlw	36
   472  007F  120A  118A  2056  120A  118A  	fcall	_spiInit
   473  0084                     l789:
   474                           
   475                           ;main.c: 58:     count = 0;
   476  0084  01F7               	clrf	_count
   477  0085                     l791:
   478                           
   479                           ;main.c: 59:     flag = 0;
   480  0085  01F8               	clrf	_flag
   481  0086                     l793:
   482                           
   483                           ;main.c: 62:         PORTD = count;
   484  0086  0877               	movf	_count,w
   485  0087  1283               	bcf	3,5	;RP0=0, select bank0
   486  0088  1303               	bcf	3,6	;RP1=0, select bank0
   487  0089  0088               	movwf	8	;volatile
   488  008A  2886               	goto	l793
   489  008B  120A  118A  280C   	ljmp	start
   490  008E                     __end_of_main:
   491                           
   492                           	psect	text1
   493  0056                     __ptext1:	
   494 ;; *************** function _spiInit *****************
   495 ;; Defined at:
   496 ;;		line 13 in file "SPI.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  sType           1    wreg     enum E1264
   499 ;;  sDataSample     1    0[BANK0 ] enum E1272
   500 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   501 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   502 ;; Auto vars:     Size  Location     Type
   503 ;;  sType           1    4[COMMON] enum E1264
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       3       0       0       0
   514 ;;      Locals:         1       0       0       0       0
   515 ;;      Temps:          0       0       0       0       0
   516 ;;      Totals:         1       3       0       0       0
   517 ;;Total ram usage:        4 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    3
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _spiInit
   529  0056                     _spiInit:
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   533                           ;spiInit@sType stored from wreg
   534  0056  00F4               	movwf	spiInit@sType
   535  0057                     l777:
   536                           
   537                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   538  0057  1683               	bsf	3,5	;RP0=1, select bank1
   539  0058  1303               	bcf	3,6	;RP1=0, select bank1
   540  0059  1287               	bcf	7,5	;volatile
   541                           
   542                           ;SPI.c: 16:     if(sType & 0b00000100)
   543  005A  1D74               	btfss	spiInit@sType,2
   544  005B  285D               	goto	u91
   545  005C  285E               	goto	u90
   546  005D                     u91:
   547  005D  2866               	goto	l783
   548  005E                     u90:
   549  005E                     l779:
   550                           
   551                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   552  005E  1283               	bcf	3,5	;RP0=0, select bank0
   553  005F  1303               	bcf	3,6	;RP1=0, select bank0
   554  0060  0822               	movf	spiInit@sTransmitEdge,w
   555  0061  1683               	bsf	3,5	;RP0=1, select bank1
   556  0062  1303               	bcf	3,6	;RP1=0, select bank1
   557  0063  0094               	movwf	20	;volatile
   558  0064                     l781:
   559                           
   560                           ;SPI.c: 19:         TRISC3 = 1;
   561  0064  1587               	bsf	7,3	;volatile
   562                           
   563                           ;SPI.c: 20:     }
   564  0065  286E               	goto	l81
   565  0066                     l783:
   566                           
   567                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   568  0066  1283               	bcf	3,5	;RP0=0, select bank0
   569  0067  1303               	bcf	3,6	;RP1=0, select bank0
   570  0068  0820               	movf	spiInit@sDataSample,w
   571  0069  0422               	iorwf	spiInit@sTransmitEdge,w
   572  006A  1683               	bsf	3,5	;RP0=1, select bank1
   573  006B  1303               	bcf	3,6	;RP1=0, select bank1
   574  006C  0094               	movwf	20	;volatile
   575  006D                     l785:
   576                           
   577                           ;SPI.c: 24:         TRISC3 = 0;
   578  006D  1187               	bcf	7,3	;volatile
   579  006E                     l81:	
   580                           ;SPI.c: 25:     }
   581                           
   582                           
   583                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   584  006E  0874               	movf	spiInit@sType,w
   585  006F  1283               	bcf	3,5	;RP0=0, select bank0
   586  0070  1303               	bcf	3,6	;RP1=0, select bank0
   587  0071  0421               	iorwf	spiInit@sClockIdle,w
   588  0072  0094               	movwf	20	;volatile
   589  0073                     l82:
   590  0073  0008               	return
   591  0074                     __end_of_spiInit:
   592                           
   593                           	psect	text2
   594  008E                     __ptext2:	
   595 ;; *************** function _setup *****************
   596 ;; Defined at:
   597 ;;		line 73 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; Hardware stack levels required when called:    3
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _setup
   627  008E                     _setup:
   628  008E                     l693:	
   629                           ;incstack = 0
   630                           ; Regs used in _setup: [wreg+status,2]
   631                           
   632                           
   633                           ;main.c: 74:     TRISB = 0b11111111;
   634  008E  30FF               	movlw	255
   635  008F  1683               	bsf	3,5	;RP0=1, select bank1
   636  0090  1303               	bcf	3,6	;RP1=0, select bank1
   637  0091  0086               	movwf	6	;volatile
   638                           
   639                           ;main.c: 75:     TRISA = 0b11111111;
   640  0092  30FF               	movlw	255
   641  0093  0085               	movwf	5	;volatile
   642  0094                     l695:
   643                           
   644                           ;main.c: 76:     TRISD = 0b00000000;
   645  0094  0188               	clrf	8	;volatile
   646  0095                     l697:
   647                           
   648                           ;main.c: 77:     TRISC = 0b00011000;
   649  0095  3018               	movlw	24
   650  0096  0087               	movwf	7	;volatile
   651                           
   652                           ;main.c: 79:     PORTB = 0;
   653  0097  1283               	bcf	3,5	;RP0=0, select bank0
   654  0098  1303               	bcf	3,6	;RP1=0, select bank0
   655  0099  0186               	clrf	6	;volatile
   656  009A                     l699:
   657                           
   658                           ;main.c: 81:     IOCBbits.IOCB6 = 1;
   659  009A  1683               	bsf	3,5	;RP0=1, select bank1
   660  009B  1303               	bcf	3,6	;RP1=0, select bank1
   661  009C  1716               	bsf	22,6	;volatile
   662  009D                     l701:
   663                           
   664                           ;main.c: 82:     IOCBbits.IOCB7 = 1;
   665  009D  1796               	bsf	22,7	;volatile
   666  009E                     l703:
   667                           
   668                           ;main.c: 83:     SSPIF = 0;
   669  009E  1283               	bcf	3,5	;RP0=0, select bank0
   670  009F  1303               	bcf	3,6	;RP1=0, select bank0
   671  00A0  118C               	bcf	12,3	;volatile
   672  00A1                     l705:
   673                           
   674                           ;main.c: 84:     SSPIE = 1;
   675  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   676  00A2  1303               	bcf	3,6	;RP1=0, select bank1
   677  00A3  158C               	bsf	12,3	;volatile
   678  00A4                     l707:
   679                           
   680                           ;main.c: 85:     INTCON = 0b11101000;
   681  00A4  30E8               	movlw	232
   682  00A5  008B               	movwf	11	;volatile
   683  00A6                     l55:
   684  00A6  0008               	return
   685  00A7                     __end_of_setup:
   686                           
   687                           	psect	text3
   688  001C                     __ptext3:	
   689 ;; *************** function _ISR *****************
   690 ;; Defined at:
   691 ;;		line 93 in file "main.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0, pclath, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   705 ;;      Params:         0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0
   707 ;;      Temps:          3       0       0       0       0
   708 ;;      Totals:         3       0       0       0       0
   709 ;;Total ram usage:        3 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    2
   712 ;; This function calls:
   713 ;;		_spiRead
   714 ;;		_spiWrite
   715 ;; This function is called by:
   716 ;;		Interrupt level 1
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           
   721                           ;psect for function _ISR
   722  001C                     _ISR:
   723  001C                     i1l735:
   724                           
   725                           ;main.c: 94:     if (INTCONbits.RBIF == 1) {
   726  001C  1C0B               	btfss	11,0	;volatile
   727  001D  281F               	goto	u3_21
   728  001E  2820               	goto	u3_20
   729  001F                     u3_21:
   730  001F  2832               	goto	i1l745
   731  0020                     u3_20:
   732  0020                     i1l737:
   733                           
   734                           ;main.c: 95:         if (PORTBbits.RB6 == 0) {
   735  0020  1283               	bcf	3,5	;RP0=0, select bank0
   736  0021  1303               	bcf	3,6	;RP1=0, select bank0
   737  0022  1B06               	btfsc	6,6	;volatile
   738  0023  2825               	goto	u4_21
   739  0024  2826               	goto	u4_20
   740  0025                     u4_21:
   741  0025  282B               	goto	i1l61
   742  0026                     u4_20:
   743  0026                     i1l739:
   744                           
   745                           ;main.c: 96:             count++;
   746  0026  3001               	movlw	1
   747  0027  00F1               	movwf	??_ISR
   748  0028  0871               	movf	??_ISR,w
   749  0029  07F7               	addwf	_count,f
   750                           
   751                           ;main.c: 97:         } else if (PORTBbits.RB7 == 0) {
   752  002A  2831               	goto	i1l743
   753  002B                     i1l61:
   754  002B  1B86               	btfsc	6,7	;volatile
   755  002C  282E               	goto	u5_21
   756  002D  282F               	goto	u5_20
   757  002E                     u5_21:
   758  002E  2831               	goto	i1l743
   759  002F                     u5_20:
   760  002F                     i1l741:
   761                           
   762                           ;main.c: 98:             count--;
   763  002F  3001               	movlw	1
   764  0030  02F7               	subwf	_count,f
   765  0031                     i1l743:
   766                           
   767                           ;main.c: 100:         INTCONbits.RBIF = 0;
   768  0031  100B               	bcf	11,0	;volatile
   769  0032                     i1l745:
   770                           
   771                           ;main.c: 102:     if (PIR1bits.SSPIF == 1 && SSPSTATbits.BF == 1) {
   772  0032  1283               	bcf	3,5	;RP0=0, select bank0
   773  0033  1303               	bcf	3,6	;RP1=0, select bank0
   774  0034  1D8C               	btfss	12,3	;volatile
   775  0035  2837               	goto	u6_21
   776  0036  2838               	goto	u6_20
   777  0037                     u6_21:
   778  0037  284F               	goto	i1l65
   779  0038                     u6_20:
   780  0038                     i1l747:
   781  0038  1683               	bsf	3,5	;RP0=1, select bank1
   782  0039  1303               	bcf	3,6	;RP1=0, select bank1
   783  003A  1C14               	btfss	20,0	;volatile
   784  003B  283D               	goto	u7_21
   785  003C  283E               	goto	u7_20
   786  003D                     u7_21:
   787  003D  284F               	goto	i1l65
   788  003E                     u7_20:
   789  003E                     i1l749:
   790                           
   791                           ;main.c: 103:         count2 = spiRead();
   792  003E  120A  118A  20A7  120A  118A  	fcall	_spiRead
   793  0043  00F1               	movwf	??_ISR
   794  0044  0871               	movf	??_ISR,w
   795  0045  00F6               	movwf	_count2
   796                           
   797                           ;main.c: 104:         spiWrite(count);
   798  0046  0877               	movf	_count,w
   799  0047  120A  118A  20B7  120A  118A  	fcall	_spiWrite
   800  004C                     i1l751:
   801                           
   802                           ;main.c: 105:         PIR1bits.SSPIF = 0;
   803  004C  1283               	bcf	3,5	;RP0=0, select bank0
   804  004D  1303               	bcf	3,6	;RP1=0, select bank0
   805  004E  118C               	bcf	12,3	;volatile
   806  004F                     i1l65:
   807  004F  0873               	movf	??_ISR+2,w
   808  0050  008A               	movwf	10
   809  0051  0E72               	swapf	??_ISR+1,w
   810  0052  0083               	movwf	3
   811  0053  0EFE               	swapf	btemp,f
   812  0054  0E7E               	swapf	btemp,w
   813  0055  0009               	retfie
   814  0056                     __end_of_ISR:
   815                           
   816                           	psect	intentry
   817  0004                     __pintentry:	
   818                           ;incstack = 0
   819                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   820                           
   821  0004                     interrupt_function:
   822  007E                     saved_w	set	btemp
   823  0004  00FE               	movwf	btemp
   824  0005  0E03               	swapf	3,w
   825  0006  00F2               	movwf	??_ISR+1
   826  0007  080A               	movf	10,w
   827  0008  00F3               	movwf	??_ISR+2
   828  0009  120A  118A  281C   	ljmp	_ISR
   829                           
   830                           	psect	text4
   831  00B7                     __ptext4:	
   832 ;; *************** function _spiWrite *****************
   833 ;; Defined at:
   834 ;;		line 35 in file "SPI.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  dat             1    wreg     unsigned char 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  dat             1    0[COMMON] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         1       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0
   851 ;;      Totals:         1       0       0       0       0
   852 ;;Total ram usage:        1 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_ISR
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function _spiWrite
   863  00B7                     _spiWrite:
   864                           
   865                           ;incstack = 0
   866                           ; Regs used in _spiWrite: [wreg]
   867                           ;spiWrite@dat stored from wreg
   868  00B7  00F0               	movwf	spiWrite@dat
   869  00B8                     i1l725:
   870                           
   871                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   872  00B8  0870               	movf	spiWrite@dat,w
   873  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   874  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   875  00BB  0093               	movwf	19	;volatile
   876  00BC                     i1l91:
   877  00BC  0008               	return
   878  00BD                     __end_of_spiWrite:
   879                           
   880                           	psect	text5
   881  00A7                     __ptext5:	
   882 ;; *************** function _spiRead *****************
   883 ;; Defined at:
   884 ;;		line 48 in file "SPI.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      unsigned char 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0, pclath, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; Hardware stack levels required when called:    1
   905 ;; This function calls:
   906 ;;		_spiReceiveWait
   907 ;; This function is called by:
   908 ;;		_ISR
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           
   913                           ;psect for function _spiRead
   914  00A7                     _spiRead:
   915  00A7                     i1l719:	
   916                           ;incstack = 0
   917                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   918                           
   919                           
   920                           ;SPI.c: 50:     spiReceiveWait();
   921  00A7  120A  118A  20B0  120A  118A  	fcall	_spiReceiveWait
   922  00AC                     i1l721:
   923                           
   924                           ;SPI.c: 51:     return(SSPBUF);
   925  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   926  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   927  00AE  0813               	movf	19,w	;volatile
   928  00AF                     i1l99:
   929  00AF  0008               	return
   930  00B0                     __end_of_spiRead:
   931                           
   932                           	psect	text6
   933  00B0                     __ptext6:	
   934 ;; *************** function _spiReceiveWait *****************
   935 ;; Defined at:
   936 ;;		line 30 in file "SPI.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		None
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_spiRead
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _spiReceiveWait
   965  00B0                     _spiReceiveWait:
   966  00B0                     i1l691:	
   967                           ;incstack = 0
   968                           ; Regs used in _spiReceiveWait: []
   969                           
   970  00B0                     i1l85:	
   971                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
   972                           
   973  00B0  1683               	bsf	3,5	;RP0=1, select bank1
   974  00B1  1303               	bcf	3,6	;RP1=0, select bank1
   975  00B2  1C14               	btfss	20,0	;volatile
   976  00B3  28B5               	goto	u1_21
   977  00B4  28B6               	goto	u1_20
   978  00B5                     u1_21:
   979  00B5  28B0               	goto	i1l85
   980  00B6                     u1_20:
   981  00B6                     i1l88:
   982  00B6  0008               	return
   983  00B7                     __end_of_spiReceiveWait:
   984  007E                     btemp	set	126	;btemp
   985  007E                     wtemp0	set	126
   986                           
   987                           	psect	config
   988                           
   989                           ;Config register CONFIG1 @ 0x2007
   990                           ;	Oscillator Selection bits
   991                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
   992                           ;	Watchdog Timer Enable bit
   993                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   994                           ;	Power-up Timer Enable bit
   995                           ;	PWRTE = OFF, PWRT disabled
   996                           ;	RE3/MCLR pin function select bit
   997                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   998                           ;	Code Protection bit
   999                           ;	CP = OFF, Program memory code protection is disabled
  1000                           ;	Data Code Protection bit
  1001                           ;	CPD = OFF, Data memory code protection is disabled
  1002                           ;	Brown Out Reset Selection bits
  1003                           ;	BOREN = OFF, BOR disabled
  1004                           ;	Internal External Switchover bit
  1005                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1006                           ;	Fail-Safe Clock Monitor Enabled bit
  1007                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1008                           ;	Low Voltage Programming Enable bit
  1009                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1010                           ;	In-Circuit Debugger Mode bit
  1011                           ;	DEBUG = 0x1, unprogrammed default
  1012  2007                     	org	8199
  1013  2007  20D5               	dw	8405
  1014                           
  1015                           ;Config register CONFIG2 @ 0x2008
  1016                           ;	Brown-out Reset Selection bit
  1017                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1018                           ;	Flash Program Memory Self Write Enable bits
  1019                           ;	WRT = OFF, Write protection off
  1020  2008                     	org	8200
  1021  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       3       5        3.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 20:23:11 2021

            _SSPSTATbits 0094                       l55 00A6                       l81 006E  
                     l82 0073                       u90 005E                       u91 005D  
                    l701 009D                      l703 009E                      l705 00A1  
                    l707 00A4                      l693 008E                      l781 0064  
                    l695 0094                      l783 0066                      l791 0085  
                    l697 0095                      l785 006D                      l777 0057  
                    l793 0086                      l699 009A                      l779 005E  
                    l787 0074                      l789 0084                      _ISR 001C  
                   ?_ISR 0070                     i1l61 002B                     i1l65 004F  
                   i1l91 00BC                     i1l85 00B0                     i1l88 00B6  
                   i1l99 00AF                     u1_20 00B6                     u1_21 00B5  
                   u3_20 0020                     u3_21 001F                     u4_20 0026  
                   u4_21 0025                     u5_20 002F                     u5_21 002E  
                   u6_20 0038                     u6_21 0037                     u7_20 003E  
                   u7_21 003D                     _flag 0078                     _main 0074  
                   btemp 007E                     start 000C                    ??_ISR 0071  
                  ?_main 0070                    i1l721 00AC                    i1l725 00B8  
                  i1l741 002F                    i1l719 00A7                    i1l751 004C  
                  i1l743 0031                    i1l735 001C                    i1l737 0020  
                  i1l745 0032                    i1l691 00B0                    i1l747 0038  
                  i1l739 0026                    i1l749 003E                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _SSPIE 0463  
                  _SSPIF 0063                    _count 0077                    _setup 008E  
                  pclath 000A          __end_of_spiInit 0074          __end_of_spiRead 00B0  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 008E                   ??_main 0075                   ?_setup 0070  
                 _INTCON 000B                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   _count2 0076  
           __pdataCOMMON 0078                   saved_w 007E         __end_of_spiWrite 00BD  
              ??_spiInit 0074                ??_spiRead 0070  __end_of__initialization 0018  
         __pcstackCOMMON 0070            __end_of_setup 00A7                  ??_setup 0074  
             __pmaintext 0074               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0056  
                __ptext2 008E                  __ptext3 001C                  __ptext4 00B7  
                __ptext5 00A7                  __ptext6 00B0             __size_of_ISR 003A  
                _spiInit 0056                  _spiRead 00A7     end_of_initialization 0018  
             ??_spiWrite 0070                _PORTBbits 0006              spiWrite@dat 0070  
         _spiReceiveWait 00B0            __pidataCOMMON 00BD      start_initialization 000F  
            __end_of_ISR 0056   __end_of_spiReceiveWait 00B7              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0020                 ?_spiRead 0070  
         __size_of_setup 0019     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _IOCBbits 0096       spiInit@sDataSample 0020                 _PIR1bits 000C  
              _valor_MSB 0075         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 001A                 _spiWrite 00B7             spiInit@sType 0074  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070  
