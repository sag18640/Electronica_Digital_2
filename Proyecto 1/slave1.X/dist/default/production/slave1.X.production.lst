

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 00:55:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368                           
   369                           	psect	idataCOMMON
   370  00BE                     __pidataCOMMON:
   371                           
   372                           ;initializer for _flag
   373  00BE  3401               	retlw	1
   374  0013                     _SSPBUF	set	19
   375  0014                     _SSPCON	set	20
   376  001F                     _ADCON0bits	set	31
   377  001F                     _ADCON0	set	31
   378  000B                     _INTCON	set	11
   379  001E                     _ADRESH	set	30
   380  000C                     _PIR1bits	set	12
   381  0005                     _PORTA	set	5
   382  0009                     _PORTE	set	9
   383  0008                     _PORTD	set	8
   384  0007                     _PORTC	set	7
   385  0006                     _PORTB	set	6
   386  0063                     _SSPIF	set	99
   387  0094                     _SSPSTATbits	set	148
   388  0094                     _SSPSTAT	set	148
   389  008C                     _PIE1bits	set	140
   390  0085                     _TRISAbits	set	133
   391  0086                     _TRISB	set	134
   392  0087                     _TRISC	set	135
   393  0088                     _TRISD	set	136
   394  0463                     _SSPIE	set	1123
   395  0188                     _ANSEL	set	392
   396                           
   397                           	psect	cinit
   398  000F                     start_initialization:	
   399                           ; #config settings
   400                           
   401  000F                     __initialization:
   402                           
   403                           ; Initialize objects allocated to COMMON
   404  000F  120A  118A  20BE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   405  0014  00F9               	movwf	__pdataCOMMON& (0+127)
   406                           
   407                           ; Clear objects allocated to COMMON
   408  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   409  0016  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   410  0017                     end_of_initialization:	
   411                           ;End of C runtime variable initialization code
   412                           
   413  0017                     __end_of__initialization:
   414  0017  0183               	clrf	3
   415  0018  120A  118A  2862   	ljmp	_main	;jump to C main() function
   416                           
   417                           	psect	bssCOMMON
   418  0077                     __pbssCOMMON:
   419  0077                     _valor_MSB:
   420  0077                     	ds	1
   421  0078                     _count:
   422  0078                     	ds	1
   423                           
   424                           	psect	dataCOMMON
   425  0079                     __pdataCOMMON:
   426  0079                     _flag:
   427  0079                     	ds	1
   428                           
   429                           	psect	cstackCOMMON
   430  0070                     __pcstackCOMMON:
   431  0070                     ?_setup:
   432  0070                     ?_ADC_con:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_spiRead:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ??_spiRead:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_spiWrite:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ??_spiWrite:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_main:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_ISR:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_spiReceiveWait:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ??_spiReceiveWait:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     spiWrite@dat:	
   460                           ; 1 bytes @ 0x0
   461                           
   462                           
   463                           ; 1 bytes @ 0x0
   464  0070                     	ds	1
   465  0071                     ??_ISR:
   466                           
   467                           ; 1 bytes @ 0x1
   468  0071                     	ds	3
   469  0074                     ??_setup:
   470  0074                     ?_spiInit:	
   471                           ; 1 bytes @ 0x4
   472                           
   473  0074                     ??_ADC_con:	
   474                           ; 1 bytes @ 0x4
   475                           
   476  0074                     spiInit@sDataSample:	
   477                           ; 1 bytes @ 0x4
   478                           
   479                           
   480                           ; 1 bytes @ 0x4
   481  0074                     	ds	1
   482  0075                     ADC_con@flag:
   483  0075                     spiInit@sClockIdle:	
   484                           ; 1 bytes @ 0x5
   485                           
   486                           
   487                           ; 1 bytes @ 0x5
   488  0075                     	ds	1
   489  0076                     spiInit@sTransmitEdge:
   490                           
   491                           ; 1 bytes @ 0x6
   492  0076                     	ds	1
   493  0077                     ??_spiInit:
   494  0077                     ??_main:	
   495                           ; 1 bytes @ 0x7
   496                           
   497                           
   498                           	psect	cstackBANK0
   499  0020                     __pcstackBANK0:	
   500                           ; 1 bytes @ 0x7
   501                           
   502  0020                     spiInit@sType:
   503                           
   504                           ; 1 bytes @ 0x0
   505  0020                     	ds	1
   506                           
   507                           	psect	maintext
   508  0062                     __pmaintext:	
   509 ;;
   510 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   511 ;;
   512 ;; *************** function _main *****************
   513 ;; Defined at:
   514 ;;		line 55 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0, pclath, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : B00/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels required when called:    4
   534 ;; This function calls:
   535 ;;		_ADC_con
   536 ;;		_setup
   537 ;;		_spiInit
   538 ;; This function is called by:
   539 ;;		Startup code after reset
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           
   544                           ;psect for function _main
   545  0062                     _main:
   546  0062                     l794:	
   547                           ;incstack = 0
   548                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   549                           
   550                           
   551                           ;main.c: 56:     setup();
   552  0062  120A  118A  2094  120A  118A  	fcall	_setup
   553  0067                     l796:
   554                           
   555                           ;main.c: 57:     count = 0;
   556  0067  01F8               	clrf	_count
   557  0068                     l798:
   558                           
   559                           ;main.c: 58:     flag = 1;
   560  0068  01F9               	clrf	_flag
   561  0069  0AF9               	incf	_flag,f
   562  006A                     l800:
   563                           
   564                           ;main.c: 59:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   565  006A  01F4               	clrf	spiInit@sDataSample
   566  006B  01F5               	clrf	spiInit@sClockIdle
   567  006C  01F6               	clrf	spiInit@sTransmitEdge
   568  006D  3024               	movlw	36
   569  006E  120A  118A  207D  120A  118A  	fcall	_spiInit
   570  0073                     l802:
   571                           
   572                           ;main.c: 61:         ADC_con(flag);
   573  0073  0879               	movf	_flag,w
   574  0074  120A  118A  2044  120A  118A  	fcall	_ADC_con
   575  0079  2873               	goto	l802
   576  007A  120A  118A  280C   	ljmp	start
   577  007D                     __end_of_main:
   578                           
   579                           	psect	text1
   580  007D                     __ptext1:	
   581 ;; *************** function _spiInit *****************
   582 ;; Defined at:
   583 ;;		line 13 in file "SPI.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  sType           1    wreg     enum E1264
   586 ;;  sDataSample     1    4[COMMON] enum E1272
   587 ;;  sClockIdle      1    5[COMMON] enum E1276
   588 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  sType           1    0[BANK0 ] enum E1264
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         3       0       0       0       0
   601 ;;      Locals:         0       1       0       0       0
   602 ;;      Temps:          0       0       0       0       0
   603 ;;      Totals:         3       1       0       0       0
   604 ;;Total ram usage:        4 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    3
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           
   615                           ;psect for function _spiInit
   616  007D                     _spiInit:
   617                           
   618                           ;incstack = 0
   619                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   620                           ;spiInit@sType stored from wreg
   621  007D  1283               	bcf	3,5	;RP0=0, select bank0
   622  007E  1303               	bcf	3,6	;RP1=0, select bank0
   623  007F  00A0               	movwf	spiInit@sType
   624  0080                     l788:
   625                           
   626                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 16:     if(sType & 0b00000
      +                          100)
   627  0080  1D20               	btfss	spiInit@sType,2
   628  0081  2883               	goto	u71
   629  0082  2884               	goto	u70
   630  0083                     u71:
   631  0083  2889               	goto	l792
   632  0084                     u70:
   633  0084                     l790:
   634                           
   635                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   636  0084  0876               	movf	spiInit@sTransmitEdge,w
   637  0085  1683               	bsf	3,5	;RP0=1, select bank1
   638  0086  1303               	bcf	3,6	;RP1=0, select bank1
   639  0087  0094               	movwf	20	;volatile
   640                           
   641                           ;SPI.c: 20:     }
   642  0088  288E               	goto	l90
   643  0089                     l792:
   644                           
   645                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   646  0089  0874               	movf	spiInit@sDataSample,w
   647  008A  0476               	iorwf	spiInit@sTransmitEdge,w
   648  008B  1683               	bsf	3,5	;RP0=1, select bank1
   649  008C  1303               	bcf	3,6	;RP1=0, select bank1
   650  008D  0094               	movwf	20	;volatile
   651  008E                     l90:	
   652                           ;SPI.c: 25:     }
   653                           
   654                           
   655                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   656  008E  1283               	bcf	3,5	;RP0=0, select bank0
   657  008F  1303               	bcf	3,6	;RP1=0, select bank0
   658  0090  0820               	movf	spiInit@sType,w
   659  0091  0475               	iorwf	spiInit@sClockIdle,w
   660  0092  0094               	movwf	20	;volatile
   661  0093                     l91:
   662  0093  0008               	return
   663  0094                     __end_of_spiInit:
   664                           
   665                           	psect	text2
   666  0094                     __ptext2:	
   667 ;; *************** function _setup *****************
   668 ;; Defined at:
   669 ;;		line 72 in file "main.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, status,2
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0
   686 ;;      Totals:         0       0       0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    3
   690 ;; This function calls:
   691 ;;		Nothing
   692 ;; This function is called by:
   693 ;;		_main
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _setup
   699  0094                     _setup:
   700  0094                     l702:	
   701                           ;incstack = 0
   702                           ; Regs used in _setup: [wreg+status,2]
   703                           
   704                           
   705                           ;main.c: 73:     TRISD = 0b00000000;
   706  0094  1683               	bsf	3,5	;RP0=1, select bank1
   707  0095  1303               	bcf	3,6	;RP1=0, select bank1
   708  0096  0188               	clrf	8	;volatile
   709  0097                     l704:
   710                           
   711                           ;main.c: 74:     TRISC = 0b00011000;
   712  0097  3018               	movlw	24
   713  0098  0087               	movwf	7	;volatile
   714  0099                     l706:
   715                           
   716                           ;main.c: 75:     TRISB = 0b11111110;
   717  0099  30FE               	movlw	254
   718  009A  0086               	movwf	6	;volatile
   719  009B                     l708:
   720                           
   721                           ;main.c: 76:     TRISAbits.TRISA5 = 1;
   722  009B  1685               	bsf	5,5	;volatile
   723                           
   724                           ;main.c: 77:     PORTB = 0;
   725  009C  1283               	bcf	3,5	;RP0=0, select bank0
   726  009D  1303               	bcf	3,6	;RP1=0, select bank0
   727  009E  0186               	clrf	6	;volatile
   728                           
   729                           ;main.c: 78:     PORTC = 0;
   730  009F  0187               	clrf	7	;volatile
   731                           
   732                           ;main.c: 79:     PORTD = 0;
   733  00A0  0188               	clrf	8	;volatile
   734                           
   735                           ;main.c: 80:     PORTE = 0;
   736  00A1  0189               	clrf	9	;volatile
   737                           
   738                           ;main.c: 81:     PORTA = 0;
   739  00A2  0185               	clrf	5	;volatile
   740  00A3                     l710:
   741                           
   742                           ;main.c: 82:     SSPIF = 0;
   743  00A3  118C               	bcf	12,3	;volatile
   744  00A4                     l712:
   745                           
   746                           ;main.c: 83:     SSPIE = 1;
   747  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   748  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   749  00A6  158C               	bsf	12,3	;volatile
   750  00A7                     l53:
   751  00A7  0008               	return
   752  00A8                     __end_of_setup:
   753                           
   754                           	psect	text3
   755  0044                     __ptext3:	
   756 ;; *************** function _ADC_con *****************
   757 ;; Defined at:
   758 ;;		line 13 in file "ADC.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  flag            1    wreg     unsigned char 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  flag            1    5[COMMON] unsigned char 
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2, status,0
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         1       0       0       0       0
   774 ;;      Temps:          1       0       0       0       0
   775 ;;      Totals:         2       0       0       0       0
   776 ;;Total ram usage:        2 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    3
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _ADC_con
   788  0044                     _ADC_con:
   789                           
   790                           ;incstack = 0
   791                           ; Regs used in _ADC_con: [wreg+status,2+status,0]
   792                           ;ADC_con@flag stored from wreg
   793  0044  00F5               	movwf	ADC_con@flag
   794  0045                     l720:
   795                           
   796                           ;ADC.c: 15:     ANSEL = 0b00000001;
   797  0045  3001               	movlw	1
   798  0046  1683               	bsf	3,5	;RP0=1, select bank3
   799  0047  1703               	bsf	3,6	;RP1=1, select bank3
   800  0048  0088               	movwf	8	;volatile
   801                           
   802                           ;ADC.c: 16:     INTCON = 0b11101000;
   803  0049  30E8               	movlw	232
   804  004A  008B               	movwf	11	;volatile
   805                           
   806                           ;ADC.c: 17:     ADCON0 = 0b01000001;
   807  004B  3041               	movlw	65
   808  004C  1283               	bcf	3,5	;RP0=0, select bank0
   809  004D  1303               	bcf	3,6	;RP1=0, select bank0
   810  004E  009F               	movwf	31	;volatile
   811  004F                     l722:
   812                           
   813                           ;ADC.c: 19:     PIE1bits.ADIE = 1;
   814  004F  1683               	bsf	3,5	;RP0=1, select bank1
   815  0050  1303               	bcf	3,6	;RP1=0, select bank1
   816  0051  170C               	bsf	12,6	;volatile
   817  0052                     l724:
   818                           
   819                           ;ADC.c: 20:     PIR1bits.ADIF = 0;
   820  0052  1283               	bcf	3,5	;RP0=0, select bank0
   821  0053  1303               	bcf	3,6	;RP1=0, select bank0
   822  0054  130C               	bcf	12,6	;volatile
   823  0055                     l726:
   824                           
   825                           ;ADC.c: 21:     if (flag == 1) {
   826  0055  0375               	decf	ADC_con@flag,w
   827  0056  1D03               	btfss	3,2
   828  0057  2859               	goto	u31
   829  0058  285A               	goto	u30
   830  0059                     u31:
   831  0059  2861               	goto	l78
   832  005A                     u30:
   833  005A                     l728:
   834                           
   835                           ;ADC.c: 22:         _delay((unsigned long)((20)*(8000000/4000000.0)));
   836  005A  300D               	movlw	13
   837  005B  00F4               	movwf	??_ADC_con
   838  005C                     u87:
   839  005C  0BF4               	decfsz	??_ADC_con,f
   840  005D  285C               	goto	u87
   841  005E                     l730:
   842                           
   843                           ;ADC.c: 23:         ADCON0bits.GO = 1;
   844  005E  1283               	bcf	3,5	;RP0=0, select bank0
   845  005F  1303               	bcf	3,6	;RP1=0, select bank0
   846  0060  149F               	bsf	31,1	;volatile
   847  0061                     l732:
   848  0061                     l78:
   849  0061  0008               	return
   850  0062                     __end_of_ADC_con:
   851                           
   852                           	psect	text4
   853  001B                     __ptext4:	
   854 ;; *************** function _ISR *****************
   855 ;; Defined at:
   856 ;;		line 91 in file "main.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0, pclath, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0
   872 ;;      Temps:          3       0       0       0       0
   873 ;;      Totals:         3       0       0       0       0
   874 ;;Total ram usage:        3 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; Hardware stack levels required when called:    2
   877 ;; This function calls:
   878 ;;		_spiRead
   879 ;;		_spiWrite
   880 ;; This function is called by:
   881 ;;		Interrupt level 1
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           
   886                           ;psect for function _ISR
   887  001B                     _ISR:
   888  001B                     i1l752:
   889                           
   890                           ;main.c: 92:     if (PIR1bits.ADIF == 1) {
   891  001B  1283               	bcf	3,5	;RP0=0, select bank0
   892  001C  1303               	bcf	3,6	;RP1=0, select bank0
   893  001D  1F0C               	btfss	12,6	;volatile
   894  001E  2820               	goto	u4_21
   895  001F  2821               	goto	u4_20
   896  0020                     u4_21:
   897  0020  2828               	goto	i1l760
   898  0021                     u4_20:
   899  0021                     i1l754:
   900                           
   901                           ;main.c: 93:         flag = 1;
   902  0021  01F9               	clrf	_flag
   903  0022  0AF9               	incf	_flag,f
   904  0023                     i1l756:
   905                           
   906                           ;main.c: 94:         valor_MSB = ADRESH;
   907  0023  081E               	movf	30,w	;volatile
   908  0024  00F1               	movwf	??_ISR
   909  0025  0871               	movf	??_ISR,w
   910  0026  00F7               	movwf	_valor_MSB
   911  0027                     i1l758:
   912                           
   913                           ;main.c: 95:         PIR1bits.ADIF = 0;
   914  0027  130C               	bcf	12,6	;volatile
   915  0028                     i1l760:
   916                           
   917                           ;main.c: 97:     if (SSPIF == 1) {
   918  0028  1D8C               	btfss	12,3	;volatile
   919  0029  282B               	goto	u5_21
   920  002A  282C               	goto	u5_20
   921  002B                     u5_21:
   922  002B  283D               	goto	i1l60
   923  002C                     u5_20:
   924  002C                     i1l762:
   925                           
   926                           ;main.c: 98:         count = spiRead();
   927  002C  120A  118A  20A8  120A  118A  	fcall	_spiRead
   928  0031  00F1               	movwf	??_ISR
   929  0032  0871               	movf	??_ISR,w
   930  0033  00F8               	movwf	_count
   931                           
   932                           ;main.c: 99:         spiWrite(valor_MSB);
   933  0034  0877               	movf	_valor_MSB,w
   934  0035  120A  118A  20B8  120A  118A  	fcall	_spiWrite
   935  003A                     i1l764:
   936                           
   937                           ;main.c: 100:         SSPIF = 0;
   938  003A  1283               	bcf	3,5	;RP0=0, select bank0
   939  003B  1303               	bcf	3,6	;RP1=0, select bank0
   940  003C  118C               	bcf	12,3	;volatile
   941  003D                     i1l60:
   942  003D  0873               	movf	??_ISR+2,w
   943  003E  008A               	movwf	10
   944  003F  0E72               	swapf	??_ISR+1,w
   945  0040  0083               	movwf	3
   946  0041  0EFE               	swapf	btemp,f
   947  0042  0E7E               	swapf	btemp,w
   948  0043  0009               	retfie
   949  0044                     __end_of_ISR:
   950                           
   951                           	psect	intentry
   952  0004                     __pintentry:	
   953                           ;incstack = 0
   954                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   955                           
   956  0004                     interrupt_function:
   957  007E                     saved_w	set	btemp
   958  0004  00FE               	movwf	btemp
   959  0005  0E03               	swapf	3,w
   960  0006  00F2               	movwf	??_ISR+1
   961  0007  080A               	movf	10,w
   962  0008  00F3               	movwf	??_ISR+2
   963  0009  120A  118A  281B   	ljmp	_ISR
   964                           
   965                           	psect	text5
   966  00B8                     __ptext5:	
   967 ;; *************** function _spiWrite *****************
   968 ;; Defined at:
   969 ;;		line 35 in file "SPI.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  dat             1    wreg     unsigned char 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  dat             1    0[COMMON] unsigned char 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         1       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         1       0       0       0       0
   987 ;;Total ram usage:        1 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_ISR
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _spiWrite
   998  00B8                     _spiWrite:
   999                           
  1000                           ;incstack = 0
  1001                           ; Regs used in _spiWrite: [wreg]
  1002                           ;spiWrite@dat stored from wreg
  1003  00B8  00F0               	movwf	spiWrite@dat
  1004  00B9                     i1l740:
  1005                           
  1006                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1007  00B9  0870               	movf	spiWrite@dat,w
  1008  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1009  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1010  00BC  0093               	movwf	19	;volatile
  1011  00BD                     i1l100:
  1012  00BD  0008               	return
  1013  00BE                     __end_of_spiWrite:
  1014                           
  1015                           	psect	text6
  1016  00A8                     __ptext6:	
  1017 ;; *************** function _spiRead *****************
  1018 ;; Defined at:
  1019 ;;		line 48 in file "SPI.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      unsigned char 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0, pclath, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    1
  1040 ;; This function calls:
  1041 ;;		_spiReceiveWait
  1042 ;; This function is called by:
  1043 ;;		_ISR
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function _spiRead
  1049  00A8                     _spiRead:
  1050  00A8                     i1l734:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1053                           
  1054                           
  1055                           ;SPI.c: 50:     spiReceiveWait();
  1056  00A8  120A  118A  20B1  120A  118A  	fcall	_spiReceiveWait
  1057  00AD                     i1l736:
  1058                           
  1059                           ;SPI.c: 51:     return(SSPBUF);
  1060  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1061  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1062  00AF  0813               	movf	19,w	;volatile
  1063  00B0                     i1l108:
  1064  00B0  0008               	return
  1065  00B1                     __end_of_spiRead:
  1066                           
  1067                           	psect	text7
  1068  00B1                     __ptext7:	
  1069 ;; *************** function _spiReceiveWait *****************
  1070 ;; Defined at:
  1071 ;;		line 30 in file "SPI.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		None
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         0       0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0
  1088 ;;      Totals:         0       0       0       0       0
  1089 ;;Total ram usage:        0 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_spiRead
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _spiReceiveWait
  1100  00B1                     _spiReceiveWait:
  1101  00B1                     i1l700:	
  1102                           ;incstack = 0
  1103                           ; Regs used in _spiReceiveWait: []
  1104                           
  1105  00B1                     i1l94:	
  1106                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  1107                           
  1108  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  1109  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  1110  00B3  1C14               	btfss	20,0	;volatile
  1111  00B4  28B6               	goto	u1_21
  1112  00B5  28B7               	goto	u1_20
  1113  00B6                     u1_21:
  1114  00B6  28B1               	goto	i1l94
  1115  00B7                     u1_20:
  1116  00B7                     i1l97:
  1117  00B7  0008               	return
  1118  00B8                     __end_of_spiReceiveWait:
  1119  007E                     btemp	set	126	;btemp
  1120  007E                     wtemp0	set	126
  1121                           
  1122                           	psect	config
  1123                           
  1124                           ;Config register CONFIG1 @ 0x2007
  1125                           ;	Oscillator Selection bits
  1126                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1127                           ;	Watchdog Timer Enable bit
  1128                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1129                           ;	Power-up Timer Enable bit
  1130                           ;	PWRTE = OFF, PWRT disabled
  1131                           ;	RE3/MCLR pin function select bit
  1132                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1133                           ;	Code Protection bit
  1134                           ;	CP = OFF, Program memory code protection is disabled
  1135                           ;	Data Code Protection bit
  1136                           ;	CPD = OFF, Data memory code protection is disabled
  1137                           ;	Brown Out Reset Selection bits
  1138                           ;	BOREN = OFF, BOR disabled
  1139                           ;	Internal External Switchover bit
  1140                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1141                           ;	Fail-Safe Clock Monitor Enabled bit
  1142                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1143                           ;	Low Voltage Programming Enable bit
  1144                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1145                           ;	In-Circuit Debugger Mode bit
  1146                           ;	DEBUG = 0x1, unprogrammed default
  1147  2007                     	org	8199
  1148  2007  20D5               	dw	8405
  1149                           
  1150                           ;Config register CONFIG2 @ 0x2008
  1151                           ;	Brown-out Reset Selection bit
  1152                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1153                           ;	Flash Program Memory Self Write Enable bits
  1154                           ;	WRT = OFF, Write protection off
  1155  2008                     	org	8200
  1156  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     471
                            _ADC_con
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_con                                              2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_con
   _setup
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1       1       5        1.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 00:55:28 2021

            _SSPSTATbits 0094                       l53 00A7                       l90 008E  
                     l91 0093                       l78 0061                       u30 005A  
                     u31 0059                       u70 0084                       u71 0083  
                     u87 005C                      l710 00A3                      l702 0094  
                    l720 0045                      l712 00A4                      l704 0097  
                    l800 006A                      l730 005E                      l722 004F  
                    l706 0099                      l802 0073                      l732 0061  
                    l724 0052                      l708 009B                      l726 0055  
                    l728 005A                      l790 0084                      l792 0089  
                    l794 0062                      l788 0080                      l796 0067  
                    l798 0068                      _ISR 001B          __end_of_ADC_con 0062  
                   ?_ISR 0070                     i1l60 003D                     i1l94 00B1  
                   i1l97 00B7                     u1_20 00B7                     u1_21 00B6  
                   u4_20 0021                     u4_21 0020                     u5_20 002C  
                   u5_21 002B                     _flag 0079                     _main 0062  
                   btemp 007E                     start 000C                    ??_ISR 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l100 00BD  
                  i1l108 00B0                    i1l700 00B1                    i1l740 00B9  
                  i1l734 00A8                    i1l736 00AD                    i1l760 0028  
                  i1l752 001B                    i1l762 002C                    i1l754 0021  
                  i1l764 003A                    i1l756 0023                    i1l758 0027  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _SSPIE 0463  
                  _SSPIF 0063                    _count 0078                    _setup 0094  
                  pclath 000A          __end_of_spiInit 0094          __end_of_spiRead 00B1  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 007D                ??_ADC_con 0074                   ??_main 0077  
                 _ADCON0 001F                   _ADRESH 001E                   ?_setup 0070  
                 _INTCON 000B                   _SSPCON 0014                   _SSPBUF 0013  
           __pdataCOMMON 0079                   saved_w 007E         __end_of_spiWrite 00BE  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0017  
         __pcstackCOMMON 0070            __end_of_setup 00A8                  ??_setup 0074  
             __pmaintext 0062               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _ADC_con 0044                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 007D                  __ptext2 0094                  __ptext3 0044  
                __ptext4 001B                  __ptext5 00B8                  __ptext6 00A8  
                __ptext7 00B1             __size_of_ISR 0029                  _spiInit 007D  
                _spiRead 00A8     end_of_initialization 0017               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070           _spiReceiveWait 00B1  
          __pidataCOMMON 00BE      start_initialization 000F              __end_of_ISR 0044  
 __end_of_spiReceiveWait 00B8                 ?_ADC_con 0070              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0074                 ?_spiRead 0070  
         __size_of_setup 0014     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
              _valor_MSB 0077              ADC_con@flag 0075               _ADCON0bits 001F  
       __size_of_ADC_con 001E         __size_of_spiInit 0017         __size_of_spiRead 0009  
          __size_of_main 001B                 _spiWrite 00B8             spiInit@sType 0020  
      spiInit@sClockIdle 0075                 intlevel1 0000         ??_spiReceiveWait 0070  
