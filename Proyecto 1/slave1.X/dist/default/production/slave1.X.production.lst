

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 22:21:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368                           
   369                           	psect	idataCOMMON
   370  00CC                     __pidataCOMMON:
   371                           
   372                           ;initializer for _flag
   373  00CC  3401               	retlw	1
   374  0013                     _SSPBUF	set	19
   375  0014                     _SSPCON	set	20
   376  001F                     _ADCON0bits	set	31
   377  001F                     _ADCON0	set	31
   378  001E                     _ADRESH	set	30
   379  000C                     _PIR1bits	set	12
   380  000B                     _INTCON	set	11
   381  0009                     _PORTE	set	9
   382  0008                     _PORTD	set	8
   383  0007                     _PORTC	set	7
   384  0006                     _PORTB	set	6
   385  0063                     _SSPIF	set	99
   386  0094                     _SSPSTAT	set	148
   387  008C                     _PIE1bits	set	140
   388  0094                     _SSPSTATbits	set	148
   389  0086                     _TRISB	set	134
   390  0087                     _TRISC	set	135
   391  0088                     _TRISD	set	136
   392  0085                     _TRISAbits	set	133
   393  043B                     _TRISC3	set	1083
   394  043D                     _TRISC5	set	1085
   395  0463                     _SSPIE	set	1123
   396  0188                     _ANSEL	set	392
   397                           
   398                           	psect	cinit
   399  000F                     start_initialization:	
   400                           ; #config settings
   401                           
   402  000F                     __initialization:
   403                           
   404                           ; Initialize objects allocated to COMMON
   405  000F  120A  118A  20CC  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   406  0014  00F9               	movwf	__pdataCOMMON& (0+127)
   407                           
   408                           ; Clear objects allocated to COMMON
   409  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   410  0016  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   411  0017                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414  0017                     __end_of__initialization:
   415  0017  0183               	clrf	3
   416  0018  120A  118A  2886   	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMMON
   419  0077                     __pbssCOMMON:
   420  0077                     _valor_MSB:
   421  0077                     	ds	1
   422  0078                     _count:
   423  0078                     	ds	1
   424                           
   425                           	psect	dataCOMMON
   426  0079                     __pdataCOMMON:
   427  0079                     _flag:
   428  0079                     	ds	1
   429                           
   430                           	psect	cstackCOMMON
   431  0070                     __pcstackCOMMON:
   432  0070                     ?_setup:
   433  0070                     ?_ADC_con:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_spiRead:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_spiRead:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_spiWrite:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ??_spiWrite:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_main:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_ISR:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_spiReceiveWait:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ??_spiReceiveWait:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     spiWrite@dat:	
   461                           ; 1 bytes @ 0x0
   462                           
   463                           
   464                           ; 1 bytes @ 0x0
   465  0070                     	ds	1
   466  0071                     ??_ISR:
   467                           
   468                           ; 1 bytes @ 0x1
   469  0071                     	ds	3
   470  0074                     ??_setup:
   471  0074                     ?_spiInit:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     ??_ADC_con:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0074                     spiInit@sDataSample:	
   478                           ; 1 bytes @ 0x4
   479                           
   480                           
   481                           ; 1 bytes @ 0x4
   482  0074                     	ds	1
   483  0075                     ADC_con@flag:
   484  0075                     spiInit@sClockIdle:	
   485                           ; 1 bytes @ 0x5
   486                           
   487                           
   488                           ; 1 bytes @ 0x5
   489  0075                     	ds	1
   490  0076                     spiInit@sTransmitEdge:
   491                           
   492                           ; 1 bytes @ 0x6
   493  0076                     	ds	1
   494  0077                     ??_spiInit:
   495  0077                     ??_main:	
   496                           ; 1 bytes @ 0x7
   497                           
   498                           
   499                           	psect	cstackBANK0
   500  0020                     __pcstackBANK0:	
   501                           ; 1 bytes @ 0x7
   502                           
   503  0020                     spiInit@sType:
   504                           
   505                           ; 1 bytes @ 0x0
   506  0020                     	ds	1
   507                           
   508                           	psect	maintext
   509  0086                     __pmaintext:	
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 55 in file "main.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0, pclath, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : B00/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0
   532 ;;      Totals:         0       0       0       0       0
   533 ;;Total ram usage:        0 bytes
   534 ;; Hardware stack levels required when called:    4
   535 ;; This function calls:
   536 ;;		_ADC_con
   537 ;;		_setup
   538 ;;		_spiInit
   539 ;; This function is called by:
   540 ;;		Startup code after reset
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function _main
   546  0086                     _main:
   547  0086                     l816:	
   548                           ;incstack = 0
   549                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   550                           
   551                           
   552                           ;main.c: 56:     setup();
   553  0086  120A  118A  20A1  120A  118A  	fcall	_setup
   554  008B                     l818:
   555                           
   556                           ;main.c: 57:     count = 0;
   557  008B  01F8               	clrf	_count
   558  008C                     l820:
   559                           
   560                           ;main.c: 58:     flag = 1;
   561  008C  01F9               	clrf	_flag
   562  008D  0AF9               	incf	_flag,f
   563  008E                     l822:
   564                           
   565                           ;main.c: 59:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   566  008E  01F4               	clrf	spiInit@sDataSample
   567  008F  01F5               	clrf	spiInit@sClockIdle
   568  0090  01F6               	clrf	spiInit@sTransmitEdge
   569  0091  3024               	movlw	36
   570  0092  120A  118A  204A  120A  118A  	fcall	_spiInit
   571  0097                     l824:
   572                           
   573                           ;main.c: 61:         ADC_con(flag);
   574  0097  0879               	movf	_flag,w
   575  0098  120A  118A  2068  120A  118A  	fcall	_ADC_con
   576  009D  2897               	goto	l824
   577  009E  120A  118A  280C   	ljmp	start
   578  00A1                     __end_of_main:
   579                           
   580                           	psect	text1
   581  004A                     __ptext1:	
   582 ;; *************** function _spiInit *****************
   583 ;; Defined at:
   584 ;;		line 13 in file "SPI.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  sType           1    wreg     enum E1264
   587 ;;  sDataSample     1    4[COMMON] enum E1272
   588 ;;  sClockIdle      1    5[COMMON] enum E1276
   589 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  sType           1    0[BANK0 ] enum E1264
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         3       0       0       0       0
   602 ;;      Locals:         0       1       0       0       0
   603 ;;      Temps:          0       0       0       0       0
   604 ;;      Totals:         3       1       0       0       0
   605 ;;Total ram usage:        4 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    3
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _spiInit
   617  004A                     _spiInit:
   618                           
   619                           ;incstack = 0
   620                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   621                           ;spiInit@sType stored from wreg
   622  004A  1283               	bcf	3,5	;RP0=0, select bank0
   623  004B  1303               	bcf	3,6	;RP1=0, select bank0
   624  004C  00A0               	movwf	spiInit@sType
   625  004D                     l806:
   626                           
   627                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   628  004D  1683               	bsf	3,5	;RP0=1, select bank1
   629  004E  1303               	bcf	3,6	;RP1=0, select bank1
   630  004F  1287               	bcf	7,5	;volatile
   631                           
   632                           ;SPI.c: 16:     if(sType & 0b00000100)
   633  0050  1283               	bcf	3,5	;RP0=0, select bank0
   634  0051  1303               	bcf	3,6	;RP1=0, select bank0
   635  0052  1D20               	btfss	spiInit@sType,2
   636  0053  2855               	goto	u81
   637  0054  2856               	goto	u80
   638  0055                     u81:
   639  0055  285C               	goto	l812
   640  0056                     u80:
   641  0056                     l808:
   642                           
   643                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   644  0056  0876               	movf	spiInit@sTransmitEdge,w
   645  0057  1683               	bsf	3,5	;RP0=1, select bank1
   646  0058  1303               	bcf	3,6	;RP1=0, select bank1
   647  0059  0094               	movwf	20	;volatile
   648  005A                     l810:
   649                           
   650                           ;SPI.c: 19:         TRISC3 = 1;
   651  005A  1587               	bsf	7,3	;volatile
   652                           
   653                           ;SPI.c: 20:     }
   654  005B  2862               	goto	l96
   655  005C                     l812:
   656                           
   657                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   658  005C  0874               	movf	spiInit@sDataSample,w
   659  005D  0476               	iorwf	spiInit@sTransmitEdge,w
   660  005E  1683               	bsf	3,5	;RP0=1, select bank1
   661  005F  1303               	bcf	3,6	;RP1=0, select bank1
   662  0060  0094               	movwf	20	;volatile
   663  0061                     l814:
   664                           
   665                           ;SPI.c: 24:         TRISC3 = 0;
   666  0061  1187               	bcf	7,3	;volatile
   667  0062                     l96:	
   668                           ;SPI.c: 25:     }
   669                           
   670                           
   671                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   672  0062  1283               	bcf	3,5	;RP0=0, select bank0
   673  0063  1303               	bcf	3,6	;RP1=0, select bank0
   674  0064  0820               	movf	spiInit@sType,w
   675  0065  0475               	iorwf	spiInit@sClockIdle,w
   676  0066  0094               	movwf	20	;volatile
   677  0067                     l97:
   678  0067  0008               	return
   679  0068                     __end_of_spiInit:
   680                           
   681                           	psect	text2
   682  00A1                     __ptext2:	
   683 ;; *************** function _setup *****************
   684 ;; Defined at:
   685 ;;		line 72 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0
   702 ;;      Totals:         0       0       0       0       0
   703 ;;Total ram usage:        0 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    3
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           
   714                           ;psect for function _setup
   715  00A1                     _setup:
   716  00A1                     l708:	
   717                           ;incstack = 0
   718                           ; Regs used in _setup: [wreg+status,2]
   719                           
   720                           
   721                           ;main.c: 73:     TRISAbits.TRISA5 = 1;
   722  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   723  00A2  1303               	bcf	3,6	;RP1=0, select bank1
   724  00A3  1685               	bsf	5,5	;volatile
   725  00A4                     l710:
   726                           
   727                           ;main.c: 75:     TRISD = 0b00000000;
   728  00A4  0188               	clrf	8	;volatile
   729  00A5                     l712:
   730                           
   731                           ;main.c: 76:     TRISC = 0b00011000;
   732  00A5  3018               	movlw	24
   733  00A6  0087               	movwf	7	;volatile
   734  00A7                     l714:
   735                           
   736                           ;main.c: 79:     TRISB = 0b11111110;
   737  00A7  30FE               	movlw	254
   738  00A8  0086               	movwf	6	;volatile
   739                           
   740                           ;main.c: 81:     PORTB = 0;
   741  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   742  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   743  00AB  0186               	clrf	6	;volatile
   744                           
   745                           ;main.c: 82:     PORTC = 0;
   746  00AC  0187               	clrf	7	;volatile
   747                           
   748                           ;main.c: 83:     PORTD = 0;
   749  00AD  0188               	clrf	8	;volatile
   750                           
   751                           ;main.c: 84:     PORTE = 0;
   752  00AE  0189               	clrf	9	;volatile
   753  00AF                     l716:
   754                           
   755                           ;main.c: 86:     SSPIF = 0;
   756  00AF  118C               	bcf	12,3	;volatile
   757  00B0                     l718:
   758                           
   759                           ;main.c: 87:     SSPIE = 1;
   760  00B0  1683               	bsf	3,5	;RP0=1, select bank1
   761  00B1  1303               	bcf	3,6	;RP1=0, select bank1
   762  00B2  158C               	bsf	12,3	;volatile
   763  00B3                     l720:
   764                           
   765                           ;main.c: 88:     INTCON = 0b11101000;
   766  00B3  30E8               	movlw	232
   767  00B4  008B               	movwf	11	;volatile
   768  00B5                     l55:
   769  00B5  0008               	return
   770  00B6                     __end_of_setup:
   771                           
   772                           	psect	text3
   773  0068                     __ptext3:	
   774 ;; *************** function _ADC_con *****************
   775 ;; Defined at:
   776 ;;		line 13 in file "ADC.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  flag            1    wreg     unsigned char 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  flag            1    5[COMMON] unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         1       0       0       0       0
   792 ;;      Temps:          1       0       0       0       0
   793 ;;      Totals:         2       0       0       0       0
   794 ;;Total ram usage:        2 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    3
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _ADC_con
   806  0068                     _ADC_con:
   807                           
   808                           ;incstack = 0
   809                           ; Regs used in _ADC_con: [wreg+status,2+status,0]
   810                           ;ADC_con@flag stored from wreg
   811  0068  00F5               	movwf	ADC_con@flag
   812  0069                     l732:
   813                           
   814                           ;ADC.c: 15:     ANSEL = 0b00000001;
   815  0069  3001               	movlw	1
   816  006A  1683               	bsf	3,5	;RP0=1, select bank3
   817  006B  1703               	bsf	3,6	;RP1=1, select bank3
   818  006C  0088               	movwf	8	;volatile
   819                           
   820                           ;ADC.c: 16:     INTCON = 0b11101000;
   821  006D  30E8               	movlw	232
   822  006E  008B               	movwf	11	;volatile
   823                           
   824                           ;ADC.c: 17:     ADCON0 = 0b01000001;
   825  006F  3041               	movlw	65
   826  0070  1283               	bcf	3,5	;RP0=0, select bank0
   827  0071  1303               	bcf	3,6	;RP1=0, select bank0
   828  0072  009F               	movwf	31	;volatile
   829  0073                     l734:
   830                           
   831                           ;ADC.c: 19:     PIE1bits.ADIE = 1;
   832  0073  1683               	bsf	3,5	;RP0=1, select bank1
   833  0074  1303               	bcf	3,6	;RP1=0, select bank1
   834  0075  170C               	bsf	12,6	;volatile
   835  0076                     l736:
   836                           
   837                           ;ADC.c: 20:     PIR1bits.ADIF = 0;
   838  0076  1283               	bcf	3,5	;RP0=0, select bank0
   839  0077  1303               	bcf	3,6	;RP1=0, select bank0
   840  0078  130C               	bcf	12,6	;volatile
   841  0079                     l738:
   842                           
   843                           ;ADC.c: 21:     if (flag == 1) {
   844  0079  0375               	decf	ADC_con@flag,w
   845  007A  1D03               	btfss	3,2
   846  007B  287D               	goto	u31
   847  007C  287E               	goto	u30
   848  007D                     u31:
   849  007D  2885               	goto	l80
   850  007E                     u30:
   851  007E                     l740:
   852                           
   853                           ;ADC.c: 22:         _delay((unsigned long)((20)*(8000000/4000000.0)));
   854  007E  300D               	movlw	13
   855  007F  00F4               	movwf	??_ADC_con
   856  0080                     u97:
   857  0080  0BF4               	decfsz	??_ADC_con,f
   858  0081  2880               	goto	u97
   859  0082                     l742:
   860                           
   861                           ;ADC.c: 23:         ADCON0bits.GO = 1;
   862  0082  1283               	bcf	3,5	;RP0=0, select bank0
   863  0083  1303               	bcf	3,6	;RP1=0, select bank0
   864  0084  149F               	bsf	31,1	;volatile
   865  0085                     l744:
   866  0085                     l80:
   867  0085  0008               	return
   868  0086                     __end_of_ADC_con:
   869                           
   870                           	psect	text4
   871  001B                     __ptext4:	
   872 ;; *************** function _ISR *****************
   873 ;; Defined at:
   874 ;;		line 96 in file "main.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0, pclath, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          3       0       0       0       0
   891 ;;      Totals:         3       0       0       0       0
   892 ;;Total ram usage:        3 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    2
   895 ;; This function calls:
   896 ;;		_spiRead
   897 ;;		_spiWrite
   898 ;; This function is called by:
   899 ;;		Interrupt level 1
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _ISR
   905  001B                     _ISR:
   906  001B                     i1l764:
   907                           
   908                           ;main.c: 97:     if (PIR1bits.ADIF == 1) {
   909  001B  1283               	bcf	3,5	;RP0=0, select bank0
   910  001C  1303               	bcf	3,6	;RP1=0, select bank0
   911  001D  1F0C               	btfss	12,6	;volatile
   912  001E  2820               	goto	u4_21
   913  001F  2821               	goto	u4_20
   914  0020                     u4_21:
   915  0020  2828               	goto	i1l772
   916  0021                     u4_20:
   917  0021                     i1l766:
   918                           
   919                           ;main.c: 98:         flag = 1;
   920  0021  01F9               	clrf	_flag
   921  0022  0AF9               	incf	_flag,f
   922  0023                     i1l768:
   923                           
   924                           ;main.c: 99:         valor_MSB = ADRESH;
   925  0023  081E               	movf	30,w	;volatile
   926  0024  00F1               	movwf	??_ISR
   927  0025  0871               	movf	??_ISR,w
   928  0026  00F7               	movwf	_valor_MSB
   929  0027                     i1l770:
   930                           
   931                           ;main.c: 100:         PIR1bits.ADIF = 0;
   932  0027  130C               	bcf	12,6	;volatile
   933  0028                     i1l772:
   934                           
   935                           ;main.c: 102:     if (PIR1bits.SSPIF == 1 && SSPSTATbits.BF == 1) {
   936  0028  1D8C               	btfss	12,3	;volatile
   937  0029  282B               	goto	u5_21
   938  002A  282C               	goto	u5_20
   939  002B                     u5_21:
   940  002B  2843               	goto	i1l62
   941  002C                     u5_20:
   942  002C                     i1l774:
   943  002C  1683               	bsf	3,5	;RP0=1, select bank1
   944  002D  1303               	bcf	3,6	;RP1=0, select bank1
   945  002E  1C14               	btfss	20,0	;volatile
   946  002F  2831               	goto	u6_21
   947  0030  2832               	goto	u6_20
   948  0031                     u6_21:
   949  0031  2843               	goto	i1l62
   950  0032                     u6_20:
   951  0032                     i1l776:
   952                           
   953                           ;main.c: 103:         count = spiRead();
   954  0032  120A  118A  20B6  120A  118A  	fcall	_spiRead
   955  0037  00F1               	movwf	??_ISR
   956  0038  0871               	movf	??_ISR,w
   957  0039  00F8               	movwf	_count
   958                           
   959                           ;main.c: 104:         spiWrite(valor_MSB);
   960  003A  0877               	movf	_valor_MSB,w
   961  003B  120A  118A  20C6  120A  118A  	fcall	_spiWrite
   962  0040                     i1l778:
   963                           
   964                           ;main.c: 105:         PIR1bits.SSPIF = 0;
   965  0040  1283               	bcf	3,5	;RP0=0, select bank0
   966  0041  1303               	bcf	3,6	;RP1=0, select bank0
   967  0042  118C               	bcf	12,3	;volatile
   968  0043                     i1l62:
   969  0043  0873               	movf	??_ISR+2,w
   970  0044  008A               	movwf	10
   971  0045  0E72               	swapf	??_ISR+1,w
   972  0046  0083               	movwf	3
   973  0047  0EFE               	swapf	btemp,f
   974  0048  0E7E               	swapf	btemp,w
   975  0049  0009               	retfie
   976  004A                     __end_of_ISR:
   977                           
   978                           	psect	intentry
   979  0004                     __pintentry:	
   980                           ;incstack = 0
   981                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   982                           
   983  0004                     interrupt_function:
   984  007E                     saved_w	set	btemp
   985  0004  00FE               	movwf	btemp
   986  0005  0E03               	swapf	3,w
   987  0006  00F2               	movwf	??_ISR+1
   988  0007  080A               	movf	10,w
   989  0008  00F3               	movwf	??_ISR+2
   990  0009  120A  118A  281B   	ljmp	_ISR
   991                           
   992                           	psect	text5
   993  00C6                     __ptext5:	
   994 ;; *************** function _spiWrite *****************
   995 ;; Defined at:
   996 ;;		line 35 in file "SPI.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  dat             1    wreg     unsigned char 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  dat             1    0[COMMON] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       0       0       0       0
  1011 ;;      Locals:         1       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0
  1013 ;;      Totals:         1       0       0       0       0
  1014 ;;Total ram usage:        1 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_ISR
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _spiWrite
  1025  00C6                     _spiWrite:
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in _spiWrite: [wreg]
  1029                           ;spiWrite@dat stored from wreg
  1030  00C6  00F0               	movwf	spiWrite@dat
  1031  00C7                     i1l752:
  1032                           
  1033                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1034  00C7  0870               	movf	spiWrite@dat,w
  1035  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1036  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1037  00CA  0093               	movwf	19	;volatile
  1038  00CB                     i1l106:
  1039  00CB  0008               	return
  1040  00CC                     __end_of_spiWrite:
  1041                           
  1042                           	psect	text6
  1043  00B6                     __ptext6:	
  1044 ;; *************** function _spiRead *****************
  1045 ;; Defined at:
  1046 ;;		line 48 in file "SPI.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      unsigned char 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0
  1063 ;;      Totals:         0       0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    1
  1067 ;; This function calls:
  1068 ;;		_spiReceiveWait
  1069 ;; This function is called by:
  1070 ;;		_ISR
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _spiRead
  1076  00B6                     _spiRead:
  1077  00B6                     i1l746:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1080                           
  1081                           
  1082                           ;SPI.c: 50:     spiReceiveWait();
  1083  00B6  120A  118A  20BF  120A  118A  	fcall	_spiReceiveWait
  1084  00BB                     i1l748:
  1085                           
  1086                           ;SPI.c: 51:     return(SSPBUF);
  1087  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1088  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1089  00BD  0813               	movf	19,w	;volatile
  1090  00BE                     i1l114:
  1091  00BE  0008               	return
  1092  00BF                     __end_of_spiRead:
  1093                           
  1094                           	psect	text7
  1095  00BF                     __ptext7:	
  1096 ;; *************** function _spiReceiveWait *****************
  1097 ;; Defined at:
  1098 ;;		line 30 in file "SPI.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		None
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_spiRead
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _spiReceiveWait
  1127  00BF                     _spiReceiveWait:
  1128  00BF                     i1l706:	
  1129                           ;incstack = 0
  1130                           ; Regs used in _spiReceiveWait: []
  1131                           
  1132  00BF                     i1l100:	
  1133                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  1134                           
  1135  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1136  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1137  00C1  1C14               	btfss	20,0	;volatile
  1138  00C2  28C4               	goto	u1_21
  1139  00C3  28C5               	goto	u1_20
  1140  00C4                     u1_21:
  1141  00C4  28BF               	goto	i1l100
  1142  00C5                     u1_20:
  1143  00C5                     i1l103:
  1144  00C5  0008               	return
  1145  00C6                     __end_of_spiReceiveWait:
  1146  007E                     btemp	set	126	;btemp
  1147  007E                     wtemp0	set	126
  1148                           
  1149                           	psect	config
  1150                           
  1151                           ;Config register CONFIG1 @ 0x2007
  1152                           ;	Oscillator Selection bits
  1153                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1154                           ;	Watchdog Timer Enable bit
  1155                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1156                           ;	Power-up Timer Enable bit
  1157                           ;	PWRTE = OFF, PWRT disabled
  1158                           ;	RE3/MCLR pin function select bit
  1159                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1160                           ;	Code Protection bit
  1161                           ;	CP = OFF, Program memory code protection is disabled
  1162                           ;	Data Code Protection bit
  1163                           ;	CPD = OFF, Data memory code protection is disabled
  1164                           ;	Brown Out Reset Selection bits
  1165                           ;	BOREN = OFF, BOR disabled
  1166                           ;	Internal External Switchover bit
  1167                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1168                           ;	Fail-Safe Clock Monitor Enabled bit
  1169                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1170                           ;	Low Voltage Programming Enable bit
  1171                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1172                           ;	In-Circuit Debugger Mode bit
  1173                           ;	DEBUG = 0x1, unprogrammed default
  1174  2007                     	org	8199
  1175  2007  20D5               	dw	8405
  1176                           
  1177                           ;Config register CONFIG2 @ 0x2008
  1178                           ;	Brown-out Reset Selection bit
  1179                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1180                           ;	Flash Program Memory Self Write Enable bits
  1181                           ;	WRT = OFF, Write protection off
  1182  2008                     	org	8200
  1183  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     471
                            _ADC_con
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_con                                              2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_con
   _setup
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1       1       5        1.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 22:21:37 2021

            _SSPSTATbits 0094                       l55 00B5                       l80 0085  
                     l96 0062                       l97 0067                       u30 007E  
                     u31 007D                       u80 0056                       u81 0055  
                     u97 0080                      l710 00A4                      l720 00B3  
                    l712 00A5                      l714 00A7                      l810 005A  
                    l740 007E                      l732 0069                      l716 00AF  
                    l708 00A1                      l812 005C                      l820 008C  
                    l742 0082                      l734 0073                      l718 00B0  
                    l814 0061                      l806 004D                      l822 008E  
                    l744 0085                      l736 0076                      l808 0056  
                    l824 0097                      l816 0086                      l738 0079  
                    l818 008B                      _ISR 001B          __end_of_ADC_con 0086  
                   ?_ISR 0070                     i1l62 0043                     u1_20 00C5  
                   u1_21 00C4                     u4_20 0021                     u4_21 0020  
                   u5_20 002C                     u5_21 002B                     u6_20 0032  
                   u6_21 0031                     _flag 0079                     _main 0086  
                   btemp 007E                     start 000C                    ??_ISR 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l100 00BF  
                  i1l103 00C5                    i1l114 00BE                    i1l106 00CB  
                  i1l706 00BF                    i1l752 00C7                    i1l746 00B6  
                  i1l770 0027                    i1l748 00BB                    i1l772 0028  
                  i1l764 001B                    i1l774 002C                    i1l766 0021  
                  i1l776 0032                    i1l768 0023                    i1l778 0040  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIE 0463                    _SSPIF 0063  
                  _count 0078                    _setup 00A1                    pclath 000A  
        __end_of_spiInit 0068          __end_of_spiRead 00BF                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00A1  
              ??_ADC_con 0074                   ??_main 0077                   _ADCON0 001F  
                 _ADRESH 001E                   ?_setup 0070                   _INTCON 000B  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013             __pdataCOMMON 0079                   saved_w 007E  
       __end_of_spiWrite 00CC                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0017           __pcstackCOMMON 0070            __end_of_setup 00B6  
                ??_setup 0074               __pmaintext 0086               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _ADC_con 0068                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 004A                  __ptext2 00A1  
                __ptext3 0068                  __ptext4 001B                  __ptext5 00C6  
                __ptext6 00B6                  __ptext7 00BF             __size_of_ISR 002F  
                _spiInit 004A                  _spiRead 00B6     end_of_initialization 0017  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 00BF            __pidataCOMMON 00CC      start_initialization 000F  
            __end_of_ISR 004A   __end_of_spiReceiveWait 00C6                 ?_ADC_con 0070  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0074  
               ?_spiRead 0070           __size_of_setup 0015     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0074  
               _PIR1bits 000C                _valor_MSB 0077              ADC_con@flag 0075  
             _ADCON0bits 001F         __size_of_ADC_con 001E         __size_of_spiInit 001E  
       __size_of_spiRead 0009            __size_of_main 001B                 _spiWrite 00C6  
           spiInit@sType 0020        spiInit@sClockIdle 0075                 intlevel1 0000  
       ??_spiReceiveWait 0070  
