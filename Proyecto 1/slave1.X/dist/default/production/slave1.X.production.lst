

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 21:36:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368                           
   369                           	psect	idataCOMMON
   370  00C6                     __pidataCOMMON:
   371                           
   372                           ;initializer for _flag
   373  00C6  3401               	retlw	1
   374  0013                     _SSPBUF	set	19
   375  0014                     _SSPCON	set	20
   376  001F                     _ADCON0bits	set	31
   377  001F                     _ADCON0	set	31
   378  001E                     _ADRESH	set	30
   379  000C                     _PIR1bits	set	12
   380  000B                     _INTCON	set	11
   381  0009                     _PORTE	set	9
   382  0008                     _PORTD	set	8
   383  0007                     _PORTC	set	7
   384  0006                     _PORTB	set	6
   385  0063                     _SSPIF	set	99
   386  0094                     _SSPSTATbits	set	148
   387  0094                     _SSPSTAT	set	148
   388  008C                     _PIE1bits	set	140
   389  0086                     _TRISB	set	134
   390  0087                     _TRISC	set	135
   391  0088                     _TRISD	set	136
   392  0085                     _TRISAbits	set	133
   393  043B                     _TRISC3	set	1083
   394  043D                     _TRISC5	set	1085
   395  0463                     _SSPIE	set	1123
   396  0188                     _ANSEL	set	392
   397                           
   398                           	psect	cinit
   399  000F                     start_initialization:	
   400                           ; #config settings
   401                           
   402  000F                     __initialization:
   403                           
   404                           ; Initialize objects allocated to COMMON
   405  000F  120A  118A  20C6  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   406  0014  00F9               	movwf	__pdataCOMMON& (0+127)
   407                           
   408                           ; Clear objects allocated to COMMON
   409  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   410  0016  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   411  0017                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414  0017                     __end_of__initialization:
   415  0017  0183               	clrf	3
   416  0018  120A  118A  2880   	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMMON
   419  0077                     __pbssCOMMON:
   420  0077                     _valor_MSB:
   421  0077                     	ds	1
   422  0078                     _count:
   423  0078                     	ds	1
   424                           
   425                           	psect	dataCOMMON
   426  0079                     __pdataCOMMON:
   427  0079                     _flag:
   428  0079                     	ds	1
   429                           
   430                           	psect	cstackCOMMON
   431  0070                     __pcstackCOMMON:
   432  0070                     ?_setup:
   433  0070                     ?_ADC_con:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_spiRead:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_spiRead:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_spiWrite:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ??_spiWrite:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_main:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_ISR:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_spiReceiveWait:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ??_spiReceiveWait:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     spiWrite@dat:	
   461                           ; 1 bytes @ 0x0
   462                           
   463                           
   464                           ; 1 bytes @ 0x0
   465  0070                     	ds	1
   466  0071                     ??_ISR:
   467                           
   468                           ; 1 bytes @ 0x1
   469  0071                     	ds	3
   470  0074                     ??_setup:
   471  0074                     ?_spiInit:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     ??_ADC_con:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0074                     spiInit@sDataSample:	
   478                           ; 1 bytes @ 0x4
   479                           
   480                           
   481                           ; 1 bytes @ 0x4
   482  0074                     	ds	1
   483  0075                     ADC_con@flag:
   484  0075                     spiInit@sClockIdle:	
   485                           ; 1 bytes @ 0x5
   486                           
   487                           
   488                           ; 1 bytes @ 0x5
   489  0075                     	ds	1
   490  0076                     spiInit@sTransmitEdge:
   491                           
   492                           ; 1 bytes @ 0x6
   493  0076                     	ds	1
   494  0077                     ??_spiInit:
   495  0077                     ??_main:	
   496                           ; 1 bytes @ 0x7
   497                           
   498                           
   499                           	psect	cstackBANK0
   500  0020                     __pcstackBANK0:	
   501                           ; 1 bytes @ 0x7
   502                           
   503  0020                     spiInit@sType:
   504                           
   505                           ; 1 bytes @ 0x0
   506  0020                     	ds	1
   507                           
   508                           	psect	maintext
   509  0080                     __pmaintext:	
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 55 in file "main.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0, pclath, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : B00/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0
   532 ;;      Totals:         0       0       0       0       0
   533 ;;Total ram usage:        0 bytes
   534 ;; Hardware stack levels required when called:    4
   535 ;; This function calls:
   536 ;;		_ADC_con
   537 ;;		_setup
   538 ;;		_spiInit
   539 ;; This function is called by:
   540 ;;		Startup code after reset
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function _main
   546  0080                     _main:
   547  0080                     l812:	
   548                           ;incstack = 0
   549                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   550                           
   551                           
   552                           ;main.c: 56:     setup();
   553  0080  120A  118A  209B  120A  118A  	fcall	_setup
   554  0085                     l814:
   555                           
   556                           ;main.c: 57:     count = 0;
   557  0085  01F8               	clrf	_count
   558  0086                     l816:
   559                           
   560                           ;main.c: 58:     flag = 1;
   561  0086  01F9               	clrf	_flag
   562  0087  0AF9               	incf	_flag,f
   563  0088                     l818:
   564                           
   565                           ;main.c: 59:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   566  0088  01F4               	clrf	spiInit@sDataSample
   567  0089  01F5               	clrf	spiInit@sClockIdle
   568  008A  01F6               	clrf	spiInit@sTransmitEdge
   569  008B  3024               	movlw	36
   570  008C  120A  118A  2044  120A  118A  	fcall	_spiInit
   571  0091                     l820:
   572                           
   573                           ;main.c: 61:         ADC_con(flag);
   574  0091  0879               	movf	_flag,w
   575  0092  120A  118A  2062  120A  118A  	fcall	_ADC_con
   576  0097  2891               	goto	l820
   577  0098  120A  118A  280C   	ljmp	start
   578  009B                     __end_of_main:
   579                           
   580                           	psect	text1
   581  0044                     __ptext1:	
   582 ;; *************** function _spiInit *****************
   583 ;; Defined at:
   584 ;;		line 13 in file "SPI.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  sType           1    wreg     enum E1264
   587 ;;  sDataSample     1    4[COMMON] enum E1272
   588 ;;  sClockIdle      1    5[COMMON] enum E1276
   589 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  sType           1    0[BANK0 ] enum E1264
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         3       0       0       0       0
   602 ;;      Locals:         0       1       0       0       0
   603 ;;      Temps:          0       0       0       0       0
   604 ;;      Totals:         3       1       0       0       0
   605 ;;Total ram usage:        4 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    3
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _spiInit
   617  0044                     _spiInit:
   618                           
   619                           ;incstack = 0
   620                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   621                           ;spiInit@sType stored from wreg
   622  0044  1283               	bcf	3,5	;RP0=0, select bank0
   623  0045  1303               	bcf	3,6	;RP1=0, select bank0
   624  0046  00A0               	movwf	spiInit@sType
   625  0047                     l802:
   626                           
   627                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   628  0047  1683               	bsf	3,5	;RP0=1, select bank1
   629  0048  1303               	bcf	3,6	;RP1=0, select bank1
   630  0049  1287               	bcf	7,5	;volatile
   631                           
   632                           ;SPI.c: 16:     if(sType & 0b00000100)
   633  004A  1283               	bcf	3,5	;RP0=0, select bank0
   634  004B  1303               	bcf	3,6	;RP1=0, select bank0
   635  004C  1D20               	btfss	spiInit@sType,2
   636  004D  284F               	goto	u71
   637  004E  2850               	goto	u70
   638  004F                     u71:
   639  004F  2856               	goto	l808
   640  0050                     u70:
   641  0050                     l804:
   642                           
   643                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   644  0050  0876               	movf	spiInit@sTransmitEdge,w
   645  0051  1683               	bsf	3,5	;RP0=1, select bank1
   646  0052  1303               	bcf	3,6	;RP1=0, select bank1
   647  0053  0094               	movwf	20	;volatile
   648  0054                     l806:
   649                           
   650                           ;SPI.c: 19:         TRISC3 = 1;
   651  0054  1587               	bsf	7,3	;volatile
   652                           
   653                           ;SPI.c: 20:     }
   654  0055  285C               	goto	l94
   655  0056                     l808:
   656                           
   657                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   658  0056  0874               	movf	spiInit@sDataSample,w
   659  0057  0476               	iorwf	spiInit@sTransmitEdge,w
   660  0058  1683               	bsf	3,5	;RP0=1, select bank1
   661  0059  1303               	bcf	3,6	;RP1=0, select bank1
   662  005A  0094               	movwf	20	;volatile
   663  005B                     l810:
   664                           
   665                           ;SPI.c: 24:         TRISC3 = 0;
   666  005B  1187               	bcf	7,3	;volatile
   667  005C                     l94:	
   668                           ;SPI.c: 25:     }
   669                           
   670                           
   671                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   672  005C  1283               	bcf	3,5	;RP0=0, select bank0
   673  005D  1303               	bcf	3,6	;RP1=0, select bank0
   674  005E  0820               	movf	spiInit@sType,w
   675  005F  0475               	iorwf	spiInit@sClockIdle,w
   676  0060  0094               	movwf	20	;volatile
   677  0061                     l95:
   678  0061  0008               	return
   679  0062                     __end_of_spiInit:
   680                           
   681                           	psect	text2
   682  009B                     __ptext2:	
   683 ;; *************** function _setup *****************
   684 ;; Defined at:
   685 ;;		line 72 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0
   702 ;;      Totals:         0       0       0       0       0
   703 ;;Total ram usage:        0 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    3
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           
   714                           ;psect for function _setup
   715  009B                     _setup:
   716  009B                     l706:	
   717                           ;incstack = 0
   718                           ; Regs used in _setup: [wreg+status,2]
   719                           
   720                           
   721                           ;main.c: 73:     TRISAbits.TRISA5 = 1;
   722  009B  1683               	bsf	3,5	;RP0=1, select bank1
   723  009C  1303               	bcf	3,6	;RP1=0, select bank1
   724  009D  1685               	bsf	5,5	;volatile
   725  009E                     l708:
   726                           
   727                           ;main.c: 75:     TRISD = 0b00000000;
   728  009E  0188               	clrf	8	;volatile
   729  009F                     l710:
   730                           
   731                           ;main.c: 76:     TRISC = 0b00011000;
   732  009F  3018               	movlw	24
   733  00A0  0087               	movwf	7	;volatile
   734  00A1                     l712:
   735                           
   736                           ;main.c: 79:     TRISB = 0b11111110;
   737  00A1  30FE               	movlw	254
   738  00A2  0086               	movwf	6	;volatile
   739                           
   740                           ;main.c: 81:     PORTB = 0;
   741  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   742  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   743  00A5  0186               	clrf	6	;volatile
   744                           
   745                           ;main.c: 82:     PORTC = 0;
   746  00A6  0187               	clrf	7	;volatile
   747                           
   748                           ;main.c: 83:     PORTD = 0;
   749  00A7  0188               	clrf	8	;volatile
   750                           
   751                           ;main.c: 84:     PORTE = 0;
   752  00A8  0189               	clrf	9	;volatile
   753  00A9                     l714:
   754                           
   755                           ;main.c: 86:     SSPIF = 0;
   756  00A9  118C               	bcf	12,3	;volatile
   757  00AA                     l716:
   758                           
   759                           ;main.c: 87:     SSPIE = 1;
   760  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   761  00AB  1303               	bcf	3,6	;RP1=0, select bank1
   762  00AC  158C               	bsf	12,3	;volatile
   763  00AD                     l718:
   764                           
   765                           ;main.c: 88:     INTCON = 0b11101000;
   766  00AD  30E8               	movlw	232
   767  00AE  008B               	movwf	11	;volatile
   768  00AF                     l53:
   769  00AF  0008               	return
   770  00B0                     __end_of_setup:
   771                           
   772                           	psect	text3
   773  0062                     __ptext3:	
   774 ;; *************** function _ADC_con *****************
   775 ;; Defined at:
   776 ;;		line 13 in file "ADC.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  flag            1    wreg     unsigned char 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  flag            1    5[COMMON] unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         1       0       0       0       0
   792 ;;      Temps:          1       0       0       0       0
   793 ;;      Totals:         2       0       0       0       0
   794 ;;Total ram usage:        2 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    3
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _ADC_con
   806  0062                     _ADC_con:
   807                           
   808                           ;incstack = 0
   809                           ; Regs used in _ADC_con: [wreg+status,2+status,0]
   810                           ;ADC_con@flag stored from wreg
   811  0062  00F5               	movwf	ADC_con@flag
   812  0063                     l730:
   813                           
   814                           ;ADC.c: 15:     ANSEL = 0b00000001;
   815  0063  3001               	movlw	1
   816  0064  1683               	bsf	3,5	;RP0=1, select bank3
   817  0065  1703               	bsf	3,6	;RP1=1, select bank3
   818  0066  0088               	movwf	8	;volatile
   819                           
   820                           ;ADC.c: 16:     INTCON = 0b11101000;
   821  0067  30E8               	movlw	232
   822  0068  008B               	movwf	11	;volatile
   823                           
   824                           ;ADC.c: 17:     ADCON0 = 0b01000001;
   825  0069  3041               	movlw	65
   826  006A  1283               	bcf	3,5	;RP0=0, select bank0
   827  006B  1303               	bcf	3,6	;RP1=0, select bank0
   828  006C  009F               	movwf	31	;volatile
   829  006D                     l732:
   830                           
   831                           ;ADC.c: 19:     PIE1bits.ADIE = 1;
   832  006D  1683               	bsf	3,5	;RP0=1, select bank1
   833  006E  1303               	bcf	3,6	;RP1=0, select bank1
   834  006F  170C               	bsf	12,6	;volatile
   835  0070                     l734:
   836                           
   837                           ;ADC.c: 20:     PIR1bits.ADIF = 0;
   838  0070  1283               	bcf	3,5	;RP0=0, select bank0
   839  0071  1303               	bcf	3,6	;RP1=0, select bank0
   840  0072  130C               	bcf	12,6	;volatile
   841  0073                     l736:
   842                           
   843                           ;ADC.c: 21:     if (flag == 1) {
   844  0073  0375               	decf	ADC_con@flag,w
   845  0074  1D03               	btfss	3,2
   846  0075  2877               	goto	u31
   847  0076  2878               	goto	u30
   848  0077                     u31:
   849  0077  287F               	goto	l78
   850  0078                     u30:
   851  0078                     l738:
   852                           
   853                           ;ADC.c: 22:         _delay((unsigned long)((20)*(8000000/4000000.0)));
   854  0078  300D               	movlw	13
   855  0079  00F4               	movwf	??_ADC_con
   856  007A                     u87:
   857  007A  0BF4               	decfsz	??_ADC_con,f
   858  007B  287A               	goto	u87
   859  007C                     l740:
   860                           
   861                           ;ADC.c: 23:         ADCON0bits.GO = 1;
   862  007C  1283               	bcf	3,5	;RP0=0, select bank0
   863  007D  1303               	bcf	3,6	;RP1=0, select bank0
   864  007E  149F               	bsf	31,1	;volatile
   865  007F                     l742:
   866  007F                     l78:
   867  007F  0008               	return
   868  0080                     __end_of_ADC_con:
   869                           
   870                           	psect	text4
   871  001B                     __ptext4:	
   872 ;; *************** function _ISR *****************
   873 ;; Defined at:
   874 ;;		line 96 in file "main.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0, pclath, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          3       0       0       0       0
   891 ;;      Totals:         3       0       0       0       0
   892 ;;Total ram usage:        3 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    2
   895 ;; This function calls:
   896 ;;		_spiRead
   897 ;;		_spiWrite
   898 ;; This function is called by:
   899 ;;		Interrupt level 1
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _ISR
   905  001B                     _ISR:
   906  001B                     i1l762:
   907                           
   908                           ;main.c: 97:     if (PIR1bits.ADIF == 1) {
   909  001B  1283               	bcf	3,5	;RP0=0, select bank0
   910  001C  1303               	bcf	3,6	;RP1=0, select bank0
   911  001D  1F0C               	btfss	12,6	;volatile
   912  001E  2820               	goto	u4_21
   913  001F  2821               	goto	u4_20
   914  0020                     u4_21:
   915  0020  2828               	goto	i1l770
   916  0021                     u4_20:
   917  0021                     i1l764:
   918                           
   919                           ;main.c: 98:         flag = 1;
   920  0021  01F9               	clrf	_flag
   921  0022  0AF9               	incf	_flag,f
   922  0023                     i1l766:
   923                           
   924                           ;main.c: 99:         valor_MSB = ADRESH;
   925  0023  081E               	movf	30,w	;volatile
   926  0024  00F1               	movwf	??_ISR
   927  0025  0871               	movf	??_ISR,w
   928  0026  00F7               	movwf	_valor_MSB
   929  0027                     i1l768:
   930                           
   931                           ;main.c: 100:         PIR1bits.ADIF = 0;
   932  0027  130C               	bcf	12,6	;volatile
   933  0028                     i1l770:
   934                           
   935                           ;main.c: 102:     if (PIR1bits.SSPIF == 1) {
   936  0028  1D8C               	btfss	12,3	;volatile
   937  0029  282B               	goto	u5_21
   938  002A  282C               	goto	u5_20
   939  002B                     u5_21:
   940  002B  283D               	goto	i1l60
   941  002C                     u5_20:
   942  002C                     i1l772:
   943                           
   944                           ;main.c: 105:         count = spiRead();
   945  002C  120A  118A  20B0  120A  118A  	fcall	_spiRead
   946  0031  00F1               	movwf	??_ISR
   947  0032  0871               	movf	??_ISR,w
   948  0033  00F8               	movwf	_count
   949                           
   950                           ;main.c: 106:         spiWrite(valor_MSB);
   951  0034  0877               	movf	_valor_MSB,w
   952  0035  120A  118A  20C0  120A  118A  	fcall	_spiWrite
   953  003A                     i1l774:
   954                           
   955                           ;main.c: 107:         PIR1bits.SSPIF = 0;
   956  003A  1283               	bcf	3,5	;RP0=0, select bank0
   957  003B  1303               	bcf	3,6	;RP1=0, select bank0
   958  003C  118C               	bcf	12,3	;volatile
   959  003D                     i1l60:
   960  003D  0873               	movf	??_ISR+2,w
   961  003E  008A               	movwf	10
   962  003F  0E72               	swapf	??_ISR+1,w
   963  0040  0083               	movwf	3
   964  0041  0EFE               	swapf	btemp,f
   965  0042  0E7E               	swapf	btemp,w
   966  0043  0009               	retfie
   967  0044                     __end_of_ISR:
   968                           
   969                           	psect	intentry
   970  0004                     __pintentry:	
   971                           ;incstack = 0
   972                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   973                           
   974  0004                     interrupt_function:
   975  007E                     saved_w	set	btemp
   976  0004  00FE               	movwf	btemp
   977  0005  0E03               	swapf	3,w
   978  0006  00F2               	movwf	??_ISR+1
   979  0007  080A               	movf	10,w
   980  0008  00F3               	movwf	??_ISR+2
   981  0009  120A  118A  281B   	ljmp	_ISR
   982                           
   983                           	psect	text5
   984  00C0                     __ptext5:	
   985 ;; *************** function _spiWrite *****************
   986 ;; Defined at:
   987 ;;		line 35 in file "SPI.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  dat             1    wreg     unsigned char 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  dat             1    0[COMMON] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         1       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0
  1004 ;;      Totals:         1       0       0       0       0
  1005 ;;Total ram usage:        1 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_ISR
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _spiWrite
  1016  00C0                     _spiWrite:
  1017                           
  1018                           ;incstack = 0
  1019                           ; Regs used in _spiWrite: [wreg]
  1020                           ;spiWrite@dat stored from wreg
  1021  00C0  00F0               	movwf	spiWrite@dat
  1022  00C1                     i1l750:
  1023                           
  1024                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1025  00C1  0870               	movf	spiWrite@dat,w
  1026  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1027  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1028  00C4  0093               	movwf	19	;volatile
  1029  00C5                     i1l104:
  1030  00C5  0008               	return
  1031  00C6                     __end_of_spiWrite:
  1032                           
  1033                           	psect	text6
  1034  00B0                     __ptext6:	
  1035 ;; *************** function _spiRead *****************
  1036 ;; Defined at:
  1037 ;;		line 48 in file "SPI.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      unsigned char 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0
  1054 ;;      Totals:         0       0       0       0       0
  1055 ;;Total ram usage:        0 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    1
  1058 ;; This function calls:
  1059 ;;		_spiReceiveWait
  1060 ;; This function is called by:
  1061 ;;		_ISR
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _spiRead
  1067  00B0                     _spiRead:
  1068  00B0                     i1l744:	
  1069                           ;incstack = 0
  1070                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1071                           
  1072                           
  1073                           ;SPI.c: 50:     spiReceiveWait();
  1074  00B0  120A  118A  20B9  120A  118A  	fcall	_spiReceiveWait
  1075  00B5                     i1l746:
  1076                           
  1077                           ;SPI.c: 51:     return(SSPBUF);
  1078  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1079  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1080  00B7  0813               	movf	19,w	;volatile
  1081  00B8                     i1l112:
  1082  00B8  0008               	return
  1083  00B9                     __end_of_spiRead:
  1084                           
  1085                           	psect	text7
  1086  00B9                     __ptext7:	
  1087 ;; *************** function _spiReceiveWait *****************
  1088 ;; Defined at:
  1089 ;;		line 30 in file "SPI.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		None
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_spiRead
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _spiReceiveWait
  1118  00B9                     _spiReceiveWait:
  1119  00B9                     i1l704:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _spiReceiveWait: []
  1122                           
  1123  00B9                     i1l98:	
  1124                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  1125                           
  1126  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1127  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  1128  00BB  1C14               	btfss	20,0	;volatile
  1129  00BC  28BE               	goto	u1_21
  1130  00BD  28BF               	goto	u1_20
  1131  00BE                     u1_21:
  1132  00BE  28B9               	goto	i1l98
  1133  00BF                     u1_20:
  1134  00BF                     i1l101:
  1135  00BF  0008               	return
  1136  00C0                     __end_of_spiReceiveWait:
  1137  007E                     btemp	set	126	;btemp
  1138  007E                     wtemp0	set	126
  1139                           
  1140                           	psect	config
  1141                           
  1142                           ;Config register CONFIG1 @ 0x2007
  1143                           ;	Oscillator Selection bits
  1144                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1145                           ;	Watchdog Timer Enable bit
  1146                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1147                           ;	Power-up Timer Enable bit
  1148                           ;	PWRTE = OFF, PWRT disabled
  1149                           ;	RE3/MCLR pin function select bit
  1150                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1151                           ;	Code Protection bit
  1152                           ;	CP = OFF, Program memory code protection is disabled
  1153                           ;	Data Code Protection bit
  1154                           ;	CPD = OFF, Data memory code protection is disabled
  1155                           ;	Brown Out Reset Selection bits
  1156                           ;	BOREN = OFF, BOR disabled
  1157                           ;	Internal External Switchover bit
  1158                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1159                           ;	Fail-Safe Clock Monitor Enabled bit
  1160                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1161                           ;	Low Voltage Programming Enable bit
  1162                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1163                           ;	In-Circuit Debugger Mode bit
  1164                           ;	DEBUG = 0x1, unprogrammed default
  1165  2007                     	org	8199
  1166  2007  20D5               	dw	8405
  1167                           
  1168                           ;Config register CONFIG2 @ 0x2008
  1169                           ;	Brown-out Reset Selection bit
  1170                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1171                           ;	Flash Program Memory Self Write Enable bits
  1172                           ;	WRT = OFF, Write protection off
  1173  2008                     	org	8200
  1174  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     471
                            _ADC_con
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_con                                              2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_con
   _setup
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1       1       5        1.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 21:36:51 2021

            _SSPSTATbits 0094                       l53 00AF                       l78 007F  
                     l94 005C                       l95 0061                       u30 0078  
                     u31 0077                       u70 0050                       u71 004F  
                     u87 007A                      l710 009F                      l712 00A1  
                    l730 0063                      l714 00A9                      l706 009B  
                    l810 005B                      l802 0047                      l740 007C  
                    l732 006D                      l716 00AA                      l708 009E  
                    l804 0050                      l820 0091                      l812 0080  
                    l742 007F                      l734 0070                      l718 00AD  
                    l806 0054                      l814 0085                      l736 0073  
                    l808 0056                      l816 0086                      l738 0078  
                    l818 0088                      _ISR 001B          __end_of_ADC_con 0080  
                   ?_ISR 0070                     i1l60 003D                     i1l98 00B9  
                   u1_20 00BF                     u1_21 00BE                     u4_20 0021  
                   u4_21 0020                     u5_20 002C                     u5_21 002B  
                   _flag 0079                     _main 0080                     btemp 007E  
                   start 000C                    ??_ISR 0071                    ?_main 0070  
                  _ANSEL 0188                    i1l101 00BF                    i1l112 00B8  
                  i1l104 00C5                    i1l704 00B9                    i1l750 00C1  
                  i1l744 00B0                    i1l746 00B5                    i1l770 0028  
                  i1l762 001B                    i1l772 002C                    i1l764 0021  
                  i1l774 003A                    i1l766 0023                    i1l768 0027  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIE 0463                    _SSPIF 0063  
                  _count 0078                    _setup 009B                    pclath 000A  
        __end_of_spiInit 0062          __end_of_spiRead 00B9                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 009B  
              ??_ADC_con 0074                   ??_main 0077                   _ADCON0 001F  
                 _ADRESH 001E                   ?_setup 0070                   _INTCON 000B  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013             __pdataCOMMON 0079                   saved_w 007E  
       __end_of_spiWrite 00C6                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0017           __pcstackCOMMON 0070            __end_of_setup 00B0  
                ??_setup 0074               __pmaintext 0080               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _ADC_con 0062                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 0044                  __ptext2 009B  
                __ptext3 0062                  __ptext4 001B                  __ptext5 00C0  
                __ptext6 00B0                  __ptext7 00B9             __size_of_ISR 0029  
                _spiInit 0044                  _spiRead 00B0     end_of_initialization 0017  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 00B9            __pidataCOMMON 00C6      start_initialization 000F  
            __end_of_ISR 0044   __end_of_spiReceiveWait 00C0                 ?_ADC_con 0070  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                 ?_spiInit 0074  
               ?_spiRead 0070           __size_of_setup 0015     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0074  
               _PIR1bits 000C                _valor_MSB 0077              ADC_con@flag 0075  
             _ADCON0bits 001F         __size_of_ADC_con 001E         __size_of_spiInit 001E  
       __size_of_spiRead 0009            __size_of_main 001B                 _spiWrite 00C0  
           spiInit@sType 0020        spiInit@sClockIdle 0075                 intlevel1 0000  
       ??_spiReceiveWait 0070  
