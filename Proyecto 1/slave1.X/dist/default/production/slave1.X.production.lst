

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 01:02:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368                           
   369                           	psect	idataCOMMON
   370  00D1                     __pidataCOMMON:
   371                           
   372                           ;initializer for _flag
   373  00D1  3401               	retlw	1
   374  0013                     _SSPBUF	set	19
   375  0014                     _SSPCON	set	20
   376  001F                     _ADCON0bits	set	31
   377  001F                     _ADCON0	set	31
   378  001E                     _ADRESH	set	30
   379  000C                     _PIR1bits	set	12
   380  000B                     _INTCON	set	11
   381  0009                     _PORTE	set	9
   382  0008                     _PORTD	set	8
   383  0007                     _PORTC	set	7
   384  0006                     _PORTB	set	6
   385  0063                     _SSPIF	set	99
   386  0094                     _SSPSTAT	set	148
   387  008C                     _PIE1bits	set	140
   388  009F                     _ADCON1bits	set	159
   389  0094                     _SSPSTATbits	set	148
   390  0086                     _TRISB	set	134
   391  0087                     _TRISC	set	135
   392  0088                     _TRISD	set	136
   393  0085                     _TRISAbits	set	133
   394  043B                     _TRISC3	set	1083
   395  043D                     _TRISC5	set	1085
   396  0463                     _SSPIE	set	1123
   397  0188                     _ANSEL	set	392
   398                           
   399                           	psect	cinit
   400  000F                     start_initialization:	
   401                           ; #config settings
   402                           
   403  000F                     __initialization:
   404                           
   405                           ; Initialize objects allocated to COMMON
   406  000F  120A  118A  20D1  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   407  0014  00F9               	movwf	__pdataCOMMON& (0+127)
   408                           
   409                           ; Clear objects allocated to COMMON
   410  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   411  0016  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   412  0017                     end_of_initialization:	
   413                           ;End of C runtime variable initialization code
   414                           
   415  0017                     __end_of__initialization:
   416  0017  0183               	clrf	3
   417  0018  120A  118A  288B   	ljmp	_main	;jump to C main() function
   418                           
   419                           	psect	bssCOMMON
   420  0077                     __pbssCOMMON:
   421  0077                     _valor_MSB:
   422  0077                     	ds	1
   423  0078                     _count:
   424  0078                     	ds	1
   425                           
   426                           	psect	dataCOMMON
   427  0079                     __pdataCOMMON:
   428  0079                     _flag:
   429  0079                     	ds	1
   430                           
   431                           	psect	cstackCOMMON
   432  0070                     __pcstackCOMMON:
   433  0070                     ?_setup:
   434  0070                     ?_ADC_con:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_spiRead:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ??_spiRead:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_spiWrite:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ??_spiWrite:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_main:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_ISR:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_spiReceiveWait:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ??_spiReceiveWait:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     spiWrite@dat:	
   462                           ; 1 bytes @ 0x0
   463                           
   464                           
   465                           ; 1 bytes @ 0x0
   466  0070                     	ds	1
   467  0071                     ??_ISR:
   468                           
   469                           ; 1 bytes @ 0x1
   470  0071                     	ds	3
   471  0074                     ??_setup:
   472  0074                     ?_spiInit:	
   473                           ; 1 bytes @ 0x4
   474                           
   475  0074                     ??_ADC_con:	
   476                           ; 1 bytes @ 0x4
   477                           
   478  0074                     spiInit@sDataSample:	
   479                           ; 1 bytes @ 0x4
   480                           
   481                           
   482                           ; 1 bytes @ 0x4
   483  0074                     	ds	1
   484  0075                     ADC_con@flag:
   485  0075                     spiInit@sClockIdle:	
   486                           ; 1 bytes @ 0x5
   487                           
   488                           
   489                           ; 1 bytes @ 0x5
   490  0075                     	ds	1
   491  0076                     spiInit@sTransmitEdge:
   492                           
   493                           ; 1 bytes @ 0x6
   494  0076                     	ds	1
   495  0077                     ??_spiInit:
   496  0077                     ??_main:	
   497                           ; 1 bytes @ 0x7
   498                           
   499                           
   500                           	psect	cstackBANK0
   501  0020                     __pcstackBANK0:	
   502                           ; 1 bytes @ 0x7
   503                           
   504  0020                     spiInit@sType:
   505                           
   506                           ; 1 bytes @ 0x0
   507  0020                     	ds	1
   508                           
   509                           	psect	maintext
   510  008B                     __pmaintext:	
   511 ;;
   512 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   513 ;;
   514 ;; *************** function _main *****************
   515 ;; Defined at:
   516 ;;		line 55 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : B00/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0
   533 ;;      Totals:         0       0       0       0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels required when called:    4
   536 ;; This function calls:
   537 ;;		_ADC_con
   538 ;;		_setup
   539 ;;		_spiInit
   540 ;; This function is called by:
   541 ;;		Startup code after reset
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           
   546                           ;psect for function _main
   547  008B                     _main:
   548  008B                     l820:	
   549                           ;incstack = 0
   550                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   551                           
   552                           
   553                           ;main.c: 56:     setup();
   554  008B  120A  118A  20A6  120A  118A  	fcall	_setup
   555  0090                     l822:
   556                           
   557                           ;main.c: 57:     count = 0;
   558  0090  01F8               	clrf	_count
   559  0091                     l824:
   560                           
   561                           ;main.c: 58:     flag = 1;
   562  0091  01F9               	clrf	_flag
   563  0092  0AF9               	incf	_flag,f
   564  0093                     l826:
   565                           
   566                           ;main.c: 59:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   567  0093  01F4               	clrf	spiInit@sDataSample
   568  0094  01F5               	clrf	spiInit@sClockIdle
   569  0095  01F6               	clrf	spiInit@sTransmitEdge
   570  0096  3024               	movlw	36
   571  0097  120A  118A  206D  120A  118A  	fcall	_spiInit
   572  009C                     l828:
   573                           
   574                           ;main.c: 61:         ADC_con(flag);
   575  009C  0879               	movf	_flag,w
   576  009D  120A  118A  204C  120A  118A  	fcall	_ADC_con
   577  00A2  289C               	goto	l828
   578  00A3  120A  118A  280C   	ljmp	start
   579  00A6                     __end_of_main:
   580                           
   581                           	psect	text1
   582  006D                     __ptext1:	
   583 ;; *************** function _spiInit *****************
   584 ;; Defined at:
   585 ;;		line 13 in file "SPI.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  sType           1    wreg     enum E1264
   588 ;;  sDataSample     1    4[COMMON] enum E1272
   589 ;;  sClockIdle      1    5[COMMON] enum E1276
   590 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  sType           1    0[BANK0 ] enum E1264
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         3       0       0       0       0
   603 ;;      Locals:         0       1       0       0       0
   604 ;;      Temps:          0       0       0       0       0
   605 ;;      Totals:         3       1       0       0       0
   606 ;;Total ram usage:        4 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    3
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _spiInit
   618  006D                     _spiInit:
   619                           
   620                           ;incstack = 0
   621                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   622                           ;spiInit@sType stored from wreg
   623  006D  1283               	bcf	3,5	;RP0=0, select bank0
   624  006E  1303               	bcf	3,6	;RP1=0, select bank0
   625  006F  00A0               	movwf	spiInit@sType
   626  0070                     l810:
   627                           
   628                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   629  0070  1683               	bsf	3,5	;RP0=1, select bank1
   630  0071  1303               	bcf	3,6	;RP1=0, select bank1
   631  0072  1287               	bcf	7,5	;volatile
   632                           
   633                           ;SPI.c: 16:     if(sType & 0b00000100)
   634  0073  1283               	bcf	3,5	;RP0=0, select bank0
   635  0074  1303               	bcf	3,6	;RP1=0, select bank0
   636  0075  1D20               	btfss	spiInit@sType,2
   637  0076  2878               	goto	u81
   638  0077  2879               	goto	u80
   639  0078                     u81:
   640  0078  287F               	goto	l816
   641  0079                     u80:
   642  0079                     l812:
   643                           
   644                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   645  0079  0876               	movf	spiInit@sTransmitEdge,w
   646  007A  1683               	bsf	3,5	;RP0=1, select bank1
   647  007B  1303               	bcf	3,6	;RP1=0, select bank1
   648  007C  0094               	movwf	20	;volatile
   649  007D                     l814:
   650                           
   651                           ;SPI.c: 19:         TRISC3 = 1;
   652  007D  1587               	bsf	7,3	;volatile
   653                           
   654                           ;SPI.c: 20:     }
   655  007E  2885               	goto	l98
   656  007F                     l816:
   657                           
   658                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   659  007F  0874               	movf	spiInit@sDataSample,w
   660  0080  0476               	iorwf	spiInit@sTransmitEdge,w
   661  0081  1683               	bsf	3,5	;RP0=1, select bank1
   662  0082  1303               	bcf	3,6	;RP1=0, select bank1
   663  0083  0094               	movwf	20	;volatile
   664  0084                     l818:
   665                           
   666                           ;SPI.c: 24:         TRISC3 = 0;
   667  0084  1187               	bcf	7,3	;volatile
   668  0085                     l98:	
   669                           ;SPI.c: 25:     }
   670                           
   671                           
   672                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   673  0085  1283               	bcf	3,5	;RP0=0, select bank0
   674  0086  1303               	bcf	3,6	;RP1=0, select bank0
   675  0087  0820               	movf	spiInit@sType,w
   676  0088  0475               	iorwf	spiInit@sClockIdle,w
   677  0089  0094               	movwf	20	;volatile
   678  008A                     l99:
   679  008A  0008               	return
   680  008B                     __end_of_spiInit:
   681                           
   682                           	psect	text2
   683  00A6                     __ptext2:	
   684 ;; *************** function _setup *****************
   685 ;; Defined at:
   686 ;;		line 72 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    3
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _setup
   716  00A6                     _setup:
   717  00A6                     l710:	
   718                           ;incstack = 0
   719                           ; Regs used in _setup: [wreg+status,2]
   720                           
   721                           
   722                           ;main.c: 73:     TRISAbits.TRISA5 = 1;
   723  00A6  1683               	bsf	3,5	;RP0=1, select bank1
   724  00A7  1303               	bcf	3,6	;RP1=0, select bank1
   725  00A8  1685               	bsf	5,5	;volatile
   726  00A9                     l712:
   727                           
   728                           ;main.c: 75:     TRISD = 0b00000000;
   729  00A9  0188               	clrf	8	;volatile
   730  00AA                     l714:
   731                           
   732                           ;main.c: 76:     TRISC = 0b00011000;
   733  00AA  3018               	movlw	24
   734  00AB  0087               	movwf	7	;volatile
   735  00AC                     l716:
   736                           
   737                           ;main.c: 79:     TRISB = 0b11111110;
   738  00AC  30FE               	movlw	254
   739  00AD  0086               	movwf	6	;volatile
   740                           
   741                           ;main.c: 81:     PORTB = 0;
   742  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   743  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   744  00B0  0186               	clrf	6	;volatile
   745                           
   746                           ;main.c: 82:     PORTC = 0;
   747  00B1  0187               	clrf	7	;volatile
   748                           
   749                           ;main.c: 83:     PORTD = 0;
   750  00B2  0188               	clrf	8	;volatile
   751                           
   752                           ;main.c: 84:     PORTE = 0;
   753  00B3  0189               	clrf	9	;volatile
   754  00B4                     l718:
   755                           
   756                           ;main.c: 86:     SSPIF = 0;
   757  00B4  118C               	bcf	12,3	;volatile
   758  00B5                     l720:
   759                           
   760                           ;main.c: 87:     SSPIE = 1;
   761  00B5  1683               	bsf	3,5	;RP0=1, select bank1
   762  00B6  1303               	bcf	3,6	;RP1=0, select bank1
   763  00B7  158C               	bsf	12,3	;volatile
   764  00B8                     l722:
   765                           
   766                           ;main.c: 88:     INTCON = 0b11101000;
   767  00B8  30E8               	movlw	232
   768  00B9  008B               	movwf	11	;volatile
   769  00BA                     l55:
   770  00BA  0008               	return
   771  00BB                     __end_of_setup:
   772                           
   773                           	psect	text3
   774  004C                     __ptext3:	
   775 ;; *************** function _ADC_con *****************
   776 ;; Defined at:
   777 ;;		line 12 in file "ADC.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  flag            1    wreg     unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  flag            1    5[COMMON] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         1       0       0       0       0
   793 ;;      Temps:          1       0       0       0       0
   794 ;;      Totals:         2       0       0       0       0
   795 ;;Total ram usage:        2 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:    3
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           
   806                           ;psect for function _ADC_con
   807  004C                     _ADC_con:
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _ADC_con: [wreg+status,2+status,0]
   811                           ;ADC_con@flag stored from wreg
   812  004C  00F5               	movwf	ADC_con@flag
   813  004D                     l734:
   814                           
   815                           ;ADC.c: 13:     ADCON1bits.ADFM = 0;
   816  004D  1683               	bsf	3,5	;RP0=1, select bank1
   817  004E  1303               	bcf	3,6	;RP1=0, select bank1
   818  004F  139F               	bcf	31,7	;volatile
   819  0050                     l736:
   820                           
   821                           ;ADC.c: 14:     ANSEL = 0b00000001;
   822  0050  3001               	movlw	1
   823  0051  1683               	bsf	3,5	;RP0=1, select bank3
   824  0052  1703               	bsf	3,6	;RP1=1, select bank3
   825  0053  0088               	movwf	8	;volatile
   826                           
   827                           ;ADC.c: 15:     INTCON = 0b11101000;
   828  0054  30E8               	movlw	232
   829  0055  008B               	movwf	11	;volatile
   830                           
   831                           ;ADC.c: 16:     ADCON0 = 0b01000001;
   832  0056  3041               	movlw	65
   833  0057  1283               	bcf	3,5	;RP0=0, select bank0
   834  0058  1303               	bcf	3,6	;RP1=0, select bank0
   835  0059  009F               	movwf	31	;volatile
   836  005A                     l738:
   837                           
   838                           ;ADC.c: 18:     PIE1bits.ADIE = 1;
   839  005A  1683               	bsf	3,5	;RP0=1, select bank1
   840  005B  1303               	bcf	3,6	;RP1=0, select bank1
   841  005C  170C               	bsf	12,6	;volatile
   842  005D                     l740:
   843                           
   844                           ;ADC.c: 19:     PIR1bits.ADIF = 0;
   845  005D  1283               	bcf	3,5	;RP0=0, select bank0
   846  005E  1303               	bcf	3,6	;RP1=0, select bank0
   847  005F  130C               	bcf	12,6	;volatile
   848  0060                     l742:
   849                           
   850                           ;ADC.c: 20:     if (flag == 1) {
   851  0060  0375               	decf	ADC_con@flag,w
   852  0061  1D03               	btfss	3,2
   853  0062  2864               	goto	u31
   854  0063  2865               	goto	u30
   855  0064                     u31:
   856  0064  286C               	goto	l82
   857  0065                     u30:
   858  0065                     l744:
   859                           
   860                           ;ADC.c: 21:         _delay((unsigned long)((20)*(8000000/4000000.0)));
   861  0065  300D               	movlw	13
   862  0066  00F4               	movwf	??_ADC_con
   863  0067                     u97:
   864  0067  0BF4               	decfsz	??_ADC_con,f
   865  0068  2867               	goto	u97
   866  0069                     l746:
   867                           
   868                           ;ADC.c: 22:         ADCON0bits.GO = 1;
   869  0069  1283               	bcf	3,5	;RP0=0, select bank0
   870  006A  1303               	bcf	3,6	;RP1=0, select bank0
   871  006B  149F               	bsf	31,1	;volatile
   872  006C                     l748:
   873  006C                     l82:
   874  006C  0008               	return
   875  006D                     __end_of_ADC_con:
   876                           
   877                           	psect	text4
   878  001B                     __ptext4:	
   879 ;; *************** function _ISR *****************
   880 ;; Defined at:
   881 ;;		line 96 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0
   897 ;;      Temps:          3       0       0       0       0
   898 ;;      Totals:         3       0       0       0       0
   899 ;;Total ram usage:        3 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    2
   902 ;; This function calls:
   903 ;;		_spiRead
   904 ;;		_spiWrite
   905 ;; This function is called by:
   906 ;;		Interrupt level 1
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           
   911                           ;psect for function _ISR
   912  001B                     _ISR:
   913  001B                     i1l768:
   914                           
   915                           ;main.c: 97:     if (PIR1bits.ADIF == 1) {
   916  001B  1283               	bcf	3,5	;RP0=0, select bank0
   917  001C  1303               	bcf	3,6	;RP1=0, select bank0
   918  001D  1F0C               	btfss	12,6	;volatile
   919  001E  2820               	goto	u4_21
   920  001F  2821               	goto	u4_20
   921  0020                     u4_21:
   922  0020  282A               	goto	i1l776
   923  0021                     u4_20:
   924  0021                     i1l770:
   925                           
   926                           ;main.c: 98:         flag = 1;
   927  0021  01F9               	clrf	_flag
   928  0022  0AF9               	incf	_flag,f
   929  0023                     i1l772:
   930                           
   931                           ;main.c: 99:         valor_MSB = ADRESH;
   932  0023  081E               	movf	30,w	;volatile
   933  0024  00F1               	movwf	??_ISR
   934  0025  0871               	movf	??_ISR,w
   935  0026  00F7               	movwf	_valor_MSB
   936                           
   937                           ;main.c: 100:         PORTD = valor_MSB;
   938  0027  0877               	movf	_valor_MSB,w
   939  0028  0088               	movwf	8	;volatile
   940  0029                     i1l774:
   941                           
   942                           ;main.c: 101:         PIR1bits.ADIF = 0;
   943  0029  130C               	bcf	12,6	;volatile
   944  002A                     i1l776:
   945                           
   946                           ;main.c: 103:     if (PIR1bits.SSPIF == 1 && SSPSTATbits.BF == 1) {
   947  002A  1D8C               	btfss	12,3	;volatile
   948  002B  282D               	goto	u5_21
   949  002C  282E               	goto	u5_20
   950  002D                     u5_21:
   951  002D  2845               	goto	i1l62
   952  002E                     u5_20:
   953  002E                     i1l778:
   954  002E  1683               	bsf	3,5	;RP0=1, select bank1
   955  002F  1303               	bcf	3,6	;RP1=0, select bank1
   956  0030  1C14               	btfss	20,0	;volatile
   957  0031  2833               	goto	u6_21
   958  0032  2834               	goto	u6_20
   959  0033                     u6_21:
   960  0033  2845               	goto	i1l62
   961  0034                     u6_20:
   962  0034                     i1l780:
   963                           
   964                           ;main.c: 104:         count = spiRead();
   965  0034  120A  118A  20BB  120A  118A  	fcall	_spiRead
   966  0039  00F1               	movwf	??_ISR
   967  003A  0871               	movf	??_ISR,w
   968  003B  00F8               	movwf	_count
   969                           
   970                           ;main.c: 105:         spiWrite(valor_MSB);
   971  003C  0877               	movf	_valor_MSB,w
   972  003D  120A  118A  20CB  120A  118A  	fcall	_spiWrite
   973  0042                     i1l782:
   974                           
   975                           ;main.c: 106:         PIR1bits.SSPIF = 0;
   976  0042  1283               	bcf	3,5	;RP0=0, select bank0
   977  0043  1303               	bcf	3,6	;RP1=0, select bank0
   978  0044  118C               	bcf	12,3	;volatile
   979  0045                     i1l62:
   980  0045  0873               	movf	??_ISR+2,w
   981  0046  008A               	movwf	10
   982  0047  0E72               	swapf	??_ISR+1,w
   983  0048  0083               	movwf	3
   984  0049  0EFE               	swapf	btemp,f
   985  004A  0E7E               	swapf	btemp,w
   986  004B  0009               	retfie
   987  004C                     __end_of_ISR:
   988                           
   989                           	psect	intentry
   990  0004                     __pintentry:	
   991                           ;incstack = 0
   992                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   993                           
   994  0004                     interrupt_function:
   995  007E                     saved_w	set	btemp
   996  0004  00FE               	movwf	btemp
   997  0005  0E03               	swapf	3,w
   998  0006  00F2               	movwf	??_ISR+1
   999  0007  080A               	movf	10,w
  1000  0008  00F3               	movwf	??_ISR+2
  1001  0009  120A  118A  281B   	ljmp	_ISR
  1002                           
  1003                           	psect	text5
  1004  00CB                     __ptext5:	
  1005 ;; *************** function _spiWrite *****************
  1006 ;; Defined at:
  1007 ;;		line 35 in file "SPI.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  dat             1    wreg     unsigned char 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  dat             1    0[COMMON] unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         1       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0
  1024 ;;      Totals:         1       0       0       0       0
  1025 ;;Total ram usage:        1 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_ISR
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           
  1035                           ;psect for function _spiWrite
  1036  00CB                     _spiWrite:
  1037                           
  1038                           ;incstack = 0
  1039                           ; Regs used in _spiWrite: [wreg]
  1040                           ;spiWrite@dat stored from wreg
  1041  00CB  00F0               	movwf	spiWrite@dat
  1042  00CC                     i1l756:
  1043                           
  1044                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1045  00CC  0870               	movf	spiWrite@dat,w
  1046  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00CF  0093               	movwf	19	;volatile
  1049  00D0                     i1l108:
  1050  00D0  0008               	return
  1051  00D1                     __end_of_spiWrite:
  1052                           
  1053                           	psect	text6
  1054  00BB                     __ptext6:	
  1055 ;; *************** function _spiRead *****************
  1056 ;; Defined at:
  1057 ;;		line 48 in file "SPI.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      unsigned char 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0, pclath, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0
  1074 ;;      Totals:         0       0       0       0       0
  1075 ;;Total ram usage:        0 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    1
  1078 ;; This function calls:
  1079 ;;		_spiReceiveWait
  1080 ;; This function is called by:
  1081 ;;		_ISR
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _spiRead
  1087  00BB                     _spiRead:
  1088  00BB                     i1l750:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1091                           
  1092                           
  1093                           ;SPI.c: 50:     spiReceiveWait();
  1094  00BB  120A  118A  20C4  120A  118A  	fcall	_spiReceiveWait
  1095  00C0                     i1l752:
  1096                           
  1097                           ;SPI.c: 51:     return(SSPBUF);
  1098  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1099  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1100  00C2  0813               	movf	19,w	;volatile
  1101  00C3                     i1l116:
  1102  00C3  0008               	return
  1103  00C4                     __end_of_spiRead:
  1104                           
  1105                           	psect	text7
  1106  00C4                     __ptext7:	
  1107 ;; *************** function _spiReceiveWait *****************
  1108 ;; Defined at:
  1109 ;;		line 30 in file "SPI.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		None
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_spiRead
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           
  1137                           ;psect for function _spiReceiveWait
  1138  00C4                     _spiReceiveWait:
  1139  00C4                     i1l708:	
  1140                           ;incstack = 0
  1141                           ; Regs used in _spiReceiveWait: []
  1142                           
  1143  00C4                     i1l102:	
  1144                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  1145                           
  1146  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  1147  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  1148  00C6  1C14               	btfss	20,0	;volatile
  1149  00C7  28C9               	goto	u1_21
  1150  00C8  28CA               	goto	u1_20
  1151  00C9                     u1_21:
  1152  00C9  28C4               	goto	i1l102
  1153  00CA                     u1_20:
  1154  00CA                     i1l105:
  1155  00CA  0008               	return
  1156  00CB                     __end_of_spiReceiveWait:
  1157  007E                     btemp	set	126	;btemp
  1158  007E                     wtemp0	set	126
  1159                           
  1160                           	psect	config
  1161                           
  1162                           ;Config register CONFIG1 @ 0x2007
  1163                           ;	Oscillator Selection bits
  1164                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1165                           ;	Watchdog Timer Enable bit
  1166                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1167                           ;	Power-up Timer Enable bit
  1168                           ;	PWRTE = OFF, PWRT disabled
  1169                           ;	RE3/MCLR pin function select bit
  1170                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1171                           ;	Code Protection bit
  1172                           ;	CP = OFF, Program memory code protection is disabled
  1173                           ;	Data Code Protection bit
  1174                           ;	CPD = OFF, Data memory code protection is disabled
  1175                           ;	Brown Out Reset Selection bits
  1176                           ;	BOREN = OFF, BOR disabled
  1177                           ;	Internal External Switchover bit
  1178                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1179                           ;	Fail-Safe Clock Monitor Enabled bit
  1180                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1181                           ;	Low Voltage Programming Enable bit
  1182                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1183                           ;	In-Circuit Debugger Mode bit
  1184                           ;	DEBUG = 0x1, unprogrammed default
  1185  2007                     	org	8199
  1186  2007  20D5               	dw	8405
  1187                           
  1188                           ;Config register CONFIG2 @ 0x2008
  1189                           ;	Brown-out Reset Selection bit
  1190                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1191                           ;	Flash Program Memory Self Write Enable bits
  1192                           ;	WRT = OFF, Write protection off
  1193  2008                     	org	8200
  1194  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     471
                            _ADC_con
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_con                                              2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_con
   _setup
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1       1       5        1.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 01:02:06 2021

            _SSPSTATbits 0094                       l55 00BA                       l82 006C  
                     l98 0085                       l99 008A                       u30 0065  
                     u31 0064                       u80 0079                       u81 0078  
                     u97 0067                      l710 00A6                      l720 00B5  
                    l712 00A9                      l722 00B8                      l714 00AA  
                    l810 0070                      l740 005D                      l716 00AC  
                    l812 0079                      l820 008B                      l742 0060  
                    l734 004D                      l718 00B4                      l814 007D  
                    l822 0090                      l744 0065                      l736 0050  
                    l816 007F                      l824 0091                      l746 0069  
                    l738 005A                      l818 0084                      l826 0093  
                    l748 006C                      l828 009C                      _ISR 001B  
        __end_of_ADC_con 006D                     ?_ISR 0070                     i1l62 0045  
                   u1_20 00CA                     u1_21 00C9                     u4_20 0021  
                   u4_21 0020                     u5_20 002E                     u5_21 002D  
                   u6_20 0034                     u6_21 0033                     _flag 0079  
                   _main 008B                     btemp 007E                     start 000C  
                  ??_ISR 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l102 00C4                    i1l105 00CA                    i1l116 00C3  
                  i1l108 00D0                    i1l708 00C4                    i1l750 00BB  
                  i1l752 00C0                    i1l770 0021                    i1l756 00CC  
                  i1l780 0034                    i1l772 0023                    i1l782 0042  
                  i1l774 0029                    i1l776 002A                    i1l768 001B  
                  i1l778 002E                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _SSPIE 0463  
                  _SSPIF 0063                    _count 0078                    _setup 00A6  
                  pclath 000A          __end_of_spiInit 008B          __end_of_spiRead 00C4  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00A6                ??_ADC_con 0074                   ??_main 0077  
                 _ADCON0 001F                   _ADRESH 001E                   ?_setup 0070  
                 _INTCON 000B                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013             __pdataCOMMON 0079  
                 saved_w 007E         __end_of_spiWrite 00D1                ??_spiInit 0077  
              ??_spiRead 0070  __end_of__initialization 0017           __pcstackCOMMON 0070  
          __end_of_setup 00BB                  ??_setup 0074               __pmaintext 008B  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _ADC_con 004C  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 006D  
                __ptext2 00A6                  __ptext3 004C                  __ptext4 001B  
                __ptext5 00CB                  __ptext6 00BB                  __ptext7 00C4  
           __size_of_ISR 0031                  _spiInit 006D                  _spiRead 00BB  
   end_of_initialization 0017               ??_spiWrite 0070                _TRISAbits 0085  
            spiWrite@dat 0070           _spiReceiveWait 00C4            __pidataCOMMON 00D1  
    start_initialization 000F              __end_of_ISR 004C   __end_of_spiReceiveWait 00CB  
               ?_ADC_con 0070              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0074                 ?_spiRead 0070           __size_of_setup 0015  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C                _valor_MSB 0077  
            ADC_con@flag 0075               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of_ADC_con 0021         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 001B                 _spiWrite 00CB             spiInit@sType 0020  
      spiInit@sClockIdle 0075                 intlevel1 0000         ??_spiReceiveWait 0070  
