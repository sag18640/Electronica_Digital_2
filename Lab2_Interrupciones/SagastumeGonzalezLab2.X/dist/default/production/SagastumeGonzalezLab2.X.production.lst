

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 14:20:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataCOMMON
   369  0111                     __pidataCOMMON:
   370                           
   371                           ;initializer for _flag
   372  0111  3401               	retlw	1
   373                           
   374                           	psect	idataBANK0
   375  00F8                     __pidataBANK0:
   376                           
   377                           ;initializer for _tabla_7seg
   378  00F8  343F               	retlw	63
   379  00F9  3406               	retlw	6
   380  00FA  345B               	retlw	91
   381  00FB  344F               	retlw	79
   382  00FC  3466               	retlw	102
   383  00FD  346D               	retlw	109
   384  00FE  347D               	retlw	125
   385  00FF  3407               	retlw	7
   386  0100  347F               	retlw	127
   387  0101  346F               	retlw	111
   388  0102  3477               	retlw	119
   389  0103  347C               	retlw	124
   390  0104  3439               	retlw	57
   391  0105  345E               	retlw	94
   392  0106  3479               	retlw	121
   393  0107  3471               	retlw	113
   394  001F                     _ADCON0bits	set	31
   395  001F                     _ADCON0	set	31
   396  000B                     _INTCON	set	11
   397  001E                     _ADRESH	set	30
   398  000C                     _PIR1bits	set	12
   399  0001                     _TMR0	set	1
   400  000B                     _INTCONbits	set	11
   401  0009                     _PORTEbits	set	9
   402  0009                     _PORTE	set	9
   403  0007                     _PORTC	set	7
   404  0006                     _PORTB	set	6
   405  0006                     _PORTBbits	set	6
   406  0008                     _PORTD	set	8
   407  0081                     _OPTION_REG	set	129
   408  008C                     _PIE1bits	set	140
   409  009F                     _ADCON1bits	set	159
   410  0096                     _IOCBbits	set	150
   411  0089                     _TRISE	set	137
   412  0086                     _TRISB	set	134
   413  0087                     _TRISC	set	135
   414  0088                     _TRISD	set	136
   415  0188                     _ANSEL	set	392
   416                           
   417                           	psect	cinit
   418  000F                     start_initialization:	
   419                           ; #config settings
   420                           
   421  000F                     __initialization:
   422                           
   423                           ; Initialize objects allocated to BANK0
   424  000F  1383               	bcf	3,7	;select IRP bank0
   425  0010  3030               	movlw	low (__pdataBANK0+16)
   426  0011  00FD               	movwf	btemp+-1
   427  0012  3000               	movlw	high __pidataBANK0
   428  0013  00FE               	movwf	btemp
   429  0014  30F8               	movlw	low __pidataBANK0
   430  0015  00FF               	movwf	btemp+1
   431  0016  3020               	movlw	low __pdataBANK0
   432  0017  0084               	movwf	4
   433  0018  120A  118A  20D8  120A  118A  	fcall	init_ram0
   434                           
   435                           ; Initialize objects allocated to COMMON
   436  001D  120A  118A  2111  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   437  0022  00FD               	movwf	__pdataCOMMON& (0+127)
   438                           
   439                           ; Clear objects allocated to COMMON
   440  0023  01F7               	clrf	__pbssCOMMON& (0+127)
   441  0024  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   442  0025  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   443  0026  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   444  0027  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   445  0028  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   446  0029                     end_of_initialization:	
   447                           ;End of C runtime variable initialization code
   448                           
   449  0029                     __end_of__initialization:
   450  0029  0183               	clrf	3
   451  002A  120A  118A  2880   	ljmp	_main	;jump to C main() function
   452                           
   453                           	psect	bssCOMMON
   454  0077                     __pbssCOMMON:
   455  0077                     _seg2:
   456  0077                     	ds	1
   457  0078                     _seg1:
   458  0078                     	ds	1
   459  0079                     _comparacion:
   460  0079                     	ds	1
   461  007A                     _valor_LSB:
   462  007A                     	ds	1
   463  007B                     _valor_MSB:
   464  007B                     	ds	1
   465  007C                     _count:
   466  007C                     	ds	1
   467                           
   468                           	psect	dataCOMMON
   469  007D                     __pdataCOMMON:
   470  007D                     _flag:
   471  007D                     	ds	1
   472                           
   473                           	psect	dataBANK0
   474  0020                     __pdataBANK0:
   475  0020                     _tabla_7seg:
   476  0020                     	ds	16
   477                           
   478                           	psect	inittext
   479  00D4                     init_fetch0:	
   480                           ;	Called with low address in FSR and high address in W
   481                           
   482  00D4  087E               	movf	btemp,w
   483  00D5  008A               	movwf	10
   484  00D6  087F               	movf	btemp+1,w
   485  00D7  0082               	movwf	2
   486  00D8                     init_ram0:	
   487                           ;Called with:
   488                           ;	high address of idata address in btemp 
   489                           ;	low address of idata address in btemp+1 
   490                           ;	low address of data in FSR
   491                           ;	high address + 1 of data in btemp-1
   492                           
   493  00D8  120A  118A  20D4  120A  118A  	fcall	init_fetch0
   494  00DD  0080               	movwf	0
   495  00DE  0A84               	incf	4,f
   496  00DF  0804               	movf	4,w
   497  00E0  067D               	xorwf	btemp+-1,w
   498  00E1  1903               	btfsc	3,2
   499  00E2  3400               	retlw	0
   500  00E3  0AFF               	incf	btemp+1,f
   501  00E4  1903               	btfsc	3,2
   502  00E5  0AFE               	incf	btemp,f
   503  00E6  28D8               	goto	init_ram0
   504                           
   505                           	psect	cstackCOMMON
   506  0070                     __pcstackCOMMON:
   507  0070                     ?_setup:
   508  0070                     ?_Multiplex:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_ADC_con:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_main:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_ISR:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ??_ISR:	
   521                           ; 1 bytes @ 0x0
   522                           
   523                           
   524                           ; 1 bytes @ 0x0
   525  0070                     	ds	4
   526  0074                     ??_setup:
   527  0074                     ??_Multiplex:	
   528                           ; 1 bytes @ 0x4
   529                           
   530  0074                     ??_ADC_con:	
   531                           ; 1 bytes @ 0x4
   532                           
   533                           
   534                           ; 1 bytes @ 0x4
   535  0074                     	ds	1
   536  0075                     ADC_con@flag:
   537                           
   538                           ; 1 bytes @ 0x5
   539  0075                     	ds	1
   540  0076                     ??_main:
   541                           
   542                           ; 1 bytes @ 0x6
   543  0076                     	ds	1
   544                           
   545                           	psect	maintext
   546  0080                     __pmaintext:	
   547 ;;
   548 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   549 ;;
   550 ;; *************** function _main *****************
   551 ;; Defined at:
   552 ;;		line 59 in file "main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : B00/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0
   568 ;;      Temps:          1       0       0       0       0
   569 ;;      Totals:         1       0       0       0       0
   570 ;;Total ram usage:        1 bytes
   571 ;; Hardware stack levels required when called:    2
   572 ;; This function calls:
   573 ;;		_ADC_con
   574 ;;		_Multiplex
   575 ;;		_setup
   576 ;; This function is called by:
   577 ;;		Startup code after reset
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _main
   583  0080                     _main:
   584  0080                     l738:	
   585                           ;incstack = 0
   586                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   587                           
   588                           
   589                           ;main.c: 60:     setup();
   590  0080  120A  118A  20E7  120A  118A  	fcall	_setup
   591  0085                     l740:
   592                           
   593                           ;main.c: 61:     count = 0;
   594  0085  01FC               	clrf	_count
   595  0086                     l742:
   596                           
   597                           ;main.c: 62:     flag = 1;
   598  0086  01FD               	clrf	_flag
   599  0087  0AFD               	incf	_flag,f
   600  0088                     l744:
   601                           
   602                           ;main.c: 63:     Multiplex();
   603  0088  120A  118A  2108  120A  118A  	fcall	_Multiplex
   604  008D                     l746:
   605                           
   606                           ;main.c: 65:         ADC_con(flag);
   607  008D  087D               	movf	_flag,w
   608  008E  120A  118A  20B3  120A  118A  	fcall	_ADC_con
   609  0093                     l748:
   610                           
   611                           ;main.c: 66:         PORTD = count;
   612  0093  087C               	movf	_count,w
   613  0094  1283               	bcf	3,5	;RP0=0, select bank0
   614  0095  1303               	bcf	3,6	;RP1=0, select bank0
   615  0096  0088               	movwf	8	;volatile
   616  0097                     l750:
   617                           
   618                           ;main.c: 69:         seg1 = tabla_7seg[valor_MSB];
   619  0097  087B               	movf	_valor_MSB,w
   620  0098  3E20               	addlw	(low (_tabla_7seg| 0))& (0+255)
   621  0099  0084               	movwf	4
   622  009A  1383               	bcf	3,7	;select IRP bank0
   623  009B  0800               	movf	0,w
   624  009C  00F6               	movwf	??_main
   625  009D  0876               	movf	??_main,w
   626  009E  00F8               	movwf	_seg1
   627  009F                     l752:
   628                           
   629                           ;main.c: 70:         seg2 = tabla_7seg[valor_LSB];
   630  009F  087A               	movf	_valor_LSB,w
   631  00A0  3E20               	addlw	(low (_tabla_7seg| 0))& (0+255)
   632  00A1  0084               	movwf	4
   633  00A2  0800               	movf	0,w
   634  00A3  00F6               	movwf	??_main
   635  00A4  0876               	movf	??_main,w
   636  00A5  00F7               	movwf	_seg2
   637  00A6                     l754:
   638                           
   639                           ;main.c: 71:         if (comparacion > count) {
   640  00A6  0879               	movf	_comparacion,w
   641  00A7  027C               	subwf	_count,w
   642  00A8  1803               	skipnc
   643  00A9  28AB               	goto	u21
   644  00AA  28AC               	goto	u20
   645  00AB                     u21:
   646  00AB  28AE               	goto	l58
   647  00AC                     u20:
   648  00AC                     l756:
   649                           
   650                           ;main.c: 72:             PORTBbits.RB0 = 1;
   651  00AC  1406               	bsf	6,0	;volatile
   652                           
   653                           ;main.c: 73:         } else {
   654  00AD  288D               	goto	l746
   655  00AE                     l58:
   656                           
   657                           ;main.c: 74:             PORTBbits.RB0 = 0;
   658  00AE  1006               	bcf	6,0	;volatile
   659  00AF  288D               	goto	l746
   660  00B0  120A  118A  280C   	ljmp	start
   661  00B3                     __end_of_main:
   662                           
   663                           	psect	text1
   664  00E7                     __ptext1:	
   665 ;; *************** function _setup *****************
   666 ;; Defined at:
   667 ;;		line 85 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _setup
   697  00E7                     _setup:
   698  00E7                     l700:	
   699                           ;incstack = 0
   700                           ; Regs used in _setup: [wreg+status,2]
   701                           
   702                           
   703                           ;main.c: 86:     TRISD = 0b00000000;
   704  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   705  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   706  00E9  0188               	clrf	8	;volatile
   707                           
   708                           ;main.c: 87:     TRISC = 0b00000000;
   709  00EA  0187               	clrf	7	;volatile
   710  00EB                     l702:
   711                           
   712                           ;main.c: 88:     TRISB = 0b11111110;
   713  00EB  30FE               	movlw	254
   714  00EC  0086               	movwf	6	;volatile
   715  00ED                     l704:
   716                           
   717                           ;main.c: 89:     TRISE = 0b00000000;
   718  00ED  0189               	clrf	9	;volatile
   719  00EE                     l706:
   720                           
   721                           ;main.c: 95:     IOCBbits.IOCB6 = 1;
   722  00EE  1716               	bsf	22,6	;volatile
   723  00EF                     l708:
   724                           
   725                           ;main.c: 96:     IOCBbits.IOCB7 = 1;
   726  00EF  1796               	bsf	22,7	;volatile
   727  00F0                     l710:
   728                           
   729                           ;main.c: 97:     PORTB = 0;
   730  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   731  00F1  1303               	bcf	3,6	;RP1=0, select bank0
   732  00F2  0186               	clrf	6	;volatile
   733  00F3                     l712:
   734                           
   735                           ;main.c: 98:     PORTC = 0;
   736  00F3  0187               	clrf	7	;volatile
   737  00F4                     l714:
   738                           
   739                           ;main.c: 99:     PORTD = 0;
   740  00F4  0188               	clrf	8	;volatile
   741  00F5                     l716:
   742                           
   743                           ;main.c: 100:     PORTE = 0;
   744  00F5  0189               	clrf	9	;volatile
   745  00F6                     l718:
   746                           
   747                           ;main.c: 101:     PORTEbits.RE0 = 1;
   748  00F6  1409               	bsf	9,0	;volatile
   749  00F7                     l65:
   750  00F7  0008               	return
   751  00F8                     __end_of_setup:
   752                           
   753                           	psect	text2
   754  0108                     __ptext2:	
   755 ;; *************** function _Multiplex *****************
   756 ;; Defined at:
   757 ;;		line 12 in file "Multiplexado.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         0       0       0       0       0
   772 ;;      Locals:         0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0
   774 ;;      Totals:         0       0       0       0       0
   775 ;;Total ram usage:        0 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    1
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _Multiplex
   787  0108                     _Multiplex:
   788  0108                     l720:	
   789                           ;incstack = 0
   790                           ; Regs used in _Multiplex: [wreg]
   791                           
   792                           
   793                           ;Multiplexado.c: 13:     OPTION_REG= 0b10000111;
   794  0108  3087               	movlw	135
   795  0109  1683               	bsf	3,5	;RP0=1, select bank1
   796  010A  1303               	bcf	3,6	;RP1=0, select bank1
   797  010B  0081               	movwf	1	;volatile
   798                           
   799                           ;Multiplexado.c: 14:     TMR0=10;
   800  010C  300A               	movlw	10
   801  010D  1283               	bcf	3,5	;RP0=0, select bank0
   802  010E  1303               	bcf	3,6	;RP1=0, select bank0
   803  010F  0081               	movwf	1	;volatile
   804  0110                     l108:
   805  0110  0008               	return
   806  0111                     __end_of_Multiplex:
   807                           
   808                           	psect	text3
   809  00B3                     __ptext3:	
   810 ;; *************** function _ADC_con *****************
   811 ;; Defined at:
   812 ;;		line 14 in file "ADC.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  flag            1    wreg     unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  flag            1    5[COMMON] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          1       0       0       0       0
   829 ;;      Totals:         2       0       0       0       0
   830 ;;Total ram usage:        2 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _ADC_con
   842  00B3                     _ADC_con:
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _ADC_con: [wreg+status,2+status,0]
   846                           ;ADC_con@flag stored from wreg
   847  00B3  00F5               	movwf	ADC_con@flag
   848  00B4                     l722:
   849                           
   850                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
   851  00B4  1683               	bsf	3,5	;RP0=1, select bank1
   852  00B5  1303               	bcf	3,6	;RP1=0, select bank1
   853  00B6  139F               	bcf	31,7	;volatile
   854  00B7                     l724:
   855                           
   856                           ;ADC.c: 17:     ANSEL = 0b00000001;
   857  00B7  3001               	movlw	1
   858  00B8  1683               	bsf	3,5	;RP0=1, select bank3
   859  00B9  1703               	bsf	3,6	;RP1=1, select bank3
   860  00BA  0088               	movwf	8	;volatile
   861                           
   862                           ;ADC.c: 18:     INTCON = 0b11101000;
   863  00BB  30E8               	movlw	232
   864  00BC  008B               	movwf	11	;volatile
   865                           
   866                           ;ADC.c: 19:     ADCON0 = 0b01000001;
   867  00BD  3041               	movlw	65
   868  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   869  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   870  00C0  009F               	movwf	31	;volatile
   871  00C1                     l726:
   872                           
   873                           ;ADC.c: 21:     PIE1bits.ADIE = 1;
   874  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   875  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   876  00C3  170C               	bsf	12,6	;volatile
   877  00C4                     l728:
   878                           
   879                           ;ADC.c: 22:     PIR1bits.ADIF = 0;
   880  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   881  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   882  00C6  130C               	bcf	12,6	;volatile
   883  00C7                     l730:
   884                           
   885                           ;ADC.c: 23:     if (flag == 1) {
   886  00C7  0375               	decf	ADC_con@flag,w
   887  00C8  1D03               	btfss	3,2
   888  00C9  28CB               	goto	u11
   889  00CA  28CC               	goto	u10
   890  00CB                     u11:
   891  00CB  28D3               	goto	l101
   892  00CC                     u10:
   893  00CC                     l732:
   894                           
   895                           ;ADC.c: 24:         _delay((unsigned long)((20)*(8000000/4000000.0)));
   896  00CC  300D               	movlw	13
   897  00CD  00F4               	movwf	??_ADC_con
   898  00CE                     u117:
   899  00CE  0BF4               	decfsz	??_ADC_con,f
   900  00CF  28CE               	goto	u117
   901  00D0                     l734:
   902                           
   903                           ;ADC.c: 25:         ADCON0bits.GO = 1;
   904  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   905  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   906  00D2  149F               	bsf	31,1	;volatile
   907  00D3                     l736:
   908  00D3                     l101:
   909  00D3  0008               	return
   910  00D4                     __end_of_ADC_con:
   911                           
   912                           	psect	text4
   913  002D                     __ptext4:	
   914 ;; *************** function _ISR *****************
   915 ;; Defined at:
   916 ;;		line 111 in file "main.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0
   932 ;;      Temps:          4       0       0       0       0
   933 ;;      Totals:         4       0       0       0       0
   934 ;;Total ram usage:        4 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		Interrupt level 1
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _ISR
   945  002D                     _ISR:
   946  002D                     i1l758:
   947                           
   948                           ;main.c: 112:     if (INTCONbits.T0IF == 1) {
   949  002D  1D0B               	btfss	11,2	;volatile
   950  002E  2830               	goto	u3_21
   951  002F  2831               	goto	u3_20
   952  0030                     u3_21:
   953  0030  2847               	goto	i1l774
   954  0031                     u3_20:
   955  0031                     i1l760:
   956                           
   957                           ;main.c: 113:         TMR0 = 10;
   958  0031  300A               	movlw	10
   959  0032  1283               	bcf	3,5	;RP0=0, select bank0
   960  0033  1303               	bcf	3,6	;RP1=0, select bank0
   961  0034  0081               	movwf	1	;volatile
   962  0035                     i1l762:
   963                           
   964                           ;main.c: 114:         if (PORTEbits.RE0 == 1) {
   965  0035  1C09               	btfss	9,0	;volatile
   966  0036  2838               	goto	u4_21
   967  0037  2839               	goto	u4_20
   968  0038                     u4_21:
   969  0038  283E               	goto	i1l71
   970  0039                     u4_20:
   971  0039                     i1l764:
   972                           
   973                           ;main.c: 115:             PORTEbits.RE0 = 0;
   974  0039  1009               	bcf	9,0	;volatile
   975                           
   976                           ;main.c: 116:             PORTEbits.RE1 = 1;
   977  003A  1489               	bsf	9,1	;volatile
   978  003B                     i1l766:
   979                           
   980                           ;main.c: 117:             PORTC = seg2;
   981  003B  0877               	movf	_seg2,w
   982  003C  0087               	movwf	7	;volatile
   983                           
   984                           ;main.c: 118:         } else if (PORTEbits.RE1 == 1) {
   985  003D  2846               	goto	i1l772
   986  003E                     i1l71:
   987  003E  1C89               	btfss	9,1	;volatile
   988  003F  2841               	goto	u5_21
   989  0040  2842               	goto	u5_20
   990  0041                     u5_21:
   991  0041  2846               	goto	i1l772
   992  0042                     u5_20:
   993  0042                     i1l768:
   994                           
   995                           ;main.c: 119:             PORTEbits.RE1 = 0;
   996  0042  1089               	bcf	9,1	;volatile
   997                           
   998                           ;main.c: 120:             PORTEbits.RE0 = 1;
   999  0043  1409               	bsf	9,0	;volatile
  1000  0044                     i1l770:
  1001                           
  1002                           ;main.c: 121:             PORTC = seg1;
  1003  0044  0878               	movf	_seg1,w
  1004  0045  0087               	movwf	7	;volatile
  1005  0046                     i1l772:
  1006                           
  1007                           ;main.c: 123:         INTCONbits.T0IF = 0;
  1008  0046  110B               	bcf	11,2	;volatile
  1009  0047                     i1l774:
  1010                           
  1011                           ;main.c: 125:     if (PIR1bits.ADIF == 1) {
  1012  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0049  1F0C               	btfss	12,6	;volatile
  1015  004A  284C               	goto	u6_21
  1016  004B  284D               	goto	u6_20
  1017  004C                     u6_21:
  1018  004C  2865               	goto	i1l786
  1019  004D                     u6_20:
  1020  004D                     i1l776:
  1021                           
  1022                           ;main.c: 126:         flag = 1;
  1023  004D  01FD               	clrf	_flag
  1024  004E  0AFD               	incf	_flag,f
  1025  004F                     i1l778:
  1026                           
  1027                           ;main.c: 127:         valor_MSB = ADRESH >> 4;
  1028  004F  081E               	movf	30,w	;volatile
  1029  0050  00F0               	movwf	??_ISR
  1030  0051  3004               	movlw	4
  1031  0052                     u7_25:
  1032  0052  1003               	clrc
  1033  0053  0CF0               	rrf	??_ISR,f
  1034  0054  3EFF               	addlw	-1
  1035  0055  1D03               	skipz
  1036  0056  2852               	goto	u7_25
  1037  0057  0870               	movf	??_ISR,w
  1038  0058  00F1               	movwf	??_ISR+1
  1039  0059  0871               	movf	??_ISR+1,w
  1040  005A  00FB               	movwf	_valor_MSB
  1041  005B                     i1l780:
  1042                           
  1043                           ;main.c: 128:         valor_LSB = ADRESH & 0b00001111;
  1044  005B  081E               	movf	30,w	;volatile
  1045  005C  390F               	andlw	15
  1046  005D  00F0               	movwf	??_ISR
  1047  005E  0870               	movf	??_ISR,w
  1048  005F  00FA               	movwf	_valor_LSB
  1049  0060                     i1l782:
  1050                           
  1051                           ;main.c: 129:         comparacion = ADRESH;
  1052  0060  081E               	movf	30,w	;volatile
  1053  0061  00F0               	movwf	??_ISR
  1054  0062  0870               	movf	??_ISR,w
  1055  0063  00F9               	movwf	_comparacion
  1056  0064                     i1l784:
  1057                           
  1058                           ;main.c: 130:         PIR1bits.ADIF = 0;
  1059  0064  130C               	bcf	12,6	;volatile
  1060  0065                     i1l786:
  1061                           
  1062                           ;main.c: 132:     if (INTCONbits.RBIF == 1) {
  1063  0065  1C0B               	btfss	11,0	;volatile
  1064  0066  2868               	goto	u8_21
  1065  0067  2869               	goto	u8_20
  1066  0068                     u8_21:
  1067  0068  2879               	goto	i1l79
  1068  0069                     u8_20:
  1069  0069                     i1l788:
  1070                           
  1071                           ;main.c: 133:         if (PORTBbits.RB6 == 0) {
  1072  0069  1B06               	btfsc	6,6	;volatile
  1073  006A  286C               	goto	u9_21
  1074  006B  286D               	goto	u9_20
  1075  006C                     u9_21:
  1076  006C  2872               	goto	i1l76
  1077  006D                     u9_20:
  1078  006D                     i1l790:
  1079                           
  1080                           ;main.c: 134:             count++;
  1081  006D  3001               	movlw	1
  1082  006E  00F0               	movwf	??_ISR
  1083  006F  0870               	movf	??_ISR,w
  1084  0070  07FC               	addwf	_count,f
  1085                           
  1086                           ;main.c: 136:         } else if (PORTBbits.RB7 == 0) {
  1087  0071  2878               	goto	i1l794
  1088  0072                     i1l76:
  1089  0072  1B86               	btfsc	6,7	;volatile
  1090  0073  2875               	goto	u10_21
  1091  0074  2876               	goto	u10_20
  1092  0075                     u10_21:
  1093  0075  2878               	goto	i1l794
  1094  0076                     u10_20:
  1095  0076                     i1l792:
  1096                           
  1097                           ;main.c: 137:             count--;
  1098  0076  3001               	movlw	1
  1099  0077  02FC               	subwf	_count,f
  1100  0078                     i1l794:
  1101                           
  1102                           ;main.c: 140:         INTCONbits.RBIF = 0;
  1103  0078  100B               	bcf	11,0	;volatile
  1104  0079                     i1l79:
  1105  0079  0873               	movf	??_ISR+3,w
  1106  007A  008A               	movwf	10
  1107  007B  0E72               	swapf	??_ISR+2,w
  1108  007C  0083               	movwf	3
  1109  007D  0EFE               	swapf	btemp,f
  1110  007E  0E7E               	swapf	btemp,w
  1111  007F  0009               	retfie
  1112  0080                     __end_of_ISR:
  1113  007E                     btemp	set	126	;btemp
  1114  007E                     wtemp0	set	126
  1115                           
  1116                           	psect	intentry
  1117  0004                     __pintentry:	
  1118                           ;incstack = 0
  1119                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1120                           
  1121  0004                     interrupt_function:
  1122  007E                     saved_w	set	btemp
  1123  0004  00FE               	movwf	btemp
  1124  0005  0E03               	swapf	3,w
  1125  0006  00F2               	movwf	??_ISR+2
  1126  0007  080A               	movf	10,w
  1127  0008  00F3               	movwf	??_ISR+3
  1128  0009  120A  118A  282D   	ljmp	_ISR
  1129                           
  1130                           	psect	config
  1131                           
  1132                           ;Config register CONFIG1 @ 0x2007
  1133                           ;	Oscillator Selection bits
  1134                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1135                           ;	Watchdog Timer Enable bit
  1136                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1137                           ;	Power-up Timer Enable bit
  1138                           ;	PWRTE = OFF, PWRT disabled
  1139                           ;	RE3/MCLR pin function select bit
  1140                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1141                           ;	Code Protection bit
  1142                           ;	CP = OFF, Program memory code protection is disabled
  1143                           ;	Data Code Protection bit
  1144                           ;	CPD = OFF, Data memory code protection is disabled
  1145                           ;	Brown Out Reset Selection bits
  1146                           ;	BOREN = OFF, BOR disabled
  1147                           ;	Internal External Switchover bit
  1148                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1149                           ;	Fail-Safe Clock Monitor Enabled bit
  1150                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1151                           ;	Low Voltage Programming Enable bit
  1152                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1153                           ;	In-Circuit Debugger Mode bit
  1154                           ;	DEBUG = 0x1, unprogrammed default
  1155  2007                     	org	8199
  1156  2007  20D5               	dw	8405
  1157                           
  1158                           ;Config register CONFIG2 @ 0x2008
  1159                           ;	Brown-out Reset Selection bit
  1160                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1161                           ;	Flash Program Memory Self Write Enable bits
  1162                           ;	WRT = OFF, Write protection off
  1163  2008                     	org	8200
  1164  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_con

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              6 COMMON     1     1      0
                            _ADC_con
                          _Multiplex
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Multiplex                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_con                                              2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_con
   _Multiplex
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 14:20:16 2021

                      pc 0002                       l65 00F7                       l58 00AE  
                     u10 00CC                       u11 00CB                       u20 00AC  
                     u21 00AB                       fsr 0004                      l101 00D3  
                    l108 0110                      l700 00E7                      l710 00F0  
                    l702 00EB                      l720 0108                      l712 00F3  
                    l704 00ED                      l730 00C7                      l722 00B4  
                    l714 00F4                      l706 00EE                      l732 00CC  
                    l724 00B7                      l716 00F5                      l708 00EF  
                    l740 0085                      l734 00D0                      l726 00C1  
                    l718 00F6                      l750 0097                      l742 0086  
                    l736 00D3                      l728 00C4                      l752 009F  
                    l744 0088                      l754 00A6                      l746 008D  
                    l738 0080                      l756 00AC                      l748 0093  
                    u117 00CE                      _ISR 002D                      fsr0 0004  
                    indf 0000          __end_of_ADC_con 00D4                     ?_ISR 0070  
                   i1l71 003E                     i1l76 0072                     i1l79 0079  
                   _TMR0 0001                     u3_20 0031                     u3_21 0030  
                   u4_20 0039                     u4_21 0038                     u5_20 0042  
                   u5_21 0041                     u6_20 004D                     u6_21 004C  
                   u7_25 0052                     u8_20 0069                     u8_21 0068  
                   u9_20 006D                     u9_21 006C                     _flag 007D  
                   _seg1 0078                     _seg2 0077                     _main 0080  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l760 0031  
                  i1l770 0044                    i1l762 0035                    i1l780 005B  
                  i1l772 0046                    i1l764 0039                    i1l790 006D  
                  i1l782 0060                    i1l766 003B                    i1l774 0047  
                  i1l758 002D                    i1l792 0076                    i1l784 0064  
                  i1l776 004D                    i1l768 0042                    i1l794 0078  
                  i1l778 004F                    i1l786 0065                    i1l788 0069  
                  u10_20 0076                    u10_21 0075                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _count 007C                    _setup 00E7  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00B3                ??_ADC_con 0074  
                 ??_main 0076                   _ADCON0 001F                   _ADRESH 001E  
                 ?_setup 0070                   _INTCON 000B             __pdataCOMMON 007D  
     __size_of_Multiplex 0009                   saved_w 007E  __end_of__initialization 0029  
         __pcstackCOMMON 0070             __pidataBANK0 00F8            __end_of_setup 00F8  
                ??_setup 0074        __end_of_Multiplex 0111               __pmaintext 0080  
             __pintentry 0004                  _ADC_con 00B3                  __ptext1 00E7  
                __ptext2 0108                  __ptext3 00B3                  __ptext4 002D  
             _tabla_7seg 0020             __size_of_ISR 0053     end_of_initialization 0029  
              _PORTBbits 0006                _PORTEbits 0009            __pidataCOMMON 0111  
    start_initialization 000F              __end_of_ISR 0080               init_fetch0 00D4  
              _Multiplex 0108              __pdataBANK0 0020                 ?_ADC_con 0070  
            __pbssCOMMON 0077                ___latbits 0002               ?_Multiplex 0070  
         __size_of_setup 0011        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C                _valor_LSB 007A  
              _valor_MSB 007B              _comparacion 0079              ADC_con@flag 0075  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of_ADC_con 0021  
            ??_Multiplex 0074            __size_of_main 0033               _INTCONbits 000B  
               init_ram0 00D8                 intlevel1 0000               _OPTION_REG 0081  
