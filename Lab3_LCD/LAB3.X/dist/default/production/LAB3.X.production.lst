

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 20:43:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482                           
   483                           	psect	idataBANK1
   484  08BF                     __pidataBANK1:
   485                           
   486                           ;initializer for _turno
   487  08BF  3401               	retlw	1
   488                           
   489                           ;initializer for _flag
   490  08C0  3401               	retlw	1
   491                           
   492                           	psect	strings
   493  0800                     __pstrings:
   494  0800                     stringtab:
   495  0800                     __stringtab:
   496                           
   497                           ;	String table - string pointers are 1 byte each
   498  0800  1BFF               	btfsc	btemp+1,7
   499  0801  280A               	ljmp	stringcode
   500  0802  1383               	bcf	3,7
   501  0803  187F               	btfsc	btemp+1,0
   502  0804  1783               	bsf	3,7
   503  0805  0800               	movf	0,w
   504  0806  0A84               	incf	4,f
   505  0807  1903               	skipnz
   506  0808  0AFF               	incf	btemp+1,f
   507  0809  0008               	return
   508  080A                     stringcode:
   509  080A                     stringdir:
   510  080A  3008               	movlw	high stringdir
   511  080B  008A               	movwf	10
   512  080C  0804               	movf	4,w
   513  080D  0A84               	incf	4,f
   514  080E  0782               	addwf	2,f
   515  080F                     __stringbase:
   516  080F  3400               	retlw	0
   517  0810                     __end_of__stringtab:
   518  0810                     __powers_:
   519  0810  3400               	retlw	0
   520  0811  3400               	retlw	0
   521  0812  3480               	retlw	128
   522  0813  343F               	retlw	63
   523  0814  3400               	retlw	0
   524  0815  3400               	retlw	0
   525  0816  3420               	retlw	32
   526  0817  3441               	retlw	65
   527  0818  3400               	retlw	0
   528  0819  3400               	retlw	0
   529  081A  34C8               	retlw	200
   530  081B  3442               	retlw	66
   531  081C  3400               	retlw	0
   532  081D  3400               	retlw	0
   533  081E  347A               	retlw	122
   534  081F  3444               	retlw	68
   535  0820  3400               	retlw	0
   536  0821  3440               	retlw	64
   537  0822  341C               	retlw	28
   538  0823  3446               	retlw	70
   539  0824  3400               	retlw	0
   540  0825  3450               	retlw	80
   541  0826  34C3               	retlw	195
   542  0827  3447               	retlw	71
   543  0828  3400               	retlw	0
   544  0829  3424               	retlw	36
   545  082A  3474               	retlw	116
   546  082B  3449               	retlw	73
   547  082C  3480               	retlw	128
   548  082D  3496               	retlw	150
   549  082E  3418               	retlw	24
   550  082F  344B               	retlw	75
   551  0830  3420               	retlw	32
   552  0831  34BC               	retlw	188
   553  0832  34BE               	retlw	190
   554  0833  344C               	retlw	76
   555  0834  3428               	retlw	40
   556  0835  346B               	retlw	107
   557  0836  346E               	retlw	110
   558  0837  344E               	retlw	78
   559  0838  34F9               	retlw	249
   560  0839  3402               	retlw	2
   561  083A  3415               	retlw	21
   562  083B  3450               	retlw	80
   563  083C  34EC               	retlw	236
   564  083D  3478               	retlw	120
   565  083E  34AD               	retlw	173
   566  083F  3460               	retlw	96
   567  0840  34CA               	retlw	202
   568  0841  34F2               	retlw	242
   569  0842  3449               	retlw	73
   570  0843  3471               	retlw	113
   571  0844                     __end_of__powers_:
   572  0844                     __npowers_:
   573  0844  3400               	retlw	0
   574  0845  3400               	retlw	0
   575  0846  3480               	retlw	128
   576  0847  343F               	retlw	63
   577  0848  34CD               	retlw	205
   578  0849  34CC               	retlw	204
   579  084A  34CC               	retlw	204
   580  084B  343D               	retlw	61
   581  084C  340A               	retlw	10
   582  084D  34D7               	retlw	215
   583  084E  3423               	retlw	35
   584  084F  343C               	retlw	60
   585  0850  346F               	retlw	111
   586  0851  3412               	retlw	18
   587  0852  3483               	retlw	131
   588  0853  343A               	retlw	58
   589  0854  3417               	retlw	23
   590  0855  34B7               	retlw	183
   591  0856  34D1               	retlw	209
   592  0857  3438               	retlw	56
   593  0858  34AC               	retlw	172
   594  0859  34C5               	retlw	197
   595  085A  3427               	retlw	39
   596  085B  3437               	retlw	55
   597  085C  34BD               	retlw	189
   598  085D  3437               	retlw	55
   599  085E  3486               	retlw	134
   600  085F  3435               	retlw	53
   601  0860  3495               	retlw	149
   602  0861  34BF               	retlw	191
   603  0862  34D6               	retlw	214
   604  0863  3433               	retlw	51
   605  0864  3477               	retlw	119
   606  0865  34CC               	retlw	204
   607  0866  342B               	retlw	43
   608  0867  3432               	retlw	50
   609  0868  345F               	retlw	95
   610  0869  3470               	retlw	112
   611  086A  3489               	retlw	137
   612  086B  3430               	retlw	48
   613  086C  34FF               	retlw	255
   614  086D  34E6               	retlw	230
   615  086E  34DB               	retlw	219
   616  086F  342E               	retlw	46
   617  0870  3408               	retlw	8
   618  0871  34E5               	retlw	229
   619  0872  343C               	retlw	60
   620  0873  341E               	retlw	30
   621  0874  3460               	retlw	96
   622  0875  3442               	retlw	66
   623  0876  34A2               	retlw	162
   624  0877  340D               	retlw	13
   625  0878                     __end_of__npowers_:
   626  0878                     _dpowers:
   627  0878  3401               	retlw	1
   628  0879  3400               	retlw	0
   629  087A  3400               	retlw	0
   630  087B  3400               	retlw	0
   631  087C  340A               	retlw	10
   632  087D  3400               	retlw	0
   633  087E  3400               	retlw	0
   634  087F  3400               	retlw	0
   635  0880  3464               	retlw	100
   636  0881  3400               	retlw	0
   637  0882  3400               	retlw	0
   638  0883  3400               	retlw	0
   639  0884  34E8               	retlw	232
   640  0885  3403               	retlw	3
   641  0886  3400               	retlw	0
   642  0887  3400               	retlw	0
   643  0888  3410               	retlw	16
   644  0889  3427               	retlw	39
   645  088A  3400               	retlw	0
   646  088B  3400               	retlw	0
   647  088C  34A0               	retlw	160
   648  088D  3486               	retlw	134
   649  088E  3401               	retlw	1
   650  088F  3400               	retlw	0
   651  0890  3440               	retlw	64
   652  0891  3442               	retlw	66
   653  0892  340F               	retlw	15
   654  0893  3400               	retlw	0
   655  0894  3480               	retlw	128
   656  0895  3496               	retlw	150
   657  0896  3498               	retlw	152
   658  0897  3400               	retlw	0
   659  0898  3400               	retlw	0
   660  0899  34E1               	retlw	225
   661  089A  34F5               	retlw	245
   662  089B  3405               	retlw	5
   663  089C  3400               	retlw	0
   664  089D  34CA               	retlw	202
   665  089E  349A               	retlw	154
   666  089F  343B               	retlw	59
   667  08A0                     __end_of_dpowers:
   668  0019                     _TXREG	set	25
   669  000B                     _INTCONbits	set	11
   670  0009                     _PORTEbits	set	9
   671  001F                     _ADCON0bits	set	31
   672  001F                     _ADCON0	set	31
   673  000B                     _INTCON	set	11
   674  001A                     _RCREG	set	26
   675  0018                     _RCSTAbits	set	24
   676  001E                     _ADRESH	set	30
   677  000C                     _PIR1bits	set	12
   678  0006                     _PORTB	set	6
   679  0009                     _PORTE	set	9
   680  0008                     _PORTD	set	8
   681  0007                     _PORTC	set	7
   682  0099                     _SPBRG	set	153
   683  0098                     _TXSTAbits	set	152
   684  008C                     _PIE1bits	set	140
   685  009F                     _ADCON1bits	set	159
   686  0089                     _TRISE	set	137
   687  0087                     _TRISC	set	135
   688  0088                     _TRISD	set	136
   689  04C1                     _TRMT	set	1217
   690  0187                     _BAUDCTLbits	set	391
   691  0188                     _ANSEL	set	392
   692  08A0                     STR_1:
   693  08A0  3453               	retlw	83	;'S'
   694  08A1  3431               	retlw	49	;'1'
   695  08A2  343A               	retlw	58	;':'
   696  08A3  3420               	retlw	32	;' '
   697  08A4  3420               	retlw	32	;' '
   698  08A5  3420               	retlw	32	;' '
   699  08A6  3453               	retlw	83	;'S'
   700  08A7  3432               	retlw	50	;'2'
   701  08A8  343A               	retlw	58	;':'
   702  08A9  3420               	retlw	32	;' '
   703  08AA  3420               	retlw	32	;' '
   704  08AB  3420               	retlw	32	;' '
   705  08AC  3420               	retlw	32	;' '
   706  08AD  3453               	retlw	83	;'S'
   707  08AE  3433               	retlw	51	;'3'
   708  08AF  343A               	retlw	58	;':'
   709  08B0  3400               	retlw	0
   710  08B1                     STR_2:
   711  08B1  3425               	retlw	37	;'%'
   712  08B2  3433               	retlw	51	;'3'
   713  08B3  342E               	retlw	46	;'.'
   714  08B4  3432               	retlw	50	;'2'
   715  08B5  3466               	retlw	102	;'f'
   716  08B6  3456               	retlw	86	;'V'
   717  08B7  3400               	retlw	0
   718  08B8                     STR_5:
   719  08B8  3420               	retlw	32	;' '
   720  08B9  3420               	retlw	32	;' '
   721  08BA  3420               	retlw	32	;' '
   722  08BB  3400               	retlw	0
   723  08BC                     STR_4:
   724  08BC  3425               	retlw	37	;'%'
   725  08BD  3464               	retlw	100	;'d'
   726  08BE  3400               	retlw	0
   727  08B1                     
   728                           	psect	cinit
   729  000F                     start_initialization:	
   730                           ; #config settings
   731                           
   732  000F                     __initialization:
   733                           
   734                           ; Initialize objects allocated to BANK1
   735  000F  1683               	bsf	3,5	;RP0=1, select bank1
   736  0010  1303               	bcf	3,6	;RP1=0, select bank1
   737  0011  120A  158A  20BF  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   738  0016  00DD               	movwf	__pdataBANK1& (0+127)
   739  0017  120A  158A  20C0  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   740  001C  00DE               	movwf	(__pdataBANK1+1)& (0+127)
   741                           
   742                           ; Clear objects allocated to BANK3
   743  001D  1783               	bsf	3,7	;select IRP bank2
   744  001E  3090               	movlw	low __pbssBANK3
   745  001F  0084               	movwf	4
   746  0020  30A4               	movlw	low (__pbssBANK3+20)
   747  0021  160A  158A  2027  120A  118A  	fcall	clear_ram0
   748                           
   749                           ; Clear objects allocated to BANK1
   750  0026  1383               	bcf	3,7	;select IRP bank0
   751  0027  30CD               	movlw	low __pbssBANK1
   752  0028  0084               	movwf	4
   753  0029  30DD               	movlw	low (__pbssBANK1+16)
   754  002A  160A  158A  2027  120A  118A  	fcall	clear_ram0
   755                           
   756                           ; Clear objects allocated to BANK0
   757  002F  1283               	bcf	3,5	;RP0=0, select bank0
   758  0030  1303               	bcf	3,6	;RP1=0, select bank0
   759  0031  01EF               	clrf	__pbssBANK0& (0+127)
   760                           
   761                           ; Clear objects allocated to COMMON
   762  0032  01FA               	clrf	__pbssCOMMON& (0+127)
   763  0033                     end_of_initialization:	
   764                           ;End of C runtime variable initialization code
   765                           
   766  0033                     __end_of__initialization:
   767  0033  0183               	clrf	3
   768  0034  160A  158A  2EAF   	ljmp	_main	;jump to C main() function
   769                           
   770                           	psect	bssCOMMON
   771  007A                     __pbssCOMMON:
   772  007A                     _enviado:
   773  007A                     	ds	1
   774                           
   775                           	psect	bssBANK0
   776  006F                     __pbssBANK0:
   777  006F                     _retorno:
   778  006F                     	ds	1
   779                           
   780                           	psect	bssBANK1
   781  00CD                     __pbssBANK1:
   782  00CD                     _x:
   783  00CD                     	ds	4
   784  00D1                     _valor2:
   785  00D1                     	ds	4
   786  00D5                     _valor1:
   787  00D5                     	ds	4
   788  00D9                     _recibido:
   789  00D9                     	ds	1
   790  00DA                     _count:
   791  00DA                     	ds	1
   792  00DB                     _valor_AN1:
   793  00DB                     	ds	1
   794  00DC                     _valor_AN0:
   795  00DC                     	ds	1
   796                           
   797                           	psect	dataBANK1
   798  00DD                     __pdataBANK1:
   799  00DD                     _turno:
   800  00DD                     	ds	1
   801  00DE                     _flag:
   802  00DE                     	ds	1
   803                           
   804                           	psect	bssBANK3
   805  0190                     __pbssBANK3:
   806  0190                     _s:
   807  0190                     	ds	20
   808                           
   809                           	psect	clrtext
   810  1827                     clear_ram0:	
   811                           ;	Called with FSR containing the base address, and
   812                           ;	W with the last address+1
   813                           
   814  1827  0064               	clrwdt	;clear the watchdog before getting into this loop
   815  1828                     clrloop0:
   816  1828  0180               	clrf	0	;clear RAM location pointed to by FSR
   817  1829  0A84               	incf	4,f	;increment pointer
   818  182A  0604               	xorwf	4,w	;XOR with final address
   819  182B  1903               	btfsc	3,2	;have we reached the end yet?
   820  182C  3400               	retlw	0	;all done for this memory range, return
   821  182D  0604               	xorwf	4,w	;XOR again to restore value
   822  182E  2828               	goto	clrloop0	;do the next byte
   823                           
   824                           	psect	cstackBANK1
   825  00A0                     __pcstackBANK1:
   826  00A0                     ?___flsub:
   827  00A0                     ___flsub@a:	
   828                           ; 4 bytes @ 0x0
   829                           
   830                           
   831                           ; 4 bytes @ 0x0
   832  00A0                     	ds	4
   833  00A4                     ___flsub@b:
   834                           
   835                           ; 4 bytes @ 0x4
   836  00A4                     	ds	4
   837  00A8                     ?_sprintf:
   838  00A8                     sprintf@f:	
   839                           ; 2 bytes @ 0x8
   840                           
   841                           
   842                           ; 1 bytes @ 0x8
   843  00A8                     	ds	5
   844  00AD                     ??_sprintf:
   845                           
   846                           ; 1 bytes @ 0xD
   847  00AD                     	ds	5
   848  00B2                     _sprintf$1180:
   849                           
   850                           ; 4 bytes @ 0x12
   851  00B2                     	ds	4
   852  00B6                     sprintf@ap:
   853                           
   854                           ; 1 bytes @ 0x16
   855  00B6                     	ds	1
   856  00B7                     sprintf@flag:
   857                           
   858                           ; 2 bytes @ 0x17
   859  00B7                     	ds	2
   860  00B9                     sprintf@width:
   861                           
   862                           ; 2 bytes @ 0x19
   863  00B9                     	ds	2
   864  00BB                     sprintf@tmpval:
   865                           
   866                           ; 4 bytes @ 0x1B
   867  00BB                     	ds	4
   868  00BF                     sprintf@val:
   869                           
   870                           ; 4 bytes @ 0x1F
   871  00BF                     	ds	4
   872  00C3                     sprintf@eexp:
   873                           
   874                           ; 2 bytes @ 0x23
   875  00C3                     	ds	2
   876  00C5                     sprintf@fval:
   877                           
   878                           ; 4 bytes @ 0x25
   879  00C5                     	ds	4
   880  00C9                     sprintf@sp:
   881                           
   882                           ; 1 bytes @ 0x29
   883  00C9                     	ds	1
   884  00CA                     sprintf@prec:
   885                           
   886                           ; 2 bytes @ 0x2A
   887  00CA                     	ds	2
   888  00CC                     sprintf@c:
   889                           
   890                           ; 1 bytes @ 0x2C
   891  00CC                     	ds	1
   892                           
   893                           	psect	cstackCOMMON
   894  0070                     __pcstackCOMMON:
   895  0070                     ?_isdigit:
   896  0070                     ?_setup:	
   897                           ; 1 bit 
   898                           
   899  0070                     ?_Config_USARTT:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_recibir:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_Lcd_Init:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_Lcd_Clear:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_enviar:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_main:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_ISR:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ??_ISR:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_Lcd_Port:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_Lcd_Cmd:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_Lcd_Write_Char:	
   930                           ; 1 bytes @ 0x0
   931                           
   932                           
   933                           ; 1 bytes @ 0x0
   934  0070                     	ds	3
   935  0073                     ??_setup:
   936  0073                     ??_Config_USARTT:	
   937                           ; 1 bytes @ 0x3
   938                           
   939  0073                     ??_recibir:	
   940                           ; 1 bytes @ 0x3
   941                           
   942  0073                     ?_ADC_con:	
   943                           ; 1 bytes @ 0x3
   944                           
   945  0073                     ??_enviar:	
   946                           ; 1 bytes @ 0x3
   947                           
   948  0073                     ??_isdigit:	
   949                           ; 1 bytes @ 0x3
   950                           
   951  0073                     ??__tdiv_to_l_:	
   952                           ; 1 bytes @ 0x3
   953                           
   954  0073                     ??__div_to_l_:	
   955                           ; 1 bytes @ 0x3
   956                           
   957  0073                     ??_Lcd_Port:	
   958                           ; 1 bytes @ 0x3
   959                           
   960  0073                     ??___lldiv:	
   961                           ; 1 bytes @ 0x3
   962                           
   963  0073                     ??___fleq:	
   964                           ; 1 bytes @ 0x3
   965                           
   966  0073                     ??___flge:	
   967                           ; 1 bytes @ 0x3
   968                           
   969  0073                     ?__Umul8_16:	
   970                           ; 1 bytes @ 0x3
   971                           
   972  0073                     ?___wmul:	
   973                           ; 2 bytes @ 0x3
   974                           
   975  0073                     ?___awmod:	
   976                           ; 2 bytes @ 0x3
   977                           
   978  0073                     ?___lwmod:	
   979                           ; 2 bytes @ 0x3
   980                           
   981  0073                     ?___flneg:	
   982                           ; 2 bytes @ 0x3
   983                           
   984  0073                     ?___xxtofl:	
   985                           ; 4 bytes @ 0x3
   986                           
   987  0073                     ADC_con@turno:	
   988                           ; 4 bytes @ 0x3
   989                           
   990  0073                     Lcd_Port@a:	
   991                           ; 1 bytes @ 0x3
   992                           
   993  0073                     enviar@valor:	
   994                           ; 1 bytes @ 0x3
   995                           
   996  0073                     __Umul8_16@multiplicand:	
   997                           ; 1 bytes @ 0x3
   998                           
   999  0073                     _isdigit$1002:	
  1000                           ; 1 bytes @ 0x3
  1001                           
  1002  0073                     ___wmul@multiplier:	
  1003                           ; 1 bytes @ 0x3
  1004                           
  1005  0073                     ___awmod@divisor:	
  1006                           ; 2 bytes @ 0x3
  1007                           
  1008  0073                     ___lwmod@divisor:	
  1009                           ; 2 bytes @ 0x3
  1010                           
  1011  0073                     ___flneg@f1:	
  1012                           ; 2 bytes @ 0x3
  1013                           
  1014  0073                     ___xxtofl@val:	
  1015                           ; 4 bytes @ 0x3
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x3
  1019  0073                     	ds	1
  1020  0074                     ??_ADC_con:
  1021  0074                     ??_Lcd_Cmd:	
  1022                           ; 1 bytes @ 0x4
  1023                           
  1024  0074                     ??_Lcd_Write_Char:	
  1025                           ; 1 bytes @ 0x4
  1026                           
  1027  0074                     isdigit@c:	
  1028                           ; 1 bytes @ 0x4
  1029                           
  1030  0074                     ___lldiv@quotient:	
  1031                           ; 1 bytes @ 0x4
  1032                           
  1033  0074                     __div_to_l_@quot:	
  1034                           ; 4 bytes @ 0x4
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x4
  1038  0074                     	ds	1
  1039  0075                     ??__Umul8_16:
  1040  0075                     ADC_con@var:	
  1041                           ; 1 bytes @ 0x5
  1042                           
  1043  0075                     Lcd_Write_Char@a:	
  1044                           ; 1 bytes @ 0x5
  1045                           
  1046  0075                     ___wmul@multiplicand:	
  1047                           ; 1 bytes @ 0x5
  1048                           
  1049  0075                     ___awmod@dividend:	
  1050                           ; 2 bytes @ 0x5
  1051                           
  1052  0075                     ___lwmod@dividend:	
  1053                           ; 2 bytes @ 0x5
  1054                           
  1055                           
  1056                           ; 2 bytes @ 0x5
  1057  0075                     	ds	1
  1058  0076                     ?_Lcd_Write_String:
  1059  0076                     ADC_con@flag:	
  1060                           ; 1 bytes @ 0x6
  1061                           
  1062  0076                     Lcd_Cmd@a:	
  1063                           ; 1 bytes @ 0x6
  1064                           
  1065  0076                     Lcd_Write_String@a:	
  1066                           ; 1 bytes @ 0x6
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x6
  1070  0076                     	ds	1
  1071  0077                     ??_Lcd_Init:
  1072  0077                     ??_Lcd_Clear:	
  1073                           ; 1 bytes @ 0x7
  1074                           
  1075  0077                     ?_Lcd_Set_Cursor:	
  1076                           ; 1 bytes @ 0x7
  1077                           
  1078  0077                     ??___wmul:	
  1079                           ; 1 bytes @ 0x7
  1080                           
  1081  0077                     ??___awmod:	
  1082                           ; 1 bytes @ 0x7
  1083                           
  1084  0077                     ??___flneg:	
  1085                           ; 1 bytes @ 0x7
  1086                           
  1087  0077                     ??___lwmod:	
  1088                           ; 1 bytes @ 0x7
  1089                           
  1090  0077                     Lcd_Set_Cursor@b:	
  1091                           ; 1 bytes @ 0x7
  1092                           
  1093  0077                     ___wmul@product:	
  1094                           ; 1 bytes @ 0x7
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x7
  1098  0077                     	ds	1
  1099  0078                     ??_Lcd_Set_Cursor:
  1100  0078                     ___lldiv@counter:	
  1101                           ; 1 bytes @ 0x8
  1102                           
  1103  0078                     ___awmod@counter:	
  1104                           ; 1 bytes @ 0x8
  1105                           
  1106  0078                     __div_to_l_@cntr:	
  1107                           ; 1 bytes @ 0x8
  1108                           
  1109  0078                     ___lwmod@counter:	
  1110                           ; 1 bytes @ 0x8
  1111                           
  1112  0078                     Lcd_Write_String@i:	
  1113                           ; 1 bytes @ 0x8
  1114                           
  1115                           
  1116                           ; 2 bytes @ 0x8
  1117  0078                     	ds	1
  1118  0079                     ??___llmod:
  1119  0079                     ??___lwdiv:	
  1120                           ; 1 bytes @ 0x9
  1121                           
  1122  0079                     ___awmod@sign:	
  1123                           ; 1 bytes @ 0x9
  1124                           
  1125  0079                     __div_to_l_@exp1:	
  1126                           ; 1 bytes @ 0x9
  1127                           
  1128                           
  1129                           ; 1 bytes @ 0x9
  1130  0079                     	ds	1
  1131  007A                     ??___flsub:
  1132                           
  1133                           	psect	cstackBANK0
  1134  0020                     __pcstackBANK0:	
  1135                           ; 1 bytes @ 0xA
  1136                           
  1137  0020                     ?___fleq:
  1138  0020                     ?___flge:	
  1139                           ; 1 bit 
  1140                           
  1141  0020                     ??_Lcd_Write_String:	
  1142                           ; 1 bit 
  1143                           
  1144  0020                     ??___xxtofl:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0020                     ?___awdiv:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0020                     ?___lwdiv:	
  1151                           ; 2 bytes @ 0x0
  1152                           
  1153  0020                     ?__tdiv_to_l_:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156  0020                     ?__div_to_l_:	
  1157                           ; 4 bytes @ 0x0
  1158                           
  1159  0020                     ?___lldiv:	
  1160                           ; 4 bytes @ 0x0
  1161                           
  1162  0020                     Lcd_Set_Cursor@a:	
  1163                           ; 4 bytes @ 0x0
  1164                           
  1165  0020                     ___awdiv@divisor:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0020                     ___lwdiv@divisor:	
  1169                           ; 2 bytes @ 0x0
  1170                           
  1171  0020                     __Umul8_16@product:	
  1172                           ; 2 bytes @ 0x0
  1173                           
  1174  0020                     ___lldiv@divisor:	
  1175                           ; 2 bytes @ 0x0
  1176                           
  1177  0020                     __div_to_l_@f1:	
  1178                           ; 4 bytes @ 0x0
  1179                           
  1180  0020                     ___fleq@ff1:	
  1181                           ; 4 bytes @ 0x0
  1182                           
  1183  0020                     ___flge@ff1:	
  1184                           ; 4 bytes @ 0x0
  1185                           
  1186  0020                     __tdiv_to_l_@f1:	
  1187                           ; 4 bytes @ 0x0
  1188                           
  1189                           
  1190                           ; 4 bytes @ 0x0
  1191  0020                     	ds	1
  1192  0021                     Lcd_Set_Cursor@temp:
  1193                           
  1194                           ; 1 bytes @ 0x1
  1195  0021                     	ds	1
  1196  0022                     ___awdiv@dividend:
  1197  0022                     ___lwdiv@dividend:	
  1198                           ; 2 bytes @ 0x2
  1199                           
  1200  0022                     __Umul8_16@word_mpld:	
  1201                           ; 2 bytes @ 0x2
  1202                           
  1203                           
  1204                           ; 2 bytes @ 0x2
  1205  0022                     	ds	2
  1206  0024                     ??___awdiv:
  1207  0024                     __Umul8_16@multiplier:	
  1208                           ; 1 bytes @ 0x4
  1209                           
  1210  0024                     ___xxtofl@sign:	
  1211                           ; 1 bytes @ 0x4
  1212                           
  1213  0024                     ___lwdiv@quotient:	
  1214                           ; 1 bytes @ 0x4
  1215                           
  1216  0024                     ___lldiv@dividend:	
  1217                           ; 2 bytes @ 0x4
  1218                           
  1219  0024                     __div_to_l_@f2:	
  1220                           ; 4 bytes @ 0x4
  1221                           
  1222  0024                     ___fleq@ff2:	
  1223                           ; 4 bytes @ 0x4
  1224                           
  1225  0024                     ___flge@ff2:	
  1226                           ; 4 bytes @ 0x4
  1227                           
  1228  0024                     __tdiv_to_l_@f2:	
  1229                           ; 4 bytes @ 0x4
  1230                           
  1231                           
  1232                           ; 4 bytes @ 0x4
  1233  0024                     	ds	1
  1234  0025                     ___awdiv@counter:
  1235  0025                     ___xxtofl@exp:	
  1236                           ; 1 bytes @ 0x5
  1237                           
  1238                           
  1239                           ; 1 bytes @ 0x5
  1240  0025                     	ds	1
  1241  0026                     ___awdiv@sign:
  1242  0026                     ___lwdiv@counter:	
  1243                           ; 1 bytes @ 0x6
  1244                           
  1245  0026                     ___xxtofl@arg:	
  1246                           ; 1 bytes @ 0x6
  1247                           
  1248                           
  1249                           ; 4 bytes @ 0x6
  1250  0026                     	ds	1
  1251  0027                     ___awdiv@quotient:
  1252                           
  1253                           ; 2 bytes @ 0x7
  1254  0027                     	ds	1
  1255  0028                     ?___llmod:
  1256  0028                     __tdiv_to_l_@quot:	
  1257                           ; 4 bytes @ 0x8
  1258                           
  1259  0028                     ___llmod@divisor:	
  1260                           ; 4 bytes @ 0x8
  1261                           
  1262                           
  1263                           ; 4 bytes @ 0x8
  1264  0028                     	ds	2
  1265  002A                     ?___flmul:
  1266  002A                     ___flmul@b:	
  1267                           ; 4 bytes @ 0xA
  1268                           
  1269                           
  1270                           ; 4 bytes @ 0xA
  1271  002A                     	ds	2
  1272  002C                     __tdiv_to_l_@cntr:
  1273  002C                     ___llmod@dividend:	
  1274                           ; 1 bytes @ 0xC
  1275                           
  1276                           
  1277                           ; 4 bytes @ 0xC
  1278  002C                     	ds	1
  1279  002D                     __tdiv_to_l_@exp1:
  1280                           
  1281                           ; 1 bytes @ 0xD
  1282  002D                     	ds	1
  1283  002E                     ___flmul@a:
  1284                           
  1285                           ; 4 bytes @ 0xE
  1286  002E                     	ds	2
  1287  0030                     ___llmod@counter:
  1288                           
  1289                           ; 1 bytes @ 0x10
  1290  0030                     	ds	2
  1291  0032                     ??___flmul:
  1292                           
  1293                           ; 1 bytes @ 0x12
  1294  0032                     	ds	5
  1295  0037                     ___flmul@sign:
  1296                           
  1297                           ; 1 bytes @ 0x17
  1298  0037                     	ds	1
  1299  0038                     ___flmul@grs:
  1300                           
  1301                           ; 4 bytes @ 0x18
  1302  0038                     	ds	4
  1303  003C                     ___flmul@aexp:
  1304                           
  1305                           ; 1 bytes @ 0x1C
  1306  003C                     	ds	1
  1307  003D                     ___flmul@bexp:
  1308                           
  1309                           ; 1 bytes @ 0x1D
  1310  003D                     	ds	1
  1311  003E                     ___flmul@prod:
  1312                           
  1313                           ; 4 bytes @ 0x1E
  1314  003E                     	ds	4
  1315  0042                     ___flmul@temp:
  1316                           
  1317                           ; 2 bytes @ 0x22
  1318  0042                     	ds	2
  1319  0044                     ?_conversor:
  1320  0044                     ?_fround:	
  1321                           ; 4 bytes @ 0x24
  1322                           
  1323  0044                     ?_scale:	
  1324                           ; 4 bytes @ 0x24
  1325                           
  1326                           
  1327                           ; 4 bytes @ 0x24
  1328  0044                     	ds	4
  1329  0048                     ??_conversor:
  1330  0048                     ??_fround:	
  1331                           ; 1 bytes @ 0x28
  1332                           
  1333  0048                     ??_scale:	
  1334                           ; 1 bytes @ 0x28
  1335                           
  1336                           
  1337                           ; 1 bytes @ 0x28
  1338  0048                     	ds	4
  1339  004C                     conversor@val:
  1340                           
  1341                           ; 1 bytes @ 0x2C
  1342  004C                     	ds	3
  1343  004F                     _fround$1178:
  1344                           
  1345                           ; 4 bytes @ 0x2F
  1346  004F                     	ds	3
  1347  0052                     _scale$1179:
  1348                           
  1349                           ; 4 bytes @ 0x32
  1350  0052                     	ds	1
  1351  0053                     _fround$1177:
  1352                           
  1353                           ; 4 bytes @ 0x33
  1354  0053                     	ds	3
  1355  0056                     scale@scl:
  1356                           
  1357                           ; 1 bytes @ 0x36
  1358  0056                     	ds	1
  1359  0057                     ?___fltol:
  1360  0057                     fround@prec:	
  1361                           ; 4 bytes @ 0x37
  1362                           
  1363  0057                     ___fltol@f1:	
  1364                           ; 1 bytes @ 0x37
  1365                           
  1366                           
  1367                           ; 4 bytes @ 0x37
  1368  0057                     	ds	1
  1369  0058                     ?___fladd:
  1370  0058                     ___fladd@b:	
  1371                           ; 4 bytes @ 0x38
  1372                           
  1373                           
  1374                           ; 4 bytes @ 0x38
  1375  0058                     	ds	3
  1376  005B                     ??___fltol:
  1377                           
  1378                           ; 1 bytes @ 0x3B
  1379  005B                     	ds	1
  1380  005C                     ___fladd@a:
  1381                           
  1382                           ; 4 bytes @ 0x3C
  1383  005C                     	ds	4
  1384  0060                     ??___fladd:
  1385  0060                     ___fltol@sign1:	
  1386                           ; 1 bytes @ 0x40
  1387                           
  1388                           
  1389                           ; 1 bytes @ 0x40
  1390  0060                     	ds	1
  1391  0061                     ___fltol@exp1:
  1392                           
  1393                           ; 1 bytes @ 0x41
  1394  0061                     	ds	7
  1395  0068                     ___fladd@signs:
  1396                           
  1397                           ; 1 bytes @ 0x48
  1398  0068                     	ds	1
  1399  0069                     ___fladd@aexp:
  1400                           
  1401                           ; 1 bytes @ 0x49
  1402  0069                     	ds	1
  1403  006A                     ___fladd@bexp:
  1404                           
  1405                           ; 1 bytes @ 0x4A
  1406  006A                     	ds	1
  1407  006B                     ___fladd@grs:
  1408                           
  1409                           ; 1 bytes @ 0x4B
  1410  006B                     	ds	1
  1411  006C                     ??_main:
  1412                           
  1413                           ; 1 bytes @ 0x4C
  1414  006C                     	ds	3
  1415                           
  1416                           	psect	maintext
  1417  1EAF                     __pmaintext:	
  1418 ;;
  1419 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1420 ;;
  1421 ;; *************** function _main *****************
  1422 ;; Defined at:
  1423 ;;		line 62 in file "main.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : B00/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1437 ;;      Params:         0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0
  1439 ;;      Temps:          0       3       0       0       0
  1440 ;;      Totals:         0       3       0       0       0
  1441 ;;Total ram usage:        3 bytes
  1442 ;; Hardware stack levels required when called:    5
  1443 ;; This function calls:
  1444 ;;		_ADC_con
  1445 ;;		_Config_USARTT
  1446 ;;		_Lcd_Clear
  1447 ;;		_Lcd_Init
  1448 ;;		_Lcd_Set_Cursor
  1449 ;;		_Lcd_Write_String
  1450 ;;		_conversor
  1451 ;;		_enviar
  1452 ;;		_recibir
  1453 ;;		_setup
  1454 ;;		_sprintf
  1455 ;; This function is called by:
  1456 ;;		Startup code after reset
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _main
  1462  1EAF                     _main:
  1463  1EAF                     l4423:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1466                           
  1467                           
  1468                           ;main.c: 63:     setup();
  1469  1EAF  160A  158A  2058  160A  158A  	fcall	_setup
  1470                           
  1471                           ;main.c: 64:     Config_USARTT();
  1472  1EB4  160A  158A  2047  160A  158A  	fcall	_Config_USARTT
  1473  1EB9                     l4425:
  1474                           
  1475                           ;main.c: 65:     recibir();
  1476  1EB9  160A  158A  202F  160A  158A  	fcall	_recibir
  1477  1EBE                     l4427:
  1478                           
  1479                           ;main.c: 66:     Lcd_Init();
  1480  1EBE  160A  158A  2188  160A  158A  	fcall	_Lcd_Init
  1481  1EC3                     l4429:
  1482                           
  1483                           ;main.c: 67:     Lcd_Clear();
  1484  1EC3  160A  158A  203A  160A  158A  	fcall	_Lcd_Clear
  1485  1EC8                     l4431:
  1486                           
  1487                           ;main.c: 69:         Lcd_Set_Cursor(1, 1);
  1488  1EC8  01F7               	clrf	Lcd_Set_Cursor@b
  1489  1EC9  0AF7               	incf	Lcd_Set_Cursor@b,f
  1490  1ECA  3001               	movlw	1
  1491  1ECB  160A  158A  20C3  160A  158A  	fcall	_Lcd_Set_Cursor
  1492  1ED0                     l4433:
  1493                           
  1494                           ;main.c: 70:         Lcd_Write_String("S1:   S2:    S3:");
  1495  1ED0  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1496  1ED1  00F6               	movwf	Lcd_Write_String@a
  1497  1ED2  3080               	movlw	128
  1498  1ED3  00F7               	movwf	Lcd_Write_String@a+1
  1499  1ED4  160A  158A  220B  160A  158A  	fcall	_Lcd_Write_String
  1500  1ED9                     l4435:
  1501                           
  1502                           ;main.c: 71:         retorno = ADC_con(flag, turno);
  1503  1ED9  1683               	bsf	3,5	;RP0=1, select bank1
  1504  1EDA  1303               	bcf	3,6	;RP1=0, select bank1
  1505  1EDB  085D               	movf	_turno^(0+128),w
  1506  1EDC  1283               	bcf	3,5	;RP0=0, select bank0
  1507  1EDD  1303               	bcf	3,6	;RP1=0, select bank0
  1508  1EDE  00EC               	movwf	??_main
  1509  1EDF  086C               	movf	??_main,w
  1510  1EE0  00F3               	movwf	ADC_con@turno
  1511  1EE1  1683               	bsf	3,5	;RP0=1, select bank1
  1512  1EE2  1303               	bcf	3,6	;RP1=0, select bank1
  1513  1EE3  085E               	movf	_flag^(0+128),w
  1514  1EE4  160A  158A  214C  160A  158A  	fcall	_ADC_con
  1515  1EE9  1283               	bcf	3,5	;RP0=0, select bank0
  1516  1EEA  1303               	bcf	3,6	;RP1=0, select bank0
  1517  1EEB  00ED               	movwf	??_main+1
  1518  1EEC  086D               	movf	??_main+1,w
  1519  1EED  00EF               	movwf	_retorno
  1520  1EEE                     l4437:
  1521                           
  1522                           ;main.c: 72:         valor1 = conversor(valor_AN0);
  1523  1EEE  1683               	bsf	3,5	;RP0=1, select bank1
  1524  1EEF  1303               	bcf	3,6	;RP1=0, select bank1
  1525  1EF0  085C               	movf	_valor_AN0^(0+128),w
  1526  1EF1  160A  118A  2005  160A  158A  	fcall	_conversor
  1527  1EF6  1283               	bcf	3,5	;RP0=0, select bank0
  1528  1EF7  1303               	bcf	3,6	;RP1=0, select bank0
  1529  1EF8  0847               	movf	?_conversor+3,w
  1530  1EF9  1683               	bsf	3,5	;RP0=1, select bank1
  1531  1EFA  1303               	bcf	3,6	;RP1=0, select bank1
  1532  1EFB  00D8               	movwf	(_valor1+3)^(0+128)
  1533  1EFC  1283               	bcf	3,5	;RP0=0, select bank0
  1534  1EFD  1303               	bcf	3,6	;RP1=0, select bank0
  1535  1EFE  0846               	movf	?_conversor+2,w
  1536  1EFF  1683               	bsf	3,5	;RP0=1, select bank1
  1537  1F00  1303               	bcf	3,6	;RP1=0, select bank1
  1538  1F01  00D7               	movwf	(_valor1+2)^(0+128)
  1539  1F02  1283               	bcf	3,5	;RP0=0, select bank0
  1540  1F03  1303               	bcf	3,6	;RP1=0, select bank0
  1541  1F04  0845               	movf	?_conversor+1,w
  1542  1F05  1683               	bsf	3,5	;RP0=1, select bank1
  1543  1F06  1303               	bcf	3,6	;RP1=0, select bank1
  1544  1F07  00D6               	movwf	(_valor1+1)^(0+128)
  1545  1F08  1283               	bcf	3,5	;RP0=0, select bank0
  1546  1F09  1303               	bcf	3,6	;RP1=0, select bank0
  1547  1F0A  0844               	movf	?_conversor,w
  1548  1F0B  1683               	bsf	3,5	;RP0=1, select bank1
  1549  1F0C  1303               	bcf	3,6	;RP1=0, select bank1
  1550  1F0D  00D5               	movwf	_valor1^(0+128)
  1551  1F0E                     l4439:
  1552                           
  1553                           ;main.c: 73:         valor2 = conversor(valor_AN1);
  1554  1F0E  085B               	movf	_valor_AN1^(0+128),w
  1555  1F0F  160A  118A  2005  160A  158A  	fcall	_conversor
  1556  1F14  1283               	bcf	3,5	;RP0=0, select bank0
  1557  1F15  1303               	bcf	3,6	;RP1=0, select bank0
  1558  1F16  0847               	movf	?_conversor+3,w
  1559  1F17  1683               	bsf	3,5	;RP0=1, select bank1
  1560  1F18  1303               	bcf	3,6	;RP1=0, select bank1
  1561  1F19  00D4               	movwf	(_valor2+3)^(0+128)
  1562  1F1A  1283               	bcf	3,5	;RP0=0, select bank0
  1563  1F1B  1303               	bcf	3,6	;RP1=0, select bank0
  1564  1F1C  0846               	movf	?_conversor+2,w
  1565  1F1D  1683               	bsf	3,5	;RP0=1, select bank1
  1566  1F1E  1303               	bcf	3,6	;RP1=0, select bank1
  1567  1F1F  00D3               	movwf	(_valor2+2)^(0+128)
  1568  1F20  1283               	bcf	3,5	;RP0=0, select bank0
  1569  1F21  1303               	bcf	3,6	;RP1=0, select bank0
  1570  1F22  0845               	movf	?_conversor+1,w
  1571  1F23  1683               	bsf	3,5	;RP0=1, select bank1
  1572  1F24  1303               	bcf	3,6	;RP1=0, select bank1
  1573  1F25  00D2               	movwf	(_valor2+1)^(0+128)
  1574  1F26  1283               	bcf	3,5	;RP0=0, select bank0
  1575  1F27  1303               	bcf	3,6	;RP1=0, select bank0
  1576  1F28  0844               	movf	?_conversor,w
  1577  1F29  1683               	bsf	3,5	;RP0=1, select bank1
  1578  1F2A  1303               	bcf	3,6	;RP1=0, select bank1
  1579  1F2B  00D1               	movwf	_valor2^(0+128)
  1580  1F2C                     l4441:
  1581                           
  1582                           ;main.c: 74:         Lcd_Set_Cursor(2, 1);
  1583  1F2C  01F7               	clrf	Lcd_Set_Cursor@b
  1584  1F2D  0AF7               	incf	Lcd_Set_Cursor@b,f
  1585  1F2E  3002               	movlw	2
  1586  1F2F  160A  158A  20C3  160A  158A  	fcall	_Lcd_Set_Cursor
  1587  1F34                     l4443:
  1588                           
  1589                           ;main.c: 75:         sprintf(s, "%3.2fV", valor1);
  1590  1F34  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1591  1F35  1283               	bcf	3,5	;RP0=0, select bank0
  1592  1F36  1303               	bcf	3,6	;RP1=0, select bank0
  1593  1F37  00EC               	movwf	??_main
  1594  1F38  086C               	movf	??_main,w
  1595  1F39  1683               	bsf	3,5	;RP0=1, select bank1
  1596  1F3A  1303               	bcf	3,6	;RP1=0, select bank1
  1597  1F3B  00A8               	movwf	sprintf@f^(0+128)
  1598  1F3C  0858               	movf	(_valor1+3)^(0+128),w
  1599  1F3D  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1600  1F3E  0857               	movf	(_valor1+2)^(0+128),w
  1601  1F3F  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1602  1F40  0856               	movf	(_valor1+1)^(0+128),w
  1603  1F41  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1604  1F42  0855               	movf	_valor1^(0+128),w
  1605  1F43  00A9               	movwf	(?_sprintf^(0+128)+1)
  1606  1F44  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1607  1F45  160A  118A  24F6  160A  158A  	fcall	_sprintf
  1608  1F4A                     l4445:
  1609                           
  1610                           ;main.c: 76:         Lcd_Write_String(s);
  1611  1F4A  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1612  1F4B  00F6               	movwf	Lcd_Write_String@a
  1613  1F4C  3001               	movlw	1
  1614  1F4D  00F7               	movwf	Lcd_Write_String@a+1
  1615  1F4E  160A  158A  220B  160A  158A  	fcall	_Lcd_Write_String
  1616  1F53                     l4447:
  1617                           
  1618                           ;main.c: 78:         Lcd_Set_Cursor(2, 7);
  1619  1F53  3007               	movlw	7
  1620  1F54  1283               	bcf	3,5	;RP0=0, select bank0
  1621  1F55  1303               	bcf	3,6	;RP1=0, select bank0
  1622  1F56  00EC               	movwf	??_main
  1623  1F57  086C               	movf	??_main,w
  1624  1F58  00F7               	movwf	Lcd_Set_Cursor@b
  1625  1F59  3002               	movlw	2
  1626  1F5A  160A  158A  20C3  160A  158A  	fcall	_Lcd_Set_Cursor
  1627  1F5F                     l4449:
  1628                           
  1629                           ;main.c: 79:         sprintf(s, "%3.2fV", valor2);
  1630  1F5F  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1631  1F60  1283               	bcf	3,5	;RP0=0, select bank0
  1632  1F61  1303               	bcf	3,6	;RP1=0, select bank0
  1633  1F62  00EC               	movwf	??_main
  1634  1F63  086C               	movf	??_main,w
  1635  1F64  1683               	bsf	3,5	;RP0=1, select bank1
  1636  1F65  1303               	bcf	3,6	;RP1=0, select bank1
  1637  1F66  00A8               	movwf	sprintf@f^(0+128)
  1638  1F67  0854               	movf	(_valor2+3)^(0+128),w
  1639  1F68  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1640  1F69  0853               	movf	(_valor2+2)^(0+128),w
  1641  1F6A  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1642  1F6B  0852               	movf	(_valor2+1)^(0+128),w
  1643  1F6C  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1644  1F6D  0851               	movf	_valor2^(0+128),w
  1645  1F6E  00A9               	movwf	(?_sprintf^(0+128)+1)
  1646  1F6F  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1647  1F70  160A  118A  24F6  160A  158A  	fcall	_sprintf
  1648  1F75                     l4451:
  1649                           
  1650                           ;main.c: 80:         Lcd_Write_String(s);
  1651  1F75  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1652  1F76  00F6               	movwf	Lcd_Write_String@a
  1653  1F77  3001               	movlw	1
  1654  1F78  00F7               	movwf	Lcd_Write_String@a+1
  1655  1F79  160A  158A  220B  160A  158A  	fcall	_Lcd_Write_String
  1656  1F7E                     l4453:
  1657                           
  1658                           ;main.c: 81:                 enviar(s);
  1659  1F7E  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1660  1F7F  160A  158A  21C9  160A  158A  	fcall	_enviar
  1661  1F84                     l4455:
  1662                           
  1663                           ;main.c: 82:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1664  1F84  3004               	movlw	4
  1665  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  1666  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  1667  1F87  00EE               	movwf	??_main+2
  1668  1F88  300C               	movlw	12
  1669  1F89  00ED               	movwf	??_main+1
  1670  1F8A  3033               	movlw	51
  1671  1F8B  00EC               	movwf	??_main
  1672  1F8C                     u7487:
  1673  1F8C  0BEC               	decfsz	??_main,f
  1674  1F8D  2F8C               	goto	u7487
  1675  1F8E  0BED               	decfsz	??_main+1,f
  1676  1F8F  2F8C               	goto	u7487
  1677  1F90  0BEE               	decfsz	??_main+2,f
  1678  1F91  2F8C               	goto	u7487
  1679  1F92                     l4457:
  1680                           
  1681                           ;main.c: 83:         if (recibido == 0x2B) {
  1682  1F92  302B               	movlw	43
  1683  1F93  1683               	bsf	3,5	;RP0=1, select bank1
  1684  1F94  1303               	bcf	3,6	;RP1=0, select bank1
  1685  1F95  0659               	xorwf	_recibido^(0+128),w
  1686  1F96  1D03               	btfss	3,2
  1687  1F97  2F99               	goto	u7451
  1688  1F98  2F9A               	goto	u7450
  1689  1F99                     u7451:
  1690  1F99  2FA4               	goto	l4463
  1691  1F9A                     u7450:
  1692  1F9A                     l4459:
  1693                           
  1694                           ;main.c: 84:             count++;
  1695  1F9A  3001               	movlw	1
  1696  1F9B  1283               	bcf	3,5	;RP0=0, select bank0
  1697  1F9C  1303               	bcf	3,6	;RP1=0, select bank0
  1698  1F9D  00EC               	movwf	??_main
  1699  1F9E  086C               	movf	??_main,w
  1700  1F9F  1683               	bsf	3,5	;RP0=1, select bank1
  1701  1FA0  1303               	bcf	3,6	;RP1=0, select bank1
  1702  1FA1  07DA               	addwf	_count^(0+128),f
  1703  1FA2                     l4461:
  1704                           
  1705                           ;main.c: 85:             recibido = 0;
  1706  1FA2  01D9               	clrf	_recibido^(0+128)
  1707                           
  1708                           ;main.c: 86:         } else if (recibido == 0x2D) {
  1709  1FA3  2FAD               	goto	l4469
  1710  1FA4                     l4463:
  1711  1FA4  302D               	movlw	45
  1712  1FA5  0659               	xorwf	_recibido^(0+128),w
  1713  1FA6  1D03               	btfss	3,2
  1714  1FA7  2FA9               	goto	u7461
  1715  1FA8  2FAA               	goto	u7460
  1716  1FA9                     u7461:
  1717  1FA9  2FAD               	goto	l4469
  1718  1FAA                     u7460:
  1719  1FAA                     l4465:
  1720                           
  1721                           ;main.c: 87:             count--;
  1722  1FAA  3001               	movlw	1
  1723  1FAB  02DA               	subwf	_count^(0+128),f
  1724  1FAC  2FA2               	goto	l4461
  1725  1FAD                     l4469:
  1726                           
  1727                           ;main.c: 90:         sprintf(s, "%d", count);
  1728  1FAD  30AD               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1729  1FAE  1283               	bcf	3,5	;RP0=0, select bank0
  1730  1FAF  1303               	bcf	3,6	;RP1=0, select bank0
  1731  1FB0  00EC               	movwf	??_main
  1732  1FB1  086C               	movf	??_main,w
  1733  1FB2  1683               	bsf	3,5	;RP0=1, select bank1
  1734  1FB3  1303               	bcf	3,6	;RP1=0, select bank1
  1735  1FB4  00A8               	movwf	sprintf@f^(0+128)
  1736  1FB5  085A               	movf	_count^(0+128),w
  1737  1FB6  1283               	bcf	3,5	;RP0=0, select bank0
  1738  1FB7  1303               	bcf	3,6	;RP1=0, select bank0
  1739  1FB8  00ED               	movwf	??_main+1
  1740  1FB9  01EE               	clrf	??_main+2
  1741  1FBA  086D               	movf	??_main+1,w
  1742  1FBB  1683               	bsf	3,5	;RP0=1, select bank1
  1743  1FBC  1303               	bcf	3,6	;RP1=0, select bank1
  1744  1FBD  00A9               	movwf	(?_sprintf^(0+128)+1)
  1745  1FBE  1283               	bcf	3,5	;RP0=0, select bank0
  1746  1FBF  1303               	bcf	3,6	;RP1=0, select bank0
  1747  1FC0  086E               	movf	??_main+2,w
  1748  1FC1  1683               	bsf	3,5	;RP0=1, select bank1
  1749  1FC2  1303               	bcf	3,6	;RP1=0, select bank1
  1750  1FC3  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1751  1FC4  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1752  1FC5  160A  118A  24F6  160A  158A  	fcall	_sprintf
  1753  1FCA                     l4471:
  1754                           
  1755                           ;main.c: 91:         Lcd_Set_Cursor(2, 14);
  1756  1FCA  300E               	movlw	14
  1757  1FCB  1283               	bcf	3,5	;RP0=0, select bank0
  1758  1FCC  1303               	bcf	3,6	;RP1=0, select bank0
  1759  1FCD  00EC               	movwf	??_main
  1760  1FCE  086C               	movf	??_main,w
  1761  1FCF  00F7               	movwf	Lcd_Set_Cursor@b
  1762  1FD0  3002               	movlw	2
  1763  1FD1  160A  158A  20C3  160A  158A  	fcall	_Lcd_Set_Cursor
  1764  1FD6                     l4473:
  1765                           
  1766                           ;main.c: 92:         Lcd_Write_String(s);
  1767  1FD6  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1768  1FD7  00F6               	movwf	Lcd_Write_String@a
  1769  1FD8  3001               	movlw	1
  1770  1FD9  00F7               	movwf	Lcd_Write_String@a+1
  1771  1FDA  160A  158A  220B  160A  158A  	fcall	_Lcd_Write_String
  1772  1FDF                     l4475:
  1773                           
  1774                           ;main.c: 94:                 if (count >= 0 && count < 10) {
  1775  1FDF  300A               	movlw	10
  1776  1FE0  1683               	bsf	3,5	;RP0=1, select bank1
  1777  1FE1  1303               	bcf	3,6	;RP1=0, select bank1
  1778  1FE2  025A               	subwf	_count^(0+128),w
  1779  1FE3  1803               	skipnc
  1780  1FE4  2FE6               	goto	u7471
  1781  1FE5  2FE7               	goto	u7470
  1782  1FE6                     u7471:
  1783  1FE6  2EC8               	goto	l4431
  1784  1FE7                     u7470:
  1785  1FE7                     l4477:
  1786                           
  1787                           ;main.c: 95:                     Lcd_Set_Cursor(2, 15);
  1788  1FE7  300F               	movlw	15
  1789  1FE8  1283               	bcf	3,5	;RP0=0, select bank0
  1790  1FE9  1303               	bcf	3,6	;RP1=0, select bank0
  1791  1FEA  00EC               	movwf	??_main
  1792  1FEB  086C               	movf	??_main,w
  1793  1FEC  00F7               	movwf	Lcd_Set_Cursor@b
  1794  1FED  3002               	movlw	2
  1795  1FEE  160A  158A  20C3  160A  158A  	fcall	_Lcd_Set_Cursor
  1796  1FF3                     l4479:
  1797                           
  1798                           ;main.c: 96:                     Lcd_Write_String("   ");
  1799  1FF3  30A9               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1800  1FF4  00F6               	movwf	Lcd_Write_String@a
  1801  1FF5  3080               	movlw	128
  1802  1FF6  00F7               	movwf	Lcd_Write_String@a+1
  1803  1FF7  160A  158A  220B  160A  158A  	fcall	_Lcd_Write_String
  1804  1FFC  2EC8               	goto	l4431
  1805  1FFD  120A  118A  280C   	ljmp	start
  1806  2000                     __end_of_main:
  1807                           
  1808                           	psect	text1
  1809  14F6                     __ptext1:	
  1810 ;; *************** function _sprintf *****************
  1811 ;; Defined at:
  1812 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  sp              1    wreg     PTR unsigned char 
  1815 ;;		 -> s(20), 
  1816 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1817 ;;		 -> STR_4(3), STR_3(7), STR_2(7), 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1820 ;;		 -> s(20), 
  1821 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1822 ;;  val             4   31[BANK1 ] unsigned long 
  1823 ;;  tmpval          4   27[BANK1 ] struct .
  1824 ;;  prec            2   42[BANK1 ] int 
  1825 ;;  eexp            2   35[BANK1 ] int 
  1826 ;;  width           2   25[BANK1 ] int 
  1827 ;;  flag            2   23[BANK1 ] unsigned short 
  1828 ;;  cp              2    0        PTR const unsigned char 
  1829 ;;  len             2    0        unsigned int 
  1830 ;;  c               1   44[BANK1 ] unsigned char 
  1831 ;;  ap              1   22[BANK1 ] PTR void [1]
  1832 ;;		 -> ?_sprintf(2), 
  1833 ;;  d               1    0        unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  2    8[BANK1 ] int 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1843 ;;      Params:         0       0       5       0       0
  1844 ;;      Locals:         0       0      27       0       0
  1845 ;;      Temps:          0       0       5       0       0
  1846 ;;      Totals:         0       0      37       0       0
  1847 ;;Total ram usage:       37 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    4
  1850 ;; This function calls:
  1851 ;;		___awdiv
  1852 ;;		___fladd
  1853 ;;		___fleq
  1854 ;;		___flge
  1855 ;;		___flmul
  1856 ;;		___flneg
  1857 ;;		___flsub
  1858 ;;		___fltol
  1859 ;;		___lldiv
  1860 ;;		___llmod
  1861 ;;		___wmul
  1862 ;;		___xxtofl
  1863 ;;		__div_to_l_
  1864 ;;		__tdiv_to_l_
  1865 ;;		_fround
  1866 ;;		_isdigit
  1867 ;;		_scale
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function _sprintf
  1875  14F6                     _sprintf:
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1879                           ;sprintf@sp stored from wreg
  1880  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  1881  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  1882  14F8  00C9               	movwf	sprintf@sp^(0+128)
  1883  14F9                     l4129:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1886  14F9  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1887  14FA  00AD               	movwf	??_sprintf^(0+128)
  1888  14FB  082D               	movf	??_sprintf^(0+128),w
  1889  14FC  00B6               	movwf	sprintf@ap^(0+128)
  1890  14FD                     L1:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1893  14FD  120A  118A  2EA0   	goto	l4411
  1894  1500                     l4131:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1897  1500  3025               	movlw	37
  1898  1501  064C               	xorwf	sprintf@c^(0+128),w
  1899  1502  1903               	btfsc	3,2
  1900  1503  2D05               	goto	u6921
  1901  1504  2D06               	goto	u6920
  1902  1505                     u6921:
  1903  1505  2D12               	goto	l4137
  1904  1506                     u6920:
  1905  1506                     l4133:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1908  1506  084C               	movf	sprintf@c^(0+128),w
  1909  1507  00AD               	movwf	??_sprintf^(0+128)
  1910  1508  0849               	movf	sprintf@sp^(0+128),w
  1911  1509  0084               	movwf	4
  1912  150A  082D               	movf	??_sprintf^(0+128),w
  1913  150B  1783               	bsf	3,7	;select IRP bank2
  1914  150C  0080               	movwf	0
  1915  150D                     l4135:
  1916  150D  3001               	movlw	1
  1917  150E  00AD               	movwf	??_sprintf^(0+128)
  1918  150F  082D               	movf	??_sprintf^(0+128),w
  1919  1510  07C9               	addwf	sprintf@sp^(0+128),f
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1922  1511  2CFD               	goto	L1
  1923  1512                     l4137:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1926  1512  01B9               	clrf	sprintf@width^(0+128)
  1927  1513  01BA               	clrf	(sprintf@width+1)^(0+128)
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1930  1514  01B7               	clrf	sprintf@flag^(0+128)
  1931  1515  01B8               	clrf	(sprintf@flag+1)^(0+128)
  1932  1516                     l4139:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1935  1516  0828               	movf	sprintf@f^(0+128),w
  1936  1517  0084               	movwf	4
  1937  1518  120A  158A  200A  160A  118A  	fcall	stringdir
  1938  151D  120A  158A  20C1  160A  118A  	fcall	_isdigit
  1939  1522  1C03               	btfss	3,0
  1940  1523  2D25               	goto	u6931
  1941  1524  2D26               	goto	u6930
  1942  1525                     u6931:
  1943  1525  2D66               	goto	l4151
  1944  1526                     u6930:
  1945  1526                     l4141:
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1948  1526  1683               	bsf	3,5	;RP0=1, select bank1
  1949  1527  1303               	bcf	3,6	;RP1=0, select bank1
  1950  1528  01B9               	clrf	sprintf@width^(0+128)
  1951  1529  01BA               	clrf	(sprintf@width+1)^(0+128)
  1952  152A                     l4143:
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1955  152A  300A               	movlw	10
  1956  152B  00F3               	movwf	___wmul@multiplier
  1957  152C  3000               	movlw	0
  1958  152D  00F4               	movwf	___wmul@multiplier+1
  1959  152E  1683               	bsf	3,5	;RP0=1, select bank1
  1960  152F  1303               	bcf	3,6	;RP1=0, select bank1
  1961  1530  083A               	movf	(sprintf@width+1)^(0+128),w
  1962  1531  00F6               	movwf	___wmul@multiplicand+1
  1963  1532  0839               	movf	sprintf@width^(0+128),w
  1964  1533  00F5               	movwf	___wmul@multiplicand
  1965  1534  160A  158A  209E  160A  118A  	fcall	___wmul
  1966  1539  0874               	movf	?___wmul+1,w
  1967  153A  1683               	bsf	3,5	;RP0=1, select bank1
  1968  153B  1303               	bcf	3,6	;RP1=0, select bank1
  1969  153C  00BA               	movwf	(sprintf@width+1)^(0+128)
  1970  153D  0873               	movf	?___wmul,w
  1971  153E  00B9               	movwf	sprintf@width^(0+128)
  1972  153F                     l4145:
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1975  153F  0828               	movf	sprintf@f^(0+128),w
  1976  1540  0084               	movwf	4
  1977  1541  120A  158A  200A  160A  118A  	fcall	stringdir
  1978  1546  3ED0               	addlw	208
  1979  1547  00AD               	movwf	??_sprintf^(0+128)
  1980  1548  30FF               	movlw	255
  1981  1549  1803               	skipnc
  1982  154A  3000               	movlw	0
  1983  154B  00AE               	movwf	(??_sprintf^(0+128)+1)
  1984  154C  082D               	movf	??_sprintf^(0+128),w
  1985  154D  07B9               	addwf	sprintf@width^(0+128),f
  1986  154E  1803               	skipnc
  1987  154F  0ABA               	incf	(sprintf@width+1)^(0+128),f
  1988  1550  082E               	movf	(??_sprintf+1)^(0+128),w
  1989  1551  07BA               	addwf	(sprintf@width+1)^(0+128),f
  1990  1552                     l4147:
  1991  1552  3001               	movlw	1
  1992  1553  00AD               	movwf	??_sprintf^(0+128)
  1993  1554  082D               	movf	??_sprintf^(0+128),w
  1994  1555  07A8               	addwf	sprintf@f^(0+128),f
  1995  1556                     l4149:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1998  1556  0828               	movf	sprintf@f^(0+128),w
  1999  1557  0084               	movwf	4
  2000  1558  120A  158A  200A  160A  118A  	fcall	stringdir
  2001  155D  120A  158A  20C1  160A  118A  	fcall	_isdigit
  2002  1562  1803               	btfsc	3,0
  2003  1563  2D65               	goto	u6941
  2004  1564  2D66               	goto	u6940
  2005  1565                     u6941:
  2006  1565  2D2A               	goto	l4143
  2007  1566                     u6940:
  2008  1566                     l4151:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2011  1566  1683               	bsf	3,5	;RP0=1, select bank1
  2012  1567  1303               	bcf	3,6	;RP1=0, select bank1
  2013  1568  0828               	movf	sprintf@f^(0+128),w
  2014  1569  0084               	movwf	4
  2015  156A  120A  158A  200A  160A  118A  	fcall	stringdir
  2016  156F  3A2E               	xorlw	46
  2017  1570  1D03               	skipz
  2018  1571  2D73               	goto	u6951
  2019  1572  2D74               	goto	u6950
  2020  1573                     u6951:
  2021  1573  2DB9               	goto	l4167
  2022  1574                     u6950:
  2023  1574                     l4153:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2026  1574  1738               	bsf	(sprintf@flag^(0+128)+1),6
  2027  1575                     l4155:
  2028                           
  2029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2030  1575  3001               	movlw	1
  2031  1576  00AD               	movwf	??_sprintf^(0+128)
  2032  1577  082D               	movf	??_sprintf^(0+128),w
  2033  1578  07A8               	addwf	sprintf@f^(0+128),f
  2034  1579                     l4157:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2037  1579  01CA               	clrf	sprintf@prec^(0+128)
  2038  157A  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2041  157B  2DA8               	goto	l4165
  2042  157C                     l4159:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2045  157C  300A               	movlw	10
  2046  157D  00F3               	movwf	___wmul@multiplier
  2047  157E  3000               	movlw	0
  2048  157F  00F4               	movwf	___wmul@multiplier+1
  2049  1580  1683               	bsf	3,5	;RP0=1, select bank1
  2050  1581  1303               	bcf	3,6	;RP1=0, select bank1
  2051  1582  084B               	movf	(sprintf@prec+1)^(0+128),w
  2052  1583  00F6               	movwf	___wmul@multiplicand+1
  2053  1584  084A               	movf	sprintf@prec^(0+128),w
  2054  1585  00F5               	movwf	___wmul@multiplicand
  2055  1586  160A  158A  209E  160A  118A  	fcall	___wmul
  2056  158B  0874               	movf	?___wmul+1,w
  2057  158C  1683               	bsf	3,5	;RP0=1, select bank1
  2058  158D  1303               	bcf	3,6	;RP1=0, select bank1
  2059  158E  00CB               	movwf	(sprintf@prec+1)^(0+128)
  2060  158F  0873               	movf	?___wmul,w
  2061  1590  00CA               	movwf	sprintf@prec^(0+128)
  2062  1591                     l4161:
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2065  1591  0828               	movf	sprintf@f^(0+128),w
  2066  1592  0084               	movwf	4
  2067  1593  120A  158A  200A  160A  118A  	fcall	stringdir
  2068  1598  3ED0               	addlw	208
  2069  1599  00AD               	movwf	??_sprintf^(0+128)
  2070  159A  30FF               	movlw	255
  2071  159B  1803               	skipnc
  2072  159C  3000               	movlw	0
  2073  159D  00AE               	movwf	(??_sprintf^(0+128)+1)
  2074  159E  082D               	movf	??_sprintf^(0+128),w
  2075  159F  07CA               	addwf	sprintf@prec^(0+128),f
  2076  15A0  1803               	skipnc
  2077  15A1  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  2078  15A2  082E               	movf	(??_sprintf+1)^(0+128),w
  2079  15A3  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  2080  15A4                     l4163:
  2081  15A4  3001               	movlw	1
  2082  15A5  00AD               	movwf	??_sprintf^(0+128)
  2083  15A6  082D               	movf	??_sprintf^(0+128),w
  2084  15A7  07A8               	addwf	sprintf@f^(0+128),f
  2085  15A8                     l4165:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2088  15A8  0828               	movf	sprintf@f^(0+128),w
  2089  15A9  0084               	movwf	4
  2090  15AA  120A  158A  200A  160A  118A  	fcall	stringdir
  2091  15AF  120A  158A  20C1  160A  118A  	fcall	_isdigit
  2092  15B4  1803               	btfsc	3,0
  2093  15B5  2DB7               	goto	u6961
  2094  15B6  2DB8               	goto	u6960
  2095  15B7                     u6961:
  2096  15B7  2D7C               	goto	l4159
  2097  15B8                     u6960:
  2098  15B8  2DBF               	goto	l4173
  2099  15B9                     l4167:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2102  15B9  01CA               	clrf	sprintf@prec^(0+128)
  2103  15BA  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2104  15BB                     l4169:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2107  15BB  1638               	bsf	(sprintf@flag^(0+128)+1),4
  2108  15BC  2DBF               	goto	l4173
  2109  15BD                     l328:	
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2111                           
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2114  15BD  1538               	bsf	(sprintf@flag^(0+128)+1),2
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2117  15BE  2DE1               	goto	l4175
  2118  15BF                     l4173:
  2119  15BF  3001               	movlw	1
  2120  15C0  1683               	bsf	3,5	;RP0=1, select bank1
  2121  15C1  1303               	bcf	3,6	;RP1=0, select bank1
  2122  15C2  07A8               	addwf	sprintf@f^(0+128),f
  2123  15C3  30FF               	movlw	-1
  2124  15C4  0728               	addwf	sprintf@f^(0+128),w
  2125  15C5  0084               	movwf	4
  2126  15C6  120A  158A  200A  160A  118A  	fcall	stringdir
  2127  15CB  00CC               	movwf	sprintf@c^(0+128)
  2128  15CC  00AD               	movwf	??_sprintf^(0+128)
  2129  15CD  01AE               	clrf	(??_sprintf^(0+128)+1)
  2130                           
  2131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2132                           ; Switch size 1, requested type "simple"
  2133                           ; Number of cases is 1, Range of values is 0 to 0
  2134                           ; switch strategies available:
  2135                           ; Name         Instructions Cycles
  2136                           ; simple_byte            4     3 (average)
  2137                           ; direct_byte           11     8 (fixed)
  2138                           ; jumptable            260     6 (fixed)
  2139                           ;	Chosen strategy is simple_byte
  2140  15CE  082E               	movf	(??_sprintf+1)^(0+128),w
  2141  15CF  3A00               	xorlw	0	; case 0
  2142  15D0  1903               	skipnz
  2143  15D1  2DD3               	goto	l4511
  2144  15D2  2CFD               	goto	L1
  2145  15D3                     l4511:
  2146                           
  2147                           ; Switch size 1, requested type "simple"
  2148                           ; Number of cases is 4, Range of values is 0 to 105
  2149                           ; switch strategies available:
  2150                           ; Name         Instructions Cycles
  2151                           ; simple_byte           13     7 (average)
  2152                           ; jumptable            260     6 (fixed)
  2153                           ;	Chosen strategy is simple_byte
  2154  15D3  082D               	movf	??_sprintf^(0+128),w
  2155  15D4  3A00               	xorlw	0	; case 0
  2156  15D5  1903               	skipnz
  2157  15D6  2FFD               	goto	L3
  2158  15D7  3A64               	xorlw	100	; case 100
  2159  15D8  1903               	skipnz
  2160  15D9  2DE1               	goto	l4175
  2161  15DA  3A02               	xorlw	2	; case 102
  2162  15DB  1903               	skipnz
  2163  15DC  2DBD               	goto	l328
  2164  15DD  3A0F               	xorlw	15	; case 105
  2165  15DE  1903               	skipnz
  2166  15DF  2DE1               	goto	l4175
  2167  15E0  2CFD               	goto	L1
  2168  15E1                     l4175:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2171  15E1  3000               	movlw	0
  2172  15E2  0537               	andwf	sprintf@flag^(0+128),w
  2173  15E3  00AD               	movwf	??_sprintf^(0+128)
  2174  15E4  3007               	movlw	7
  2175  15E5  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2176  15E6  00AE               	movwf	(??_sprintf+1)^(0+128)
  2177  15E7  082D               	movf	??_sprintf^(0+128),w
  2178  15E8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2179  15E9  1903               	btfsc	3,2
  2180  15EA  2DEC               	goto	u6971
  2181  15EB  2DEF               	goto	u6970
  2182  15EC                     u6971:
  2183  15EC  120A  118A  2CF1   	goto	l4333
  2184  15EF                     u6970:
  2185  15EF                     l4177:
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2188  15EF  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  2189  15F0  2DF2               	goto	u6981
  2190  15F1  2DF3               	goto	u6980
  2191  15F2                     u6981:
  2192  15F2  2DF7               	goto	l4181
  2193  15F3                     u6980:
  2194  15F3                     l4179:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2197  15F3  3006               	movlw	6
  2198  15F4  00CA               	movwf	sprintf@prec^(0+128)
  2199  15F5  3000               	movlw	0
  2200  15F6  00CB               	movwf	(sprintf@prec^(0+128)+1)
  2201  15F7                     l4181:
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2204  15F7  0836               	movf	sprintf@ap^(0+128),w
  2205  15F8  0084               	movwf	4
  2206  15F9  1383               	bcf	3,7	;select IRP bank0
  2207  15FA  0800               	movf	0,w
  2208  15FB  00C5               	movwf	sprintf@fval^(0+128)
  2209  15FC  0A84               	incf	4,f
  2210  15FD  0800               	movf	0,w
  2211  15FE  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2212  15FF  0A84               	incf	4,f
  2213  1600  0800               	movf	0,w
  2214  1601  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2215  1602  0A84               	incf	4,f
  2216  1603  0800               	movf	0,w
  2217  1604  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2218  1605                     l4183:
  2219  1605  3004               	movlw	4
  2220  1606  00AD               	movwf	??_sprintf^(0+128)
  2221  1607  082D               	movf	??_sprintf^(0+128),w
  2222  1608  07B6               	addwf	sprintf@ap^(0+128),f
  2223  1609                     l4185:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2226  1609  0848               	movf	(sprintf@fval+3)^(0+128),w
  2227  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2228  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2229  160C  00A3               	movwf	___flge@ff1+3
  2230  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2231  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2232  160F  0847               	movf	(sprintf@fval+2)^(0+128),w
  2233  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2234  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2235  1612  00A2               	movwf	___flge@ff1+2
  2236  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2237  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2238  1615  0846               	movf	(sprintf@fval+1)^(0+128),w
  2239  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2240  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2241  1618  00A1               	movwf	___flge@ff1+1
  2242  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2243  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2244  161B  0845               	movf	sprintf@fval^(0+128),w
  2245  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2246  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2247  161E  00A0               	movwf	___flge@ff1
  2248  161F  3000               	movlw	0
  2249  1620  00A7               	movwf	___flge@ff2+3
  2250  1621  3000               	movlw	0
  2251  1622  00A6               	movwf	___flge@ff2+2
  2252  1623  3000               	movlw	0
  2253  1624  00A5               	movwf	___flge@ff2+1
  2254  1625  3000               	movlw	0
  2255  1626  00A4               	movwf	___flge@ff2
  2256  1627  160A  158A  2492  160A  118A  	fcall	___flge
  2257  162C  1803               	btfsc	3,0
  2258  162D  2E2F               	goto	u6991
  2259  162E  2E30               	goto	u6990
  2260  162F                     u6991:
  2261  162F  2E4D               	goto	l4191
  2262  1630                     u6990:
  2263  1630                     l4187:
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2266  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2267  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2268  1632  0848               	movf	(sprintf@fval+3)^(0+128),w
  2269  1633  00F6               	movwf	___flneg@f1+3
  2270  1634  0847               	movf	(sprintf@fval+2)^(0+128),w
  2271  1635  00F5               	movwf	___flneg@f1+2
  2272  1636  0846               	movf	(sprintf@fval+1)^(0+128),w
  2273  1637  00F4               	movwf	___flneg@f1+1
  2274  1638  0845               	movf	sprintf@fval^(0+128),w
  2275  1639  00F3               	movwf	___flneg@f1
  2276  163A  120A  118A  27F5  160A  118A  	fcall	___flneg
  2277  163F  0876               	movf	?___flneg+3,w
  2278  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2279  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2280  1642  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2281  1643  0875               	movf	?___flneg+2,w
  2282  1644  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2283  1645  0874               	movf	?___flneg+1,w
  2284  1646  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2285  1647  0873               	movf	?___flneg,w
  2286  1648  00C5               	movwf	sprintf@fval^(0+128)
  2287  1649                     l4189:
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2290  1649  3003               	movlw	3
  2291  164A  04B7               	iorwf	sprintf@flag^(0+128),f
  2292  164B  3000               	movlw	0
  2293  164C  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  2294  164D                     l4191:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2297  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2298  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2299  164F  01C3               	clrf	sprintf@eexp^(0+128)
  2300  1650  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2301  1651                     l4193:
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2304  1651  0848               	movf	(sprintf@fval+3)^(0+128),w
  2305  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2306  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2307  1654  00A3               	movwf	___fleq@ff1+3
  2308  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2309  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2310  1657  0847               	movf	(sprintf@fval+2)^(0+128),w
  2311  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2312  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2313  165A  00A2               	movwf	___fleq@ff1+2
  2314  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2315  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2316  165D  0846               	movf	(sprintf@fval+1)^(0+128),w
  2317  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2318  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2319  1660  00A1               	movwf	___fleq@ff1+1
  2320  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2321  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2322  1663  0845               	movf	sprintf@fval^(0+128),w
  2323  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2324  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2325  1666  00A0               	movwf	___fleq@ff1
  2326  1667  3000               	movlw	0
  2327  1668  00A7               	movwf	___fleq@ff2+3
  2328  1669  3000               	movlw	0
  2329  166A  00A6               	movwf	___fleq@ff2+2
  2330  166B  3000               	movlw	0
  2331  166C  00A5               	movwf	___fleq@ff2+1
  2332  166D  3000               	movlw	0
  2333  166E  00A4               	movwf	___fleq@ff2
  2334  166F  160A  158A  22DB  160A  118A  	fcall	___fleq
  2335  1674  1803               	btfsc	3,0
  2336  1675  2E77               	goto	u7001
  2337  1676  2E78               	goto	u7000
  2338  1677                     u7001:
  2339  1677  2F94               	goto	l4219
  2340  1678                     u7000:
  2341  1678                     l4195:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2344  1678  1003               	clrc
  2345  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2346  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2347  167B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2348  167C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2349  167D  3E82               	addlw	130
  2350  167E  00C3               	movwf	sprintf@eexp^(0+128)
  2351  167F  30FF               	movlw	255
  2352  1680  1803               	skipnc
  2353  1681  3000               	movlw	0
  2354  1682  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2355  1683                     l4197:
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2358  1683  30FF               	movlw	255
  2359  1684  07C3               	addwf	sprintf@eexp^(0+128),f
  2360  1685  1803               	skipnc
  2361  1686  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2362  1687  30FF               	movlw	255
  2363  1688  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2364  1689                     l4199:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2367  1689  3003               	movlw	3
  2368  168A  00F3               	movwf	___wmul@multiplier
  2369  168B  3000               	movlw	0
  2370  168C  00F4               	movwf	___wmul@multiplier+1
  2371  168D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2372  168E  00F6               	movwf	___wmul@multiplicand+1
  2373  168F  0843               	movf	sprintf@eexp^(0+128),w
  2374  1690  00F5               	movwf	___wmul@multiplicand
  2375  1691  160A  158A  209E  160A  118A  	fcall	___wmul
  2376  1696  0874               	movf	?___wmul+1,w
  2377  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2378  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2379  1699  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2380  169A  0873               	movf	?___wmul,w
  2381  169B  00C3               	movwf	sprintf@eexp^(0+128)
  2382  169C                     l4201:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2385  169C  300A               	movlw	10
  2386  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2387  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2388  169F  00A0               	movwf	___awdiv@divisor
  2389  16A0  3000               	movlw	0
  2390  16A1  00A1               	movwf	___awdiv@divisor+1
  2391  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2392  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2393  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2394  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2395  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2396  16A7  00A3               	movwf	___awdiv@dividend+1
  2397  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2398  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2399  16AA  0843               	movf	sprintf@eexp^(0+128),w
  2400  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2401  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2402  16AD  00A2               	movwf	___awdiv@dividend
  2403  16AE  120A  158A  20D3  160A  118A  	fcall	___awdiv
  2404  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2405  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2406  16B5  0821               	movf	?___awdiv+1,w
  2407  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2408  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2409  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2410  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2411  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2412  16BB  0820               	movf	?___awdiv,w
  2413  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2414  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2415  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  2416  16BF                     l4203:
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2419  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2420  16C0  2EC2               	goto	u7011
  2421  16C1  2EC3               	goto	u7010
  2422  16C2                     u7011:
  2423  16C2  2EC9               	goto	l4207
  2424  16C3                     u7010:
  2425  16C3                     l4205:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2428  16C3  30FF               	movlw	255
  2429  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  2430  16C5  1803               	skipnc
  2431  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2432  16C7  30FF               	movlw	255
  2433  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2434  16C9                     l4207:
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2437  16C9  0343               	decf	sprintf@eexp^(0+128),w
  2438  16CA  3AFF               	xorlw	255
  2439  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2440  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2441  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2442  16D2  0847               	movf	?_scale+3,w
  2443  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2444  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2445  16D5  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2446  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2447  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2448  16D8  0846               	movf	?_scale+2,w
  2449  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2450  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2451  16DB  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2452  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2453  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2454  16DE  0845               	movf	?_scale+1,w
  2455  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2456  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2457  16E1  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2458  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2459  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2460  16E4  0844               	movf	?_scale,w
  2461  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2462  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2463  16E7  00BB               	movwf	sprintf@tmpval^(0+128)
  2464  16E8                     l4209:
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2467  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2468  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2469  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2470  16EB  00AD               	movwf	___flmul@b+3
  2471  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2472  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2473  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  2474  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2475  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2476  16F1  00AC               	movwf	___flmul@b+2
  2477  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2478  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2479  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  2480  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2481  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2482  16F7  00AB               	movwf	___flmul@b+1
  2483  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2484  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2485  16FA  0845               	movf	sprintf@fval^(0+128),w
  2486  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2487  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2488  16FD  00AA               	movwf	___flmul@b
  2489  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2490  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2491  1700  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2492  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2493  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2494  1703  00B1               	movwf	___flmul@a+3
  2495  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2496  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2497  1706  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2498  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2499  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2500  1709  00B0               	movwf	___flmul@a+2
  2501  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2502  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2503  170C  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2504  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2505  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2506  170F  00AF               	movwf	___flmul@a+1
  2507  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2508  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2509  1712  083B               	movf	sprintf@tmpval^(0+128),w
  2510  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2511  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2512  1715  00AE               	movwf	___flmul@a
  2513  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2514  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2515  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2516  171D  082D               	movf	?___flmul+3,w
  2517  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2518  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2519  1720  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2520  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2521  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2522  1723  082C               	movf	?___flmul+2,w
  2523  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2524  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2525  1726  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2526  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2527  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2528  1729  082B               	movf	?___flmul+1,w
  2529  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2530  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2531  172C  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2532  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2533  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2534  172F  082A               	movf	?___flmul,w
  2535  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2536  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2537  1732  00BB               	movwf	sprintf@tmpval^(0+128)
  2538  1733                     l4211:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2541  1733  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2542  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2543  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2544  1736  00A3               	movwf	___flge@ff1+3
  2545  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2546  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2547  1739  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2548  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2549  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2550  173C  00A2               	movwf	___flge@ff1+2
  2551  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2552  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2553  173F  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2554  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2555  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2556  1742  00A1               	movwf	___flge@ff1+1
  2557  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2558  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2559  1745  083B               	movf	sprintf@tmpval^(0+128),w
  2560  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2561  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2562  1748  00A0               	movwf	___flge@ff1
  2563  1749  303F               	movlw	63
  2564  174A  00A7               	movwf	___flge@ff2+3
  2565  174B  3080               	movlw	128
  2566  174C  00A6               	movwf	___flge@ff2+2
  2567  174D  3000               	movlw	0
  2568  174E  00A5               	movwf	___flge@ff2+1
  2569  174F  3000               	movlw	0
  2570  1750  00A4               	movwf	___flge@ff2
  2571  1751  160A  158A  2492  160A  118A  	fcall	___flge
  2572  1756  1803               	btfsc	3,0
  2573  1757  2F59               	goto	u7021
  2574  1758  2F5A               	goto	u7020
  2575  1759                     u7021:
  2576  1759  2F63               	goto	l4215
  2577  175A                     u7020:
  2578  175A                     l4213:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2581  175A  30FF               	movlw	255
  2582  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2583  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2584  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2585  175E  1803               	skipnc
  2586  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2587  1760  30FF               	movlw	255
  2588  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2589  1762  2F94               	goto	l4219
  2590  1763                     l4215:
  2591  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2592  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2593  1765  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2594  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2595  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2596  1768  00A3               	movwf	___flge@ff1+3
  2597  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2598  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2599  176B  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2600  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2601  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2602  176E  00A2               	movwf	___flge@ff1+2
  2603  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2604  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2605  1771  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2606  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2607  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2608  1774  00A1               	movwf	___flge@ff1+1
  2609  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2610  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2611  1777  083B               	movf	sprintf@tmpval^(0+128),w
  2612  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2613  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2614  177A  00A0               	movwf	___flge@ff1
  2615  177B  3041               	movlw	65
  2616  177C  00A7               	movwf	___flge@ff2+3
  2617  177D  3020               	movlw	32
  2618  177E  00A6               	movwf	___flge@ff2+2
  2619  177F  3000               	movlw	0
  2620  1780  00A5               	movwf	___flge@ff2+1
  2621  1781  3000               	movlw	0
  2622  1782  00A4               	movwf	___flge@ff2
  2623  1783  160A  158A  2492  160A  118A  	fcall	___flge
  2624  1788  1C03               	btfss	3,0
  2625  1789  2F8B               	goto	u7031
  2626  178A  2F8C               	goto	u7030
  2627  178B                     u7031:
  2628  178B  2F94               	goto	l4219
  2629  178C                     u7030:
  2630  178C                     l4217:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2633  178C  3001               	movlw	1
  2634  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2635  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2636  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2637  1790  1803               	skipnc
  2638  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2639  1792  3000               	movlw	0
  2640  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2641  1794                     l4219:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2644  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2645  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2646  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2647  1797  3A80               	xorlw	128
  2648  1798  00FF               	movwf	btemp+1
  2649  1799  3080               	movlw	128
  2650  179A  027F               	subwf	btemp+1,w
  2651  179B  1D03               	skipz
  2652  179C  2F9F               	goto	u7045
  2653  179D  300D               	movlw	13
  2654  179E  024A               	subwf	sprintf@prec^(0+128),w
  2655  179F                     u7045:
  2656  179F  1803               	skipnc
  2657  17A0  2FA2               	goto	u7041
  2658  17A1  2FA3               	goto	u7040
  2659  17A2                     u7041:
  2660  17A2  2FEA               	goto	l4223
  2661  17A3                     u7040:
  2662  17A3                     l4221:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2665  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2666  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2667  17A5  084A               	movf	sprintf@prec^(0+128),w
  2668  17A6  160A  118A  2061  160A  118A  	fcall	_fround
  2669  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2670  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2671  17AD  0847               	movf	?_fround+3,w
  2672  17AE  00DB               	movwf	___fladd@b+3
  2673  17AF  0846               	movf	?_fround+2,w
  2674  17B0  00DA               	movwf	___fladd@b+2
  2675  17B1  0845               	movf	?_fround+1,w
  2676  17B2  00D9               	movwf	___fladd@b+1
  2677  17B3  0844               	movf	?_fround,w
  2678  17B4  00D8               	movwf	___fladd@b
  2679  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2680  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2681  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2682  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2683  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2684  17BA  00DF               	movwf	___fladd@a+3
  2685  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2686  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2687  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2688  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2689  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2690  17C0  00DE               	movwf	___fladd@a+2
  2691  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2692  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2693  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2694  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2695  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2696  17C6  00DD               	movwf	___fladd@a+1
  2697  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2698  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2699  17C9  0845               	movf	sprintf@fval^(0+128),w
  2700  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2701  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2702  17CC  00DC               	movwf	___fladd@a
  2703  17CD  160A  118A  226E  160A  118A  	fcall	___fladd
  2704  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2705  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2706  17D4  085B               	movf	?___fladd+3,w
  2707  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2708  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2709  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2710  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2711  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2712  17DA  085A               	movf	?___fladd+2,w
  2713  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2714  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2715  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2716  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2717  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2718  17E0  0859               	movf	?___fladd+1,w
  2719  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2720  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2721  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2722  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2723  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2724  17E6  0858               	movf	?___fladd,w
  2725  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2726  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2727  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2728  17EA                     l4223:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2731  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2732  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2733  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2734  17ED  3A80               	xorlw	128
  2735  17EE  00FF               	movwf	btemp+1
  2736  17EF  3080               	movlw	128
  2737  17F0  027F               	subwf	btemp+1,w
  2738  17F1  1D03               	skipz
  2739  17F2  2FF5               	goto	u7055
  2740  17F3  300A               	movlw	10
  2741  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2742  17F5                     u7055:
  2743  17F5  1803               	skipnc
  2744  17F6  2FFA               	goto	u7051
  2745  17F7  120A  118A  2837   	goto	u7050
  2746  17FA                     u7051:
  2747  17FA  120A  118A  2896   	goto	l4231
  2748  17FD                     L3:
  2749  17FD                     L2:
  2750  17FD  120A  118A  2EB4   	ljmp	l4413
  2751                           
  2752                           	psect	text2
  2753  0C9D                     __ptext2:	
  2754 ;; *************** function _scale *****************
  2755 ;; Defined at:
  2756 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  scl             1    wreg     char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  scl             1   54[BANK0 ] char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  4   36[BANK0 ] char 
  2763 ;; Registers used:
  2764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         0       4       0       0       0
  2771 ;;      Locals:         0       5       0       0       0
  2772 ;;      Temps:          0      10       0       0       0
  2773 ;;      Totals:         0      19       0       0       0
  2774 ;;Total ram usage:       19 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    3
  2777 ;; This function calls:
  2778 ;;		___awdiv
  2779 ;;		___awmod
  2780 ;;		___flmul
  2781 ;; This function is called by:
  2782 ;;		_sprintf
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _scale
  2788  0C9D                     _scale:
  2789                           
  2790                           ;incstack = 0
  2791                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2792                           ;scale@scl stored from wreg
  2793  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0C9F  00D6               	movwf	scale@scl
  2796  0CA0                     l3827:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2799  0CA0  1FD6               	btfss	scale@scl,7
  2800  0CA1  2CA3               	goto	u6071
  2801  0CA2  2CA4               	goto	u6070
  2802  0CA3                     u6071:
  2803  0CA3  2E53               	goto	l3849
  2804  0CA4                     u6070:
  2805  0CA4                     l3829:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2808  0CA4  09D6               	comf	scale@scl,f
  2809  0CA5  0AD6               	incf	scale@scl,f
  2810  0CA6                     l3831:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2813  0CA6  0856               	movf	scale@scl,w
  2814  0CA7  3A80               	xorlw	128
  2815  0CA8  3E12               	addlw	-238
  2816  0CA9  1C03               	skipc
  2817  0CAA  2CAC               	goto	u6081
  2818  0CAB  2CAD               	goto	u6080
  2819  0CAC                     u6081:
  2820  0CAC  2D97               	goto	l3839
  2821  0CAD                     u6080:
  2822  0CAD                     l3833:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2825  0CAD  300A               	movlw	10
  2826  0CAE  00A0               	movwf	___awdiv@divisor
  2827  0CAF  3000               	movlw	0
  2828  0CB0  00A1               	movwf	___awdiv@divisor+1
  2829  0CB1  0856               	movf	scale@scl,w
  2830  0CB2  00F5               	movwf	___awmod@dividend
  2831  0CB3  01F6               	clrf	___awmod@dividend+1
  2832  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2833  0CB5  03F6               	decf	___awmod@dividend+1,f
  2834  0CB6  3064               	movlw	100
  2835  0CB7  00F3               	movwf	___awmod@divisor
  2836  0CB8  3000               	movlw	0
  2837  0CB9  00F4               	movwf	___awmod@divisor+1
  2838  0CBA  160A  158A  23D1  120A  158A  	fcall	___awmod
  2839  0CBF  0874               	movf	?___awmod+1,w
  2840  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2842  0CC2  00A3               	movwf	___awdiv@dividend+1
  2843  0CC3  0873               	movf	?___awmod,w
  2844  0CC4  00A2               	movwf	___awdiv@dividend
  2845  0CC5  120A  158A  20D3  120A  158A  	fcall	___awdiv
  2846  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0CCC  0820               	movf	?___awdiv,w
  2849  0CCD  00C8               	movwf	??_scale
  2850  0CCE  3001               	movlw	1
  2851  0CCF                     u6095:
  2852  0CCF  1003               	clrc
  2853  0CD0  0DC8               	rlf	??_scale,f
  2854  0CD1  3EFF               	addlw	-1
  2855  0CD2  1D03               	skipz
  2856  0CD3  2CCF               	goto	u6095
  2857  0CD4  1003               	clrc
  2858  0CD5  0D48               	rlf	??_scale,w
  2859  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2860  0CD7  0084               	movwf	4
  2861  0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  2862  0CDD  00C9               	movwf	??_scale+1
  2863  0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  2864  0CE3  00CA               	movwf	??_scale+2
  2865  0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  2866  0CE9  00CB               	movwf	??_scale+3
  2867  0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  2868  0CEF  00CC               	movwf	??_scale+4
  2869  0CF0  084C               	movf	??_scale+4,w
  2870  0CF1  00AD               	movwf	___flmul@b+3
  2871  0CF2  084B               	movf	??_scale+3,w
  2872  0CF3  00AC               	movwf	___flmul@b+2
  2873  0CF4  084A               	movf	??_scale+2,w
  2874  0CF5  00AB               	movwf	___flmul@b+1
  2875  0CF6  0849               	movf	??_scale+1,w
  2876  0CF7  00AA               	movwf	___flmul@b
  2877  0CF8  3064               	movlw	100
  2878  0CF9  00A0               	movwf	___awdiv@divisor
  2879  0CFA  3000               	movlw	0
  2880  0CFB  00A1               	movwf	___awdiv@divisor+1
  2881  0CFC  0856               	movf	scale@scl,w
  2882  0CFD  00A2               	movwf	___awdiv@dividend
  2883  0CFE  01A3               	clrf	___awdiv@dividend+1
  2884  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2885  0D00  03A3               	decf	___awdiv@dividend+1,f
  2886  0D01  120A  158A  20D3  120A  158A  	fcall	___awdiv
  2887  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0D08  0820               	movf	?___awdiv,w
  2890  0D09  00CD               	movwf	??_scale+5
  2891  0D0A  3001               	movlw	1
  2892  0D0B                     u6105:
  2893  0D0B  1003               	clrc
  2894  0D0C  0DCD               	rlf	??_scale+5,f
  2895  0D0D  3EFF               	addlw	-1
  2896  0D0E  1D03               	skipz
  2897  0D0F  2D0B               	goto	u6105
  2898  0D10  1003               	clrc
  2899  0D11  0D4D               	rlf	??_scale+5,w
  2900  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2901  0D13  0084               	movwf	4
  2902  0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  2903  0D19  00CE               	movwf	??_scale+6
  2904  0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  2905  0D1F  00CF               	movwf	??_scale+7
  2906  0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  2907  0D25  00D0               	movwf	??_scale+8
  2908  0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  2909  0D2B  00D1               	movwf	??_scale+9
  2910  0D2C  0851               	movf	??_scale+9,w
  2911  0D2D  00B1               	movwf	___flmul@a+3
  2912  0D2E  0850               	movf	??_scale+8,w
  2913  0D2F  00B0               	movwf	___flmul@a+2
  2914  0D30  084F               	movf	??_scale+7,w
  2915  0D31  00AF               	movwf	___flmul@a+1
  2916  0D32  084E               	movf	??_scale+6,w
  2917  0D33  00AE               	movwf	___flmul@a
  2918  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2919  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0D3B  082D               	movf	?___flmul+3,w
  2922  0D3C  00D5               	movwf	_scale$1179+3
  2923  0D3D  082C               	movf	?___flmul+2,w
  2924  0D3E  00D4               	movwf	_scale$1179+2
  2925  0D3F  082B               	movf	?___flmul+1,w
  2926  0D40  00D3               	movwf	_scale$1179+1
  2927  0D41  082A               	movf	?___flmul,w
  2928  0D42  00D2               	movwf	_scale$1179
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2931  0D43  300A               	movlw	10
  2932  0D44  00F3               	movwf	___awmod@divisor
  2933  0D45  3000               	movlw	0
  2934  0D46  00F4               	movwf	___awmod@divisor+1
  2935  0D47  0856               	movf	scale@scl,w
  2936  0D48  00F5               	movwf	___awmod@dividend
  2937  0D49  01F6               	clrf	___awmod@dividend+1
  2938  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2939  0D4B  03F6               	decf	___awmod@dividend+1,f
  2940  0D4C  160A  158A  23D1  120A  158A  	fcall	___awmod
  2941  0D51  0873               	movf	?___awmod,w
  2942  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2943  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2944  0D54  00C8               	movwf	??_scale
  2945  0D55  3001               	movlw	1
  2946  0D56                     u6115:
  2947  0D56  1003               	clrc
  2948  0D57  0DC8               	rlf	??_scale,f
  2949  0D58  3EFF               	addlw	-1
  2950  0D59  1D03               	skipz
  2951  0D5A  2D56               	goto	u6115
  2952  0D5B  1003               	clrc
  2953  0D5C  0D48               	rlf	??_scale,w
  2954  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2955  0D5E  0084               	movwf	4
  2956  0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  2957  0D64  00C9               	movwf	??_scale+1
  2958  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  2959  0D6A  00CA               	movwf	??_scale+2
  2960  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  2961  0D70  00CB               	movwf	??_scale+3
  2962  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  2963  0D76  00CC               	movwf	??_scale+4
  2964  0D77  084C               	movf	??_scale+4,w
  2965  0D78  00AD               	movwf	___flmul@b+3
  2966  0D79  084B               	movf	??_scale+3,w
  2967  0D7A  00AC               	movwf	___flmul@b+2
  2968  0D7B  084A               	movf	??_scale+2,w
  2969  0D7C  00AB               	movwf	___flmul@b+1
  2970  0D7D  0849               	movf	??_scale+1,w
  2971  0D7E  00AA               	movwf	___flmul@b
  2972  0D7F  0855               	movf	_scale$1179+3,w
  2973  0D80  00B1               	movwf	___flmul@a+3
  2974  0D81  0854               	movf	_scale$1179+2,w
  2975  0D82  00B0               	movwf	___flmul@a+2
  2976  0D83  0853               	movf	_scale$1179+1,w
  2977  0D84  00AF               	movwf	___flmul@a+1
  2978  0D85  0852               	movf	_scale$1179,w
  2979  0D86  00AE               	movwf	___flmul@a
  2980  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2981  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0D8E  082D               	movf	?___flmul+3,w
  2984  0D8F  00C7               	movwf	?_scale+3
  2985  0D90  082C               	movf	?___flmul+2,w
  2986  0D91  00C6               	movwf	?_scale+2
  2987  0D92  082B               	movf	?___flmul+1,w
  2988  0D93  00C5               	movwf	?_scale+1
  2989  0D94  082A               	movf	?___flmul,w
  2990  0D95  00C4               	movwf	?_scale
  2991  0D96  2FFF               	goto	l306
  2992  0D97                     l3839:
  2993  0D97  0856               	movf	scale@scl,w
  2994  0D98  3A80               	xorlw	128
  2995  0D99  3E75               	addlw	-139
  2996  0D9A  1C03               	skipc
  2997  0D9B  2D9D               	goto	u6121
  2998  0D9C  2D9E               	goto	u6120
  2999  0D9D                     u6121:
  3000  0D9D  2E26               	goto	l3845
  3001  0D9E                     u6120:
  3002  0D9E                     l3841:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3005  0D9E  300A               	movlw	10
  3006  0D9F  00F3               	movwf	___awmod@divisor
  3007  0DA0  3000               	movlw	0
  3008  0DA1  00F4               	movwf	___awmod@divisor+1
  3009  0DA2  0856               	movf	scale@scl,w
  3010  0DA3  00F5               	movwf	___awmod@dividend
  3011  0DA4  01F6               	clrf	___awmod@dividend+1
  3012  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3013  0DA6  03F6               	decf	___awmod@dividend+1,f
  3014  0DA7  160A  158A  23D1  120A  158A  	fcall	___awmod
  3015  0DAC  0873               	movf	?___awmod,w
  3016  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0DAF  00C8               	movwf	??_scale
  3019  0DB0  3001               	movlw	1
  3020  0DB1                     u6135:
  3021  0DB1  1003               	clrc
  3022  0DB2  0DC8               	rlf	??_scale,f
  3023  0DB3  3EFF               	addlw	-1
  3024  0DB4  1D03               	skipz
  3025  0DB5  2DB1               	goto	u6135
  3026  0DB6  1003               	clrc
  3027  0DB7  0D48               	rlf	??_scale,w
  3028  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3029  0DB9  0084               	movwf	4
  3030  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  3031  0DBF  00C9               	movwf	??_scale+1
  3032  0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  3033  0DC5  00CA               	movwf	??_scale+2
  3034  0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  3035  0DCB  00CB               	movwf	??_scale+3
  3036  0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  3037  0DD1  00CC               	movwf	??_scale+4
  3038  0DD2  084C               	movf	??_scale+4,w
  3039  0DD3  00AD               	movwf	___flmul@b+3
  3040  0DD4  084B               	movf	??_scale+3,w
  3041  0DD5  00AC               	movwf	___flmul@b+2
  3042  0DD6  084A               	movf	??_scale+2,w
  3043  0DD7  00AB               	movwf	___flmul@b+1
  3044  0DD8  0849               	movf	??_scale+1,w
  3045  0DD9  00AA               	movwf	___flmul@b
  3046  0DDA  300A               	movlw	10
  3047  0DDB  00A0               	movwf	___awdiv@divisor
  3048  0DDC  3000               	movlw	0
  3049  0DDD  00A1               	movwf	___awdiv@divisor+1
  3050  0DDE  0856               	movf	scale@scl,w
  3051  0DDF  00A2               	movwf	___awdiv@dividend
  3052  0DE0  01A3               	clrf	___awdiv@dividend+1
  3053  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3054  0DE2  03A3               	decf	___awdiv@dividend+1,f
  3055  0DE3  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3056  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0DEA  0820               	movf	?___awdiv,w
  3059  0DEB  00CD               	movwf	??_scale+5
  3060  0DEC  3001               	movlw	1
  3061  0DED                     u6145:
  3062  0DED  1003               	clrc
  3063  0DEE  0DCD               	rlf	??_scale+5,f
  3064  0DEF  3EFF               	addlw	-1
  3065  0DF0  1D03               	skipz
  3066  0DF1  2DED               	goto	u6145
  3067  0DF2  1003               	clrc
  3068  0DF3  0D4D               	rlf	??_scale+5,w
  3069  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3070  0DF5  0084               	movwf	4
  3071  0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  3072  0DFB  00CE               	movwf	??_scale+6
  3073  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  3074  0E01  00CF               	movwf	??_scale+7
  3075  0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  3076  0E07  00D0               	movwf	??_scale+8
  3077  0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  3078  0E0D  00D1               	movwf	??_scale+9
  3079  0E0E  0851               	movf	??_scale+9,w
  3080  0E0F  00B1               	movwf	___flmul@a+3
  3081  0E10  0850               	movf	??_scale+8,w
  3082  0E11  00B0               	movwf	___flmul@a+2
  3083  0E12  084F               	movf	??_scale+7,w
  3084  0E13  00AF               	movwf	___flmul@a+1
  3085  0E14  084E               	movf	??_scale+6,w
  3086  0E15  00AE               	movwf	___flmul@a
  3087  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3088  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0E1D  082D               	movf	?___flmul+3,w
  3091  0E1E  00C7               	movwf	?_scale+3
  3092  0E1F  082C               	movf	?___flmul+2,w
  3093  0E20  00C6               	movwf	?_scale+2
  3094  0E21  082B               	movf	?___flmul+1,w
  3095  0E22  00C5               	movwf	?_scale+1
  3096  0E23  082A               	movf	?___flmul,w
  3097  0E24  00C4               	movwf	?_scale
  3098  0E25  2FFF               	goto	l306
  3099  0E26                     l3845:
  3100                           
  3101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3102  0E26  0856               	movf	scale@scl,w
  3103  0E27  00C8               	movwf	??_scale
  3104  0E28  3001               	movlw	1
  3105  0E29                     u6155:
  3106  0E29  1003               	clrc
  3107  0E2A  0DC8               	rlf	??_scale,f
  3108  0E2B  3EFF               	addlw	-1
  3109  0E2C  1D03               	skipz
  3110  0E2D  2E29               	goto	u6155
  3111  0E2E  1003               	clrc
  3112  0E2F  0D48               	rlf	??_scale,w
  3113  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3114  0E31  0084               	movwf	4
  3115  0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  3116  0E37  00C9               	movwf	??_scale+1
  3117  0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  3118  0E3D  00CA               	movwf	??_scale+2
  3119  0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  3120  0E43  00CB               	movwf	??_scale+3
  3121  0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  3122  0E49  00CC               	movwf	??_scale+4
  3123  0E4A  084C               	movf	??_scale+4,w
  3124  0E4B  00C7               	movwf	?_scale+3
  3125  0E4C  084B               	movf	??_scale+3,w
  3126  0E4D  00C6               	movwf	?_scale+2
  3127  0E4E  084A               	movf	??_scale+2,w
  3128  0E4F  00C5               	movwf	?_scale+1
  3129  0E50  0849               	movf	??_scale+1,w
  3130  0E51  00C4               	movwf	?_scale
  3131  0E52  2FFF               	goto	l306
  3132  0E53                     l3849:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3135  0E53  0856               	movf	scale@scl,w
  3136  0E54  3A80               	xorlw	128
  3137  0E55  3E12               	addlw	-238
  3138  0E56  1C03               	skipc
  3139  0E57  2E59               	goto	u6161
  3140  0E58  2E5A               	goto	u6160
  3141  0E59                     u6161:
  3142  0E59  2F44               	goto	l3857
  3143  0E5A                     u6160:
  3144  0E5A                     l3851:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3147  0E5A  300A               	movlw	10
  3148  0E5B  00A0               	movwf	___awdiv@divisor
  3149  0E5C  3000               	movlw	0
  3150  0E5D  00A1               	movwf	___awdiv@divisor+1
  3151  0E5E  0856               	movf	scale@scl,w
  3152  0E5F  00F5               	movwf	___awmod@dividend
  3153  0E60  01F6               	clrf	___awmod@dividend+1
  3154  0E61  1BF5               	btfsc	___awmod@dividend,7
  3155  0E62  03F6               	decf	___awmod@dividend+1,f
  3156  0E63  3064               	movlw	100
  3157  0E64  00F3               	movwf	___awmod@divisor
  3158  0E65  3000               	movlw	0
  3159  0E66  00F4               	movwf	___awmod@divisor+1
  3160  0E67  160A  158A  23D1  120A  158A  	fcall	___awmod
  3161  0E6C  0874               	movf	?___awmod+1,w
  3162  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3163  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3164  0E6F  00A3               	movwf	___awdiv@dividend+1
  3165  0E70  0873               	movf	?___awmod,w
  3166  0E71  00A2               	movwf	___awdiv@dividend
  3167  0E72  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3168  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0E79  0820               	movf	?___awdiv,w
  3171  0E7A  00C8               	movwf	??_scale
  3172  0E7B  3001               	movlw	1
  3173  0E7C                     u6175:
  3174  0E7C  1003               	clrc
  3175  0E7D  0DC8               	rlf	??_scale,f
  3176  0E7E  3EFF               	addlw	-1
  3177  0E7F  1D03               	skipz
  3178  0E80  2E7C               	goto	u6175
  3179  0E81  1003               	clrc
  3180  0E82  0D48               	rlf	??_scale,w
  3181  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3182  0E84  0084               	movwf	4
  3183  0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  3184  0E8A  00C9               	movwf	??_scale+1
  3185  0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  3186  0E90  00CA               	movwf	??_scale+2
  3187  0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  3188  0E96  00CB               	movwf	??_scale+3
  3189  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  3190  0E9C  00CC               	movwf	??_scale+4
  3191  0E9D  084C               	movf	??_scale+4,w
  3192  0E9E  00AD               	movwf	___flmul@b+3
  3193  0E9F  084B               	movf	??_scale+3,w
  3194  0EA0  00AC               	movwf	___flmul@b+2
  3195  0EA1  084A               	movf	??_scale+2,w
  3196  0EA2  00AB               	movwf	___flmul@b+1
  3197  0EA3  0849               	movf	??_scale+1,w
  3198  0EA4  00AA               	movwf	___flmul@b
  3199  0EA5  3064               	movlw	100
  3200  0EA6  00A0               	movwf	___awdiv@divisor
  3201  0EA7  3000               	movlw	0
  3202  0EA8  00A1               	movwf	___awdiv@divisor+1
  3203  0EA9  0856               	movf	scale@scl,w
  3204  0EAA  00A2               	movwf	___awdiv@dividend
  3205  0EAB  01A3               	clrf	___awdiv@dividend+1
  3206  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3207  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3208  0EAE  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3209  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0EB5  0820               	movf	?___awdiv,w
  3212  0EB6  00CD               	movwf	??_scale+5
  3213  0EB7  3001               	movlw	1
  3214  0EB8                     u6185:
  3215  0EB8  1003               	clrc
  3216  0EB9  0DCD               	rlf	??_scale+5,f
  3217  0EBA  3EFF               	addlw	-1
  3218  0EBB  1D03               	skipz
  3219  0EBC  2EB8               	goto	u6185
  3220  0EBD  1003               	clrc
  3221  0EBE  0D4D               	rlf	??_scale+5,w
  3222  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3223  0EC0  0084               	movwf	4
  3224  0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  3225  0EC6  00CE               	movwf	??_scale+6
  3226  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  3227  0ECC  00CF               	movwf	??_scale+7
  3228  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  3229  0ED2  00D0               	movwf	??_scale+8
  3230  0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  3231  0ED8  00D1               	movwf	??_scale+9
  3232  0ED9  0851               	movf	??_scale+9,w
  3233  0EDA  00B1               	movwf	___flmul@a+3
  3234  0EDB  0850               	movf	??_scale+8,w
  3235  0EDC  00B0               	movwf	___flmul@a+2
  3236  0EDD  084F               	movf	??_scale+7,w
  3237  0EDE  00AF               	movwf	___flmul@a+1
  3238  0EDF  084E               	movf	??_scale+6,w
  3239  0EE0  00AE               	movwf	___flmul@a
  3240  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3241  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0EE8  082D               	movf	?___flmul+3,w
  3244  0EE9  00D5               	movwf	_scale$1179+3
  3245  0EEA  082C               	movf	?___flmul+2,w
  3246  0EEB  00D4               	movwf	_scale$1179+2
  3247  0EEC  082B               	movf	?___flmul+1,w
  3248  0EED  00D3               	movwf	_scale$1179+1
  3249  0EEE  082A               	movf	?___flmul,w
  3250  0EEF  00D2               	movwf	_scale$1179
  3251                           
  3252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3253  0EF0  300A               	movlw	10
  3254  0EF1  00F3               	movwf	___awmod@divisor
  3255  0EF2  3000               	movlw	0
  3256  0EF3  00F4               	movwf	___awmod@divisor+1
  3257  0EF4  0856               	movf	scale@scl,w
  3258  0EF5  00F5               	movwf	___awmod@dividend
  3259  0EF6  01F6               	clrf	___awmod@dividend+1
  3260  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3261  0EF8  03F6               	decf	___awmod@dividend+1,f
  3262  0EF9  160A  158A  23D1  120A  158A  	fcall	___awmod
  3263  0EFE  0873               	movf	?___awmod,w
  3264  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0F01  00C8               	movwf	??_scale
  3267  0F02  3001               	movlw	1
  3268  0F03                     u6195:
  3269  0F03  1003               	clrc
  3270  0F04  0DC8               	rlf	??_scale,f
  3271  0F05  3EFF               	addlw	-1
  3272  0F06  1D03               	skipz
  3273  0F07  2F03               	goto	u6195
  3274  0F08  1003               	clrc
  3275  0F09  0D48               	rlf	??_scale,w
  3276  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3277  0F0B  0084               	movwf	4
  3278  0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3279  0F11  00C9               	movwf	??_scale+1
  3280  0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  3281  0F17  00CA               	movwf	??_scale+2
  3282  0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  3283  0F1D  00CB               	movwf	??_scale+3
  3284  0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  3285  0F23  00CC               	movwf	??_scale+4
  3286  0F24  084C               	movf	??_scale+4,w
  3287  0F25  00AD               	movwf	___flmul@b+3
  3288  0F26  084B               	movf	??_scale+3,w
  3289  0F27  00AC               	movwf	___flmul@b+2
  3290  0F28  084A               	movf	??_scale+2,w
  3291  0F29  00AB               	movwf	___flmul@b+1
  3292  0F2A  0849               	movf	??_scale+1,w
  3293  0F2B  00AA               	movwf	___flmul@b
  3294  0F2C  0855               	movf	_scale$1179+3,w
  3295  0F2D  00B1               	movwf	___flmul@a+3
  3296  0F2E  0854               	movf	_scale$1179+2,w
  3297  0F2F  00B0               	movwf	___flmul@a+2
  3298  0F30  0853               	movf	_scale$1179+1,w
  3299  0F31  00AF               	movwf	___flmul@a+1
  3300  0F32  0852               	movf	_scale$1179,w
  3301  0F33  00AE               	movwf	___flmul@a
  3302  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3303  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3305  0F3B  082D               	movf	?___flmul+3,w
  3306  0F3C  00C7               	movwf	?_scale+3
  3307  0F3D  082C               	movf	?___flmul+2,w
  3308  0F3E  00C6               	movwf	?_scale+2
  3309  0F3F  082B               	movf	?___flmul+1,w
  3310  0F40  00C5               	movwf	?_scale+1
  3311  0F41  082A               	movf	?___flmul,w
  3312  0F42  00C4               	movwf	?_scale
  3313  0F43  2FFF               	goto	l306
  3314  0F44                     l3857:
  3315  0F44  0856               	movf	scale@scl,w
  3316  0F45  3A80               	xorlw	128
  3317  0F46  3E75               	addlw	-139
  3318  0F47  1C03               	skipc
  3319  0F48  2F4A               	goto	u6201
  3320  0F49  2F4B               	goto	u6200
  3321  0F4A                     u6201:
  3322  0F4A  2FD3               	goto	l3863
  3323  0F4B                     u6200:
  3324  0F4B                     l3859:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3327  0F4B  300A               	movlw	10
  3328  0F4C  00F3               	movwf	___awmod@divisor
  3329  0F4D  3000               	movlw	0
  3330  0F4E  00F4               	movwf	___awmod@divisor+1
  3331  0F4F  0856               	movf	scale@scl,w
  3332  0F50  00F5               	movwf	___awmod@dividend
  3333  0F51  01F6               	clrf	___awmod@dividend+1
  3334  0F52  1BF5               	btfsc	___awmod@dividend,7
  3335  0F53  03F6               	decf	___awmod@dividend+1,f
  3336  0F54  160A  158A  23D1  120A  158A  	fcall	___awmod
  3337  0F59  0873               	movf	?___awmod,w
  3338  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3339  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3340  0F5C  00C8               	movwf	??_scale
  3341  0F5D  3001               	movlw	1
  3342  0F5E                     u6215:
  3343  0F5E  1003               	clrc
  3344  0F5F  0DC8               	rlf	??_scale,f
  3345  0F60  3EFF               	addlw	-1
  3346  0F61  1D03               	skipz
  3347  0F62  2F5E               	goto	u6215
  3348  0F63  1003               	clrc
  3349  0F64  0D48               	rlf	??_scale,w
  3350  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3351  0F66  0084               	movwf	4
  3352  0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  3353  0F6C  00C9               	movwf	??_scale+1
  3354  0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  3355  0F72  00CA               	movwf	??_scale+2
  3356  0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  3357  0F78  00CB               	movwf	??_scale+3
  3358  0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  3359  0F7E  00CC               	movwf	??_scale+4
  3360  0F7F  084C               	movf	??_scale+4,w
  3361  0F80  00AD               	movwf	___flmul@b+3
  3362  0F81  084B               	movf	??_scale+3,w
  3363  0F82  00AC               	movwf	___flmul@b+2
  3364  0F83  084A               	movf	??_scale+2,w
  3365  0F84  00AB               	movwf	___flmul@b+1
  3366  0F85  0849               	movf	??_scale+1,w
  3367  0F86  00AA               	movwf	___flmul@b
  3368  0F87  300A               	movlw	10
  3369  0F88  00A0               	movwf	___awdiv@divisor
  3370  0F89  3000               	movlw	0
  3371  0F8A  00A1               	movwf	___awdiv@divisor+1
  3372  0F8B  0856               	movf	scale@scl,w
  3373  0F8C  00A2               	movwf	___awdiv@dividend
  3374  0F8D  01A3               	clrf	___awdiv@dividend+1
  3375  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3376  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3377  0F90  120A  158A  20D3  120A  158A  	fcall	___awdiv
  3378  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3380  0F97  0820               	movf	?___awdiv,w
  3381  0F98  00CD               	movwf	??_scale+5
  3382  0F99  3001               	movlw	1
  3383  0F9A                     u6225:
  3384  0F9A  1003               	clrc
  3385  0F9B  0DCD               	rlf	??_scale+5,f
  3386  0F9C  3EFF               	addlw	-1
  3387  0F9D  1D03               	skipz
  3388  0F9E  2F9A               	goto	u6225
  3389  0F9F  1003               	clrc
  3390  0FA0  0D4D               	rlf	??_scale+5,w
  3391  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3392  0FA2  0084               	movwf	4
  3393  0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  3394  0FA8  00CE               	movwf	??_scale+6
  3395  0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  3396  0FAE  00CF               	movwf	??_scale+7
  3397  0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  3398  0FB4  00D0               	movwf	??_scale+8
  3399  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  3400  0FBA  00D1               	movwf	??_scale+9
  3401  0FBB  0851               	movf	??_scale+9,w
  3402  0FBC  00B1               	movwf	___flmul@a+3
  3403  0FBD  0850               	movf	??_scale+8,w
  3404  0FBE  00B0               	movwf	___flmul@a+2
  3405  0FBF  084F               	movf	??_scale+7,w
  3406  0FC0  00AF               	movwf	___flmul@a+1
  3407  0FC1  084E               	movf	??_scale+6,w
  3408  0FC2  00AE               	movwf	___flmul@a
  3409  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3410  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3412  0FCA  082D               	movf	?___flmul+3,w
  3413  0FCB  00C7               	movwf	?_scale+3
  3414  0FCC  082C               	movf	?___flmul+2,w
  3415  0FCD  00C6               	movwf	?_scale+2
  3416  0FCE  082B               	movf	?___flmul+1,w
  3417  0FCF  00C5               	movwf	?_scale+1
  3418  0FD0  082A               	movf	?___flmul,w
  3419  0FD1  00C4               	movwf	?_scale
  3420  0FD2  2FFF               	goto	l306
  3421  0FD3                     l3863:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3424  0FD3  0856               	movf	scale@scl,w
  3425  0FD4  00C8               	movwf	??_scale
  3426  0FD5  3001               	movlw	1
  3427  0FD6                     u6235:
  3428  0FD6  1003               	clrc
  3429  0FD7  0DC8               	rlf	??_scale,f
  3430  0FD8  3EFF               	addlw	-1
  3431  0FD9  1D03               	skipz
  3432  0FDA  2FD6               	goto	u6235
  3433  0FDB  1003               	clrc
  3434  0FDC  0D48               	rlf	??_scale,w
  3435  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3436  0FDE  0084               	movwf	4
  3437  0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  3438  0FE4  00C9               	movwf	??_scale+1
  3439  0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  3440  0FEA  00CA               	movwf	??_scale+2
  3441  0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  3442  0FF0  00CB               	movwf	??_scale+3
  3443  0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  3444  0FF6  00CC               	movwf	??_scale+4
  3445  0FF7  084C               	movf	??_scale+4,w
  3446  0FF8  00C7               	movwf	?_scale+3
  3447  0FF9  084B               	movf	??_scale+3,w
  3448  0FFA  00C6               	movwf	?_scale+2
  3449  0FFB  084A               	movf	??_scale+2,w
  3450  0FFC  00C5               	movwf	?_scale+1
  3451  0FFD  0849               	movf	??_scale+1,w
  3452  0FFE  00C4               	movwf	?_scale
  3453  0FFF                     l306:
  3454  0FFF  0008               	return
  3455  1000                     __end_of_scale:
  3456                           
  3457                           	psect	text3
  3458  1BD1                     __ptext3:	
  3459 ;; *************** function ___awmod *****************
  3460 ;; Defined at:
  3461 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  divisor         2    3[COMMON] int 
  3464 ;;  dividend        2    5[COMMON] int 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  sign            1    9[COMMON] unsigned char 
  3467 ;;  counter         1    8[COMMON] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  2    3[COMMON] int 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         4       0       0       0       0
  3478 ;;      Locals:         2       0       0       0       0
  3479 ;;      Temps:          1       0       0       0       0
  3480 ;;      Totals:         7       0       0       0       0
  3481 ;;Total ram usage:        7 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_scale
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           
  3492                           ;psect for function ___awmod
  3493  1BD1                     ___awmod:
  3494  1BD1                     l2427:	
  3495                           ;incstack = 0
  3496                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3497                           
  3498  1BD1  01F9               	clrf	___awmod@sign
  3499  1BD2                     l2429:
  3500  1BD2  1FF6               	btfss	___awmod@dividend+1,7
  3501  1BD3  2BD5               	goto	u3121
  3502  1BD4  2BD6               	goto	u3120
  3503  1BD5                     u3121:
  3504  1BD5  2BDD               	goto	l2435
  3505  1BD6                     u3120:
  3506  1BD6                     l2431:
  3507  1BD6  09F5               	comf	___awmod@dividend,f
  3508  1BD7  09F6               	comf	___awmod@dividend+1,f
  3509  1BD8  0AF5               	incf	___awmod@dividend,f
  3510  1BD9  1903               	skipnz
  3511  1BDA  0AF6               	incf	___awmod@dividend+1,f
  3512  1BDB                     l2433:
  3513  1BDB  01F9               	clrf	___awmod@sign
  3514  1BDC  0AF9               	incf	___awmod@sign,f
  3515  1BDD                     l2435:
  3516  1BDD  1FF4               	btfss	___awmod@divisor+1,7
  3517  1BDE  2BE0               	goto	u3131
  3518  1BDF  2BE1               	goto	u3130
  3519  1BE0                     u3131:
  3520  1BE0  2BE6               	goto	l2439
  3521  1BE1                     u3130:
  3522  1BE1                     l2437:
  3523  1BE1  09F3               	comf	___awmod@divisor,f
  3524  1BE2  09F4               	comf	___awmod@divisor+1,f
  3525  1BE3  0AF3               	incf	___awmod@divisor,f
  3526  1BE4  1903               	skipnz
  3527  1BE5  0AF4               	incf	___awmod@divisor+1,f
  3528  1BE6                     l2439:
  3529  1BE6  0873               	movf	___awmod@divisor,w
  3530  1BE7  0474               	iorwf	___awmod@divisor+1,w
  3531  1BE8  1903               	btfsc	3,2
  3532  1BE9  2BEB               	goto	u3141
  3533  1BEA  2BEC               	goto	u3140
  3534  1BEB                     u3141:
  3535  1BEB  2C1B               	goto	l2457
  3536  1BEC                     u3140:
  3537  1BEC                     l2441:
  3538  1BEC  01F8               	clrf	___awmod@counter
  3539  1BED  0AF8               	incf	___awmod@counter,f
  3540  1BEE  2BFA               	goto	l2447
  3541  1BEF                     l2443:
  3542  1BEF  3001               	movlw	1
  3543  1BF0                     u3155:
  3544  1BF0  1003               	clrc
  3545  1BF1  0DF3               	rlf	___awmod@divisor,f
  3546  1BF2  0DF4               	rlf	___awmod@divisor+1,f
  3547  1BF3  3EFF               	addlw	-1
  3548  1BF4  1D03               	skipz
  3549  1BF5  2BF0               	goto	u3155
  3550  1BF6                     l2445:
  3551  1BF6  3001               	movlw	1
  3552  1BF7  00F7               	movwf	??___awmod
  3553  1BF8  0877               	movf	??___awmod,w
  3554  1BF9  07F8               	addwf	___awmod@counter,f
  3555  1BFA                     l2447:
  3556  1BFA  1FF4               	btfss	___awmod@divisor+1,7
  3557  1BFB  2BFD               	goto	u3161
  3558  1BFC  2BFE               	goto	u3160
  3559  1BFD                     u3161:
  3560  1BFD  2BEF               	goto	l2443
  3561  1BFE                     u3160:
  3562  1BFE                     l2449:
  3563  1BFE  0874               	movf	___awmod@divisor+1,w
  3564  1BFF  0276               	subwf	___awmod@dividend+1,w
  3565  1C00  1D03               	skipz
  3566  1C01  2C04               	goto	u3175
  3567  1C02  0873               	movf	___awmod@divisor,w
  3568  1C03  0275               	subwf	___awmod@dividend,w
  3569  1C04                     u3175:
  3570  1C04  1C03               	skipc
  3571  1C05  2C07               	goto	u3171
  3572  1C06  2C08               	goto	u3170
  3573  1C07                     u3171:
  3574  1C07  2C0E               	goto	l2453
  3575  1C08                     u3170:
  3576  1C08                     l2451:
  3577  1C08  0873               	movf	___awmod@divisor,w
  3578  1C09  02F5               	subwf	___awmod@dividend,f
  3579  1C0A  0874               	movf	___awmod@divisor+1,w
  3580  1C0B  1C03               	skipc
  3581  1C0C  03F6               	decf	___awmod@dividend+1,f
  3582  1C0D  02F6               	subwf	___awmod@dividend+1,f
  3583  1C0E                     l2453:
  3584  1C0E  3001               	movlw	1
  3585  1C0F                     u3185:
  3586  1C0F  1003               	clrc
  3587  1C10  0CF4               	rrf	___awmod@divisor+1,f
  3588  1C11  0CF3               	rrf	___awmod@divisor,f
  3589  1C12  3EFF               	addlw	-1
  3590  1C13  1D03               	skipz
  3591  1C14  2C0F               	goto	u3185
  3592  1C15                     l2455:
  3593  1C15  3001               	movlw	1
  3594  1C16  02F8               	subwf	___awmod@counter,f
  3595  1C17  1D03               	btfss	3,2
  3596  1C18  2C1A               	goto	u3191
  3597  1C19  2C1B               	goto	u3190
  3598  1C1A                     u3191:
  3599  1C1A  2BFE               	goto	l2449
  3600  1C1B                     u3190:
  3601  1C1B                     l2457:
  3602  1C1B  0879               	movf	___awmod@sign,w
  3603  1C1C  1903               	btfsc	3,2
  3604  1C1D  2C1F               	goto	u3201
  3605  1C1E  2C20               	goto	u3200
  3606  1C1F                     u3201:
  3607  1C1F  2C25               	goto	l2461
  3608  1C20                     u3200:
  3609  1C20                     l2459:
  3610  1C20  09F5               	comf	___awmod@dividend,f
  3611  1C21  09F6               	comf	___awmod@dividend+1,f
  3612  1C22  0AF5               	incf	___awmod@dividend,f
  3613  1C23  1903               	skipnz
  3614  1C24  0AF6               	incf	___awmod@dividend+1,f
  3615  1C25                     l2461:
  3616  1C25  0876               	movf	___awmod@dividend+1,w
  3617  1C26  00F4               	movwf	?___awmod+1
  3618  1C27  0875               	movf	___awmod@dividend,w
  3619  1C28  00F3               	movwf	?___awmod
  3620  1C29                     l568:
  3621  1C29  0008               	return
  3622  1C2A                     __end_of___awmod:
  3623                           
  3624                           	psect	text4
  3625  08D3                     __ptext4:	
  3626 ;; *************** function ___awdiv *****************
  3627 ;; Defined at:
  3628 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  divisor         2    0[BANK0 ] int 
  3631 ;;  dividend        2    2[BANK0 ] int 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  quotient        2    7[BANK0 ] int 
  3634 ;;  sign            1    6[BANK0 ] unsigned char 
  3635 ;;  counter         1    5[BANK0 ] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  2    0[BANK0 ] int 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3645 ;;      Params:         0       4       0       0       0
  3646 ;;      Locals:         0       4       0       0       0
  3647 ;;      Temps:          0       1       0       0       0
  3648 ;;      Totals:         0       9       0       0       0
  3649 ;;Total ram usage:        9 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    1
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_scale
  3656 ;;		_sprintf
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function ___awdiv
  3662  08D3                     ___awdiv:
  3663  08D3                     l3761:	
  3664                           ;incstack = 0
  3665                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3666                           
  3667  08D3  1283               	bcf	3,5	;RP0=0, select bank0
  3668  08D4  1303               	bcf	3,6	;RP1=0, select bank0
  3669  08D5  01A6               	clrf	___awdiv@sign
  3670  08D6                     l3763:
  3671  08D6  1FA1               	btfss	___awdiv@divisor+1,7
  3672  08D7  28D9               	goto	u5971
  3673  08D8  28DA               	goto	u5970
  3674  08D9                     u5971:
  3675  08D9  28E1               	goto	l3769
  3676  08DA                     u5970:
  3677  08DA                     l3765:
  3678  08DA  09A0               	comf	___awdiv@divisor,f
  3679  08DB  09A1               	comf	___awdiv@divisor+1,f
  3680  08DC  0AA0               	incf	___awdiv@divisor,f
  3681  08DD  1903               	skipnz
  3682  08DE  0AA1               	incf	___awdiv@divisor+1,f
  3683  08DF                     l3767:
  3684  08DF  01A6               	clrf	___awdiv@sign
  3685  08E0  0AA6               	incf	___awdiv@sign,f
  3686  08E1                     l3769:
  3687  08E1  1FA3               	btfss	___awdiv@dividend+1,7
  3688  08E2  28E4               	goto	u5981
  3689  08E3  28E5               	goto	u5980
  3690  08E4                     u5981:
  3691  08E4  28EE               	goto	l3775
  3692  08E5                     u5980:
  3693  08E5                     l3771:
  3694  08E5  09A2               	comf	___awdiv@dividend,f
  3695  08E6  09A3               	comf	___awdiv@dividend+1,f
  3696  08E7  0AA2               	incf	___awdiv@dividend,f
  3697  08E8  1903               	skipnz
  3698  08E9  0AA3               	incf	___awdiv@dividend+1,f
  3699  08EA                     l3773:
  3700  08EA  3001               	movlw	1
  3701  08EB  00A4               	movwf	??___awdiv
  3702  08EC  0824               	movf	??___awdiv,w
  3703  08ED  06A6               	xorwf	___awdiv@sign,f
  3704  08EE                     l3775:
  3705  08EE  01A7               	clrf	___awdiv@quotient
  3706  08EF  01A8               	clrf	___awdiv@quotient+1
  3707  08F0                     l3777:
  3708  08F0  0820               	movf	___awdiv@divisor,w
  3709  08F1  0421               	iorwf	___awdiv@divisor+1,w
  3710  08F2  1903               	btfsc	3,2
  3711  08F3  28F5               	goto	u5991
  3712  08F4  28F6               	goto	u5990
  3713  08F5                     u5991:
  3714  08F5  292D               	goto	l3797
  3715  08F6                     u5990:
  3716  08F6                     l3779:
  3717  08F6  01A5               	clrf	___awdiv@counter
  3718  08F7  0AA5               	incf	___awdiv@counter,f
  3719  08F8  2904               	goto	l3785
  3720  08F9                     l3781:
  3721  08F9  3001               	movlw	1
  3722  08FA                     u6005:
  3723  08FA  1003               	clrc
  3724  08FB  0DA0               	rlf	___awdiv@divisor,f
  3725  08FC  0DA1               	rlf	___awdiv@divisor+1,f
  3726  08FD  3EFF               	addlw	-1
  3727  08FE  1D03               	skipz
  3728  08FF  28FA               	goto	u6005
  3729  0900                     l3783:
  3730  0900  3001               	movlw	1
  3731  0901  00A4               	movwf	??___awdiv
  3732  0902  0824               	movf	??___awdiv,w
  3733  0903  07A5               	addwf	___awdiv@counter,f
  3734  0904                     l3785:
  3735  0904  1FA1               	btfss	___awdiv@divisor+1,7
  3736  0905  2907               	goto	u6011
  3737  0906  2908               	goto	u6010
  3738  0907                     u6011:
  3739  0907  28F9               	goto	l3781
  3740  0908                     u6010:
  3741  0908                     l3787:
  3742  0908  3001               	movlw	1
  3743  0909                     u6025:
  3744  0909  1003               	clrc
  3745  090A  0DA7               	rlf	___awdiv@quotient,f
  3746  090B  0DA8               	rlf	___awdiv@quotient+1,f
  3747  090C  3EFF               	addlw	-1
  3748  090D  1D03               	skipz
  3749  090E  2909               	goto	u6025
  3750  090F  0821               	movf	___awdiv@divisor+1,w
  3751  0910  0223               	subwf	___awdiv@dividend+1,w
  3752  0911  1D03               	skipz
  3753  0912  2915               	goto	u6035
  3754  0913  0820               	movf	___awdiv@divisor,w
  3755  0914  0222               	subwf	___awdiv@dividend,w
  3756  0915                     u6035:
  3757  0915  1C03               	skipc
  3758  0916  2918               	goto	u6031
  3759  0917  2919               	goto	u6030
  3760  0918                     u6031:
  3761  0918  2920               	goto	l3793
  3762  0919                     u6030:
  3763  0919                     l3789:
  3764  0919  0820               	movf	___awdiv@divisor,w
  3765  091A  02A2               	subwf	___awdiv@dividend,f
  3766  091B  0821               	movf	___awdiv@divisor+1,w
  3767  091C  1C03               	skipc
  3768  091D  03A3               	decf	___awdiv@dividend+1,f
  3769  091E  02A3               	subwf	___awdiv@dividend+1,f
  3770  091F                     l3791:
  3771  091F  1427               	bsf	___awdiv@quotient,0
  3772  0920                     l3793:
  3773  0920  3001               	movlw	1
  3774  0921                     u6045:
  3775  0921  1003               	clrc
  3776  0922  0CA1               	rrf	___awdiv@divisor+1,f
  3777  0923  0CA0               	rrf	___awdiv@divisor,f
  3778  0924  3EFF               	addlw	-1
  3779  0925  1D03               	skipz
  3780  0926  2921               	goto	u6045
  3781  0927                     l3795:
  3782  0927  3001               	movlw	1
  3783  0928  02A5               	subwf	___awdiv@counter,f
  3784  0929  1D03               	btfss	3,2
  3785  092A  292C               	goto	u6051
  3786  092B  292D               	goto	u6050
  3787  092C                     u6051:
  3788  092C  2908               	goto	l3787
  3789  092D                     u6050:
  3790  092D                     l3797:
  3791  092D  0826               	movf	___awdiv@sign,w
  3792  092E  1903               	btfsc	3,2
  3793  092F  2931               	goto	u6061
  3794  0930  2932               	goto	u6060
  3795  0931                     u6061:
  3796  0931  2937               	goto	l3801
  3797  0932                     u6060:
  3798  0932                     l3799:
  3799  0932  09A7               	comf	___awdiv@quotient,f
  3800  0933  09A8               	comf	___awdiv@quotient+1,f
  3801  0934  0AA7               	incf	___awdiv@quotient,f
  3802  0935  1903               	skipnz
  3803  0936  0AA8               	incf	___awdiv@quotient+1,f
  3804  0937                     l3801:
  3805  0937  0828               	movf	___awdiv@quotient+1,w
  3806  0938  00A1               	movwf	?___awdiv+1
  3807  0939  0827               	movf	___awdiv@quotient,w
  3808  093A  00A0               	movwf	?___awdiv
  3809  093B                     l555:
  3810  093B  0008               	return
  3811  093C                     __end_of___awdiv:
  3812                           
  3813                           	psect	text5
  3814  08C1                     __ptext5:	
  3815 ;; *************** function _isdigit *****************
  3816 ;; Defined at:
  3817 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  c               1    wreg     unsigned char 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  c               1    4[COMMON] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;		None               void
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3831 ;;      Params:         0       0       0       0       0
  3832 ;;      Locals:         2       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0
  3834 ;;      Totals:         2       0       0       0       0
  3835 ;;Total ram usage:        2 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    1
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_sprintf
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           
  3846                           ;psect for function _isdigit
  3847  08C1                     _isdigit:
  3848                           
  3849                           ;incstack = 0
  3850                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3851                           ;isdigit@c stored from wreg
  3852  08C1  00F4               	movwf	isdigit@c
  3853  08C2                     l2927:
  3854  08C2  01F3               	clrf	_isdigit$1002
  3855  08C3                     l2929:
  3856  08C3  303A               	movlw	58
  3857  08C4  0274               	subwf	isdigit@c,w
  3858  08C5  1803               	skipnc
  3859  08C6  28C8               	goto	u4421
  3860  08C7  28C9               	goto	u4420
  3861  08C8                     u4421:
  3862  08C8  28D1               	goto	l2935
  3863  08C9                     u4420:
  3864  08C9                     l2931:
  3865  08C9  3030               	movlw	48
  3866  08CA  0274               	subwf	isdigit@c,w
  3867  08CB  1C03               	skipc
  3868  08CC  28CE               	goto	u4431
  3869  08CD  28CF               	goto	u4430
  3870  08CE                     u4431:
  3871  08CE  28D1               	goto	l2935
  3872  08CF                     u4430:
  3873  08CF                     l2933:
  3874  08CF  01F3               	clrf	_isdigit$1002
  3875  08D0  0AF3               	incf	_isdigit$1002,f
  3876  08D1                     l2935:
  3877  08D1  0C73               	rrf	_isdigit$1002,w
  3878  08D2                     l889:
  3879  08D2  0008               	return
  3880  08D3                     __end_of_isdigit:
  3881                           
  3882                           	psect	text6
  3883  1061                     __ptext6:	
  3884 ;; *************** function _fround *****************
  3885 ;; Defined at:
  3886 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  prec            1    wreg     unsigned char 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  prec            1   55[BANK0 ] unsigned char 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  4   36[BANK0 ] unsigned char 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3900 ;;      Params:         0       4       0       0       0
  3901 ;;      Locals:         0       9       0       0       0
  3902 ;;      Temps:          0       7       0       0       0
  3903 ;;      Totals:         0      20       0       0       0
  3904 ;;Total ram usage:       20 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    3
  3907 ;; This function calls:
  3908 ;;		___flmul
  3909 ;;		___lwdiv
  3910 ;;		___lwmod
  3911 ;; This function is called by:
  3912 ;;		_sprintf
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           
  3917                           ;psect for function _fround
  3918  1061                     _fround:
  3919                           
  3920                           ;incstack = 0
  3921                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3922                           ;fround@prec stored from wreg
  3923  1061  1283               	bcf	3,5	;RP0=0, select bank0
  3924  1062  1303               	bcf	3,6	;RP1=0, select bank0
  3925  1063  00D7               	movwf	fround@prec
  3926  1064                     l2869:
  3927                           
  3928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3929  1064  306E               	movlw	110
  3930  1065  0257               	subwf	fround@prec,w
  3931  1066  1C03               	skipc
  3932  1067  2869               	goto	u4171
  3933  1068  286A               	goto	u4170
  3934  1069                     u4171:
  3935  1069  2979               	goto	l2877
  3936  106A                     u4170:
  3937  106A                     l2871:
  3938                           
  3939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3940  106A  303F               	movlw	63
  3941  106B  00AD               	movwf	___flmul@b+3
  3942  106C  3000               	movlw	0
  3943  106D  00AC               	movwf	___flmul@b+2
  3944  106E  3000               	movlw	0
  3945  106F  00AB               	movwf	___flmul@b+1
  3946  1070  3000               	movlw	0
  3947  1071  00AA               	movwf	___flmul@b
  3948  1072  3064               	movlw	100
  3949  1073  00A0               	movwf	___lwdiv@divisor
  3950  1074  3000               	movlw	0
  3951  1075  00A1               	movwf	___lwdiv@divisor+1
  3952  1076  0857               	movf	fround@prec,w
  3953  1077  00C8               	movwf	??_fround
  3954  1078  01C9               	clrf	??_fround+1
  3955  1079  0848               	movf	??_fround,w
  3956  107A  00A2               	movwf	___lwdiv@dividend
  3957  107B  0849               	movf	??_fround+1,w
  3958  107C  00A3               	movwf	___lwdiv@dividend+1
  3959  107D  160A  158A  2295  160A  118A  	fcall	___lwdiv
  3960  1082  1283               	bcf	3,5	;RP0=0, select bank0
  3961  1083  1303               	bcf	3,6	;RP1=0, select bank0
  3962  1084  0820               	movf	?___lwdiv,w
  3963  1085  00CA               	movwf	??_fround+2
  3964  1086  3001               	movlw	1
  3965  1087                     u4185:
  3966  1087  1003               	clrc
  3967  1088  0DCA               	rlf	??_fround+2,f
  3968  1089  3EFF               	addlw	-1
  3969  108A  1D03               	skipz
  3970  108B  2887               	goto	u4185
  3971  108C  1003               	clrc
  3972  108D  0D4A               	rlf	??_fround+2,w
  3973  108E  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3974  108F  0084               	movwf	4
  3975  1090  120A  158A  200A  160A  118A  	fcall	stringdir
  3976  1095  00CB               	movwf	??_fround+3
  3977  1096  120A  158A  200A  160A  118A  	fcall	stringdir
  3978  109B  00CC               	movwf	??_fround+4
  3979  109C  120A  158A  200A  160A  118A  	fcall	stringdir
  3980  10A1  00CD               	movwf	??_fround+5
  3981  10A2  120A  158A  200A  160A  118A  	fcall	stringdir
  3982  10A7  00CE               	movwf	??_fround+6
  3983  10A8  084E               	movf	??_fround+6,w
  3984  10A9  00B1               	movwf	___flmul@a+3
  3985  10AA  084D               	movf	??_fround+5,w
  3986  10AB  00B0               	movwf	___flmul@a+2
  3987  10AC  084C               	movf	??_fround+4,w
  3988  10AD  00AF               	movwf	___flmul@a+1
  3989  10AE  084B               	movf	??_fround+3,w
  3990  10AF  00AE               	movwf	___flmul@a
  3991  10B0  120A  158A  213C  160A  118A  	fcall	___flmul
  3992  10B5  1283               	bcf	3,5	;RP0=0, select bank0
  3993  10B6  1303               	bcf	3,6	;RP1=0, select bank0
  3994  10B7  082D               	movf	?___flmul+3,w
  3995  10B8  00D6               	movwf	_fround$1177+3
  3996  10B9  082C               	movf	?___flmul+2,w
  3997  10BA  00D5               	movwf	_fround$1177+2
  3998  10BB  082B               	movf	?___flmul+1,w
  3999  10BC  00D4               	movwf	_fround$1177+1
  4000  10BD  082A               	movf	?___flmul,w
  4001  10BE  00D3               	movwf	_fround$1177
  4002                           
  4003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4004  10BF  300A               	movlw	10
  4005  10C0  00A0               	movwf	___lwdiv@divisor
  4006  10C1  3000               	movlw	0
  4007  10C2  00A1               	movwf	___lwdiv@divisor+1
  4008  10C3  0857               	movf	fround@prec,w
  4009  10C4  00C8               	movwf	??_fround
  4010  10C5  01C9               	clrf	??_fround+1
  4011  10C6  0848               	movf	??_fround,w
  4012  10C7  00F5               	movwf	___lwmod@dividend
  4013  10C8  0849               	movf	??_fround+1,w
  4014  10C9  00F6               	movwf	___lwmod@dividend+1
  4015  10CA  3064               	movlw	100
  4016  10CB  00F3               	movwf	___lwmod@divisor
  4017  10CC  3000               	movlw	0
  4018  10CD  00F4               	movwf	___lwmod@divisor+1
  4019  10CE  160A  158A  2112  160A  118A  	fcall	___lwmod
  4020  10D3  0874               	movf	?___lwmod+1,w
  4021  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  4022  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  4023  10D6  00A3               	movwf	___lwdiv@dividend+1
  4024  10D7  0873               	movf	?___lwmod,w
  4025  10D8  00A2               	movwf	___lwdiv@dividend
  4026  10D9  160A  158A  2295  160A  118A  	fcall	___lwdiv
  4027  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  4028  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  4029  10E0  0820               	movf	?___lwdiv,w
  4030  10E1  00CA               	movwf	??_fround+2
  4031  10E2  3001               	movlw	1
  4032  10E3                     u4195:
  4033  10E3  1003               	clrc
  4034  10E4  0DCA               	rlf	??_fround+2,f
  4035  10E5  3EFF               	addlw	-1
  4036  10E6  1D03               	skipz
  4037  10E7  28E3               	goto	u4195
  4038  10E8  1003               	clrc
  4039  10E9  0D4A               	rlf	??_fround+2,w
  4040  10EA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4041  10EB  0084               	movwf	4
  4042  10EC  120A  158A  200A  160A  118A  	fcall	stringdir
  4043  10F1  00CB               	movwf	??_fround+3
  4044  10F2  120A  158A  200A  160A  118A  	fcall	stringdir
  4045  10F7  00CC               	movwf	??_fround+4
  4046  10F8  120A  158A  200A  160A  118A  	fcall	stringdir
  4047  10FD  00CD               	movwf	??_fround+5
  4048  10FE  120A  158A  200A  160A  118A  	fcall	stringdir
  4049  1103  00CE               	movwf	??_fround+6
  4050  1104  084E               	movf	??_fround+6,w
  4051  1105  00AD               	movwf	___flmul@b+3
  4052  1106  084D               	movf	??_fround+5,w
  4053  1107  00AC               	movwf	___flmul@b+2
  4054  1108  084C               	movf	??_fround+4,w
  4055  1109  00AB               	movwf	___flmul@b+1
  4056  110A  084B               	movf	??_fround+3,w
  4057  110B  00AA               	movwf	___flmul@b
  4058  110C  0856               	movf	_fround$1177+3,w
  4059  110D  00B1               	movwf	___flmul@a+3
  4060  110E  0855               	movf	_fround$1177+2,w
  4061  110F  00B0               	movwf	___flmul@a+2
  4062  1110  0854               	movf	_fround$1177+1,w
  4063  1111  00AF               	movwf	___flmul@a+1
  4064  1112  0853               	movf	_fround$1177,w
  4065  1113  00AE               	movwf	___flmul@a
  4066  1114  120A  158A  213C  160A  118A  	fcall	___flmul
  4067  1119  1283               	bcf	3,5	;RP0=0, select bank0
  4068  111A  1303               	bcf	3,6	;RP1=0, select bank0
  4069  111B  082D               	movf	?___flmul+3,w
  4070  111C  00D2               	movwf	_fround$1178+3
  4071  111D  082C               	movf	?___flmul+2,w
  4072  111E  00D1               	movwf	_fround$1178+2
  4073  111F  082B               	movf	?___flmul+1,w
  4074  1120  00D0               	movwf	_fround$1178+1
  4075  1121  082A               	movf	?___flmul,w
  4076  1122  00CF               	movwf	_fround$1178
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4079  1123  300A               	movlw	10
  4080  1124  00F3               	movwf	___lwmod@divisor
  4081  1125  3000               	movlw	0
  4082  1126  00F4               	movwf	___lwmod@divisor+1
  4083  1127  0857               	movf	fround@prec,w
  4084  1128  00C8               	movwf	??_fround
  4085  1129  01C9               	clrf	??_fround+1
  4086  112A  0848               	movf	??_fround,w
  4087  112B  00F5               	movwf	___lwmod@dividend
  4088  112C  0849               	movf	??_fround+1,w
  4089  112D  00F6               	movwf	___lwmod@dividend+1
  4090  112E  160A  158A  2112  160A  118A  	fcall	___lwmod
  4091  1133  0873               	movf	?___lwmod,w
  4092  1134  1283               	bcf	3,5	;RP0=0, select bank0
  4093  1135  1303               	bcf	3,6	;RP1=0, select bank0
  4094  1136  00CA               	movwf	??_fround+2
  4095  1137  3001               	movlw	1
  4096  1138                     u4205:
  4097  1138  1003               	clrc
  4098  1139  0DCA               	rlf	??_fround+2,f
  4099  113A  3EFF               	addlw	-1
  4100  113B  1D03               	skipz
  4101  113C  2938               	goto	u4205
  4102  113D  1003               	clrc
  4103  113E  0D4A               	rlf	??_fround+2,w
  4104  113F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4105  1140  0084               	movwf	4
  4106  1141  120A  158A  200A  160A  118A  	fcall	stringdir
  4107  1146  00CB               	movwf	??_fround+3
  4108  1147  120A  158A  200A  160A  118A  	fcall	stringdir
  4109  114C  00CC               	movwf	??_fround+4
  4110  114D  120A  158A  200A  160A  118A  	fcall	stringdir
  4111  1152  00CD               	movwf	??_fround+5
  4112  1153  120A  158A  200A  160A  118A  	fcall	stringdir
  4113  1158  00CE               	movwf	??_fround+6
  4114  1159  084E               	movf	??_fround+6,w
  4115  115A  00AD               	movwf	___flmul@b+3
  4116  115B  084D               	movf	??_fround+5,w
  4117  115C  00AC               	movwf	___flmul@b+2
  4118  115D  084C               	movf	??_fround+4,w
  4119  115E  00AB               	movwf	___flmul@b+1
  4120  115F  084B               	movf	??_fround+3,w
  4121  1160  00AA               	movwf	___flmul@b
  4122  1161  0852               	movf	_fround$1178+3,w
  4123  1162  00B1               	movwf	___flmul@a+3
  4124  1163  0851               	movf	_fround$1178+2,w
  4125  1164  00B0               	movwf	___flmul@a+2
  4126  1165  0850               	movf	_fround$1178+1,w
  4127  1166  00AF               	movwf	___flmul@a+1
  4128  1167  084F               	movf	_fround$1178,w
  4129  1168  00AE               	movwf	___flmul@a
  4130  1169  120A  158A  213C  160A  118A  	fcall	___flmul
  4131  116E  1283               	bcf	3,5	;RP0=0, select bank0
  4132  116F  1303               	bcf	3,6	;RP1=0, select bank0
  4133  1170  082D               	movf	?___flmul+3,w
  4134  1171  00C7               	movwf	?_fround+3
  4135  1172  082C               	movf	?___flmul+2,w
  4136  1173  00C6               	movwf	?_fround+2
  4137  1174  082B               	movf	?___flmul+1,w
  4138  1175  00C5               	movwf	?_fround+1
  4139  1176  082A               	movf	?___flmul,w
  4140  1177  00C4               	movwf	?_fround
  4141  1178  2A6D               	goto	l299
  4142  1179                     l2877:
  4143  1179  300B               	movlw	11
  4144  117A  0257               	subwf	fround@prec,w
  4145  117B  1C03               	skipc
  4146  117C  297E               	goto	u4211
  4147  117D  297F               	goto	u4210
  4148  117E                     u4211:
  4149  117E  2A2A               	goto	l2883
  4150  117F                     u4210:
  4151  117F                     l2879:
  4152                           
  4153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4154  117F  303F               	movlw	63
  4155  1180  00AD               	movwf	___flmul@b+3
  4156  1181  3000               	movlw	0
  4157  1182  00AC               	movwf	___flmul@b+2
  4158  1183  3000               	movlw	0
  4159  1184  00AB               	movwf	___flmul@b+1
  4160  1185  3000               	movlw	0
  4161  1186  00AA               	movwf	___flmul@b
  4162  1187  300A               	movlw	10
  4163  1188  00A0               	movwf	___lwdiv@divisor
  4164  1189  3000               	movlw	0
  4165  118A  00A1               	movwf	___lwdiv@divisor+1
  4166  118B  0857               	movf	fround@prec,w
  4167  118C  00C8               	movwf	??_fround
  4168  118D  01C9               	clrf	??_fround+1
  4169  118E  0848               	movf	??_fround,w
  4170  118F  00A2               	movwf	___lwdiv@dividend
  4171  1190  0849               	movf	??_fround+1,w
  4172  1191  00A3               	movwf	___lwdiv@dividend+1
  4173  1192  160A  158A  2295  160A  118A  	fcall	___lwdiv
  4174  1197  1283               	bcf	3,5	;RP0=0, select bank0
  4175  1198  1303               	bcf	3,6	;RP1=0, select bank0
  4176  1199  0820               	movf	?___lwdiv,w
  4177  119A  00CA               	movwf	??_fround+2
  4178  119B  3001               	movlw	1
  4179  119C                     u4225:
  4180  119C  1003               	clrc
  4181  119D  0DCA               	rlf	??_fround+2,f
  4182  119E  3EFF               	addlw	-1
  4183  119F  1D03               	skipz
  4184  11A0  299C               	goto	u4225
  4185  11A1  1003               	clrc
  4186  11A2  0D4A               	rlf	??_fround+2,w
  4187  11A3  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4188  11A4  0084               	movwf	4
  4189  11A5  120A  158A  200A  160A  118A  	fcall	stringdir
  4190  11AA  00CB               	movwf	??_fround+3
  4191  11AB  120A  158A  200A  160A  118A  	fcall	stringdir
  4192  11B0  00CC               	movwf	??_fround+4
  4193  11B1  120A  158A  200A  160A  118A  	fcall	stringdir
  4194  11B6  00CD               	movwf	??_fround+5
  4195  11B7  120A  158A  200A  160A  118A  	fcall	stringdir
  4196  11BC  00CE               	movwf	??_fround+6
  4197  11BD  084E               	movf	??_fround+6,w
  4198  11BE  00B1               	movwf	___flmul@a+3
  4199  11BF  084D               	movf	??_fround+5,w
  4200  11C0  00B0               	movwf	___flmul@a+2
  4201  11C1  084C               	movf	??_fround+4,w
  4202  11C2  00AF               	movwf	___flmul@a+1
  4203  11C3  084B               	movf	??_fround+3,w
  4204  11C4  00AE               	movwf	___flmul@a
  4205  11C5  120A  158A  213C  160A  118A  	fcall	___flmul
  4206  11CA  1283               	bcf	3,5	;RP0=0, select bank0
  4207  11CB  1303               	bcf	3,6	;RP1=0, select bank0
  4208  11CC  082D               	movf	?___flmul+3,w
  4209  11CD  00D6               	movwf	_fround$1177+3
  4210  11CE  082C               	movf	?___flmul+2,w
  4211  11CF  00D5               	movwf	_fround$1177+2
  4212  11D0  082B               	movf	?___flmul+1,w
  4213  11D1  00D4               	movwf	_fround$1177+1
  4214  11D2  082A               	movf	?___flmul,w
  4215  11D3  00D3               	movwf	_fround$1177
  4216                           
  4217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4218  11D4  300A               	movlw	10
  4219  11D5  00F3               	movwf	___lwmod@divisor
  4220  11D6  3000               	movlw	0
  4221  11D7  00F4               	movwf	___lwmod@divisor+1
  4222  11D8  0857               	movf	fround@prec,w
  4223  11D9  00C8               	movwf	??_fround
  4224  11DA  01C9               	clrf	??_fround+1
  4225  11DB  0848               	movf	??_fround,w
  4226  11DC  00F5               	movwf	___lwmod@dividend
  4227  11DD  0849               	movf	??_fround+1,w
  4228  11DE  00F6               	movwf	___lwmod@dividend+1
  4229  11DF  160A  158A  2112  160A  118A  	fcall	___lwmod
  4230  11E4  0873               	movf	?___lwmod,w
  4231  11E5  1283               	bcf	3,5	;RP0=0, select bank0
  4232  11E6  1303               	bcf	3,6	;RP1=0, select bank0
  4233  11E7  00CA               	movwf	??_fround+2
  4234  11E8  3001               	movlw	1
  4235  11E9                     u4235:
  4236  11E9  1003               	clrc
  4237  11EA  0DCA               	rlf	??_fround+2,f
  4238  11EB  3EFF               	addlw	-1
  4239  11EC  1D03               	skipz
  4240  11ED  29E9               	goto	u4235
  4241  11EE  1003               	clrc
  4242  11EF  0D4A               	rlf	??_fround+2,w
  4243  11F0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4244  11F1  0084               	movwf	4
  4245  11F2  120A  158A  200A  160A  118A  	fcall	stringdir
  4246  11F7  00CB               	movwf	??_fround+3
  4247  11F8  120A  158A  200A  160A  118A  	fcall	stringdir
  4248  11FD  00CC               	movwf	??_fround+4
  4249  11FE  120A  158A  200A  160A  118A  	fcall	stringdir
  4250  1203  00CD               	movwf	??_fround+5
  4251  1204  120A  158A  200A  160A  118A  	fcall	stringdir
  4252  1209  00CE               	movwf	??_fround+6
  4253  120A  084E               	movf	??_fround+6,w
  4254  120B  00AD               	movwf	___flmul@b+3
  4255  120C  084D               	movf	??_fround+5,w
  4256  120D  00AC               	movwf	___flmul@b+2
  4257  120E  084C               	movf	??_fround+4,w
  4258  120F  00AB               	movwf	___flmul@b+1
  4259  1210  084B               	movf	??_fround+3,w
  4260  1211  00AA               	movwf	___flmul@b
  4261  1212  0856               	movf	_fround$1177+3,w
  4262  1213  00B1               	movwf	___flmul@a+3
  4263  1214  0855               	movf	_fround$1177+2,w
  4264  1215  00B0               	movwf	___flmul@a+2
  4265  1216  0854               	movf	_fround$1177+1,w
  4266  1217  00AF               	movwf	___flmul@a+1
  4267  1218  0853               	movf	_fround$1177,w
  4268  1219  00AE               	movwf	___flmul@a
  4269  121A  120A  158A  213C  160A  118A  	fcall	___flmul
  4270  121F  1283               	bcf	3,5	;RP0=0, select bank0
  4271  1220  1303               	bcf	3,6	;RP1=0, select bank0
  4272  1221  082D               	movf	?___flmul+3,w
  4273  1222  00C7               	movwf	?_fround+3
  4274  1223  082C               	movf	?___flmul+2,w
  4275  1224  00C6               	movwf	?_fround+2
  4276  1225  082B               	movf	?___flmul+1,w
  4277  1226  00C5               	movwf	?_fround+1
  4278  1227  082A               	movf	?___flmul,w
  4279  1228  00C4               	movwf	?_fround
  4280  1229  2A6D               	goto	l299
  4281  122A                     l2883:
  4282                           
  4283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4284  122A  303F               	movlw	63
  4285  122B  00AD               	movwf	___flmul@b+3
  4286  122C  3000               	movlw	0
  4287  122D  00AC               	movwf	___flmul@b+2
  4288  122E  3000               	movlw	0
  4289  122F  00AB               	movwf	___flmul@b+1
  4290  1230  3000               	movlw	0
  4291  1231  00AA               	movwf	___flmul@b
  4292  1232  0857               	movf	fround@prec,w
  4293  1233  00C8               	movwf	??_fround
  4294  1234  3001               	movlw	1
  4295  1235                     u4245:
  4296  1235  1003               	clrc
  4297  1236  0DC8               	rlf	??_fround,f
  4298  1237  3EFF               	addlw	-1
  4299  1238  1D03               	skipz
  4300  1239  2A35               	goto	u4245
  4301  123A  1003               	clrc
  4302  123B  0D48               	rlf	??_fround,w
  4303  123C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4304  123D  0084               	movwf	4
  4305  123E  120A  158A  200A  160A  118A  	fcall	stringdir
  4306  1243  00C9               	movwf	??_fround+1
  4307  1244  120A  158A  200A  160A  118A  	fcall	stringdir
  4308  1249  00CA               	movwf	??_fround+2
  4309  124A  120A  158A  200A  160A  118A  	fcall	stringdir
  4310  124F  00CB               	movwf	??_fround+3
  4311  1250  120A  158A  200A  160A  118A  	fcall	stringdir
  4312  1255  00CC               	movwf	??_fround+4
  4313  1256  084C               	movf	??_fround+4,w
  4314  1257  00B1               	movwf	___flmul@a+3
  4315  1258  084B               	movf	??_fround+3,w
  4316  1259  00B0               	movwf	___flmul@a+2
  4317  125A  084A               	movf	??_fround+2,w
  4318  125B  00AF               	movwf	___flmul@a+1
  4319  125C  0849               	movf	??_fround+1,w
  4320  125D  00AE               	movwf	___flmul@a
  4321  125E  120A  158A  213C  160A  118A  	fcall	___flmul
  4322  1263  1283               	bcf	3,5	;RP0=0, select bank0
  4323  1264  1303               	bcf	3,6	;RP1=0, select bank0
  4324  1265  082D               	movf	?___flmul+3,w
  4325  1266  00C7               	movwf	?_fround+3
  4326  1267  082C               	movf	?___flmul+2,w
  4327  1268  00C6               	movwf	?_fround+2
  4328  1269  082B               	movf	?___flmul+1,w
  4329  126A  00C5               	movwf	?_fround+1
  4330  126B  082A               	movf	?___flmul,w
  4331  126C  00C4               	movwf	?_fround
  4332  126D                     l299:
  4333  126D  0008               	return
  4334  126E                     __end_of_fround:
  4335                           
  4336                           	psect	text7
  4337  1912                     __ptext7:	
  4338 ;; *************** function ___lwmod *****************
  4339 ;; Defined at:
  4340 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  divisor         2    3[COMMON] unsigned int 
  4343 ;;  dividend        2    5[COMMON] unsigned int 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  counter         1    8[COMMON] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  2    3[COMMON] unsigned int 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4355 ;;      Params:         4       0       0       0       0
  4356 ;;      Locals:         1       0       0       0       0
  4357 ;;      Temps:          1       0       0       0       0
  4358 ;;      Totals:         6       0       0       0       0
  4359 ;;Total ram usage:        6 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_fround
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           
  4370                           ;psect for function ___lwmod
  4371  1912                     ___lwmod:
  4372  1912                     l2491:	
  4373                           ;incstack = 0
  4374                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4375                           
  4376  1912  0873               	movf	___lwmod@divisor,w
  4377  1913  0474               	iorwf	___lwmod@divisor+1,w
  4378  1914  1903               	btfsc	3,2
  4379  1915  2917               	goto	u3281
  4380  1916  2918               	goto	u3280
  4381  1917                     u3281:
  4382  1917  2947               	goto	l2509
  4383  1918                     u3280:
  4384  1918                     l2493:
  4385  1918  01F8               	clrf	___lwmod@counter
  4386  1919  0AF8               	incf	___lwmod@counter,f
  4387  191A  2926               	goto	l2499
  4388  191B                     l2495:
  4389  191B  3001               	movlw	1
  4390  191C                     u3295:
  4391  191C  1003               	clrc
  4392  191D  0DF3               	rlf	___lwmod@divisor,f
  4393  191E  0DF4               	rlf	___lwmod@divisor+1,f
  4394  191F  3EFF               	addlw	-1
  4395  1920  1D03               	skipz
  4396  1921  291C               	goto	u3295
  4397  1922                     l2497:
  4398  1922  3001               	movlw	1
  4399  1923  00F7               	movwf	??___lwmod
  4400  1924  0877               	movf	??___lwmod,w
  4401  1925  07F8               	addwf	___lwmod@counter,f
  4402  1926                     l2499:
  4403  1926  1FF4               	btfss	___lwmod@divisor+1,7
  4404  1927  2929               	goto	u3301
  4405  1928  292A               	goto	u3300
  4406  1929                     u3301:
  4407  1929  291B               	goto	l2495
  4408  192A                     u3300:
  4409  192A                     l2501:
  4410  192A  0874               	movf	___lwmod@divisor+1,w
  4411  192B  0276               	subwf	___lwmod@dividend+1,w
  4412  192C  1D03               	skipz
  4413  192D  2930               	goto	u3315
  4414  192E  0873               	movf	___lwmod@divisor,w
  4415  192F  0275               	subwf	___lwmod@dividend,w
  4416  1930                     u3315:
  4417  1930  1C03               	skipc
  4418  1931  2933               	goto	u3311
  4419  1932  2934               	goto	u3310
  4420  1933                     u3311:
  4421  1933  293A               	goto	l2505
  4422  1934                     u3310:
  4423  1934                     l2503:
  4424  1934  0873               	movf	___lwmod@divisor,w
  4425  1935  02F5               	subwf	___lwmod@dividend,f
  4426  1936  0874               	movf	___lwmod@divisor+1,w
  4427  1937  1C03               	skipc
  4428  1938  03F6               	decf	___lwmod@dividend+1,f
  4429  1939  02F6               	subwf	___lwmod@dividend+1,f
  4430  193A                     l2505:
  4431  193A  3001               	movlw	1
  4432  193B                     u3325:
  4433  193B  1003               	clrc
  4434  193C  0CF4               	rrf	___lwmod@divisor+1,f
  4435  193D  0CF3               	rrf	___lwmod@divisor,f
  4436  193E  3EFF               	addlw	-1
  4437  193F  1D03               	skipz
  4438  1940  293B               	goto	u3325
  4439  1941                     l2507:
  4440  1941  3001               	movlw	1
  4441  1942  02F8               	subwf	___lwmod@counter,f
  4442  1943  1D03               	btfss	3,2
  4443  1944  2946               	goto	u3331
  4444  1945  2947               	goto	u3330
  4445  1946                     u3331:
  4446  1946  292A               	goto	l2501
  4447  1947                     u3330:
  4448  1947                     l2509:
  4449  1947  0876               	movf	___lwmod@dividend+1,w
  4450  1948  00F4               	movwf	?___lwmod+1
  4451  1949  0875               	movf	___lwmod@dividend,w
  4452  194A  00F3               	movwf	?___lwmod
  4453  194B                     l718:
  4454  194B  0008               	return
  4455  194C                     __end_of___lwmod:
  4456                           
  4457                           	psect	text8
  4458  1A95                     __ptext8:	
  4459 ;; *************** function ___lwdiv *****************
  4460 ;; Defined at:
  4461 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  divisor         2    0[BANK0 ] unsigned int 
  4464 ;;  dividend        2    2[BANK0 ] unsigned int 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  quotient        2    4[BANK0 ] unsigned int 
  4467 ;;  counter         1    6[BANK0 ] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  2    0[BANK0 ] unsigned int 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4477 ;;      Params:         0       4       0       0       0
  4478 ;;      Locals:         0       3       0       0       0
  4479 ;;      Temps:          1       0       0       0       0
  4480 ;;      Totals:         1       7       0       0       0
  4481 ;;Total ram usage:        8 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    1
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_fround
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           
  4492                           ;psect for function ___lwdiv
  4493  1A95                     ___lwdiv:
  4494  1A95                     l2465:	
  4495                           ;incstack = 0
  4496                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4497                           
  4498  1A95  1283               	bcf	3,5	;RP0=0, select bank0
  4499  1A96  1303               	bcf	3,6	;RP1=0, select bank0
  4500  1A97  01A4               	clrf	___lwdiv@quotient
  4501  1A98  01A5               	clrf	___lwdiv@quotient+1
  4502  1A99                     l2467:
  4503  1A99  0820               	movf	___lwdiv@divisor,w
  4504  1A9A  0421               	iorwf	___lwdiv@divisor+1,w
  4505  1A9B  1903               	btfsc	3,2
  4506  1A9C  2A9E               	goto	u3211
  4507  1A9D  2A9F               	goto	u3210
  4508  1A9E                     u3211:
  4509  1A9E  2AD6               	goto	l2487
  4510  1A9F                     u3210:
  4511  1A9F                     l2469:
  4512  1A9F  01A6               	clrf	___lwdiv@counter
  4513  1AA0  0AA6               	incf	___lwdiv@counter,f
  4514  1AA1  2AAD               	goto	l2475
  4515  1AA2                     l2471:
  4516  1AA2  3001               	movlw	1
  4517  1AA3                     u3225:
  4518  1AA3  1003               	clrc
  4519  1AA4  0DA0               	rlf	___lwdiv@divisor,f
  4520  1AA5  0DA1               	rlf	___lwdiv@divisor+1,f
  4521  1AA6  3EFF               	addlw	-1
  4522  1AA7  1D03               	skipz
  4523  1AA8  2AA3               	goto	u3225
  4524  1AA9                     l2473:
  4525  1AA9  3001               	movlw	1
  4526  1AAA  00F9               	movwf	??___lwdiv
  4527  1AAB  0879               	movf	??___lwdiv,w
  4528  1AAC  07A6               	addwf	___lwdiv@counter,f
  4529  1AAD                     l2475:
  4530  1AAD  1FA1               	btfss	___lwdiv@divisor+1,7
  4531  1AAE  2AB0               	goto	u3231
  4532  1AAF  2AB1               	goto	u3230
  4533  1AB0                     u3231:
  4534  1AB0  2AA2               	goto	l2471
  4535  1AB1                     u3230:
  4536  1AB1                     l2477:
  4537  1AB1  3001               	movlw	1
  4538  1AB2                     u3245:
  4539  1AB2  1003               	clrc
  4540  1AB3  0DA4               	rlf	___lwdiv@quotient,f
  4541  1AB4  0DA5               	rlf	___lwdiv@quotient+1,f
  4542  1AB5  3EFF               	addlw	-1
  4543  1AB6  1D03               	skipz
  4544  1AB7  2AB2               	goto	u3245
  4545  1AB8  0821               	movf	___lwdiv@divisor+1,w
  4546  1AB9  0223               	subwf	___lwdiv@dividend+1,w
  4547  1ABA  1D03               	skipz
  4548  1ABB  2ABE               	goto	u3255
  4549  1ABC  0820               	movf	___lwdiv@divisor,w
  4550  1ABD  0222               	subwf	___lwdiv@dividend,w
  4551  1ABE                     u3255:
  4552  1ABE  1C03               	skipc
  4553  1ABF  2AC1               	goto	u3251
  4554  1AC0  2AC2               	goto	u3250
  4555  1AC1                     u3251:
  4556  1AC1  2AC9               	goto	l2483
  4557  1AC2                     u3250:
  4558  1AC2                     l2479:
  4559  1AC2  0820               	movf	___lwdiv@divisor,w
  4560  1AC3  02A2               	subwf	___lwdiv@dividend,f
  4561  1AC4  0821               	movf	___lwdiv@divisor+1,w
  4562  1AC5  1C03               	skipc
  4563  1AC6  03A3               	decf	___lwdiv@dividend+1,f
  4564  1AC7  02A3               	subwf	___lwdiv@dividend+1,f
  4565  1AC8                     l2481:
  4566  1AC8  1424               	bsf	___lwdiv@quotient,0
  4567  1AC9                     l2483:
  4568  1AC9  3001               	movlw	1
  4569  1ACA                     u3265:
  4570  1ACA  1003               	clrc
  4571  1ACB  0CA1               	rrf	___lwdiv@divisor+1,f
  4572  1ACC  0CA0               	rrf	___lwdiv@divisor,f
  4573  1ACD  3EFF               	addlw	-1
  4574  1ACE  1D03               	skipz
  4575  1ACF  2ACA               	goto	u3265
  4576  1AD0                     l2485:
  4577  1AD0  3001               	movlw	1
  4578  1AD1  02A6               	subwf	___lwdiv@counter,f
  4579  1AD2  1D03               	btfss	3,2
  4580  1AD3  2AD5               	goto	u3271
  4581  1AD4  2AD6               	goto	u3270
  4582  1AD5                     u3271:
  4583  1AD5  2AB1               	goto	l2477
  4584  1AD6                     u3270:
  4585  1AD6                     l2487:
  4586  1AD6  0825               	movf	___lwdiv@quotient+1,w
  4587  1AD7  00A1               	movwf	?___lwdiv+1
  4588  1AD8  0824               	movf	___lwdiv@quotient,w
  4589  1AD9  00A0               	movwf	?___lwdiv
  4590  1ADA                     l708:
  4591  1ADA  0008               	return
  4592  1ADB                     __end_of___lwdiv:
  4593                           
  4594                           	psect	text9
  4595  1DF2                     __ptext9:	
  4596 ;; *************** function __tdiv_to_l_ *****************
  4597 ;; Defined at:
  4598 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  f1              4    0[BANK0 ] float 
  4601 ;;  f2              4    4[BANK0 ] float 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  quot            4    8[BANK0 ] unsigned long 
  4604 ;;  exp1            1   13[BANK0 ] unsigned char 
  4605 ;;  cntr            1   12[BANK0 ] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  4    0[BANK0 ] unsigned long 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4615 ;;      Params:         0       8       0       0       0
  4616 ;;      Locals:         0       6       0       0       0
  4617 ;;      Temps:          4       0       0       0       0
  4618 ;;      Totals:         4      14       0       0       0
  4619 ;;Total ram usage:       18 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_sprintf
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           
  4630                           ;psect for function __tdiv_to_l_
  4631  1DF2                     __tdiv_to_l_:
  4632  1DF2                     l3867:	
  4633                           ;incstack = 0
  4634                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4635                           
  4636  1DF2  1283               	bcf	3,5	;RP0=0, select bank0
  4637  1DF3  1303               	bcf	3,6	;RP1=0, select bank0
  4638  1DF4  0820               	movf	__tdiv_to_l_@f1,w
  4639  1DF5  00F3               	movwf	??__tdiv_to_l_
  4640  1DF6  0821               	movf	__tdiv_to_l_@f1+1,w
  4641  1DF7  00F4               	movwf	??__tdiv_to_l_+1
  4642  1DF8  0822               	movf	__tdiv_to_l_@f1+2,w
  4643  1DF9  00F5               	movwf	??__tdiv_to_l_+2
  4644  1DFA  1003               	clrc
  4645  1DFB  0D74               	rlf	??__tdiv_to_l_+1,w
  4646  1DFC  0D75               	rlf	??__tdiv_to_l_+2,w
  4647  1DFD  00F6               	movwf	??__tdiv_to_l_+3
  4648  1DFE  0876               	movf	??__tdiv_to_l_+3,w
  4649  1DFF  00AD               	movwf	__tdiv_to_l_@exp1
  4650  1E00  082D               	movf	__tdiv_to_l_@exp1,w
  4651  1E01  1D03               	btfss	3,2
  4652  1E02  2E04               	goto	u6241
  4653  1E03  2E05               	goto	u6240
  4654  1E04                     u6241:
  4655  1E04  2E0E               	goto	l3873
  4656  1E05                     u6240:
  4657  1E05                     l3869:
  4658  1E05  3000               	movlw	0
  4659  1E06  00A3               	movwf	?__tdiv_to_l_+3
  4660  1E07  3000               	movlw	0
  4661  1E08  00A2               	movwf	?__tdiv_to_l_+2
  4662  1E09  3000               	movlw	0
  4663  1E0A  00A1               	movwf	?__tdiv_to_l_+1
  4664  1E0B  3000               	movlw	0
  4665  1E0C  00A0               	movwf	?__tdiv_to_l_
  4666  1E0D  2EAE               	goto	l619
  4667  1E0E                     l3873:
  4668  1E0E  0824               	movf	__tdiv_to_l_@f2,w
  4669  1E0F  00F3               	movwf	??__tdiv_to_l_
  4670  1E10  0825               	movf	__tdiv_to_l_@f2+1,w
  4671  1E11  00F4               	movwf	??__tdiv_to_l_+1
  4672  1E12  0826               	movf	__tdiv_to_l_@f2+2,w
  4673  1E13  00F5               	movwf	??__tdiv_to_l_+2
  4674  1E14  1003               	clrc
  4675  1E15  0D74               	rlf	??__tdiv_to_l_+1,w
  4676  1E16  0D75               	rlf	??__tdiv_to_l_+2,w
  4677  1E17  00F6               	movwf	??__tdiv_to_l_+3
  4678  1E18  0876               	movf	??__tdiv_to_l_+3,w
  4679  1E19  00AC               	movwf	__tdiv_to_l_@cntr
  4680  1E1A  082C               	movf	__tdiv_to_l_@cntr,w
  4681  1E1B  1D03               	btfss	3,2
  4682  1E1C  2E1E               	goto	u6251
  4683  1E1D  2E1F               	goto	u6250
  4684  1E1E                     u6251:
  4685  1E1E  2E20               	goto	l620
  4686  1E1F                     u6250:
  4687  1E1F  2E05               	goto	l3869
  4688  1E20                     l620:
  4689  1E20  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4690  1E21                     l3879:
  4691  1E21  30FF               	movlw	255
  4692  1E22  05A0               	andwf	__tdiv_to_l_@f1,f
  4693  1E23  30FF               	movlw	255
  4694  1E24  05A1               	andwf	__tdiv_to_l_@f1+1,f
  4695  1E25  3000               	movlw	0
  4696  1E26  05A2               	andwf	__tdiv_to_l_@f1+2,f
  4697  1E27                     l3881:
  4698  1E27  17A5               	bsf	__tdiv_to_l_@f2+1,7
  4699  1E28  30FF               	movlw	255
  4700  1E29  05A4               	andwf	__tdiv_to_l_@f2,f
  4701  1E2A  30FF               	movlw	255
  4702  1E2B  05A5               	andwf	__tdiv_to_l_@f2+1,f
  4703  1E2C  3000               	movlw	0
  4704  1E2D  05A6               	andwf	__tdiv_to_l_@f2+2,f
  4705  1E2E  3000               	movlw	0
  4706  1E2F  00AB               	movwf	__tdiv_to_l_@quot+3
  4707  1E30  3000               	movlw	0
  4708  1E31  00AA               	movwf	__tdiv_to_l_@quot+2
  4709  1E32  3000               	movlw	0
  4710  1E33  00A9               	movwf	__tdiv_to_l_@quot+1
  4711  1E34  3000               	movlw	0
  4712  1E35  00A8               	movwf	__tdiv_to_l_@quot
  4713  1E36                     l3883:
  4714  1E36  307F               	movlw	127
  4715  1E37  02AD               	subwf	__tdiv_to_l_@exp1,f
  4716  1E38                     l3885:
  4717  1E38  3098               	movlw	152
  4718  1E39  072C               	addwf	__tdiv_to_l_@cntr,w
  4719  1E3A  00F3               	movwf	??__tdiv_to_l_
  4720  1E3B  0873               	movf	??__tdiv_to_l_,w
  4721  1E3C  02AD               	subwf	__tdiv_to_l_@exp1,f
  4722  1E3D  3018               	movlw	24
  4723  1E3E  00F3               	movwf	??__tdiv_to_l_
  4724  1E3F  0873               	movf	??__tdiv_to_l_,w
  4725  1E40  00AC               	movwf	__tdiv_to_l_@cntr
  4726  1E41                     l3887:
  4727  1E41  3001               	movlw	1
  4728  1E42  00F3               	movwf	??__tdiv_to_l_
  4729  1E43                     u6265:
  4730  1E43  1003               	clrc
  4731  1E44  0DA8               	rlf	__tdiv_to_l_@quot,f
  4732  1E45  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4733  1E46  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4734  1E47  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4735  1E48  0BF3               	decfsz	??__tdiv_to_l_,f
  4736  1E49  2E43               	goto	u6265
  4737  1E4A                     l3889:
  4738  1E4A  0826               	movf	__tdiv_to_l_@f2+2,w
  4739  1E4B  0222               	subwf	__tdiv_to_l_@f1+2,w
  4740  1E4C  1D03               	skipz
  4741  1E4D  2E54               	goto	u6275
  4742  1E4E  0825               	movf	__tdiv_to_l_@f2+1,w
  4743  1E4F  0221               	subwf	__tdiv_to_l_@f1+1,w
  4744  1E50  1D03               	skipz
  4745  1E51  2E54               	goto	u6275
  4746  1E52  0824               	movf	__tdiv_to_l_@f2,w
  4747  1E53  0220               	subwf	__tdiv_to_l_@f1,w
  4748  1E54                     u6275:
  4749  1E54  1C03               	skipc
  4750  1E55  2E57               	goto	u6271
  4751  1E56  2E58               	goto	u6270
  4752  1E57                     u6271:
  4753  1E57  2E63               	goto	l3895
  4754  1E58                     u6270:
  4755  1E58                     l3891:
  4756  1E58  0824               	movf	__tdiv_to_l_@f2,w
  4757  1E59  02A0               	subwf	__tdiv_to_l_@f1,f
  4758  1E5A  0825               	movf	__tdiv_to_l_@f2+1,w
  4759  1E5B  1C03               	skipc
  4760  1E5C  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  4761  1E5D  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4762  1E5E  0826               	movf	__tdiv_to_l_@f2+2,w
  4763  1E5F  1C03               	skipc
  4764  1E60  0A26               	incf	__tdiv_to_l_@f2+2,w
  4765  1E61  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4766  1E62                     l3893:
  4767  1E62  1428               	bsf	__tdiv_to_l_@quot,0
  4768  1E63                     l3895:
  4769  1E63  3001               	movlw	1
  4770  1E64                     u6285:
  4771  1E64  1003               	clrc
  4772  1E65  0DA0               	rlf	__tdiv_to_l_@f1,f
  4773  1E66  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4774  1E67  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4775  1E68  3EFF               	addlw	-1
  4776  1E69  1D03               	skipz
  4777  1E6A  2E64               	goto	u6285
  4778  1E6B                     l3897:
  4779  1E6B  3001               	movlw	1
  4780  1E6C  02AC               	subwf	__tdiv_to_l_@cntr,f
  4781  1E6D  1D03               	btfss	3,2
  4782  1E6E  2E70               	goto	u6291
  4783  1E6F  2E71               	goto	u6290
  4784  1E70                     u6291:
  4785  1E70  2E41               	goto	l3887
  4786  1E71                     u6290:
  4787  1E71                     l623:
  4788  1E71  1FAD               	btfss	__tdiv_to_l_@exp1,7
  4789  1E72  2E74               	goto	u6301
  4790  1E73  2E75               	goto	u6300
  4791  1E74                     u6301:
  4792  1E74  2E8F               	goto	l3907
  4793  1E75                     u6300:
  4794  1E75                     l3899:
  4795  1E75  082D               	movf	__tdiv_to_l_@exp1,w
  4796  1E76  3A80               	xorlw	128
  4797  1E77  3E97               	addlw	151
  4798  1E78  1803               	skipnc
  4799  1E79  2E7B               	goto	u6311
  4800  1E7A  2E7C               	goto	u6310
  4801  1E7B                     u6311:
  4802  1E7B  2E7D               	goto	l3905
  4803  1E7C                     u6310:
  4804  1E7C  2E05               	goto	l3869
  4805  1E7D                     l3905:
  4806  1E7D  3001               	movlw	1
  4807  1E7E                     u6325:
  4808  1E7E  1003               	clrc
  4809  1E7F  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  4810  1E80  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  4811  1E81  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  4812  1E82  0CA8               	rrf	__tdiv_to_l_@quot,f
  4813  1E83  3EFF               	addlw	-1
  4814  1E84  1D03               	skipz
  4815  1E85  2E7E               	goto	u6325
  4816  1E86  3001               	movlw	1
  4817  1E87  00F3               	movwf	??__tdiv_to_l_
  4818  1E88  0873               	movf	??__tdiv_to_l_,w
  4819  1E89  07AD               	addwf	__tdiv_to_l_@exp1,f
  4820  1E8A  1D03               	btfss	3,2
  4821  1E8B  2E8D               	goto	u6331
  4822  1E8C  2E8E               	goto	u6330
  4823  1E8D                     u6331:
  4824  1E8D  2E7D               	goto	l3905
  4825  1E8E                     u6330:
  4826  1E8E  2EA6               	goto	l3915
  4827  1E8F                     l3907:
  4828  1E8F  3018               	movlw	24
  4829  1E90  022D               	subwf	__tdiv_to_l_@exp1,w
  4830  1E91  1C03               	skipc
  4831  1E92  2E94               	goto	u6341
  4832  1E93  2E95               	goto	u6340
  4833  1E94                     u6341:
  4834  1E94  2EA1               	goto	l630
  4835  1E95                     u6340:
  4836  1E95  2E05               	goto	l3869
  4837  1E96                     l3913:
  4838  1E96  3001               	movlw	1
  4839  1E97  00F3               	movwf	??__tdiv_to_l_
  4840  1E98                     u6355:
  4841  1E98  1003               	clrc
  4842  1E99  0DA8               	rlf	__tdiv_to_l_@quot,f
  4843  1E9A  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  4844  1E9B  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  4845  1E9C  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  4846  1E9D  0BF3               	decfsz	??__tdiv_to_l_,f
  4847  1E9E  2E98               	goto	u6355
  4848  1E9F  3001               	movlw	1
  4849  1EA0  02AD               	subwf	__tdiv_to_l_@exp1,f
  4850  1EA1                     l630:
  4851  1EA1  082D               	movf	__tdiv_to_l_@exp1,w
  4852  1EA2  1D03               	btfss	3,2
  4853  1EA3  2EA5               	goto	u6361
  4854  1EA4  2EA6               	goto	u6360
  4855  1EA5                     u6361:
  4856  1EA5  2E96               	goto	l3913
  4857  1EA6                     u6360:
  4858  1EA6                     l3915:
  4859  1EA6  082B               	movf	__tdiv_to_l_@quot+3,w
  4860  1EA7  00A3               	movwf	?__tdiv_to_l_+3
  4861  1EA8  082A               	movf	__tdiv_to_l_@quot+2,w
  4862  1EA9  00A2               	movwf	?__tdiv_to_l_+2
  4863  1EAA  0829               	movf	__tdiv_to_l_@quot+1,w
  4864  1EAB  00A1               	movwf	?__tdiv_to_l_+1
  4865  1EAC  0828               	movf	__tdiv_to_l_@quot,w
  4866  1EAD  00A0               	movwf	?__tdiv_to_l_
  4867  1EAE                     l619:
  4868  1EAE  0008               	return
  4869  1EAF                     __end_of__tdiv_to_l_:
  4870                           
  4871                           	psect	text10
  4872  06B9                     __ptext10:	
  4873 ;; *************** function __div_to_l_ *****************
  4874 ;; Defined at:
  4875 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  f1              4    0[BANK0 ] unsigned long 
  4878 ;;  f2              4    4[BANK0 ] unsigned long 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  quot            4    4[COMMON] unsigned long 
  4881 ;;  exp1            1    9[COMMON] unsigned char 
  4882 ;;  cntr            1    8[COMMON] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  4    0[BANK0 ] unsigned long 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4892 ;;      Params:         0       8       0       0       0
  4893 ;;      Locals:         6       0       0       0       0
  4894 ;;      Temps:          1       0       0       0       0
  4895 ;;      Totals:         7       8       0       0       0
  4896 ;;Total ram usage:       15 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:    1
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_sprintf
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           
  4907                           ;psect for function __div_to_l_
  4908  06B9                     __div_to_l_:
  4909  06B9                     l3919:	
  4910                           ;incstack = 0
  4911                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  4912                           
  4913  06B9  1003               	clrc
  4914  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  4915  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  4916  06BC  0D22               	rlf	__div_to_l_@f1+2,w
  4917  06BD  0D23               	rlf	__div_to_l_@f1+3,w
  4918  06BE  00F3               	movwf	??__div_to_l_
  4919  06BF  0873               	movf	??__div_to_l_,w
  4920  06C0  00F9               	movwf	__div_to_l_@exp1
  4921  06C1  0879               	movf	__div_to_l_@exp1,w
  4922  06C2  1D03               	btfss	3,2
  4923  06C3  2EC5               	goto	u6371
  4924  06C4  2EC6               	goto	u6370
  4925  06C5                     u6371:
  4926  06C5  2ECF               	goto	l3925
  4927  06C6                     u6370:
  4928  06C6                     l3921:
  4929  06C6  3000               	movlw	0
  4930  06C7  00A3               	movwf	?__div_to_l_+3
  4931  06C8  3000               	movlw	0
  4932  06C9  00A2               	movwf	?__div_to_l_+2
  4933  06CA  3000               	movlw	0
  4934  06CB  00A1               	movwf	?__div_to_l_+1
  4935  06CC  3000               	movlw	0
  4936  06CD  00A0               	movwf	?__div_to_l_
  4937  06CE  2F78               	goto	l572
  4938  06CF                     l3925:
  4939  06CF  1003               	clrc
  4940  06D0  0D26               	rlf	__div_to_l_@f2+2,w
  4941  06D1  0D27               	rlf	__div_to_l_@f2+3,w
  4942  06D2  00F3               	movwf	??__div_to_l_
  4943  06D3  0873               	movf	??__div_to_l_,w
  4944  06D4  00F8               	movwf	__div_to_l_@cntr
  4945  06D5  0878               	movf	__div_to_l_@cntr,w
  4946  06D6  1D03               	btfss	3,2
  4947  06D7  2ED9               	goto	u6381
  4948  06D8  2EDA               	goto	u6380
  4949  06D9                     u6381:
  4950  06D9  2EDB               	goto	l573
  4951  06DA                     u6380:
  4952  06DA  2EC6               	goto	l3921
  4953  06DB                     l573:
  4954  06DB  17A2               	bsf	__div_to_l_@f1+2,7
  4955  06DC                     l3931:
  4956  06DC  30FF               	movlw	255
  4957  06DD  05A0               	andwf	__div_to_l_@f1,f
  4958  06DE  30FF               	movlw	255
  4959  06DF  05A1               	andwf	__div_to_l_@f1+1,f
  4960  06E0  30FF               	movlw	255
  4961  06E1  05A2               	andwf	__div_to_l_@f1+2,f
  4962  06E2  3000               	movlw	0
  4963  06E3  05A3               	andwf	__div_to_l_@f1+3,f
  4964  06E4                     l3933:
  4965  06E4  17A6               	bsf	__div_to_l_@f2+2,7
  4966  06E5  30FF               	movlw	255
  4967  06E6  05A4               	andwf	__div_to_l_@f2,f
  4968  06E7  30FF               	movlw	255
  4969  06E8  05A5               	andwf	__div_to_l_@f2+1,f
  4970  06E9  30FF               	movlw	255
  4971  06EA  05A6               	andwf	__div_to_l_@f2+2,f
  4972  06EB  3000               	movlw	0
  4973  06EC  05A7               	andwf	__div_to_l_@f2+3,f
  4974  06ED  3000               	movlw	0
  4975  06EE  00F7               	movwf	__div_to_l_@quot+3
  4976  06EF  3000               	movlw	0
  4977  06F0  00F6               	movwf	__div_to_l_@quot+2
  4978  06F1  3000               	movlw	0
  4979  06F2  00F5               	movwf	__div_to_l_@quot+1
  4980  06F3  3000               	movlw	0
  4981  06F4  00F4               	movwf	__div_to_l_@quot
  4982  06F5                     l3935:
  4983  06F5  307F               	movlw	127
  4984  06F6  02F9               	subwf	__div_to_l_@exp1,f
  4985  06F7                     l3937:
  4986  06F7  30A0               	movlw	160
  4987  06F8  0778               	addwf	__div_to_l_@cntr,w
  4988  06F9  00F3               	movwf	??__div_to_l_
  4989  06FA  0873               	movf	??__div_to_l_,w
  4990  06FB  02F9               	subwf	__div_to_l_@exp1,f
  4991  06FC  3020               	movlw	32
  4992  06FD  00F3               	movwf	??__div_to_l_
  4993  06FE  0873               	movf	??__div_to_l_,w
  4994  06FF  00F8               	movwf	__div_to_l_@cntr
  4995  0700                     l3939:
  4996  0700  3001               	movlw	1
  4997  0701  00F3               	movwf	??__div_to_l_
  4998  0702                     u6395:
  4999  0702  1003               	clrc
  5000  0703  0DF4               	rlf	__div_to_l_@quot,f
  5001  0704  0DF5               	rlf	__div_to_l_@quot+1,f
  5002  0705  0DF6               	rlf	__div_to_l_@quot+2,f
  5003  0706  0DF7               	rlf	__div_to_l_@quot+3,f
  5004  0707  0BF3               	decfsz	??__div_to_l_,f
  5005  0708  2F02               	goto	u6395
  5006  0709                     l3941:
  5007  0709  0827               	movf	__div_to_l_@f2+3,w
  5008  070A  0223               	subwf	__div_to_l_@f1+3,w
  5009  070B  1D03               	skipz
  5010  070C  2F17               	goto	u6405
  5011  070D  0826               	movf	__div_to_l_@f2+2,w
  5012  070E  0222               	subwf	__div_to_l_@f1+2,w
  5013  070F  1D03               	skipz
  5014  0710  2F17               	goto	u6405
  5015  0711  0825               	movf	__div_to_l_@f2+1,w
  5016  0712  0221               	subwf	__div_to_l_@f1+1,w
  5017  0713  1D03               	skipz
  5018  0714  2F17               	goto	u6405
  5019  0715  0824               	movf	__div_to_l_@f2,w
  5020  0716  0220               	subwf	__div_to_l_@f1,w
  5021  0717                     u6405:
  5022  0717  1C03               	skipc
  5023  0718  2F1A               	goto	u6401
  5024  0719  2F1B               	goto	u6400
  5025  071A                     u6401:
  5026  071A  2F2A               	goto	l3947
  5027  071B                     u6400:
  5028  071B                     l3943:
  5029  071B  0824               	movf	__div_to_l_@f2,w
  5030  071C  02A0               	subwf	__div_to_l_@f1,f
  5031  071D  0825               	movf	__div_to_l_@f2+1,w
  5032  071E  1C03               	skipc
  5033  071F  0F25               	incfsz	__div_to_l_@f2+1,w
  5034  0720  02A1               	subwf	__div_to_l_@f1+1,f
  5035  0721  0826               	movf	__div_to_l_@f2+2,w
  5036  0722  1C03               	skipc
  5037  0723  0F26               	incfsz	__div_to_l_@f2+2,w
  5038  0724  02A2               	subwf	__div_to_l_@f1+2,f
  5039  0725  0827               	movf	__div_to_l_@f2+3,w
  5040  0726  1C03               	skipc
  5041  0727  0F27               	incfsz	__div_to_l_@f2+3,w
  5042  0728  02A3               	subwf	__div_to_l_@f1+3,f
  5043  0729                     l3945:
  5044  0729  1474               	bsf	__div_to_l_@quot,0
  5045  072A                     l3947:
  5046  072A  3001               	movlw	1
  5047  072B  00F3               	movwf	??__div_to_l_
  5048  072C                     u6415:
  5049  072C  1003               	clrc
  5050  072D  0DA0               	rlf	__div_to_l_@f1,f
  5051  072E  0DA1               	rlf	__div_to_l_@f1+1,f
  5052  072F  0DA2               	rlf	__div_to_l_@f1+2,f
  5053  0730  0DA3               	rlf	__div_to_l_@f1+3,f
  5054  0731  0BF3               	decfsz	??__div_to_l_,f
  5055  0732  2F2C               	goto	u6415
  5056  0733                     l3949:
  5057  0733  3001               	movlw	1
  5058  0734  02F8               	subwf	__div_to_l_@cntr,f
  5059  0735  1D03               	btfss	3,2
  5060  0736  2F38               	goto	u6421
  5061  0737  2F39               	goto	u6420
  5062  0738                     u6421:
  5063  0738  2F00               	goto	l3939
  5064  0739                     u6420:
  5065  0739                     l576:
  5066  0739  1FF9               	btfss	__div_to_l_@exp1,7
  5067  073A  2F3C               	goto	u6431
  5068  073B  2F3D               	goto	u6430
  5069  073C                     u6431:
  5070  073C  2F57               	goto	l3959
  5071  073D                     u6430:
  5072  073D                     l3951:
  5073  073D  0879               	movf	__div_to_l_@exp1,w
  5074  073E  3A80               	xorlw	128
  5075  073F  3E9F               	addlw	159
  5076  0740  1803               	skipnc
  5077  0741  2F43               	goto	u6441
  5078  0742  2F44               	goto	u6440
  5079  0743                     u6441:
  5080  0743  2F45               	goto	l3957
  5081  0744                     u6440:
  5082  0744  2EC6               	goto	l3921
  5083  0745                     l3957:
  5084  0745  3001               	movlw	1
  5085  0746                     u6455:
  5086  0746  1003               	clrc
  5087  0747  0CF7               	rrf	__div_to_l_@quot+3,f
  5088  0748  0CF6               	rrf	__div_to_l_@quot+2,f
  5089  0749  0CF5               	rrf	__div_to_l_@quot+1,f
  5090  074A  0CF4               	rrf	__div_to_l_@quot,f
  5091  074B  3EFF               	addlw	-1
  5092  074C  1D03               	skipz
  5093  074D  2F46               	goto	u6455
  5094  074E  3001               	movlw	1
  5095  074F  00F3               	movwf	??__div_to_l_
  5096  0750  0873               	movf	??__div_to_l_,w
  5097  0751  07F9               	addwf	__div_to_l_@exp1,f
  5098  0752  1D03               	btfss	3,2
  5099  0753  2F55               	goto	u6461
  5100  0754  2F56               	goto	u6460
  5101  0755                     u6461:
  5102  0755  2F45               	goto	l3957
  5103  0756                     u6460:
  5104  0756  2F6E               	goto	l3967
  5105  0757                     l3959:
  5106  0757  3020               	movlw	32
  5107  0758  0279               	subwf	__div_to_l_@exp1,w
  5108  0759  1C03               	skipc
  5109  075A  2F5C               	goto	u6471
  5110  075B  2F5D               	goto	u6470
  5111  075C                     u6471:
  5112  075C  2F69               	goto	l583
  5113  075D                     u6470:
  5114  075D  2EC6               	goto	l3921
  5115  075E                     l3965:
  5116  075E  3001               	movlw	1
  5117  075F  00F3               	movwf	??__div_to_l_
  5118  0760                     u6485:
  5119  0760  1003               	clrc
  5120  0761  0DF4               	rlf	__div_to_l_@quot,f
  5121  0762  0DF5               	rlf	__div_to_l_@quot+1,f
  5122  0763  0DF6               	rlf	__div_to_l_@quot+2,f
  5123  0764  0DF7               	rlf	__div_to_l_@quot+3,f
  5124  0765  0BF3               	decfsz	??__div_to_l_,f
  5125  0766  2F60               	goto	u6485
  5126  0767  3001               	movlw	1
  5127  0768  02F9               	subwf	__div_to_l_@exp1,f
  5128  0769                     l583:
  5129  0769  0879               	movf	__div_to_l_@exp1,w
  5130  076A  1D03               	btfss	3,2
  5131  076B  2F6D               	goto	u6491
  5132  076C  2F6E               	goto	u6490
  5133  076D                     u6491:
  5134  076D  2F5E               	goto	l3965
  5135  076E                     u6490:
  5136  076E                     l3967:
  5137  076E  0877               	movf	__div_to_l_@quot+3,w
  5138  076F  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0770  1303               	bcf	3,6	;RP1=0, select bank0
  5140  0771  00A3               	movwf	?__div_to_l_+3
  5141  0772  0876               	movf	__div_to_l_@quot+2,w
  5142  0773  00A2               	movwf	?__div_to_l_+2
  5143  0774  0875               	movf	__div_to_l_@quot+1,w
  5144  0775  00A1               	movwf	?__div_to_l_+1
  5145  0776  0874               	movf	__div_to_l_@quot,w
  5146  0777  00A0               	movwf	?__div_to_l_
  5147  0778                     l572:
  5148  0778  0008               	return
  5149  0779                     __end_of__div_to_l_:
  5150                           
  5151                           	psect	text11
  5152  189E                     __ptext11:	
  5153 ;; *************** function ___wmul *****************
  5154 ;; Defined at:
  5155 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  multiplier      2    3[COMMON] unsigned int 
  5158 ;;  multiplicand    2    5[COMMON] unsigned int 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  product         2    7[COMMON] unsigned int 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  2    3[COMMON] unsigned int 
  5163 ;; Registers used:
  5164 ;;		wreg, status,2, status,0
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5170 ;;      Params:         4       0       0       0       0
  5171 ;;      Locals:         2       0       0       0       0
  5172 ;;      Temps:          0       0       0       0       0
  5173 ;;      Totals:         6       0       0       0       0
  5174 ;;Total ram usage:        6 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:    1
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_sprintf
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           
  5185                           ;psect for function ___wmul
  5186  189E                     ___wmul:
  5187  189E                     l3043:	
  5188                           ;incstack = 0
  5189                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5190                           
  5191  189E  01F7               	clrf	___wmul@product
  5192  189F  01F8               	clrf	___wmul@product+1
  5193  18A0                     l3045:
  5194  18A0  1C73               	btfss	___wmul@multiplier,0
  5195  18A1  28A3               	goto	u4701
  5196  18A2  28A4               	goto	u4700
  5197  18A3                     u4701:
  5198  18A3  28AA               	goto	l402
  5199  18A4                     u4700:
  5200  18A4                     l3047:
  5201  18A4  0875               	movf	___wmul@multiplicand,w
  5202  18A5  07F7               	addwf	___wmul@product,f
  5203  18A6  1803               	skipnc
  5204  18A7  0AF8               	incf	___wmul@product+1,f
  5205  18A8  0876               	movf	___wmul@multiplicand+1,w
  5206  18A9  07F8               	addwf	___wmul@product+1,f
  5207  18AA                     l402:
  5208  18AA  3001               	movlw	1
  5209  18AB                     u4715:
  5210  18AB  1003               	clrc
  5211  18AC  0DF5               	rlf	___wmul@multiplicand,f
  5212  18AD  0DF6               	rlf	___wmul@multiplicand+1,f
  5213  18AE  3EFF               	addlw	-1
  5214  18AF  1D03               	skipz
  5215  18B0  28AB               	goto	u4715
  5216  18B1                     l3049:
  5217  18B1  3001               	movlw	1
  5218  18B2                     u4725:
  5219  18B2  1003               	clrc
  5220  18B3  0CF4               	rrf	___wmul@multiplier+1,f
  5221  18B4  0CF3               	rrf	___wmul@multiplier,f
  5222  18B5  3EFF               	addlw	-1
  5223  18B6  1D03               	skipz
  5224  18B7  28B2               	goto	u4725
  5225  18B8                     l3051:
  5226  18B8  0873               	movf	___wmul@multiplier,w
  5227  18B9  0474               	iorwf	___wmul@multiplier+1,w
  5228  18BA  1D03               	btfss	3,2
  5229  18BB  28BD               	goto	u4731
  5230  18BC  28BE               	goto	u4730
  5231  18BD                     u4731:
  5232  18BD  28A0               	goto	l3045
  5233  18BE                     u4730:
  5234  18BE                     l3053:
  5235  18BE  0878               	movf	___wmul@product+1,w
  5236  18BF  00F4               	movwf	?___wmul+1
  5237  18C0  0877               	movf	___wmul@product,w
  5238  18C1  00F3               	movwf	?___wmul
  5239  18C2                     l404:
  5240  18C2  0008               	return
  5241  18C3                     __end_of___wmul:
  5242                           
  5243                           	psect	text12
  5244  1B7B                     __ptext12:	
  5245 ;; *************** function ___llmod *****************
  5246 ;; Defined at:
  5247 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  divisor         4    8[BANK0 ] unsigned long 
  5250 ;;  dividend        4   12[BANK0 ] unsigned long 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  counter         1   16[BANK0 ] unsigned char 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  4    8[BANK0 ] unsigned long 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5262 ;;      Params:         0       8       0       0       0
  5263 ;;      Locals:         0       1       0       0       0
  5264 ;;      Temps:          1       0       0       0       0
  5265 ;;      Totals:         1       9       0       0       0
  5266 ;;Total ram usage:       10 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; Hardware stack levels required when called:    1
  5269 ;; This function calls:
  5270 ;;		Nothing
  5271 ;; This function is called by:
  5272 ;;		_sprintf
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           
  5277                           ;psect for function ___llmod
  5278  1B7B                     ___llmod:
  5279  1B7B                     l4027:	
  5280                           ;incstack = 0
  5281                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5282                           
  5283  1B7B  1283               	bcf	3,5	;RP0=0, select bank0
  5284  1B7C  1303               	bcf	3,6	;RP1=0, select bank0
  5285  1B7D  082B               	movf	___llmod@divisor+3,w
  5286  1B7E  042A               	iorwf	___llmod@divisor+2,w
  5287  1B7F  0429               	iorwf	___llmod@divisor+1,w
  5288  1B80  0428               	iorwf	___llmod@divisor,w
  5289  1B81  1903               	skipnz
  5290  1B82  2B84               	goto	u6671
  5291  1B83  2B85               	goto	u6670
  5292  1B84                     u6671:
  5293  1B84  2BC8               	goto	l4043
  5294  1B85                     u6670:
  5295  1B85                     l4029:
  5296  1B85  01B0               	clrf	___llmod@counter
  5297  1B86  0AB0               	incf	___llmod@counter,f
  5298  1B87  2B95               	goto	l4033
  5299  1B88                     l4031:
  5300  1B88  3001               	movlw	1
  5301  1B89  00F9               	movwf	??___llmod
  5302  1B8A                     u6685:
  5303  1B8A  1003               	clrc
  5304  1B8B  0DA8               	rlf	___llmod@divisor,f
  5305  1B8C  0DA9               	rlf	___llmod@divisor+1,f
  5306  1B8D  0DAA               	rlf	___llmod@divisor+2,f
  5307  1B8E  0DAB               	rlf	___llmod@divisor+3,f
  5308  1B8F  0BF9               	decfsz	??___llmod,f
  5309  1B90  2B8A               	goto	u6685
  5310  1B91  3001               	movlw	1
  5311  1B92  00F9               	movwf	??___llmod
  5312  1B93  0879               	movf	??___llmod,w
  5313  1B94  07B0               	addwf	___llmod@counter,f
  5314  1B95                     l4033:
  5315  1B95  1FAB               	btfss	___llmod@divisor+3,7
  5316  1B96  2B98               	goto	u6691
  5317  1B97  2B99               	goto	u6690
  5318  1B98                     u6691:
  5319  1B98  2B88               	goto	l4031
  5320  1B99                     u6690:
  5321  1B99                     l4035:
  5322  1B99  082B               	movf	___llmod@divisor+3,w
  5323  1B9A  022F               	subwf	___llmod@dividend+3,w
  5324  1B9B  1D03               	skipz
  5325  1B9C  2BA7               	goto	u6705
  5326  1B9D  082A               	movf	___llmod@divisor+2,w
  5327  1B9E  022E               	subwf	___llmod@dividend+2,w
  5328  1B9F  1D03               	skipz
  5329  1BA0  2BA7               	goto	u6705
  5330  1BA1  0829               	movf	___llmod@divisor+1,w
  5331  1BA2  022D               	subwf	___llmod@dividend+1,w
  5332  1BA3  1D03               	skipz
  5333  1BA4  2BA7               	goto	u6705
  5334  1BA5  0828               	movf	___llmod@divisor,w
  5335  1BA6  022C               	subwf	___llmod@dividend,w
  5336  1BA7                     u6705:
  5337  1BA7  1C03               	skipc
  5338  1BA8  2BAA               	goto	u6701
  5339  1BA9  2BAB               	goto	u6700
  5340  1BAA                     u6701:
  5341  1BAA  2BB9               	goto	l4039
  5342  1BAB                     u6700:
  5343  1BAB                     l4037:
  5344  1BAB  0828               	movf	___llmod@divisor,w
  5345  1BAC  02AC               	subwf	___llmod@dividend,f
  5346  1BAD  0829               	movf	___llmod@divisor+1,w
  5347  1BAE  1C03               	skipc
  5348  1BAF  0F29               	incfsz	___llmod@divisor+1,w
  5349  1BB0  02AD               	subwf	___llmod@dividend+1,f
  5350  1BB1  082A               	movf	___llmod@divisor+2,w
  5351  1BB2  1C03               	skipc
  5352  1BB3  0F2A               	incfsz	___llmod@divisor+2,w
  5353  1BB4  02AE               	subwf	___llmod@dividend+2,f
  5354  1BB5  082B               	movf	___llmod@divisor+3,w
  5355  1BB6  1C03               	skipc
  5356  1BB7  0F2B               	incfsz	___llmod@divisor+3,w
  5357  1BB8  02AF               	subwf	___llmod@dividend+3,f
  5358  1BB9                     l4039:
  5359  1BB9  3001               	movlw	1
  5360  1BBA                     u6715:
  5361  1BBA  1003               	clrc
  5362  1BBB  0CAB               	rrf	___llmod@divisor+3,f
  5363  1BBC  0CAA               	rrf	___llmod@divisor+2,f
  5364  1BBD  0CA9               	rrf	___llmod@divisor+1,f
  5365  1BBE  0CA8               	rrf	___llmod@divisor,f
  5366  1BBF  3EFF               	addlw	-1
  5367  1BC0  1D03               	skipz
  5368  1BC1  2BBA               	goto	u6715
  5369  1BC2                     l4041:
  5370  1BC2  3001               	movlw	1
  5371  1BC3  02B0               	subwf	___llmod@counter,f
  5372  1BC4  1D03               	btfss	3,2
  5373  1BC5  2BC7               	goto	u6721
  5374  1BC6  2BC8               	goto	u6720
  5375  1BC7                     u6721:
  5376  1BC7  2B99               	goto	l4035
  5377  1BC8                     u6720:
  5378  1BC8                     l4043:
  5379  1BC8  082F               	movf	___llmod@dividend+3,w
  5380  1BC9  00AB               	movwf	?___llmod+3
  5381  1BCA  082E               	movf	___llmod@dividend+2,w
  5382  1BCB  00AA               	movwf	?___llmod+2
  5383  1BCC  082D               	movf	___llmod@dividend+1,w
  5384  1BCD  00A9               	movwf	?___llmod+1
  5385  1BCE  082C               	movf	___llmod@dividend,w
  5386  1BCF  00A8               	movwf	?___llmod
  5387  1BD0                     l658:
  5388  1BD0  0008               	return
  5389  1BD1                     __end_of___llmod:
  5390                           
  5391                           	psect	text13
  5392  1C2A                     __ptext13:	
  5393 ;; *************** function ___lldiv *****************
  5394 ;; Defined at:
  5395 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  divisor         4    0[BANK0 ] unsigned long 
  5398 ;;  dividend        4    4[BANK0 ] unsigned long 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  quotient        4    4[COMMON] unsigned long 
  5401 ;;  counter         1    8[COMMON] unsigned char 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  4    0[BANK0 ] unsigned long 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2, status,0
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5411 ;;      Params:         0       8       0       0       0
  5412 ;;      Locals:         5       0       0       0       0
  5413 ;;      Temps:          1       0       0       0       0
  5414 ;;      Totals:         6       8       0       0       0
  5415 ;;Total ram usage:       14 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    1
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_sprintf
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function ___lldiv
  5427  1C2A                     ___lldiv:
  5428  1C2A                     l3971:	
  5429                           ;incstack = 0
  5430                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5431                           
  5432  1C2A  3000               	movlw	0
  5433  1C2B  00F7               	movwf	___lldiv@quotient+3
  5434  1C2C  3000               	movlw	0
  5435  1C2D  00F6               	movwf	___lldiv@quotient+2
  5436  1C2E  3000               	movlw	0
  5437  1C2F  00F5               	movwf	___lldiv@quotient+1
  5438  1C30  3000               	movlw	0
  5439  1C31  00F4               	movwf	___lldiv@quotient
  5440  1C32  1283               	bcf	3,5	;RP0=0, select bank0
  5441  1C33  1303               	bcf	3,6	;RP1=0, select bank0
  5442  1C34  0823               	movf	___lldiv@divisor+3,w
  5443  1C35  0422               	iorwf	___lldiv@divisor+2,w
  5444  1C36  0421               	iorwf	___lldiv@divisor+1,w
  5445  1C37  0420               	iorwf	___lldiv@divisor,w
  5446  1C38  1903               	skipnz
  5447  1C39  2C3B               	goto	u6501
  5448  1C3A  2C3C               	goto	u6500
  5449  1C3B                     u6501:
  5450  1C3B  2C89               	goto	l3991
  5451  1C3C                     u6500:
  5452  1C3C                     l3973:
  5453  1C3C  01F8               	clrf	___lldiv@counter
  5454  1C3D  0AF8               	incf	___lldiv@counter,f
  5455  1C3E  2C4C               	goto	l3977
  5456  1C3F                     l3975:
  5457  1C3F  3001               	movlw	1
  5458  1C40  00F3               	movwf	??___lldiv
  5459  1C41                     u6515:
  5460  1C41  1003               	clrc
  5461  1C42  0DA0               	rlf	___lldiv@divisor,f
  5462  1C43  0DA1               	rlf	___lldiv@divisor+1,f
  5463  1C44  0DA2               	rlf	___lldiv@divisor+2,f
  5464  1C45  0DA3               	rlf	___lldiv@divisor+3,f
  5465  1C46  0BF3               	decfsz	??___lldiv,f
  5466  1C47  2C41               	goto	u6515
  5467  1C48  3001               	movlw	1
  5468  1C49  00F3               	movwf	??___lldiv
  5469  1C4A  0873               	movf	??___lldiv,w
  5470  1C4B  07F8               	addwf	___lldiv@counter,f
  5471  1C4C                     l3977:
  5472  1C4C  1FA3               	btfss	___lldiv@divisor+3,7
  5473  1C4D  2C4F               	goto	u6521
  5474  1C4E  2C50               	goto	u6520
  5475  1C4F                     u6521:
  5476  1C4F  2C3F               	goto	l3975
  5477  1C50                     u6520:
  5478  1C50                     l3979:
  5479  1C50  3001               	movlw	1
  5480  1C51  00F3               	movwf	??___lldiv
  5481  1C52                     u6535:
  5482  1C52  1003               	clrc
  5483  1C53  0DF4               	rlf	___lldiv@quotient,f
  5484  1C54  0DF5               	rlf	___lldiv@quotient+1,f
  5485  1C55  0DF6               	rlf	___lldiv@quotient+2,f
  5486  1C56  0DF7               	rlf	___lldiv@quotient+3,f
  5487  1C57  0BF3               	decfsz	??___lldiv,f
  5488  1C58  2C52               	goto	u6535
  5489  1C59                     l3981:
  5490  1C59  0823               	movf	___lldiv@divisor+3,w
  5491  1C5A  0227               	subwf	___lldiv@dividend+3,w
  5492  1C5B  1D03               	skipz
  5493  1C5C  2C67               	goto	u6545
  5494  1C5D  0822               	movf	___lldiv@divisor+2,w
  5495  1C5E  0226               	subwf	___lldiv@dividend+2,w
  5496  1C5F  1D03               	skipz
  5497  1C60  2C67               	goto	u6545
  5498  1C61  0821               	movf	___lldiv@divisor+1,w
  5499  1C62  0225               	subwf	___lldiv@dividend+1,w
  5500  1C63  1D03               	skipz
  5501  1C64  2C67               	goto	u6545
  5502  1C65  0820               	movf	___lldiv@divisor,w
  5503  1C66  0224               	subwf	___lldiv@dividend,w
  5504  1C67                     u6545:
  5505  1C67  1C03               	skipc
  5506  1C68  2C6A               	goto	u6541
  5507  1C69  2C6B               	goto	u6540
  5508  1C6A                     u6541:
  5509  1C6A  2C7A               	goto	l3987
  5510  1C6B                     u6540:
  5511  1C6B                     l3983:
  5512  1C6B  0820               	movf	___lldiv@divisor,w
  5513  1C6C  02A4               	subwf	___lldiv@dividend,f
  5514  1C6D  0821               	movf	___lldiv@divisor+1,w
  5515  1C6E  1C03               	skipc
  5516  1C6F  0F21               	incfsz	___lldiv@divisor+1,w
  5517  1C70  02A5               	subwf	___lldiv@dividend+1,f
  5518  1C71  0822               	movf	___lldiv@divisor+2,w
  5519  1C72  1C03               	skipc
  5520  1C73  0F22               	incfsz	___lldiv@divisor+2,w
  5521  1C74  02A6               	subwf	___lldiv@dividend+2,f
  5522  1C75  0823               	movf	___lldiv@divisor+3,w
  5523  1C76  1C03               	skipc
  5524  1C77  0F23               	incfsz	___lldiv@divisor+3,w
  5525  1C78  02A7               	subwf	___lldiv@dividend+3,f
  5526  1C79                     l3985:
  5527  1C79  1474               	bsf	___lldiv@quotient,0
  5528  1C7A                     l3987:
  5529  1C7A  3001               	movlw	1
  5530  1C7B                     u6555:
  5531  1C7B  1003               	clrc
  5532  1C7C  0CA3               	rrf	___lldiv@divisor+3,f
  5533  1C7D  0CA2               	rrf	___lldiv@divisor+2,f
  5534  1C7E  0CA1               	rrf	___lldiv@divisor+1,f
  5535  1C7F  0CA0               	rrf	___lldiv@divisor,f
  5536  1C80  3EFF               	addlw	-1
  5537  1C81  1D03               	skipz
  5538  1C82  2C7B               	goto	u6555
  5539  1C83                     l3989:
  5540  1C83  3001               	movlw	1
  5541  1C84  02F8               	subwf	___lldiv@counter,f
  5542  1C85  1D03               	btfss	3,2
  5543  1C86  2C88               	goto	u6561
  5544  1C87  2C89               	goto	u6560
  5545  1C88                     u6561:
  5546  1C88  2C50               	goto	l3979
  5547  1C89                     u6560:
  5548  1C89                     l3991:
  5549  1C89  0877               	movf	___lldiv@quotient+3,w
  5550  1C8A  00A3               	movwf	?___lldiv+3
  5551  1C8B  0876               	movf	___lldiv@quotient+2,w
  5552  1C8C  00A2               	movwf	?___lldiv+2
  5553  1C8D  0875               	movf	___lldiv@quotient+1,w
  5554  1C8E  00A1               	movwf	?___lldiv+1
  5555  1C8F  0874               	movf	___lldiv@quotient,w
  5556  1C90  00A0               	movwf	?___lldiv
  5557  1C91                     l438:
  5558  1C91  0008               	return
  5559  1C92                     __end_of___lldiv:
  5560                           
  5561                           	psect	text14
  5562  0779                     __ptext14:	
  5563 ;; *************** function ___fltol *****************
  5564 ;; Defined at:
  5565 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  f1              4   55[BANK0 ] unsigned long 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  exp1            1   65[BANK0 ] unsigned char 
  5570 ;;  sign1           1   64[BANK0 ] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  4   55[BANK0 ] long 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5580 ;;      Params:         0       4       0       0       0
  5581 ;;      Locals:         0       2       0       0       0
  5582 ;;      Temps:          0       5       0       0       0
  5583 ;;      Totals:         0      11       0       0       0
  5584 ;;Total ram usage:       11 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    1
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_sprintf
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           
  5595                           ;psect for function ___fltol
  5596  0779                     ___fltol:
  5597  0779                     l3121:	
  5598                           ;incstack = 0
  5599                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5600                           
  5601  0779  1003               	clrc
  5602  077A  1283               	bcf	3,5	;RP0=0, select bank0
  5603  077B  1303               	bcf	3,6	;RP1=0, select bank0
  5604  077C  0D59               	rlf	___fltol@f1+2,w
  5605  077D  0D5A               	rlf	___fltol@f1+3,w
  5606  077E  00DB               	movwf	??___fltol
  5607  077F  085B               	movf	??___fltol,w
  5608  0780  00E1               	movwf	___fltol@exp1
  5609  0781  0861               	movf	___fltol@exp1,w
  5610  0782  1D03               	btfss	3,2
  5611  0783  2F85               	goto	u4921
  5612  0784  2F86               	goto	u4920
  5613  0785                     u4921:
  5614  0785  2F8F               	goto	l3127
  5615  0786                     u4920:
  5616  0786                     l3123:
  5617  0786  3000               	movlw	0
  5618  0787  00DA               	movwf	?___fltol+3
  5619  0788  3000               	movlw	0
  5620  0789  00D9               	movwf	?___fltol+2
  5621  078A  3000               	movlw	0
  5622  078B  00D8               	movwf	?___fltol+1
  5623  078C  3000               	movlw	0
  5624  078D  00D7               	movwf	?___fltol
  5625  078E  2FF4               	goto	l605
  5626  078F                     l3127:
  5627  078F  0857               	movf	___fltol@f1,w
  5628  0790  00DB               	movwf	??___fltol
  5629  0791  0858               	movf	___fltol@f1+1,w
  5630  0792  00DC               	movwf	??___fltol+1
  5631  0793  0859               	movf	___fltol@f1+2,w
  5632  0794  00DD               	movwf	??___fltol+2
  5633  0795  085A               	movf	___fltol@f1+3,w
  5634  0796  00DE               	movwf	??___fltol+3
  5635  0797  301F               	movlw	31
  5636  0798                     u4935:
  5637  0798  1003               	clrc
  5638  0799  0CDE               	rrf	??___fltol+3,f
  5639  079A  0CDD               	rrf	??___fltol+2,f
  5640  079B  0CDC               	rrf	??___fltol+1,f
  5641  079C  0CDB               	rrf	??___fltol,f
  5642  079D                     u4930:
  5643  079D  3EFF               	addlw	-1
  5644  079E  1D03               	skipz
  5645  079F  2F98               	goto	u4935
  5646  07A0  085B               	movf	??___fltol,w
  5647  07A1  00DF               	movwf	??___fltol+4
  5648  07A2  085F               	movf	??___fltol+4,w
  5649  07A3  00E0               	movwf	___fltol@sign1
  5650  07A4                     l3129:
  5651  07A4  17D9               	bsf	___fltol@f1+2,7
  5652  07A5                     l3131:
  5653  07A5  30FF               	movlw	255
  5654  07A6  05D7               	andwf	___fltol@f1,f
  5655  07A7  30FF               	movlw	255
  5656  07A8  05D8               	andwf	___fltol@f1+1,f
  5657  07A9  30FF               	movlw	255
  5658  07AA  05D9               	andwf	___fltol@f1+2,f
  5659  07AB  3000               	movlw	0
  5660  07AC  05DA               	andwf	___fltol@f1+3,f
  5661  07AD                     l3133:
  5662  07AD  3096               	movlw	150
  5663  07AE  02E1               	subwf	___fltol@exp1,f
  5664  07AF                     l3135:
  5665  07AF  1FE1               	btfss	___fltol@exp1,7
  5666  07B0  2FB2               	goto	u4941
  5667  07B1  2FB3               	goto	u4940
  5668  07B2                     u4941:
  5669  07B2  2FCD               	goto	l3145
  5670  07B3                     u4940:
  5671  07B3                     l3137:
  5672  07B3  0861               	movf	___fltol@exp1,w
  5673  07B4  3A80               	xorlw	128
  5674  07B5  3E97               	addlw	151
  5675  07B6  1803               	skipnc
  5676  07B7  2FB9               	goto	u4951
  5677  07B8  2FBA               	goto	u4950
  5678  07B9                     u4951:
  5679  07B9  2FBB               	goto	l3143
  5680  07BA                     u4950:
  5681  07BA  2F86               	goto	l3123
  5682  07BB                     l3143:
  5683  07BB  3001               	movlw	1
  5684  07BC                     u4965:
  5685  07BC  1003               	clrc
  5686  07BD  0CDA               	rrf	___fltol@f1+3,f
  5687  07BE  0CD9               	rrf	___fltol@f1+2,f
  5688  07BF  0CD8               	rrf	___fltol@f1+1,f
  5689  07C0  0CD7               	rrf	___fltol@f1,f
  5690  07C1  3EFF               	addlw	-1
  5691  07C2  1D03               	skipz
  5692  07C3  2FBC               	goto	u4965
  5693  07C4  3001               	movlw	1
  5694  07C5  00DB               	movwf	??___fltol
  5695  07C6  085B               	movf	??___fltol,w
  5696  07C7  07E1               	addwf	___fltol@exp1,f
  5697  07C8  1D03               	btfss	3,2
  5698  07C9  2FCB               	goto	u4971
  5699  07CA  2FCC               	goto	u4970
  5700  07CB                     u4971:
  5701  07CB  2FBB               	goto	l3143
  5702  07CC                     u4970:
  5703  07CC  2FE4               	goto	l3153
  5704  07CD                     l3145:
  5705  07CD  3020               	movlw	32
  5706  07CE  0261               	subwf	___fltol@exp1,w
  5707  07CF  1C03               	skipc
  5708  07D0  2FD2               	goto	u4981
  5709  07D1  2FD3               	goto	u4980
  5710  07D2                     u4981:
  5711  07D2  2FDF               	goto	l612
  5712  07D3                     u4980:
  5713  07D3  2F86               	goto	l3123
  5714  07D4                     l3151:
  5715  07D4  3001               	movlw	1
  5716  07D5  00DB               	movwf	??___fltol
  5717  07D6                     u4995:
  5718  07D6  1003               	clrc
  5719  07D7  0DD7               	rlf	___fltol@f1,f
  5720  07D8  0DD8               	rlf	___fltol@f1+1,f
  5721  07D9  0DD9               	rlf	___fltol@f1+2,f
  5722  07DA  0DDA               	rlf	___fltol@f1+3,f
  5723  07DB  0BDB               	decfsz	??___fltol,f
  5724  07DC  2FD6               	goto	u4995
  5725  07DD  3001               	movlw	1
  5726  07DE  02E1               	subwf	___fltol@exp1,f
  5727  07DF                     l612:
  5728  07DF  0861               	movf	___fltol@exp1,w
  5729  07E0  1D03               	btfss	3,2
  5730  07E1  2FE3               	goto	u5001
  5731  07E2  2FE4               	goto	u5000
  5732  07E3                     u5001:
  5733  07E3  2FD4               	goto	l3151
  5734  07E4                     u5000:
  5735  07E4                     l3153:
  5736  07E4  0860               	movf	___fltol@sign1,w
  5737  07E5  1903               	btfsc	3,2
  5738  07E6  2FE8               	goto	u5011
  5739  07E7  2FE9               	goto	u5010
  5740  07E8                     u5011:
  5741  07E8  2FF4               	goto	l615
  5742  07E9                     u5010:
  5743  07E9                     l3155:
  5744  07E9  09D7               	comf	___fltol@f1,f
  5745  07EA  09D8               	comf	___fltol@f1+1,f
  5746  07EB  09D9               	comf	___fltol@f1+2,f
  5747  07EC  09DA               	comf	___fltol@f1+3,f
  5748  07ED  0AD7               	incf	___fltol@f1,f
  5749  07EE  1903               	skipnz
  5750  07EF  0AD8               	incf	___fltol@f1+1,f
  5751  07F0  1903               	skipnz
  5752  07F1  0AD9               	incf	___fltol@f1+2,f
  5753  07F2  1903               	skipnz
  5754  07F3  0ADA               	incf	___fltol@f1+3,f
  5755  07F4                     l615:
  5756  07F4                     l605:
  5757  07F4  0008               	return
  5758  07F5                     __end_of___fltol:
  5759                           
  5760                           	psect	text15
  5761  1B2B                     __ptext15:	
  5762 ;; *************** function ___flsub *****************
  5763 ;; Defined at:
  5764 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  a               4    0[BANK1 ] long 
  5767 ;;  b               4    4[BANK1 ] long 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  4    0[BANK1 ] long 
  5772 ;; Registers used:
  5773 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5779 ;;      Params:         0       0       8       0       0
  5780 ;;      Locals:         0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0
  5782 ;;      Totals:         0       0       8       0       0
  5783 ;;Total ram usage:        8 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    2
  5786 ;; This function calls:
  5787 ;;		___fladd
  5788 ;; This function is called by:
  5789 ;;		_sprintf
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           
  5794                           ;psect for function ___flsub
  5795  1B2B                     ___flsub:
  5796  1B2B                     l3177:	
  5797                           ;incstack = 0
  5798                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5799                           
  5800  1B2B  3080               	movlw	128
  5801  1B2C  1683               	bsf	3,5	;RP0=1, select bank1
  5802  1B2D  1303               	bcf	3,6	;RP1=0, select bank1
  5803  1B2E  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  5804  1B2F                     l3179:
  5805  1B2F  0827               	movf	(___flsub@b+3)^(0+128),w
  5806  1B30  1283               	bcf	3,5	;RP0=0, select bank0
  5807  1B31  1303               	bcf	3,6	;RP1=0, select bank0
  5808  1B32  00DB               	movwf	___fladd@b+3
  5809  1B33  1683               	bsf	3,5	;RP0=1, select bank1
  5810  1B34  1303               	bcf	3,6	;RP1=0, select bank1
  5811  1B35  0826               	movf	(___flsub@b+2)^(0+128),w
  5812  1B36  1283               	bcf	3,5	;RP0=0, select bank0
  5813  1B37  1303               	bcf	3,6	;RP1=0, select bank0
  5814  1B38  00DA               	movwf	___fladd@b+2
  5815  1B39  1683               	bsf	3,5	;RP0=1, select bank1
  5816  1B3A  1303               	bcf	3,6	;RP1=0, select bank1
  5817  1B3B  0825               	movf	(___flsub@b+1)^(0+128),w
  5818  1B3C  1283               	bcf	3,5	;RP0=0, select bank0
  5819  1B3D  1303               	bcf	3,6	;RP1=0, select bank0
  5820  1B3E  00D9               	movwf	___fladd@b+1
  5821  1B3F  1683               	bsf	3,5	;RP0=1, select bank1
  5822  1B40  1303               	bcf	3,6	;RP1=0, select bank1
  5823  1B41  0824               	movf	___flsub@b^(0+128),w
  5824  1B42  1283               	bcf	3,5	;RP0=0, select bank0
  5825  1B43  1303               	bcf	3,6	;RP1=0, select bank0
  5826  1B44  00D8               	movwf	___fladd@b
  5827  1B45  1683               	bsf	3,5	;RP0=1, select bank1
  5828  1B46  1303               	bcf	3,6	;RP1=0, select bank1
  5829  1B47  0823               	movf	(___flsub@a+3)^(0+128),w
  5830  1B48  1283               	bcf	3,5	;RP0=0, select bank0
  5831  1B49  1303               	bcf	3,6	;RP1=0, select bank0
  5832  1B4A  00DF               	movwf	___fladd@a+3
  5833  1B4B  1683               	bsf	3,5	;RP0=1, select bank1
  5834  1B4C  1303               	bcf	3,6	;RP1=0, select bank1
  5835  1B4D  0822               	movf	(___flsub@a+2)^(0+128),w
  5836  1B4E  1283               	bcf	3,5	;RP0=0, select bank0
  5837  1B4F  1303               	bcf	3,6	;RP1=0, select bank0
  5838  1B50  00DE               	movwf	___fladd@a+2
  5839  1B51  1683               	bsf	3,5	;RP0=1, select bank1
  5840  1B52  1303               	bcf	3,6	;RP1=0, select bank1
  5841  1B53  0821               	movf	(___flsub@a+1)^(0+128),w
  5842  1B54  1283               	bcf	3,5	;RP0=0, select bank0
  5843  1B55  1303               	bcf	3,6	;RP1=0, select bank0
  5844  1B56  00DD               	movwf	___fladd@a+1
  5845  1B57  1683               	bsf	3,5	;RP0=1, select bank1
  5846  1B58  1303               	bcf	3,6	;RP1=0, select bank1
  5847  1B59  0820               	movf	___flsub@a^(0+128),w
  5848  1B5A  1283               	bcf	3,5	;RP0=0, select bank0
  5849  1B5B  1303               	bcf	3,6	;RP1=0, select bank0
  5850  1B5C  00DC               	movwf	___fladd@a
  5851  1B5D  160A  118A  226E  160A  158A  	fcall	___fladd
  5852  1B62  1283               	bcf	3,5	;RP0=0, select bank0
  5853  1B63  1303               	bcf	3,6	;RP1=0, select bank0
  5854  1B64  085B               	movf	?___fladd+3,w
  5855  1B65  1683               	bsf	3,5	;RP0=1, select bank1
  5856  1B66  1303               	bcf	3,6	;RP1=0, select bank1
  5857  1B67  00A3               	movwf	(?___flsub+3)^(0+128)
  5858  1B68  1283               	bcf	3,5	;RP0=0, select bank0
  5859  1B69  1303               	bcf	3,6	;RP1=0, select bank0
  5860  1B6A  085A               	movf	?___fladd+2,w
  5861  1B6B  1683               	bsf	3,5	;RP0=1, select bank1
  5862  1B6C  1303               	bcf	3,6	;RP1=0, select bank1
  5863  1B6D  00A2               	movwf	(?___flsub+2)^(0+128)
  5864  1B6E  1283               	bcf	3,5	;RP0=0, select bank0
  5865  1B6F  1303               	bcf	3,6	;RP1=0, select bank0
  5866  1B70  0859               	movf	?___fladd+1,w
  5867  1B71  1683               	bsf	3,5	;RP0=1, select bank1
  5868  1B72  1303               	bcf	3,6	;RP1=0, select bank1
  5869  1B73  00A1               	movwf	(?___flsub+1)^(0+128)
  5870  1B74  1283               	bcf	3,5	;RP0=0, select bank0
  5871  1B75  1303               	bcf	3,6	;RP1=0, select bank0
  5872  1B76  0858               	movf	?___fladd,w
  5873  1B77  1683               	bsf	3,5	;RP0=1, select bank1
  5874  1B78  1303               	bcf	3,6	;RP1=0, select bank1
  5875  1B79  00A0               	movwf	?___flsub^(0+128)
  5876  1B7A                     l775:
  5877  1B7A  0008               	return
  5878  1B7B                     __end_of___flsub:
  5879                           
  5880                           	psect	text16
  5881  126E                     __ptext16:	
  5882 ;; *************** function ___fladd *****************
  5883 ;; Defined at:
  5884 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  b               4   56[BANK0 ] long 
  5887 ;;  a               4   60[BANK0 ] long 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  grs             1   75[BANK0 ] unsigned char 
  5890 ;;  bexp            1   74[BANK0 ] unsigned char 
  5891 ;;  aexp            1   73[BANK0 ] unsigned char 
  5892 ;;  signs           1   72[BANK0 ] unsigned char 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  4   56[BANK0 ] unsigned char 
  5895 ;; Registers used:
  5896 ;;		wreg, status,2, status,0, btemp+1
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5902 ;;      Params:         0       8       0       0       0
  5903 ;;      Locals:         0       4       0       0       0
  5904 ;;      Temps:          0       8       0       0       0
  5905 ;;      Totals:         0      20       0       0       0
  5906 ;;Total ram usage:       20 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:    1
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_sprintf
  5913 ;;		___flsub
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function ___fladd
  5919  126E                     ___fladd:
  5920  126E                     l2513:	
  5921                           ;incstack = 0
  5922                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5923                           
  5924  126E  1283               	bcf	3,5	;RP0=0, select bank0
  5925  126F  1303               	bcf	3,6	;RP1=0, select bank0
  5926  1270  085B               	movf	___fladd@b+3,w
  5927  1271  3980               	andlw	128
  5928  1272  00E0               	movwf	??___fladd
  5929  1273  0860               	movf	??___fladd,w
  5930  1274  00E8               	movwf	___fladd@signs
  5931  1275                     l2515:
  5932  1275  085B               	movf	___fladd@b+3,w
  5933  1276  00E0               	movwf	??___fladd
  5934  1277  0760               	addwf	??___fladd,w
  5935  1278  00E1               	movwf	??___fladd+1
  5936  1279  0861               	movf	??___fladd+1,w
  5937  127A  00EA               	movwf	___fladd@bexp
  5938  127B                     l2517:
  5939  127B  1FDA               	btfss	___fladd@b+2,7
  5940  127C  2A7E               	goto	u3341
  5941  127D  2A7F               	goto	u3340
  5942  127E                     u3341:
  5943  127E  2A80               	goto	l2521
  5944  127F                     u3340:
  5945  127F                     l2519:
  5946  127F  146A               	bsf	___fladd@bexp,0
  5947  1280                     l2521:
  5948  1280  086A               	movf	___fladd@bexp,w
  5949  1281  1903               	btfsc	3,2
  5950  1282  2A84               	goto	u3351
  5951  1283  2A85               	goto	u3350
  5952  1284                     u3351:
  5953  1284  2A95               	goto	l2531
  5954  1285                     u3350:
  5955  1285                     l2523:
  5956  1285  0A6A               	incf	___fladd@bexp,w
  5957  1286  1D03               	btfss	3,2
  5958  1287  2A89               	goto	u3361
  5959  1288  2A8A               	goto	u3360
  5960  1289                     u3361:
  5961  1289  2A92               	goto	l2527
  5962  128A                     u3360:
  5963  128A                     l2525:
  5964  128A  3000               	movlw	0
  5965  128B  00DB               	movwf	___fladd@b+3
  5966  128C  3000               	movlw	0
  5967  128D  00DA               	movwf	___fladd@b+2
  5968  128E  3000               	movlw	0
  5969  128F  00D9               	movwf	___fladd@b+1
  5970  1290  3000               	movlw	0
  5971  1291  00D8               	movwf	___fladd@b
  5972  1292                     l2527:
  5973  1292  17DA               	bsf	___fladd@b+2,7
  5974  1293                     l2529:
  5975  1293  01DB               	clrf	___fladd@b+3
  5976  1294  2A9D               	goto	l2533
  5977  1295                     l2531:
  5978  1295  3000               	movlw	0
  5979  1296  00DB               	movwf	___fladd@b+3
  5980  1297  3000               	movlw	0
  5981  1298  00DA               	movwf	___fladd@b+2
  5982  1299  3000               	movlw	0
  5983  129A  00D9               	movwf	___fladd@b+1
  5984  129B  3000               	movlw	0
  5985  129C  00D8               	movwf	___fladd@b
  5986  129D                     l2533:
  5987  129D  085F               	movf	___fladd@a+3,w
  5988  129E  3980               	andlw	128
  5989  129F  00E0               	movwf	??___fladd
  5990  12A0  0860               	movf	??___fladd,w
  5991  12A1  00E9               	movwf	___fladd@aexp
  5992  12A2                     l2535:
  5993  12A2  0869               	movf	___fladd@aexp,w
  5994  12A3  0668               	xorwf	___fladd@signs,w
  5995  12A4  1903               	skipnz
  5996  12A5  2AA7               	goto	u3371
  5997  12A6  2AA8               	goto	u3370
  5998  12A7                     u3371:
  5999  12A7  2AA9               	goto	l2539
  6000  12A8                     u3370:
  6001  12A8                     l2537:
  6002  12A8  1768               	bsf	___fladd@signs,6
  6003  12A9                     l2539:
  6004  12A9  085F               	movf	___fladd@a+3,w
  6005  12AA  00E0               	movwf	??___fladd
  6006  12AB  0760               	addwf	??___fladd,w
  6007  12AC  00E1               	movwf	??___fladd+1
  6008  12AD  0861               	movf	??___fladd+1,w
  6009  12AE  00E9               	movwf	___fladd@aexp
  6010  12AF                     l2541:
  6011  12AF  1FDE               	btfss	___fladd@a+2,7
  6012  12B0  2AB2               	goto	u3381
  6013  12B1  2AB3               	goto	u3380
  6014  12B2                     u3381:
  6015  12B2  2AB4               	goto	l2545
  6016  12B3                     u3380:
  6017  12B3                     l2543:
  6018  12B3  1469               	bsf	___fladd@aexp,0
  6019  12B4                     l2545:
  6020  12B4  0869               	movf	___fladd@aexp,w
  6021  12B5  1903               	btfsc	3,2
  6022  12B6  2AB8               	goto	u3391
  6023  12B7  2AB9               	goto	u3390
  6024  12B8                     u3391:
  6025  12B8  2AC9               	goto	l2555
  6026  12B9                     u3390:
  6027  12B9                     l2547:
  6028  12B9  0A69               	incf	___fladd@aexp,w
  6029  12BA  1D03               	btfss	3,2
  6030  12BB  2ABD               	goto	u3401
  6031  12BC  2ABE               	goto	u3400
  6032  12BD                     u3401:
  6033  12BD  2AC6               	goto	l2551
  6034  12BE                     u3400:
  6035  12BE                     l2549:
  6036  12BE  3000               	movlw	0
  6037  12BF  00DF               	movwf	___fladd@a+3
  6038  12C0  3000               	movlw	0
  6039  12C1  00DE               	movwf	___fladd@a+2
  6040  12C2  3000               	movlw	0
  6041  12C3  00DD               	movwf	___fladd@a+1
  6042  12C4  3000               	movlw	0
  6043  12C5  00DC               	movwf	___fladd@a
  6044  12C6                     l2551:
  6045  12C6  17DE               	bsf	___fladd@a+2,7
  6046  12C7                     l2553:
  6047  12C7  01DF               	clrf	___fladd@a+3
  6048  12C8  2AD1               	goto	l729
  6049  12C9                     l2555:
  6050  12C9  3000               	movlw	0
  6051  12CA  00DF               	movwf	___fladd@a+3
  6052  12CB  3000               	movlw	0
  6053  12CC  00DE               	movwf	___fladd@a+2
  6054  12CD  3000               	movlw	0
  6055  12CE  00DD               	movwf	___fladd@a+1
  6056  12CF  3000               	movlw	0
  6057  12D0  00DC               	movwf	___fladd@a
  6058  12D1                     l729:
  6059  12D1  086A               	movf	___fladd@bexp,w
  6060  12D2  0269               	subwf	___fladd@aexp,w
  6061  12D3  1803               	skipnc
  6062  12D4  2AD6               	goto	u3411
  6063  12D5  2AD7               	goto	u3410
  6064  12D6                     u3411:
  6065  12D6  2B1B               	goto	l2591
  6066  12D7                     u3410:
  6067  12D7                     l2557:
  6068  12D7  1F68               	btfss	___fladd@signs,6
  6069  12D8  2ADA               	goto	u3421
  6070  12D9  2ADB               	goto	u3420
  6071  12DA                     u3421:
  6072  12DA  2ADF               	goto	l2561
  6073  12DB                     u3420:
  6074  12DB                     l2559:
  6075  12DB  3080               	movlw	128
  6076  12DC  00E0               	movwf	??___fladd
  6077  12DD  0860               	movf	??___fladd,w
  6078  12DE  06E8               	xorwf	___fladd@signs,f
  6079  12DF                     l2561:
  6080  12DF  086A               	movf	___fladd@bexp,w
  6081  12E0  00E0               	movwf	??___fladd
  6082  12E1  0860               	movf	??___fladd,w
  6083  12E2  00EB               	movwf	___fladd@grs
  6084  12E3                     l2563:
  6085  12E3  0869               	movf	___fladd@aexp,w
  6086  12E4  00E0               	movwf	??___fladd
  6087  12E5  0860               	movf	??___fladd,w
  6088  12E6  00EA               	movwf	___fladd@bexp
  6089  12E7                     l2565:
  6090  12E7  086B               	movf	___fladd@grs,w
  6091  12E8  00E0               	movwf	??___fladd
  6092  12E9  0860               	movf	??___fladd,w
  6093  12EA  00E9               	movwf	___fladd@aexp
  6094  12EB                     l2567:
  6095  12EB  0858               	movf	___fladd@b,w
  6096  12EC  00E0               	movwf	??___fladd
  6097  12ED  0860               	movf	??___fladd,w
  6098  12EE  00EB               	movwf	___fladd@grs
  6099  12EF                     l2569:
  6100  12EF  085C               	movf	___fladd@a,w
  6101  12F0  00E0               	movwf	??___fladd
  6102  12F1  0860               	movf	??___fladd,w
  6103  12F2  00D8               	movwf	___fladd@b
  6104  12F3                     l2571:
  6105  12F3  086B               	movf	___fladd@grs,w
  6106  12F4  00E0               	movwf	??___fladd
  6107  12F5  0860               	movf	??___fladd,w
  6108  12F6  00DC               	movwf	___fladd@a
  6109  12F7                     l2573:
  6110  12F7  0859               	movf	___fladd@b+1,w
  6111  12F8  00E0               	movwf	??___fladd
  6112  12F9  0860               	movf	??___fladd,w
  6113  12FA  00EB               	movwf	___fladd@grs
  6114  12FB                     l2575:
  6115  12FB  085D               	movf	___fladd@a+1,w
  6116  12FC  00E0               	movwf	??___fladd
  6117  12FD  0860               	movf	??___fladd,w
  6118  12FE  00D9               	movwf	___fladd@b+1
  6119  12FF                     l2577:
  6120  12FF  086B               	movf	___fladd@grs,w
  6121  1300  00E0               	movwf	??___fladd
  6122  1301  0860               	movf	??___fladd,w
  6123  1302  00DD               	movwf	___fladd@a+1
  6124  1303                     l2579:
  6125  1303  085A               	movf	___fladd@b+2,w
  6126  1304  00E0               	movwf	??___fladd
  6127  1305  0860               	movf	??___fladd,w
  6128  1306  00EB               	movwf	___fladd@grs
  6129  1307                     l2581:
  6130  1307  085E               	movf	___fladd@a+2,w
  6131  1308  00E0               	movwf	??___fladd
  6132  1309  0860               	movf	??___fladd,w
  6133  130A  00DA               	movwf	___fladd@b+2
  6134  130B                     l2583:
  6135  130B  086B               	movf	___fladd@grs,w
  6136  130C  00E0               	movwf	??___fladd
  6137  130D  0860               	movf	??___fladd,w
  6138  130E  00DE               	movwf	___fladd@a+2
  6139  130F                     l2585:
  6140  130F  085B               	movf	___fladd@b+3,w
  6141  1310  00E0               	movwf	??___fladd
  6142  1311  0860               	movf	??___fladd,w
  6143  1312  00EB               	movwf	___fladd@grs
  6144  1313                     l2587:
  6145  1313  085F               	movf	___fladd@a+3,w
  6146  1314  00E0               	movwf	??___fladd
  6147  1315  0860               	movf	??___fladd,w
  6148  1316  00DB               	movwf	___fladd@b+3
  6149  1317                     l2589:
  6150  1317  086B               	movf	___fladd@grs,w
  6151  1318  00E0               	movwf	??___fladd
  6152  1319  0860               	movf	??___fladd,w
  6153  131A  00DF               	movwf	___fladd@a+3
  6154  131B                     l2591:
  6155  131B  01EB               	clrf	___fladd@grs
  6156  131C                     l2593:
  6157  131C  0869               	movf	___fladd@aexp,w
  6158  131D  00E0               	movwf	??___fladd
  6159  131E  01E1               	clrf	??___fladd+1
  6160  131F  0861               	movf	??___fladd+1,w
  6161  1320  00E3               	movwf	??___fladd+3
  6162  1321  086A               	movf	___fladd@bexp,w
  6163  1322  0260               	subwf	??___fladd,w
  6164  1323  00E2               	movwf	??___fladd+2
  6165  1324  1C03               	skipc
  6166  1325  03E3               	decf	??___fladd+3,f
  6167  1326  0863               	movf	??___fladd+3,w
  6168  1327  3A80               	xorlw	128
  6169  1328  00FF               	movwf	btemp+1
  6170  1329  3080               	movlw	128
  6171  132A  027F               	subwf	btemp+1,w
  6172  132B  1D03               	skipz
  6173  132C  2B2F               	goto	u3435
  6174  132D  301A               	movlw	26
  6175  132E  0262               	subwf	??___fladd+2,w
  6176  132F                     u3435:
  6177  132F  1C03               	skipc
  6178  1330  2B32               	goto	u3431
  6179  1331  2B33               	goto	u3430
  6180  1332                     u3431:
  6181  1332  2B70               	goto	l2609
  6182  1333                     u3430:
  6183  1333                     l2595:
  6184  1333  1283               	bcf	3,5	;RP0=0, select bank0
  6185  1334  1303               	bcf	3,6	;RP1=0, select bank0
  6186  1335  085B               	movf	___fladd@b+3,w
  6187  1336  045A               	iorwf	___fladd@b+2,w
  6188  1337  0459               	iorwf	___fladd@b+1,w
  6189  1338  0458               	iorwf	___fladd@b,w
  6190  1339  1D03               	skipz
  6191  133A  2B3C               	goto	u3441
  6192  133B  2B3E               	goto	u3440
  6193  133C                     u3441:
  6194  133C  3001               	movlw	1
  6195  133D  2B3F               	goto	u3450
  6196  133E                     u3440:
  6197  133E  3000               	movlw	0
  6198  133F                     u3450:
  6199  133F  00E0               	movwf	??___fladd
  6200  1340  0860               	movf	??___fladd,w
  6201  1341  00EB               	movwf	___fladd@grs
  6202  1342  3000               	movlw	0
  6203  1343  00DB               	movwf	___fladd@b+3
  6204  1344  3000               	movlw	0
  6205  1345  00DA               	movwf	___fladd@b+2
  6206  1346  3000               	movlw	0
  6207  1347  00D9               	movwf	___fladd@b+1
  6208  1348  3000               	movlw	0
  6209  1349  00D8               	movwf	___fladd@b
  6210  134A  0869               	movf	___fladd@aexp,w
  6211  134B  00E0               	movwf	??___fladd
  6212  134C  0860               	movf	??___fladd,w
  6213  134D  00EA               	movwf	___fladd@bexp
  6214  134E  2B78               	goto	l733
  6215  134F                     l735:
  6216  134F  1C6B               	btfss	___fladd@grs,0
  6217  1350  2B52               	goto	u3461
  6218  1351  2B53               	goto	u3460
  6219  1352                     u3461:
  6220  1352  2B5C               	goto	l2599
  6221  1353                     u3460:
  6222  1353                     l2597:
  6223  1353  086B               	movf	___fladd@grs,w
  6224  1354  00E0               	movwf	??___fladd
  6225  1355  1003               	clrc
  6226  1356  0C60               	rrf	??___fladd,w
  6227  1357  3801               	iorlw	1
  6228  1358  00E1               	movwf	??___fladd+1
  6229  1359  0861               	movf	??___fladd+1,w
  6230  135A  00EB               	movwf	___fladd@grs
  6231  135B  2B5E               	goto	l2601
  6232  135C                     l2599:
  6233  135C  1003               	clrc
  6234  135D  0CEB               	rrf	___fladd@grs,f
  6235  135E                     l2601:
  6236  135E  1C58               	btfss	___fladd@b,0
  6237  135F  2B61               	goto	u3471
  6238  1360  2B62               	goto	u3470
  6239  1361                     u3471:
  6240  1361  2B63               	goto	l2605
  6241  1362                     u3470:
  6242  1362                     l2603:
  6243  1362  17EB               	bsf	___fladd@grs,7
  6244  1363                     l2605:
  6245  1363  3001               	movlw	1
  6246  1364  00E0               	movwf	??___fladd
  6247  1365                     u3485:
  6248  1365  0D5B               	rlf	___fladd@b+3,w
  6249  1366  0CDB               	rrf	___fladd@b+3,f
  6250  1367  0CDA               	rrf	___fladd@b+2,f
  6251  1368  0CD9               	rrf	___fladd@b+1,f
  6252  1369  0CD8               	rrf	___fladd@b,f
  6253  136A  0BE0               	decfsz	??___fladd& (0+127),f
  6254  136B  2B65               	goto	u3485
  6255  136C                     l2607:
  6256  136C  3001               	movlw	1
  6257  136D  00E0               	movwf	??___fladd
  6258  136E  0860               	movf	??___fladd,w
  6259  136F  07EA               	addwf	___fladd@bexp,f
  6260  1370                     l2609:
  6261  1370  1283               	bcf	3,5	;RP0=0, select bank0
  6262  1371  1303               	bcf	3,6	;RP1=0, select bank0
  6263  1372  0869               	movf	___fladd@aexp,w
  6264  1373  026A               	subwf	___fladd@bexp,w
  6265  1374  1C03               	skipc
  6266  1375  2B77               	goto	u3491
  6267  1376  2B78               	goto	u3490
  6268  1377                     u3491:
  6269  1377  2B4F               	goto	l735
  6270  1378                     u3490:
  6271  1378                     l733:
  6272  1378  1B68               	btfsc	___fladd@signs,6
  6273  1379  2B7B               	goto	u3501
  6274  137A  2B7C               	goto	u3500
  6275  137B                     u3501:
  6276  137B  2BC7               	goto	l2635
  6277  137C                     u3500:
  6278  137C                     l2611:
  6279  137C  086A               	movf	___fladd@bexp,w
  6280  137D  1D03               	btfss	3,2
  6281  137E  2B80               	goto	u3511
  6282  137F  2B81               	goto	u3510
  6283  1380                     u3511:
  6284  1380  2B8A               	goto	l2617
  6285  1381                     u3510:
  6286  1381                     l2613:
  6287  1381  3000               	movlw	0
  6288  1382  00DB               	movwf	?___fladd+3
  6289  1383  3000               	movlw	0
  6290  1384  00DA               	movwf	?___fladd+2
  6291  1385  3000               	movlw	0
  6292  1386  00D9               	movwf	?___fladd+1
  6293  1387  3000               	movlw	0
  6294  1388  00D8               	movwf	?___fladd
  6295  1389  2CF5               	goto	l742
  6296  138A                     l2617:
  6297  138A  085C               	movf	___fladd@a,w
  6298  138B  07D8               	addwf	___fladd@b,f
  6299  138C  085D               	movf	___fladd@a+1,w
  6300  138D  1103               	clrz
  6301  138E  1803               	skipnc
  6302  138F  3E01               	addlw	1
  6303  1390  1903               	skipnz
  6304  1391  2B93               	goto	u3521
  6305  1392  07D9               	addwf	___fladd@b+1,f
  6306  1393                     u3521:
  6307  1393  085E               	movf	___fladd@a+2,w
  6308  1394  1103               	clrz
  6309  1395  1803               	skipnc
  6310  1396  3E01               	addlw	1
  6311  1397  1903               	skipnz
  6312  1398  2B9A               	goto	u3522
  6313  1399  07DA               	addwf	___fladd@b+2,f
  6314  139A                     u3522:
  6315  139A  085F               	movf	___fladd@a+3,w
  6316  139B  1103               	clrz
  6317  139C  1803               	skipnc
  6318  139D  3E01               	addlw	1
  6319  139E  1903               	skipnz
  6320  139F  2BA1               	goto	u3523
  6321  13A0  07DB               	addwf	___fladd@b+3,f
  6322  13A1                     u3523:
  6323  13A1                     l2619:
  6324  13A1  1C5B               	btfss	___fladd@b+3,0
  6325  13A2  2BA4               	goto	u3531
  6326  13A3  2BA5               	goto	u3530
  6327  13A4                     u3531:
  6328  13A4  2C7B               	goto	l2669
  6329  13A5                     u3530:
  6330  13A5                     l2621:
  6331  13A5  1C6B               	btfss	___fladd@grs,0
  6332  13A6  2BA8               	goto	u3541
  6333  13A7  2BA9               	goto	u3540
  6334  13A8                     u3541:
  6335  13A8  2BB2               	goto	l2625
  6336  13A9                     u3540:
  6337  13A9                     l2623:
  6338  13A9  086B               	movf	___fladd@grs,w
  6339  13AA  00E0               	movwf	??___fladd
  6340  13AB  1003               	clrc
  6341  13AC  0C60               	rrf	??___fladd,w
  6342  13AD  3801               	iorlw	1
  6343  13AE  00E1               	movwf	??___fladd+1
  6344  13AF  0861               	movf	??___fladd+1,w
  6345  13B0  00EB               	movwf	___fladd@grs
  6346  13B1  2BB4               	goto	l2627
  6347  13B2                     l2625:
  6348  13B2  1003               	clrc
  6349  13B3  0CEB               	rrf	___fladd@grs,f
  6350  13B4                     l2627:
  6351  13B4  1C58               	btfss	___fladd@b,0
  6352  13B5  2BB7               	goto	u3551
  6353  13B6  2BB8               	goto	u3550
  6354  13B7                     u3551:
  6355  13B7  2BB9               	goto	l2631
  6356  13B8                     u3550:
  6357  13B8                     l2629:
  6358  13B8  17EB               	bsf	___fladd@grs,7
  6359  13B9                     l2631:
  6360  13B9  3001               	movlw	1
  6361  13BA  00E0               	movwf	??___fladd
  6362  13BB                     u3565:
  6363  13BB  0D5B               	rlf	___fladd@b+3,w
  6364  13BC  0CDB               	rrf	___fladd@b+3,f
  6365  13BD  0CDA               	rrf	___fladd@b+2,f
  6366  13BE  0CD9               	rrf	___fladd@b+1,f
  6367  13BF  0CD8               	rrf	___fladd@b,f
  6368  13C0  0BE0               	decfsz	??___fladd& (0+127),f
  6369  13C1  2BBB               	goto	u3565
  6370  13C2                     l2633:
  6371  13C2  3001               	movlw	1
  6372  13C3  00E0               	movwf	??___fladd
  6373  13C4  0860               	movf	??___fladd,w
  6374  13C5  07EA               	addwf	___fladd@bexp,f
  6375  13C6  2C7B               	goto	l2669
  6376  13C7                     l2635:
  6377  13C7  085B               	movf	___fladd@b+3,w
  6378  13C8  3A80               	xorlw	128
  6379  13C9  00FF               	movwf	btemp+1
  6380  13CA  085F               	movf	___fladd@a+3,w
  6381  13CB  3A80               	xorlw	128
  6382  13CC  027F               	subwf	btemp+1,w
  6383  13CD  1D03               	skipz
  6384  13CE  2BD9               	goto	u3573
  6385  13CF  085E               	movf	___fladd@a+2,w
  6386  13D0  025A               	subwf	___fladd@b+2,w
  6387  13D1  1D03               	skipz
  6388  13D2  2BD9               	goto	u3573
  6389  13D3  085D               	movf	___fladd@a+1,w
  6390  13D4  0259               	subwf	___fladd@b+1,w
  6391  13D5  1D03               	skipz
  6392  13D6  2BD9               	goto	u3573
  6393  13D7  085C               	movf	___fladd@a,w
  6394  13D8  0258               	subwf	___fladd@b,w
  6395  13D9                     u3573:
  6396  13D9  1803               	skipnc
  6397  13DA  2BDC               	goto	u3571
  6398  13DB  2BDD               	goto	u3570
  6399  13DC                     u3571:
  6400  13DC  2C35               	goto	l2645
  6401  13DD                     u3570:
  6402  13DD                     l2637:
  6403  13DD  30FF               	movlw	255
  6404  13DE  00E0               	movwf	??___fladd
  6405  13DF  30FF               	movlw	255
  6406  13E0  00E1               	movwf	??___fladd+1
  6407  13E1  30FF               	movlw	255
  6408  13E2  00E2               	movwf	??___fladd+2
  6409  13E3  30FF               	movlw	255
  6410  13E4  00E3               	movwf	??___fladd+3
  6411  13E5  085C               	movf	___fladd@a,w
  6412  13E6  00E4               	movwf	??___fladd+4
  6413  13E7  085D               	movf	___fladd@a+1,w
  6414  13E8  00E5               	movwf	??___fladd+5
  6415  13E9  085E               	movf	___fladd@a+2,w
  6416  13EA  00E6               	movwf	??___fladd+6
  6417  13EB  085F               	movf	___fladd@a+3,w
  6418  13EC  00E7               	movwf	??___fladd+7
  6419  13ED  0858               	movf	___fladd@b,w
  6420  13EE  02E4               	subwf	??___fladd+4,f
  6421  13EF  0859               	movf	___fladd@b+1,w
  6422  13F0  1C03               	skipc
  6423  13F1  0F59               	incfsz	___fladd@b+1,w
  6424  13F2  2BF4               	goto	u3581
  6425  13F3  2BF5               	goto	u3582
  6426  13F4                     u3581:
  6427  13F4  02E5               	subwf	??___fladd+5,f
  6428  13F5                     u3582:
  6429  13F5  085A               	movf	___fladd@b+2,w
  6430  13F6  1C03               	skipc
  6431  13F7  0F5A               	incfsz	___fladd@b+2,w
  6432  13F8  2BFA               	goto	u3583
  6433  13F9  2BFB               	goto	u3584
  6434  13FA                     u3583:
  6435  13FA  02E6               	subwf	??___fladd+6,f
  6436  13FB                     u3584:
  6437  13FB  085B               	movf	___fladd@b+3,w
  6438  13FC  1C03               	skipc
  6439  13FD  0F5B               	incfsz	___fladd@b+3,w
  6440  13FE  2C00               	goto	u3585
  6441  13FF  2C01               	goto	u3586
  6442  1400                     u3585:
  6443  1400  02E7               	subwf	??___fladd+7,f
  6444  1401                     u3586:
  6445  1401  0864               	movf	??___fladd+4,w
  6446  1402  07E0               	addwf	??___fladd,f
  6447  1403  0865               	movf	??___fladd+5,w
  6448  1404  1803               	skipnc
  6449  1405  0F65               	incfsz	??___fladd+5,w
  6450  1406  2C08               	goto	u3590
  6451  1407  2C09               	goto	u3591
  6452  1408                     u3590:
  6453  1408  07E1               	addwf	??___fladd+1,f
  6454  1409                     u3591:
  6455  1409  0866               	movf	??___fladd+6,w
  6456  140A  1803               	skipnc
  6457  140B  0F66               	incfsz	??___fladd+6,w
  6458  140C  2C0E               	goto	u3592
  6459  140D  2C0F               	goto	u3593
  6460  140E                     u3592:
  6461  140E  07E2               	addwf	??___fladd+2,f
  6462  140F                     u3593:
  6463  140F  0867               	movf	??___fladd+7,w
  6464  1410  1803               	skipnc
  6465  1411  0A67               	incf	??___fladd+7,w
  6466  1412  07E3               	addwf	??___fladd+3,f
  6467  1413  0863               	movf	??___fladd+3,w
  6468  1414  00DB               	movwf	___fladd@b+3
  6469  1415  0862               	movf	??___fladd+2,w
  6470  1416  00DA               	movwf	___fladd@b+2
  6471  1417  0861               	movf	??___fladd+1,w
  6472  1418  00D9               	movwf	___fladd@b+1
  6473  1419  0860               	movf	??___fladd,w
  6474  141A  00D8               	movwf	___fladd@b
  6475  141B                     l2639:
  6476  141B  3080               	movlw	128
  6477  141C  00E0               	movwf	??___fladd
  6478  141D  0860               	movf	??___fladd,w
  6479  141E  06E8               	xorwf	___fladd@signs,f
  6480  141F  09EB               	comf	___fladd@grs,f
  6481  1420  0AEB               	incf	___fladd@grs,f
  6482  1421                     l2641:
  6483  1421  086B               	movf	___fladd@grs,w
  6484  1422  1D03               	btfss	3,2
  6485  1423  2C25               	goto	u3601
  6486  1424  2C26               	goto	u3600
  6487  1425                     u3601:
  6488  1425  2C43               	goto	l750
  6489  1426                     u3600:
  6490  1426                     l2643:
  6491  1426  3001               	movlw	1
  6492  1427  07D8               	addwf	___fladd@b,f
  6493  1428  3000               	movlw	0
  6494  1429  1803               	skipnc
  6495  142A  3001               	movlw	1
  6496  142B  07D9               	addwf	___fladd@b+1,f
  6497  142C  3000               	movlw	0
  6498  142D  1803               	skipnc
  6499  142E  3001               	movlw	1
  6500  142F  07DA               	addwf	___fladd@b+2,f
  6501  1430  3000               	movlw	0
  6502  1431  1803               	skipnc
  6503  1432  3001               	movlw	1
  6504  1433  07DB               	addwf	___fladd@b+3,f
  6505  1434  2C43               	goto	l750
  6506  1435                     l2645:
  6507  1435  085C               	movf	___fladd@a,w
  6508  1436  02D8               	subwf	___fladd@b,f
  6509  1437  085D               	movf	___fladd@a+1,w
  6510  1438  1C03               	skipc
  6511  1439  0F5D               	incfsz	___fladd@a+1,w
  6512  143A  02D9               	subwf	___fladd@b+1,f
  6513  143B  085E               	movf	___fladd@a+2,w
  6514  143C  1C03               	skipc
  6515  143D  0F5E               	incfsz	___fladd@a+2,w
  6516  143E  02DA               	subwf	___fladd@b+2,f
  6517  143F  085F               	movf	___fladd@a+3,w
  6518  1440  1C03               	skipc
  6519  1441  0F5F               	incfsz	___fladd@a+3,w
  6520  1442  02DB               	subwf	___fladd@b+3,f
  6521  1443                     l750:
  6522  1443  085B               	movf	___fladd@b+3,w
  6523  1444  045A               	iorwf	___fladd@b+2,w
  6524  1445  0459               	iorwf	___fladd@b+1,w
  6525  1446  0458               	iorwf	___fladd@b,w
  6526  1447  1D03               	skipz
  6527  1448  2C4A               	goto	u3611
  6528  1449  2C4B               	goto	u3610
  6529  144A                     u3611:
  6530  144A  2C77               	goto	l2667
  6531  144B                     u3610:
  6532  144B                     l2647:
  6533  144B  086B               	movf	___fladd@grs,w
  6534  144C  1D03               	btfss	3,2
  6535  144D  2C4F               	goto	u3621
  6536  144E  2C50               	goto	u3620
  6537  144F                     u3621:
  6538  144F  2C77               	goto	l2667
  6539  1450                     u3620:
  6540  1450                     l2649:
  6541  1450  3000               	movlw	0
  6542  1451  00DB               	movwf	?___fladd+3
  6543  1452  3000               	movlw	0
  6544  1453  00DA               	movwf	?___fladd+2
  6545  1454  3000               	movlw	0
  6546  1455  00D9               	movwf	?___fladd+1
  6547  1456  3000               	movlw	0
  6548  1457  00D8               	movwf	?___fladd
  6549  1458  2CF5               	goto	l742
  6550  1459                     l2653:
  6551  1459  3001               	movlw	1
  6552  145A  00E0               	movwf	??___fladd
  6553  145B                     u3635:
  6554  145B  1003               	clrc
  6555  145C  0DD8               	rlf	___fladd@b,f
  6556  145D  0DD9               	rlf	___fladd@b+1,f
  6557  145E  0DDA               	rlf	___fladd@b+2,f
  6558  145F  0DDB               	rlf	___fladd@b+3,f
  6559  1460  0BE0               	decfsz	??___fladd,f
  6560  1461  2C5B               	goto	u3635
  6561  1462                     l2655:
  6562  1462  1FEB               	btfss	___fladd@grs,7
  6563  1463  2C65               	goto	u3641
  6564  1464  2C66               	goto	u3640
  6565  1465                     u3641:
  6566  1465  2C67               	goto	l754
  6567  1466                     u3640:
  6568  1466                     l2657:
  6569  1466  1458               	bsf	___fladd@b,0
  6570  1467                     l754:
  6571  1467  1C6B               	btfss	___fladd@grs,0
  6572  1468  2C6A               	goto	u3651
  6573  1469  2C6B               	goto	u3650
  6574  146A                     u3651:
  6575  146A  2C6E               	goto	l2661
  6576  146B                     u3650:
  6577  146B                     l2659:
  6578  146B  1403               	setc
  6579  146C  0DEB               	rlf	___fladd@grs,f
  6580  146D  2C70               	goto	l2663
  6581  146E                     l2661:
  6582  146E  1003               	clrc
  6583  146F  0DEB               	rlf	___fladd@grs,f
  6584  1470                     l2663:
  6585  1470  086A               	movf	___fladd@bexp,w
  6586  1471  1903               	btfsc	3,2
  6587  1472  2C74               	goto	u3661
  6588  1473  2C75               	goto	u3660
  6589  1474                     u3661:
  6590  1474  2C77               	goto	l2667
  6591  1475                     u3660:
  6592  1475                     l2665:
  6593  1475  3001               	movlw	1
  6594  1476  02EA               	subwf	___fladd@bexp,f
  6595  1477                     l2667:
  6596  1477  1FDA               	btfss	___fladd@b+2,7
  6597  1478  2C7A               	goto	u3671
  6598  1479  2C7B               	goto	u3670
  6599  147A                     u3671:
  6600  147A  2C59               	goto	l2653
  6601  147B                     u3670:
  6602  147B                     l2669:
  6603  147B  01E9               	clrf	___fladd@aexp
  6604  147C                     l2671:
  6605  147C  1FEB               	btfss	___fladd@grs,7
  6606  147D  2C7F               	goto	u3681
  6607  147E  2C80               	goto	u3680
  6608  147F                     u3681:
  6609  147F  2C8E               	goto	l2679
  6610  1480                     u3680:
  6611  1480                     l2673:
  6612  1480  086B               	movf	___fladd@grs,w
  6613  1481  397F               	andlw	127
  6614  1482  1903               	btfsc	3,2
  6615  1483  2C85               	goto	u3691
  6616  1484  2C86               	goto	u3690
  6617  1485                     u3691:
  6618  1485  2C89               	goto	l760
  6619  1486                     u3690:
  6620  1486                     l2675:
  6621  1486  01E9               	clrf	___fladd@aexp
  6622  1487  0AE9               	incf	___fladd@aexp,f
  6623  1488  2C8E               	goto	l2679
  6624  1489                     l760:
  6625  1489  1C58               	btfss	___fladd@b,0
  6626  148A  2C8C               	goto	u3701
  6627  148B  2C8D               	goto	u3700
  6628  148C                     u3701:
  6629  148C  2C8E               	goto	l2679
  6630  148D                     u3700:
  6631  148D  2C86               	goto	l2675
  6632  148E                     l2679:
  6633  148E  0869               	movf	___fladd@aexp,w
  6634  148F  1903               	btfsc	3,2
  6635  1490  2C92               	goto	u3711
  6636  1491  2C93               	goto	u3710
  6637  1492                     u3711:
  6638  1492  2CC7               	goto	l763
  6639  1493                     u3710:
  6640  1493                     l2681:
  6641  1493  3001               	movlw	1
  6642  1494  07D8               	addwf	___fladd@b,f
  6643  1495  3000               	movlw	0
  6644  1496  1803               	skipnc
  6645  1497  3001               	movlw	1
  6646  1498  07D9               	addwf	___fladd@b+1,f
  6647  1499  3000               	movlw	0
  6648  149A  1803               	skipnc
  6649  149B  3001               	movlw	1
  6650  149C  07DA               	addwf	___fladd@b+2,f
  6651  149D  3000               	movlw	0
  6652  149E  1803               	skipnc
  6653  149F  3001               	movlw	1
  6654  14A0  07DB               	addwf	___fladd@b+3,f
  6655  14A1                     l2683:
  6656  14A1  1C5B               	btfss	___fladd@b+3,0
  6657  14A2  2CA4               	goto	u3721
  6658  14A3  2CA5               	goto	u3720
  6659  14A4                     u3721:
  6660  14A4  2CC7               	goto	l763
  6661  14A5                     u3720:
  6662  14A5                     l2685:
  6663  14A5  0858               	movf	___fladd@b,w
  6664  14A6  00E0               	movwf	??___fladd
  6665  14A7  0859               	movf	___fladd@b+1,w
  6666  14A8  00E1               	movwf	??___fladd+1
  6667  14A9  085A               	movf	___fladd@b+2,w
  6668  14AA  00E2               	movwf	??___fladd+2
  6669  14AB  085B               	movf	___fladd@b+3,w
  6670  14AC  00E3               	movwf	??___fladd+3
  6671  14AD  3001               	movlw	1
  6672  14AE  00E4               	movwf	??___fladd+4
  6673  14AF                     u3735:
  6674  14AF  0D63               	rlf	??___fladd+3,w
  6675  14B0  0CE3               	rrf	??___fladd+3,f
  6676  14B1  0CE2               	rrf	??___fladd+2,f
  6677  14B2  0CE1               	rrf	??___fladd+1,f
  6678  14B3  0CE0               	rrf	??___fladd,f
  6679  14B4                     u3730:
  6680  14B4  0BE4               	decfsz	??___fladd+4,f
  6681  14B5  2CAF               	goto	u3735
  6682  14B6  0863               	movf	??___fladd+3,w
  6683  14B7  00DB               	movwf	___fladd@b+3
  6684  14B8  0862               	movf	??___fladd+2,w
  6685  14B9  00DA               	movwf	___fladd@b+2
  6686  14BA  0861               	movf	??___fladd+1,w
  6687  14BB  00D9               	movwf	___fladd@b+1
  6688  14BC  0860               	movf	??___fladd,w
  6689  14BD  00D8               	movwf	___fladd@b
  6690  14BE  0A6A               	incf	___fladd@bexp,w
  6691  14BF  1903               	btfsc	3,2
  6692  14C0  2CC2               	goto	u3741
  6693  14C1  2CC3               	goto	u3740
  6694  14C2                     u3741:
  6695  14C2  2CC7               	goto	l763
  6696  14C3                     u3740:
  6697  14C3                     l2687:
  6698  14C3  3001               	movlw	1
  6699  14C4  00E0               	movwf	??___fladd
  6700  14C5  0860               	movf	??___fladd,w
  6701  14C6  07EA               	addwf	___fladd@bexp,f
  6702  14C7                     l763:
  6703  14C7  0A6A               	incf	___fladd@bexp,w
  6704  14C8  1903               	btfsc	3,2
  6705  14C9  2CCB               	goto	u3751
  6706  14CA  2CCC               	goto	u3750
  6707  14CB                     u3751:
  6708  14CB  2CD1               	goto	l2691
  6709  14CC                     u3750:
  6710  14CC                     l2689:
  6711  14CC  086A               	movf	___fladd@bexp,w
  6712  14CD  1D03               	btfss	3,2
  6713  14CE  2CD0               	goto	u3761
  6714  14CF  2CD1               	goto	u3760
  6715  14D0                     u3761:
  6716  14D0  2CDF               	goto	l2697
  6717  14D1                     u3760:
  6718  14D1                     l2691:
  6719  14D1  3000               	movlw	0
  6720  14D2  00DB               	movwf	___fladd@b+3
  6721  14D3  3000               	movlw	0
  6722  14D4  00DA               	movwf	___fladd@b+2
  6723  14D5  3000               	movlw	0
  6724  14D6  00D9               	movwf	___fladd@b+1
  6725  14D7  3000               	movlw	0
  6726  14D8  00D8               	movwf	___fladd@b
  6727  14D9                     l2693:
  6728  14D9  086A               	movf	___fladd@bexp,w
  6729  14DA  1D03               	btfss	3,2
  6730  14DB  2CDD               	goto	u3771
  6731  14DC  2CDE               	goto	u3770
  6732  14DD                     u3771:
  6733  14DD  2CDF               	goto	l2697
  6734  14DE                     u3770:
  6735  14DE                     l2695:
  6736  14DE  01E8               	clrf	___fladd@signs
  6737  14DF                     l2697:
  6738  14DF  1C6A               	btfss	___fladd@bexp,0
  6739  14E0  2CE2               	goto	u3781
  6740  14E1  2CE3               	goto	u3780
  6741  14E2                     u3781:
  6742  14E2  2CE5               	goto	l2701
  6743  14E3                     u3780:
  6744  14E3                     l2699:
  6745  14E3  17DA               	bsf	___fladd@b+2,7
  6746  14E4  2CE9               	goto	l771
  6747  14E5                     l2701:
  6748  14E5  307F               	movlw	127
  6749  14E6  00E0               	movwf	??___fladd
  6750  14E7  0860               	movf	??___fladd,w
  6751  14E8  05DA               	andwf	___fladd@b+2,f
  6752  14E9                     l771:
  6753  14E9  086A               	movf	___fladd@bexp,w
  6754  14EA  00E0               	movwf	??___fladd
  6755  14EB  1003               	clrc
  6756  14EC  0C60               	rrf	??___fladd,w
  6757  14ED  00E1               	movwf	??___fladd+1
  6758  14EE  0861               	movf	??___fladd+1,w
  6759  14EF  00DB               	movwf	___fladd@b+3
  6760  14F0                     l2703:
  6761  14F0  1FE8               	btfss	___fladd@signs,7
  6762  14F1  2CF3               	goto	u3791
  6763  14F2  2CF4               	goto	u3790
  6764  14F3                     u3791:
  6765  14F3  2CF5               	goto	l772
  6766  14F4                     u3790:
  6767  14F4                     l2705:
  6768  14F4  17DB               	bsf	___fladd@b+3,7
  6769  14F5                     l772:
  6770  14F5                     l742:
  6771  14F5  0008               	return
  6772  14F6                     __end_of___fladd:
  6773                           
  6774                           	psect	text17
  6775  07F5                     __ptext17:	
  6776 ;; *************** function ___flneg *****************
  6777 ;; Defined at:
  6778 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  f1              4    3[COMMON] unsigned char 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  4    3[COMMON] unsigned char 
  6785 ;; Registers used:
  6786 ;;		wreg
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6792 ;;      Params:         4       0       0       0       0
  6793 ;;      Locals:         0       0       0       0       0
  6794 ;;      Temps:          0       0       0       0       0
  6795 ;;      Totals:         4       0       0       0       0
  6796 ;;Total ram usage:        4 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    1
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		_sprintf
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           
  6807                           ;psect for function ___flneg
  6808  07F5                     ___flneg:
  6809  07F5                     l3113:	
  6810                           ;incstack = 0
  6811                           ; Regs used in ___flneg: [wreg]
  6812                           
  6813  07F5  0876               	movf	___flneg@f1+3,w
  6814  07F6  0475               	iorwf	___flneg@f1+2,w
  6815  07F7  0474               	iorwf	___flneg@f1+1,w
  6816  07F8  0473               	iorwf	___flneg@f1,w
  6817  07F9  1903               	skipnz
  6818  07FA  2FFC               	goto	u4911
  6819  07FB  2FFD               	goto	u4910
  6820  07FC                     u4911:
  6821  07FC  2FFF               	goto	l3117
  6822  07FD                     u4910:
  6823  07FD                     l3115:
  6824  07FD  3080               	movlw	128
  6825  07FE  06F6               	xorwf	___flneg@f1+3,f
  6826  07FF                     l3117:
  6827  07FF                     l601:
  6828  07FF  0008               	return
  6829  0800                     __end_of___flneg:
  6830                           
  6831                           	psect	text18
  6832  1C92                     __ptext18:	
  6833 ;; *************** function ___flge *****************
  6834 ;; Defined at:
  6835 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  ff1             4    0[BANK0 ] unsigned char 
  6838 ;;  ff2             4    4[BANK0 ] unsigned char 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;		None               void
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6850 ;;      Params:         0       8       0       0       0
  6851 ;;      Locals:         0       0       0       0       0
  6852 ;;      Temps:          4       0       0       0       0
  6853 ;;      Totals:         4       8       0       0       0
  6854 ;;Total ram usage:       12 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    1
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_sprintf
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           
  6865                           ;psect for function ___flge
  6866  1C92                     ___flge:
  6867  1C92                     l4007:	
  6868                           ;incstack = 0
  6869                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6870                           
  6871  1C92  3000               	movlw	0
  6872  1C93  1283               	bcf	3,5	;RP0=0, select bank0
  6873  1C94  1303               	bcf	3,6	;RP1=0, select bank0
  6874  1C95  0520               	andwf	___flge@ff1,w
  6875  1C96  00F3               	movwf	??___flge
  6876  1C97  3000               	movlw	0
  6877  1C98  0521               	andwf	___flge@ff1+1,w
  6878  1C99  00F4               	movwf	??___flge+1
  6879  1C9A  3080               	movlw	128
  6880  1C9B  0522               	andwf	___flge@ff1+2,w
  6881  1C9C  00F5               	movwf	??___flge+2
  6882  1C9D  307F               	movlw	127
  6883  1C9E  0523               	andwf	___flge@ff1+3,w
  6884  1C9F  00F6               	movwf	??___flge+3
  6885  1CA0  0876               	movf	??___flge+3,w
  6886  1CA1  0475               	iorwf	??___flge+2,w
  6887  1CA2  0474               	iorwf	??___flge+1,w
  6888  1CA3  0473               	iorwf	??___flge,w
  6889  1CA4  1D03               	skipz
  6890  1CA5  2CA7               	goto	u6601
  6891  1CA6  2CA8               	goto	u6600
  6892  1CA7                     u6601:
  6893  1CA7  2CB0               	goto	l593
  6894  1CA8                     u6600:
  6895  1CA8                     l4009:
  6896  1CA8  3000               	movlw	0
  6897  1CA9  00A3               	movwf	___flge@ff1+3
  6898  1CAA  3000               	movlw	0
  6899  1CAB  00A2               	movwf	___flge@ff1+2
  6900  1CAC  3000               	movlw	0
  6901  1CAD  00A1               	movwf	___flge@ff1+1
  6902  1CAE  3000               	movlw	0
  6903  1CAF  00A0               	movwf	___flge@ff1
  6904  1CB0                     l593:
  6905  1CB0  3000               	movlw	0
  6906  1CB1  0524               	andwf	___flge@ff2,w
  6907  1CB2  00F3               	movwf	??___flge
  6908  1CB3  3000               	movlw	0
  6909  1CB4  0525               	andwf	___flge@ff2+1,w
  6910  1CB5  00F4               	movwf	??___flge+1
  6911  1CB6  3080               	movlw	128
  6912  1CB7  0526               	andwf	___flge@ff2+2,w
  6913  1CB8  00F5               	movwf	??___flge+2
  6914  1CB9  307F               	movlw	127
  6915  1CBA  0527               	andwf	___flge@ff2+3,w
  6916  1CBB  00F6               	movwf	??___flge+3
  6917  1CBC  0876               	movf	??___flge+3,w
  6918  1CBD  0475               	iorwf	??___flge+2,w
  6919  1CBE  0474               	iorwf	??___flge+1,w
  6920  1CBF  0473               	iorwf	??___flge,w
  6921  1CC0  1D03               	skipz
  6922  1CC1  2CC3               	goto	u6611
  6923  1CC2  2CC4               	goto	u6610
  6924  1CC3                     u6611:
  6925  1CC3  2CCC               	goto	l4013
  6926  1CC4                     u6610:
  6927  1CC4                     l4011:
  6928  1CC4  3000               	movlw	0
  6929  1CC5  00A7               	movwf	___flge@ff2+3
  6930  1CC6  3000               	movlw	0
  6931  1CC7  00A6               	movwf	___flge@ff2+2
  6932  1CC8  3000               	movlw	0
  6933  1CC9  00A5               	movwf	___flge@ff2+1
  6934  1CCA  3000               	movlw	0
  6935  1CCB  00A4               	movwf	___flge@ff2
  6936  1CCC                     l4013:
  6937  1CCC  1FA3               	btfss	___flge@ff1+3,7
  6938  1CCD  2CCF               	goto	u6621
  6939  1CCE  2CD0               	goto	u6620
  6940  1CCF                     u6621:
  6941  1CCF  2CF4               	goto	l4017
  6942  1CD0                     u6620:
  6943  1CD0                     l4015:
  6944  1CD0  3000               	movlw	0
  6945  1CD1  00F3               	movwf	??___flge
  6946  1CD2  3000               	movlw	0
  6947  1CD3  00F4               	movwf	??___flge+1
  6948  1CD4  3000               	movlw	0
  6949  1CD5  00F5               	movwf	??___flge+2
  6950  1CD6  3080               	movlw	128
  6951  1CD7  00F6               	movwf	??___flge+3
  6952  1CD8  0820               	movf	___flge@ff1,w
  6953  1CD9  02F3               	subwf	??___flge,f
  6954  1CDA  0821               	movf	___flge@ff1+1,w
  6955  1CDB  1C03               	skipc
  6956  1CDC  0F21               	incfsz	___flge@ff1+1,w
  6957  1CDD  2CDF               	goto	u6631
  6958  1CDE  2CE0               	goto	u6632
  6959  1CDF                     u6631:
  6960  1CDF  02F4               	subwf	??___flge+1,f
  6961  1CE0                     u6632:
  6962  1CE0  0822               	movf	___flge@ff1+2,w
  6963  1CE1  1C03               	skipc
  6964  1CE2  0F22               	incfsz	___flge@ff1+2,w
  6965  1CE3  2CE5               	goto	u6633
  6966  1CE4  2CE6               	goto	u6634
  6967  1CE5                     u6633:
  6968  1CE5  02F5               	subwf	??___flge+2,f
  6969  1CE6                     u6634:
  6970  1CE6  0823               	movf	___flge@ff1+3,w
  6971  1CE7  1C03               	skipc
  6972  1CE8  0F23               	incfsz	___flge@ff1+3,w
  6973  1CE9  2CEB               	goto	u6635
  6974  1CEA  2CEC               	goto	u6636
  6975  1CEB                     u6635:
  6976  1CEB  02F6               	subwf	??___flge+3,f
  6977  1CEC                     u6636:
  6978  1CEC  0876               	movf	??___flge+3,w
  6979  1CED  00A3               	movwf	___flge@ff1+3
  6980  1CEE  0875               	movf	??___flge+2,w
  6981  1CEF  00A2               	movwf	___flge@ff1+2
  6982  1CF0  0874               	movf	??___flge+1,w
  6983  1CF1  00A1               	movwf	___flge@ff1+1
  6984  1CF2  0873               	movf	??___flge,w
  6985  1CF3  00A0               	movwf	___flge@ff1
  6986  1CF4                     l4017:
  6987  1CF4  1FA7               	btfss	___flge@ff2+3,7
  6988  1CF5  2CF7               	goto	u6641
  6989  1CF6  2CF8               	goto	u6640
  6990  1CF7                     u6641:
  6991  1CF7  2D1C               	goto	l596
  6992  1CF8                     u6640:
  6993  1CF8                     l4019:
  6994  1CF8  3000               	movlw	0
  6995  1CF9  00F3               	movwf	??___flge
  6996  1CFA  3000               	movlw	0
  6997  1CFB  00F4               	movwf	??___flge+1
  6998  1CFC  3000               	movlw	0
  6999  1CFD  00F5               	movwf	??___flge+2
  7000  1CFE  3080               	movlw	128
  7001  1CFF  00F6               	movwf	??___flge+3
  7002  1D00  0824               	movf	___flge@ff2,w
  7003  1D01  02F3               	subwf	??___flge,f
  7004  1D02  0825               	movf	___flge@ff2+1,w
  7005  1D03  1C03               	skipc
  7006  1D04  0F25               	incfsz	___flge@ff2+1,w
  7007  1D05  2D07               	goto	u6651
  7008  1D06  2D08               	goto	u6652
  7009  1D07                     u6651:
  7010  1D07  02F4               	subwf	??___flge+1,f
  7011  1D08                     u6652:
  7012  1D08  0826               	movf	___flge@ff2+2,w
  7013  1D09  1C03               	skipc
  7014  1D0A  0F26               	incfsz	___flge@ff2+2,w
  7015  1D0B  2D0D               	goto	u6653
  7016  1D0C  2D0E               	goto	u6654
  7017  1D0D                     u6653:
  7018  1D0D  02F5               	subwf	??___flge+2,f
  7019  1D0E                     u6654:
  7020  1D0E  0827               	movf	___flge@ff2+3,w
  7021  1D0F  1C03               	skipc
  7022  1D10  0F27               	incfsz	___flge@ff2+3,w
  7023  1D11  2D13               	goto	u6655
  7024  1D12  2D14               	goto	u6656
  7025  1D13                     u6655:
  7026  1D13  02F6               	subwf	??___flge+3,f
  7027  1D14                     u6656:
  7028  1D14  0876               	movf	??___flge+3,w
  7029  1D15  00A7               	movwf	___flge@ff2+3
  7030  1D16  0875               	movf	??___flge+2,w
  7031  1D17  00A6               	movwf	___flge@ff2+2
  7032  1D18  0874               	movf	??___flge+1,w
  7033  1D19  00A5               	movwf	___flge@ff2+1
  7034  1D1A  0873               	movf	??___flge,w
  7035  1D1B  00A4               	movwf	___flge@ff2
  7036  1D1C                     l596:
  7037  1D1C  3080               	movlw	128
  7038  1D1D  06A3               	xorwf	___flge@ff1+3,f
  7039  1D1E  3080               	movlw	128
  7040  1D1F  06A7               	xorwf	___flge@ff2+3,f
  7041  1D20  0827               	movf	___flge@ff2+3,w
  7042  1D21  0223               	subwf	___flge@ff1+3,w
  7043  1D22  1D03               	skipz
  7044  1D23  2D2E               	goto	u6665
  7045  1D24  0826               	movf	___flge@ff2+2,w
  7046  1D25  0222               	subwf	___flge@ff1+2,w
  7047  1D26  1D03               	skipz
  7048  1D27  2D2E               	goto	u6665
  7049  1D28  0825               	movf	___flge@ff2+1,w
  7050  1D29  0221               	subwf	___flge@ff1+1,w
  7051  1D2A  1D03               	skipz
  7052  1D2B  2D2E               	goto	u6665
  7053  1D2C  0824               	movf	___flge@ff2,w
  7054  1D2D  0220               	subwf	___flge@ff1,w
  7055  1D2E                     u6665:
  7056  1D2E  1803               	skipnc
  7057  1D2F  2D31               	goto	u6661
  7058  1D30  2D32               	goto	u6660
  7059  1D31                     u6661:
  7060  1D31  2D34               	goto	l4023
  7061  1D32                     u6660:
  7062  1D32                     l4021:
  7063  1D32  1003               	clrc
  7064  1D33  2D35               	goto	l597
  7065  1D34                     l4023:
  7066  1D34  1403               	setc
  7067  1D35                     l597:
  7068  1D35  0008               	return
  7069  1D36                     __end_of___flge:
  7070                           
  7071                           	psect	text19
  7072  1ADB                     __ptext19:	
  7073 ;; *************** function ___fleq *****************
  7074 ;; Defined at:
  7075 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  ff1             4    0[BANK0 ] unsigned char 
  7078 ;;  ff2             4    4[BANK0 ] unsigned char 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;		None               void
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7090 ;;      Params:         0       8       0       0       0
  7091 ;;      Locals:         0       0       0       0       0
  7092 ;;      Temps:          4       0       0       0       0
  7093 ;;      Totals:         4       8       0       0       0
  7094 ;;Total ram usage:       12 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; Hardware stack levels required when called:    1
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_sprintf
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           
  7105                           ;psect for function ___fleq
  7106  1ADB                     ___fleq:
  7107  1ADB                     l3995:	
  7108                           ;incstack = 0
  7109                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7110                           
  7111  1ADB  3000               	movlw	0
  7112  1ADC  1283               	bcf	3,5	;RP0=0, select bank0
  7113  1ADD  1303               	bcf	3,6	;RP1=0, select bank0
  7114  1ADE  0520               	andwf	___fleq@ff1,w
  7115  1ADF  00F3               	movwf	??___fleq
  7116  1AE0  3000               	movlw	0
  7117  1AE1  0521               	andwf	___fleq@ff1+1,w
  7118  1AE2  00F4               	movwf	??___fleq+1
  7119  1AE3  3080               	movlw	128
  7120  1AE4  0522               	andwf	___fleq@ff1+2,w
  7121  1AE5  00F5               	movwf	??___fleq+2
  7122  1AE6  307F               	movlw	127
  7123  1AE7  0523               	andwf	___fleq@ff1+3,w
  7124  1AE8  00F6               	movwf	??___fleq+3
  7125  1AE9  0876               	movf	??___fleq+3,w
  7126  1AEA  0475               	iorwf	??___fleq+2,w
  7127  1AEB  0474               	iorwf	??___fleq+1,w
  7128  1AEC  0473               	iorwf	??___fleq,w
  7129  1AED  1D03               	skipz
  7130  1AEE  2AF0               	goto	u6571
  7131  1AEF  2AF1               	goto	u6570
  7132  1AF0                     u6571:
  7133  1AF0  2AF9               	goto	l588
  7134  1AF1                     u6570:
  7135  1AF1                     l3997:
  7136  1AF1  3000               	movlw	0
  7137  1AF2  00A3               	movwf	___fleq@ff1+3
  7138  1AF3  3000               	movlw	0
  7139  1AF4  00A2               	movwf	___fleq@ff1+2
  7140  1AF5  3000               	movlw	0
  7141  1AF6  00A1               	movwf	___fleq@ff1+1
  7142  1AF7  3000               	movlw	0
  7143  1AF8  00A0               	movwf	___fleq@ff1
  7144  1AF9                     l588:
  7145  1AF9  3000               	movlw	0
  7146  1AFA  0524               	andwf	___fleq@ff2,w
  7147  1AFB  00F3               	movwf	??___fleq
  7148  1AFC  3000               	movlw	0
  7149  1AFD  0525               	andwf	___fleq@ff2+1,w
  7150  1AFE  00F4               	movwf	??___fleq+1
  7151  1AFF  3080               	movlw	128
  7152  1B00  0526               	andwf	___fleq@ff2+2,w
  7153  1B01  00F5               	movwf	??___fleq+2
  7154  1B02  307F               	movlw	127
  7155  1B03  0527               	andwf	___fleq@ff2+3,w
  7156  1B04  00F6               	movwf	??___fleq+3
  7157  1B05  0876               	movf	??___fleq+3,w
  7158  1B06  0475               	iorwf	??___fleq+2,w
  7159  1B07  0474               	iorwf	??___fleq+1,w
  7160  1B08  0473               	iorwf	??___fleq,w
  7161  1B09  1D03               	skipz
  7162  1B0A  2B0C               	goto	u6581
  7163  1B0B  2B0D               	goto	u6580
  7164  1B0C                     u6581:
  7165  1B0C  2B15               	goto	l589
  7166  1B0D                     u6580:
  7167  1B0D                     l3999:
  7168  1B0D  3000               	movlw	0
  7169  1B0E  00A7               	movwf	___fleq@ff2+3
  7170  1B0F  3000               	movlw	0
  7171  1B10  00A6               	movwf	___fleq@ff2+2
  7172  1B11  3000               	movlw	0
  7173  1B12  00A5               	movwf	___fleq@ff2+1
  7174  1B13  3000               	movlw	0
  7175  1B14  00A4               	movwf	___fleq@ff2
  7176  1B15                     l589:
  7177  1B15  0827               	movf	___fleq@ff2+3,w
  7178  1B16  0623               	xorwf	___fleq@ff1+3,w
  7179  1B17  1D03               	skipz
  7180  1B18  2B23               	goto	u6595
  7181  1B19  0826               	movf	___fleq@ff2+2,w
  7182  1B1A  0622               	xorwf	___fleq@ff1+2,w
  7183  1B1B  1D03               	skipz
  7184  1B1C  2B23               	goto	u6595
  7185  1B1D  0825               	movf	___fleq@ff2+1,w
  7186  1B1E  0621               	xorwf	___fleq@ff1+1,w
  7187  1B1F  1D03               	skipz
  7188  1B20  2B23               	goto	u6595
  7189  1B21  0824               	movf	___fleq@ff2,w
  7190  1B22  0620               	xorwf	___fleq@ff1,w
  7191  1B23                     u6595:
  7192  1B23  1903               	skipnz
  7193  1B24  2B26               	goto	u6591
  7194  1B25  2B27               	goto	u6590
  7195  1B26                     u6591:
  7196  1B26  2B29               	goto	l4003
  7197  1B27                     u6590:
  7198  1B27                     l4001:
  7199  1B27  1003               	clrc
  7200  1B28  2B2A               	goto	l590
  7201  1B29                     l4003:
  7202  1B29  1403               	setc
  7203  1B2A                     l590:
  7204  1B2A  0008               	return
  7205  1B2B                     __end_of___fleq:
  7206                           
  7207                           	psect	text20
  7208  1858                     __ptext20:	
  7209 ;; *************** function _setup *****************
  7210 ;; Defined at:
  7211 ;;		line 105 in file "main.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;		None
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;		None
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  1    wreg      void 
  7218 ;; Registers used:
  7219 ;;		wreg, status,2
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7225 ;;      Params:         0       0       0       0       0
  7226 ;;      Locals:         0       0       0       0       0
  7227 ;;      Temps:          0       0       0       0       0
  7228 ;;      Totals:         0       0       0       0       0
  7229 ;;Total ram usage:        0 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:    1
  7232 ;; This function calls:
  7233 ;;		Nothing
  7234 ;; This function is called by:
  7235 ;;		_main
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           
  7240                           ;psect for function _setup
  7241  1858                     _setup:
  7242  1858                     l3227:	
  7243                           ;incstack = 0
  7244                           ; Regs used in _setup: [wreg+status,2]
  7245                           
  7246                           
  7247                           ;main.c: 106:     TRISD = 0b00000000;
  7248  1858  1683               	bsf	3,5	;RP0=1, select bank1
  7249  1859  1303               	bcf	3,6	;RP1=0, select bank1
  7250  185A  0188               	clrf	8	;volatile
  7251  185B                     l3229:
  7252                           
  7253                           ;main.c: 107:     TRISC = 0b10000000;
  7254  185B  3080               	movlw	128
  7255  185C  0087               	movwf	7	;volatile
  7256  185D                     l3231:
  7257                           
  7258                           ;main.c: 108:     TRISE = 0b00000000;
  7259  185D  0189               	clrf	9	;volatile
  7260                           
  7261                           ;main.c: 110:     ANSEL = 0b00000011;
  7262  185E  3003               	movlw	3
  7263  185F  1683               	bsf	3,5	;RP0=1, select bank3
  7264  1860  1703               	bsf	3,6	;RP1=1, select bank3
  7265  1861  0088               	movwf	8	;volatile
  7266  1862                     l3233:
  7267                           
  7268                           ;main.c: 111:     PORTC = 0;
  7269  1862  1283               	bcf	3,5	;RP0=0, select bank0
  7270  1863  1303               	bcf	3,6	;RP1=0, select bank0
  7271  1864  0187               	clrf	7	;volatile
  7272  1865                     l3235:
  7273                           
  7274                           ;main.c: 112:     PORTD = 0;
  7275  1865  0188               	clrf	8	;volatile
  7276  1866                     l3237:
  7277                           
  7278                           ;main.c: 113:     PORTE = 0;
  7279  1866  0189               	clrf	9	;volatile
  7280  1867                     l3239:
  7281                           
  7282                           ;main.c: 114:     PORTB = 0;
  7283  1867  0186               	clrf	6	;volatile
  7284  1868                     l87:
  7285  1868  0008               	return
  7286  1869                     __end_of_setup:
  7287                           
  7288                           	psect	text21
  7289  182F                     __ptext21:	
  7290 ;; *************** function _recibir *****************
  7291 ;; Defined at:
  7292 ;;		line 40 in file "USART.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;		None
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;		None
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1    wreg      void 
  7299 ;; Registers used:
  7300 ;;		None
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7306 ;;      Params:         0       0       0       0       0
  7307 ;;      Locals:         0       0       0       0       0
  7308 ;;      Temps:          0       0       0       0       0
  7309 ;;      Totals:         0       0       0       0       0
  7310 ;;Total ram usage:        0 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; Hardware stack levels required when called:    1
  7313 ;; This function calls:
  7314 ;;		Nothing
  7315 ;; This function is called by:
  7316 ;;		_main
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           
  7321                           ;psect for function _recibir
  7322  182F                     _recibir:
  7323  182F                     l3251:	
  7324                           ;incstack = 0
  7325                           ; Regs used in _recibir: []
  7326                           
  7327                           
  7328                           ;USART.c: 41:     RCSTAbits.CREN = 1;
  7329  182F  1283               	bcf	3,5	;RP0=0, select bank0
  7330  1830  1303               	bcf	3,6	;RP1=0, select bank0
  7331  1831  1618               	bsf	24,4	;volatile
  7332                           
  7333                           ;USART.c: 42:     RCSTAbits.FERR = 0;
  7334  1832  1118               	bcf	24,2	;volatile
  7335                           
  7336                           ;USART.c: 43:     PIE1bits.RCIE = 1;
  7337  1833  1683               	bsf	3,5	;RP0=1, select bank1
  7338  1834  1303               	bcf	3,6	;RP1=0, select bank1
  7339  1835  168C               	bsf	12,5	;volatile
  7340                           
  7341                           ;USART.c: 44:     RCSTAbits.OERR = 0;
  7342  1836  1283               	bcf	3,5	;RP0=0, select bank0
  7343  1837  1303               	bcf	3,6	;RP1=0, select bank0
  7344  1838  1098               	bcf	24,1	;volatile
  7345  1839                     l197:
  7346  1839  0008               	return
  7347  183A                     __end_of_recibir:
  7348                           
  7349                           	psect	text22
  7350  19C9                     __ptext22:	
  7351 ;; *************** function _enviar *****************
  7352 ;; Defined at:
  7353 ;;		line 22 in file "USART.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  valor           1    wreg     PTR unsigned char 
  7356 ;;		 -> s(20), 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  valor           1    3[COMMON] PTR unsigned char 
  7359 ;;		 -> s(20), 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7369 ;;      Params:         0       0       0       0       0
  7370 ;;      Locals:         1       0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0
  7372 ;;      Totals:         1       0       0       0       0
  7373 ;;Total ram usage:        1 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    1
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_main
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           
  7384                           ;psect for function _enviar
  7385  19C9                     _enviar:
  7386                           
  7387                           ;incstack = 0
  7388                           ; Regs used in _enviar: [wreg-fsr0h+status,2+status,0]
  7389                           ;enviar@valor stored from wreg
  7390  19C9  00F3               	movwf	enviar@valor
  7391  19CA                     l3621:
  7392                           
  7393                           ;USART.c: 23:     TXREG = valor[0];
  7394  19CA  0873               	movf	enviar@valor,w
  7395  19CB  0084               	movwf	4
  7396  19CC  1783               	bsf	3,7	;select IRP bank2
  7397  19CD  0800               	movf	0,w
  7398  19CE  1283               	bcf	3,5	;RP0=0, select bank0
  7399  19CF  1303               	bcf	3,6	;RP1=0, select bank0
  7400  19D0  0099               	movwf	25	;volatile
  7401  19D1                     l179:	
  7402                           ;USART.c: 25:     }
  7403                           
  7404                           
  7405                           ;USART.c: 24:     while (TRMT == 0) {
  7406  19D1  1683               	bsf	3,5	;RP0=1, select bank1
  7407  19D2  1303               	bcf	3,6	;RP1=0, select bank1
  7408  19D3  1C98               	btfss	24,1	;volatile
  7409  19D4  29D6               	goto	u5841
  7410  19D5  29D7               	goto	u5840
  7411  19D6                     u5841:
  7412  19D6  29D1               	goto	l179
  7413  19D7                     u5840:
  7414  19D7                     l3623:
  7415                           
  7416                           ;USART.c: 26:     TXREG = valor[1];
  7417  19D7  0A73               	incf	enviar@valor,w
  7418  19D8  0084               	movwf	4
  7419  19D9  1783               	bsf	3,7	;select IRP bank2
  7420  19DA  0800               	movf	0,w
  7421  19DB  1283               	bcf	3,5	;RP0=0, select bank0
  7422  19DC  1303               	bcf	3,6	;RP1=0, select bank0
  7423  19DD  0099               	movwf	25	;volatile
  7424  19DE                     l182:	
  7425                           ;USART.c: 28:     }
  7426                           
  7427                           
  7428                           ;USART.c: 27:     while (TRMT == 0) {
  7429  19DE  1683               	bsf	3,5	;RP0=1, select bank1
  7430  19DF  1303               	bcf	3,6	;RP1=0, select bank1
  7431  19E0  1C98               	btfss	24,1	;volatile
  7432  19E1  29E3               	goto	u5851
  7433  19E2  29E4               	goto	u5850
  7434  19E3                     u5851:
  7435  19E3  29DE               	goto	l182
  7436  19E4                     u5850:
  7437  19E4                     l3625:
  7438                           
  7439                           ;USART.c: 29:     TXREG = valor[2];
  7440  19E4  0873               	movf	enviar@valor,w
  7441  19E5  3E02               	addlw	2
  7442  19E6  0084               	movwf	4
  7443  19E7  1783               	bsf	3,7	;select IRP bank2
  7444  19E8  0800               	movf	0,w
  7445  19E9  1283               	bcf	3,5	;RP0=0, select bank0
  7446  19EA  1303               	bcf	3,6	;RP1=0, select bank0
  7447  19EB  0099               	movwf	25	;volatile
  7448  19EC                     l185:	
  7449                           ;USART.c: 31:     }
  7450                           
  7451                           
  7452                           ;USART.c: 30:     while (TRMT == 0) {
  7453  19EC  1683               	bsf	3,5	;RP0=1, select bank1
  7454  19ED  1303               	bcf	3,6	;RP1=0, select bank1
  7455  19EE  1C98               	btfss	24,1	;volatile
  7456  19EF  29F1               	goto	u5861
  7457  19F0  29F2               	goto	u5860
  7458  19F1                     u5861:
  7459  19F1  29EC               	goto	l185
  7460  19F2                     u5860:
  7461  19F2                     l3627:
  7462                           
  7463                           ;USART.c: 32:     TXREG = valor[3];
  7464  19F2  0873               	movf	enviar@valor,w
  7465  19F3  3E03               	addlw	3
  7466  19F4  0084               	movwf	4
  7467  19F5  1783               	bsf	3,7	;select IRP bank2
  7468  19F6  0800               	movf	0,w
  7469  19F7  1283               	bcf	3,5	;RP0=0, select bank0
  7470  19F8  1303               	bcf	3,6	;RP1=0, select bank0
  7471  19F9  0099               	movwf	25	;volatile
  7472  19FA                     l188:	
  7473                           ;USART.c: 34:     }
  7474                           
  7475                           
  7476                           ;USART.c: 33:     while (TRMT == 0) {
  7477  19FA  1683               	bsf	3,5	;RP0=1, select bank1
  7478  19FB  1303               	bcf	3,6	;RP1=0, select bank1
  7479  19FC  1C98               	btfss	24,1	;volatile
  7480  19FD  29FF               	goto	u5871
  7481  19FE  2A00               	goto	u5870
  7482  19FF                     u5871:
  7483  19FF  29FA               	goto	l188
  7484  1A00                     u5870:
  7485  1A00                     l3629:
  7486                           
  7487                           ;USART.c: 35:     TXREG = 0x20;
  7488  1A00  3020               	movlw	32
  7489  1A01  1283               	bcf	3,5	;RP0=0, select bank0
  7490  1A02  1303               	bcf	3,6	;RP1=0, select bank0
  7491  1A03  0099               	movwf	25	;volatile
  7492  1A04                     l191:	
  7493                           ;USART.c: 37:     }
  7494                           
  7495                           
  7496                           ;USART.c: 36:     while (TRMT == 0) {
  7497  1A04  1683               	bsf	3,5	;RP0=1, select bank1
  7498  1A05  1303               	bcf	3,6	;RP1=0, select bank1
  7499  1A06  1C98               	btfss	24,1	;volatile
  7500  1A07  2A09               	goto	u5881
  7501  1A08  2A0A               	goto	u5880
  7502  1A09                     u5881:
  7503  1A09  2A04               	goto	l191
  7504  1A0A                     u5880:
  7505  1A0A                     l194:
  7506  1A0A  0008               	return
  7507  1A0B                     __end_of_enviar:
  7508                           
  7509                           	psect	text23
  7510  1005                     __ptext23:	
  7511 ;; *************** function _conversor *****************
  7512 ;; Defined at:
  7513 ;;		line 122 in file "main.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  val             1    wreg     unsigned char 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  val             1   44[BANK0 ] unsigned char 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  4   36[BANK0 ] unsigned char 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7527 ;;      Params:         0       4       0       0       0
  7528 ;;      Locals:         0       1       0       0       0
  7529 ;;      Temps:          0       4       0       0       0
  7530 ;;      Totals:         0       9       0       0       0
  7531 ;;Total ram usage:        9 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    3
  7534 ;; This function calls:
  7535 ;;		___flmul
  7536 ;;		___xxtofl
  7537 ;; This function is called by:
  7538 ;;		_main
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           
  7543                           ;psect for function _conversor
  7544  1005                     _conversor:
  7545                           
  7546                           ;incstack = 0
  7547                           ; Regs used in _conversor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7548                           ;conversor@val stored from wreg
  7549  1005  1283               	bcf	3,5	;RP0=0, select bank0
  7550  1006  1303               	bcf	3,6	;RP1=0, select bank0
  7551  1007  00CC               	movwf	conversor@val
  7552  1008                     l4123:
  7553                           
  7554                           ;main.c: 123:     x = 0.0195 * val;
  7555  1008  303C               	movlw	60
  7556  1009  00AD               	movwf	___flmul@b+3
  7557  100A  309F               	movlw	159
  7558  100B  00AC               	movwf	___flmul@b+2
  7559  100C  30BE               	movlw	190
  7560  100D  00AB               	movwf	___flmul@b+1
  7561  100E  3077               	movlw	119
  7562  100F  00AA               	movwf	___flmul@b
  7563  1010  084C               	movf	conversor@val,w
  7564  1011  00C8               	movwf	??_conversor
  7565  1012  01C9               	clrf	??_conversor+1
  7566  1013  01CA               	clrf	??_conversor+2
  7567  1014  01CB               	clrf	??_conversor+3
  7568  1015  084B               	movf	??_conversor+3,w
  7569  1016  00F6               	movwf	___xxtofl@val+3
  7570  1017  084A               	movf	??_conversor+2,w
  7571  1018  00F5               	movwf	___xxtofl@val+2
  7572  1019  0849               	movf	??_conversor+1,w
  7573  101A  00F4               	movwf	___xxtofl@val+1
  7574  101B  0848               	movf	??_conversor,w
  7575  101C  00F3               	movwf	___xxtofl@val
  7576  101D  3001               	movlw	1
  7577  101E  160A  158A  2536  160A  118A  	fcall	___xxtofl
  7578  1023  0876               	movf	?___xxtofl+3,w
  7579  1024  1283               	bcf	3,5	;RP0=0, select bank0
  7580  1025  1303               	bcf	3,6	;RP1=0, select bank0
  7581  1026  00B1               	movwf	___flmul@a+3
  7582  1027  0875               	movf	?___xxtofl+2,w
  7583  1028  00B0               	movwf	___flmul@a+2
  7584  1029  0874               	movf	?___xxtofl+1,w
  7585  102A  00AF               	movwf	___flmul@a+1
  7586  102B  0873               	movf	?___xxtofl,w
  7587  102C  00AE               	movwf	___flmul@a
  7588  102D  120A  158A  213C  160A  118A  	fcall	___flmul
  7589  1032  1283               	bcf	3,5	;RP0=0, select bank0
  7590  1033  1303               	bcf	3,6	;RP1=0, select bank0
  7591  1034  082D               	movf	?___flmul+3,w
  7592  1035  1683               	bsf	3,5	;RP0=1, select bank1
  7593  1036  1303               	bcf	3,6	;RP1=0, select bank1
  7594  1037  00D0               	movwf	(_x+3)^(0+128)
  7595  1038  1283               	bcf	3,5	;RP0=0, select bank0
  7596  1039  1303               	bcf	3,6	;RP1=0, select bank0
  7597  103A  082C               	movf	?___flmul+2,w
  7598  103B  1683               	bsf	3,5	;RP0=1, select bank1
  7599  103C  1303               	bcf	3,6	;RP1=0, select bank1
  7600  103D  00CF               	movwf	(_x+2)^(0+128)
  7601  103E  1283               	bcf	3,5	;RP0=0, select bank0
  7602  103F  1303               	bcf	3,6	;RP1=0, select bank0
  7603  1040  082B               	movf	?___flmul+1,w
  7604  1041  1683               	bsf	3,5	;RP0=1, select bank1
  7605  1042  1303               	bcf	3,6	;RP1=0, select bank1
  7606  1043  00CE               	movwf	(_x+1)^(0+128)
  7607  1044  1283               	bcf	3,5	;RP0=0, select bank0
  7608  1045  1303               	bcf	3,6	;RP1=0, select bank0
  7609  1046  082A               	movf	?___flmul,w
  7610  1047  1683               	bsf	3,5	;RP0=1, select bank1
  7611  1048  1303               	bcf	3,6	;RP1=0, select bank1
  7612  1049  00CD               	movwf	_x^(0+128)
  7613  104A                     l4125:
  7614                           
  7615                           ;main.c: 124:     return (x);
  7616  104A  0850               	movf	(_x+3)^(0+128),w
  7617  104B  1283               	bcf	3,5	;RP0=0, select bank0
  7618  104C  1303               	bcf	3,6	;RP1=0, select bank0
  7619  104D  00C7               	movwf	?_conversor+3
  7620  104E  1683               	bsf	3,5	;RP0=1, select bank1
  7621  104F  1303               	bcf	3,6	;RP1=0, select bank1
  7622  1050  084F               	movf	(_x+2)^(0+128),w
  7623  1051  1283               	bcf	3,5	;RP0=0, select bank0
  7624  1052  1303               	bcf	3,6	;RP1=0, select bank0
  7625  1053  00C6               	movwf	?_conversor+2
  7626  1054  1683               	bsf	3,5	;RP0=1, select bank1
  7627  1055  1303               	bcf	3,6	;RP1=0, select bank1
  7628  1056  084E               	movf	(_x+1)^(0+128),w
  7629  1057  1283               	bcf	3,5	;RP0=0, select bank0
  7630  1058  1303               	bcf	3,6	;RP1=0, select bank0
  7631  1059  00C5               	movwf	?_conversor+1
  7632  105A  1683               	bsf	3,5	;RP0=1, select bank1
  7633  105B  1303               	bcf	3,6	;RP1=0, select bank1
  7634  105C  084D               	movf	_x^(0+128),w
  7635  105D  1283               	bcf	3,5	;RP0=0, select bank0
  7636  105E  1303               	bcf	3,6	;RP1=0, select bank0
  7637  105F  00C4               	movwf	?_conversor
  7638  1060                     l90:
  7639  1060  0008               	return
  7640  1061                     __end_of_conversor:
  7641                           
  7642                           	psect	text24
  7643  1D36                     __ptext24:	
  7644 ;; *************** function ___xxtofl *****************
  7645 ;; Defined at:
  7646 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  sign            1    wreg     unsigned char 
  7649 ;;  val             4    3[COMMON] long 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;  sign            1    4[BANK0 ] unsigned char 
  7652 ;;  arg             4    6[BANK0 ] unsigned long 
  7653 ;;  exp             1    5[BANK0 ] unsigned char 
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  4    3[COMMON] unsigned char 
  7656 ;; Registers used:
  7657 ;;		wreg, status,2, status,0
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7663 ;;      Params:         4       0       0       0       0
  7664 ;;      Locals:         0       6       0       0       0
  7665 ;;      Temps:          0       4       0       0       0
  7666 ;;      Totals:         4      10       0       0       0
  7667 ;;Total ram usage:       14 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    1
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_conversor
  7674 ;;		_sprintf
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           
  7679                           ;psect for function ___xxtofl
  7680  1D36                     ___xxtofl:
  7681                           
  7682                           ;incstack = 0
  7683                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7684                           ;___xxtofl@sign stored from wreg
  7685  1D36  1283               	bcf	3,5	;RP0=0, select bank0
  7686  1D37  1303               	bcf	3,6	;RP1=0, select bank0
  7687  1D38  00A4               	movwf	___xxtofl@sign
  7688  1D39                     l4047:
  7689  1D39  0824               	movf	___xxtofl@sign,w
  7690  1D3A  1903               	btfsc	3,2
  7691  1D3B  2D3D               	goto	u6731
  7692  1D3C  2D3E               	goto	u6730
  7693  1D3D                     u6731:
  7694  1D3D  2D52               	goto	l4053
  7695  1D3E                     u6730:
  7696  1D3E                     l4049:
  7697  1D3E  1FF6               	btfss	___xxtofl@val+3,7
  7698  1D3F  2D41               	goto	u6741
  7699  1D40  2D42               	goto	u6740
  7700  1D41                     u6741:
  7701  1D41  2D52               	goto	l4053
  7702  1D42                     u6740:
  7703  1D42                     l4051:
  7704  1D42  0973               	comf	___xxtofl@val,w
  7705  1D43  00A6               	movwf	___xxtofl@arg
  7706  1D44  0974               	comf	___xxtofl@val+1,w
  7707  1D45  00A7               	movwf	___xxtofl@arg+1
  7708  1D46  0975               	comf	___xxtofl@val+2,w
  7709  1D47  00A8               	movwf	___xxtofl@arg+2
  7710  1D48  0976               	comf	___xxtofl@val+3,w
  7711  1D49  00A9               	movwf	___xxtofl@arg+3
  7712  1D4A  0AA6               	incf	___xxtofl@arg,f
  7713  1D4B  1903               	skipnz
  7714  1D4C  0AA7               	incf	___xxtofl@arg+1,f
  7715  1D4D  1903               	skipnz
  7716  1D4E  0AA8               	incf	___xxtofl@arg+2,f
  7717  1D4F  1903               	skipnz
  7718  1D50  0AA9               	incf	___xxtofl@arg+3,f
  7719  1D51  2D5A               	goto	l869
  7720  1D52                     l4053:
  7721  1D52  0876               	movf	___xxtofl@val+3,w
  7722  1D53  00A9               	movwf	___xxtofl@arg+3
  7723  1D54  0875               	movf	___xxtofl@val+2,w
  7724  1D55  00A8               	movwf	___xxtofl@arg+2
  7725  1D56  0874               	movf	___xxtofl@val+1,w
  7726  1D57  00A7               	movwf	___xxtofl@arg+1
  7727  1D58  0873               	movf	___xxtofl@val,w
  7728  1D59  00A6               	movwf	___xxtofl@arg
  7729  1D5A                     l869:
  7730  1D5A  0876               	movf	___xxtofl@val+3,w
  7731  1D5B  0475               	iorwf	___xxtofl@val+2,w
  7732  1D5C  0474               	iorwf	___xxtofl@val+1,w
  7733  1D5D  0473               	iorwf	___xxtofl@val,w
  7734  1D5E  1D03               	skipz
  7735  1D5F  2D61               	goto	u6751
  7736  1D60  2D62               	goto	u6750
  7737  1D61                     u6751:
  7738  1D61  2D6B               	goto	l4059
  7739  1D62                     u6750:
  7740  1D62                     l4055:
  7741  1D62  3000               	movlw	0
  7742  1D63  00F6               	movwf	?___xxtofl+3
  7743  1D64  3000               	movlw	0
  7744  1D65  00F5               	movwf	?___xxtofl+2
  7745  1D66  3000               	movlw	0
  7746  1D67  00F4               	movwf	?___xxtofl+1
  7747  1D68  3000               	movlw	0
  7748  1D69  00F3               	movwf	?___xxtofl
  7749  1D6A  2DF1               	goto	l871
  7750  1D6B                     l4059:
  7751  1D6B  3096               	movlw	150
  7752  1D6C  00A0               	movwf	??___xxtofl
  7753  1D6D  0820               	movf	??___xxtofl,w
  7754  1D6E  00A5               	movwf	___xxtofl@exp
  7755  1D6F  2D7D               	goto	l4063
  7756  1D70                     l4061:
  7757  1D70  3001               	movlw	1
  7758  1D71  00A0               	movwf	??___xxtofl
  7759  1D72  0820               	movf	??___xxtofl,w
  7760  1D73  07A5               	addwf	___xxtofl@exp,f
  7761  1D74  3001               	movlw	1
  7762  1D75                     u6765:
  7763  1D75  1003               	clrc
  7764  1D76  0CA9               	rrf	___xxtofl@arg+3,f
  7765  1D77  0CA8               	rrf	___xxtofl@arg+2,f
  7766  1D78  0CA7               	rrf	___xxtofl@arg+1,f
  7767  1D79  0CA6               	rrf	___xxtofl@arg,f
  7768  1D7A  3EFF               	addlw	-1
  7769  1D7B  1D03               	skipz
  7770  1D7C  2D75               	goto	u6765
  7771  1D7D                     l4063:
  7772  1D7D  30FE               	movlw	254
  7773  1D7E  0529               	andwf	___xxtofl@arg+3,w
  7774  1D7F  1D03               	btfss	3,2
  7775  1D80  2D82               	goto	u6771
  7776  1D81  2D83               	goto	u6770
  7777  1D82                     u6771:
  7778  1D82  2D70               	goto	l4061
  7779  1D83                     u6770:
  7780  1D83  2D9F               	goto	l875
  7781  1D84                     l4065:
  7782  1D84  3001               	movlw	1
  7783  1D85  00A0               	movwf	??___xxtofl
  7784  1D86  0820               	movf	??___xxtofl,w
  7785  1D87  07A5               	addwf	___xxtofl@exp,f
  7786  1D88                     l4067:
  7787  1D88  3001               	movlw	1
  7788  1D89  07A6               	addwf	___xxtofl@arg,f
  7789  1D8A  3000               	movlw	0
  7790  1D8B  1803               	skipnc
  7791  1D8C  3001               	movlw	1
  7792  1D8D  07A7               	addwf	___xxtofl@arg+1,f
  7793  1D8E  3000               	movlw	0
  7794  1D8F  1803               	skipnc
  7795  1D90  3001               	movlw	1
  7796  1D91  07A8               	addwf	___xxtofl@arg+2,f
  7797  1D92  3000               	movlw	0
  7798  1D93  1803               	skipnc
  7799  1D94  3001               	movlw	1
  7800  1D95  07A9               	addwf	___xxtofl@arg+3,f
  7801  1D96                     l4069:
  7802  1D96  3001               	movlw	1
  7803  1D97                     u6785:
  7804  1D97  1003               	clrc
  7805  1D98  0CA9               	rrf	___xxtofl@arg+3,f
  7806  1D99  0CA8               	rrf	___xxtofl@arg+2,f
  7807  1D9A  0CA7               	rrf	___xxtofl@arg+1,f
  7808  1D9B  0CA6               	rrf	___xxtofl@arg,f
  7809  1D9C  3EFF               	addlw	-1
  7810  1D9D  1D03               	skipz
  7811  1D9E  2D97               	goto	u6785
  7812  1D9F                     l875:
  7813  1D9F  30FF               	movlw	255
  7814  1DA0  0529               	andwf	___xxtofl@arg+3,w
  7815  1DA1  1D03               	btfss	3,2
  7816  1DA2  2DA4               	goto	u6791
  7817  1DA3  2DA5               	goto	u6790
  7818  1DA4                     u6791:
  7819  1DA4  2D84               	goto	l4065
  7820  1DA5                     u6790:
  7821  1DA5  2DB1               	goto	l4073
  7822  1DA6                     l4071:
  7823  1DA6  3001               	movlw	1
  7824  1DA7  02A5               	subwf	___xxtofl@exp,f
  7825  1DA8  3001               	movlw	1
  7826  1DA9  00A0               	movwf	??___xxtofl
  7827  1DAA                     u6805:
  7828  1DAA  1003               	clrc
  7829  1DAB  0DA6               	rlf	___xxtofl@arg,f
  7830  1DAC  0DA7               	rlf	___xxtofl@arg+1,f
  7831  1DAD  0DA8               	rlf	___xxtofl@arg+2,f
  7832  1DAE  0DA9               	rlf	___xxtofl@arg+3,f
  7833  1DAF  0BA0               	decfsz	??___xxtofl,f
  7834  1DB0  2DAA               	goto	u6805
  7835  1DB1                     l4073:
  7836  1DB1  1BA8               	btfsc	___xxtofl@arg+2,7
  7837  1DB2  2DB4               	goto	u6811
  7838  1DB3  2DB5               	goto	u6810
  7839  1DB4                     u6811:
  7840  1DB4  2DBB               	goto	l882
  7841  1DB5                     u6810:
  7842  1DB5                     l4075:
  7843  1DB5  3002               	movlw	2
  7844  1DB6  0225               	subwf	___xxtofl@exp,w
  7845  1DB7  1803               	skipnc
  7846  1DB8  2DBA               	goto	u6821
  7847  1DB9  2DBB               	goto	u6820
  7848  1DBA                     u6821:
  7849  1DBA  2DA6               	goto	l4071
  7850  1DBB                     u6820:
  7851  1DBB                     l882:
  7852  1DBB  1825               	btfsc	___xxtofl@exp,0
  7853  1DBC  2DBE               	goto	u6831
  7854  1DBD  2DBF               	goto	u6830
  7855  1DBE                     u6831:
  7856  1DBE  2DC7               	goto	l883
  7857  1DBF                     u6830:
  7858  1DBF                     l4077:
  7859  1DBF  30FF               	movlw	255
  7860  1DC0  05A6               	andwf	___xxtofl@arg,f
  7861  1DC1  30FF               	movlw	255
  7862  1DC2  05A7               	andwf	___xxtofl@arg+1,f
  7863  1DC3  307F               	movlw	127
  7864  1DC4  05A8               	andwf	___xxtofl@arg+2,f
  7865  1DC5  30FF               	movlw	255
  7866  1DC6  05A9               	andwf	___xxtofl@arg+3,f
  7867  1DC7                     l883:
  7868  1DC7  1003               	clrc
  7869  1DC8  0CA5               	rrf	___xxtofl@exp,f
  7870  1DC9                     l4079:
  7871  1DC9  0825               	movf	___xxtofl@exp,w
  7872  1DCA  00A0               	movwf	??___xxtofl
  7873  1DCB  01A1               	clrf	??___xxtofl+1
  7874  1DCC  01A2               	clrf	??___xxtofl+2
  7875  1DCD  01A3               	clrf	??___xxtofl+3
  7876  1DCE  3018               	movlw	24
  7877  1DCF                     u6845:
  7878  1DCF  1003               	clrc
  7879  1DD0  0DA0               	rlf	??___xxtofl,f
  7880  1DD1  0DA1               	rlf	??___xxtofl+1,f
  7881  1DD2  0DA2               	rlf	??___xxtofl+2,f
  7882  1DD3  0DA3               	rlf	??___xxtofl+3,f
  7883  1DD4                     u6840:
  7884  1DD4  3EFF               	addlw	-1
  7885  1DD5  1D03               	skipz
  7886  1DD6  2DCF               	goto	u6845
  7887  1DD7  0820               	movf	??___xxtofl,w
  7888  1DD8  04A6               	iorwf	___xxtofl@arg,f
  7889  1DD9  0821               	movf	??___xxtofl+1,w
  7890  1DDA  04A7               	iorwf	___xxtofl@arg+1,f
  7891  1DDB  0822               	movf	??___xxtofl+2,w
  7892  1DDC  04A8               	iorwf	___xxtofl@arg+2,f
  7893  1DDD  0823               	movf	??___xxtofl+3,w
  7894  1DDE  04A9               	iorwf	___xxtofl@arg+3,f
  7895  1DDF                     l4081:
  7896  1DDF  0824               	movf	___xxtofl@sign,w
  7897  1DE0  1903               	btfsc	3,2
  7898  1DE1  2DE3               	goto	u6851
  7899  1DE2  2DE4               	goto	u6850
  7900  1DE3                     u6851:
  7901  1DE3  2DE9               	goto	l4087
  7902  1DE4                     u6850:
  7903  1DE4                     l4083:
  7904  1DE4  1FF6               	btfss	___xxtofl@val+3,7
  7905  1DE5  2DE7               	goto	u6861
  7906  1DE6  2DE8               	goto	u6860
  7907  1DE7                     u6861:
  7908  1DE7  2DE9               	goto	l4087
  7909  1DE8                     u6860:
  7910  1DE8                     l4085:
  7911  1DE8  17A9               	bsf	___xxtofl@arg+3,7
  7912  1DE9                     l4087:
  7913  1DE9  0829               	movf	___xxtofl@arg+3,w
  7914  1DEA  00F6               	movwf	?___xxtofl+3
  7915  1DEB  0828               	movf	___xxtofl@arg+2,w
  7916  1DEC  00F5               	movwf	?___xxtofl+2
  7917  1DED  0827               	movf	___xxtofl@arg+1,w
  7918  1DEE  00F4               	movwf	?___xxtofl+1
  7919  1DEF  0826               	movf	___xxtofl@arg,w
  7920  1DF0  00F3               	movwf	?___xxtofl
  7921  1DF1                     l871:
  7922  1DF1  0008               	return
  7923  1DF2                     __end_of___xxtofl:
  7924                           
  7925                           	psect	text25
  7926  093C                     __ptext25:	
  7927 ;; *************** function ___flmul *****************
  7928 ;; Defined at:
  7929 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  b               4   10[BANK0 ] unsigned char 
  7932 ;;  a               4   14[BANK0 ] unsigned char 
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  prod            4   30[BANK0 ] struct .
  7935 ;;  grs             4   24[BANK0 ] unsigned long 
  7936 ;;  temp            2   34[BANK0 ] struct .
  7937 ;;  bexp            1   29[BANK0 ] unsigned char 
  7938 ;;  aexp            1   28[BANK0 ] unsigned char 
  7939 ;;  sign            1   23[BANK0 ] unsigned char 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  4   10[BANK0 ] unsigned char 
  7942 ;; Registers used:
  7943 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7949 ;;      Params:         0       8       0       0       0
  7950 ;;      Locals:         0      13       0       0       0
  7951 ;;      Temps:          0       5       0       0       0
  7952 ;;      Totals:         0      26       0       0       0
  7953 ;;Total ram usage:       26 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:    2
  7956 ;; This function calls:
  7957 ;;		__Umul8_16
  7958 ;; This function is called by:
  7959 ;;		_conversor
  7960 ;;		_fround
  7961 ;;		_scale
  7962 ;;		_sprintf
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           
  7967                           ;psect for function ___flmul
  7968  093C                     ___flmul:
  7969  093C                     l2707:	
  7970                           ;incstack = 0
  7971                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7972                           
  7973  093C  1283               	bcf	3,5	;RP0=0, select bank0
  7974  093D  1303               	bcf	3,6	;RP1=0, select bank0
  7975  093E  082D               	movf	___flmul@b+3,w
  7976  093F  3980               	andlw	128
  7977  0940  00B2               	movwf	??___flmul
  7978  0941  0832               	movf	??___flmul,w
  7979  0942  00B7               	movwf	___flmul@sign
  7980  0943                     l2709:
  7981  0943  082D               	movf	___flmul@b+3,w
  7982  0944  00B2               	movwf	??___flmul
  7983  0945  0732               	addwf	??___flmul,w
  7984  0946  00B3               	movwf	??___flmul+1
  7985  0947  0833               	movf	??___flmul+1,w
  7986  0948  00BD               	movwf	___flmul@bexp
  7987  0949                     l2711:
  7988  0949  1FAC               	btfss	___flmul@b+2,7
  7989  094A  294C               	goto	u3801
  7990  094B  294D               	goto	u3800
  7991  094C                     u3801:
  7992  094C  294E               	goto	l2715
  7993  094D                     u3800:
  7994  094D                     l2713:
  7995  094D  143D               	bsf	___flmul@bexp,0
  7996  094E                     l2715:
  7997  094E  083D               	movf	___flmul@bexp,w
  7998  094F  1903               	btfsc	3,2
  7999  0950  2952               	goto	u3811
  8000  0951  2953               	goto	u3810
  8001  0952                     u3811:
  8002  0952  2962               	goto	l2723
  8003  0953                     u3810:
  8004  0953                     l2717:
  8005  0953  0A3D               	incf	___flmul@bexp,w
  8006  0954  1D03               	btfss	3,2
  8007  0955  2957               	goto	u3821
  8008  0956  2958               	goto	u3820
  8009  0957                     u3821:
  8010  0957  2960               	goto	l2721
  8011  0958                     u3820:
  8012  0958                     l2719:
  8013  0958  3000               	movlw	0
  8014  0959  00AD               	movwf	___flmul@b+3
  8015  095A  3000               	movlw	0
  8016  095B  00AC               	movwf	___flmul@b+2
  8017  095C  3000               	movlw	0
  8018  095D  00AB               	movwf	___flmul@b+1
  8019  095E  3000               	movlw	0
  8020  095F  00AA               	movwf	___flmul@b
  8021  0960                     l2721:
  8022  0960  17AC               	bsf	___flmul@b+2,7
  8023  0961  296A               	goto	l2725
  8024  0962                     l2723:
  8025  0962  3000               	movlw	0
  8026  0963  00AD               	movwf	___flmul@b+3
  8027  0964  3000               	movlw	0
  8028  0965  00AC               	movwf	___flmul@b+2
  8029  0966  3000               	movlw	0
  8030  0967  00AB               	movwf	___flmul@b+1
  8031  0968  3000               	movlw	0
  8032  0969  00AA               	movwf	___flmul@b
  8033  096A                     l2725:
  8034  096A  0831               	movf	___flmul@a+3,w
  8035  096B  3980               	andlw	128
  8036  096C  00B2               	movwf	??___flmul
  8037  096D  0832               	movf	??___flmul,w
  8038  096E  06B7               	xorwf	___flmul@sign,f
  8039  096F                     l2727:
  8040  096F  0831               	movf	___flmul@a+3,w
  8041  0970  00B2               	movwf	??___flmul
  8042  0971  0732               	addwf	??___flmul,w
  8043  0972  00B3               	movwf	??___flmul+1
  8044  0973  0833               	movf	??___flmul+1,w
  8045  0974  00BC               	movwf	___flmul@aexp
  8046  0975                     l2729:
  8047  0975  1FB0               	btfss	___flmul@a+2,7
  8048  0976  2978               	goto	u3831
  8049  0977  2979               	goto	u3830
  8050  0978                     u3831:
  8051  0978  297A               	goto	l2733
  8052  0979                     u3830:
  8053  0979                     l2731:
  8054  0979  143C               	bsf	___flmul@aexp,0
  8055  097A                     l2733:
  8056  097A  083C               	movf	___flmul@aexp,w
  8057  097B  1903               	btfsc	3,2
  8058  097C  297E               	goto	u3841
  8059  097D  297F               	goto	u3840
  8060  097E                     u3841:
  8061  097E  298E               	goto	l2741
  8062  097F                     u3840:
  8063  097F                     l2735:
  8064  097F  0A3C               	incf	___flmul@aexp,w
  8065  0980  1D03               	btfss	3,2
  8066  0981  2983               	goto	u3851
  8067  0982  2984               	goto	u3850
  8068  0983                     u3851:
  8069  0983  298C               	goto	l2739
  8070  0984                     u3850:
  8071  0984                     l2737:
  8072  0984  3000               	movlw	0
  8073  0985  00B1               	movwf	___flmul@a+3
  8074  0986  3000               	movlw	0
  8075  0987  00B0               	movwf	___flmul@a+2
  8076  0988  3000               	movlw	0
  8077  0989  00AF               	movwf	___flmul@a+1
  8078  098A  3000               	movlw	0
  8079  098B  00AE               	movwf	___flmul@a
  8080  098C                     l2739:
  8081  098C  17B0               	bsf	___flmul@a+2,7
  8082  098D  2996               	goto	l2743
  8083  098E                     l2741:
  8084  098E  3000               	movlw	0
  8085  098F  00B1               	movwf	___flmul@a+3
  8086  0990  3000               	movlw	0
  8087  0991  00B0               	movwf	___flmul@a+2
  8088  0992  3000               	movlw	0
  8089  0993  00AF               	movwf	___flmul@a+1
  8090  0994  3000               	movlw	0
  8091  0995  00AE               	movwf	___flmul@a
  8092  0996                     l2743:
  8093  0996  083C               	movf	___flmul@aexp,w
  8094  0997  1903               	btfsc	3,2
  8095  0998  299A               	goto	u3861
  8096  0999  299B               	goto	u3860
  8097  099A                     u3861:
  8098  099A  29A0               	goto	l2747
  8099  099B                     u3860:
  8100  099B                     l2745:
  8101  099B  083D               	movf	___flmul@bexp,w
  8102  099C  1D03               	btfss	3,2
  8103  099D  299F               	goto	u3871
  8104  099E  29A0               	goto	u3870
  8105  099F                     u3871:
  8106  099F  29A9               	goto	l2751
  8107  09A0                     u3870:
  8108  09A0                     l2747:
  8109  09A0  3000               	movlw	0
  8110  09A1  00AD               	movwf	?___flmul+3
  8111  09A2  3000               	movlw	0
  8112  09A3  00AC               	movwf	?___flmul+2
  8113  09A4  3000               	movlw	0
  8114  09A5  00AB               	movwf	?___flmul+1
  8115  09A6  3000               	movlw	0
  8116  09A7  00AA               	movwf	?___flmul
  8117  09A8  2C9C               	goto	l825
  8118  09A9                     l2751:
  8119  09A9  082A               	movf	___flmul@b,w
  8120  09AA  00B2               	movwf	??___flmul
  8121  09AB  0832               	movf	??___flmul,w
  8122  09AC  00F3               	movwf	__Umul8_16@multiplicand
  8123  09AD  0830               	movf	___flmul@a+2,w
  8124  09AE  160A  158A  20E9  120A  158A  	fcall	__Umul8_16
  8125  09B3  0874               	movf	?__Umul8_16+1,w
  8126  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  8127  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  8128  09B6  00C3               	movwf	___flmul@temp+1
  8129  09B7  0873               	movf	?__Umul8_16,w
  8130  09B8  00C2               	movwf	___flmul@temp
  8131  09B9                     l2753:
  8132  09B9  0842               	movf	___flmul@temp,w
  8133  09BA  00B2               	movwf	??___flmul
  8134  09BB  01B3               	clrf	??___flmul+1
  8135  09BC  01B4               	clrf	??___flmul+2
  8136  09BD  01B5               	clrf	??___flmul+3
  8137  09BE  0835               	movf	??___flmul+3,w
  8138  09BF  00BB               	movwf	___flmul@grs+3
  8139  09C0  0834               	movf	??___flmul+2,w
  8140  09C1  00BA               	movwf	___flmul@grs+2
  8141  09C2  0833               	movf	??___flmul+1,w
  8142  09C3  00B9               	movwf	___flmul@grs+1
  8143  09C4  0832               	movf	??___flmul,w
  8144  09C5  00B8               	movwf	___flmul@grs
  8145  09C6                     l2755:
  8146  09C6  0843               	movf	___flmul@temp+1,w
  8147  09C7  00B2               	movwf	??___flmul
  8148  09C8  01B3               	clrf	??___flmul+1
  8149  09C9  01B4               	clrf	??___flmul+2
  8150  09CA  01B5               	clrf	??___flmul+3
  8151  09CB  0835               	movf	??___flmul+3,w
  8152  09CC  00C1               	movwf	___flmul@prod+3
  8153  09CD  0834               	movf	??___flmul+2,w
  8154  09CE  00C0               	movwf	___flmul@prod+2
  8155  09CF  0833               	movf	??___flmul+1,w
  8156  09D0  00BF               	movwf	___flmul@prod+1
  8157  09D1  0832               	movf	??___flmul,w
  8158  09D2  00BE               	movwf	___flmul@prod
  8159  09D3  082B               	movf	___flmul@b+1,w
  8160  09D4  00B2               	movwf	??___flmul
  8161  09D5  0832               	movf	??___flmul,w
  8162  09D6  00F3               	movwf	__Umul8_16@multiplicand
  8163  09D7  082F               	movf	___flmul@a+1,w
  8164  09D8  160A  158A  20E9  120A  158A  	fcall	__Umul8_16
  8165  09DD  0874               	movf	?__Umul8_16+1,w
  8166  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  8167  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  8168  09E0  00C3               	movwf	___flmul@temp+1
  8169  09E1  0873               	movf	?__Umul8_16,w
  8170  09E2  00C2               	movwf	___flmul@temp
  8171  09E3                     l2757:
  8172  09E3  0842               	movf	___flmul@temp,w
  8173  09E4  00B2               	movwf	??___flmul
  8174  09E5  01B3               	clrf	??___flmul+1
  8175  09E6  01B4               	clrf	??___flmul+2
  8176  09E7  01B5               	clrf	??___flmul+3
  8177  09E8  0832               	movf	??___flmul,w
  8178  09E9  07B8               	addwf	___flmul@grs,f
  8179  09EA  0833               	movf	??___flmul+1,w
  8180  09EB  1103               	clrz
  8181  09EC  1803               	skipnc
  8182  09ED  3E01               	addlw	1
  8183  09EE  1903               	skipnz
  8184  09EF  29F1               	goto	u3881
  8185  09F0  07B9               	addwf	___flmul@grs+1,f
  8186  09F1                     u3881:
  8187  09F1  0834               	movf	??___flmul+2,w
  8188  09F2  1103               	clrz
  8189  09F3  1803               	skipnc
  8190  09F4  3E01               	addlw	1
  8191  09F5  1903               	skipnz
  8192  09F6  29F8               	goto	u3882
  8193  09F7  07BA               	addwf	___flmul@grs+2,f
  8194  09F8                     u3882:
  8195  09F8  0835               	movf	??___flmul+3,w
  8196  09F9  1103               	clrz
  8197  09FA  1803               	skipnc
  8198  09FB  3E01               	addlw	1
  8199  09FC  1903               	skipnz
  8200  09FD  29FF               	goto	u3883
  8201  09FE  07BB               	addwf	___flmul@grs+3,f
  8202  09FF                     u3883:
  8203  09FF                     l2759:
  8204  09FF  0843               	movf	___flmul@temp+1,w
  8205  0A00  00B2               	movwf	??___flmul
  8206  0A01  01B3               	clrf	??___flmul+1
  8207  0A02  01B4               	clrf	??___flmul+2
  8208  0A03  01B5               	clrf	??___flmul+3
  8209  0A04  0832               	movf	??___flmul,w
  8210  0A05  07BE               	addwf	___flmul@prod,f
  8211  0A06  0833               	movf	??___flmul+1,w
  8212  0A07  1103               	clrz
  8213  0A08  1803               	skipnc
  8214  0A09  3E01               	addlw	1
  8215  0A0A  1903               	skipnz
  8216  0A0B  2A0D               	goto	u3891
  8217  0A0C  07BF               	addwf	___flmul@prod+1,f
  8218  0A0D                     u3891:
  8219  0A0D  0834               	movf	??___flmul+2,w
  8220  0A0E  1103               	clrz
  8221  0A0F  1803               	skipnc
  8222  0A10  3E01               	addlw	1
  8223  0A11  1903               	skipnz
  8224  0A12  2A14               	goto	u3892
  8225  0A13  07C0               	addwf	___flmul@prod+2,f
  8226  0A14                     u3892:
  8227  0A14  0835               	movf	??___flmul+3,w
  8228  0A15  1103               	clrz
  8229  0A16  1803               	skipnc
  8230  0A17  3E01               	addlw	1
  8231  0A18  1903               	skipnz
  8232  0A19  2A1B               	goto	u3893
  8233  0A1A  07C1               	addwf	___flmul@prod+3,f
  8234  0A1B                     u3893:
  8235  0A1B  082C               	movf	___flmul@b+2,w
  8236  0A1C  00B2               	movwf	??___flmul
  8237  0A1D  0832               	movf	??___flmul,w
  8238  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  8239  0A1F  082E               	movf	___flmul@a,w
  8240  0A20  160A  158A  20E9  120A  158A  	fcall	__Umul8_16
  8241  0A25  0874               	movf	?__Umul8_16+1,w
  8242  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  8243  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  8244  0A28  00C3               	movwf	___flmul@temp+1
  8245  0A29  0873               	movf	?__Umul8_16,w
  8246  0A2A  00C2               	movwf	___flmul@temp
  8247  0A2B                     l2761:
  8248  0A2B  0842               	movf	___flmul@temp,w
  8249  0A2C  00B2               	movwf	??___flmul
  8250  0A2D  01B3               	clrf	??___flmul+1
  8251  0A2E  01B4               	clrf	??___flmul+2
  8252  0A2F  01B5               	clrf	??___flmul+3
  8253  0A30  0832               	movf	??___flmul,w
  8254  0A31  07B8               	addwf	___flmul@grs,f
  8255  0A32  0833               	movf	??___flmul+1,w
  8256  0A33  1103               	clrz
  8257  0A34  1803               	skipnc
  8258  0A35  3E01               	addlw	1
  8259  0A36  1903               	skipnz
  8260  0A37  2A39               	goto	u3901
  8261  0A38  07B9               	addwf	___flmul@grs+1,f
  8262  0A39                     u3901:
  8263  0A39  0834               	movf	??___flmul+2,w
  8264  0A3A  1103               	clrz
  8265  0A3B  1803               	skipnc
  8266  0A3C  3E01               	addlw	1
  8267  0A3D  1903               	skipnz
  8268  0A3E  2A40               	goto	u3902
  8269  0A3F  07BA               	addwf	___flmul@grs+2,f
  8270  0A40                     u3902:
  8271  0A40  0835               	movf	??___flmul+3,w
  8272  0A41  1103               	clrz
  8273  0A42  1803               	skipnc
  8274  0A43  3E01               	addlw	1
  8275  0A44  1903               	skipnz
  8276  0A45  2A47               	goto	u3903
  8277  0A46  07BB               	addwf	___flmul@grs+3,f
  8278  0A47                     u3903:
  8279  0A47                     l2763:
  8280  0A47  0843               	movf	___flmul@temp+1,w
  8281  0A48  00B2               	movwf	??___flmul
  8282  0A49  01B3               	clrf	??___flmul+1
  8283  0A4A  01B4               	clrf	??___flmul+2
  8284  0A4B  01B5               	clrf	??___flmul+3
  8285  0A4C  0832               	movf	??___flmul,w
  8286  0A4D  07BE               	addwf	___flmul@prod,f
  8287  0A4E  0833               	movf	??___flmul+1,w
  8288  0A4F  1103               	clrz
  8289  0A50  1803               	skipnc
  8290  0A51  3E01               	addlw	1
  8291  0A52  1903               	skipnz
  8292  0A53  2A55               	goto	u3911
  8293  0A54  07BF               	addwf	___flmul@prod+1,f
  8294  0A55                     u3911:
  8295  0A55  0834               	movf	??___flmul+2,w
  8296  0A56  1103               	clrz
  8297  0A57  1803               	skipnc
  8298  0A58  3E01               	addlw	1
  8299  0A59  1903               	skipnz
  8300  0A5A  2A5C               	goto	u3912
  8301  0A5B  07C0               	addwf	___flmul@prod+2,f
  8302  0A5C                     u3912:
  8303  0A5C  0835               	movf	??___flmul+3,w
  8304  0A5D  1103               	clrz
  8305  0A5E  1803               	skipnc
  8306  0A5F  3E01               	addlw	1
  8307  0A60  1903               	skipnz
  8308  0A61  2A63               	goto	u3913
  8309  0A62  07C1               	addwf	___flmul@prod+3,f
  8310  0A63                     u3913:
  8311  0A63                     l2765:
  8312  0A63  3008               	movlw	8
  8313  0A64  00B2               	movwf	??___flmul
  8314  0A65                     u3925:
  8315  0A65  1003               	clrc
  8316  0A66  0DB8               	rlf	___flmul@grs,f
  8317  0A67  0DB9               	rlf	___flmul@grs+1,f
  8318  0A68  0DBA               	rlf	___flmul@grs+2,f
  8319  0A69  0DBB               	rlf	___flmul@grs+3,f
  8320  0A6A  0BB2               	decfsz	??___flmul,f
  8321  0A6B  2A65               	goto	u3925
  8322  0A6C                     l2767:
  8323  0A6C  082B               	movf	___flmul@b+1,w
  8324  0A6D  00B2               	movwf	??___flmul
  8325  0A6E  0832               	movf	??___flmul,w
  8326  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  8327  0A70  082E               	movf	___flmul@a,w
  8328  0A71  160A  158A  20E9  120A  158A  	fcall	__Umul8_16
  8329  0A76  0874               	movf	?__Umul8_16+1,w
  8330  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  8331  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  8332  0A79  00C3               	movwf	___flmul@temp+1
  8333  0A7A  0873               	movf	?__Umul8_16,w
  8334  0A7B  00C2               	movwf	___flmul@temp
  8335  0A7C                     l2769:
  8336  0A7C  0842               	movf	___flmul@temp,w
  8337  0A7D  00B2               	movwf	??___flmul
  8338  0A7E  0843               	movf	___flmul@temp+1,w
  8339  0A7F  00B3               	movwf	??___flmul+1
  8340  0A80  01B4               	clrf	??___flmul+2
  8341  0A81  01B5               	clrf	??___flmul+3
  8342  0A82  0832               	movf	??___flmul,w
  8343  0A83  07B8               	addwf	___flmul@grs,f
  8344  0A84  0833               	movf	??___flmul+1,w
  8345  0A85  1103               	clrz
  8346  0A86  1803               	skipnc
  8347  0A87  3E01               	addlw	1
  8348  0A88  1903               	skipnz
  8349  0A89  2A8B               	goto	u3931
  8350  0A8A  07B9               	addwf	___flmul@grs+1,f
  8351  0A8B                     u3931:
  8352  0A8B  0834               	movf	??___flmul+2,w
  8353  0A8C  1103               	clrz
  8354  0A8D  1803               	skipnc
  8355  0A8E  3E01               	addlw	1
  8356  0A8F  1903               	skipnz
  8357  0A90  2A92               	goto	u3932
  8358  0A91  07BA               	addwf	___flmul@grs+2,f
  8359  0A92                     u3932:
  8360  0A92  0835               	movf	??___flmul+3,w
  8361  0A93  1103               	clrz
  8362  0A94  1803               	skipnc
  8363  0A95  3E01               	addlw	1
  8364  0A96  1903               	skipnz
  8365  0A97  2A99               	goto	u3933
  8366  0A98  07BB               	addwf	___flmul@grs+3,f
  8367  0A99                     u3933:
  8368  0A99                     l2771:
  8369  0A99  082A               	movf	___flmul@b,w
  8370  0A9A  00B2               	movwf	??___flmul
  8371  0A9B  0832               	movf	??___flmul,w
  8372  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  8373  0A9D  082F               	movf	___flmul@a+1,w
  8374  0A9E  160A  158A  20E9  120A  158A  	fcall	__Umul8_16
  8375  0AA3  0874               	movf	?__Umul8_16+1,w
  8376  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  8377  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  8378  0AA6  00C3               	movwf	___flmul@temp+1
  8379  0AA7  0873               	movf	?__Umul8_16,w
  8380  0AA8  00C2               	movwf	___flmul@temp
  8381  0AA9                     l2773:
  8382  0AA9  0842               	movf	___flmul@temp,w
  8383  0AAA  00B2               	movwf	??___flmul
  8384  0AAB  0843               	movf	___flmul@temp+1,w
  8385  0AAC  00B3               	movwf	??___flmul+1
  8386  0AAD  01B4               	clrf	??___flmul+2
  8387  0AAE  01B5               	clrf	??___flmul+3
  8388  0AAF  0832               	movf	??___flmul,w
  8389  0AB0  07B8               	addwf	___flmul@grs,f
  8390  0AB1  0833               	movf	??___flmul+1,w
  8391  0AB2  1103               	clrz
  8392  0AB3  1803               	skipnc
  8393  0AB4  3E01               	addlw	1
  8394  0AB5  1903               	skipnz
  8395  0AB6  2AB8               	goto	u3941
  8396  0AB7  07B9               	addwf	___flmul@grs+1,f
  8397  0AB8                     u3941:
  8398  0AB8  0834               	movf	??___flmul+2,w
  8399  0AB9  1103               	clrz
  8400  0ABA  1803               	skipnc
  8401  0ABB  3E01               	addlw	1
  8402  0ABC  1903               	skipnz
  8403  0ABD  2ABF               	goto	u3942
  8404  0ABE  07BA               	addwf	___flmul@grs+2,f
  8405  0ABF                     u3942:
  8406  0ABF  0835               	movf	??___flmul+3,w
  8407  0AC0  1103               	clrz
  8408  0AC1  1803               	skipnc
  8409  0AC2  3E01               	addlw	1
  8410  0AC3  1903               	skipnz
  8411  0AC4  2AC6               	goto	u3943
  8412  0AC5  07BB               	addwf	___flmul@grs+3,f
  8413  0AC6                     u3943:
  8414  0AC6                     l2775:
  8415  0AC6  3008               	movlw	8
  8416  0AC7  00B2               	movwf	??___flmul
  8417  0AC8                     u3955:
  8418  0AC8  1003               	clrc
  8419  0AC9  0DB8               	rlf	___flmul@grs,f
  8420  0ACA  0DB9               	rlf	___flmul@grs+1,f
  8421  0ACB  0DBA               	rlf	___flmul@grs+2,f
  8422  0ACC  0DBB               	rlf	___flmul@grs+3,f
  8423  0ACD  0BB2               	decfsz	??___flmul,f
  8424  0ACE  2AC8               	goto	u3955
  8425  0ACF  082A               	movf	___flmul@b,w
  8426  0AD0  00B2               	movwf	??___flmul
  8427  0AD1  0832               	movf	??___flmul,w
  8428  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  8429  0AD3  082E               	movf	___flmul@a,w
  8430  0AD4  160A  158A  20E9  120A  158A  	fcall	__Umul8_16
  8431  0AD9  0874               	movf	?__Umul8_16+1,w
  8432  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  8433  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  8434  0ADC  00C3               	movwf	___flmul@temp+1
  8435  0ADD  0873               	movf	?__Umul8_16,w
  8436  0ADE  00C2               	movwf	___flmul@temp
  8437  0ADF                     l2777:
  8438  0ADF  0842               	movf	___flmul@temp,w
  8439  0AE0  00B2               	movwf	??___flmul
  8440  0AE1  0843               	movf	___flmul@temp+1,w
  8441  0AE2  00B3               	movwf	??___flmul+1
  8442  0AE3  01B4               	clrf	??___flmul+2
  8443  0AE4  01B5               	clrf	??___flmul+3
  8444  0AE5  0832               	movf	??___flmul,w
  8445  0AE6  07B8               	addwf	___flmul@grs,f
  8446  0AE7  0833               	movf	??___flmul+1,w
  8447  0AE8  1103               	clrz
  8448  0AE9  1803               	skipnc
  8449  0AEA  3E01               	addlw	1
  8450  0AEB  1903               	skipnz
  8451  0AEC  2AEE               	goto	u3961
  8452  0AED  07B9               	addwf	___flmul@grs+1,f
  8453  0AEE                     u3961:
  8454  0AEE  0834               	movf	??___flmul+2,w
  8455  0AEF  1103               	clrz
  8456  0AF0  1803               	skipnc
  8457  0AF1  3E01               	addlw	1
  8458  0AF2  1903               	skipnz
  8459  0AF3  2AF5               	goto	u3962
  8460  0AF4  07BA               	addwf	___flmul@grs+2,f
  8461  0AF5                     u3962:
  8462  0AF5  0835               	movf	??___flmul+3,w
  8463  0AF6  1103               	clrz
  8464  0AF7  1803               	skipnc
  8465  0AF8  3E01               	addlw	1
  8466  0AF9  1903               	skipnz
  8467  0AFA  2AFC               	goto	u3963
  8468  0AFB  07BB               	addwf	___flmul@grs+3,f
  8469  0AFC                     u3963:
  8470  0AFC                     l2779:
  8471  0AFC  082B               	movf	___flmul@b+1,w
  8472  0AFD  00B2               	movwf	??___flmul
  8473  0AFE  0832               	movf	??___flmul,w
  8474  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  8475  0B00  0830               	movf	___flmul@a+2,w
  8476  0B01  160A  158A  20E9  120A  158A  	fcall	__Umul8_16
  8477  0B06  0874               	movf	?__Umul8_16+1,w
  8478  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  8479  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  8480  0B09  00C3               	movwf	___flmul@temp+1
  8481  0B0A  0873               	movf	?__Umul8_16,w
  8482  0B0B  00C2               	movwf	___flmul@temp
  8483  0B0C  0842               	movf	___flmul@temp,w
  8484  0B0D  00B2               	movwf	??___flmul
  8485  0B0E  0843               	movf	___flmul@temp+1,w
  8486  0B0F  00B3               	movwf	??___flmul+1
  8487  0B10  01B4               	clrf	??___flmul+2
  8488  0B11  01B5               	clrf	??___flmul+3
  8489  0B12  0832               	movf	??___flmul,w
  8490  0B13  07BE               	addwf	___flmul@prod,f
  8491  0B14  0833               	movf	??___flmul+1,w
  8492  0B15  1103               	clrz
  8493  0B16  1803               	skipnc
  8494  0B17  3E01               	addlw	1
  8495  0B18  1903               	skipnz
  8496  0B19  2B1B               	goto	u3971
  8497  0B1A  07BF               	addwf	___flmul@prod+1,f
  8498  0B1B                     u3971:
  8499  0B1B  0834               	movf	??___flmul+2,w
  8500  0B1C  1103               	clrz
  8501  0B1D  1803               	skipnc
  8502  0B1E  3E01               	addlw	1
  8503  0B1F  1903               	skipnz
  8504  0B20  2B22               	goto	u3972
  8505  0B21  07C0               	addwf	___flmul@prod+2,f
  8506  0B22                     u3972:
  8507  0B22  0835               	movf	??___flmul+3,w
  8508  0B23  1103               	clrz
  8509  0B24  1803               	skipnc
  8510  0B25  3E01               	addlw	1
  8511  0B26  1903               	skipnz
  8512  0B27  2B29               	goto	u3973
  8513  0B28  07C1               	addwf	___flmul@prod+3,f
  8514  0B29                     u3973:
  8515  0B29                     l2781:
  8516  0B29  082C               	movf	___flmul@b+2,w
  8517  0B2A  00B2               	movwf	??___flmul
  8518  0B2B  0832               	movf	??___flmul,w
  8519  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  8520  0B2D  082F               	movf	___flmul@a+1,w
  8521  0B2E  160A  158A  20E9  120A  158A  	fcall	__Umul8_16
  8522  0B33  0874               	movf	?__Umul8_16+1,w
  8523  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  8524  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  8525  0B36  00C3               	movwf	___flmul@temp+1
  8526  0B37  0873               	movf	?__Umul8_16,w
  8527  0B38  00C2               	movwf	___flmul@temp
  8528  0B39                     l2783:
  8529  0B39  0842               	movf	___flmul@temp,w
  8530  0B3A  00B2               	movwf	??___flmul
  8531  0B3B  0843               	movf	___flmul@temp+1,w
  8532  0B3C  00B3               	movwf	??___flmul+1
  8533  0B3D  01B4               	clrf	??___flmul+2
  8534  0B3E  01B5               	clrf	??___flmul+3
  8535  0B3F  0832               	movf	??___flmul,w
  8536  0B40  07BE               	addwf	___flmul@prod,f
  8537  0B41  0833               	movf	??___flmul+1,w
  8538  0B42  1103               	clrz
  8539  0B43  1803               	skipnc
  8540  0B44  3E01               	addlw	1
  8541  0B45  1903               	skipnz
  8542  0B46  2B48               	goto	u3981
  8543  0B47  07BF               	addwf	___flmul@prod+1,f
  8544  0B48                     u3981:
  8545  0B48  0834               	movf	??___flmul+2,w
  8546  0B49  1103               	clrz
  8547  0B4A  1803               	skipnc
  8548  0B4B  3E01               	addlw	1
  8549  0B4C  1903               	skipnz
  8550  0B4D  2B4F               	goto	u3982
  8551  0B4E  07C0               	addwf	___flmul@prod+2,f
  8552  0B4F                     u3982:
  8553  0B4F  0835               	movf	??___flmul+3,w
  8554  0B50  1103               	clrz
  8555  0B51  1803               	skipnc
  8556  0B52  3E01               	addlw	1
  8557  0B53  1903               	skipnz
  8558  0B54  2B56               	goto	u3983
  8559  0B55  07C1               	addwf	___flmul@prod+3,f
  8560  0B56                     u3983:
  8561  0B56  082C               	movf	___flmul@b+2,w
  8562  0B57  00B2               	movwf	??___flmul
  8563  0B58  0832               	movf	??___flmul,w
  8564  0B59  00F3               	movwf	__Umul8_16@multiplicand
  8565  0B5A  0830               	movf	___flmul@a+2,w
  8566  0B5B  160A  158A  20E9  120A  158A  	fcall	__Umul8_16
  8567  0B60  0874               	movf	?__Umul8_16+1,w
  8568  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  8569  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  8570  0B63  00C3               	movwf	___flmul@temp+1
  8571  0B64  0873               	movf	?__Umul8_16,w
  8572  0B65  00C2               	movwf	___flmul@temp
  8573  0B66                     l2785:
  8574  0B66  0842               	movf	___flmul@temp,w
  8575  0B67  00B2               	movwf	??___flmul
  8576  0B68  0843               	movf	___flmul@temp+1,w
  8577  0B69  00B3               	movwf	??___flmul+1
  8578  0B6A  01B4               	clrf	??___flmul+2
  8579  0B6B  01B5               	clrf	??___flmul+3
  8580  0B6C  3008               	movlw	8
  8581  0B6D                     u3995:
  8582  0B6D  1003               	clrc
  8583  0B6E  0DB2               	rlf	??___flmul,f
  8584  0B6F  0DB3               	rlf	??___flmul+1,f
  8585  0B70  0DB4               	rlf	??___flmul+2,f
  8586  0B71  0DB5               	rlf	??___flmul+3,f
  8587  0B72                     u3990:
  8588  0B72  3EFF               	addlw	-1
  8589  0B73  1D03               	skipz
  8590  0B74  2B6D               	goto	u3995
  8591  0B75  0832               	movf	??___flmul,w
  8592  0B76  07BE               	addwf	___flmul@prod,f
  8593  0B77  0833               	movf	??___flmul+1,w
  8594  0B78  1103               	clrz
  8595  0B79  1803               	skipnc
  8596  0B7A  3E01               	addlw	1
  8597  0B7B  1903               	skipnz
  8598  0B7C  2B7E               	goto	u4001
  8599  0B7D  07BF               	addwf	___flmul@prod+1,f
  8600  0B7E                     u4001:
  8601  0B7E  0834               	movf	??___flmul+2,w
  8602  0B7F  1103               	clrz
  8603  0B80  1803               	skipnc
  8604  0B81  3E01               	addlw	1
  8605  0B82  1903               	skipnz
  8606  0B83  2B85               	goto	u4002
  8607  0B84  07C0               	addwf	___flmul@prod+2,f
  8608  0B85                     u4002:
  8609  0B85  0835               	movf	??___flmul+3,w
  8610  0B86  1103               	clrz
  8611  0B87  1803               	skipnc
  8612  0B88  3E01               	addlw	1
  8613  0B89  1903               	skipnz
  8614  0B8A  2B8C               	goto	u4003
  8615  0B8B  07C1               	addwf	___flmul@prod+3,f
  8616  0B8C                     u4003:
  8617  0B8C                     l2787:
  8618  0B8C  0838               	movf	___flmul@grs,w
  8619  0B8D  00B2               	movwf	??___flmul
  8620  0B8E  0839               	movf	___flmul@grs+1,w
  8621  0B8F  00B3               	movwf	??___flmul+1
  8622  0B90  083A               	movf	___flmul@grs+2,w
  8623  0B91  00B4               	movwf	??___flmul+2
  8624  0B92  083B               	movf	___flmul@grs+3,w
  8625  0B93  00B5               	movwf	??___flmul+3
  8626  0B94  3018               	movlw	24
  8627  0B95                     u4015:
  8628  0B95  1003               	clrc
  8629  0B96  0CB5               	rrf	??___flmul+3,f
  8630  0B97  0CB4               	rrf	??___flmul+2,f
  8631  0B98  0CB3               	rrf	??___flmul+1,f
  8632  0B99  0CB2               	rrf	??___flmul,f
  8633  0B9A                     u4010:
  8634  0B9A  3EFF               	addlw	-1
  8635  0B9B  1D03               	skipz
  8636  0B9C  2B95               	goto	u4015
  8637  0B9D  0832               	movf	??___flmul,w
  8638  0B9E  07BE               	addwf	___flmul@prod,f
  8639  0B9F  0833               	movf	??___flmul+1,w
  8640  0BA0  1103               	clrz
  8641  0BA1  1803               	skipnc
  8642  0BA2  3E01               	addlw	1
  8643  0BA3  1903               	skipnz
  8644  0BA4  2BA6               	goto	u4021
  8645  0BA5  07BF               	addwf	___flmul@prod+1,f
  8646  0BA6                     u4021:
  8647  0BA6  0834               	movf	??___flmul+2,w
  8648  0BA7  1103               	clrz
  8649  0BA8  1803               	skipnc
  8650  0BA9  3E01               	addlw	1
  8651  0BAA  1903               	skipnz
  8652  0BAB  2BAD               	goto	u4022
  8653  0BAC  07C0               	addwf	___flmul@prod+2,f
  8654  0BAD                     u4022:
  8655  0BAD  0835               	movf	??___flmul+3,w
  8656  0BAE  1103               	clrz
  8657  0BAF  1803               	skipnc
  8658  0BB0  3E01               	addlw	1
  8659  0BB1  1903               	skipnz
  8660  0BB2  2BB4               	goto	u4023
  8661  0BB3  07C1               	addwf	___flmul@prod+3,f
  8662  0BB4                     u4023:
  8663  0BB4                     l2789:
  8664  0BB4  3008               	movlw	8
  8665  0BB5  00B2               	movwf	??___flmul
  8666  0BB6                     u4035:
  8667  0BB6  1003               	clrc
  8668  0BB7  0DB8               	rlf	___flmul@grs,f
  8669  0BB8  0DB9               	rlf	___flmul@grs+1,f
  8670  0BB9  0DBA               	rlf	___flmul@grs+2,f
  8671  0BBA  0DBB               	rlf	___flmul@grs+3,f
  8672  0BBB  0BB2               	decfsz	??___flmul,f
  8673  0BBC  2BB6               	goto	u4035
  8674  0BBD                     l2791:
  8675  0BBD  083D               	movf	___flmul@bexp,w
  8676  0BBE  073C               	addwf	___flmul@aexp,w
  8677  0BBF  00B2               	movwf	??___flmul
  8678  0BC0  01B3               	clrf	??___flmul+1
  8679  0BC1  0DB3               	rlf	??___flmul+1,f
  8680  0BC2  0832               	movf	??___flmul,w
  8681  0BC3  3E82               	addlw	130
  8682  0BC4  00C2               	movwf	___flmul@temp
  8683  0BC5  0833               	movf	??___flmul+1,w
  8684  0BC6  1803               	skipnc
  8685  0BC7  3E01               	addlw	1
  8686  0BC8  3EFF               	addlw	255
  8687  0BC9  00C3               	movwf	___flmul@temp+1
  8688  0BCA  2BE8               	goto	l2803
  8689  0BCB                     l2793:
  8690  0BCB  3001               	movlw	1
  8691  0BCC  00B2               	movwf	??___flmul
  8692  0BCD                     u4045:
  8693  0BCD  1003               	clrc
  8694  0BCE  0DBE               	rlf	___flmul@prod,f
  8695  0BCF  0DBF               	rlf	___flmul@prod+1,f
  8696  0BD0  0DC0               	rlf	___flmul@prod+2,f
  8697  0BD1  0DC1               	rlf	___flmul@prod+3,f
  8698  0BD2  0BB2               	decfsz	??___flmul,f
  8699  0BD3  2BCD               	goto	u4045
  8700  0BD4                     l2795:
  8701  0BD4  1FBB               	btfss	___flmul@grs+3,7
  8702  0BD5  2BD7               	goto	u4051
  8703  0BD6  2BD8               	goto	u4050
  8704  0BD7                     u4051:
  8705  0BD7  2BD9               	goto	l2799
  8706  0BD8                     u4050:
  8707  0BD8                     l2797:
  8708  0BD8  143E               	bsf	___flmul@prod,0
  8709  0BD9                     l2799:
  8710  0BD9  3001               	movlw	1
  8711  0BDA  00B2               	movwf	??___flmul
  8712  0BDB                     u4065:
  8713  0BDB  1003               	clrc
  8714  0BDC  0DB8               	rlf	___flmul@grs,f
  8715  0BDD  0DB9               	rlf	___flmul@grs+1,f
  8716  0BDE  0DBA               	rlf	___flmul@grs+2,f
  8717  0BDF  0DBB               	rlf	___flmul@grs+3,f
  8718  0BE0  0BB2               	decfsz	??___flmul,f
  8719  0BE1  2BDB               	goto	u4065
  8720  0BE2                     l2801:
  8721  0BE2  30FF               	movlw	255
  8722  0BE3  07C2               	addwf	___flmul@temp,f
  8723  0BE4  1803               	skipnc
  8724  0BE5  0AC3               	incf	___flmul@temp+1,f
  8725  0BE6  30FF               	movlw	255
  8726  0BE7  07C3               	addwf	___flmul@temp+1,f
  8727  0BE8                     l2803:
  8728  0BE8  1FC0               	btfss	___flmul@prod+2,7
  8729  0BE9  2BEB               	goto	u4071
  8730  0BEA  2BEC               	goto	u4070
  8731  0BEB                     u4071:
  8732  0BEB  2BCB               	goto	l2793
  8733  0BEC                     u4070:
  8734  0BEC                     l2805:
  8735  0BEC  01BC               	clrf	___flmul@aexp
  8736  0BED                     l2807:
  8737  0BED  1FBB               	btfss	___flmul@grs+3,7
  8738  0BEE  2BF0               	goto	u4081
  8739  0BEF  2BF1               	goto	u4080
  8740  0BF0                     u4081:
  8741  0BF0  2C0D               	goto	l2815
  8742  0BF1                     u4080:
  8743  0BF1                     l2809:
  8744  0BF1  30FF               	movlw	255
  8745  0BF2  0538               	andwf	___flmul@grs,w
  8746  0BF3  00B2               	movwf	??___flmul
  8747  0BF4  30FF               	movlw	255
  8748  0BF5  0539               	andwf	___flmul@grs+1,w
  8749  0BF6  00B3               	movwf	??___flmul+1
  8750  0BF7  30FF               	movlw	255
  8751  0BF8  053A               	andwf	___flmul@grs+2,w
  8752  0BF9  00B4               	movwf	??___flmul+2
  8753  0BFA  307F               	movlw	127
  8754  0BFB  053B               	andwf	___flmul@grs+3,w
  8755  0BFC  00B5               	movwf	??___flmul+3
  8756  0BFD  0835               	movf	??___flmul+3,w
  8757  0BFE  0434               	iorwf	??___flmul+2,w
  8758  0BFF  0433               	iorwf	??___flmul+1,w
  8759  0C00  0432               	iorwf	??___flmul,w
  8760  0C01  1903               	skipnz
  8761  0C02  2C04               	goto	u4091
  8762  0C03  2C05               	goto	u4090
  8763  0C04                     u4091:
  8764  0C04  2C08               	goto	l831
  8765  0C05                     u4090:
  8766  0C05                     l2811:
  8767  0C05  01BC               	clrf	___flmul@aexp
  8768  0C06  0ABC               	incf	___flmul@aexp,f
  8769  0C07  2C0D               	goto	l2815
  8770  0C08                     l831:
  8771  0C08  1C3E               	btfss	___flmul@prod,0
  8772  0C09  2C0B               	goto	u4101
  8773  0C0A  2C0C               	goto	u4100
  8774  0C0B                     u4101:
  8775  0C0B  2C0D               	goto	l2815
  8776  0C0C                     u4100:
  8777  0C0C  2C05               	goto	l2811
  8778  0C0D                     l2815:
  8779  0C0D  083C               	movf	___flmul@aexp,w
  8780  0C0E  1903               	btfsc	3,2
  8781  0C0F  2C11               	goto	u4111
  8782  0C10  2C12               	goto	u4110
  8783  0C11                     u4111:
  8784  0C11  2C43               	goto	l2825
  8785  0C12                     u4110:
  8786  0C12                     l2817:
  8787  0C12  3001               	movlw	1
  8788  0C13  07BE               	addwf	___flmul@prod,f
  8789  0C14  3000               	movlw	0
  8790  0C15  1803               	skipnc
  8791  0C16  3001               	movlw	1
  8792  0C17  07BF               	addwf	___flmul@prod+1,f
  8793  0C18  3000               	movlw	0
  8794  0C19  1803               	skipnc
  8795  0C1A  3001               	movlw	1
  8796  0C1B  07C0               	addwf	___flmul@prod+2,f
  8797  0C1C  3000               	movlw	0
  8798  0C1D  1803               	skipnc
  8799  0C1E  3001               	movlw	1
  8800  0C1F  07C1               	addwf	___flmul@prod+3,f
  8801  0C20                     l2819:
  8802  0C20  1C41               	btfss	___flmul@prod+3,0
  8803  0C21  2C23               	goto	u4121
  8804  0C22  2C24               	goto	u4120
  8805  0C23                     u4121:
  8806  0C23  2C43               	goto	l2825
  8807  0C24                     u4120:
  8808  0C24                     l2821:
  8809  0C24  083E               	movf	___flmul@prod,w
  8810  0C25  00B2               	movwf	??___flmul
  8811  0C26  083F               	movf	___flmul@prod+1,w
  8812  0C27  00B3               	movwf	??___flmul+1
  8813  0C28  0840               	movf	___flmul@prod+2,w
  8814  0C29  00B4               	movwf	??___flmul+2
  8815  0C2A  0841               	movf	___flmul@prod+3,w
  8816  0C2B  00B5               	movwf	??___flmul+3
  8817  0C2C  3001               	movlw	1
  8818  0C2D  00B6               	movwf	??___flmul+4
  8819  0C2E                     u4135:
  8820  0C2E  0D35               	rlf	??___flmul+3,w
  8821  0C2F  0CB5               	rrf	??___flmul+3,f
  8822  0C30  0CB4               	rrf	??___flmul+2,f
  8823  0C31  0CB3               	rrf	??___flmul+1,f
  8824  0C32  0CB2               	rrf	??___flmul,f
  8825  0C33                     u4130:
  8826  0C33  0BB6               	decfsz	??___flmul+4,f
  8827  0C34  2C2E               	goto	u4135
  8828  0C35  0835               	movf	??___flmul+3,w
  8829  0C36  00C1               	movwf	___flmul@prod+3
  8830  0C37  0834               	movf	??___flmul+2,w
  8831  0C38  00C0               	movwf	___flmul@prod+2
  8832  0C39  0833               	movf	??___flmul+1,w
  8833  0C3A  00BF               	movwf	___flmul@prod+1
  8834  0C3B  0832               	movf	??___flmul,w
  8835  0C3C  00BE               	movwf	___flmul@prod
  8836  0C3D                     l2823:
  8837  0C3D  3001               	movlw	1
  8838  0C3E  07C2               	addwf	___flmul@temp,f
  8839  0C3F  1803               	skipnc
  8840  0C40  0AC3               	incf	___flmul@temp+1,f
  8841  0C41  3000               	movlw	0
  8842  0C42  07C3               	addwf	___flmul@temp+1,f
  8843  0C43                     l2825:
  8844  0C43  0843               	movf	___flmul@temp+1,w
  8845  0C44  3A80               	xorlw	128
  8846  0C45  00FF               	movwf	btemp+1
  8847  0C46  3080               	movlw	128
  8848  0C47  027F               	subwf	btemp+1,w
  8849  0C48  1D03               	skipz
  8850  0C49  2C4C               	goto	u4145
  8851  0C4A  30FF               	movlw	255
  8852  0C4B  0242               	subwf	___flmul@temp,w
  8853  0C4C                     u4145:
  8854  0C4C  1C03               	skipc
  8855  0C4D  2C4F               	goto	u4141
  8856  0C4E  2C50               	goto	u4140
  8857  0C4F                     u4141:
  8858  0C4F  2C5B               	goto	l2829
  8859  0C50                     u4140:
  8860  0C50                     l2827:
  8861  0C50  307F               	movlw	127
  8862  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  8863  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  8864  0C53  00C1               	movwf	___flmul@prod+3
  8865  0C54  3080               	movlw	128
  8866  0C55  00C0               	movwf	___flmul@prod+2
  8867  0C56  3000               	movlw	0
  8868  0C57  00BF               	movwf	___flmul@prod+1
  8869  0C58  3000               	movlw	0
  8870  0C59  00BE               	movwf	___flmul@prod
  8871  0C5A  2C90               	goto	l837
  8872  0C5B                     l2829:
  8873  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  8874  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  8875  0C5D  0843               	movf	___flmul@temp+1,w
  8876  0C5E  3A80               	xorlw	128
  8877  0C5F  00FF               	movwf	btemp+1
  8878  0C60  3080               	movlw	128
  8879  0C61  027F               	subwf	btemp+1,w
  8880  0C62  1D03               	skipz
  8881  0C63  2C66               	goto	u4155
  8882  0C64  3001               	movlw	1
  8883  0C65  0242               	subwf	___flmul@temp,w
  8884  0C66                     u4155:
  8885  0C66  1803               	skipnc
  8886  0C67  2C69               	goto	u4151
  8887  0C68  2C6A               	goto	u4150
  8888  0C69                     u4151:
  8889  0C69  2C76               	goto	l2835
  8890  0C6A                     u4150:
  8891  0C6A                     l2831:
  8892  0C6A  3000               	movlw	0
  8893  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8894  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8895  0C6D  00C1               	movwf	___flmul@prod+3
  8896  0C6E  3000               	movlw	0
  8897  0C6F  00C0               	movwf	___flmul@prod+2
  8898  0C70  3000               	movlw	0
  8899  0C71  00BF               	movwf	___flmul@prod+1
  8900  0C72  3000               	movlw	0
  8901  0C73  00BE               	movwf	___flmul@prod
  8902  0C74                     l2833:
  8903  0C74  01B7               	clrf	___flmul@sign
  8904  0C75  2C90               	goto	l837
  8905  0C76                     l2835:
  8906  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  8907  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  8908  0C78  0842               	movf	___flmul@temp,w
  8909  0C79  00B2               	movwf	??___flmul
  8910  0C7A  0832               	movf	??___flmul,w
  8911  0C7B  00BD               	movwf	___flmul@bexp
  8912  0C7C  30FF               	movlw	255
  8913  0C7D  05BE               	andwf	___flmul@prod,f
  8914  0C7E  30FF               	movlw	255
  8915  0C7F  05BF               	andwf	___flmul@prod+1,f
  8916  0C80  307F               	movlw	127
  8917  0C81  05C0               	andwf	___flmul@prod+2,f
  8918  0C82  3000               	movlw	0
  8919  0C83  05C1               	andwf	___flmul@prod+3,f
  8920  0C84                     l2837:
  8921  0C84  1C3D               	btfss	___flmul@bexp,0
  8922  0C85  2C87               	goto	u4161
  8923  0C86  2C88               	goto	u4160
  8924  0C87                     u4161:
  8925  0C87  2C89               	goto	l2841
  8926  0C88                     u4160:
  8927  0C88                     l2839:
  8928  0C88  17C0               	bsf	___flmul@prod+2,7
  8929  0C89                     l2841:
  8930  0C89  083D               	movf	___flmul@bexp,w
  8931  0C8A  00B2               	movwf	??___flmul
  8932  0C8B  1003               	clrc
  8933  0C8C  0C32               	rrf	??___flmul,w
  8934  0C8D  00B3               	movwf	??___flmul+1
  8935  0C8E  0833               	movf	??___flmul+1,w
  8936  0C8F  00C1               	movwf	___flmul@prod+3
  8937  0C90                     l837:
  8938  0C90  0837               	movf	___flmul@sign,w
  8939  0C91  00B2               	movwf	??___flmul
  8940  0C92  0832               	movf	??___flmul,w
  8941  0C93  04C1               	iorwf	___flmul@prod+3,f
  8942  0C94                     l2843:
  8943  0C94  0841               	movf	___flmul@prod+3,w
  8944  0C95  00AD               	movwf	?___flmul+3
  8945  0C96  0840               	movf	___flmul@prod+2,w
  8946  0C97  00AC               	movwf	?___flmul+2
  8947  0C98  083F               	movf	___flmul@prod+1,w
  8948  0C99  00AB               	movwf	?___flmul+1
  8949  0C9A  083E               	movf	___flmul@prod,w
  8950  0C9B  00AA               	movwf	?___flmul
  8951  0C9C                     l825:
  8952  0C9C  0008               	return
  8953  0C9D                     __end_of___flmul:
  8954                           
  8955                           	psect	text26
  8956  18E9                     __ptext26:	
  8957 ;; *************** function __Umul8_16 *****************
  8958 ;; Defined at:
  8959 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  multiplier      1    wreg     unsigned char 
  8962 ;;  multiplicand    1    3[COMMON] unsigned char 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8965 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8966 ;;  product         2    0[BANK0 ] unsigned int 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  2    3[COMMON] unsigned int 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8976 ;;      Params:         2       0       0       0       0
  8977 ;;      Locals:         0       5       0       0       0
  8978 ;;      Temps:          2       0       0       0       0
  8979 ;;      Totals:         4       5       0       0       0
  8980 ;;Total ram usage:        9 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    1
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		___flmul
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function __Umul8_16
  8992  18E9                     __Umul8_16:
  8993                           
  8994                           ;incstack = 0
  8995                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8996                           ;__Umul8_16@multiplier stored from wreg
  8997  18E9  1283               	bcf	3,5	;RP0=0, select bank0
  8998  18EA  1303               	bcf	3,6	;RP1=0, select bank0
  8999  18EB  00A4               	movwf	__Umul8_16@multiplier
  9000  18EC                     l2367:
  9001  18EC  01A0               	clrf	__Umul8_16@product
  9002  18ED  01A1               	clrf	__Umul8_16@product+1
  9003  18EE                     l2369:
  9004  18EE  0873               	movf	__Umul8_16@multiplicand,w
  9005  18EF  00F5               	movwf	??__Umul8_16
  9006  18F0  01F6               	clrf	??__Umul8_16+1
  9007  18F1  0875               	movf	??__Umul8_16,w
  9008  18F2  00A2               	movwf	__Umul8_16@word_mpld
  9009  18F3  0876               	movf	??__Umul8_16+1,w
  9010  18F4  00A3               	movwf	__Umul8_16@word_mpld+1
  9011  18F5                     l2371:
  9012  18F5  1C24               	btfss	__Umul8_16@multiplier,0
  9013  18F6  28F8               	goto	u2991
  9014  18F7  28F9               	goto	u2990
  9015  18F8                     u2991:
  9016  18F8  28FF               	goto	l844
  9017  18F9                     u2990:
  9018  18F9                     l2373:
  9019  18F9  0822               	movf	__Umul8_16@word_mpld,w
  9020  18FA  07A0               	addwf	__Umul8_16@product,f
  9021  18FB  1803               	skipnc
  9022  18FC  0AA1               	incf	__Umul8_16@product+1,f
  9023  18FD  0823               	movf	__Umul8_16@word_mpld+1,w
  9024  18FE  07A1               	addwf	__Umul8_16@product+1,f
  9025  18FF                     l844:
  9026  18FF  3001               	movlw	1
  9027  1900                     u3005:
  9028  1900  1003               	clrc
  9029  1901  0DA2               	rlf	__Umul8_16@word_mpld,f
  9030  1902  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  9031  1903  3EFF               	addlw	-1
  9032  1904  1D03               	skipz
  9033  1905  2900               	goto	u3005
  9034  1906  1003               	clrc
  9035  1907  0CA4               	rrf	__Umul8_16@multiplier,f
  9036  1908                     l2375:
  9037  1908  0824               	movf	__Umul8_16@multiplier,w
  9038  1909  1D03               	btfss	3,2
  9039  190A  290C               	goto	u3011
  9040  190B  290D               	goto	u3010
  9041  190C                     u3011:
  9042  190C  28F5               	goto	l2371
  9043  190D                     u3010:
  9044  190D                     l2377:
  9045  190D  0821               	movf	__Umul8_16@product+1,w
  9046  190E  00F4               	movwf	?__Umul8_16+1
  9047  190F  0820               	movf	__Umul8_16@product,w
  9048  1910  00F3               	movwf	?__Umul8_16
  9049  1911                     l846:
  9050  1911  0008               	return
  9051  1912                     __end_of__Umul8_16:
  9052                           
  9053                           	psect	text27
  9054  1A0B                     __ptext27:	
  9055 ;; *************** function _Lcd_Write_String *****************
  9056 ;; Defined at:
  9057 ;;		line 67 in file "LCD.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  a               2    6[COMMON] PTR unsigned char 
  9060 ;;		 -> STR_5(4), s(20), STR_1(17), 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;  i               2    8[COMMON] int 
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9072 ;;      Params:         2       0       0       0       0
  9073 ;;      Locals:         2       0       0       0       0
  9074 ;;      Temps:          0       3       0       0       0
  9075 ;;      Totals:         4       3       0       0       0
  9076 ;;Total ram usage:        7 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    3
  9079 ;; This function calls:
  9080 ;;		_Lcd_Write_Char
  9081 ;; This function is called by:
  9082 ;;		_main
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           
  9087                           ;psect for function _Lcd_Write_String
  9088  1A0B                     _Lcd_Write_String:
  9089  1A0B                     l4115:	
  9090                           ;incstack = 0
  9091                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9092                           
  9093                           
  9094                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  9095  1A0B  01F8               	clrf	Lcd_Write_String@i
  9096  1A0C  01F9               	clrf	Lcd_Write_String@i+1
  9097  1A0D  2A30               	goto	l4121
  9098  1A0E                     l4117:
  9099                           
  9100                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  9101  1A0E  0878               	movf	Lcd_Write_String@i,w
  9102  1A0F  0776               	addwf	Lcd_Write_String@a,w
  9103  1A10  00A1               	movwf	??_Lcd_Write_String+1
  9104  1A11  0877               	movf	Lcd_Write_String@a+1,w
  9105  1A12  00A0               	movwf	??_Lcd_Write_String
  9106  1A13  1803               	skipnc
  9107  1A14  0AA0               	incf	??_Lcd_Write_String,f
  9108  1A15  1FF8               	btfss	Lcd_Write_String@i,7
  9109  1A16  2A18               	goto	u6890
  9110  1A17  03A0               	decf	??_Lcd_Write_String,f
  9111  1A18                     u6890:
  9112  1A18  1283               	bcf	3,5	;RP0=0, select bank0
  9113  1A19  1303               	bcf	3,6	;RP1=0, select bank0
  9114  1A1A  0820               	movf	??_Lcd_Write_String,w
  9115  1A1B  00A2               	movwf	??_Lcd_Write_String+2
  9116  1A1C  0822               	movf	??_Lcd_Write_String+2,w
  9117  1A1D  00FF               	movwf	btemp+1
  9118  1A1E  0821               	movf	??_Lcd_Write_String+1,w
  9119  1A1F  0084               	movwf	4
  9120  1A20  120A  158A  2000  160A  158A  	fcall	stringtab
  9121  1A25  160A  158A  2083  160A  158A  	fcall	_Lcd_Write_Char
  9122  1A2A                     l4119:
  9123  1A2A  3001               	movlw	1
  9124  1A2B  07F8               	addwf	Lcd_Write_String@i,f
  9125  1A2C  1803               	skipnc
  9126  1A2D  0AF9               	incf	Lcd_Write_String@i+1,f
  9127  1A2E  3000               	movlw	0
  9128  1A2F  07F9               	addwf	Lcd_Write_String@i+1,f
  9129  1A30                     l4121:
  9130  1A30  0878               	movf	Lcd_Write_String@i,w
  9131  1A31  0776               	addwf	Lcd_Write_String@a,w
  9132  1A32  1283               	bcf	3,5	;RP0=0, select bank0
  9133  1A33  1303               	bcf	3,6	;RP1=0, select bank0
  9134  1A34  00A1               	movwf	??_Lcd_Write_String+1
  9135  1A35  0877               	movf	Lcd_Write_String@a+1,w
  9136  1A36  00A0               	movwf	??_Lcd_Write_String
  9137  1A37  1803               	skipnc
  9138  1A38  0AA0               	incf	??_Lcd_Write_String,f
  9139  1A39  1FF8               	btfss	Lcd_Write_String@i,7
  9140  1A3A  2A3C               	goto	u6900
  9141  1A3B  03A0               	decf	??_Lcd_Write_String,f
  9142  1A3C                     u6900:
  9143  1A3C  1283               	bcf	3,5	;RP0=0, select bank0
  9144  1A3D  1303               	bcf	3,6	;RP1=0, select bank0
  9145  1A3E  0820               	movf	??_Lcd_Write_String,w
  9146  1A3F  00A2               	movwf	??_Lcd_Write_String+2
  9147  1A40  0822               	movf	??_Lcd_Write_String+2,w
  9148  1A41  00FF               	movwf	btemp+1
  9149  1A42  0821               	movf	??_Lcd_Write_String+1,w
  9150  1A43  0084               	movwf	4
  9151  1A44  120A  158A  2000  160A  158A  	fcall	stringtab
  9152  1A49  3A00               	xorlw	0
  9153  1A4A  1D03               	skipz
  9154  1A4B  2A4D               	goto	u6911
  9155  1A4C  2A4E               	goto	u6910
  9156  1A4D                     u6911:
  9157  1A4D  2A0E               	goto	l4117
  9158  1A4E                     u6910:
  9159  1A4E                     l157:
  9160  1A4E  0008               	return
  9161  1A4F                     __end_of_Lcd_Write_String:
  9162                           
  9163                           	psect	text28
  9164  1883                     __ptext28:	
  9165 ;; *************** function _Lcd_Write_Char *****************
  9166 ;; Defined at:
  9167 ;;		line 58 in file "LCD.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  a               1    wreg     unsigned char 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  a               1    5[COMMON] unsigned char 
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      void 
  9174 ;; Registers used:
  9175 ;;		wreg, status,2, status,0, pclath, cstack
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9181 ;;      Params:         0       0       0       0       0
  9182 ;;      Locals:         1       0       0       0       0
  9183 ;;      Temps:          1       0       0       0       0
  9184 ;;      Totals:         2       0       0       0       0
  9185 ;;Total ram usage:        2 bytes
  9186 ;; Hardware stack levels used:    1
  9187 ;; Hardware stack levels required when called:    2
  9188 ;; This function calls:
  9189 ;;		_Lcd_Port
  9190 ;; This function is called by:
  9191 ;;		_Lcd_Write_String
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           
  9196                           ;psect for function _Lcd_Write_Char
  9197  1883                     _Lcd_Write_Char:
  9198                           
  9199                           ;incstack = 0
  9200                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9201                           ;Lcd_Write_Char@a stored from wreg
  9202  1883  00F5               	movwf	Lcd_Write_Char@a
  9203  1884                     l3815:
  9204                           
  9205                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  9206  1884  1283               	bcf	3,5	;RP0=0, select bank0
  9207  1885  1303               	bcf	3,6	;RP1=0, select bank0
  9208  1886  1409               	bsf	9,0	;volatile
  9209  1887                     l3817:
  9210                           
  9211                           ;LCD.c: 60:     Lcd_Port(a);
  9212  1887  0875               	movf	Lcd_Write_Char@a,w
  9213  1888  160A  158A  2021  160A  158A  	fcall	_Lcd_Port
  9214  188D                     l3819:
  9215                           
  9216                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
  9217  188D  1283               	bcf	3,5	;RP0=0, select bank0
  9218  188E  1303               	bcf	3,6	;RP1=0, select bank0
  9219  188F  1489               	bsf	9,1	;volatile
  9220  1890                     l3821:
  9221                           
  9222                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9223  1890  301A               	movlw	26
  9224  1891  00F4               	movwf	??_Lcd_Write_Char
  9225  1892                     u7497:
  9226  1892  0BF4               	decfsz	??_Lcd_Write_Char,f
  9227  1893  2892               	goto	u7497
  9228  1894  0000               	nop
  9229  1895                     l3823:
  9230                           
  9231                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
  9232  1895  1283               	bcf	3,5	;RP0=0, select bank0
  9233  1896  1303               	bcf	3,6	;RP1=0, select bank0
  9234  1897  1089               	bcf	9,1	;volatile
  9235  1898                     l3825:
  9236                           
  9237                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9238  1898  301A               	movlw	26
  9239  1899  00F4               	movwf	??_Lcd_Write_Char
  9240  189A                     u7507:
  9241  189A  0BF4               	decfsz	??_Lcd_Write_Char,f
  9242  189B  289A               	goto	u7507
  9243  189C  0000               	nop
  9244  189D                     l151:
  9245  189D  0008               	return
  9246  189E                     __end_of_Lcd_Write_Char:
  9247                           
  9248                           	psect	text29
  9249  18C3                     __ptext29:	
  9250 ;; *************** function _Lcd_Set_Cursor *****************
  9251 ;; Defined at:
  9252 ;;		line 33 in file "LCD.c"
  9253 ;; Parameters:    Size  Location     Type
  9254 ;;  a               1    wreg     unsigned char 
  9255 ;;  b               1    7[COMMON] unsigned char 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  a               1    0[BANK0 ] unsigned char 
  9258 ;;  temp            1    1[BANK0 ] unsigned char 
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  1    wreg      void 
  9261 ;; Registers used:
  9262 ;;		wreg, status,2, status,0, pclath, cstack
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9268 ;;      Params:         1       0       0       0       0
  9269 ;;      Locals:         0       2       0       0       0
  9270 ;;      Temps:          1       0       0       0       0
  9271 ;;      Totals:         2       2       0       0       0
  9272 ;;Total ram usage:        4 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; Hardware stack levels required when called:    3
  9275 ;; This function calls:
  9276 ;;		_Lcd_Cmd
  9277 ;; This function is called by:
  9278 ;;		_main
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           
  9283                           ;psect for function _Lcd_Set_Cursor
  9284  18C3                     _Lcd_Set_Cursor:
  9285                           
  9286                           ;incstack = 0
  9287                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9288                           ;Lcd_Set_Cursor@a stored from wreg
  9289  18C3  1283               	bcf	3,5	;RP0=0, select bank0
  9290  18C4  1303               	bcf	3,6	;RP1=0, select bank0
  9291  18C5  00A0               	movwf	Lcd_Set_Cursor@a
  9292  18C6                     l4103:
  9293                           
  9294                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
  9295  18C6  0320               	decf	Lcd_Set_Cursor@a,w
  9296  18C7  1D03               	btfss	3,2
  9297  18C8  28CA               	goto	u6871
  9298  18C9  28CB               	goto	u6870
  9299  18CA                     u6871:
  9300  18CA  28D7               	goto	l4109
  9301  18CB                     u6870:
  9302  18CB                     l4105:
  9303                           
  9304                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  9305  18CB  0877               	movf	Lcd_Set_Cursor@b,w
  9306  18CC  3E7F               	addlw	127
  9307  18CD  00F8               	movwf	??_Lcd_Set_Cursor
  9308  18CE  0878               	movf	??_Lcd_Set_Cursor,w
  9309  18CF  00A1               	movwf	Lcd_Set_Cursor@temp
  9310  18D0                     l4107:
  9311                           
  9312                           ;LCD.c: 37:         Lcd_Cmd(temp);
  9313  18D0  0821               	movf	Lcd_Set_Cursor@temp,w
  9314  18D1  160A  158A  2069  160A  158A  	fcall	_Lcd_Cmd
  9315                           
  9316                           ;LCD.c: 38:     } else if (a == 2) {
  9317  18D6  28E8               	goto	l145
  9318  18D7                     l4109:
  9319  18D7  3002               	movlw	2
  9320  18D8  0620               	xorwf	Lcd_Set_Cursor@a,w
  9321  18D9  1D03               	btfss	3,2
  9322  18DA  28DC               	goto	u6881
  9323  18DB  28DD               	goto	u6880
  9324  18DC                     u6881:
  9325  18DC  28E8               	goto	l145
  9326  18DD                     u6880:
  9327  18DD                     l4111:
  9328                           
  9329                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  9330  18DD  0877               	movf	Lcd_Set_Cursor@b,w
  9331  18DE  3EBF               	addlw	191
  9332  18DF  00F8               	movwf	??_Lcd_Set_Cursor
  9333  18E0  0878               	movf	??_Lcd_Set_Cursor,w
  9334  18E1  00A1               	movwf	Lcd_Set_Cursor@temp
  9335  18E2                     l4113:
  9336                           
  9337                           ;LCD.c: 40:         Lcd_Cmd(temp);
  9338  18E2  0821               	movf	Lcd_Set_Cursor@temp,w
  9339  18E3  160A  158A  2069  160A  158A  	fcall	_Lcd_Cmd
  9340  18E8                     l145:
  9341  18E8  0008               	return
  9342  18E9                     __end_of_Lcd_Set_Cursor:
  9343                           
  9344                           	psect	text30
  9345  1988                     __ptext30:	
  9346 ;; *************** function _Lcd_Init *****************
  9347 ;; Defined at:
  9348 ;;		line 44 in file "LCD.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;		None
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg, status,2, status,0, pclath, cstack
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9362 ;;      Params:         0       0       0       0       0
  9363 ;;      Locals:         0       0       0       0       0
  9364 ;;      Temps:          2       0       0       0       0
  9365 ;;      Totals:         2       0       0       0       0
  9366 ;;Total ram usage:        2 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:    3
  9369 ;; This function calls:
  9370 ;;		_Lcd_Cmd
  9371 ;;		_Lcd_Port
  9372 ;; This function is called by:
  9373 ;;		_main
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           
  9378                           ;psect for function _Lcd_Init
  9379  1988                     _Lcd_Init:
  9380  1988                     l4091:	
  9381                           ;incstack = 0
  9382                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9383                           
  9384                           
  9385                           ;LCD.c: 45:     Lcd_Port(0x00);
  9386  1988  3000               	movlw	0
  9387  1989  160A  158A  2021  160A  158A  	fcall	_Lcd_Port
  9388  198E                     l4093:
  9389                           
  9390                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9391  198E  3034               	movlw	52
  9392  198F  00F8               	movwf	??_Lcd_Init+1
  9393  1990  30F1               	movlw	241
  9394  1991  00F7               	movwf	??_Lcd_Init
  9395  1992                     u7517:
  9396  1992  0BF7               	decfsz	??_Lcd_Init,f
  9397  1993  2992               	goto	u7517
  9398  1994  0BF8               	decfsz	??_Lcd_Init+1,f
  9399  1995  2992               	goto	u7517
  9400  1996  2997               	nop2
  9401  1997                     l4095:
  9402                           
  9403                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
  9404  1997  303F               	movlw	63
  9405  1998  160A  158A  2069  160A  158A  	fcall	_Lcd_Cmd
  9406                           
  9407                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9408  199D  301A               	movlw	26
  9409  199E  00F8               	movwf	??_Lcd_Init+1
  9410  199F  30F8               	movlw	248
  9411  19A0  00F7               	movwf	??_Lcd_Init
  9412  19A1                     u7527:
  9413  19A1  0BF7               	decfsz	??_Lcd_Init,f
  9414  19A2  29A1               	goto	u7527
  9415  19A3  0BF8               	decfsz	??_Lcd_Init+1,f
  9416  19A4  29A1               	goto	u7527
  9417  19A5  0000               	nop
  9418  19A6                     l4097:
  9419                           
  9420                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  9421  19A6  303F               	movlw	63
  9422  19A7  160A  158A  2069  160A  158A  	fcall	_Lcd_Cmd
  9423  19AC                     l4099:
  9424                           
  9425                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9426  19AC  3085               	movlw	133
  9427  19AD  00F7               	movwf	??_Lcd_Init
  9428  19AE                     u7537:
  9429  19AE  0BF7               	decfsz	??_Lcd_Init,f
  9430  19AF  29AE               	goto	u7537
  9431                           
  9432                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  9433  19B0  303F               	movlw	63
  9434  19B1  160A  158A  2069  160A  158A  	fcall	_Lcd_Cmd
  9435                           
  9436                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  9437  19B6  3038               	movlw	56
  9438  19B7  160A  158A  2069  160A  158A  	fcall	_Lcd_Cmd
  9439                           
  9440                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  9441  19BC  300C               	movlw	12
  9442  19BD  160A  158A  2069  160A  158A  	fcall	_Lcd_Cmd
  9443                           
  9444                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  9445  19C2  3006               	movlw	6
  9446  19C3  160A  158A  2069  160A  158A  	fcall	_Lcd_Cmd
  9447  19C8                     l148:
  9448  19C8  0008               	return
  9449  19C9                     __end_of_Lcd_Init:
  9450                           
  9451                           	psect	text31
  9452  183A                     __ptext31:	
  9453 ;; *************** function _Lcd_Clear *****************
  9454 ;; Defined at:
  9455 ;;		line 28 in file "LCD.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;		None
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;		None
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      void 
  9462 ;; Registers used:
  9463 ;;		wreg, status,2, status,0, pclath, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9469 ;;      Params:         0       0       0       0       0
  9470 ;;      Locals:         0       0       0       0       0
  9471 ;;      Temps:          0       0       0       0       0
  9472 ;;      Totals:         0       0       0       0       0
  9473 ;;Total ram usage:        0 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:    3
  9476 ;; This function calls:
  9477 ;;		_Lcd_Cmd
  9478 ;; This function is called by:
  9479 ;;		_main
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           
  9484                           ;psect for function _Lcd_Clear
  9485  183A                     _Lcd_Clear:
  9486  183A                     l4101:	
  9487                           ;incstack = 0
  9488                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9489                           
  9490                           
  9491                           ;LCD.c: 29:     Lcd_Cmd(0);
  9492  183A  3000               	movlw	0
  9493  183B  160A  158A  2069  160A  158A  	fcall	_Lcd_Cmd
  9494                           
  9495                           ;LCD.c: 30:     Lcd_Cmd(1);
  9496  1840  3001               	movlw	1
  9497  1841  160A  158A  2069  160A  158A  	fcall	_Lcd_Cmd
  9498  1846                     l139:
  9499  1846  0008               	return
  9500  1847                     __end_of_Lcd_Clear:
  9501                           
  9502                           	psect	text32
  9503  1869                     __ptext32:	
  9504 ;; *************** function _Lcd_Cmd *****************
  9505 ;; Defined at:
  9506 ;;		line 20 in file "LCD.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;  a               1    wreg     unsigned char 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  a               1    6[COMMON] unsigned char 
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1    wreg      void 
  9513 ;; Registers used:
  9514 ;;		wreg, status,2, status,0, pclath, cstack
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9520 ;;      Params:         0       0       0       0       0
  9521 ;;      Locals:         1       0       0       0       0
  9522 ;;      Temps:          2       0       0       0       0
  9523 ;;      Totals:         3       0       0       0       0
  9524 ;;Total ram usage:        3 bytes
  9525 ;; Hardware stack levels used:    1
  9526 ;; Hardware stack levels required when called:    2
  9527 ;; This function calls:
  9528 ;;		_Lcd_Port
  9529 ;; This function is called by:
  9530 ;;		_Lcd_Clear
  9531 ;;		_Lcd_Set_Cursor
  9532 ;;		_Lcd_Init
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           
  9537                           ;psect for function _Lcd_Cmd
  9538  1869                     _Lcd_Cmd:
  9539                           
  9540                           ;incstack = 0
  9541                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9542                           ;Lcd_Cmd@a stored from wreg
  9543  1869  00F6               	movwf	Lcd_Cmd@a
  9544  186A                     l3805:
  9545                           
  9546                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
  9547  186A  1283               	bcf	3,5	;RP0=0, select bank0
  9548  186B  1303               	bcf	3,6	;RP1=0, select bank0
  9549  186C  1009               	bcf	9,0	;volatile
  9550  186D                     l3807:
  9551                           
  9552                           ;LCD.c: 22:     Lcd_Port(a);
  9553  186D  0876               	movf	Lcd_Cmd@a,w
  9554  186E  160A  158A  2021  160A  158A  	fcall	_Lcd_Port
  9555  1873                     l3809:
  9556                           
  9557                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
  9558  1873  1283               	bcf	3,5	;RP0=0, select bank0
  9559  1874  1303               	bcf	3,6	;RP1=0, select bank0
  9560  1875  1489               	bsf	9,1	;volatile
  9561  1876                     l3811:
  9562                           
  9563                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9564  1876  300B               	movlw	11
  9565  1877  00F5               	movwf	??_Lcd_Cmd+1
  9566  1878  3062               	movlw	98
  9567  1879  00F4               	movwf	??_Lcd_Cmd
  9568  187A                     u7547:
  9569  187A  0BF4               	decfsz	??_Lcd_Cmd,f
  9570  187B  287A               	goto	u7547
  9571  187C  0BF5               	decfsz	??_Lcd_Cmd+1,f
  9572  187D  287A               	goto	u7547
  9573  187E  0000               	nop
  9574  187F                     l3813:
  9575                           
  9576                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
  9577  187F  1283               	bcf	3,5	;RP0=0, select bank0
  9578  1880  1303               	bcf	3,6	;RP1=0, select bank0
  9579  1881  1089               	bcf	9,1	;volatile
  9580  1882                     l136:
  9581  1882  0008               	return
  9582  1883                     __end_of_Lcd_Cmd:
  9583                           
  9584                           	psect	text33
  9585  1821                     __ptext33:	
  9586 ;; *************** function _Lcd_Port *****************
  9587 ;; Defined at:
  9588 ;;		line 16 in file "LCD.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  a               1    wreg     unsigned char 
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;  a               1    3[COMMON] unsigned char 
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  1    wreg      void 
  9595 ;; Registers used:
  9596 ;;		wreg
  9597 ;; Tracked objects:
  9598 ;;		On entry : 0/0
  9599 ;;		On exit  : 0/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9602 ;;      Params:         0       0       0       0       0
  9603 ;;      Locals:         1       0       0       0       0
  9604 ;;      Temps:          0       0       0       0       0
  9605 ;;      Totals:         1       0       0       0       0
  9606 ;;Total ram usage:        1 bytes
  9607 ;; Hardware stack levels used:    1
  9608 ;; Hardware stack levels required when called:    1
  9609 ;; This function calls:
  9610 ;;		Nothing
  9611 ;; This function is called by:
  9612 ;;		_Lcd_Cmd
  9613 ;;		_Lcd_Init
  9614 ;;		_Lcd_Write_Char
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           
  9619                           ;psect for function _Lcd_Port
  9620  1821                     _Lcd_Port:
  9621                           
  9622                           ;incstack = 0
  9623                           ; Regs used in _Lcd_Port: [wreg]
  9624                           ;Lcd_Port@a stored from wreg
  9625  1821  00F3               	movwf	Lcd_Port@a
  9626  1822                     l3759:
  9627                           
  9628                           ;LCD.c: 17:     PORTD = a;
  9629  1822  0873               	movf	Lcd_Port@a,w
  9630  1823  1283               	bcf	3,5	;RP0=0, select bank0
  9631  1824  1303               	bcf	3,6	;RP1=0, select bank0
  9632  1825  0088               	movwf	8	;volatile
  9633  1826                     l133:
  9634  1826  0008               	return
  9635  1827                     __end_of_Lcd_Port:
  9636                           
  9637                           	psect	text34
  9638  1847                     __ptext34:	
  9639 ;; *************** function _Config_USARTT *****************
  9640 ;; Defined at:
  9641 ;;		line 11 in file "USART.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;		None
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;		None
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  1    wreg      void 
  9648 ;; Registers used:
  9649 ;;		wreg
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9655 ;;      Params:         0       0       0       0       0
  9656 ;;      Locals:         0       0       0       0       0
  9657 ;;      Temps:          0       0       0       0       0
  9658 ;;      Totals:         0       0       0       0       0
  9659 ;;Total ram usage:        0 bytes
  9660 ;; Hardware stack levels used:    1
  9661 ;; Hardware stack levels required when called:    1
  9662 ;; This function calls:
  9663 ;;		Nothing
  9664 ;; This function is called by:
  9665 ;;		_main
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           
  9670                           ;psect for function _Config_USARTT
  9671  1847                     _Config_USARTT:
  9672  1847                     l3241:	
  9673                           ;incstack = 0
  9674                           ; Regs used in _Config_USARTT: [wreg]
  9675                           
  9676                           
  9677                           ;USART.c: 12:     TXSTAbits.SYNC = 0;
  9678  1847  1683               	bsf	3,5	;RP0=1, select bank1
  9679  1848  1303               	bcf	3,6	;RP1=0, select bank1
  9680  1849  1218               	bcf	24,4	;volatile
  9681                           
  9682                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  9683  184A  1698               	bsf	24,5	;volatile
  9684                           
  9685                           ;USART.c: 14:     TXSTAbits.BRGH = 0;
  9686  184B  1118               	bcf	24,2	;volatile
  9687                           
  9688                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  9689  184C  1683               	bsf	3,5	;RP0=1, select bank3
  9690  184D  1703               	bsf	3,6	;RP1=1, select bank3
  9691  184E  1587               	bsf	7,3	;volatile
  9692  184F                     l3243:
  9693                           
  9694                           ;USART.c: 16:     SPBRG = 25;
  9695  184F  3019               	movlw	25
  9696  1850  1683               	bsf	3,5	;RP0=1, select bank1
  9697  1851  1303               	bcf	3,6	;RP1=0, select bank1
  9698  1852  0099               	movwf	25	;volatile
  9699  1853                     l3245:
  9700                           
  9701                           ;USART.c: 17:     RCSTAbits.SPEN = 1;
  9702  1853  1283               	bcf	3,5	;RP0=0, select bank0
  9703  1854  1303               	bcf	3,6	;RP1=0, select bank0
  9704  1855  1798               	bsf	24,7	;volatile
  9705  1856                     l3247:
  9706                           
  9707                           ;USART.c: 18:     INTCONbits.GIE = 1;
  9708  1856  178B               	bsf	11,7	;volatile
  9709  1857                     l176:
  9710  1857  0008               	return
  9711  1858                     __end_of_Config_USARTT:
  9712                           
  9713                           	psect	text35
  9714  194C                     __ptext35:	
  9715 ;; *************** function _ADC_con *****************
  9716 ;; Defined at:
  9717 ;;		line 12 in file "ADC.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  flag            1    wreg     unsigned char 
  9720 ;;  turno           1    3[COMMON] unsigned char 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  flag            1    6[COMMON] unsigned char 
  9723 ;;  var             1    5[COMMON] unsigned char 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      unsigned char 
  9726 ;; Registers used:
  9727 ;;		wreg, status,2, status,0
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9733 ;;      Params:         1       0       0       0       0
  9734 ;;      Locals:         2       0       0       0       0
  9735 ;;      Temps:          1       0       0       0       0
  9736 ;;      Totals:         4       0       0       0       0
  9737 ;;Total ram usage:        4 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; Hardware stack levels required when called:    1
  9740 ;; This function calls:
  9741 ;;		Nothing
  9742 ;; This function is called by:
  9743 ;;		_main
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           
  9748                           ;psect for function _ADC_con
  9749  194C                     _ADC_con:
  9750                           
  9751                           ;incstack = 0
  9752                           ; Regs used in _ADC_con: [wreg+status,2+status,0]
  9753                           ;ADC_con@flag stored from wreg
  9754  194C  00F6               	movwf	ADC_con@flag
  9755  194D                     l3285:
  9756                           
  9757                           ;ADC.c: 13:     uint8_t var;;ADC.c: 14:     ADCON1bits.ADFM = 0;
  9758  194D  1683               	bsf	3,5	;RP0=1, select bank1
  9759  194E  1303               	bcf	3,6	;RP1=0, select bank1
  9760  194F  139F               	bcf	31,7	;volatile
  9761  1950                     l3287:
  9762                           
  9763                           ;ADC.c: 15:     ANSEL = 0b00000011;
  9764  1950  3003               	movlw	3
  9765  1951  1683               	bsf	3,5	;RP0=1, select bank3
  9766  1952  1703               	bsf	3,6	;RP1=1, select bank3
  9767  1953  0088               	movwf	8	;volatile
  9768                           
  9769                           ;ADC.c: 16:     INTCON = 0b11101000;
  9770  1954  30E8               	movlw	232
  9771  1955  008B               	movwf	11	;volatile
  9772  1956                     l3289:
  9773                           
  9774                           ;ADC.c: 19:     PIE1bits.ADIE = 1;
  9775  1956  1683               	bsf	3,5	;RP0=1, select bank1
  9776  1957  1303               	bcf	3,6	;RP1=0, select bank1
  9777  1958  170C               	bsf	12,6	;volatile
  9778  1959                     l3291:
  9779                           
  9780                           ;ADC.c: 20:     PIR1bits.ADIF = 0;
  9781  1959  1283               	bcf	3,5	;RP0=0, select bank0
  9782  195A  1303               	bcf	3,6	;RP1=0, select bank0
  9783  195B  130C               	bcf	12,6	;volatile
  9784  195C                     l3293:
  9785                           
  9786                           ;ADC.c: 21:     if (flag == 1 && turno == 1) {
  9787  195C  0376               	decf	ADC_con@flag,w
  9788  195D  1D03               	btfss	3,2
  9789  195E  2960               	goto	u5271
  9790  195F  2961               	goto	u5270
  9791  1960                     u5271:
  9792  1960  2971               	goto	l3305
  9793  1961                     u5270:
  9794  1961                     l3295:
  9795  1961  0373               	decf	ADC_con@turno,w
  9796  1962  1D03               	btfss	3,2
  9797  1963  2965               	goto	u5281
  9798  1964  2966               	goto	u5280
  9799  1965                     u5281:
  9800  1965  2971               	goto	l3305
  9801  1966                     u5280:
  9802  1966                     l3297:
  9803                           
  9804                           ;ADC.c: 22:         ADCON0 = 0b01000001;
  9805  1966  3041               	movlw	65
  9806  1967  009F               	movwf	31	;volatile
  9807                           
  9808                           ;ADC.c: 24:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  9809  1968  300D               	movlw	13
  9810  1969  00F4               	movwf	??_ADC_con
  9811  196A                     u7557:
  9812  196A  0BF4               	decfsz	??_ADC_con,f
  9813  196B  296A               	goto	u7557
  9814  196C                     l3299:
  9815                           
  9816                           ;ADC.c: 25:         ADCON0bits.GO = 1;
  9817  196C  1283               	bcf	3,5	;RP0=0, select bank0
  9818  196D  1303               	bcf	3,6	;RP1=0, select bank0
  9819  196E  149F               	bsf	31,1	;volatile
  9820  196F                     l3301:
  9821  196F                     l3303:
  9822                           
  9823                           ;ADC.c: 27:         var=0;
  9824  196F  01F5               	clrf	ADC_con@var
  9825                           
  9826                           ;ADC.c: 29:     } else if (flag == 1 && turno == 0) {
  9827  1970  2986               	goto	l3317
  9828  1971                     l3305:
  9829  1971  0376               	decf	ADC_con@flag,w
  9830  1972  1D03               	btfss	3,2
  9831  1973  2975               	goto	u5291
  9832  1974  2976               	goto	u5290
  9833  1975                     u5291:
  9834  1975  2986               	goto	l3317
  9835  1976                     u5290:
  9836  1976                     l3307:
  9837  1976  0873               	movf	ADC_con@turno,w
  9838  1977  1D03               	btfss	3,2
  9839  1978  297A               	goto	u5301
  9840  1979  297B               	goto	u5300
  9841  197A                     u5301:
  9842  197A  2986               	goto	l3317
  9843  197B                     u5300:
  9844  197B                     l3309:
  9845                           
  9846                           ;ADC.c: 30:         ADCON0 = 0b01000101;
  9847  197B  3045               	movlw	69
  9848  197C  009F               	movwf	31	;volatile
  9849                           
  9850                           ;ADC.c: 32:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  9851  197D  300D               	movlw	13
  9852  197E  00F4               	movwf	??_ADC_con
  9853  197F                     u7567:
  9854  197F  0BF4               	decfsz	??_ADC_con,f
  9855  1980  297F               	goto	u7567
  9856  1981                     l3311:
  9857                           
  9858                           ;ADC.c: 33:         ADCON0bits.GO = 1;
  9859  1981  1283               	bcf	3,5	;RP0=0, select bank0
  9860  1982  1303               	bcf	3,6	;RP1=0, select bank0
  9861  1983  149F               	bsf	31,1	;volatile
  9862  1984                     l3313:
  9863  1984                     l3315:
  9864                           
  9865                           ;ADC.c: 35:         var=1;
  9866  1984  01F5               	clrf	ADC_con@var
  9867  1985  0AF5               	incf	ADC_con@var,f
  9868  1986                     l3317:
  9869                           
  9870                           ;ADC.c: 37:     return (var);
  9871  1986  0875               	movf	ADC_con@var,w
  9872  1987                     l124:
  9873  1987  0008               	return
  9874  1988                     __end_of_ADC_con:
  9875                           
  9876                           	psect	text36
  9877  1A4F                     __ptext36:	
  9878 ;; *************** function _ISR *****************
  9879 ;; Defined at:
  9880 ;;		line 132 in file "main.c"
  9881 ;; Parameters:    Size  Location     Type
  9882 ;;		None
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;		None
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  1    wreg      void 
  9887 ;; Registers used:
  9888 ;;		wreg, status,2, status,0
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9894 ;;      Params:         0       0       0       0       0
  9895 ;;      Locals:         0       0       0       0       0
  9896 ;;      Temps:          3       0       0       0       0
  9897 ;;      Totals:         3       0       0       0       0
  9898 ;;Total ram usage:        3 bytes
  9899 ;; Hardware stack levels used:    1
  9900 ;; This function calls:
  9901 ;;		Nothing
  9902 ;; This function is called by:
  9903 ;;		Interrupt level 1
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           
  9907                           
  9908                           ;psect for function _ISR
  9909  1A4F                     _ISR:
  9910  1A4F                     i1l3689:
  9911                           
  9912                           ;main.c: 133:     if (PIR1bits.ADIF == 1) {
  9913  1A4F  1283               	bcf	3,5	;RP0=0, select bank0
  9914  1A50  1303               	bcf	3,6	;RP1=0, select bank0
  9915  1A51  1F0C               	btfss	12,6	;volatile
  9916  1A52  2A54               	goto	u592_21
  9917  1A53  2A55               	goto	u592_20
  9918  1A54                     u592_21:
  9919  1A54  2A79               	goto	i1l3711
  9920  1A55                     u592_20:
  9921  1A55                     i1l3691:
  9922                           
  9923                           ;main.c: 134:         if (retorno == 0) {
  9924  1A55  086F               	movf	_retorno,w
  9925  1A56  1D03               	btfss	3,2
  9926  1A57  2A59               	goto	u593_21
  9927  1A58  2A5A               	goto	u593_20
  9928  1A59                     u593_21:
  9929  1A59  2A64               	goto	i1l3699
  9930  1A5A                     u593_20:
  9931  1A5A                     i1l3693:
  9932                           
  9933                           ;main.c: 135:             valor_AN0 = ADRESH;
  9934  1A5A  081E               	movf	30,w	;volatile
  9935  1A5B  00F0               	movwf	??_ISR
  9936  1A5C  0870               	movf	??_ISR,w
  9937  1A5D  1683               	bsf	3,5	;RP0=1, select bank1
  9938  1A5E  1303               	bcf	3,6	;RP1=0, select bank1
  9939  1A5F  00DC               	movwf	_valor_AN0^(0+128)
  9940  1A60                     i1l3695:
  9941                           
  9942                           ;main.c: 136:             turno = 0;
  9943  1A60  01DD               	clrf	_turno^(0+128)
  9944  1A61                     i1l3697:
  9945                           
  9946                           ;main.c: 137:             flag = 1;
  9947  1A61  01DE               	clrf	_flag^(0+128)
  9948  1A62  0ADE               	incf	_flag^(0+128),f
  9949                           
  9950                           ;main.c: 138:         } else if (retorno == 1) {
  9951  1A63  2A72               	goto	i1l3707
  9952  1A64                     i1l3699:
  9953  1A64  036F               	decf	_retorno,w
  9954  1A65  1D03               	btfss	3,2
  9955  1A66  2A68               	goto	u594_21
  9956  1A67  2A69               	goto	u594_20
  9957  1A68                     u594_21:
  9958  1A68  2A72               	goto	i1l3707
  9959  1A69                     u594_20:
  9960  1A69                     i1l3701:
  9961                           
  9962                           ;main.c: 139:             valor_AN1 = ADRESH;
  9963  1A69  081E               	movf	30,w	;volatile
  9964  1A6A  00F0               	movwf	??_ISR
  9965  1A6B  0870               	movf	??_ISR,w
  9966  1A6C  1683               	bsf	3,5	;RP0=1, select bank1
  9967  1A6D  1303               	bcf	3,6	;RP1=0, select bank1
  9968  1A6E  00DB               	movwf	_valor_AN1^(0+128)
  9969  1A6F                     i1l3703:
  9970                           
  9971                           ;main.c: 140:             turno = 1;
  9972  1A6F  01DD               	clrf	_turno^(0+128)
  9973  1A70  0ADD               	incf	_turno^(0+128),f
  9974  1A71  2A61               	goto	i1l3697
  9975  1A72                     i1l3707:
  9976                           
  9977                           ;main.c: 143:         flag = 1;
  9978  1A72  1683               	bsf	3,5	;RP0=1, select bank1
  9979  1A73  1303               	bcf	3,6	;RP1=0, select bank1
  9980  1A74  01DE               	clrf	_flag^(0+128)
  9981  1A75  0ADE               	incf	_flag^(0+128),f
  9982  1A76                     i1l3709:
  9983                           
  9984                           ;main.c: 145:         PIR1bits.ADIF = 0;
  9985  1A76  1283               	bcf	3,5	;RP0=0, select bank0
  9986  1A77  1303               	bcf	3,6	;RP1=0, select bank0
  9987  1A78  130C               	bcf	12,6	;volatile
  9988  1A79                     i1l3711:
  9989                           
  9990                           ;main.c: 147:     if (PIR1bits.RCIF == 1) {
  9991  1A79  1E8C               	btfss	12,5	;volatile
  9992  1A7A  2A7C               	goto	u595_21
  9993  1A7B  2A7D               	goto	u595_20
  9994  1A7C                     u595_21:
  9995  1A7C  2A8E               	goto	i1l102
  9996  1A7D                     u595_20:
  9997  1A7D                     i1l3713:
  9998                           
  9999                           ;main.c: 148:         if (RCSTAbits.OERR == 1) {
 10000  1A7D  1C98               	btfss	24,1	;volatile
 10001  1A7E  2A80               	goto	u596_21
 10002  1A7F  2A81               	goto	u596_20
 10003  1A80                     u596_21:
 10004  1A80  2A88               	goto	i1l3719
 10005  1A81                     u596_20:
 10006  1A81                     i1l3715:
 10007                           
 10008                           ;main.c: 149:             RCSTAbits.CREN = 0;
 10009  1A81  1218               	bcf	24,4	;volatile
 10010  1A82                     i1l3717:
 10011                           
 10012                           ;main.c: 150:             _delay((unsigned long)((300)*(8000000/4000000.0)));
 10013  1A82  30C7               	movlw	199
 10014  1A83  00F0               	movwf	??_ISR
 10015  1A84                     u757_27:
 10016  1A84  0BF0               	decfsz	??_ISR,f
 10017  1A85  2A84               	goto	u757_27
 10018  1A86  2A87               	nop2
 10019                           
 10020                           ;main.c: 151:         } else {
 10021  1A87  2A8E               	goto	i1l102
 10022  1A88                     i1l3719:
 10023                           
 10024                           ;main.c: 152:             recibido = RCREG;
 10025  1A88  081A               	movf	26,w	;volatile
 10026  1A89  00F0               	movwf	??_ISR
 10027  1A8A  0870               	movf	??_ISR,w
 10028  1A8B  1683               	bsf	3,5	;RP0=1, select bank1
 10029  1A8C  1303               	bcf	3,6	;RP1=0, select bank1
 10030  1A8D  00D9               	movwf	_recibido^(0+128)
 10031  1A8E                     i1l102:
 10032  1A8E  0872               	movf	??_ISR+2,w
 10033  1A8F  008A               	movwf	10
 10034  1A90  0E71               	swapf	??_ISR+1,w
 10035  1A91  0083               	movwf	3
 10036  1A92  0EFE               	swapf	btemp,f
 10037  1A93  0E7E               	swapf	btemp,w
 10038  1A94  0009               	retfie
 10039  1A95                     __end_of_ISR:
 10040  007E                     btemp	set	126	;btemp
 10041  007E                     wtemp0	set	126
 10042                           
 10043                           	psect	intentry
 10044  0004                     __pintentry:	
 10045                           ;incstack = 0
 10046                           ; Regs used in _ISR: [wreg+status,2+status,0]
 10047                           
 10048  0004                     interrupt_function:
 10049  007E                     saved_w	set	btemp
 10050  0004  00FE               	movwf	btemp
 10051  0005  0E03               	swapf	3,w
 10052  0006  00F1               	movwf	??_ISR+1
 10053  0007  080A               	movf	10,w
 10054  0008  00F2               	movwf	??_ISR+2
 10055  0009  160A  158A  2A4F   	ljmp	_ISR
 10056                           
 10057                           	psect	config
 10058                           
 10059                           ;Config register CONFIG1 @ 0x2007
 10060                           ;	Oscillator Selection bits
 10061                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
 10062                           ;	Watchdog Timer Enable bit
 10063                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10064                           ;	Power-up Timer Enable bit
 10065                           ;	PWRTE = OFF, PWRT disabled
 10066                           ;	RE3/MCLR pin function select bit
 10067                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10068                           ;	Code Protection bit
 10069                           ;	CP = OFF, Program memory code protection is disabled
 10070                           ;	Data Code Protection bit
 10071                           ;	CPD = OFF, Data memory code protection is disabled
 10072                           ;	Brown Out Reset Selection bits
 10073                           ;	BOREN = OFF, BOR disabled
 10074                           ;	Internal External Switchover bit
 10075                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10076                           ;	Fail-Safe Clock Monitor Enabled bit
 10077                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10078                           ;	Low Voltage Programming Enable bit
 10079                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10080                           ;	In-Circuit Debugger Mode bit
 10081                           ;	DEBUG = 0x1, unprogrammed default
 10082  2007                     	org	8199
 10083  2007  20D5               	dw	8405
 10084                           
 10085                           ;Config register CONFIG2 @ 0x2008
 10086                           ;	Brown-out Reset Selection bit
 10087                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10088                           ;	Flash Program Memory Self Write Enable bits
 10089                           ;	WRT = OFF, Write protection off
 10090  2008                     	org	8200
 10091  2008  3FFF               	dw	16383
 10092                           
 10093                           	psect	text1_split_1
 10094  0037                     u7050:
 10095  0037                     l4225:
 10096  0037  1683               	bsf	3,5	;RP0=1, select bank1
 10097  0038  1303               	bcf	3,6	;RP1=0, select bank1
 10098  0039  0848               	movf	(sprintf@fval+3)^(0+128),w
 10099  003A  1283               	bcf	3,5	;RP0=0, select bank0
 10100  003B  1303               	bcf	3,6	;RP1=0, select bank0
 10101  003C  00A3               	movwf	___fleq@ff1+3
 10102  003D  1683               	bsf	3,5	;RP0=1, select bank1
 10103  003E  1303               	bcf	3,6	;RP1=0, select bank1
 10104  003F  0847               	movf	(sprintf@fval+2)^(0+128),w
 10105  0040  1283               	bcf	3,5	;RP0=0, select bank0
 10106  0041  1303               	bcf	3,6	;RP1=0, select bank0
 10107  0042  00A2               	movwf	___fleq@ff1+2
 10108  0043  1683               	bsf	3,5	;RP0=1, select bank1
 10109  0044  1303               	bcf	3,6	;RP1=0, select bank1
 10110  0045  0846               	movf	(sprintf@fval+1)^(0+128),w
 10111  0046  1283               	bcf	3,5	;RP0=0, select bank0
 10112  0047  1303               	bcf	3,6	;RP1=0, select bank0
 10113  0048  00A1               	movwf	___fleq@ff1+1
 10114  0049  1683               	bsf	3,5	;RP0=1, select bank1
 10115  004A  1303               	bcf	3,6	;RP1=0, select bank1
 10116  004B  0845               	movf	sprintf@fval^(0+128),w
 10117  004C  1283               	bcf	3,5	;RP0=0, select bank0
 10118  004D  1303               	bcf	3,6	;RP1=0, select bank0
 10119  004E  00A0               	movwf	___fleq@ff1
 10120  004F  3000               	movlw	0
 10121  0050  00A7               	movwf	___fleq@ff2+3
 10122  0051  3000               	movlw	0
 10123  0052  00A6               	movwf	___fleq@ff2+2
 10124  0053  3000               	movlw	0
 10125  0054  00A5               	movwf	___fleq@ff2+1
 10126  0055  3000               	movlw	0
 10127  0056  00A4               	movwf	___fleq@ff2
 10128  0057  160A  158A  22DB  120A  118A  	fcall	___fleq
 10129  005C  1803               	btfsc	3,0
 10130  005D  285F               	goto	u7061
 10131  005E  2860               	goto	u7060
 10132  005F                     u7061:
 10133  005F  2942               	goto	l4245
 10134  0060                     u7060:
 10135  0060                     l4227:
 10136  0060  1683               	bsf	3,5	;RP0=1, select bank1
 10137  0061  1303               	bcf	3,6	;RP1=0, select bank1
 10138  0062  0848               	movf	(sprintf@fval+3)^(0+128),w
 10139  0063  1283               	bcf	3,5	;RP0=0, select bank0
 10140  0064  1303               	bcf	3,6	;RP1=0, select bank0
 10141  0065  00DA               	movwf	___fltol@f1+3
 10142  0066  1683               	bsf	3,5	;RP0=1, select bank1
 10143  0067  1303               	bcf	3,6	;RP1=0, select bank1
 10144  0068  0847               	movf	(sprintf@fval+2)^(0+128),w
 10145  0069  1283               	bcf	3,5	;RP0=0, select bank0
 10146  006A  1303               	bcf	3,6	;RP1=0, select bank0
 10147  006B  00D9               	movwf	___fltol@f1+2
 10148  006C  1683               	bsf	3,5	;RP0=1, select bank1
 10149  006D  1303               	bcf	3,6	;RP1=0, select bank1
 10150  006E  0846               	movf	(sprintf@fval+1)^(0+128),w
 10151  006F  1283               	bcf	3,5	;RP0=0, select bank0
 10152  0070  1303               	bcf	3,6	;RP1=0, select bank0
 10153  0071  00D8               	movwf	___fltol@f1+1
 10154  0072  1683               	bsf	3,5	;RP0=1, select bank1
 10155  0073  1303               	bcf	3,6	;RP1=0, select bank1
 10156  0074  0845               	movf	sprintf@fval^(0+128),w
 10157  0075  1283               	bcf	3,5	;RP0=0, select bank0
 10158  0076  1303               	bcf	3,6	;RP1=0, select bank0
 10159  0077  00D7               	movwf	___fltol@f1
 10160  0078  120A  118A  2779  120A  118A  	fcall	___fltol
 10161  007D  1283               	bcf	3,5	;RP0=0, select bank0
 10162  007E  1303               	bcf	3,6	;RP1=0, select bank0
 10163  007F  085A               	movf	?___fltol+3,w
 10164  0080  0459               	iorwf	?___fltol+2,w
 10165  0081  0458               	iorwf	?___fltol+1,w
 10166  0082  0457               	iorwf	?___fltol,w
 10167  0083  1D03               	skipz
 10168  0084  2886               	goto	u7071
 10169  0085  2887               	goto	u7070
 10170  0086                     u7071:
 10171  0086  2942               	goto	l4245
 10172  0087                     u7070:
 10173  0087                     l4229:
 10174  0087  1683               	bsf	3,5	;RP0=1, select bank1
 10175  0088  1303               	bcf	3,6	;RP1=0, select bank1
 10176  0089  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10177  008A  3A80               	xorlw	128
 10178  008B  00FF               	movwf	btemp+1
 10179  008C  3080               	movlw	128
 10180  008D  027F               	subwf	btemp+1,w
 10181  008E  1D03               	skipz
 10182  008F  2892               	goto	u7085
 10183  0090  3002               	movlw	2
 10184  0091  0243               	subwf	sprintf@eexp^(0+128),w
 10185  0092                     u7085:
 10186  0092  1C03               	skipc
 10187  0093  2895               	goto	u7081
 10188  0094  2896               	goto	u7080
 10189  0095                     u7081:
 10190  0095  2942               	goto	l4245
 10191  0096                     u7080:
 10192  0096                     l4231:
 10193                           
 10194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10195  0096  1683               	bsf	3,5	;RP0=1, select bank1
 10196  0097  1303               	bcf	3,6	;RP1=0, select bank1
 10197  0098  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10198  0099  1283               	bcf	3,5	;RP0=0, select bank0
 10199  009A  1303               	bcf	3,6	;RP1=0, select bank0
 10200  009B  00A3               	movwf	___flge@ff1+3
 10201  009C  1683               	bsf	3,5	;RP0=1, select bank1
 10202  009D  1303               	bcf	3,6	;RP1=0, select bank1
 10203  009E  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10204  009F  1283               	bcf	3,5	;RP0=0, select bank0
 10205  00A0  1303               	bcf	3,6	;RP1=0, select bank0
 10206  00A1  00A2               	movwf	___flge@ff1+2
 10207  00A2  1683               	bsf	3,5	;RP0=1, select bank1
 10208  00A3  1303               	bcf	3,6	;RP1=0, select bank1
 10209  00A4  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10210  00A5  1283               	bcf	3,5	;RP0=0, select bank0
 10211  00A6  1303               	bcf	3,6	;RP1=0, select bank0
 10212  00A7  00A1               	movwf	___flge@ff1+1
 10213  00A8  1683               	bsf	3,5	;RP0=1, select bank1
 10214  00A9  1303               	bcf	3,6	;RP1=0, select bank1
 10215  00AA  083B               	movf	sprintf@tmpval^(0+128),w
 10216  00AB  1283               	bcf	3,5	;RP0=0, select bank0
 10217  00AC  1303               	bcf	3,6	;RP1=0, select bank0
 10218  00AD  00A0               	movwf	___flge@ff1
 10219  00AE  3040               	movlw	64
 10220  00AF  00A7               	movwf	___flge@ff2+3
 10221  00B0  3089               	movlw	137
 10222  00B1  00A6               	movwf	___flge@ff2+2
 10223  00B2  3070               	movlw	112
 10224  00B3  00A5               	movwf	___flge@ff2+1
 10225  00B4  305F               	movlw	95
 10226  00B5  00A4               	movwf	___flge@ff2
 10227  00B6  160A  158A  2492  120A  118A  	fcall	___flge
 10228  00BB  1803               	btfsc	3,0
 10229  00BC  28BE               	goto	u7091
 10230  00BD  28BF               	goto	u7090
 10231  00BE                     u7091:
 10232  00BE  28C8               	goto	l4235
 10233  00BF                     u7090:
 10234  00BF                     l4233:
 10235                           
 10236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10237  00BF  30F7               	movlw	247
 10238  00C0  1683               	bsf	3,5	;RP0=1, select bank1
 10239  00C1  1303               	bcf	3,6	;RP1=0, select bank1
 10240  00C2  07C3               	addwf	sprintf@eexp^(0+128),f
 10241  00C3  1803               	skipnc
 10242  00C4  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10243  00C5  30FF               	movlw	255
 10244  00C6  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10245                           
 10246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10247  00C7  28D0               	goto	l4237
 10248  00C8                     l4235:
 10249                           
 10250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10251  00C8  30F8               	movlw	248
 10252  00C9  1683               	bsf	3,5	;RP0=1, select bank1
 10253  00CA  1303               	bcf	3,6	;RP1=0, select bank1
 10254  00CB  07C3               	addwf	sprintf@eexp^(0+128),f
 10255  00CC  1803               	skipnc
 10256  00CD  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10257  00CE  30FF               	movlw	255
 10258  00CF  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10259  00D0                     l4237:
 10260                           
 10261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10262  00D0  0843               	movf	sprintf@eexp^(0+128),w
 10263  00D1  120A  158A  249D  120A  118A  	fcall	_scale
 10264  00D6  1283               	bcf	3,5	;RP0=0, select bank0
 10265  00D7  1303               	bcf	3,6	;RP1=0, select bank0
 10266  00D8  0847               	movf	?_scale+3,w
 10267  00D9  1683               	bsf	3,5	;RP0=1, select bank1
 10268  00DA  1303               	bcf	3,6	;RP1=0, select bank1
 10269  00DB  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10270  00DC  1283               	bcf	3,5	;RP0=0, select bank0
 10271  00DD  1303               	bcf	3,6	;RP1=0, select bank0
 10272  00DE  0846               	movf	?_scale+2,w
 10273  00DF  1683               	bsf	3,5	;RP0=1, select bank1
 10274  00E0  1303               	bcf	3,6	;RP1=0, select bank1
 10275  00E1  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10276  00E2  1283               	bcf	3,5	;RP0=0, select bank0
 10277  00E3  1303               	bcf	3,6	;RP1=0, select bank0
 10278  00E4  0845               	movf	?_scale+1,w
 10279  00E5  1683               	bsf	3,5	;RP0=1, select bank1
 10280  00E6  1303               	bcf	3,6	;RP1=0, select bank1
 10281  00E7  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10282  00E8  1283               	bcf	3,5	;RP0=0, select bank0
 10283  00E9  1303               	bcf	3,6	;RP1=0, select bank0
 10284  00EA  0844               	movf	?_scale,w
 10285  00EB  1683               	bsf	3,5	;RP0=1, select bank1
 10286  00EC  1303               	bcf	3,6	;RP1=0, select bank1
 10287  00ED  00BB               	movwf	sprintf@tmpval^(0+128)
 10288  00EE                     l4239:
 10289  00EE  0848               	movf	(sprintf@fval+3)^(0+128),w
 10290  00EF  1283               	bcf	3,5	;RP0=0, select bank0
 10291  00F0  1303               	bcf	3,6	;RP1=0, select bank0
 10292  00F1  00A3               	movwf	__div_to_l_@f1+3
 10293  00F2  1683               	bsf	3,5	;RP0=1, select bank1
 10294  00F3  1303               	bcf	3,6	;RP1=0, select bank1
 10295  00F4  0847               	movf	(sprintf@fval+2)^(0+128),w
 10296  00F5  1283               	bcf	3,5	;RP0=0, select bank0
 10297  00F6  1303               	bcf	3,6	;RP1=0, select bank0
 10298  00F7  00A2               	movwf	__div_to_l_@f1+2
 10299  00F8  1683               	bsf	3,5	;RP0=1, select bank1
 10300  00F9  1303               	bcf	3,6	;RP1=0, select bank1
 10301  00FA  0846               	movf	(sprintf@fval+1)^(0+128),w
 10302  00FB  1283               	bcf	3,5	;RP0=0, select bank0
 10303  00FC  1303               	bcf	3,6	;RP1=0, select bank0
 10304  00FD  00A1               	movwf	__div_to_l_@f1+1
 10305  00FE  1683               	bsf	3,5	;RP0=1, select bank1
 10306  00FF  1303               	bcf	3,6	;RP1=0, select bank1
 10307  0100  0845               	movf	sprintf@fval^(0+128),w
 10308  0101  1283               	bcf	3,5	;RP0=0, select bank0
 10309  0102  1303               	bcf	3,6	;RP1=0, select bank0
 10310  0103  00A0               	movwf	__div_to_l_@f1
 10311  0104  1683               	bsf	3,5	;RP0=1, select bank1
 10312  0105  1303               	bcf	3,6	;RP1=0, select bank1
 10313  0106  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10314  0107  1283               	bcf	3,5	;RP0=0, select bank0
 10315  0108  1303               	bcf	3,6	;RP1=0, select bank0
 10316  0109  00A7               	movwf	__div_to_l_@f2+3
 10317  010A  1683               	bsf	3,5	;RP0=1, select bank1
 10318  010B  1303               	bcf	3,6	;RP1=0, select bank1
 10319  010C  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10320  010D  1283               	bcf	3,5	;RP0=0, select bank0
 10321  010E  1303               	bcf	3,6	;RP1=0, select bank0
 10322  010F  00A6               	movwf	__div_to_l_@f2+2
 10323  0110  1683               	bsf	3,5	;RP0=1, select bank1
 10324  0111  1303               	bcf	3,6	;RP1=0, select bank1
 10325  0112  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10326  0113  1283               	bcf	3,5	;RP0=0, select bank0
 10327  0114  1303               	bcf	3,6	;RP1=0, select bank0
 10328  0115  00A5               	movwf	__div_to_l_@f2+1
 10329  0116  1683               	bsf	3,5	;RP0=1, select bank1
 10330  0117  1303               	bcf	3,6	;RP1=0, select bank1
 10331  0118  083B               	movf	sprintf@tmpval^(0+128),w
 10332  0119  1283               	bcf	3,5	;RP0=0, select bank0
 10333  011A  1303               	bcf	3,6	;RP1=0, select bank0
 10334  011B  00A4               	movwf	__div_to_l_@f2
 10335  011C  120A  118A  26B9  120A  118A  	fcall	__div_to_l_
 10336  0121  1283               	bcf	3,5	;RP0=0, select bank0
 10337  0122  1303               	bcf	3,6	;RP1=0, select bank0
 10338  0123  0823               	movf	?__div_to_l_+3,w
 10339  0124  1683               	bsf	3,5	;RP0=1, select bank1
 10340  0125  1303               	bcf	3,6	;RP1=0, select bank1
 10341  0126  00C2               	movwf	(sprintf@val+3)^(0+128)
 10342  0127  1283               	bcf	3,5	;RP0=0, select bank0
 10343  0128  1303               	bcf	3,6	;RP1=0, select bank0
 10344  0129  0822               	movf	?__div_to_l_+2,w
 10345  012A  1683               	bsf	3,5	;RP0=1, select bank1
 10346  012B  1303               	bcf	3,6	;RP1=0, select bank1
 10347  012C  00C1               	movwf	(sprintf@val+2)^(0+128)
 10348  012D  1283               	bcf	3,5	;RP0=0, select bank0
 10349  012E  1303               	bcf	3,6	;RP1=0, select bank0
 10350  012F  0821               	movf	?__div_to_l_+1,w
 10351  0130  1683               	bsf	3,5	;RP0=1, select bank1
 10352  0131  1303               	bcf	3,6	;RP1=0, select bank1
 10353  0132  00C0               	movwf	(sprintf@val+1)^(0+128)
 10354  0133  1283               	bcf	3,5	;RP0=0, select bank0
 10355  0134  1303               	bcf	3,6	;RP1=0, select bank0
 10356  0135  0820               	movf	?__div_to_l_,w
 10357  0136  1683               	bsf	3,5	;RP0=1, select bank1
 10358  0137  1303               	bcf	3,6	;RP1=0, select bank1
 10359  0138  00BF               	movwf	sprintf@val^(0+128)
 10360  0139                     l4243:
 10361                           
 10362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10363  0139  3000               	movlw	0
 10364  013A  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10365  013B  3000               	movlw	0
 10366  013C  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10367  013D  3000               	movlw	0
 10368  013E  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10369  013F  3000               	movlw	0
 10370  0140  00C5               	movwf	sprintf@fval^(0+128)
 10371                           
 10372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10373  0141  29A8               	goto	l4251
 10374  0142                     l4245:
 10375                           
 10376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10377  0142  1683               	bsf	3,5	;RP0=1, select bank1
 10378  0143  1303               	bcf	3,6	;RP1=0, select bank1
 10379  0144  0848               	movf	(sprintf@fval+3)^(0+128),w
 10380  0145  1283               	bcf	3,5	;RP0=0, select bank0
 10381  0146  1303               	bcf	3,6	;RP1=0, select bank0
 10382  0147  00DA               	movwf	___fltol@f1+3
 10383  0148  1683               	bsf	3,5	;RP0=1, select bank1
 10384  0149  1303               	bcf	3,6	;RP1=0, select bank1
 10385  014A  0847               	movf	(sprintf@fval+2)^(0+128),w
 10386  014B  1283               	bcf	3,5	;RP0=0, select bank0
 10387  014C  1303               	bcf	3,6	;RP1=0, select bank0
 10388  014D  00D9               	movwf	___fltol@f1+2
 10389  014E  1683               	bsf	3,5	;RP0=1, select bank1
 10390  014F  1303               	bcf	3,6	;RP1=0, select bank1
 10391  0150  0846               	movf	(sprintf@fval+1)^(0+128),w
 10392  0151  1283               	bcf	3,5	;RP0=0, select bank0
 10393  0152  1303               	bcf	3,6	;RP1=0, select bank0
 10394  0153  00D8               	movwf	___fltol@f1+1
 10395  0154  1683               	bsf	3,5	;RP0=1, select bank1
 10396  0155  1303               	bcf	3,6	;RP1=0, select bank1
 10397  0156  0845               	movf	sprintf@fval^(0+128),w
 10398  0157  1283               	bcf	3,5	;RP0=0, select bank0
 10399  0158  1303               	bcf	3,6	;RP1=0, select bank0
 10400  0159  00D7               	movwf	___fltol@f1
 10401  015A  120A  118A  2779  120A  118A  	fcall	___fltol
 10402  015F  1283               	bcf	3,5	;RP0=0, select bank0
 10403  0160  1303               	bcf	3,6	;RP1=0, select bank0
 10404  0161  085A               	movf	?___fltol+3,w
 10405  0162  1683               	bsf	3,5	;RP0=1, select bank1
 10406  0163  1303               	bcf	3,6	;RP1=0, select bank1
 10407  0164  00C2               	movwf	(sprintf@val+3)^(0+128)
 10408  0165  1283               	bcf	3,5	;RP0=0, select bank0
 10409  0166  1303               	bcf	3,6	;RP1=0, select bank0
 10410  0167  0859               	movf	?___fltol+2,w
 10411  0168  1683               	bsf	3,5	;RP0=1, select bank1
 10412  0169  1303               	bcf	3,6	;RP1=0, select bank1
 10413  016A  00C1               	movwf	(sprintf@val+2)^(0+128)
 10414  016B  1283               	bcf	3,5	;RP0=0, select bank0
 10415  016C  1303               	bcf	3,6	;RP1=0, select bank0
 10416  016D  0858               	movf	?___fltol+1,w
 10417  016E  1683               	bsf	3,5	;RP0=1, select bank1
 10418  016F  1303               	bcf	3,6	;RP1=0, select bank1
 10419  0170  00C0               	movwf	(sprintf@val+1)^(0+128)
 10420  0171  1283               	bcf	3,5	;RP0=0, select bank0
 10421  0172  1303               	bcf	3,6	;RP1=0, select bank0
 10422  0173  0857               	movf	?___fltol,w
 10423  0174  1683               	bsf	3,5	;RP0=1, select bank1
 10424  0175  1303               	bcf	3,6	;RP1=0, select bank1
 10425  0176  00BF               	movwf	sprintf@val^(0+128)
 10426  0177                     l4247:
 10427                           
 10428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10429  0177  0842               	movf	(sprintf@val+3)^(0+128),w
 10430  0178  00F6               	movwf	___xxtofl@val+3
 10431  0179  0841               	movf	(sprintf@val+2)^(0+128),w
 10432  017A  00F5               	movwf	___xxtofl@val+2
 10433  017B  0840               	movf	(sprintf@val+1)^(0+128),w
 10434  017C  00F4               	movwf	___xxtofl@val+1
 10435  017D  083F               	movf	sprintf@val^(0+128),w
 10436  017E  00F3               	movwf	___xxtofl@val
 10437  017F  3000               	movlw	0
 10438  0180  160A  158A  2536  120A  118A  	fcall	___xxtofl
 10439  0185  0876               	movf	?___xxtofl+3,w
 10440  0186  1683               	bsf	3,5	;RP0=1, select bank1
 10441  0187  1303               	bcf	3,6	;RP1=0, select bank1
 10442  0188  00A3               	movwf	(___flsub@a+3)^(0+128)
 10443  0189  0875               	movf	?___xxtofl+2,w
 10444  018A  00A2               	movwf	(___flsub@a+2)^(0+128)
 10445  018B  0874               	movf	?___xxtofl+1,w
 10446  018C  00A1               	movwf	(___flsub@a+1)^(0+128)
 10447  018D  0873               	movf	?___xxtofl,w
 10448  018E  00A0               	movwf	___flsub@a^(0+128)
 10449  018F  0848               	movf	(sprintf@fval+3)^(0+128),w
 10450  0190  00A7               	movwf	(___flsub@b+3)^(0+128)
 10451  0191  0847               	movf	(sprintf@fval+2)^(0+128),w
 10452  0192  00A6               	movwf	(___flsub@b+2)^(0+128)
 10453  0193  0846               	movf	(sprintf@fval+1)^(0+128),w
 10454  0194  00A5               	movwf	(___flsub@b+1)^(0+128)
 10455  0195  0845               	movf	sprintf@fval^(0+128),w
 10456  0196  00A4               	movwf	___flsub@b^(0+128)
 10457  0197  160A  158A  232B  120A  118A  	fcall	___flsub
 10458  019C  1683               	bsf	3,5	;RP0=1, select bank1
 10459  019D  1303               	bcf	3,6	;RP1=0, select bank1
 10460  019E  0823               	movf	(?___flsub+3)^(0+128),w
 10461  019F  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10462  01A0  0822               	movf	(?___flsub+2)^(0+128),w
 10463  01A1  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10464  01A2  0821               	movf	(?___flsub+1)^(0+128),w
 10465  01A3  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10466  01A4  0820               	movf	?___flsub^(0+128),w
 10467  01A5  00C5               	movwf	sprintf@fval^(0+128)
 10468  01A6                     l4249:
 10469                           
 10470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10471  01A6  01C3               	clrf	sprintf@eexp^(0+128)
 10472  01A7  01C4               	clrf	(sprintf@eexp+1)^(0+128)
 10473  01A8                     l4251:
 10474                           
 10475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10476  01A8  01CC               	clrf	sprintf@c^(0+128)
 10477  01A9  0ACC               	incf	sprintf@c^(0+128),f
 10478  01AA                     l4257:
 10479                           
 10480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10481  01AA  084C               	movf	sprintf@c^(0+128),w
 10482  01AB  00AD               	movwf	??_sprintf^(0+128)
 10483  01AC  3001               	movlw	1
 10484  01AD                     u7105:
 10485  01AD  1003               	clrc
 10486  01AE  0DAD               	rlf	??_sprintf^(0+128),f
 10487  01AF  3EFF               	addlw	-1
 10488  01B0  1D03               	skipz
 10489  01B1  29AD               	goto	u7105
 10490  01B2  1003               	clrc
 10491  01B3  0D2D               	rlf	??_sprintf^(0+128),w
 10492  01B4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10493  01B5  0084               	movwf	4
 10494  01B6  120A  158A  200A  120A  118A  	fcall	stringdir
 10495  01BB  00AE               	movwf	(??_sprintf+1)^(0+128)
 10496  01BC  120A  158A  200A  120A  118A  	fcall	stringdir
 10497  01C1  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 10498  01C2  120A  158A  200A  120A  118A  	fcall	stringdir
 10499  01C7  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 10500  01C8  120A  158A  200A  120A  118A  	fcall	stringdir
 10501  01CD  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 10502  01CE  0831               	movf	(??_sprintf+4)^(0+128),w
 10503  01CF  0242               	subwf	(sprintf@val+3)^(0+128),w
 10504  01D0  1D03               	skipz
 10505  01D1  29DC               	goto	u7115
 10506  01D2  0830               	movf	(??_sprintf+3)^(0+128),w
 10507  01D3  0241               	subwf	(sprintf@val+2)^(0+128),w
 10508  01D4  1D03               	skipz
 10509  01D5  29DC               	goto	u7115
 10510  01D6  082F               	movf	(??_sprintf+2)^(0+128),w
 10511  01D7  0240               	subwf	(sprintf@val+1)^(0+128),w
 10512  01D8  1D03               	skipz
 10513  01D9  29DC               	goto	u7115
 10514  01DA  082E               	movf	(??_sprintf+1)^(0+128),w
 10515  01DB  023F               	subwf	sprintf@val^(0+128),w
 10516  01DC                     u7115:
 10517  01DC  1803               	skipnc
 10518  01DD  29DF               	goto	u7111
 10519  01DE  29E0               	goto	u7110
 10520  01DF                     u7111:
 10521  01DF  29E1               	goto	l4261
 10522  01E0                     u7110:
 10523  01E0  29EB               	goto	l4263
 10524  01E1                     l4261:
 10525  01E1  3001               	movlw	1
 10526  01E2  00AD               	movwf	??_sprintf^(0+128)
 10527  01E3  082D               	movf	??_sprintf^(0+128),w
 10528  01E4  07CC               	addwf	sprintf@c^(0+128),f
 10529  01E5  300A               	movlw	10
 10530  01E6  064C               	xorwf	sprintf@c^(0+128),w
 10531  01E7  1D03               	btfss	3,2
 10532  01E8  29EA               	goto	u7121
 10533  01E9  29EB               	goto	u7120
 10534  01EA                     u7121:
 10535  01EA  29AA               	goto	l4257
 10536  01EB                     u7120:
 10537  01EB                     l4263:
 10538                           
 10539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10540  01EB  084C               	movf	sprintf@c^(0+128),w
 10541  01EC  074A               	addwf	sprintf@prec^(0+128),w
 10542  01ED  00AD               	movwf	??_sprintf^(0+128)
 10543  01EE  084B               	movf	(sprintf@prec+1)^(0+128),w
 10544  01EF  1803               	skipnc
 10545  01F0  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 10546  01F1  00AE               	movwf	(??_sprintf^(0+128)+1)
 10547  01F2  0843               	movf	sprintf@eexp^(0+128),w
 10548  01F3  072D               	addwf	??_sprintf^(0+128),w
 10549  01F4  00AF               	movwf	(??_sprintf+2)^(0+128)
 10550  01F5  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10551  01F6  1803               	skipnc
 10552  01F7  0A44               	incf	(sprintf@eexp+1)^(0+128),w
 10553  01F8  072E               	addwf	(??_sprintf+1)^(0+128),w
 10554  01F9  00B0               	movwf	(??_sprintf+3)^(0+128)
 10555  01FA  082F               	movf	(??_sprintf+2)^(0+128),w
 10556  01FB  02B9               	subwf	sprintf@width^(0+128),f
 10557  01FC  0830               	movf	(??_sprintf+3)^(0+128),w
 10558  01FD  1C03               	skipc
 10559  01FE  03BA               	decf	(sprintf@width+1)^(0+128),f
 10560  01FF  02BA               	subwf	(sprintf@width+1)^(0+128),f
 10561                           
 10562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10563  0200  084A               	movf	sprintf@prec^(0+128),w
 10564  0201  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10565  0202  1903               	btfsc	3,2
 10566  0203  2A05               	goto	u7131
 10567  0204  2A06               	goto	u7130
 10568  0205                     u7131:
 10569  0205  2A0C               	goto	l4267
 10570  0206                     u7130:
 10571  0206                     l4265:
 10572                           
 10573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10574  0206  30FF               	movlw	255
 10575  0207  07B9               	addwf	sprintf@width^(0+128),f
 10576  0208  1803               	skipnc
 10577  0209  0ABA               	incf	(sprintf@width+1)^(0+128),f
 10578  020A  30FF               	movlw	255
 10579  020B  07BA               	addwf	(sprintf@width+1)^(0+128),f
 10580  020C                     l4267:
 10581                           
 10582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10583  020C  3003               	movlw	3
 10584  020D  0537               	andwf	sprintf@flag^(0+128),w
 10585  020E  00AD               	movwf	??_sprintf^(0+128)
 10586  020F  3000               	movlw	0
 10587  0210  0538               	andwf	(sprintf@flag+1)^(0+128),w
 10588  0211  00AE               	movwf	(??_sprintf+1)^(0+128)
 10589  0212  082D               	movf	??_sprintf^(0+128),w
 10590  0213  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10591  0214  1903               	btfsc	3,2
 10592  0215  2A17               	goto	u7141
 10593  0216  2A18               	goto	u7140
 10594  0217                     u7141:
 10595  0217  2A2D               	goto	l4277
 10596  0218                     u7140:
 10597  0218                     l4269:
 10598                           
 10599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10600  0218  30FF               	movlw	255
 10601  0219  07B9               	addwf	sprintf@width^(0+128),f
 10602  021A  1803               	skipnc
 10603  021B  0ABA               	incf	(sprintf@width+1)^(0+128),f
 10604  021C  30FF               	movlw	255
 10605  021D  07BA               	addwf	(sprintf@width+1)^(0+128),f
 10606  021E  2A2D               	goto	l4277
 10607  021F                     l4271:
 10608                           
 10609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10610  021F  3020               	movlw	32
 10611  0220  1683               	bsf	3,5	;RP0=1, select bank1
 10612  0221  1303               	bcf	3,6	;RP1=0, select bank1
 10613  0222  00AD               	movwf	??_sprintf^(0+128)
 10614  0223  0849               	movf	sprintf@sp^(0+128),w
 10615  0224  0084               	movwf	4
 10616  0225  082D               	movf	??_sprintf^(0+128),w
 10617  0226  1783               	bsf	3,7	;select IRP bank2
 10618  0227  0080               	movwf	0
 10619  0228                     l4273:
 10620  0228  3001               	movlw	1
 10621  0229  00AD               	movwf	??_sprintf^(0+128)
 10622  022A  082D               	movf	??_sprintf^(0+128),w
 10623  022B  07C9               	addwf	sprintf@sp^(0+128),f
 10624  022C  2A18               	goto	l4269
 10625  022D                     l4277:
 10626                           
 10627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10628  022D  083A               	movf	(sprintf@width+1)^(0+128),w
 10629  022E  3A80               	xorlw	128
 10630  022F  00FF               	movwf	btemp+1
 10631  0230  3080               	movlw	128
 10632  0231  027F               	subwf	btemp+1,w
 10633  0232  1D03               	skipz
 10634  0233  2A36               	goto	u7155
 10635  0234  3001               	movlw	1
 10636  0235  0239               	subwf	sprintf@width^(0+128),w
 10637  0236                     u7155:
 10638  0236  1803               	skipnc
 10639  0237  2A39               	goto	u7151
 10640  0238  2A3A               	goto	u7150
 10641  0239                     u7151:
 10642  0239  2A1F               	goto	l4271
 10643  023A                     u7150:
 10644  023A                     l4279:
 10645                           
 10646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10647  023A  3003               	movlw	3
 10648  023B  1683               	bsf	3,5	;RP0=1, select bank1
 10649  023C  1303               	bcf	3,6	;RP1=0, select bank1
 10650  023D  0537               	andwf	sprintf@flag^(0+128),w
 10651  023E  00AD               	movwf	??_sprintf^(0+128)
 10652  023F  3000               	movlw	0
 10653  0240  0538               	andwf	(sprintf@flag+1)^(0+128),w
 10654  0241  00AE               	movwf	(??_sprintf+1)^(0+128)
 10655  0242  082D               	movf	??_sprintf^(0+128),w
 10656  0243  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10657  0244  1903               	btfsc	3,2
 10658  0245  2A47               	goto	u7161
 10659  0246  2A48               	goto	u7160
 10660  0247                     u7161:
 10661  0247  2AFA               	goto	l361
 10662  0248                     u7160:
 10663  0248                     l4281:
 10664                           
 10665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10666  0248  302D               	movlw	45
 10667  0249  00AD               	movwf	??_sprintf^(0+128)
 10668  024A  0849               	movf	sprintf@sp^(0+128),w
 10669  024B  0084               	movwf	4
 10670  024C  082D               	movf	??_sprintf^(0+128),w
 10671  024D  1783               	bsf	3,7	;select IRP bank2
 10672  024E  0080               	movwf	0
 10673  024F                     l4283:
 10674  024F  3001               	movlw	1
 10675  0250  00AD               	movwf	??_sprintf^(0+128)
 10676  0251  082D               	movf	??_sprintf^(0+128),w
 10677  0252  07C9               	addwf	sprintf@sp^(0+128),f
 10678  0253  2AFA               	goto	l361
 10679  0254                     l4285:
 10680                           
 10681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10682  0254  084C               	movf	sprintf@c^(0+128),w
 10683  0255  00AD               	movwf	??_sprintf^(0+128)
 10684  0256  3001               	movlw	1
 10685  0257                     u7175:
 10686  0257  1003               	clrc
 10687  0258  0DAD               	rlf	??_sprintf^(0+128),f
 10688  0259  3EFF               	addlw	-1
 10689  025A  1D03               	skipz
 10690  025B  2A57               	goto	u7175
 10691  025C  1003               	clrc
 10692  025D  0D2D               	rlf	??_sprintf^(0+128),w
 10693  025E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10694  025F  0084               	movwf	4
 10695  0260  120A  158A  200A  120A  118A  	fcall	stringdir
 10696  0265  1283               	bcf	3,5	;RP0=0, select bank0
 10697  0266  1303               	bcf	3,6	;RP1=0, select bank0
 10698  0267  00A0               	movwf	___lldiv@divisor
 10699  0268  120A  158A  200A  120A  118A  	fcall	stringdir
 10700  026D  00A1               	movwf	___lldiv@divisor+1
 10701  026E  120A  158A  200A  120A  118A  	fcall	stringdir
 10702  0273  00A2               	movwf	___lldiv@divisor+2
 10703  0274  120A  158A  200A  120A  118A  	fcall	stringdir
 10704  0279  00A3               	movwf	___lldiv@divisor+3
 10705  027A  1683               	bsf	3,5	;RP0=1, select bank1
 10706  027B  1303               	bcf	3,6	;RP1=0, select bank1
 10707  027C  0842               	movf	(sprintf@val+3)^(0+128),w
 10708  027D  1283               	bcf	3,5	;RP0=0, select bank0
 10709  027E  1303               	bcf	3,6	;RP1=0, select bank0
 10710  027F  00A7               	movwf	___lldiv@dividend+3
 10711  0280  1683               	bsf	3,5	;RP0=1, select bank1
 10712  0281  1303               	bcf	3,6	;RP1=0, select bank1
 10713  0282  0841               	movf	(sprintf@val+2)^(0+128),w
 10714  0283  1283               	bcf	3,5	;RP0=0, select bank0
 10715  0284  1303               	bcf	3,6	;RP1=0, select bank0
 10716  0285  00A6               	movwf	___lldiv@dividend+2
 10717  0286  1683               	bsf	3,5	;RP0=1, select bank1
 10718  0287  1303               	bcf	3,6	;RP1=0, select bank1
 10719  0288  0840               	movf	(sprintf@val+1)^(0+128),w
 10720  0289  1283               	bcf	3,5	;RP0=0, select bank0
 10721  028A  1303               	bcf	3,6	;RP1=0, select bank0
 10722  028B  00A5               	movwf	___lldiv@dividend+1
 10723  028C  1683               	bsf	3,5	;RP0=1, select bank1
 10724  028D  1303               	bcf	3,6	;RP1=0, select bank1
 10725  028E  083F               	movf	sprintf@val^(0+128),w
 10726  028F  1283               	bcf	3,5	;RP0=0, select bank0
 10727  0290  1303               	bcf	3,6	;RP1=0, select bank0
 10728  0291  00A4               	movwf	___lldiv@dividend
 10729  0292  160A  158A  242A  120A  118A  	fcall	___lldiv
 10730  0297  1283               	bcf	3,5	;RP0=0, select bank0
 10731  0298  1303               	bcf	3,6	;RP1=0, select bank0
 10732  0299  0823               	movf	?___lldiv+3,w
 10733  029A  1683               	bsf	3,5	;RP0=1, select bank1
 10734  029B  1303               	bcf	3,6	;RP1=0, select bank1
 10735  029C  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10736  029D  1283               	bcf	3,5	;RP0=0, select bank0
 10737  029E  1303               	bcf	3,6	;RP1=0, select bank0
 10738  029F  0822               	movf	?___lldiv+2,w
 10739  02A0  1683               	bsf	3,5	;RP0=1, select bank1
 10740  02A1  1303               	bcf	3,6	;RP1=0, select bank1
 10741  02A2  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10742  02A3  1283               	bcf	3,5	;RP0=0, select bank0
 10743  02A4  1303               	bcf	3,6	;RP1=0, select bank0
 10744  02A5  0821               	movf	?___lldiv+1,w
 10745  02A6  1683               	bsf	3,5	;RP0=1, select bank1
 10746  02A7  1303               	bcf	3,6	;RP1=0, select bank1
 10747  02A8  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10748  02A9  1283               	bcf	3,5	;RP0=0, select bank0
 10749  02AA  1303               	bcf	3,6	;RP1=0, select bank0
 10750  02AB  0820               	movf	?___lldiv,w
 10751  02AC  1683               	bsf	3,5	;RP0=1, select bank1
 10752  02AD  1303               	bcf	3,6	;RP1=0, select bank1
 10753  02AE  00BB               	movwf	sprintf@tmpval^(0+128)
 10754  02AF                     l4287:
 10755                           
 10756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10757  02AF  3000               	movlw	0
 10758  02B0  1283               	bcf	3,5	;RP0=0, select bank0
 10759  02B1  1303               	bcf	3,6	;RP1=0, select bank0
 10760  02B2  00AB               	movwf	___llmod@divisor+3
 10761  02B3  3000               	movlw	0
 10762  02B4  00AA               	movwf	___llmod@divisor+2
 10763  02B5  3000               	movlw	0
 10764  02B6  00A9               	movwf	___llmod@divisor+1
 10765  02B7  300A               	movlw	10
 10766  02B8  00A8               	movwf	___llmod@divisor
 10767  02B9  1683               	bsf	3,5	;RP0=1, select bank1
 10768  02BA  1303               	bcf	3,6	;RP1=0, select bank1
 10769  02BB  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10770  02BC  1283               	bcf	3,5	;RP0=0, select bank0
 10771  02BD  1303               	bcf	3,6	;RP1=0, select bank0
 10772  02BE  00AF               	movwf	___llmod@dividend+3
 10773  02BF  1683               	bsf	3,5	;RP0=1, select bank1
 10774  02C0  1303               	bcf	3,6	;RP1=0, select bank1
 10775  02C1  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10776  02C2  1283               	bcf	3,5	;RP0=0, select bank0
 10777  02C3  1303               	bcf	3,6	;RP1=0, select bank0
 10778  02C4  00AE               	movwf	___llmod@dividend+2
 10779  02C5  1683               	bsf	3,5	;RP0=1, select bank1
 10780  02C6  1303               	bcf	3,6	;RP1=0, select bank1
 10781  02C7  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10782  02C8  1283               	bcf	3,5	;RP0=0, select bank0
 10783  02C9  1303               	bcf	3,6	;RP1=0, select bank0
 10784  02CA  00AD               	movwf	___llmod@dividend+1
 10785  02CB  1683               	bsf	3,5	;RP0=1, select bank1
 10786  02CC  1303               	bcf	3,6	;RP1=0, select bank1
 10787  02CD  083B               	movf	sprintf@tmpval^(0+128),w
 10788  02CE  1283               	bcf	3,5	;RP0=0, select bank0
 10789  02CF  1303               	bcf	3,6	;RP1=0, select bank0
 10790  02D0  00AC               	movwf	___llmod@dividend
 10791  02D1  160A  158A  237B  120A  118A  	fcall	___llmod
 10792  02D6  1283               	bcf	3,5	;RP0=0, select bank0
 10793  02D7  1303               	bcf	3,6	;RP1=0, select bank0
 10794  02D8  082B               	movf	?___llmod+3,w
 10795  02D9  1683               	bsf	3,5	;RP0=1, select bank1
 10796  02DA  1303               	bcf	3,6	;RP1=0, select bank1
 10797  02DB  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10798  02DC  1283               	bcf	3,5	;RP0=0, select bank0
 10799  02DD  1303               	bcf	3,6	;RP1=0, select bank0
 10800  02DE  082A               	movf	?___llmod+2,w
 10801  02DF  1683               	bsf	3,5	;RP0=1, select bank1
 10802  02E0  1303               	bcf	3,6	;RP1=0, select bank1
 10803  02E1  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10804  02E2  1283               	bcf	3,5	;RP0=0, select bank0
 10805  02E3  1303               	bcf	3,6	;RP1=0, select bank0
 10806  02E4  0829               	movf	?___llmod+1,w
 10807  02E5  1683               	bsf	3,5	;RP0=1, select bank1
 10808  02E6  1303               	bcf	3,6	;RP1=0, select bank1
 10809  02E7  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10810  02E8  1283               	bcf	3,5	;RP0=0, select bank0
 10811  02E9  1303               	bcf	3,6	;RP1=0, select bank0
 10812  02EA  0828               	movf	?___llmod,w
 10813  02EB  1683               	bsf	3,5	;RP0=1, select bank1
 10814  02EC  1303               	bcf	3,6	;RP1=0, select bank1
 10815  02ED  00BB               	movwf	sprintf@tmpval^(0+128)
 10816  02EE                     l4289:
 10817                           
 10818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10819  02EE  083B               	movf	sprintf@tmpval^(0+128),w
 10820  02EF  3E30               	addlw	48
 10821  02F0  00AD               	movwf	??_sprintf^(0+128)
 10822  02F1  0849               	movf	sprintf@sp^(0+128),w
 10823  02F2  0084               	movwf	4
 10824  02F3  082D               	movf	??_sprintf^(0+128),w
 10825  02F4  1783               	bsf	3,7	;select IRP bank2
 10826  02F5  0080               	movwf	0
 10827  02F6  3001               	movlw	1
 10828  02F7  00AD               	movwf	??_sprintf^(0+128)
 10829  02F8  082D               	movf	??_sprintf^(0+128),w
 10830  02F9  07C9               	addwf	sprintf@sp^(0+128),f
 10831  02FA                     l361:	
 10832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10833                           
 10834                           
 10835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10836  02FA  3001               	movlw	1
 10837  02FB  02CC               	subwf	sprintf@c^(0+128),f
 10838  02FC  0A4C               	incf	sprintf@c^(0+128),w
 10839  02FD  1D03               	btfss	3,2
 10840  02FE  2B00               	goto	u7181
 10841  02FF  2B01               	goto	u7180
 10842  0300                     u7181:
 10843  0300  2A54               	goto	l4285
 10844  0301                     u7180:
 10845  0301  2B15               	goto	l4297
 10846  0302                     l4291:
 10847                           
 10848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10849  0302  3030               	movlw	48
 10850  0303  1683               	bsf	3,5	;RP0=1, select bank1
 10851  0304  1303               	bcf	3,6	;RP1=0, select bank1
 10852  0305  00AD               	movwf	??_sprintf^(0+128)
 10853  0306  0849               	movf	sprintf@sp^(0+128),w
 10854  0307  0084               	movwf	4
 10855  0308  082D               	movf	??_sprintf^(0+128),w
 10856  0309  1783               	bsf	3,7	;select IRP bank2
 10857  030A  0080               	movwf	0
 10858  030B                     l4293:
 10859  030B  3001               	movlw	1
 10860  030C  00AD               	movwf	??_sprintf^(0+128)
 10861  030D  082D               	movf	??_sprintf^(0+128),w
 10862  030E  07C9               	addwf	sprintf@sp^(0+128),f
 10863  030F                     l4295:
 10864                           
 10865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10866  030F  30FF               	movlw	255
 10867  0310  07C3               	addwf	sprintf@eexp^(0+128),f
 10868  0311  1803               	skipnc
 10869  0312  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10870  0313  30FF               	movlw	255
 10871  0314  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10872  0315                     l4297:
 10873                           
 10874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10875  0315  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10876  0316  3A80               	xorlw	128
 10877  0317  00FF               	movwf	btemp+1
 10878  0318  3080               	movlw	128
 10879  0319  027F               	subwf	btemp+1,w
 10880  031A  1D03               	skipz
 10881  031B  2B1E               	goto	u7195
 10882  031C  3001               	movlw	1
 10883  031D  0243               	subwf	sprintf@eexp^(0+128),w
 10884  031E                     u7195:
 10885  031E  1803               	skipnc
 10886  031F  2B21               	goto	u7191
 10887  0320  2B22               	goto	u7190
 10888  0321                     u7191:
 10889  0321  2B02               	goto	l4291
 10890  0322                     u7190:
 10891  0322                     l4299:
 10892                           
 10893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10894  0322  1683               	bsf	3,5	;RP0=1, select bank1
 10895  0323  1303               	bcf	3,6	;RP1=0, select bank1
 10896  0324  084B               	movf	(sprintf@prec+1)^(0+128),w
 10897  0325  3A80               	xorlw	128
 10898  0326  00FF               	movwf	btemp+1
 10899  0327  3080               	movlw	128
 10900  0328  027F               	subwf	btemp+1,w
 10901  0329  1D03               	skipz
 10902  032A  2B2D               	goto	u7205
 10903  032B  3009               	movlw	9
 10904  032C  024A               	subwf	sprintf@prec^(0+128),w
 10905  032D                     u7205:
 10906  032D  1C03               	skipc
 10907  032E  2B30               	goto	u7201
 10908  032F  2B31               	goto	u7200
 10909  0330                     u7201:
 10910  0330  2B38               	goto	l4303
 10911  0331                     u7200:
 10912  0331                     l4301:
 10913                           
 10914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10915  0331  3008               	movlw	8
 10916  0332  1683               	bsf	3,5	;RP0=1, select bank1
 10917  0333  1303               	bcf	3,6	;RP1=0, select bank1
 10918  0334  00AD               	movwf	??_sprintf^(0+128)
 10919  0335  082D               	movf	??_sprintf^(0+128),w
 10920  0336  00CC               	movwf	sprintf@c^(0+128)
 10921  0337  2B3E               	goto	l368
 10922  0338                     l4303:
 10923                           
 10924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10925  0338  1683               	bsf	3,5	;RP0=1, select bank1
 10926  0339  1303               	bcf	3,6	;RP1=0, select bank1
 10927  033A  084A               	movf	sprintf@prec^(0+128),w
 10928  033B  00AD               	movwf	??_sprintf^(0+128)
 10929  033C  082D               	movf	??_sprintf^(0+128),w
 10930  033D  00CC               	movwf	sprintf@c^(0+128)
 10931  033E                     l368:
 10932                           
 10933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10934  033E  084C               	movf	sprintf@c^(0+128),w
 10935  033F  00AD               	movwf	??_sprintf^(0+128)
 10936  0340  01AE               	clrf	(??_sprintf^(0+128)+1)
 10937  0341  082D               	movf	??_sprintf^(0+128),w
 10938  0342  02CA               	subwf	sprintf@prec^(0+128),f
 10939  0343  082E               	movf	(??_sprintf+1)^(0+128),w
 10940  0344  1C03               	skipc
 10941  0345  03CB               	decf	(sprintf@prec+1)^(0+128),f
 10942  0346  02CB               	subwf	(sprintf@prec+1)^(0+128),f
 10943  0347                     l4305:
 10944                           
 10945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10946  0347  084C               	movf	sprintf@c^(0+128),w
 10947  0348  1903               	btfsc	3,2
 10948  0349  2B4B               	goto	u7211
 10949  034A  2B4C               	goto	u7210
 10950  034B                     u7211:
 10951  034B  2B57               	goto	l4311
 10952  034C                     u7210:
 10953  034C                     l4307:
 10954                           
 10955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10956  034C  302E               	movlw	46
 10957  034D  00AD               	movwf	??_sprintf^(0+128)
 10958  034E  0849               	movf	sprintf@sp^(0+128),w
 10959  034F  0084               	movwf	4
 10960  0350  082D               	movf	??_sprintf^(0+128),w
 10961  0351  1783               	bsf	3,7	;select IRP bank2
 10962  0352  0080               	movwf	0
 10963  0353                     l4309:
 10964  0353  3001               	movlw	1
 10965  0354  00AD               	movwf	??_sprintf^(0+128)
 10966  0355  082D               	movf	??_sprintf^(0+128),w
 10967  0356  07C9               	addwf	sprintf@sp^(0+128),f
 10968  0357                     l4311:
 10969                           
 10970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10971  0357  084C               	movf	sprintf@c^(0+128),w
 10972  0358  120A  158A  249D  120A  118A  	fcall	_scale
 10973  035D  1283               	bcf	3,5	;RP0=0, select bank0
 10974  035E  1303               	bcf	3,6	;RP1=0, select bank0
 10975  035F  0847               	movf	?_scale+3,w
 10976  0360  1683               	bsf	3,5	;RP0=1, select bank1
 10977  0361  1303               	bcf	3,6	;RP1=0, select bank1
 10978  0362  00B5               	movwf	(_sprintf$1180+3)^(0+128)
 10979  0363  1283               	bcf	3,5	;RP0=0, select bank0
 10980  0364  1303               	bcf	3,6	;RP1=0, select bank0
 10981  0365  0846               	movf	?_scale+2,w
 10982  0366  1683               	bsf	3,5	;RP0=1, select bank1
 10983  0367  1303               	bcf	3,6	;RP1=0, select bank1
 10984  0368  00B4               	movwf	(_sprintf$1180+2)^(0+128)
 10985  0369  1283               	bcf	3,5	;RP0=0, select bank0
 10986  036A  1303               	bcf	3,6	;RP1=0, select bank0
 10987  036B  0845               	movf	?_scale+1,w
 10988  036C  1683               	bsf	3,5	;RP0=1, select bank1
 10989  036D  1303               	bcf	3,6	;RP1=0, select bank1
 10990  036E  00B3               	movwf	(_sprintf$1180+1)^(0+128)
 10991  036F  1283               	bcf	3,5	;RP0=0, select bank0
 10992  0370  1303               	bcf	3,6	;RP1=0, select bank0
 10993  0371  0844               	movf	?_scale,w
 10994  0372  1683               	bsf	3,5	;RP0=1, select bank1
 10995  0373  1303               	bcf	3,6	;RP1=0, select bank1
 10996  0374  00B2               	movwf	_sprintf$1180^(0+128)
 10997  0375                     l4313:
 10998                           
 10999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11000  0375  0835               	movf	(_sprintf$1180+3)^(0+128),w
 11001  0376  1283               	bcf	3,5	;RP0=0, select bank0
 11002  0377  1303               	bcf	3,6	;RP1=0, select bank0
 11003  0378  00B1               	movwf	___flmul@a+3
 11004  0379  1683               	bsf	3,5	;RP0=1, select bank1
 11005  037A  1303               	bcf	3,6	;RP1=0, select bank1
 11006  037B  0834               	movf	(_sprintf$1180+2)^(0+128),w
 11007  037C  1283               	bcf	3,5	;RP0=0, select bank0
 11008  037D  1303               	bcf	3,6	;RP1=0, select bank0
 11009  037E  00B0               	movwf	___flmul@a+2
 11010  037F  1683               	bsf	3,5	;RP0=1, select bank1
 11011  0380  1303               	bcf	3,6	;RP1=0, select bank1
 11012  0381  0833               	movf	(_sprintf$1180+1)^(0+128),w
 11013  0382  1283               	bcf	3,5	;RP0=0, select bank0
 11014  0383  1303               	bcf	3,6	;RP1=0, select bank0
 11015  0384  00AF               	movwf	___flmul@a+1
 11016  0385  1683               	bsf	3,5	;RP0=1, select bank1
 11017  0386  1303               	bcf	3,6	;RP1=0, select bank1
 11018  0387  0832               	movf	_sprintf$1180^(0+128),w
 11019  0388  1283               	bcf	3,5	;RP0=0, select bank0
 11020  0389  1303               	bcf	3,6	;RP1=0, select bank0
 11021  038A  00AE               	movwf	___flmul@a
 11022  038B  1683               	bsf	3,5	;RP0=1, select bank1
 11023  038C  1303               	bcf	3,6	;RP1=0, select bank1
 11024  038D  0848               	movf	(sprintf@fval+3)^(0+128),w
 11025  038E  1283               	bcf	3,5	;RP0=0, select bank0
 11026  038F  1303               	bcf	3,6	;RP1=0, select bank0
 11027  0390  00AD               	movwf	___flmul@b+3
 11028  0391  1683               	bsf	3,5	;RP0=1, select bank1
 11029  0392  1303               	bcf	3,6	;RP1=0, select bank1
 11030  0393  0847               	movf	(sprintf@fval+2)^(0+128),w
 11031  0394  1283               	bcf	3,5	;RP0=0, select bank0
 11032  0395  1303               	bcf	3,6	;RP1=0, select bank0
 11033  0396  00AC               	movwf	___flmul@b+2
 11034  0397  1683               	bsf	3,5	;RP0=1, select bank1
 11035  0398  1303               	bcf	3,6	;RP1=0, select bank1
 11036  0399  0846               	movf	(sprintf@fval+1)^(0+128),w
 11037  039A  1283               	bcf	3,5	;RP0=0, select bank0
 11038  039B  1303               	bcf	3,6	;RP1=0, select bank0
 11039  039C  00AB               	movwf	___flmul@b+1
 11040  039D  1683               	bsf	3,5	;RP0=1, select bank1
 11041  039E  1303               	bcf	3,6	;RP1=0, select bank1
 11042  039F  0845               	movf	sprintf@fval^(0+128),w
 11043  03A0  1283               	bcf	3,5	;RP0=0, select bank0
 11044  03A1  1303               	bcf	3,6	;RP1=0, select bank0
 11045  03A2  00AA               	movwf	___flmul@b
 11046  03A3  120A  158A  213C  120A  118A  	fcall	___flmul
 11047  03A8  1283               	bcf	3,5	;RP0=0, select bank0
 11048  03A9  1303               	bcf	3,6	;RP1=0, select bank0
 11049  03AA  082D               	movf	?___flmul+3,w
 11050  03AB  00DA               	movwf	___fltol@f1+3
 11051  03AC  082C               	movf	?___flmul+2,w
 11052  03AD  00D9               	movwf	___fltol@f1+2
 11053  03AE  082B               	movf	?___flmul+1,w
 11054  03AF  00D8               	movwf	___fltol@f1+1
 11055  03B0  082A               	movf	?___flmul,w
 11056  03B1  00D7               	movwf	___fltol@f1
 11057  03B2  120A  118A  2779  120A  118A  	fcall	___fltol
 11058  03B7  1283               	bcf	3,5	;RP0=0, select bank0
 11059  03B8  1303               	bcf	3,6	;RP1=0, select bank0
 11060  03B9  085A               	movf	?___fltol+3,w
 11061  03BA  1683               	bsf	3,5	;RP0=1, select bank1
 11062  03BB  1303               	bcf	3,6	;RP1=0, select bank1
 11063  03BC  00C2               	movwf	(sprintf@val+3)^(0+128)
 11064  03BD  1283               	bcf	3,5	;RP0=0, select bank0
 11065  03BE  1303               	bcf	3,6	;RP1=0, select bank0
 11066  03BF  0859               	movf	?___fltol+2,w
 11067  03C0  1683               	bsf	3,5	;RP0=1, select bank1
 11068  03C1  1303               	bcf	3,6	;RP1=0, select bank1
 11069  03C2  00C1               	movwf	(sprintf@val+2)^(0+128)
 11070  03C3  1283               	bcf	3,5	;RP0=0, select bank0
 11071  03C4  1303               	bcf	3,6	;RP1=0, select bank0
 11072  03C5  0858               	movf	?___fltol+1,w
 11073  03C6  1683               	bsf	3,5	;RP0=1, select bank1
 11074  03C7  1303               	bcf	3,6	;RP1=0, select bank1
 11075  03C8  00C0               	movwf	(sprintf@val+1)^(0+128)
 11076  03C9  1283               	bcf	3,5	;RP0=0, select bank0
 11077  03CA  1303               	bcf	3,6	;RP1=0, select bank0
 11078  03CB  0857               	movf	?___fltol,w
 11079  03CC  1683               	bsf	3,5	;RP0=1, select bank1
 11080  03CD  1303               	bcf	3,6	;RP1=0, select bank1
 11081  03CE  00BF               	movwf	sprintf@val^(0+128)
 11082                           
 11083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11084  03CF  2CD1               	goto	l4323
 11085  03D0                     l4315:
 11086                           
 11087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11088  03D0  084C               	movf	sprintf@c^(0+128),w
 11089  03D1  00AD               	movwf	??_sprintf^(0+128)
 11090  03D2  3001               	movlw	1
 11091  03D3                     u7225:
 11092  03D3  1003               	clrc
 11093  03D4  0DAD               	rlf	??_sprintf^(0+128),f
 11094  03D5  3EFF               	addlw	-1
 11095  03D6  1D03               	skipz
 11096  03D7  2BD3               	goto	u7225
 11097  03D8  1003               	clrc
 11098  03D9  0D2D               	rlf	??_sprintf^(0+128),w
 11099  03DA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11100  03DB  0084               	movwf	4
 11101  03DC  120A  158A  200A  120A  118A  	fcall	stringdir
 11102  03E1  1283               	bcf	3,5	;RP0=0, select bank0
 11103  03E2  1303               	bcf	3,6	;RP1=0, select bank0
 11104  03E3  00A0               	movwf	___lldiv@divisor
 11105  03E4  120A  158A  200A  120A  118A  	fcall	stringdir
 11106  03E9  00A1               	movwf	___lldiv@divisor+1
 11107  03EA  120A  158A  200A  120A  118A  	fcall	stringdir
 11108  03EF  00A2               	movwf	___lldiv@divisor+2
 11109  03F0  120A  158A  200A  120A  118A  	fcall	stringdir
 11110  03F5  00A3               	movwf	___lldiv@divisor+3
 11111  03F6  1683               	bsf	3,5	;RP0=1, select bank1
 11112  03F7  1303               	bcf	3,6	;RP1=0, select bank1
 11113  03F8  0842               	movf	(sprintf@val+3)^(0+128),w
 11114  03F9  1283               	bcf	3,5	;RP0=0, select bank0
 11115  03FA  1303               	bcf	3,6	;RP1=0, select bank0
 11116  03FB  00A7               	movwf	___lldiv@dividend+3
 11117  03FC  1683               	bsf	3,5	;RP0=1, select bank1
 11118  03FD  1303               	bcf	3,6	;RP1=0, select bank1
 11119  03FE  0841               	movf	(sprintf@val+2)^(0+128),w
 11120  03FF  1283               	bcf	3,5	;RP0=0, select bank0
 11121  0400  1303               	bcf	3,6	;RP1=0, select bank0
 11122  0401  00A6               	movwf	___lldiv@dividend+2
 11123  0402  1683               	bsf	3,5	;RP0=1, select bank1
 11124  0403  1303               	bcf	3,6	;RP1=0, select bank1
 11125  0404  0840               	movf	(sprintf@val+1)^(0+128),w
 11126  0405  1283               	bcf	3,5	;RP0=0, select bank0
 11127  0406  1303               	bcf	3,6	;RP1=0, select bank0
 11128  0407  00A5               	movwf	___lldiv@dividend+1
 11129  0408  1683               	bsf	3,5	;RP0=1, select bank1
 11130  0409  1303               	bcf	3,6	;RP1=0, select bank1
 11131  040A  083F               	movf	sprintf@val^(0+128),w
 11132  040B  1283               	bcf	3,5	;RP0=0, select bank0
 11133  040C  1303               	bcf	3,6	;RP1=0, select bank0
 11134  040D  00A4               	movwf	___lldiv@dividend
 11135  040E  160A  158A  242A  120A  118A  	fcall	___lldiv
 11136  0413  1283               	bcf	3,5	;RP0=0, select bank0
 11137  0414  1303               	bcf	3,6	;RP1=0, select bank0
 11138  0415  0823               	movf	?___lldiv+3,w
 11139  0416  1683               	bsf	3,5	;RP0=1, select bank1
 11140  0417  1303               	bcf	3,6	;RP1=0, select bank1
 11141  0418  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 11142  0419  1283               	bcf	3,5	;RP0=0, select bank0
 11143  041A  1303               	bcf	3,6	;RP1=0, select bank0
 11144  041B  0822               	movf	?___lldiv+2,w
 11145  041C  1683               	bsf	3,5	;RP0=1, select bank1
 11146  041D  1303               	bcf	3,6	;RP1=0, select bank1
 11147  041E  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 11148  041F  1283               	bcf	3,5	;RP0=0, select bank0
 11149  0420  1303               	bcf	3,6	;RP1=0, select bank0
 11150  0421  0821               	movf	?___lldiv+1,w
 11151  0422  1683               	bsf	3,5	;RP0=1, select bank1
 11152  0423  1303               	bcf	3,6	;RP1=0, select bank1
 11153  0424  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 11154  0425  1283               	bcf	3,5	;RP0=0, select bank0
 11155  0426  1303               	bcf	3,6	;RP1=0, select bank0
 11156  0427  0820               	movf	?___lldiv,w
 11157  0428  1683               	bsf	3,5	;RP0=1, select bank1
 11158  0429  1303               	bcf	3,6	;RP1=0, select bank1
 11159  042A  00BB               	movwf	sprintf@tmpval^(0+128)
 11160  042B                     l4317:
 11161                           
 11162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11163  042B  3000               	movlw	0
 11164  042C  1283               	bcf	3,5	;RP0=0, select bank0
 11165  042D  1303               	bcf	3,6	;RP1=0, select bank0
 11166  042E  00AB               	movwf	___llmod@divisor+3
 11167  042F  3000               	movlw	0
 11168  0430  00AA               	movwf	___llmod@divisor+2
 11169  0431  3000               	movlw	0
 11170  0432  00A9               	movwf	___llmod@divisor+1
 11171  0433  300A               	movlw	10
 11172  0434  00A8               	movwf	___llmod@divisor
 11173  0435  1683               	bsf	3,5	;RP0=1, select bank1
 11174  0436  1303               	bcf	3,6	;RP1=0, select bank1
 11175  0437  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 11176  0438  1283               	bcf	3,5	;RP0=0, select bank0
 11177  0439  1303               	bcf	3,6	;RP1=0, select bank0
 11178  043A  00AF               	movwf	___llmod@dividend+3
 11179  043B  1683               	bsf	3,5	;RP0=1, select bank1
 11180  043C  1303               	bcf	3,6	;RP1=0, select bank1
 11181  043D  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 11182  043E  1283               	bcf	3,5	;RP0=0, select bank0
 11183  043F  1303               	bcf	3,6	;RP1=0, select bank0
 11184  0440  00AE               	movwf	___llmod@dividend+2
 11185  0441  1683               	bsf	3,5	;RP0=1, select bank1
 11186  0442  1303               	bcf	3,6	;RP1=0, select bank1
 11187  0443  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 11188  0444  1283               	bcf	3,5	;RP0=0, select bank0
 11189  0445  1303               	bcf	3,6	;RP1=0, select bank0
 11190  0446  00AD               	movwf	___llmod@dividend+1
 11191  0447  1683               	bsf	3,5	;RP0=1, select bank1
 11192  0448  1303               	bcf	3,6	;RP1=0, select bank1
 11193  0449  083B               	movf	sprintf@tmpval^(0+128),w
 11194  044A  1283               	bcf	3,5	;RP0=0, select bank0
 11195  044B  1303               	bcf	3,6	;RP1=0, select bank0
 11196  044C  00AC               	movwf	___llmod@dividend
 11197  044D  160A  158A  237B  120A  118A  	fcall	___llmod
 11198  0452  1283               	bcf	3,5	;RP0=0, select bank0
 11199  0453  1303               	bcf	3,6	;RP1=0, select bank0
 11200  0454  082B               	movf	?___llmod+3,w
 11201  0455  1683               	bsf	3,5	;RP0=1, select bank1
 11202  0456  1303               	bcf	3,6	;RP1=0, select bank1
 11203  0457  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 11204  0458  1283               	bcf	3,5	;RP0=0, select bank0
 11205  0459  1303               	bcf	3,6	;RP1=0, select bank0
 11206  045A  082A               	movf	?___llmod+2,w
 11207  045B  1683               	bsf	3,5	;RP0=1, select bank1
 11208  045C  1303               	bcf	3,6	;RP1=0, select bank1
 11209  045D  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 11210  045E  1283               	bcf	3,5	;RP0=0, select bank0
 11211  045F  1303               	bcf	3,6	;RP1=0, select bank0
 11212  0460  0829               	movf	?___llmod+1,w
 11213  0461  1683               	bsf	3,5	;RP0=1, select bank1
 11214  0462  1303               	bcf	3,6	;RP1=0, select bank1
 11215  0463  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 11216  0464  1283               	bcf	3,5	;RP0=0, select bank0
 11217  0465  1303               	bcf	3,6	;RP1=0, select bank0
 11218  0466  0828               	movf	?___llmod,w
 11219  0467  1683               	bsf	3,5	;RP0=1, select bank1
 11220  0468  1303               	bcf	3,6	;RP1=0, select bank1
 11221  0469  00BB               	movwf	sprintf@tmpval^(0+128)
 11222  046A                     l4319:
 11223                           
 11224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11225  046A  083B               	movf	sprintf@tmpval^(0+128),w
 11226  046B  3E30               	addlw	48
 11227  046C  00AD               	movwf	??_sprintf^(0+128)
 11228  046D  0849               	movf	sprintf@sp^(0+128),w
 11229  046E  0084               	movwf	4
 11230  046F  082D               	movf	??_sprintf^(0+128),w
 11231  0470  1783               	bsf	3,7	;select IRP bank2
 11232  0471  0080               	movwf	0
 11233  0472  3001               	movlw	1
 11234  0473  00AD               	movwf	??_sprintf^(0+128)
 11235  0474  082D               	movf	??_sprintf^(0+128),w
 11236  0475  07C9               	addwf	sprintf@sp^(0+128),f
 11237  0476                     l4321:
 11238                           
 11239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11240  0476  084C               	movf	sprintf@c^(0+128),w
 11241  0477  00AD               	movwf	??_sprintf^(0+128)
 11242  0478  3001               	movlw	1
 11243  0479                     u7235:
 11244  0479  1003               	clrc
 11245  047A  0DAD               	rlf	??_sprintf^(0+128),f
 11246  047B  3EFF               	addlw	-1
 11247  047C  1D03               	skipz
 11248  047D  2C79               	goto	u7235
 11249  047E  1003               	clrc
 11250  047F  0D2D               	rlf	??_sprintf^(0+128),w
 11251  0480  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11252  0481  0084               	movwf	4
 11253  0482  120A  158A  200A  120A  118A  	fcall	stringdir
 11254  0487  1283               	bcf	3,5	;RP0=0, select bank0
 11255  0488  1303               	bcf	3,6	;RP1=0, select bank0
 11256  0489  00A8               	movwf	___llmod@divisor
 11257  048A  120A  158A  200A  120A  118A  	fcall	stringdir
 11258  048F  00A9               	movwf	___llmod@divisor+1
 11259  0490  120A  158A  200A  120A  118A  	fcall	stringdir
 11260  0495  00AA               	movwf	___llmod@divisor+2
 11261  0496  120A  158A  200A  120A  118A  	fcall	stringdir
 11262  049B  00AB               	movwf	___llmod@divisor+3
 11263  049C  1683               	bsf	3,5	;RP0=1, select bank1
 11264  049D  1303               	bcf	3,6	;RP1=0, select bank1
 11265  049E  0842               	movf	(sprintf@val+3)^(0+128),w
 11266  049F  1283               	bcf	3,5	;RP0=0, select bank0
 11267  04A0  1303               	bcf	3,6	;RP1=0, select bank0
 11268  04A1  00AF               	movwf	___llmod@dividend+3
 11269  04A2  1683               	bsf	3,5	;RP0=1, select bank1
 11270  04A3  1303               	bcf	3,6	;RP1=0, select bank1
 11271  04A4  0841               	movf	(sprintf@val+2)^(0+128),w
 11272  04A5  1283               	bcf	3,5	;RP0=0, select bank0
 11273  04A6  1303               	bcf	3,6	;RP1=0, select bank0
 11274  04A7  00AE               	movwf	___llmod@dividend+2
 11275  04A8  1683               	bsf	3,5	;RP0=1, select bank1
 11276  04A9  1303               	bcf	3,6	;RP1=0, select bank1
 11277  04AA  0840               	movf	(sprintf@val+1)^(0+128),w
 11278  04AB  1283               	bcf	3,5	;RP0=0, select bank0
 11279  04AC  1303               	bcf	3,6	;RP1=0, select bank0
 11280  04AD  00AD               	movwf	___llmod@dividend+1
 11281  04AE  1683               	bsf	3,5	;RP0=1, select bank1
 11282  04AF  1303               	bcf	3,6	;RP1=0, select bank1
 11283  04B0  083F               	movf	sprintf@val^(0+128),w
 11284  04B1  1283               	bcf	3,5	;RP0=0, select bank0
 11285  04B2  1303               	bcf	3,6	;RP1=0, select bank0
 11286  04B3  00AC               	movwf	___llmod@dividend
 11287  04B4  160A  158A  237B  120A  118A  	fcall	___llmod
 11288  04B9  1283               	bcf	3,5	;RP0=0, select bank0
 11289  04BA  1303               	bcf	3,6	;RP1=0, select bank0
 11290  04BB  082B               	movf	?___llmod+3,w
 11291  04BC  1683               	bsf	3,5	;RP0=1, select bank1
 11292  04BD  1303               	bcf	3,6	;RP1=0, select bank1
 11293  04BE  00C2               	movwf	(sprintf@val+3)^(0+128)
 11294  04BF  1283               	bcf	3,5	;RP0=0, select bank0
 11295  04C0  1303               	bcf	3,6	;RP1=0, select bank0
 11296  04C1  082A               	movf	?___llmod+2,w
 11297  04C2  1683               	bsf	3,5	;RP0=1, select bank1
 11298  04C3  1303               	bcf	3,6	;RP1=0, select bank1
 11299  04C4  00C1               	movwf	(sprintf@val+2)^(0+128)
 11300  04C5  1283               	bcf	3,5	;RP0=0, select bank0
 11301  04C6  1303               	bcf	3,6	;RP1=0, select bank0
 11302  04C7  0829               	movf	?___llmod+1,w
 11303  04C8  1683               	bsf	3,5	;RP0=1, select bank1
 11304  04C9  1303               	bcf	3,6	;RP1=0, select bank1
 11305  04CA  00C0               	movwf	(sprintf@val+1)^(0+128)
 11306  04CB  1283               	bcf	3,5	;RP0=0, select bank0
 11307  04CC  1303               	bcf	3,6	;RP1=0, select bank0
 11308  04CD  0828               	movf	?___llmod,w
 11309  04CE  1683               	bsf	3,5	;RP0=1, select bank1
 11310  04CF  1303               	bcf	3,6	;RP1=0, select bank1
 11311  04D0  00BF               	movwf	sprintf@val^(0+128)
 11312  04D1                     l4323:
 11313                           
 11314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11315  04D1  3001               	movlw	1
 11316  04D2  02CC               	subwf	sprintf@c^(0+128),f
 11317  04D3  0A4C               	incf	sprintf@c^(0+128),w
 11318  04D4  1D03               	btfss	3,2
 11319  04D5  2CD7               	goto	u7241
 11320  04D6  2CD8               	goto	u7240
 11321  04D7                     u7241:
 11322  04D7  2BD0               	goto	l4315
 11323  04D8                     u7240:
 11324  04D8  2CEA               	goto	l4331
 11325  04D9                     l4325:
 11326                           
 11327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11328  04D9  3030               	movlw	48
 11329  04DA  00AD               	movwf	??_sprintf^(0+128)
 11330  04DB  0849               	movf	sprintf@sp^(0+128),w
 11331  04DC  0084               	movwf	4
 11332  04DD  082D               	movf	??_sprintf^(0+128),w
 11333  04DE  1783               	bsf	3,7	;select IRP bank2
 11334  04DF  0080               	movwf	0
 11335  04E0                     l4327:
 11336  04E0  3001               	movlw	1
 11337  04E1  00AD               	movwf	??_sprintf^(0+128)
 11338  04E2  082D               	movf	??_sprintf^(0+128),w
 11339  04E3  07C9               	addwf	sprintf@sp^(0+128),f
 11340  04E4                     l4329:
 11341                           
 11342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11343  04E4  30FF               	movlw	255
 11344  04E5  07CA               	addwf	sprintf@prec^(0+128),f
 11345  04E6  1803               	skipnc
 11346  04E7  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11347  04E8  30FF               	movlw	255
 11348  04E9  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11349  04EA                     l4331:
 11350                           
 11351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11352  04EA  084A               	movf	sprintf@prec^(0+128),w
 11353  04EB  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11354  04EC  1D03               	btfss	3,2
 11355  04ED  2CEF               	goto	u7251
 11356  04EE  2CF0               	goto	u7250
 11357  04EF                     u7251:
 11358  04EF  2CD9               	goto	l4325
 11359  04F0                     u7250:
 11360  04F0  2EA0               	goto	l4411
 11361  04F1                     l4333:
 11362                           
 11363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11364  04F1  0836               	movf	sprintf@ap^(0+128),w
 11365  04F2  0084               	movwf	4
 11366  04F3  1383               	bcf	3,7	;select IRP bank0
 11367  04F4  0800               	movf	0,w
 11368  04F5  00AD               	movwf	??_sprintf^(0+128)
 11369  04F6  0A84               	incf	4,f
 11370  04F7  0800               	movf	0,w
 11371  04F8  00AE               	movwf	(??_sprintf^(0+128)+1)
 11372  04F9  082D               	movf	??_sprintf^(0+128),w
 11373  04FA  00BF               	movwf	sprintf@val^(0+128)
 11374  04FB  082E               	movf	(??_sprintf+1)^(0+128),w
 11375  04FC  00C0               	movwf	(sprintf@val+1)^(0+128)
 11376  04FD  3000               	movlw	0
 11377  04FE  1BC0               	btfsc	(sprintf@val+1)^(0+128),7
 11378  04FF  30FF               	movlw	255
 11379  0500  00C1               	movwf	(sprintf@val+2)^(0+128)
 11380  0501  00C2               	movwf	(sprintf@val+3)^(0+128)
 11381  0502                     l4335:
 11382  0502  3002               	movlw	2
 11383  0503  00AD               	movwf	??_sprintf^(0+128)
 11384  0504  082D               	movf	??_sprintf^(0+128),w
 11385  0505  07B6               	addwf	sprintf@ap^(0+128),f
 11386  0506                     l4337:
 11387                           
 11388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11389  0506  1FC2               	btfss	(sprintf@val+3)^(0+128),7
 11390  0507  2D09               	goto	u7261
 11391  0508  2D0A               	goto	u7260
 11392  0509                     u7261:
 11393  0509  2D19               	goto	l4343
 11394  050A                     u7260:
 11395  050A                     l4339:
 11396                           
 11397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11398  050A  3003               	movlw	3
 11399  050B  04B7               	iorwf	sprintf@flag^(0+128),f
 11400  050C  3000               	movlw	0
 11401  050D  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
 11402  050E                     l4341:
 11403                           
 11404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11405  050E  09BF               	comf	sprintf@val^(0+128),f
 11406  050F  09C0               	comf	(sprintf@val+1)^(0+128),f
 11407  0510  09C1               	comf	(sprintf@val+2)^(0+128),f
 11408  0511  09C2               	comf	(sprintf@val+3)^(0+128),f
 11409  0512  0ABF               	incf	sprintf@val^(0+128),f
 11410  0513  1903               	skipnz
 11411  0514  0AC0               	incf	(sprintf@val+1)^(0+128),f
 11412  0515  1903               	skipnz
 11413  0516  0AC1               	incf	(sprintf@val+2)^(0+128),f
 11414  0517  1903               	skipnz
 11415  0518  0AC2               	incf	(sprintf@val+3)^(0+128),f
 11416  0519                     l4343:
 11417                           
 11418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11419  0519  084A               	movf	sprintf@prec^(0+128),w
 11420  051A  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11421  051B  1D03               	btfss	3,2
 11422  051C  2D1E               	goto	u7271
 11423  051D  2D1F               	goto	u7270
 11424  051E                     u7271:
 11425  051E  2D2D               	goto	l4349
 11426  051F                     u7270:
 11427  051F                     l4345:
 11428  051F  0842               	movf	(sprintf@val+3)^(0+128),w
 11429  0520  0441               	iorwf	(sprintf@val+2)^(0+128),w
 11430  0521  0440               	iorwf	(sprintf@val+1)^(0+128),w
 11431  0522  043F               	iorwf	sprintf@val^(0+128),w
 11432  0523  1D03               	skipz
 11433  0524  2D26               	goto	u7281
 11434  0525  2D27               	goto	u7280
 11435  0526                     u7281:
 11436  0526  2D2D               	goto	l4349
 11437  0527                     u7280:
 11438  0527                     l4347:
 11439                           
 11440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11441  0527  3001               	movlw	1
 11442  0528  07CA               	addwf	sprintf@prec^(0+128),f
 11443  0529  1803               	skipnc
 11444  052A  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11445  052B  3000               	movlw	0
 11446  052C  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11447  052D                     l4349:
 11448                           
 11449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11450  052D  01CC               	clrf	sprintf@c^(0+128)
 11451  052E  0ACC               	incf	sprintf@c^(0+128),f
 11452  052F                     l4355:
 11453                           
 11454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11455  052F  084C               	movf	sprintf@c^(0+128),w
 11456  0530  00AD               	movwf	??_sprintf^(0+128)
 11457  0531  3001               	movlw	1
 11458  0532                     u7295:
 11459  0532  1003               	clrc
 11460  0533  0DAD               	rlf	??_sprintf^(0+128),f
 11461  0534  3EFF               	addlw	-1
 11462  0535  1D03               	skipz
 11463  0536  2D32               	goto	u7295
 11464  0537  1003               	clrc
 11465  0538  0D2D               	rlf	??_sprintf^(0+128),w
 11466  0539  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11467  053A  0084               	movwf	4
 11468  053B  120A  158A  200A  120A  118A  	fcall	stringdir
 11469  0540  00AE               	movwf	(??_sprintf+1)^(0+128)
 11470  0541  120A  158A  200A  120A  118A  	fcall	stringdir
 11471  0546  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 11472  0547  120A  158A  200A  120A  118A  	fcall	stringdir
 11473  054C  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 11474  054D  120A  158A  200A  120A  118A  	fcall	stringdir
 11475  0552  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 11476  0553  0831               	movf	(??_sprintf+4)^(0+128),w
 11477  0554  0242               	subwf	(sprintf@val+3)^(0+128),w
 11478  0555  1D03               	skipz
 11479  0556  2D61               	goto	u7305
 11480  0557  0830               	movf	(??_sprintf+3)^(0+128),w
 11481  0558  0241               	subwf	(sprintf@val+2)^(0+128),w
 11482  0559  1D03               	skipz
 11483  055A  2D61               	goto	u7305
 11484  055B  082F               	movf	(??_sprintf+2)^(0+128),w
 11485  055C  0240               	subwf	(sprintf@val+1)^(0+128),w
 11486  055D  1D03               	skipz
 11487  055E  2D61               	goto	u7305
 11488  055F  082E               	movf	(??_sprintf+1)^(0+128),w
 11489  0560  023F               	subwf	sprintf@val^(0+128),w
 11490  0561                     u7305:
 11491  0561  1803               	skipnc
 11492  0562  2D64               	goto	u7301
 11493  0563  2D65               	goto	u7300
 11494  0564                     u7301:
 11495  0564  2D66               	goto	l4359
 11496  0565                     u7300:
 11497  0565  2D70               	goto	l4361
 11498  0566                     l4359:
 11499  0566  3001               	movlw	1
 11500  0567  00AD               	movwf	??_sprintf^(0+128)
 11501  0568  082D               	movf	??_sprintf^(0+128),w
 11502  0569  07CC               	addwf	sprintf@c^(0+128),f
 11503  056A  300A               	movlw	10
 11504  056B  064C               	xorwf	sprintf@c^(0+128),w
 11505  056C  1D03               	btfss	3,2
 11506  056D  2D6F               	goto	u7311
 11507  056E  2D70               	goto	u7310
 11508  056F                     u7311:
 11509  056F  2D2F               	goto	l4355
 11510  0570                     u7310:
 11511  0570                     l4361:
 11512                           
 11513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11514  0570  084B               	movf	(sprintf@prec+1)^(0+128),w
 11515  0571  3A80               	xorlw	128
 11516  0572  3C80               	sublw	128
 11517  0573  1D03               	skipz
 11518  0574  2D77               	goto	u7325
 11519  0575  084A               	movf	sprintf@prec^(0+128),w
 11520  0576  024C               	subwf	sprintf@c^(0+128),w
 11521  0577                     u7325:
 11522  0577  1803               	skipnc
 11523  0578  2D7A               	goto	u7321
 11524  0579  2D7B               	goto	u7320
 11525  057A                     u7321:
 11526  057A  2D82               	goto	l4365
 11527  057B                     u7320:
 11528  057B                     l4363:
 11529                           
 11530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11531  057B  1683               	bsf	3,5	;RP0=1, select bank1
 11532  057C  1303               	bcf	3,6	;RP1=0, select bank1
 11533  057D  084A               	movf	sprintf@prec^(0+128),w
 11534  057E  00AD               	movwf	??_sprintf^(0+128)
 11535  057F  082D               	movf	??_sprintf^(0+128),w
 11536  0580  00CC               	movwf	sprintf@c^(0+128)
 11537  0581  2D9A               	goto	l4369
 11538  0582                     l4365:
 11539  0582  1683               	bsf	3,5	;RP0=1, select bank1
 11540  0583  1303               	bcf	3,6	;RP1=0, select bank1
 11541  0584  084B               	movf	(sprintf@prec+1)^(0+128),w
 11542  0585  3A80               	xorlw	128
 11543  0586  00AD               	movwf	??_sprintf^(0+128)
 11544  0587  3080               	movlw	128
 11545  0588  022D               	subwf	??_sprintf^(0+128),w
 11546  0589  1D03               	skipz
 11547  058A  2D8D               	goto	u7335
 11548  058B  084C               	movf	sprintf@c^(0+128),w
 11549  058C  024A               	subwf	sprintf@prec^(0+128),w
 11550  058D                     u7335:
 11551  058D  1803               	skipnc
 11552  058E  2D90               	goto	u7331
 11553  058F  2D91               	goto	u7330
 11554  0590                     u7331:
 11555  0590  2D9A               	goto	l4369
 11556  0591                     u7330:
 11557  0591                     l4367:
 11558                           
 11559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11560  0591  1683               	bsf	3,5	;RP0=1, select bank1
 11561  0592  1303               	bcf	3,6	;RP1=0, select bank1
 11562  0593  084C               	movf	sprintf@c^(0+128),w
 11563  0594  00AD               	movwf	??_sprintf^(0+128)
 11564  0595  01AE               	clrf	(??_sprintf^(0+128)+1)
 11565  0596  082D               	movf	??_sprintf^(0+128),w
 11566  0597  00CA               	movwf	sprintf@prec^(0+128)
 11567  0598  082E               	movf	(??_sprintf+1)^(0+128),w
 11568  0599  00CB               	movwf	(sprintf@prec+1)^(0+128)
 11569  059A                     l4369:
 11570                           
 11571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11572  059A  1683               	bsf	3,5	;RP0=1, select bank1
 11573  059B  1303               	bcf	3,6	;RP1=0, select bank1
 11574  059C  0839               	movf	sprintf@width^(0+128),w
 11575  059D  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11576  059E  1903               	btfsc	3,2
 11577  059F  2DA1               	goto	u7341
 11578  05A0  2DA2               	goto	u7340
 11579  05A1                     u7341:
 11580  05A1  2DB4               	goto	l4375
 11581  05A2                     u7340:
 11582  05A2                     l4371:
 11583  05A2  3003               	movlw	3
 11584  05A3  0537               	andwf	sprintf@flag^(0+128),w
 11585  05A4  00AD               	movwf	??_sprintf^(0+128)
 11586  05A5  3000               	movlw	0
 11587  05A6  0538               	andwf	(sprintf@flag+1)^(0+128),w
 11588  05A7  00AE               	movwf	(??_sprintf+1)^(0+128)
 11589  05A8  082D               	movf	??_sprintf^(0+128),w
 11590  05A9  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11591  05AA  1903               	btfsc	3,2
 11592  05AB  2DAD               	goto	u7351
 11593  05AC  2DAE               	goto	u7350
 11594  05AD                     u7351:
 11595  05AD  2DB4               	goto	l4375
 11596  05AE                     u7350:
 11597  05AE                     l4373:
 11598                           
 11599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11600  05AE  30FF               	movlw	255
 11601  05AF  07B9               	addwf	sprintf@width^(0+128),f
 11602  05B0  1803               	skipnc
 11603  05B1  0ABA               	incf	(sprintf@width+1)^(0+128),f
 11604  05B2  30FF               	movlw	255
 11605  05B3  07BA               	addwf	(sprintf@width+1)^(0+128),f
 11606  05B4                     l4375:
 11607                           
 11608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11609  05B4  1F38               	btfss	(sprintf@flag+1)^(0+128),6
 11610  05B5  2DB7               	goto	u7361
 11611  05B6  2DB8               	goto	u7360
 11612  05B7                     u7361:
 11613  05B7  2DD3               	goto	l4383
 11614  05B8                     u7360:
 11615  05B8                     l4377:
 11616                           
 11617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11618  05B8  084B               	movf	(sprintf@prec+1)^(0+128),w
 11619  05B9  3A80               	xorlw	128
 11620  05BA  00AD               	movwf	??_sprintf^(0+128)
 11621  05BB  083A               	movf	(sprintf@width+1)^(0+128),w
 11622  05BC  3A80               	xorlw	128
 11623  05BD  022D               	subwf	??_sprintf^(0+128),w
 11624  05BE  1D03               	skipz
 11625  05BF  2DC2               	goto	u7375
 11626  05C0  0839               	movf	sprintf@width^(0+128),w
 11627  05C1  024A               	subwf	sprintf@prec^(0+128),w
 11628  05C2                     u7375:
 11629  05C2  1803               	skipnc
 11630  05C3  2DC5               	goto	u7371
 11631  05C4  2DC6               	goto	u7370
 11632  05C5                     u7371:
 11633  05C5  2DCF               	goto	l4381
 11634  05C6                     u7370:
 11635  05C6                     l4379:
 11636                           
 11637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11638  05C6  1683               	bsf	3,5	;RP0=1, select bank1
 11639  05C7  1303               	bcf	3,6	;RP1=0, select bank1
 11640  05C8  084A               	movf	sprintf@prec^(0+128),w
 11641  05C9  02B9               	subwf	sprintf@width^(0+128),f
 11642  05CA  084B               	movf	(sprintf@prec+1)^(0+128),w
 11643  05CB  1C03               	skipc
 11644  05CC  03BA               	decf	(sprintf@width+1)^(0+128),f
 11645  05CD  02BA               	subwf	(sprintf@width+1)^(0+128),f
 11646  05CE  2DD3               	goto	l4383
 11647  05CF                     l4381:
 11648                           
 11649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11650  05CF  1683               	bsf	3,5	;RP0=1, select bank1
 11651  05D0  1303               	bcf	3,6	;RP1=0, select bank1
 11652  05D1  01B9               	clrf	sprintf@width^(0+128)
 11653  05D2  01BA               	clrf	(sprintf@width+1)^(0+128)
 11654  05D3                     l4383:
 11655                           
 11656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11657  05D3  083A               	movf	(sprintf@width+1)^(0+128),w
 11658  05D4  3A80               	xorlw	128
 11659  05D5  3C80               	sublw	128
 11660  05D6  1D03               	skipz
 11661  05D7  2DDA               	goto	u7385
 11662  05D8  0839               	movf	sprintf@width^(0+128),w
 11663  05D9  024C               	subwf	sprintf@c^(0+128),w
 11664  05DA                     u7385:
 11665  05DA  1803               	skipnc
 11666  05DB  2DDD               	goto	u7381
 11667  05DC  2DDE               	goto	u7380
 11668  05DD                     u7381:
 11669  05DD  2DEA               	goto	l4387
 11670  05DE                     u7380:
 11671  05DE                     l4385:
 11672                           
 11673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11674  05DE  1683               	bsf	3,5	;RP0=1, select bank1
 11675  05DF  1303               	bcf	3,6	;RP1=0, select bank1
 11676  05E0  084C               	movf	sprintf@c^(0+128),w
 11677  05E1  00AD               	movwf	??_sprintf^(0+128)
 11678  05E2  01AE               	clrf	(??_sprintf^(0+128)+1)
 11679  05E3  082D               	movf	??_sprintf^(0+128),w
 11680  05E4  02B9               	subwf	sprintf@width^(0+128),f
 11681  05E5  082E               	movf	(??_sprintf+1)^(0+128),w
 11682  05E6  1C03               	skipc
 11683  05E7  03BA               	decf	(sprintf@width+1)^(0+128),f
 11684  05E8  02BA               	subwf	(sprintf@width+1)^(0+128),f
 11685  05E9  2DEE               	goto	l4389
 11686  05EA                     l4387:
 11687                           
 11688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11689  05EA  1683               	bsf	3,5	;RP0=1, select bank1
 11690  05EB  1303               	bcf	3,6	;RP1=0, select bank1
 11691  05EC  01B9               	clrf	sprintf@width^(0+128)
 11692  05ED  01BA               	clrf	(sprintf@width+1)^(0+128)
 11693  05EE                     l4389:
 11694                           
 11695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11696  05EE  0839               	movf	sprintf@width^(0+128),w
 11697  05EF  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11698  05F0  1903               	btfsc	3,2
 11699  05F1  2DF3               	goto	u7391
 11700  05F2  2DF4               	goto	u7390
 11701  05F3                     u7391:
 11702  05F3  2E0B               	goto	l4397
 11703  05F4                     u7390:
 11704  05F4                     l4391:
 11705                           
 11706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11707  05F4  3020               	movlw	32
 11708  05F5  00AD               	movwf	??_sprintf^(0+128)
 11709  05F6  0849               	movf	sprintf@sp^(0+128),w
 11710  05F7  0084               	movwf	4
 11711  05F8  082D               	movf	??_sprintf^(0+128),w
 11712  05F9  1783               	bsf	3,7	;select IRP bank2
 11713  05FA  0080               	movwf	0
 11714  05FB                     l4393:
 11715  05FB  3001               	movlw	1
 11716  05FC  00AD               	movwf	??_sprintf^(0+128)
 11717  05FD  082D               	movf	??_sprintf^(0+128),w
 11718  05FE  07C9               	addwf	sprintf@sp^(0+128),f
 11719  05FF                     l4395:
 11720  05FF  30FF               	movlw	255
 11721  0600  07B9               	addwf	sprintf@width^(0+128),f
 11722  0601  1803               	skipnc
 11723  0602  0ABA               	incf	(sprintf@width+1)^(0+128),f
 11724  0603  30FF               	movlw	255
 11725  0604  07BA               	addwf	(sprintf@width+1)^(0+128),f
 11726  0605  0839               	movf	sprintf@width^(0+128),w
 11727  0606  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11728  0607  1D03               	btfss	3,2
 11729  0608  2E0A               	goto	u7401
 11730  0609  2E0B               	goto	u7400
 11731  060A                     u7401:
 11732  060A  2DF4               	goto	l4391
 11733  060B                     u7400:
 11734  060B                     l4397:
 11735                           
 11736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11737  060B  3003               	movlw	3
 11738  060C  0537               	andwf	sprintf@flag^(0+128),w
 11739  060D  00AD               	movwf	??_sprintf^(0+128)
 11740  060E  3000               	movlw	0
 11741  060F  0538               	andwf	(sprintf@flag+1)^(0+128),w
 11742  0610  00AE               	movwf	(??_sprintf+1)^(0+128)
 11743  0611  082D               	movf	??_sprintf^(0+128),w
 11744  0612  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11745  0613  1903               	btfsc	3,2
 11746  0614  2E16               	goto	u7411
 11747  0615  2E17               	goto	u7410
 11748  0616                     u7411:
 11749  0616  2E92               	goto	l4409
 11750  0617                     u7410:
 11751  0617                     l4399:
 11752                           
 11753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11754  0617  302D               	movlw	45
 11755  0618  00AD               	movwf	??_sprintf^(0+128)
 11756  0619  0849               	movf	sprintf@sp^(0+128),w
 11757  061A  0084               	movwf	4
 11758  061B  082D               	movf	??_sprintf^(0+128),w
 11759  061C  1783               	bsf	3,7	;select IRP bank2
 11760  061D  0080               	movwf	0
 11761  061E                     l4401:
 11762  061E  3001               	movlw	1
 11763  061F  00AD               	movwf	??_sprintf^(0+128)
 11764  0620  082D               	movf	??_sprintf^(0+128),w
 11765  0621  07C9               	addwf	sprintf@sp^(0+128),f
 11766  0622  2E92               	goto	l4409
 11767  0623                     l4403:
 11768                           
 11769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11770  0623  3000               	movlw	0
 11771  0624  1283               	bcf	3,5	;RP0=0, select bank0
 11772  0625  1303               	bcf	3,6	;RP1=0, select bank0
 11773  0626  00AB               	movwf	___llmod@divisor+3
 11774  0627  3000               	movlw	0
 11775  0628  00AA               	movwf	___llmod@divisor+2
 11776  0629  3000               	movlw	0
 11777  062A  00A9               	movwf	___llmod@divisor+1
 11778  062B  300A               	movlw	10
 11779  062C  00A8               	movwf	___llmod@divisor
 11780  062D  1683               	bsf	3,5	;RP0=1, select bank1
 11781  062E  1303               	bcf	3,6	;RP1=0, select bank1
 11782  062F  084A               	movf	sprintf@prec^(0+128),w
 11783  0630  00AD               	movwf	??_sprintf^(0+128)
 11784  0631  3001               	movlw	1
 11785  0632                     u7425:
 11786  0632  1003               	clrc
 11787  0633  0DAD               	rlf	??_sprintf^(0+128),f
 11788  0634  3EFF               	addlw	-1
 11789  0635  1D03               	skipz
 11790  0636  2E32               	goto	u7425
 11791  0637  1003               	clrc
 11792  0638  0D2D               	rlf	??_sprintf^(0+128),w
 11793  0639  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11794  063A  0084               	movwf	4
 11795  063B  120A  158A  200A  120A  118A  	fcall	stringdir
 11796  0640  1283               	bcf	3,5	;RP0=0, select bank0
 11797  0641  1303               	bcf	3,6	;RP1=0, select bank0
 11798  0642  00A0               	movwf	___lldiv@divisor
 11799  0643  120A  158A  200A  120A  118A  	fcall	stringdir
 11800  0648  00A1               	movwf	___lldiv@divisor+1
 11801  0649  120A  158A  200A  120A  118A  	fcall	stringdir
 11802  064E  00A2               	movwf	___lldiv@divisor+2
 11803  064F  120A  158A  200A  120A  118A  	fcall	stringdir
 11804  0654  00A3               	movwf	___lldiv@divisor+3
 11805  0655  1683               	bsf	3,5	;RP0=1, select bank1
 11806  0656  1303               	bcf	3,6	;RP1=0, select bank1
 11807  0657  0842               	movf	(sprintf@val+3)^(0+128),w
 11808  0658  1283               	bcf	3,5	;RP0=0, select bank0
 11809  0659  1303               	bcf	3,6	;RP1=0, select bank0
 11810  065A  00A7               	movwf	___lldiv@dividend+3
 11811  065B  1683               	bsf	3,5	;RP0=1, select bank1
 11812  065C  1303               	bcf	3,6	;RP1=0, select bank1
 11813  065D  0841               	movf	(sprintf@val+2)^(0+128),w
 11814  065E  1283               	bcf	3,5	;RP0=0, select bank0
 11815  065F  1303               	bcf	3,6	;RP1=0, select bank0
 11816  0660  00A6               	movwf	___lldiv@dividend+2
 11817  0661  1683               	bsf	3,5	;RP0=1, select bank1
 11818  0662  1303               	bcf	3,6	;RP1=0, select bank1
 11819  0663  0840               	movf	(sprintf@val+1)^(0+128),w
 11820  0664  1283               	bcf	3,5	;RP0=0, select bank0
 11821  0665  1303               	bcf	3,6	;RP1=0, select bank0
 11822  0666  00A5               	movwf	___lldiv@dividend+1
 11823  0667  1683               	bsf	3,5	;RP0=1, select bank1
 11824  0668  1303               	bcf	3,6	;RP1=0, select bank1
 11825  0669  083F               	movf	sprintf@val^(0+128),w
 11826  066A  1283               	bcf	3,5	;RP0=0, select bank0
 11827  066B  1303               	bcf	3,6	;RP1=0, select bank0
 11828  066C  00A4               	movwf	___lldiv@dividend
 11829  066D  160A  158A  242A  120A  118A  	fcall	___lldiv
 11830  0672  1283               	bcf	3,5	;RP0=0, select bank0
 11831  0673  1303               	bcf	3,6	;RP1=0, select bank0
 11832  0674  0823               	movf	?___lldiv+3,w
 11833  0675  00AF               	movwf	___llmod@dividend+3
 11834  0676  0822               	movf	?___lldiv+2,w
 11835  0677  00AE               	movwf	___llmod@dividend+2
 11836  0678  0821               	movf	?___lldiv+1,w
 11837  0679  00AD               	movwf	___llmod@dividend+1
 11838  067A  0820               	movf	?___lldiv,w
 11839  067B  00AC               	movwf	___llmod@dividend
 11840  067C  160A  158A  237B  120A  118A  	fcall	___llmod
 11841  0681  1283               	bcf	3,5	;RP0=0, select bank0
 11842  0682  1303               	bcf	3,6	;RP1=0, select bank0
 11843  0683  0828               	movf	?___llmod,w
 11844  0684  3E30               	addlw	48
 11845  0685  1683               	bsf	3,5	;RP0=1, select bank1
 11846  0686  1303               	bcf	3,6	;RP1=0, select bank1
 11847  0687  00AE               	movwf	(??_sprintf+1)^(0+128)
 11848  0688  082E               	movf	(??_sprintf+1)^(0+128),w
 11849  0689  00CC               	movwf	sprintf@c^(0+128)
 11850  068A                     l4405:
 11851                           
 11852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11853  068A  084C               	movf	sprintf@c^(0+128),w
 11854  068B  00AD               	movwf	??_sprintf^(0+128)
 11855  068C  0849               	movf	sprintf@sp^(0+128),w
 11856  068D  0084               	movwf	4
 11857  068E  082D               	movf	??_sprintf^(0+128),w
 11858  068F  1783               	bsf	3,7	;select IRP bank2
 11859  0690  0080               	movwf	0
 11860  0691  2E1E               	goto	l4401
 11861  0692                     l4409:
 11862                           
 11863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11864  0692  30FF               	movlw	255
 11865  0693  07CA               	addwf	sprintf@prec^(0+128),f
 11866  0694  1803               	skipnc
 11867  0695  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11868  0696  30FF               	movlw	255
 11869  0697  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11870  0698  0A4A               	incf	sprintf@prec^(0+128),w
 11871  0699  1D03               	skipz
 11872  069A  2E9F               	goto	u7431
 11873  069B  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 11874  069C  1D03               	btfss	3,2
 11875  069D  2E9F               	goto	u7431
 11876  069E  2EA0               	goto	u7430
 11877  069F                     u7431:
 11878  069F  2E23               	goto	l4403
 11879  06A0                     u7430:
 11880  06A0                     l4411:
 11881                           
 11882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11883  06A0  3001               	movlw	1
 11884  06A1  07A8               	addwf	sprintf@f^(0+128),f
 11885  06A2  30FF               	movlw	-1
 11886  06A3  0728               	addwf	sprintf@f^(0+128),w
 11887  06A4  0084               	movwf	4
 11888  06A5  120A  158A  200A  120A  118A  	fcall	stringdir
 11889  06AA  00AD               	movwf	??_sprintf^(0+128)
 11890  06AB  082D               	movf	??_sprintf^(0+128),w
 11891  06AC  00CC               	movwf	sprintf@c^(0+128)
 11892  06AD  084C               	movf	sprintf@c^(0+128),w
 11893  06AE  1D03               	btfss	3,2
 11894  06AF  2EB1               	goto	u7441
 11895  06B0  2EB4               	goto	u7440
 11896  06B1                     u7441:
 11897  06B1  160A  118A  2D00   	goto	l4131
 11898  06B4                     u7440:
 11899  06B4                     l4413:
 11900                           
 11901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11902  06B4  0849               	movf	sprintf@sp^(0+128),w
 11903  06B5  0084               	movwf	4
 11904  06B6  1783               	bsf	3,7	;select IRP bank2
 11905  06B7  0180               	clrf	0
 11906  06B8                     l398:
 11907  06B8  0008               	return
 11908  06B9                     __end_of_sprintf:

Data Sizes:
    Strings     31
    Constant    144
    Data        2
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     79      80
    BANK1            80     45      63
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[3]), STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    enviar@valor	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK3[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[4]), s(BANK3[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _sprintf->___llmod
    _sprintf->__div_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___llmod->___lldiv
    ___flmul->___awmod
    ___flmul->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _conversor->___flmul
    ___flmul->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   42801
                                             76 BANK0      3     3      0
                            _ADC_con
                      _Config_USARTT
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _conversor
                             _enviar
                            _recibir
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   35757
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8087
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviar                                               1     1      0     121
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversor                                            9     5      4    5232
                                             36 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     642
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     704
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_USARTT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_con                                              4     3      1     190
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_con
   _Config_USARTT
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conversor
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _enviar
   _recibir
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      14       9       20.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2D      3F       7       78.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AE      12        0.0%
ABS                  0      0      AE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 20:43:36 2021

                        _s 0190                          _x 00CD                          pc 0002  
                       l90 1060                         l87 1868               ___awdiv@sign 0026  
                       fsr 0004        ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022  
                      l124 1987                        l133 1826                        l151 189D  
                      l136 1882                        l145 18E8                        l402 18AA  
                      l306 0FFF                        l139 1846                        l148 19C8  
                      l404 18C2                        l157 1A4E                        l182 19DE  
                      l191 1A04                        l176 1857                        l328 15BD  
                      l185 19EC                        l601 07FF                        l361 02FA  
                      l194 1A0A                        l179 19D1                        l188 19FA  
                      l612 07DF                        l620 1E20                        l197 1839  
                      l605 07F4                        l438 1C91                        l630 1EA1  
                      l615 07F4                        l623 1E71                        l368 033E  
                      l619 1EAE                        l299 126D                        l555 093B  
                      l572 0778                        l708 1ADA                        l733 1378  
                      l573 06DB                        l590 1B2A                        l750 1443  
                      l742 14F5                        l718 194B                        l398 06B8  
                      l831 0C08                        l735 134F                        l583 0769  
                      l760 1489                        l576 0739                        l568 1C29  
                      l825 0C9C                        l593 1CB0                        l729 12D1  
                      l754 1467                        l658 1BD0                        l771 14E9  
                      l763 14C7                        l844 18FF                        l588 1AF9  
                      l596 1D1C                        l772 14F5                        l837 0C90  
                      l589 1B15                        l597 1D35                        l846 1911  
                      l871 1DF1                        l775 1B7A                        l882 1DBB  
                      l883 1DC7                        l875 1D9F                        l869 1D5A  
                      l889 08D2                        _ISR 1A4F                        fsr0 0004  
                      indf 0000               ___awmod@sign 0079            __end_of_ADC_con 1988  
             ___flmul@aexp 003C               ___flmul@bexp 003D               ___flmul@sign 0037  
             ___flmul@temp 0042               ___flmul@prod 003E                       ?_ISR 0070  
             ___fltol@exp1 0061                       l4001 1B27                       l3113 07F5  
                     l3121 0779                       l4003 1B29                       l4011 1CC4  
                     l3115 07FD                       l3131 07A5                       l3123 0786  
                     l3051 18B8                       l3043 189E                       l3301 196F  
                     l4101 183A                       l4021 1D32                       l4013 1CCC  
                     l3117 07FF                       l3133 07AD                       l3053 18BE  
                     l3045 18A0                       l2501 192A                       l3311 1981  
                     l3303 196F                       l4111 18DD                       l4103 18C6  
                     l3231 185D                       l4023 1D34                       l4015 1CD0  
                     l4007 1C92                       l3151 07D4                       l3143 07BB  
                     l3135 07AF                       l3127 078F                       l4031 1B88  
                     l3047 18A4                       l2503 1934                       l2431 1BD6  
                     l3313 1984                       l3305 1971                       l3241 1847  
                     l4113 18E2                       l4105 18CB                       l4121 1A30  
                     l3233 1862                       l4017 1CF4                       l4009 1CA8  
                     l2601 135E                       l2521 1280                       l2513 126E  
                     l3153 07E4                       l3137 07B3                       l3145 07CD  
                     l3129 07A4                       l4041 1BC2                       l4033 1B95  
                     l3049 18B1                       l2505 193A                       l2441 1BEC  
                     l2433 1BDB                       l4201 169C                       l3315 1984  
                     l3307 1976                       l3243 184F                       l4107 18D0  
                     l4115 1A0B                       l2371 18F5                       l4051 1D42  
                     l4123 1008                       l3251 182F                       l3235 1865  
                     l3227 1858                       l4019 1CF8                       l2611 137C  
                     l2603 1362                       l2523 1285                       l2531 1295  
                     l2515 1275                       l3155 07E9                       l4035 1B99  
                     l4043 1BC8                       l4027 1B7B                       l2507 1941  
                     l2451 1C08                       l2443 1BEF                       l2435 1BDD  
                     l2427 1BD1                       l4211 1733                       l4203 16BF  
                     l4131 1500                       l3309 197B                       l3317 1986  
                     l3245 1853                       l4109 18D7                       l4117 1A0E  
                     l2373 18F9                       l4061 1D70                       l4053 1D52  
                     l4125 104A                       l3237 1866                       l3229 185B  
                     l2701 14E5                       l2621 13A5                       l2613 1381  
                     l2605 1363                       l2541 12AF                       l2533 129D  
                     l2525 128A                       l2517 127B                       l4037 1BAB  
                     l4029 1B85                       l2509 1947                       l2461 1C25  
                     l2453 1C0E                       l2445 1BF6                       l2437 1BE1  
                     l2429 1BD2                       l4301 0331                       l4221 17A3  
                     l4213 175A                       l4205 16C3                       l4141 1526  
                     l4133 1506                       l3247 1856                       l4119 1A2A  
                     l2375 1908                       l2367 18EC                       l2711 0949  
                     l4071 1DA6                       l4063 1D7D                       l4055 1D62  
                     l4047 1D39                       l3239 1867                       l2703 14F0  
                     l2631 13B9                       l2623 13A9                       l2607 136C  
                     l2551 12C6                       l2543 12B3                       l2535 12A2  
                     l2527 1292                       l2519 127F                       l4039 1BB9  
                     l2471 1AA2                       l2455 1C15                       l2447 1BFA  
                     l2439 1BE6                       l4311 0357                       l4303 0338  
                     l4231 0096                       l4223 17EA                       l4215 1763  
                     l4207 16C9                       l4143 152A                       l4151 1566  
                     l4135 150D                       l2377 190D                       l2369 18EE  
                     l2801 0BE2                       l2721 0960                       l2713 094D  
                     l4081 1DDF                       l4073 1DB1                       l4065 1D84  
                     l4049 1D3E                       l2705 14F4                       l2641 1421  
                     l2633 13C2                       l2625 13B2                       l2617 138A  
                     l2609 1370                       l2561 12DF                       l2553 12C7  
                     l2545 12B4                       l2537 12A8                       l2529 1293  
                     l3177 1B2B                       l2481 1AC8                       l2473 1AA9  
                     l2465 1A95                       l2449 1BFE                       l2457 1C1B  
                     l4401 061E                       l4321 0476                       l4313 0375  
                     l4305 0347                       l4233 00BF                       l4225 0037  
                     l4217 178C                       l4209 16E8                       l4161 1591  
                     l4153 1574                       l4145 153F                       l4137 1512  
                     l4129 14F9                       l3291 1959                       l4091 1988  
                     l2811 0C05                       l2803 0BE8                       l2731 0979  
                     l2723 0962                       l2715 094E                       l2707 093C  
                     l4083 1DE4                       l4075 1DB5                       l4067 1D88  
                     l4059 1D6B                       l2643 1426                       l2627 13B4  
                     l2619 13A1                       l2635 13C7                       l2571 12F3  
                     l2563 12E3                       l2547 12B9                       l2555 12C9  
                     l2539 12A9                       l3179 1B2F                       l2483 1AC9  
                     l2475 1AAD                       l2467 1A99                       l2491 1912  
                     l2459 1C20                       l4403 0623                       l4331 04EA  
                     l4315 03D0                       l4323 04D1                       l4307 034C  
                     l4251 01A8                       l4243 0139                       l4235 00C8  
                     l4227 0060                       l4219 1794                       l4163 15A4  
                     l4155 1575                       l4147 1552                       l4139 1516  
                     l4411 06A0                       l3293 195C                       l3285 194D  
                     l4093 198E                       l2821 0C24                       l2805 0BEC  
                     l2741 098E                       l2733 097A                       l2725 096A  
                     l2717 0953                       l2709 0943                       l4085 1DE8  
                     l4077 1DBF                       l4069 1D96                       l3621 19CA  
                     l2661 146E                       l2653 1459                       l2637 13DD  
                     l2645 1435                       l2629 13B8                       l2581 1307  
                     l2573 12F7                       l2565 12E7                       l2557 12D7  
                     l2549 12BE                       l2485 1AD0                       l2477 1AB1  
                     l2469 1A9F                       l2493 1918                       l4405 068A  
                     l4341 050E                       l4325 04D9                       l4317 042B  
                     l4309 0353                       l4261 01E1                       l4237 00D0  
                     l4229 0087                       l4245 0142                       l4181 15F7  
                     l4333 04F1                       l4413 06B4                       l4173 15BF  
                     l4165 15A8                       l4157 1579                       l4149 1556  
                     l3295 1961                       l3287 1950                       l4095 1997  
                     l2831 0C6A                       l2823 0C3D                       l2815 0C0D  
                     l2807 0BED                       l2751 09A9                       l2743 0996  
                     l2735 097F                       l2727 096F                       l2719 0958  
                     l4087 1DE9                       l4079 1DC9                       l3623 19D7  
                     l2671 147C                       l2663 1470                       l2655 1462  
                     l2647 144B                       l2639 141B                       l2583 130B  
                     l2575 12FB                       l2567 12EB                       l2559 12DB  
                     l2591 131B                       l2479 1AC2                       l2487 1AD6  
                     l2495 191B                       l4343 0519                       l4335 0502  
                     l4327 04E0                       l4319 046A                       l4271 021F  
                     l4263 01EB                       l4247 0177                       l4239 00EE  
                     l4191 164D                       l4183 1605                       l4511 15D3  
                     l4175 15E1                       l4159 157C                       l4167 15B9  
                     l4431 1EC8                       l4423 1EAF                       l3297 1966  
                     l3289 1956                       l4097 19A6                       l2841 0C89  
                     l2833 0C74                       l2817 0C12                       l2825 0C43  
                     l2809 0BF1                       l2761 0A2B                       l2753 09B9  
                     l2745 099B                       l2737 0984                       l2729 0975  
                     l3625 19E4                       l2681 1493                       l2673 1480  
                     l2665 1475                       l2657 1466                       l2649 1450  
                     l2593 131C                       l2585 130F                       l2577 12FF  
                     l2569 12EF                       l2497 1922                       l3801 0937  
                     l4409 0692                       l4361 0570                       l4345 051F  
                     l4337 0506                       l4329 04E4                       l4281 0248  
                     l4273 0228                       l4265 0206                       l4257 01AA  
                     l4249 01A6                       l4193 1651                       l4185 1609  
                     l4177 15EF                       l4169 15BB                       l4441 1F2C  
                     l4433 1ED0                       l4425 1EB9                       l3299 196C  
                     l3811 1876                       l4099 19AC                       l2843 0C94  
                     l2835 0C76                       l2827 0C50                       l2819 0C20  
                     l2771 0A99                       l2763 0A47                       l2755 09C6  
                     l2747 09A0                       l2739 098C                       l3627 19F2  
                     l2691 14D1                       l2683 14A1                       l2675 1486  
                     l2659 146B                       l2667 1477                       l2595 1333  
                     l2587 1313                       l2579 1303                       l2499 1926  
                     l2931 08C9                       l4371 05A2                       l4363 057B  
                     l4355 052F                       l4347 0527                       l4339 050A  
                     l4291 0302                       l4283 024F                       l4267 020C  
                     l4195 1678                       l4187 1630                       l4179 15F3  
                     l4451 1F75                       l4443 1F34                       l4435 1ED9  
                     l4427 1EBE                       l3813 187F                       l3805 186A  
                     l3821 1890                       l2837 0C84                       l2829 0C5B  
                     l2781 0B29                       l2773 0AA9                       l2765 0A63  
                     l2757 09E3                       l3629 1A00                       l2693 14D9  
                     l2685 14A5                       l2669 147B                       l2597 1353  
                     l2589 1317                       l2933 08CF                       l4381 05CF  
                     l4373 05AE                       l4365 0582                       l4349 052D  
                     l4293 030B                       l4285 0254                       l4269 0218  
                     l4277 022D                       l4197 1683                       l4189 1649  
                     l4461 1FA2                       l4453 1F7E                       l4445 1F4A  
                     l4437 1EEE                       l4429 1EC3                       l3807 186D  
                     l3823 1895                       l3815 1884                       l2839 0C88  
                     l2791 0BBD                       l2783 0B39                       l2775 0AC6  
                     l2767 0A6C                       l2759 09FF                       l2695 14DE  
                     l2687 14C3                       l2679 148E                       l2599 135C  
                     l2871 106A                       l2935 08D1                       l2927 08C2  
                     l3831 0CA6                       l4391 05F4                       l4383 05D3  
                     l4375 05B4                       l4367 0591                       l4359 0566  
                     l4295 030F                       l4287 02AF                       l4279 023A  
                     l4199 1689                       l4471 1FCA                       l4463 1FA4  
                     l4455 1F84                       l4447 1F53                       l4439 1F0E  
                     l3809 1873                       l3825 1898                       l3817 1887  
                     l2793 0BCB                       l2785 0B66                       l2777 0ADF  
                     l2769 0A7C                       l2697 14DF                       l2689 14CC  
                     l3921 06C6                       l3913 1E96                       l3905 1E7D  
                     l2929 08C3                       l3761 08D3                       l3841 0D9E  
                     l3833 0CAD                       l4393 05FB                       l4385 05DE  
                     l4377 05B8                       l4369 059A                       l4297 0315  
                     l4289 02EE                       l4473 1FD6                       l4465 1FAA  
                     l4457 1F92                       l4449 1F5F                       l3819 188D  
                     l2795 0BD4                       l2787 0B8C                       l2779 0AFC  
                     l2699 14E3                       l3931 06DC                       l3915 1EA6  
                     l3907 1E8F                       l2883 122A                       l3771 08E5  
                     l3763 08D6                       l3851 0E5A                       l3827 0CA0  
                     l4395 05FF                       l4387 05EA                       l4379 05C6  
                     l4299 0322                       l4475 1FDF                       l4459 1F9A  
                     l2797 0BD8                       l2789 0BB4                       l3941 0709  
                     l3933 06E4                       l3925 06CF                       l2877 1179  
                     l2869 1064                       l3781 08F9                       l3773 08EA  
                     l3765 08DA                       l3845 0E26                       l3829 0CA4  
                     l4397 060B                       l4389 05EE                       l4477 1FE7  
                     l4469 1FAD                       l3759 1822                       l2799 0BD9  
                     l3951 073D                       l3943 071B                       l3935 06F5  
                     l3919 06B9                       l2879 117F                       l3791 091F  
                     l3783 0900                       l3775 08EE                       l3767 08DF  
                     l3863 0FD3                       l3839 0D97                       l4399 0617  
                     l4479 1FF3                       l3945 0729                       l3937 06F7  
                     l3881 1E27                       l3873 1E0E                       l3793 0920  
                     l3785 0904                       l3777 08F0                       l3769 08E1  
                     l3857 0F44                       l3849 0E53                       l3971 1C2A  
                     l3947 072A                       l3939 0700                       l3891 1E58  
                     l3883 1E36                       l3867 1DF2                       l3795 0927  
                     l3787 0908                       l3779 08F6                       l3859 0F4B  
                     l3981 1C59                       l3973 1C3C                       l3965 075E  
                     l3957 0745                       l3949 0733                       l3893 1E62  
                     l3885 1E38                       l3869 1E05                       l3789 0919  
                     l3797 092D                       l3983 1C6B                       l3975 1C3F  
                     l3991 1C89                       l3967 076E                       l3959 0757  
                     l3895 1E63                       l3887 1E41                       l3879 1E21  
                     l3799 0932                       l3985 1C79                       l3977 1C4C  
                     l3897 1E6B                       l3889 1E4A                       l3995 1ADB  
                     l3987 1C7A                       l3979 1C50                       l3899 1E75  
                     l3997 1AF1                       l3989 1C83                       l3999 1B0D  
                     STR_1 08A0                       STR_2 08B1                       STR_3 08B1  
                     STR_4 08BC                       STR_5 08B8                       u3010 190D  
                     u3011 190C                       u3005 1900                       u3200 1C20  
                     u3120 1BD6                       u4001 0B7E                       u3201 1C1F  
                     u3121 1BD5                       u4010 0B9A                       u4002 0B85  
                     u3210 1A9F                       u3130 1BE1                       u4003 0B8C  
                     u3211 1A9E                       u3131 1BE0                       u4100 0C0C  
                     u3300 192A                       u3140 1BEC                       u4101 0C0B  
                     u4021 0BA6                       u3301 1929                       u3141 1BEB  
                     u4110 0C12                       u4022 0BAD                       u3230 1AB1  
                     u3310 1934                       u4111 0C11                       u4023 0BB4  
                     u4015 0B95                       u3231 1AB0                       u3311 1933  
                     u4120 0C24                       u3400 12BE                       u5000 07E4  
                     u3160 1BFE                       u4121 0C23                       u3401 12BD  
                     u5001 07E3                       u3225 1AA3                       u3161 1BFD  
                     u4130 0C33                       u4050 0BD8                       u3410 12D7  
                     u5010 07E9                       u3250 1AC2                       u3330 1947  
                     u4210 117F                       u3170 1C08                       u4051 0BD7  
                     u4035 0BB6                       u3411 12D6                       u5011 07E8  
                     u3251 1AC1                       u3331 1946                       u3315 1930  
                     u4211 117E                       u3171 1C07                       u3155 1BF0  
                     u4140 0C50                       u3500 137C                       u3420 12DB  
                     u3340 127F                       u4141 0C4F                       u4045 0BCD  
                     u3501 137B                       u3421 12DA                       u3341 127E  
                     u3245 1AB2                       u3325 193B                       u4205 1138  
                     u4150 0C6A                       u4070 0BEC                       u3510 1381  
                     u3430 1333                       u3350 1285                       u3270 1AD6  
                     u3190 1C1B                       u4151 0C69                       u4135 0C2E  
                     u4071 0BEB                       u3511 1380                       u3431 1332  
                     u3351 1284                       u3271 1AD5                       u3255 1ABE  
                     u3191 1C1A                       u3175 1C04                       u4160 0C88  
                     u4080 0BF1                       u3600 1426                       u3440 133E  
                     u3360 128A                       u3280 1918                       u4161 0C87  
                     u4145 0C4C                       u4081 0BF0                       u4065 0BDB  
                     u3601 1425                       u3521 1393                       u3441 133C  
                     u3361 1289                       u3265 1ACA                       u3281 1917  
                     u4225 119C                       u3185 1C0F                       u4090 0C05  
                     u3610 144B                       u3530 13A5                       u3522 139A  
                     u3450 133F                       u3370 12A8                       u4170 106A  
                     u6010 0908                       u4155 0C66                       u4091 0C04  
                     u3611 144A                       u3531 13A4                       u3523 13A1  
                     u3435 132F                       u3371 12A7                       u4235 11E9  
                     u4171 1069                       u6011 0907                       u5300 197B  
                     u3700 148D                       u3620 1450                       u3540 13A9  
                     u3460 1353                       u3380 12B3                       u4420 08C9  
                     u5301 197A                       u3701 148C                       u3621 144F  
                     u3541 13A8                       u3461 1352                       u3381 12B2  
                     u4245 1235                       u4421 08C8                       u6005 08FA  
                     u3710 1493                       u3550 13B8                       u3470 1362  
                     u3390 12B9                       u4430 08CF                       u6030 0919  
                     u3711 1492                       u3551 13B7                       u3471 1361  
                     u3391 12B8                       u3295 191C                       u4431 08CE  
                     u6031 0918                       u3800 094D                       u3720 14A5  
                     u3640 1466                       u6200 0F4B                       u6120 0D9E  
                     u7000 1678                       u3801 094C                       u3721 14A4  
                     u3641 1465                       u4185 1087                       u6025 0909  
                     u6201 0F4A                       u6121 0D9D                       u6105 0D0B  
                     u7001 1677                       u3810 0953                       u3730 14B4  
                     u3650 146B                       u3570 13DD                       u3490 1378  
                     u6050 092D                       u7010 16C3                       u3811 0952  
                     u3651 146A                       u3635 145B                       u3571 13DC  
                     u3491 1377                       u4195 10E3                       u6051 092C  
                     u6035 0915                       u6115 0D56                       u7011 16C2  
                     u3820 0958                       u3740 14C3                       u3660 1475  
                     u4700 18A4                       u6300 1E75                       u6060 0932  
                     u7020 175A                       u3901 0A39                       u3821 0957  
                     u3741 14C2                       u3661 1474                       u3581 13F4  
                     u3573 13D9                       u3565 13BB                       u3485 1365  
                     u4701 18A3                       u6301 1E74                       u6061 0931  
                     u6045 0921                       u7021 1759                       u5270 1961  
                     u3902 0A40                       u3830 0979                       u3750 14CC  
                     u3670 147B                       u3590 1408                       u3582 13F5  
                     u6310 1E7C                       u6070 0CA4                       u7110 01E0  
                     u7030 178C                       u5271 1960                       u3911 0A55  
                     u3903 0A47                       u3831 0978                       u3751 14CB  
                     u3735 14AF                       u3671 147A                       u3591 1409  
                     u3583 13FA                       u6311 1E7B                       u6215 0F5E  
                     u6135 0DB1                       u6071 0CA3                       u7111 01DF  
                     u7031 178B                       u5280 1966                       u3912 0A5C  
                     u3840 097F                       u3760 14D1                       u3680 1480  
                     u3592 140E                       u3584 13FB                       u6400 071B  
                     u6240 1E05                       u6160 0E5A                       u6080 0CAD  
                     u7200 0331                       u7120 01EB                       u7040 17A3  
                     u5281 1965                       u3913 0A63                       u3841 097E  
                     u3761 14D0                       u3681 147F                       u3593 140F  
                     u3585 1400                       u6401 071A                       u6241 1E04  
                     u6225 0F9A                       u6161 0E59                       u6145 0DED  
                     u6081 0CAC                       u7201 0330                       u7121 01EA  
                     u7105 01AD                       u7041 17A2                       u5290 1976  
                     u3850 0984                       u3770 14DE                       u3690 1486  
                     u3586 1401                       u4730 18BE                       u6330 1E8E  
                     u6250 1E1F                       u7210 034C                       u7130 0206  
                     u7050 0037                       u5291 1975                       u3931 0A8B  
                     u3851 0983                       u3771 14DD                       u3691 1485  
                     u4731 18BD                       u4715 18AB                       u6331 1E8D  
                     u6251 1E1E                       u6235 0FD6                       u6155 0E29  
                     u7211 034B                       u7131 0205                       u7115 01DC  
                     u7051 17FA                       u3932 0A92                       u3860 099B  
                     u3780 14E3                       u6500 1C3C                       u6420 0739  
                     u6340 1E95                       u7300 0565                       u7140 0218  
                     u7060 0060                       u3941 0AB8                       u3933 0A99  
                     u3925 0A65                       u3861 099A                       u3781 14E2  
                     u6501 1C3B                       u4725 18B2                       u6421 0738  
                     u6405 0717                       u6341 1E94                       u6325 1E7E  
                     u7301 0564                       u7205 032D                       u7141 0217  
                     u7061 005F                       u7045 179F                       u2990 18F9  
                     u3942 0ABF                       u3870 09A0                       u4910 07FD  
                     u3790 14F4                       u6430 073D                       u6270 1E58  
                     u7310 0570                       u7150 023A                       u7070 0087  
                     u2991 18F8                       u3943 0AC6                       u3871 099F  
                     u4911 07FC                       u3791 14F3                       u6431 073C  
                     u6415 072C                       u6271 1E57                       u6175 0E7C  
                     u6095 0CCF                       u7311 056F                       u7151 0239  
                     u7071 0086                       u7055 17F5                       u6600 1CA8  
                     u4920 0786                       u6520 1C50                       u6440 0744  
                     u6360 1EA6                       u7400 060B                       u7320 057B  
                     u7240 04D8                       u7160 0248                       u7080 0096  
                     u3961 0AEE                       u3881 09F1                       u6601 1CA7  
                     u4921 0785                       u6521 1C4F                       u6441 0743  
                     u6361 1EA5                       u6265 1E43                       u6185 0EB8  
                     u7401 060A                       u7321 057A                       u7305 0561  
                     u7241 04D7                       u7225 03D3                       u7161 0247  
                     u7081 0095                       u3962 0AF5                       u3882 09F8  
                     u6610 1CC4                       u4930 079D                       u6370 06C6  
                     u6290 1E71                       u7410 0617                       u7330 0591  
                     u7250 04F0                       u7090 00BF                       u3971 0B1B  
                     u3963 0AFC                       u3955 0AC8                       u3891 0A0D  
                     u3883 09FF                       u6611 1CC3                       u6515 1C41  
                     u6371 06C5                       u6355 1E98                       u6291 1E70  
                     u6275 1E54                       u6195 0F03                       u7411 0616  
                     u7331 0590                       u7251 04EF                       u7235 0479  
                     u7155 0236                       u7091 00BE                       u3972 0B22  
                     u3892 0A14                       u6620 1CD0                       u4940 07B3  
                     u6540 1C6B                       u6700 1BAB                       u6460 0756  
                     u6380 06DA                       u7340 05A2                       u7260 050A  
                     u7180 0301                       u3981 0B48                       u3973 0B29  
                     u3893 0A1B                       u6621 1CCF                       u4941 07B2  
                     u6541 1C6A                       u6701 1BAA                       u6461 0755  
                     u6381 06D9                       u6285 1E64                       u7341 05A1  
                     u7325 0577                       u7261 0509                       u7181 0300  
                     u7085 0092                       u3990 0B72                       u3982 0B4F  
                     u4950 07BA                       u6470 075D                       u7430 06A0  
                     u7350 05AE                       u7270 051F                       u7190 0322  
                     u3983 0B56                       u6631 1CDF                       u4951 07B9  
                     u4935 0798                       u6535 1C52                       u6471 075C  
                     u6455 0746                       u7431 069F                       u7351 05AD  
                     u7335 058D                       u7271 051E                       u7191 0321  
                     u7175 0257                       u5840 19D7                       u6640 1CF8  
                     u6632 1CE0                       u6560 1C89                       u6720 1BC8  
                     u7440 06B4                       u7360 05B8                       u7280 0527  
                     u5841 19D6                       u6641 1CF7                       u6633 1CE5  
                     u6561 1C88                       u6545 1C67                       u6721 1BC7  
                     u6705 1BA7                       u7441 06B1                       u7425 0632  
                     u7361 05B7                       u7281 0526                       u6810 1DB5  
                     u6730 1D3E                       u5850 19E4                       u6570 1AF1  
                     u6634 1CE6                       u4970 07CC                       u6490 076E  
                     u7370 05C6                       u7450 1F9A                       u7507 189A  
                     u3995 0B6D                       u6811 1DB4                       u6731 1D3D  
                     u5851 19E3                       u6571 1AF0                       u6651 1D07  
                     u6635 1CEB                       u4971 07CB                       u6555 1C7B  
                     u6715 1BBA                       u6491 076D                       u6395 0702  
                     u7371 05C5                       u7195 031E                       u7451 1F99  
                     u6900 1A3C                       u6820 1DBB                       u6740 1D42  
                     u5860 19F2                       u6580 1B0D                       u6660 1D32  
                     u6652 1D08                       u6636 1CEC                       u4980 07D3  
                     u7380 05DE                       u7460 1FAA                       u7517 1992  
                     u6821 1DBA                       u6805 1DAA                       u6741 1D41  
                     u5861 19F1                       u6581 1B0C                       u6661 1D31  
                     u6653 1D0D                       u4981 07D2                       u4965 07BC  
                     u6485 0760                       u7381 05DD                       u7461 1FA9  
                     u6910 1A4E                       u6830 1DBF                       u6750 1D62  
                     u5870 1A00                       u6590 1B27                       u6654 1D0E  
                     u6670 1B85                       u7390 05F4                       u7470 1FE7  
                     u7527 19A1                       u6911 1A4D                       u6831 1DBE  
                     u6751 1D61                       u5871 19FF                       u6591 1B26  
                     u6655 1D13                       u6671 1B84                       u7391 05F3  
                     u7375 05C2                       u7295 0532                       u7471 1FE6  
                     u6840 1DD4                       u5880 1A0A                       u6656 1D14  
                     u6920 1506                       u7537 19AE                       u5881 1A09  
                     u6665 1D2E                       u7385 05DA                       u6921 1505  
                     u6850 1DE4                       u6770 1D83                       u6690 1B99  
                     u5970 08DA                       u6930 1526                       u7547 187A  
                     u6851 1DE3                       u6771 1D82                       u6595 1B23  
                     u4995 07D6                       u6691 1B98                       u5971 08D9  
                     u6931 1525                       u6860 1DE8                       u5980 08E5  
                     u6940 1566                       u7557 196A                       u6861 1DE7  
                     u6845 1DCF                       u6765 1D75                       u6685 1B8A  
                     u5981 08E4                       u6941 1565                       u6870 18CB  
                     u6790 1DA5                       u5990 08F6                       u6950 1574  
                     u7567 197F                       u6871 18CA                       u6791 1DA4  
                     u5991 08F5                       u6951 1573                       u7487 1F8C  
                     u6880 18DD                       u6960 15B8                       u6881 18DC  
                     u7497 1892                       u6785 1D97                       u6961 15B7  
                     u6890 1A18                       u6970 15EF                       u6971 15EC  
                     u6980 15F3                       u6981 15F2                       u6990 1630  
                     u6991 162F                       _TRMT 04C1          ?_Lcd_Write_String 0076  
                     _flag 00DE                       _main 1EAF                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0020               _sprintf$1180 00B2  
          __end_of_Lcd_Cmd 1883                      ??_ISR 0070              ___fltol@sign1 0060  
          __end_of___fladd 14F6                      ?_main 0070            __end_of___awdiv 093C  
          __end_of___flneg 0800            __end_of___awmod 1C2A            __end_of___flmul 0C9D  
          __end_of___flsub 1B7B            __end_of___fltol 07F5                      _ANSEL 0188  
          __end_of___lldiv 1C92            ___awdiv@divisor 0020            __end_of___llmod 1BD1  
          __end_of___lwdiv 1ADB                      i1l102 1A8E            __end_of___lwmod 194C  
          ___awdiv@counter 0025                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0026                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
          __end_of_dpowers 08A0                      _count 00DA                      _scale 0C9D  
          __end_of_isdigit 08D3            __end_of_recibir 183A                      _setup 1858  
                    _turno 00DD                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 06B9           __end_of_Lcd_Init 19C9  
         __end_of_Lcd_Port 1827            __initialization 000F               __end_of_main 2000  
              enviar@valor 0073                  ??_ADC_con 0074                     ??_main 006C  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD                     _ADCON0 001F  
         ___llmod@dividend 002C                     ?_scale 0044                     _ADRESH 001E  
         ___awdiv@dividend 0022                     ?_setup 0070                     i1l3701 1A69  
                   i1l3703 1A6F                     i1l3711 1A79                     i1l3713 1A7D  
                   i1l3715 1A81                     i1l3707 1A72                     i1l3717 1A82  
                   i1l3709 1A76                     i1l3719 1A88                     i1l3691 1A55  
                   i1l3693 1A5A                     i1l3695 1A60                     i1l3697 1A61  
                   i1l3689 1A4F                     i1l3699 1A64                     _INTCON 000B  
                   u592_20 1A55                     u592_21 1A54                  ??_Lcd_Cmd 0074  
                   u593_20 1A5A                     u593_21 1A59                     u594_20 1A69  
                   u594_21 1A68                     u595_20 1A7D                     u595_21 1A7C  
                   u596_20 1A81                     u596_21 1A80                     u757_27 1A84  
  __size_of_Lcd_Write_Char 001B           __end_of___xxtofl 1DF2           __end_of__powers_ 0844  
                   ___flge 1C92                     ___fleq 1ADB                  ??___fladd 0060  
                   ___wmul 189E                  ??___awdiv 0024                  ??___flneg 0077  
                ??___awmod 0077                  ??___flmul 0032                  ??___flsub 007A  
                ??___fltol 005B                  ??___lldiv 0073                  ??___llmod 0079  
                ??___lwdiv 0079                  ??___lwmod 0077                     _enviar 19C9  
                   _fround 1061           ___awdiv@quotient 0027            ___awmod@divisor 0073  
                   _valor1 00D5                     _valor2 00D1            ___awmod@counter 0078  
             conversor@val 004C                  ??_isdigit 0073         __size_of__Umul8_16 0029  
                ??_recibir 0073                     saved_w 007E                  ??_sprintf 00AD  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0077                 ___flge@ff1 0020  
               ___flge@ff2 0024               ___xxtofl@arg 0026               ___xxtofl@exp 0025  
             ___xxtofl@val 0073                 ___fleq@ff1 0020                 ___fleq@ff2 0024  
  __end_of__initialization 0033                 ___flneg@f1 0073          __end_of_Lcd_Clear 1847  
               ___fltol@f1 0057      __end_of_Config_USARTT 1858             __pcstackCOMMON 0070  
             __pidataBANK1 08BF              __end_of_scale 1000              __end_of_setup 1869  
           _Lcd_Set_Cursor 18C3                 __div_to_l_ 06B9                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0079            __div_to_l_@cntr 0078  
                  ??_scale 0048            __div_to_l_@quot 0074               sprintf@width 00B9  
                  ??_setup 0073         __size_of_conversor 005C                 __pbssBANK0 006F  
               __pbssBANK1 00CD                 __pbssBANK3 0190              __div_to_l_@f1 0020  
            __div_to_l_@f2 0024          __end_of__Umul8_16 1912                 __pmaintext 1EAF  
                  ?___flge 0020                    ?___fleq 0020                    ?___wmul 0073  
               __pintentry 0004                    ?_enviar 0070                    ?_fround 0044  
__size_of_Lcd_Write_String 0044     __end_of_Lcd_Set_Cursor 18E9                    _ADC_con 194C  
                ?___xxtofl 0073                 ??_Lcd_Init 0077                 ??_Lcd_Port 0073  
               ADC_con@var 0075                 __stringtab 0800             _Lcd_Write_Char 1883  
                  _Lcd_Cmd 1869          __end_of__npowers_ 0878                 _scale$1179 0052  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 126E  
                  ___awdiv 08D3                    ___flneg 07F5                    ___awmod 1BD1  
                  ___flmul 093C                    ___flsub 1B2B                    ___fltol 0779  
                  ___lldiv 1C2A            __size_of___wmul 0025                    ___llmod 1B7B  
                  ___lwdiv 1A95                    ___lwmod 1912          __end_of_conversor 1061  
          __size_of_enviar 0042            __size_of_fround 020D            ?_Lcd_Set_Cursor 0077  
                  __ptext1 14F6                    __ptext2 0C9D                    __ptext3 1BD1  
                  __ptext4 08D3                    __ptext5 08C1                    __ptext6 1061  
                  __ptext7 1912                    __ptext8 1A95                    __ptext9 1DF2  
             __size_of_ISR 0046                ?__div_to_l_ 0020                    _enviado 007A  
                  _dpowers 0878                    _isdigit 08C1                 ??___xxtofl 0020  
                  _recibir 182F           ___awmod@dividend 0075                    _retorno 006F  
                  _sprintf 14F6                    clrloop0 1828     __end_of_Lcd_Write_Char 189E  
     end_of_initialization 0033            ___lldiv@divisor 0020            ___lldiv@counter 0078  
                _RCSTAbits 0018                    psplit$0 F0035                  Lcd_Port@a 0073  
           __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0073  
                _PORTEbits 0009                ___fladd@grs 006B              ___xxtofl@sign 0024  
             ADC_con@turno 0073            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076  
        Lcd_Write_String@i 0078                ___flmul@grs 0038                  _TXSTAbits 0098  
      __size_of__div_to_l_ 00C0                  _Lcd_Clear 183A             __end_of___flge 1D36  
           __end_of___fleq 1B2B             __end_of___wmul 18C3           _Lcd_Write_String 1A0B  
        pnum$text1_split_1 0035                _BAUDCTLbits 0187             __end_of_enviar 1A0B  
           __end_of_fround 126E        start_initialization 000F                __end_of_ISR 1A95  
      __end_of__tdiv_to_l_ 1EAF          __size_of_Lcd_Init 0041          __size_of_Lcd_Port 0006  
          ___llmod@divisor 0028            ___llmod@counter 0030                 ?_Lcd_Clear 0070  
                 ??___flge 0073                   ??___fleq 0073                   ??___wmul 0077  
                __Umul8_16 18E9                __pdataBANK1 00DD                   ??_enviar 0073  
          Lcd_Write_Char@a 0075                   ??_fround 0048                   ?_ADC_con 0073  
            sprintf@tmpval 00BB                  ___fladd@a 005C                  ___fladd@b 0058  
               fround@prec 0057                  ___flmul@a 002E                  ___flmul@b 002A  
              __pbssCOMMON 007A                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
   __size_of_Config_USARTT 0011          __size_of___xxtofl 00BC               _isdigit$1002 0073  
                 ?_Lcd_Cmd 0070                sprintf@flag 00B7                sprintf@eexp 00C3  
              sprintf@fval 00C5                sprintf@prec 00CA           ___lwdiv@dividend 0022  
         ??_Lcd_Set_Cursor 0078                   ?___fladd 0058                   ?___awdiv 0020  
                 ?___flneg 0073                   ?___awmod 0073                   ?___flmul 002A  
                 ?___flsub 00A0                   ?___fltol 0057                   ?___lldiv 0020  
                 ?___llmod 0028                  __npowers_ 0844                 ?__Umul8_16 0073  
                 ?___lwdiv 0020                   ?___lwmod 0073                  __pstrings 0800  
              __tdiv_to_l_ 1DF2               ??__div_to_l_ 0073                  _conversor 1005  
                 ?_isdigit 0070                   ?_recibir 0070           ___lwdiv@quotient 0024  
                 ?_sprintf 00A8             __size_of_scale 0363             __size_of_setup 0011  
        interrupt_function 0004             ___wmul@product 0077                  clear_ram0 1827  
                 _PIE1bits 008C                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
       __end_of__div_to_l_ 0779                  _valor_AN0 00DC                  _valor_AN1 00DB  
            _Config_USARTT 1847                ??_Lcd_Clear 0077                ADC_con@flag 0076  
               _ADCON0bits 001F                __stringbase 080F                 _ADCON1bits 009F  
        ___wmul@multiplier 0073           __size_of_ADC_con 003C                 ?_conversor 0044  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 1988                   _Lcd_Port 1821  
 __end_of_Lcd_Write_String 1A4F           __size_of_Lcd_Cmd 001A             ?_Config_USARTT 0070  
              ??__Umul8_16 0075           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0068  
         __size_of___llmod 0056           __size_of___lwdiv 0046           __size_of___lwmod 003A  
              _fround$1177 0053                _fround$1178 004F         __end_of__stringtab 0810  
               sprintf@val 00BF                   ___xxtofl 1D36           __size_of_isdigit 0012  
         __size_of_recibir 000B            ___lwdiv@divisor 0020            ___lwdiv@counter 0026  
                 __ptext10 06B9                   __ptext11 189E                   __ptext20 1858  
                 __ptext12 1B7B                   __ptext21 182F                   __ptext13 1C2A  
                 __ptext30 1988                   __ptext22 19C9                   __ptext14 0779  
                 __ptext31 183A                   __ptext23 1005                   __ptext15 1B2B  
                 __ptext32 1869                   __ptext24 1D36                   __ptext16 126E  
                 __ptext33 1821                   __ptext25 093C                   __ptext17 07F5  
                 __ptext34 1847                   __ptext26 18E9                   __ptext18 1C92  
                 __ptext35 194C                   __ptext27 1A0B                   __ptext19 1ADB  
                 __ptext36 1A4F                   __ptext28 1883                   __ptext29 18C3  
                 __powers_ 0810           __size_of_sprintf F1C3              __size_of_main 0151  
                pnum$text1 000F                   _recibido 00D9                ??_conversor 0048  
               _INTCONbits 000B                   isdigit@c 0074                   scale@scl 0056  
                 intlevel1 0000                  sprintf@ap 00B6           __tdiv_to_l_@exp1 002D  
         __tdiv_to_l_@cntr 002C                  sprintf@sp 00C9           __tdiv_to_l_@quot 0028  
         ___lwmod@dividend 0075           ___lldiv@dividend 0024            ??_Config_USARTT 0073  
                stringcode 080A         Lcd_Set_Cursor@temp 0021               ?__tdiv_to_l_ 0020  
   __Umul8_16@multiplicand 0073                   sprintf@c 00CC                   sprintf@f 00A8  
         ___lldiv@quotient 0074            ___lwmod@divisor 0073            ___lwmod@counter 0078  
                 stringdir 080A                   stringtab 0800              ___fladd@signs 0068  
             ___fladd@aexp 0069               ___fladd@bexp 006A       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  
